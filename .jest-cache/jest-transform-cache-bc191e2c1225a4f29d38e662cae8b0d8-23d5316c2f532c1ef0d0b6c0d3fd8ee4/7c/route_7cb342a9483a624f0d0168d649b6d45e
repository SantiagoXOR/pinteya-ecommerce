b47486a45609905e18b3ed90d9659ed1
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_zjzdeo6qj() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\avatar\\route.ts";
  var hash = "44206bedcbd87e776bb8d81d6ed343abf0392685";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\avatar\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 22
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 18
        },
        end: {
          line: 24,
          column: 66
        }
      },
      "9": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 54
        }
      },
      "10": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 52
        }
      },
      "11": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 24
        }
      },
      "12": {
        start: {
          line: 29,
          column: 20
        },
        end: {
          line: 29,
          column: 56
        }
      },
      "13": {
        start: {
          line: 30,
          column: 27
        },
        end: {
          line: 30,
          column: 64
        }
      },
      "14": {
        start: {
          line: 31,
          column: 24
        },
        end: {
          line: 31,
          column: 86
        }
      },
      "15": {
        start: {
          line: 33,
          column: 22
        },
        end: {
          line: 38,
          column: 1
        }
      },
      "16": {
        start: {
          line: 39,
          column: 22
        },
        end: {
          line: 39,
          column: 37
        }
      },
      "17": {
        start: {
          line: 40,
          column: 22
        },
        end: {
          line: 40,
          column: 31
        }
      },
      "18": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 148,
          column: 5
        }
      },
      "19": {
        start: {
          line: 44,
          column: 24
        },
        end: {
          line: 44,
          column: 49
        }
      },
      "20": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "21": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 51,
          column: 15
        }
      },
      "22": {
        start: {
          line: 53,
          column: 23
        },
        end: {
          line: 53,
          column: 38
        }
      },
      "23": {
        start: {
          line: 55,
          column: 25
        },
        end: {
          line: 55,
          column: 49
        }
      },
      "24": {
        start: {
          line: 56,
          column: 21
        },
        end: {
          line: 56,
          column: 43
        }
      },
      "25": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "26": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 63,
          column: 15
        }
      },
      "27": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "28": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 72,
          column: 15
        }
      },
      "29": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "30": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 81,
          column: 15
        }
      },
      "31": {
        start: {
          line: 84,
          column: 30
        },
        end: {
          line: 84,
          column: 56
        }
      },
      "32": {
        start: {
          line: 85,
          column: 25
        },
        end: {
          line: 85,
          column: 67
        }
      },
      "33": {
        start: {
          line: 86,
          column: 25
        },
        end: {
          line: 86,
          column: 46
        }
      },
      "34": {
        start: {
          line: 88,
          column: 28
        },
        end: {
          line: 88,
          column: 52
        }
      },
      "35": {
        start: {
          line: 89,
          column: 23
        },
        end: {
          line: 89,
          column: 50
        }
      },
      "36": {
        start: {
          line: 91,
          column: 35
        },
        end: {
          line: 91,
          column: 131
        }
      },
      "37": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "38": {
        start: {
          line: 94,
          column: 28
        },
        end: {
          line: 94,
          column: 78
        }
      },
      "39": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 97,
          column: 15
        }
      },
      "40": {
        start: {
          line: 100,
          column: 57
        },
        end: {
          line: 103,
          column: 10
        }
      },
      "41": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "42": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 66
        }
      },
      "43": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 111,
          column: 15
        }
      },
      "44": {
        start: {
          line: 114,
          column: 34
        },
        end: {
          line: 114,
          column: 100
        }
      },
      "45": {
        start: {
          line: 115,
          column: 26
        },
        end: {
          line: 115,
          column: 43
        }
      },
      "46": {
        start: {
          line: 117,
          column: 58
        },
        end: {
          line: 120,
          column: 51
        }
      },
      "47": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "48": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 71
        }
      },
      "49": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 126,
          column: 15
        }
      },
      "50": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 132,
          column: 15
        }
      },
      "51": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 139,
          column: 11
        }
      },
      "52": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 64
        }
      },
      "53": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 147,
          column: 11
        }
      },
      "54": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 219,
          column: 5
        }
      },
      "55": {
        start: {
          line: 153,
          column: 24
        },
        end: {
          line: 153,
          column: 49
        }
      },
      "56": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 161,
          column: 9
        }
      },
      "57": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 160,
          column: 15
        }
      },
      "58": {
        start: {
          line: 162,
          column: 23
        },
        end: {
          line: 162,
          column: 38
        }
      },
      "59": {
        start: {
          line: 164,
          column: 53
        },
        end: {
          line: 164,
          column: 149
        }
      },
      "60": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "61": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 66
        }
      },
      "62": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 172,
          column: 15
        }
      },
      "63": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "64": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 180,
          column: 15
        }
      },
      "65": {
        start: {
          line: 183,
          column: 27
        },
        end: {
          line: 183,
          column: 77
        }
      },
      "66": {
        start: {
          line: 185,
          column: 39
        },
        end: {
          line: 187,
          column: 10
        }
      },
      "67": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 191,
          column: 9
        }
      },
      "68": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 69
        }
      },
      "69": {
        start: {
          line: 193,
          column: 58
        },
        end: {
          line: 196,
          column: 51
        }
      },
      "70": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 205,
          column: 9
        }
      },
      "71": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 71
        }
      },
      "72": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 204,
          column: 15
        }
      },
      "73": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 210,
          column: 11
        }
      },
      "74": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 66
        }
      },
      "75": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 218,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "POST",
        decl: {
          start: {
            line: 41,
            column: 15
          },
          end: {
            line: 41,
            column: 19
          }
        },
        loc: {
          start: {
            line: 41,
            column: 29
          },
          end: {
            line: 149,
            column: 1
          }
        },
        line: 41
      },
      "5": {
        name: "DELETE",
        decl: {
          start: {
            line: 150,
            column: 15
          },
          end: {
            line: 150,
            column: 21
          }
        },
        loc: {
          start: {
            line: 150,
            column: 31
          },
          end: {
            line: 220,
            column: 1
          }
        },
        line: 150
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "1": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "2": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "3": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "4": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "5": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "6": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "7": {
        loc: {
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "8": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "9": {
        loc: {
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "10": {
        loc: {
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "11": {
        loc: {
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\avatar\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API DE AVATAR DE USUARIO\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\n// Configuraci\xF3n de Supabase Storage\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;\r\nconst supabaseStorage = createClient(supabaseUrl, supabaseServiceKey);\r\n\r\n// Configuraci\xF3n de archivos\r\nconst ALLOWED_TYPES = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];\r\nconst MAX_FILE_SIZE = 5 * 1024 * 1024; // 5MB\r\nconst AVATAR_BUCKET = 'avatars';\r\n\r\n// ===================================\r\n// POST - Subir avatar\r\n// ===================================\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'Usuario no autenticado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n\r\n    // Obtener archivo del FormData\r\n    const formData = await request.formData();\r\n    const file = formData.get('avatar') as File;\r\n\r\n    if (!file) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'No se proporcion\xF3 ning\xFAn archivo' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Validar tipo de archivo\r\n    if (!ALLOWED_TYPES.includes(file.type)) {\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'Tipo de archivo no permitido. Solo se permiten im\xE1genes JPG, PNG y WebP.' \r\n        },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Validar tama\xF1o\r\n    if (file.size > MAX_FILE_SIZE) {\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'El archivo es demasiado grande. El tama\xF1o m\xE1ximo es 5MB.' \r\n        },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Generar nombre \xFAnico para el archivo\r\n    const fileExtension = file.name.split('.').pop();\r\n    const fileName = `${userId}-${Date.now()}.${fileExtension}`;\r\n    const filePath = `avatars/${fileName}`;\r\n\r\n    // Convertir archivo a ArrayBuffer\r\n    const arrayBuffer = await file.arrayBuffer();\r\n    const buffer = new Uint8Array(arrayBuffer);\r\n\r\n    // Eliminar avatar anterior si existe\r\n    const { data: userData } = await supabaseAdmin\r\n      .from('users')\r\n      .select('avatar_url')\r\n      .eq('clerk_id', userId)\r\n      .single();\r\n\r\n    if (userData?.avatar_url) {\r\n      // Extraer el path del avatar anterior\r\n      const oldPath = userData.avatar_url.split('/').slice(-2).join('/');\r\n      await supabaseStorage.storage\r\n        .from(AVATAR_BUCKET)\r\n        .remove([oldPath]);\r\n    }\r\n\r\n    // Subir nuevo archivo a Supabase Storage\r\n    const { data: uploadData, error: uploadError } = await supabaseStorage.storage\r\n      .from(AVATAR_BUCKET)\r\n      .upload(filePath, buffer, {\r\n        contentType: file.type,\r\n        upsert: true,\r\n      });\r\n\r\n    if (uploadError) {\r\n      console.error('Error al subir archivo:', uploadError);\r\n      return NextResponse.json(\r\n        { success: false, error: 'Error al subir el archivo' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Obtener URL p\xFAblica del archivo\r\n    const { data: urlData } = supabaseStorage.storage\r\n      .from(AVATAR_BUCKET)\r\n      .getPublicUrl(filePath);\r\n\r\n    const avatarUrl = urlData.publicUrl;\r\n\r\n    // Actualizar URL del avatar en la base de datos\r\n    const { data: updatedUser, error: updateError } = await supabaseAdmin\r\n      .from('users')\r\n      .update({\r\n        avatar_url: avatarUrl,\r\n        updated_at: new Date().toISOString(),\r\n      })\r\n      .eq('clerk_id', userId)\r\n      .select()\r\n      .single();\r\n\r\n    if (updateError) {\r\n      console.error('Error al actualizar usuario:', updateError);\r\n      // Intentar eliminar el archivo subido si falla la actualizaci\xF3n\r\n      await supabaseStorage.storage\r\n        .from(AVATAR_BUCKET)\r\n        .remove([filePath]);\r\n      \r\n      return NextResponse.json(\r\n        { success: false, error: 'Error al actualizar el perfil' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      avatar_url: avatarUrl,\r\n      user: updatedUser,\r\n      message: 'Avatar subido correctamente',\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error en POST /api/user/avatar:', error);\r\n    return NextResponse.json(\r\n      { success: false, error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// ===================================\r\n// DELETE - Eliminar avatar\r\n// ===================================\r\nexport async function DELETE(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'Usuario no autenticado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n\r\n    // Obtener datos del usuario\r\n    const { data: userData, error: userError } = await supabaseAdmin\r\n      .from('users')\r\n      .select('avatar_url')\r\n      .eq('clerk_id', userId)\r\n      .single();\r\n\r\n    if (userError) {\r\n      console.error('Error al obtener usuario:', userError);\r\n      return NextResponse.json(\r\n        { success: false, error: 'Error al obtener datos del usuario' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    if (!userData?.avatar_url) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'No hay avatar para eliminar' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Extraer el path del archivo del avatar\r\n    const avatarPath = userData.avatar_url.split('/').slice(-2).join('/');\r\n\r\n    // Eliminar archivo de Supabase Storage\r\n    const { error: deleteError } = await supabaseStorage.storage\r\n      .from(AVATAR_BUCKET)\r\n      .remove([avatarPath]);\r\n\r\n    if (deleteError) {\r\n      console.error('Error al eliminar archivo:', deleteError);\r\n      // Continuar con la actualizaci\xF3n de la base de datos aunque falle la eliminaci\xF3n del archivo\r\n    }\r\n\r\n    // Actualizar base de datos para remover la URL del avatar\r\n    const { data: updatedUser, error: updateError } = await supabaseAdmin\r\n      .from('users')\r\n      .update({\r\n        avatar_url: null,\r\n        updated_at: new Date().toISOString(),\r\n      })\r\n      .eq('clerk_id', userId)\r\n      .select()\r\n      .single();\r\n\r\n    if (updateError) {\r\n      console.error('Error al actualizar usuario:', updateError);\r\n      return NextResponse.json(\r\n        { success: false, error: 'Error al actualizar el perfil' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      user: updatedUser,\r\n      message: 'Avatar eliminado correctamente',\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error en DELETE /api/user/avatar:', error);\r\n    return NextResponse.json(\r\n      { success: false, error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["DELETE", "POST", "runtime", "supabaseUrl", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "supabaseServiceKey", "SUPABASE_SERVICE_ROLE_KEY", "supabaseStorage", "createClient", "ALLOWED_TYPES", "MAX_FILE_SIZE", "AVATAR_BUCKET", "request", "session", "auth", "user", "NextResponse", "json", "success", "error", "status", "userId", "id", "formData", "file", "get", "includes", "type", "size", "fileExtension", "name", "split", "pop", "fileName", "Date", "now", "filePath", "arrayBuffer", "buffer", "Uint8Array", "data", "userData", "supabaseAdmin", "from", "select", "eq", "single", "avatar_url", "oldPath", "slice", "join", "storage", "remove", "uploadData", "uploadError", "upload", "contentType", "upsert", "console", "urlData", "getPublicUrl", "avatarUrl", "publicUrl", "updatedUser", "updateError", "update", "updated_at", "toISOString", "message", "userError", "avatarPath", "deleteError"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "44206bedcbd87e776bb8d81d6ed343abf0392685"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_zjzdeo6qj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_zjzdeo6qj();
cov_zjzdeo6qj().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_zjzdeo6qj().f[0]++;
  cov_zjzdeo6qj().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_zjzdeo6qj().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_zjzdeo6qj().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_zjzdeo6qj().f[1]++;
    cov_zjzdeo6qj().s[4]++;
    return DELETE;
  },
  get POST() {
    /* istanbul ignore next */
    cov_zjzdeo6qj().f[2]++;
    cov_zjzdeo6qj().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_zjzdeo6qj().f[3]++;
    cov_zjzdeo6qj().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_zjzdeo6qj().s[7]++, require("next/server"));
const _supabase =
/* istanbul ignore next */
(cov_zjzdeo6qj().s[8]++, require("../../../../lib/integrations/supabase"));
const _config =
/* istanbul ignore next */
(cov_zjzdeo6qj().s[9]++, require("../../../../lib/auth/config"));
const _supabasejs =
/* istanbul ignore next */
(cov_zjzdeo6qj().s[10]++, require("@supabase/supabase-js"));
const runtime =
/* istanbul ignore next */
(cov_zjzdeo6qj().s[11]++, 'nodejs');
// ConfiguraciÃ³n de Supabase Storage
const supabaseUrl =
/* istanbul ignore next */
(cov_zjzdeo6qj().s[12]++, process.env.NEXT_PUBLIC_SUPABASE_URL);
const supabaseServiceKey =
/* istanbul ignore next */
(cov_zjzdeo6qj().s[13]++, process.env.SUPABASE_SERVICE_ROLE_KEY);
const supabaseStorage =
/* istanbul ignore next */
(cov_zjzdeo6qj().s[14]++, (0, _supabasejs.createClient)(supabaseUrl, supabaseServiceKey));
// ConfiguraciÃ³n de archivos
const ALLOWED_TYPES =
/* istanbul ignore next */
(cov_zjzdeo6qj().s[15]++, ['image/jpeg', 'image/jpg', 'image/png', 'image/webp']);
const MAX_FILE_SIZE =
/* istanbul ignore next */
(cov_zjzdeo6qj().s[16]++, 5 * 1024 * 1024); // 5MB
const AVATAR_BUCKET =
/* istanbul ignore next */
(cov_zjzdeo6qj().s[17]++, 'avatars');
async function POST(request) {
  /* istanbul ignore next */
  cov_zjzdeo6qj().f[4]++;
  cov_zjzdeo6qj().s[18]++;
  try {
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_zjzdeo6qj().s[19]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_zjzdeo6qj().s[20]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_zjzdeo6qj().b[0][0]++;
      cov_zjzdeo6qj().s[21]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Usuario no autenticado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_zjzdeo6qj().b[0][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_zjzdeo6qj().s[22]++, session.user.id);
    // Obtener archivo del FormData
    const formData =
    /* istanbul ignore next */
    (cov_zjzdeo6qj().s[23]++, await request.formData());
    const file =
    /* istanbul ignore next */
    (cov_zjzdeo6qj().s[24]++, formData.get('avatar'));
    /* istanbul ignore next */
    cov_zjzdeo6qj().s[25]++;
    if (!file) {
      /* istanbul ignore next */
      cov_zjzdeo6qj().b[1][0]++;
      cov_zjzdeo6qj().s[26]++;
      return _server.NextResponse.json({
        success: false,
        error: 'No se proporcionÃ³ ningÃºn archivo'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_zjzdeo6qj().b[1][1]++;
    }
    // Validar tipo de archivo
    cov_zjzdeo6qj().s[27]++;
    if (!ALLOWED_TYPES.includes(file.type)) {
      /* istanbul ignore next */
      cov_zjzdeo6qj().b[2][0]++;
      cov_zjzdeo6qj().s[28]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Tipo de archivo no permitido. Solo se permiten imÃ¡genes JPG, PNG y WebP.'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_zjzdeo6qj().b[2][1]++;
    }
    // Validar tamaÃ±o
    cov_zjzdeo6qj().s[29]++;
    if (file.size > MAX_FILE_SIZE) {
      /* istanbul ignore next */
      cov_zjzdeo6qj().b[3][0]++;
      cov_zjzdeo6qj().s[30]++;
      return _server.NextResponse.json({
        success: false,
        error: 'El archivo es demasiado grande. El tamaÃ±o mÃ¡ximo es 5MB.'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_zjzdeo6qj().b[3][1]++;
    }
    // Generar nombre Ãºnico para el archivo
    const fileExtension =
    /* istanbul ignore next */
    (cov_zjzdeo6qj().s[31]++, file.name.split('.').pop());
    const fileName =
    /* istanbul ignore next */
    (cov_zjzdeo6qj().s[32]++, `${userId}-${Date.now()}.${fileExtension}`);
    const filePath =
    /* istanbul ignore next */
    (cov_zjzdeo6qj().s[33]++, `avatars/${fileName}`);
    // Convertir archivo a ArrayBuffer
    const arrayBuffer =
    /* istanbul ignore next */
    (cov_zjzdeo6qj().s[34]++, await file.arrayBuffer());
    const buffer =
    /* istanbul ignore next */
    (cov_zjzdeo6qj().s[35]++, new Uint8Array(arrayBuffer));
    // Eliminar avatar anterior si existe
    const {
      data: userData
    } =
    /* istanbul ignore next */
    (cov_zjzdeo6qj().s[36]++, await _supabase.supabaseAdmin.from('users').select('avatar_url').eq('clerk_id', userId).single());
    /* istanbul ignore next */
    cov_zjzdeo6qj().s[37]++;
    if (userData?.avatar_url) {
      /* istanbul ignore next */
      cov_zjzdeo6qj().b[4][0]++;
      // Extraer el path del avatar anterior
      const oldPath =
      /* istanbul ignore next */
      (cov_zjzdeo6qj().s[38]++, userData.avatar_url.split('/').slice(-2).join('/'));
      /* istanbul ignore next */
      cov_zjzdeo6qj().s[39]++;
      await supabaseStorage.storage.from(AVATAR_BUCKET).remove([oldPath]);
    } else
    /* istanbul ignore next */
    {
      cov_zjzdeo6qj().b[4][1]++;
    }
    // Subir nuevo archivo a Supabase Storage
    const {
      data: uploadData,
      error: uploadError
    } =
    /* istanbul ignore next */
    (cov_zjzdeo6qj().s[40]++, await supabaseStorage.storage.from(AVATAR_BUCKET).upload(filePath, buffer, {
      contentType: file.type,
      upsert: true
    }));
    /* istanbul ignore next */
    cov_zjzdeo6qj().s[41]++;
    if (uploadError) {
      /* istanbul ignore next */
      cov_zjzdeo6qj().b[5][0]++;
      cov_zjzdeo6qj().s[42]++;
      console.error('Error al subir archivo:', uploadError);
      /* istanbul ignore next */
      cov_zjzdeo6qj().s[43]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Error al subir el archivo'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_zjzdeo6qj().b[5][1]++;
    }
    // Obtener URL pÃºblica del archivo
    const {
      data: urlData
    } =
    /* istanbul ignore next */
    (cov_zjzdeo6qj().s[44]++, supabaseStorage.storage.from(AVATAR_BUCKET).getPublicUrl(filePath));
    const avatarUrl =
    /* istanbul ignore next */
    (cov_zjzdeo6qj().s[45]++, urlData.publicUrl);
    // Actualizar URL del avatar en la base de datos
    const {
      data: updatedUser,
      error: updateError
    } =
    /* istanbul ignore next */
    (cov_zjzdeo6qj().s[46]++, await _supabase.supabaseAdmin.from('users').update({
      avatar_url: avatarUrl,
      updated_at: new Date().toISOString()
    }).eq('clerk_id', userId).select().single());
    /* istanbul ignore next */
    cov_zjzdeo6qj().s[47]++;
    if (updateError) {
      /* istanbul ignore next */
      cov_zjzdeo6qj().b[6][0]++;
      cov_zjzdeo6qj().s[48]++;
      console.error('Error al actualizar usuario:', updateError);
      // Intentar eliminar el archivo subido si falla la actualizaciÃ³n
      /* istanbul ignore next */
      cov_zjzdeo6qj().s[49]++;
      await supabaseStorage.storage.from(AVATAR_BUCKET).remove([filePath]);
      /* istanbul ignore next */
      cov_zjzdeo6qj().s[50]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Error al actualizar el perfil'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_zjzdeo6qj().b[6][1]++;
    }
    cov_zjzdeo6qj().s[51]++;
    return _server.NextResponse.json({
      success: true,
      avatar_url: avatarUrl,
      user: updatedUser,
      message: 'Avatar subido correctamente'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_zjzdeo6qj().s[52]++;
    console.error('Error en POST /api/user/avatar:', error);
    /* istanbul ignore next */
    cov_zjzdeo6qj().s[53]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function DELETE(request) {
  /* istanbul ignore next */
  cov_zjzdeo6qj().f[5]++;
  cov_zjzdeo6qj().s[54]++;
  try {
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_zjzdeo6qj().s[55]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_zjzdeo6qj().s[56]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_zjzdeo6qj().b[7][0]++;
      cov_zjzdeo6qj().s[57]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Usuario no autenticado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_zjzdeo6qj().b[7][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_zjzdeo6qj().s[58]++, session.user.id);
    // Obtener datos del usuario
    const {
      data: userData,
      error: userError
    } =
    /* istanbul ignore next */
    (cov_zjzdeo6qj().s[59]++, await _supabase.supabaseAdmin.from('users').select('avatar_url').eq('clerk_id', userId).single());
    /* istanbul ignore next */
    cov_zjzdeo6qj().s[60]++;
    if (userError) {
      /* istanbul ignore next */
      cov_zjzdeo6qj().b[8][0]++;
      cov_zjzdeo6qj().s[61]++;
      console.error('Error al obtener usuario:', userError);
      /* istanbul ignore next */
      cov_zjzdeo6qj().s[62]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Error al obtener datos del usuario'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_zjzdeo6qj().b[8][1]++;
    }
    cov_zjzdeo6qj().s[63]++;
    if (!userData?.avatar_url) {
      /* istanbul ignore next */
      cov_zjzdeo6qj().b[9][0]++;
      cov_zjzdeo6qj().s[64]++;
      return _server.NextResponse.json({
        success: false,
        error: 'No hay avatar para eliminar'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_zjzdeo6qj().b[9][1]++;
    }
    // Extraer el path del archivo del avatar
    const avatarPath =
    /* istanbul ignore next */
    (cov_zjzdeo6qj().s[65]++, userData.avatar_url.split('/').slice(-2).join('/'));
    // Eliminar archivo de Supabase Storage
    const {
      error: deleteError
    } =
    /* istanbul ignore next */
    (cov_zjzdeo6qj().s[66]++, await supabaseStorage.storage.from(AVATAR_BUCKET).remove([avatarPath]));
    /* istanbul ignore next */
    cov_zjzdeo6qj().s[67]++;
    if (deleteError) {
      /* istanbul ignore next */
      cov_zjzdeo6qj().b[10][0]++;
      cov_zjzdeo6qj().s[68]++;
      console.error('Error al eliminar archivo:', deleteError);
      // Continuar con la actualizaciÃ³n de la base de datos aunque falle la eliminaciÃ³n del archivo
    } else
    /* istanbul ignore next */
    {
      cov_zjzdeo6qj().b[10][1]++;
    }
    // Actualizar base de datos para remover la URL del avatar
    const {
      data: updatedUser,
      error: updateError
    } =
    /* istanbul ignore next */
    (cov_zjzdeo6qj().s[69]++, await _supabase.supabaseAdmin.from('users').update({
      avatar_url: null,
      updated_at: new Date().toISOString()
    }).eq('clerk_id', userId).select().single());
    /* istanbul ignore next */
    cov_zjzdeo6qj().s[70]++;
    if (updateError) {
      /* istanbul ignore next */
      cov_zjzdeo6qj().b[11][0]++;
      cov_zjzdeo6qj().s[71]++;
      console.error('Error al actualizar usuario:', updateError);
      /* istanbul ignore next */
      cov_zjzdeo6qj().s[72]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Error al actualizar el perfil'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_zjzdeo6qj().b[11][1]++;
    }
    cov_zjzdeo6qj().s[73]++;
    return _server.NextResponse.json({
      success: true,
      user: updatedUser,
      message: 'Avatar eliminado correctamente'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_zjzdeo6qj().s[74]++;
    console.error('Error en DELETE /api/user/avatar:', error);
    /* istanbul ignore next */
    cov_zjzdeo6qj().s[75]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,