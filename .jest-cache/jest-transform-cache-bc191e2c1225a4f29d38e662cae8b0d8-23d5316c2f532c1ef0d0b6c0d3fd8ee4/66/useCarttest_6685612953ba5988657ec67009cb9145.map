{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\__tests__\\hooks\\useCart.test.tsx"],"sourcesContent":["// ===================================\r\n// TESTS PARA HOOK DEL CARRITO\r\n// Tests unitarios para useCart con Redux\r\n// ===================================\r\n\r\nimport { renderHook, act } from '@testing-library/react';\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { useCart } from '@/hooks/useCart';\r\nimport cartReducer from '@/redux/features/cart-slice';\r\nimport React from 'react';\r\n\r\n// Wrapper para Redux\r\nconst createWrapper = () => {\r\n  const store = configureStore({\r\n    reducer: {\r\n      cartReducer,\r\n    },\r\n  });\r\n  \r\n  return ({ children }: { children: React.ReactNode }) => (\r\n    <Provider store={store}>{children}</Provider>\r\n  );\r\n};\r\n\r\n// Datos de prueba\r\nconst mockCartItem = {\r\n  id: 1,\r\n  title: 'Producto Test',\r\n  price: 100,\r\n  discountedPrice: 100,\r\n  quantity: 1,\r\n  imgs: {\r\n    thumbnails: ['https://example.com/thumb.jpg'],\r\n    previews: ['https://example.com/preview.jpg']\r\n  }\r\n};\r\n\r\nconst mockCartItem2 = {\r\n  id: 2,\r\n  title: 'Producto Test 2',\r\n  price: 200,\r\n  discountedPrice: 200,\r\n  quantity: 1,\r\n  imgs: {\r\n    thumbnails: ['https://example.com/thumb2.jpg'],\r\n    previews: ['https://example.com/preview2.jpg']\r\n  }\r\n};\r\n\r\ndescribe('useCart Hook', () => {\r\n  describe('Inicialización del Carrito', () => {\r\n    it('debe inicializar con carrito vacío', () => {\r\n      const { result } = renderHook(() => useCart(), {\r\n        wrapper: createWrapper()\r\n      });\r\n\r\n      expect(result.current.cartItems).toEqual([]);\r\n      expect(result.current.cartCount).toBe(0);\r\n      expect(result.current.totalPrice).toBe(0);\r\n      expect(result.current.totalQuantity).toBe(0);\r\n    });\r\n  });\r\n\r\n  describe('Agregar Productos', () => {\r\n    it('debe agregar un producto nuevo al carrito', () => {\r\n      const { result } = renderHook(() => useCart(), {\r\n        wrapper: createWrapper()\r\n      });\r\n\r\n      act(() => {\r\n        result.current.addToCart(mockCartItem);\r\n      });\r\n\r\n      expect(result.current.cartItems).toHaveLength(1);\r\n      expect(result.current.cartItems[0]).toEqual(mockCartItem);\r\n      expect(result.current.cartCount).toBe(1);\r\n      expect(result.current.totalPrice).toBe(100);\r\n      expect(result.current.totalQuantity).toBe(1);\r\n    });\r\n\r\n    it('debe incrementar cantidad si el producto ya existe', () => {\r\n      const { result } = renderHook(() => useCart(), {\r\n        wrapper: createWrapper()\r\n      });\r\n\r\n      act(() => {\r\n        result.current.addToCart(mockCartItem);\r\n      });\r\n\r\n      act(() => {\r\n        result.current.addToCart(mockCartItem);\r\n      });\r\n\r\n      expect(result.current.cartItems).toHaveLength(1);\r\n      expect(result.current.cartItems[0].quantity).toBe(2);\r\n      expect(result.current.cartCount).toBe(1);\r\n      expect(result.current.totalQuantity).toBe(2);\r\n      expect(result.current.totalPrice).toBe(200);\r\n    });\r\n\r\n    it('debe agregar múltiples productos diferentes', () => {\r\n      const { result } = renderHook(() => useCart(), {\r\n        wrapper: createWrapper()\r\n      });\r\n\r\n      act(() => {\r\n        result.current.addToCart(mockCartItem);\r\n      });\r\n\r\n      act(() => {\r\n        result.current.addToCart(mockCartItem2);\r\n      });\r\n\r\n      expect(result.current.cartItems).toHaveLength(2);\r\n      expect(result.current.cartCount).toBe(2);\r\n      expect(result.current.totalQuantity).toBe(2);\r\n      expect(result.current.totalPrice).toBe(300);\r\n    });\r\n  });\r\n\r\n  describe('Remover Productos', () => {\r\n    it('debe remover un producto del carrito', () => {\r\n      const { result } = renderHook(() => useCart(), {\r\n        wrapper: createWrapper()\r\n      });\r\n\r\n      // Agregar producto primero\r\n      act(() => {\r\n        result.current.addToCart(mockCartItem);\r\n      });\r\n\r\n      // Remover producto\r\n      act(() => {\r\n        result.current.removeFromCart(mockCartItem.id);\r\n      });\r\n\r\n      expect(result.current.cartItems).toHaveLength(0);\r\n      expect(result.current.cartCount).toBe(0);\r\n      expect(result.current.totalPrice).toBe(0);\r\n      expect(result.current.totalQuantity).toBe(0);\r\n    });\r\n\r\n    it('debe remover solo el producto especificado', () => {\r\n      const { result } = renderHook(() => useCart(), {\r\n        wrapper: createWrapper()\r\n      });\r\n\r\n      // Agregar dos productos\r\n      act(() => {\r\n        result.current.addToCart(mockCartItem);\r\n        result.current.addToCart(mockCartItem2);\r\n      });\r\n\r\n      // Remover solo el primero\r\n      act(() => {\r\n        result.current.removeFromCart(mockCartItem.id);\r\n      });\r\n\r\n      expect(result.current.cartItems).toHaveLength(1);\r\n      expect(result.current.cartItems[0].id).toBe(mockCartItem2.id);\r\n      expect(result.current.totalPrice).toBe(200);\r\n    });\r\n  });\r\n\r\n  describe('Actualizar Cantidad', () => {\r\n    it('debe actualizar la cantidad de un producto', () => {\r\n      const { result } = renderHook(() => useCart(), {\r\n        wrapper: createWrapper()\r\n      });\r\n\r\n      // Agregar producto\r\n      act(() => {\r\n        result.current.addToCart(mockCartItem);\r\n      });\r\n\r\n      // Actualizar cantidad\r\n      act(() => {\r\n        result.current.updateQuantity(mockCartItem.id, 3);\r\n      });\r\n\r\n      expect(result.current.cartItems[0].quantity).toBe(3);\r\n      expect(result.current.totalQuantity).toBe(3);\r\n      expect(result.current.totalPrice).toBe(300);\r\n    });\r\n\r\n    it('debe remover el producto si la cantidad es 0', () => {\r\n      const { result } = renderHook(() => useCart(), {\r\n        wrapper: createWrapper()\r\n      });\r\n\r\n      // Agregar producto\r\n      act(() => {\r\n        result.current.addToCart(mockCartItem);\r\n      });\r\n\r\n      // Actualizar cantidad a 0\r\n      act(() => {\r\n        result.current.updateQuantity(mockCartItem.id, 0);\r\n      });\r\n\r\n      expect(result.current.cartItems).toHaveLength(0);\r\n      expect(result.current.totalPrice).toBe(0);\r\n    });\r\n  });\r\n\r\n  describe('Limpiar Carrito', () => {\r\n    it('debe limpiar todo el carrito', () => {\r\n      const { result } = renderHook(() => useCart(), {\r\n        wrapper: createWrapper()\r\n      });\r\n\r\n      // Agregar productos\r\n      act(() => {\r\n        result.current.addToCart(mockCartItem);\r\n        result.current.addToCart(mockCartItem2);\r\n      });\r\n\r\n      // Limpiar carrito\r\n      act(() => {\r\n        result.current.clearCart();\r\n      });\r\n\r\n      expect(result.current.cartItems).toHaveLength(0);\r\n      expect(result.current.cartCount).toBe(0);\r\n      expect(result.current.totalPrice).toBe(0);\r\n      expect(result.current.totalQuantity).toBe(0);\r\n    });\r\n  });\r\n\r\n  describe('Cálculos del Carrito', () => {\r\n    it('debe calcular correctamente el precio total', () => {\r\n      const { result } = renderHook(() => useCart(), {\r\n        wrapper: createWrapper()\r\n      });\r\n\r\n      act(() => {\r\n        result.current.addToCart(mockCartItem);\r\n        result.current.addToCart(mockCartItem2);\r\n        result.current.updateQuantity(mockCartItem.id, 2);\r\n      });\r\n\r\n      expect(result.current.totalPrice).toBe(400); // (100 * 2) + (200 * 1)\r\n      expect(result.current.totalQuantity).toBe(3); // 2 + 1\r\n      expect(result.current.cartCount).toBe(2); // 2 productos únicos\r\n    });\r\n\r\n    it('debe manejar productos con precio 0', () => {\r\n      const freeItem = { ...mockCartItem, price: 0 };\r\n      const { result } = renderHook(() => useCart(), {\r\n        wrapper: createWrapper()\r\n      });\r\n\r\n      act(() => {\r\n        result.current.addToCart(freeItem);\r\n      });\r\n\r\n      expect(result.current.totalPrice).toBe(0);\r\n      expect(result.current.cartItems).toHaveLength(1);\r\n    });\r\n  });\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["createWrapper","store","configureStore","reducer","cartReducer","children","Provider","mockCartItem","id","title","price","discountedPrice","quantity","imgs","thumbnails","previews","mockCartItem2","describe","it","result","renderHook","useCart","wrapper","expect","current","cartItems","toEqual","cartCount","toBe","totalPrice","totalQuantity","act","addToCart","toHaveLength","removeFromCart","updateQuantity","clearCart","freeItem"],"mappings":"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"}