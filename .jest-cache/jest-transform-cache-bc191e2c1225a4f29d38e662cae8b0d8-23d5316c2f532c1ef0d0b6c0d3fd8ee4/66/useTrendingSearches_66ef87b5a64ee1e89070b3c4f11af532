a813b2a24812950b10304e9051d9d2d7
// ===================================
// HOOK: useTrendingSearches - BÃºsquedas populares/trending
// ===================================
"use strict";

/* istanbul ignore next */
function cov_fdwkozdgr() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useTrendingSearches.ts";
  var hash = "f27d39eb1ac434762516b9d1aa2097ff42fc7ffc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useTrendingSearches.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 27,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 35
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 45
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 41
        }
      },
      "8": {
        start: {
          line: 28,
          column: 20
        },
        end: {
          line: 28,
          column: 52
        }
      },
      "9": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 51
        }
      },
      "10": {
        start: {
          line: 31,
          column: 95
        },
        end: {
          line: 31,
          column: 102
        }
      },
      "11": {
        start: {
          line: 33,
          column: 57
        },
        end: {
          line: 88,
          column: 6
        }
      },
      "12": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 49,
          column: 15
        }
      },
      "13": {
        start: {
          line: 50,
          column: 27
        },
        end: {
          line: 50,
          column: 48
        }
      },
      "14": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 50
        }
      },
      "15": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 48
        }
      },
      "16": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "17": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 49
        }
      },
      "18": {
        start: {
          line: 56,
          column: 24
        },
        end: {
          line: 56,
          column: 67
        }
      },
      "19": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 72
        }
      },
      "20": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 80,
          column: 13
        }
      },
      "21": {
        start: {
          line: 59,
          column: 33
        },
        end: {
          line: 59,
          column: 49
        }
      },
      "22": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 89
        }
      },
      "23": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 64,
          column: 17
        }
      },
      "24": {
        start: {
          line: 62,
          column: 20
        },
        end: {
          line: 62,
          column: 116
        }
      },
      "25": {
        start: {
          line: 63,
          column: 20
        },
        end: {
          line: 63,
          column: 92
        }
      },
      "26": {
        start: {
          line: 65,
          column: 31
        },
        end: {
          line: 65,
          column: 52
        }
      },
      "27": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 81
        }
      },
      "28": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 70,
          column: 17
        }
      },
      "29": {
        start: {
          line: 68,
          column: 20
        },
        end: {
          line: 68,
          column: 95
        }
      },
      "30": {
        start: {
          line: 69,
          column: 20
        },
        end: {
          line: 69,
          column: 91
        }
      },
      "31": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 75,
          column: 19
        }
      },
      "32": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 35
        }
      },
      "33": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 78,
          column: 82
        }
      },
      "34": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 33
        }
      },
      "35": {
        start: {
          line: 87,
          column: 36
        },
        end: {
          line: 87,
          column: 77
        }
      },
      "36": {
        start: {
          line: 90,
          column: 24
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "37": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "38": {
        start: {
          line: 92,
          column: 29
        },
        end: {
          line: 103,
          column: 14
        }
      },
      "39": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 106,
          column: 21
        }
      },
      "40": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 105,
          column: 75
        }
      },
      "41": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 61
        }
      },
      "42": {
        start: {
          line: 112,
          column: 19
        },
        end: {
          line: 120,
          column: 5
        }
      },
      "43": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 128,
          column: 7
        }
      },
      "44": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 129,
          column: 18
        }
      },
      "45": {
        start: {
          line: 132,
          column: 33
        },
        end: {
          line: 134,
          column: 6
        }
      },
      "46": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 135,
          column: 28
        }
      },
      "47": {
        start: {
          line: 138,
          column: 33
        },
        end: {
          line: 142,
          column: 6
        }
      },
      "48": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 143,
          column: 28
        }
      },
      "49": {
        start: {
          line: 145,
          column: 17
        },
        end: {
          line: 145,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 19
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 31
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 41
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 37
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "useTrendingSearches",
        decl: {
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 30,
            column: 28
          }
        },
        loc: {
          start: {
            line: 30,
            column: 43
          },
          end: {
            line: 130,
            column: 1
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 43,
            column: 17
          },
          end: {
            line: 43,
            column: 18
          }
        },
        loc: {
          start: {
            line: 43,
            column: 27
          },
          end: {
            line: 81,
            column: 9
          }
        },
        line: 43
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 87,
            column: 20
          },
          end: {
            line: 87,
            column: 21
          }
        },
        loc: {
          start: {
            line: 87,
            column: 36
          },
          end: {
            line: 87,
            column: 77
          }
        },
        line: 87
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 90,
            column: 24
          },
          end: {
            line: 90,
            column: 25
          }
        },
        loc: {
          start: {
            line: 90,
            column: 55
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 90
      },
      "9": {
        name: "useTrendingSearchesSimple",
        decl: {
          start: {
            line: 131,
            column: 9
          },
          end: {
            line: 131,
            column: 34
          }
        },
        loc: {
          start: {
            line: 131,
            column: 46
          },
          end: {
            line: 136,
            column: 1
          }
        },
        line: 131
      },
      "10": {
        name: "useTrendingSearchesByCategory",
        decl: {
          start: {
            line: 137,
            column: 9
          },
          end: {
            line: 137,
            column: 38
          }
        },
        loc: {
          start: {
            line: 137,
            column: 60
          },
          end: {
            line: 144,
            column: 1
          }
        },
        line: 137
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 29
          },
          end: {
            line: 30,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 30,
            column: 39
          },
          end: {
            line: 30,
            column: 41
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 31,
            column: 21
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 20
          },
          end: {
            line: 31,
            column: 21
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 23
          },
          end: {
            line: 31,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 30
          },
          end: {
            line: 31,
            column: 31
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 31,
            column: 43
          },
          end: {
            line: 31,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 53
          },
          end: {
            line: 31,
            column: 57
          }
        }],
        line: 31
      },
      "4": {
        loc: {
          start: {
            line: 31,
            column: 59
          },
          end: {
            line: 31,
            column: 90
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 77
          },
          end: {
            line: 31,
            column: 90
          }
        }],
        line: 31
      },
      "5": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "6": {
        loc: {
          start: {
            line: 61,
            column: 16
          },
          end: {
            line: 64,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 16
          },
          end: {
            line: 64,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "7": {
        loc: {
          start: {
            line: 67,
            column: 16
          },
          end: {
            line: 70,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 16
          },
          end: {
            line: 70,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "8": {
        loc: {
          start: {
            line: 67,
            column: 20
          },
          end: {
            line: 67,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 20
          },
          end: {
            line: 67,
            column: 35
          }
        }, {
          start: {
            line: 67,
            column: 39
          },
          end: {
            line: 67,
            column: 51
          }
        }],
        line: 67
      },
      "9": {
        loc: {
          start: {
            line: 69,
            column: 36
          },
          end: {
            line: 69,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 36
          },
          end: {
            line: 69,
            column: 48
          }
        }, {
          start: {
            line: 69,
            column: 52
          },
          end: {
            line: 69,
            column: 89
          }
        }],
        line: 69
      },
      "10": {
        loc: {
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 106,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 106,
            column: 21
          }
        }, {
          start: {
            line: 106,
            column: 19
          },
          end: {
            line: 106,
            column: 21
          }
        }],
        line: 104
      },
      "11": {
        loc: {
          start: {
            line: 113,
            column: 26
          },
          end: {
            line: 113,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 26
          },
          end: {
            line: 113,
            column: 40
          }
        }, {
          start: {
            line: 113,
            column: 44
          },
          end: {
            line: 113,
            column: 46
          }
        }],
        line: 113
      },
      "12": {
        loc: {
          start: {
            line: 118,
            column: 21
          },
          end: {
            line: 118,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 21
          },
          end: {
            line: 118,
            column: 38
          }
        }, {
          start: {
            line: 118,
            column: 42
          },
          end: {
            line: 118,
            column: 46
          }
        }],
        line: 118
      },
      "13": {
        loc: {
          start: {
            line: 131,
            column: 35
          },
          end: {
            line: 131,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 131,
            column: 43
          },
          end: {
            line: 131,
            column: 44
          }
        }],
        line: 131
      },
      "14": {
        loc: {
          start: {
            line: 137,
            column: 49
          },
          end: {
            line: 137,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 137,
            column: 57
          },
          end: {
            line: 137,
            column: 58
          }
        }],
        line: 137
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0],
      "14": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useTrendingSearches.ts"],
      sourcesContent: ["// ===================================\r\n// HOOK: useTrendingSearches - B\xFAsquedas populares/trending\r\n// ===================================\r\n\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { searchQueryKeys } from '@/lib/query-client';\r\nimport { TrendingSearch, TrendingSearchesResponse } from '@/app/api/search/trending/route';\r\nimport { ApiResponse } from '@/types/api';\r\n\r\nexport interface UseTrendingSearchesOptions {\r\n  /** N\xFAmero m\xE1ximo de b\xFAsquedas trending a obtener */\r\n  limit?: number;\r\n  /** N\xFAmero de d\xEDas hacia atr\xE1s para calcular trending */\r\n  days?: number;\r\n  /** Filtrar por categor\xEDa espec\xEDfica */\r\n  category?: string;\r\n  /** Habilitar/deshabilitar la query */\r\n  enabled?: boolean;\r\n  /** Intervalo de refetch en milisegundos */\r\n  refetchInterval?: number;\r\n}\r\n\r\nexport interface UseTrendingSearchesReturn {\r\n  /** B\xFAsquedas trending */\r\n  trendingSearches: TrendingSearch[];\r\n  /** Indica si est\xE1 cargando */\r\n  isLoading: boolean;\r\n  /** Indica si hay un error */\r\n  error: Error | null;\r\n  /** Funci\xF3n para refrescar los datos */\r\n  refetch: () => void;\r\n  /** Indica si los datos est\xE1n obsoletos */\r\n  isStale: boolean;\r\n  /** Timestamp de la \xFAltima actualizaci\xF3n */\r\n  lastUpdated: string | null;\r\n  /** Funci\xF3n para registrar una b\xFAsqueda */\r\n  trackSearch: (query: string, category?: string) => Promise<void>;\r\n}\r\n\r\n/**\r\n * Hook para obtener b\xFAsquedas trending/populares\r\n * \r\n * Obtiene las b\xFAsquedas m\xE1s populares basadas en datos reales del sistema\r\n * de analytics, con fallback a datos por defecto.\r\n */\r\nexport function useTrendingSearches(options: UseTrendingSearchesOptions = {}): UseTrendingSearchesReturn {\r\n  const {\r\n    limit = 6,\r\n    days = 7,\r\n    category,\r\n    enabled = true,\r\n    refetchInterval = 5 * 60 * 1000, // 5 minutos\r\n  } = options;\r\n\r\n  // Query para obtener b\xFAsquedas trending\r\n  const {\r\n    data,\r\n    isLoading,\r\n    error,\r\n    refetch,\r\n    isStale,\r\n  } = useQuery({\r\n    queryKey: [...searchQueryKeys.trending(), 'params', { limit, days, category }],\r\n    queryFn: async (): Promise<TrendingSearchesResponse> => {\r\n      console.log('\uD83D\uDD25 useTrendingSearches: Iniciando fetch de trending searches', {\r\n        limit,\r\n        days,\r\n        category,\r\n        enabled\r\n      });\r\n\r\n      const params = new URLSearchParams();\r\n      params.set('limit', limit.toString());\r\n      params.set('days', days.toString());\r\n      \r\n      if (category) {\r\n        params.set('category', category);\r\n      }\r\n\r\n      const url = `/api/search/trending?${params.toString()}`;\r\n      console.log('\uD83D\uDD25 useTrendingSearches: URL construida:', url);\r\n\r\n      try {\r\n        const response = await fetch(url);\r\n        console.log('\uD83D\uDD25 useTrendingSearches: Response status:', response.status);\r\n        \r\n        if (!response.ok) {\r\n          console.error('\uD83D\uDD25 useTrendingSearches: Response not OK:', response.status, response.statusText);\r\n          throw new Error(`Error fetching trending searches: ${response.status}`);\r\n        }\r\n\r\n        const result: ApiResponse<TrendingSearchesResponse> = await response.json();\r\n        console.log('\uD83D\uDD25 useTrendingSearches: Raw API response:', result);\r\n        \r\n        if (!result.success || !result.data) {\r\n          console.error('\uD83D\uDD25 useTrendingSearches: API response error:', result.error);\r\n          throw new Error(result.error || 'Error obteniendo b\xFAsquedas trending');\r\n        }\r\n\r\n        console.log('\u2705 useTrendingSearches: Trending searches fetched successfully', {\r\n          count: result.data.trending.length,\r\n          lastUpdated: result.data.lastUpdated,\r\n          data: result.data.trending\r\n        });\r\n\r\n        return result.data;\r\n      } catch (fetchError) {\r\n        console.error('\uD83D\uDD25 useTrendingSearches: Fetch error:', fetchError);\r\n        throw fetchError;\r\n      }\r\n    },\r\n    enabled,\r\n    refetchInterval,\r\n    staleTime: 2 * 60 * 1000, // 2 minutos\r\n    gcTime: 10 * 60 * 1000, // 10 minutos\r\n    retry: 2,\r\n    retryDelay: (attemptIndex) => Math.min(1000 * 2 ** attemptIndex, 30000),\r\n  });\r\n\r\n  // Funci\xF3n para registrar una b\xFAsqueda en analytics\r\n  const trackSearch = async (query: string, searchCategory?: string): Promise<void> => {\r\n    try {\r\n\r\n      const response = await fetch('/api/search/trending', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          query: query.trim(),\r\n          category: searchCategory,\r\n          userId: null, // Se puede obtener del contexto de auth si est\xE1 disponible\r\n          sessionId: `session-${Date.now()}`, // Generar session ID simple\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        console.warn('\u26A0\uFE0F Error tracking search:', response.status);\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n      console.warn('\u26A0\uFE0F Error tracking search:', error);\r\n      // No lanzar error para no interrumpir la experiencia del usuario\r\n    }\r\n  };\r\n\r\n  const result = {\r\n    trendingSearches: data?.trending || [],\r\n    isLoading,\r\n    error: error as Error | null,\r\n    refetch,\r\n    isStale,\r\n    lastUpdated: data?.lastUpdated || null,\r\n    trackSearch,\r\n  };\r\n\r\n  console.log('\uD83D\uDD25 useTrendingSearches: Hook result:', {\r\n    trendingSearchesCount: result.trendingSearches.length,\r\n    isLoading: result.isLoading,\r\n    error: result.error,\r\n    data: data,\r\n    rawTrending: data?.trending,\r\n    enabled\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Hook simplificado para obtener solo las b\xFAsquedas trending\r\n */\r\nexport function useTrendingSearchesSimple(limit: number = 6): TrendingSearch[] {\r\n  const { trendingSearches } = useTrendingSearches({ limit });\r\n  return trendingSearches;\r\n}\r\n\r\n/**\r\n * Hook para obtener b\xFAsquedas trending por categor\xEDa\r\n */\r\nexport function useTrendingSearchesByCategory(category: string, limit: number = 4): TrendingSearch[] {\r\n  const { trendingSearches } = useTrendingSearches({ \r\n    category, \r\n    limit,\r\n    refetchInterval: 10 * 60 * 1000 // 10 minutos para categor\xEDas espec\xEDficas\r\n  });\r\n  return trendingSearches;\r\n}\r\n\r\nexport default useTrendingSearches;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useTrendingSearches", "useTrendingSearchesByCategory", "useTrendingSearchesSimple", "options", "limit", "days", "category", "enabled", "refetchInterval", "data", "isLoading", "error", "refetch", "isStale", "useQuery", "queryKey", "searchQueryKeys", "trending", "queryFn", "console", "log", "params", "URLSearchParams", "set", "toString", "url", "response", "fetch", "status", "ok", "statusText", "Error", "result", "json", "success", "count", "length", "lastUpdated", "fetchError", "staleTime", "gcTime", "retry", "retryDelay", "attemptIndex", "Math", "min", "trackSearch", "query", "searchCategory", "method", "headers", "body", "JSON", "stringify", "trim", "userId", "sessionId", "Date", "now", "warn", "trendingSearches", "trendingSearchesCount", "rawTrending"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f27d39eb1ac434762516b9d1aa2097ff42fc7ffc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_fdwkozdgr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_fdwkozdgr();
cov_fdwkozdgr().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_fdwkozdgr().f[0]++;
  cov_fdwkozdgr().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_fdwkozdgr().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_fdwkozdgr().s[3]++;
_export(exports, {
  get default() {
    /* istanbul ignore next */
    cov_fdwkozdgr().f[1]++;
    cov_fdwkozdgr().s[4]++;
    return _default;
  },
  get useTrendingSearches() {
    /* istanbul ignore next */
    cov_fdwkozdgr().f[2]++;
    cov_fdwkozdgr().s[5]++;
    return useTrendingSearches;
  },
  get useTrendingSearchesByCategory() {
    /* istanbul ignore next */
    cov_fdwkozdgr().f[3]++;
    cov_fdwkozdgr().s[6]++;
    return useTrendingSearchesByCategory;
  },
  get useTrendingSearchesSimple() {
    /* istanbul ignore next */
    cov_fdwkozdgr().f[4]++;
    cov_fdwkozdgr().s[7]++;
    return useTrendingSearchesSimple;
  }
});
const _reactquery =
/* istanbul ignore next */
(cov_fdwkozdgr().s[8]++, require("@tanstack/react-query"));
const _queryclient =
/* istanbul ignore next */
(cov_fdwkozdgr().s[9]++, require("../lib/query-client"));
function useTrendingSearches(options =
/* istanbul ignore next */
(cov_fdwkozdgr().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_fdwkozdgr().f[5]++;
  const {
    limit =
    /* istanbul ignore next */
    (cov_fdwkozdgr().b[1][0]++, 6),
    days =
    /* istanbul ignore next */
    (cov_fdwkozdgr().b[2][0]++, 7),
    category,
    enabled =
    /* istanbul ignore next */
    (cov_fdwkozdgr().b[3][0]++, true),
    refetchInterval =
    /* istanbul ignore next */
    (cov_fdwkozdgr().b[4][0]++, 5 * 60 * 1000)
  } =
  /* istanbul ignore next */
  (cov_fdwkozdgr().s[10]++, options);
  // Query para obtener bÃºsquedas trending
  const {
    data,
    isLoading,
    error,
    refetch,
    isStale
  } =
  /* istanbul ignore next */
  (cov_fdwkozdgr().s[11]++, (0, _reactquery.useQuery)({
    queryKey: [..._queryclient.searchQueryKeys.trending(), 'params', {
      limit,
      days,
      category
    }],
    queryFn: async () => {
      /* istanbul ignore next */
      cov_fdwkozdgr().f[6]++;
      cov_fdwkozdgr().s[12]++;
      console.log('ğ¥ useTrendingSearches: Iniciando fetch de trending searches', {
        limit,
        days,
        category,
        enabled
      });
      const params =
      /* istanbul ignore next */
      (cov_fdwkozdgr().s[13]++, new URLSearchParams());
      /* istanbul ignore next */
      cov_fdwkozdgr().s[14]++;
      params.set('limit', limit.toString());
      /* istanbul ignore next */
      cov_fdwkozdgr().s[15]++;
      params.set('days', days.toString());
      /* istanbul ignore next */
      cov_fdwkozdgr().s[16]++;
      if (category) {
        /* istanbul ignore next */
        cov_fdwkozdgr().b[5][0]++;
        cov_fdwkozdgr().s[17]++;
        params.set('category', category);
      } else
      /* istanbul ignore next */
      {
        cov_fdwkozdgr().b[5][1]++;
      }
      const url =
      /* istanbul ignore next */
      (cov_fdwkozdgr().s[18]++, `/api/search/trending?${params.toString()}`);
      /* istanbul ignore next */
      cov_fdwkozdgr().s[19]++;
      console.log('ğ¥ useTrendingSearches: URL construida:', url);
      /* istanbul ignore next */
      cov_fdwkozdgr().s[20]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_fdwkozdgr().s[21]++, await fetch(url));
        /* istanbul ignore next */
        cov_fdwkozdgr().s[22]++;
        console.log('ğ¥ useTrendingSearches: Response status:', response.status);
        /* istanbul ignore next */
        cov_fdwkozdgr().s[23]++;
        if (!response.ok) {
          /* istanbul ignore next */
          cov_fdwkozdgr().b[6][0]++;
          cov_fdwkozdgr().s[24]++;
          console.error('ğ¥ useTrendingSearches: Response not OK:', response.status, response.statusText);
          /* istanbul ignore next */
          cov_fdwkozdgr().s[25]++;
          throw new Error(`Error fetching trending searches: ${response.status}`);
        } else
        /* istanbul ignore next */
        {
          cov_fdwkozdgr().b[6][1]++;
        }
        const result =
        /* istanbul ignore next */
        (cov_fdwkozdgr().s[26]++, await response.json());
        /* istanbul ignore next */
        cov_fdwkozdgr().s[27]++;
        console.log('ğ¥ useTrendingSearches: Raw API response:', result);
        /* istanbul ignore next */
        cov_fdwkozdgr().s[28]++;
        if (
        /* istanbul ignore next */
        (cov_fdwkozdgr().b[8][0]++, !result.success) ||
        /* istanbul ignore next */
        (cov_fdwkozdgr().b[8][1]++, !result.data)) {
          /* istanbul ignore next */
          cov_fdwkozdgr().b[7][0]++;
          cov_fdwkozdgr().s[29]++;
          console.error('ğ¥ useTrendingSearches: API response error:', result.error);
          /* istanbul ignore next */
          cov_fdwkozdgr().s[30]++;
          throw new Error(
          /* istanbul ignore next */
          (cov_fdwkozdgr().b[9][0]++, result.error) ||
          /* istanbul ignore next */
          (cov_fdwkozdgr().b[9][1]++, 'Error obteniendo bÃºsquedas trending'));
        } else
        /* istanbul ignore next */
        {
          cov_fdwkozdgr().b[7][1]++;
        }
        cov_fdwkozdgr().s[31]++;
        console.log('â useTrendingSearches: Trending searches fetched successfully', {
          count: result.data.trending.length,
          lastUpdated: result.data.lastUpdated,
          data: result.data.trending
        });
        /* istanbul ignore next */
        cov_fdwkozdgr().s[32]++;
        return result.data;
      } catch (fetchError) {
        /* istanbul ignore next */
        cov_fdwkozdgr().s[33]++;
        console.error('ğ¥ useTrendingSearches: Fetch error:', fetchError);
        /* istanbul ignore next */
        cov_fdwkozdgr().s[34]++;
        throw fetchError;
      }
    },
    enabled,
    refetchInterval,
    staleTime: 2 * 60 * 1000,
    gcTime: 10 * 60 * 1000,
    retry: 2,
    retryDelay: attemptIndex => {
      /* istanbul ignore next */
      cov_fdwkozdgr().f[7]++;
      cov_fdwkozdgr().s[35]++;
      return Math.min(1000 * 2 ** attemptIndex, 30000);
    }
  }));
  // FunciÃ³n para registrar una bÃºsqueda en analytics
  /* istanbul ignore next */
  cov_fdwkozdgr().s[36]++;
  const trackSearch = async (query, searchCategory) => {
    /* istanbul ignore next */
    cov_fdwkozdgr().f[8]++;
    cov_fdwkozdgr().s[37]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_fdwkozdgr().s[38]++, await fetch('/api/search/trending', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          query: query.trim(),
          category: searchCategory,
          userId: null,
          sessionId: `session-${Date.now()}`
        })
      }));
      /* istanbul ignore next */
      cov_fdwkozdgr().s[39]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_fdwkozdgr().b[10][0]++;
        cov_fdwkozdgr().s[40]++;
        console.warn('â ï¸ Error tracking search:', response.status);
      } else {
        /* istanbul ignore next */
        cov_fdwkozdgr().b[10][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_fdwkozdgr().s[41]++;
      console.warn('â ï¸ Error tracking search:', error);
      // No lanzar error para no interrumpir la experiencia del usuario
    }
  };
  const result =
  /* istanbul ignore next */
  (cov_fdwkozdgr().s[42]++, {
    trendingSearches:
    /* istanbul ignore next */
    (cov_fdwkozdgr().b[11][0]++, data?.trending) ||
    /* istanbul ignore next */
    (cov_fdwkozdgr().b[11][1]++, []),
    isLoading,
    error: error,
    refetch,
    isStale,
    lastUpdated:
    /* istanbul ignore next */
    (cov_fdwkozdgr().b[12][0]++, data?.lastUpdated) ||
    /* istanbul ignore next */
    (cov_fdwkozdgr().b[12][1]++, null),
    trackSearch
  });
  /* istanbul ignore next */
  cov_fdwkozdgr().s[43]++;
  console.log('ğ¥ useTrendingSearches: Hook result:', {
    trendingSearchesCount: result.trendingSearches.length,
    isLoading: result.isLoading,
    error: result.error,
    data: data,
    rawTrending: data?.trending,
    enabled
  });
  /* istanbul ignore next */
  cov_fdwkozdgr().s[44]++;
  return result;
}
function useTrendingSearchesSimple(limit =
/* istanbul ignore next */
(cov_fdwkozdgr().b[13][0]++, 6)) {
  /* istanbul ignore next */
  cov_fdwkozdgr().f[9]++;
  const {
    trendingSearches
  } =
  /* istanbul ignore next */
  (cov_fdwkozdgr().s[45]++, useTrendingSearches({
    limit
  }));
  /* istanbul ignore next */
  cov_fdwkozdgr().s[46]++;
  return trendingSearches;
}
function useTrendingSearchesByCategory(category, limit =
/* istanbul ignore next */
(cov_fdwkozdgr().b[14][0]++, 4)) {
  /* istanbul ignore next */
  cov_fdwkozdgr().f[10]++;
  const {
    trendingSearches
  } =
  /* istanbul ignore next */
  (cov_fdwkozdgr().s[47]++, useTrendingSearches({
    category,
    limit,
    refetchInterval: 10 * 60 * 1000 // 10 minutos para categorÃ­as especÃ­ficas
  }));
  /* istanbul ignore next */
  cov_fdwkozdgr().s[48]++;
  return trendingSearches;
}
const _default =
/* istanbul ignore next */
(cov_fdwkozdgr().s[49]++, useTrendingSearches);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,