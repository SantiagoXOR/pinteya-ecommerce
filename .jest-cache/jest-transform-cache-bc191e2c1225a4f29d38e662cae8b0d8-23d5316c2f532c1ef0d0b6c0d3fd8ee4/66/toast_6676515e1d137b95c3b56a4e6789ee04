9e888af31b7ef330e42ac819ed6b9141
"use client";
"use strict";

/* istanbul ignore next */
function cov_48c1co2l4() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\toast.tsx";
  var hash = "886c9b81bab7a8a7d65d3a4d380dbabd52d32e9c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\toast.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 37,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 21
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 27
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 26
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 32
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 29
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 26
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 29
        }
      },
      "11": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 23
        }
      },
      "12": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 38,
          column: 48
        }
      },
      "13": {
        start: {
          line: 39,
          column: 29
        },
        end: {
          line: 39,
          column: 72
        }
      },
      "14": {
        start: {
          line: 40,
          column: 34
        },
        end: {
          line: 40,
          column: 93
        }
      },
      "15": {
        start: {
          line: 41,
          column: 32
        },
        end: {
          line: 41,
          column: 67
        }
      },
      "16": {
        start: {
          line: 42,
          column: 21
        },
        end: {
          line: 42,
          column: 44
        }
      },
      "17": {
        start: {
          line: 43,
          column: 15
        },
        end: {
          line: 43,
          column: 41
        }
      },
      "18": {
        start: {
          line: 44,
          column: 18
        },
        end: {
          line: 44,
          column: 40
        }
      },
      "19": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 51
        }
      },
      "20": {
        start: {
          line: 46,
          column: 39
        },
        end: {
          line: 46,
          column: 51
        }
      },
      "21": {
        start: {
          line: 47,
          column: 28
        },
        end: {
          line: 47,
          column: 41
        }
      },
      "22": {
        start: {
          line: 48,
          column: 27
        },
        end: {
          line: 48,
          column: 40
        }
      },
      "23": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 51,
          column: 20
        }
      },
      "24": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 66
        }
      },
      "25": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "26": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 19
        }
      },
      "27": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "28": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 60,
          column: 10
        }
      },
      "29": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 53
        }
      },
      "30": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "31": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 30
        }
      },
      "32": {
        start: {
          line: 66,
          column: 17
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "33": {
        start: {
          line: 69,
          column: 32
        },
        end: {
          line: 69,
          column: 88
        }
      },
      "34": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "35": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "36": {
        start: {
          line: 72,
          column: 23
        },
        end: {
          line: 72,
          column: 95
        }
      },
      "37": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 77,
          column: 13
        }
      },
      "38": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 74,
          column: 57
        }
      },
      "39": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 39
        }
      },
      "40": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 80,
          column: 25
        }
      },
      "41": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 83,
          column: 5
        }
      },
      "42": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 31
        }
      },
      "43": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 18
        }
      },
      "44": {
        start: {
          line: 86,
          column: 22
        },
        end: {
          line: 86,
          column: 42
        }
      },
      "45": {
        start: {
          line: 87,
          column: 36
        },
        end: {
          line: 91,
          column: 7
        }
      },
      "46": {
        start: {
          line: 87,
          column: 100
        },
        end: {
          line: 91,
          column: 6
        }
      },
      "47": {
        start: {
          line: 92,
          column: 0
        },
        end: {
          line: 92,
          column: 61
        }
      },
      "48": {
        start: {
          line: 93,
          column: 22
        },
        end: {
          line: 106,
          column: 2
        }
      },
      "49": {
        start: {
          line: 107,
          column: 28
        },
        end: {
          line: 115,
          column: 2
        }
      },
      "50": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 114,
          column: 7
        }
      },
      "51": {
        start: {
          line: 116,
          column: 0
        },
        end: {
          line: 116,
          column: 49
        }
      },
      "52": {
        start: {
          line: 117,
          column: 34
        },
        end: {
          line: 121,
          column: 7
        }
      },
      "53": {
        start: {
          line: 117,
          column: 98
        },
        end: {
          line: 121,
          column: 6
        }
      },
      "54": {
        start: {
          line: 122,
          column: 0
        },
        end: {
          line: 122,
          column: 57
        }
      },
      "55": {
        start: {
          line: 123,
          column: 33
        },
        end: {
          line: 131,
          column: 7
        }
      },
      "56": {
        start: {
          line: 123,
          column: 97
        },
        end: {
          line: 131,
          column: 6
        }
      },
      "57": {
        start: {
          line: 132,
          column: 0
        },
        end: {
          line: 132,
          column: 55
        }
      },
      "58": {
        start: {
          line: 133,
          column: 33
        },
        end: {
          line: 137,
          column: 7
        }
      },
      "59": {
        start: {
          line: 133,
          column: 97
        },
        end: {
          line: 137,
          column: 6
        }
      },
      "60": {
        start: {
          line: 138,
          column: 0
        },
        end: {
          line: 138,
          column: 55
        }
      },
      "61": {
        start: {
          line: 139,
          column: 39
        },
        end: {
          line: 143,
          column: 7
        }
      },
      "62": {
        start: {
          line: 139,
          column: 103
        },
        end: {
          line: 143,
          column: 6
        }
      },
      "63": {
        start: {
          line: 144,
          column: 0
        },
        end: {
          line: 144,
          column: 67
        }
      },
      "64": {
        start: {
          line: 146,
          column: 23
        },
        end: {
          line: 146,
          column: 48
        }
      },
      "65": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 171,
          column: 7
        }
      },
      "66": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 167,
          column: 23
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 17
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 23
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 22
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 28
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 25
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 22
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 25
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 19
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "9": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 45,
            column: 9
          },
          end: {
            line: 45,
            column: 33
          }
        },
        loc: {
          start: {
            line: 45,
            column: 47
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 45
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 49,
            column: 39
          },
          end: {
            line: 49,
            column: 40
          }
        },
        loc: {
          start: {
            line: 49,
            column: 61
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 49
      },
      "11": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 53,
            column: 9
          },
          end: {
            line: 53,
            column: 34
          }
        },
        loc: {
          start: {
            line: 53,
            column: 53
          },
          end: {
            line: 85,
            column: 1
          }
        },
        line: 53
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 87,
            column: 54
          },
          end: {
            line: 87,
            column: 55
          }
        },
        loc: {
          start: {
            line: 87,
            column: 100
          },
          end: {
            line: 91,
            column: 6
          }
        },
        line: 87
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 107,
            column: 46
          },
          end: {
            line: 107,
            column: 47
          }
        },
        loc: {
          start: {
            line: 107,
            column: 87
          },
          end: {
            line: 115,
            column: 1
          }
        },
        line: 107
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 117,
            column: 52
          },
          end: {
            line: 117,
            column: 53
          }
        },
        loc: {
          start: {
            line: 117,
            column: 98
          },
          end: {
            line: 121,
            column: 6
          }
        },
        line: 117
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 123,
            column: 51
          },
          end: {
            line: 123,
            column: 52
          }
        },
        loc: {
          start: {
            line: 123,
            column: 97
          },
          end: {
            line: 131,
            column: 6
          }
        },
        line: 123
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 133,
            column: 51
          },
          end: {
            line: 133,
            column: 52
          }
        },
        loc: {
          start: {
            line: 133,
            column: 97
          },
          end: {
            line: 137,
            column: 6
          }
        },
        line: 133
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 139,
            column: 57
          },
          end: {
            line: 139,
            column: 58
          }
        },
        loc: {
          start: {
            line: 139,
            column: 103
          },
          end: {
            line: 143,
            column: 6
          }
        },
        line: 139
      },
      "18": {
        name: "Toaster",
        decl: {
          start: {
            line: 145,
            column: 9
          },
          end: {
            line: 145,
            column: 16
          }
        },
        loc: {
          start: {
            line: 145,
            column: 19
          },
          end: {
            line: 172,
            column: 1
          }
        },
        line: 145
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 149,
            column: 23
          },
          end: {
            line: 149,
            column: 24
          }
        },
        loc: {
          start: {
            line: 149,
            column: 78
          },
          end: {
            line: 168,
            column: 13
          }
        },
        line: 149
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "1": {
        loc: {
          start: {
            line: 50,
            column: 15
          },
          end: {
            line: 50,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 50,
            column: 29
          },
          end: {
            line: 50,
            column: 45
          }
        }, {
          start: {
            line: 50,
            column: 48
          },
          end: {
            line: 50,
            column: 65
          }
        }],
        line: 50
      },
      "2": {
        loc: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "3": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 54,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 54,
            column: 20
          }
        }, {
          start: {
            line: 54,
            column: 24
          },
          end: {
            line: 54,
            column: 27
          }
        }, {
          start: {
            line: 54,
            column: 31
          },
          end: {
            line: 54,
            column: 45
          }
        }],
        line: 54
      },
      "4": {
        loc: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "5": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 57,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 57,
            column: 20
          }
        }, {
          start: {
            line: 57,
            column: 24
          },
          end: {
            line: 57,
            column: 47
          }
        }, {
          start: {
            line: 57,
            column: 51
          },
          end: {
            line: 57,
            column: 76
          }
        }],
        line: 57
      },
      "6": {
        loc: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "7": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 63,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 63,
            column: 13
          }
        }, {
          start: {
            line: 63,
            column: 17
          },
          end: {
            line: 63,
            column: 31
          }
        }],
        line: 63
      },
      "8": {
        loc: {
          start: {
            line: 69,
            column: 32
          },
          end: {
            line: 69,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 32
          },
          end: {
            line: 69,
            column: 53
          }
        }, {
          start: {
            line: 69,
            column: 57
          },
          end: {
            line: 69,
            column: 88
          }
        }],
        line: 69
      },
      "9": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "10": {
        loc: {
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 71,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 71,
            column: 29
          }
        }, {
          start: {
            line: 71,
            column: 33
          },
          end: {
            line: 71,
            column: 79
          }
        }],
        line: 71
      },
      "11": {
        loc: {
          start: {
            line: 72,
            column: 23
          },
          end: {
            line: 72,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 72,
            column: 47
          },
          end: {
            line: 72,
            column: 88
          }
        }, {
          start: {
            line: 72,
            column: 91
          },
          end: {
            line: 72,
            column: 95
          }
        }],
        line: 72
      },
      "12": {
        loc: {
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        }, {
          start: {
            line: 75,
            column: 19
          },
          end: {
            line: 77,
            column: 13
          }
        }],
        line: 73
      },
      "13": {
        loc: {
          start: {
            line: 73,
            column: 16
          },
          end: {
            line: 73,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 16
          },
          end: {
            line: 73,
            column: 20
          }
        }, {
          start: {
            line: 73,
            column: 25
          },
          end: {
            line: 73,
            column: 33
          }
        }, {
          start: {
            line: 73,
            column: 37
          },
          end: {
            line: 73,
            column: 45
          }
        }],
        line: 73
      },
      "14": {
        loc: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "15": {
        loc: {
          start: {
            line: 156,
            column: 32
          },
          end: {
            line: 158,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 32
          },
          end: {
            line: 156,
            column: 37
          }
        }, {
          start: {
            line: 156,
            column: 55
          },
          end: {
            line: 158,
            column: 34
          }
        }],
        line: 156
      },
      "16": {
        loc: {
          start: {
            line: 159,
            column: 32
          },
          end: {
            line: 161,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 32
          },
          end: {
            line: 159,
            column: 43
          }
        }, {
          start: {
            line: 159,
            column: 61
          },
          end: {
            line: 161,
            column: 34
          }
        }],
        line: 159
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\toast.tsx"],
      sourcesContent: ["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { X } from \"lucide-react\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { useToast } from \"./use-toast\"\r\n\r\nconst ToastProvider = ToastPrimitives.Provider\r\n\r\nconst ToastViewport = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Viewport\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\r\n\r\nconst toastVariants = cva(\r\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"border bg-white text-gray-950\",\r\n        destructive:\r\n          \"destructive group border-red-500 bg-red-500 text-gray-50\",\r\n        success: \"border-green-500 bg-green-500 text-white\",\r\n        warning: \"border-yellow-500 bg-yellow-500 text-white\",\r\n        info: \"border-blue-500 bg-blue-500 text-white\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst Toast = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\r\n    VariantProps<typeof toastVariants>\r\n>(({ className, variant, ...props }, ref) => {\r\n  return (\r\n    <ToastPrimitives.Root\r\n      ref={ref}\r\n      className={cn(toastVariants({ variant }), className)}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nToast.displayName = ToastPrimitives.Root.displayName\r\n\r\nconst ToastAction = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Action>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Action\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-white transition-colors hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-gray-100/40 group-[.destructive]:hover:border-red-500/30 group-[.destructive]:hover:bg-red-500 group-[.destructive]:hover:text-gray-50 group-[.destructive]:focus:ring-red-500\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nToastAction.displayName = ToastPrimitives.Action.displayName\r\n\r\nconst ToastClose = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Close>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Close\r\n    ref={ref}\r\n    className={cn(\r\n      \"absolute right-2 top-2 rounded-md p-1 text-gray-950/50 opacity-0 transition-opacity hover:text-gray-950 focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\r\n      className\r\n    )}\r\n    toast-close=\"\"\r\n    {...props}\r\n  >\r\n    <X className=\"h-4 w-4\" />\r\n  </ToastPrimitives.Close>\r\n))\r\nToastClose.displayName = ToastPrimitives.Close.displayName\r\n\r\nconst ToastTitle = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Title>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Title\r\n    ref={ref}\r\n    className={cn(\"text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nToastTitle.displayName = ToastPrimitives.Title.displayName\r\n\r\nconst ToastDescription = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Description>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm opacity-90\", className)}\r\n    {...props}\r\n  />\r\n))\r\nToastDescription.displayName = ToastPrimitives.Description.displayName\r\n\r\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\r\n\r\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\r\n\r\nfunction Toaster() {\r\n  const { toasts } = useToast()\r\n\r\n  return (\r\n    <ToastProvider>\r\n      {toasts.map(function ({ id, title, description, action, ...props }) {\r\n        return (\r\n          <Toast key={id} {...props}>\r\n            <div className=\"grid gap-1\">\r\n              {title && <ToastTitle>{title}</ToastTitle>}\r\n              {description && (\r\n                <ToastDescription>{description}</ToastDescription>\r\n              )}\r\n            </div>\r\n            {action}\r\n            <ToastClose />\r\n          </Toast>\r\n        )\r\n      })}\r\n      <ToastViewport />\r\n    </ToastProvider>\r\n  )\r\n}\r\n\r\nexport {\r\n  type ToastProps,\r\n  type ToastActionElement,\r\n  ToastProvider,\r\n  ToastViewport,\r\n  Toast,\r\n  ToastTitle,\r\n  ToastDescription,\r\n  ToastClose,\r\n  ToastAction,\r\n  Toaster,\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["Toast", "ToastAction", "ToastClose", "ToastDescription", "ToastProvider", "ToastTitle", "ToastViewport", "Toaster", "ToastPrimitives", "Provider", "React", "forwardRef", "className", "props", "ref", "Viewport", "cn", "displayName", "toastVariants", "cva", "variants", "variant", "default", "destructive", "success", "warning", "info", "defaultVariants", "Root", "Action", "Close", "toast-close", "X", "Title", "Description", "toasts", "useToast", "map", "id", "title", "description", "action", "div"],
      mappings: "AAAA;;;;;;;;;;;;QAsJEA;eAAAA;;QAIAC;eAAAA;;QADAC;eAAAA;;QADAC;eAAAA;;QAJAC;eAAAA;;QAGAC;eAAAA;;QAFAC;eAAAA;;QAMAC;eAAAA;;;;+DAzJqB;oEACU;wCACM;6BACrB;uBACC;0BACM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEzB,MAAMH,gBAAgBI,YAAgBC,QAAQ;AAE9C,MAAMH,8BAAgBI,OAAMC,UAAU,CAGpC,CAAC,EAAEC,SAAS,EAAE,GAAGC,OAAO,EAAEC,oBAC1B,qBAACN,YAAgBO,QAAQ;QACvBD,KAAKA;QACLF,WAAWI,IAAAA,SAAE,EACX,qIACAJ;QAED,GAAGC,KAAK;;AAGbP,cAAcW,WAAW,GAAGT,YAAgBO,QAAQ,CAACE,WAAW;AAEhE,MAAMC,gBAAgBC,IAAAA,2BAAG,EACvB,6lBACA;IACEC,UAAU;QACRC,SAAS;YACPC,SAAS;YACTC,aACE;YACFC,SAAS;YACTC,SAAS;YACTC,MAAM;QACR;IACF;IACAC,iBAAiB;QACfN,SAAS;IACX;AACF;AAGF,MAAMrB,sBAAQU,OAAMC,UAAU,CAI5B,CAAC,EAAEC,SAAS,EAAES,OAAO,EAAE,GAAGR,OAAO,EAAEC;IACnC,qBACE,qBAACN,YAAgBoB,IAAI;QACnBd,KAAKA;QACLF,WAAWI,IAAAA,SAAE,EAACE,cAAc;YAAEG;QAAQ,IAAIT;QACzC,GAAGC,KAAK;;AAGf;AACAb,MAAMiB,WAAW,GAAGT,YAAgBoB,IAAI,CAACX,WAAW;AAEpD,MAAMhB,4BAAcS,OAAMC,UAAU,CAGlC,CAAC,EAAEC,SAAS,EAAE,GAAGC,OAAO,EAAEC,oBAC1B,qBAACN,YAAgBqB,MAAM;QACrBf,KAAKA;QACLF,WAAWI,IAAAA,SAAE,EACX,4eACAJ;QAED,GAAGC,KAAK;;AAGbZ,YAAYgB,WAAW,GAAGT,YAAgBqB,MAAM,CAACZ,WAAW;AAE5D,MAAMf,2BAAaQ,OAAMC,UAAU,CAGjC,CAAC,EAAEC,SAAS,EAAE,GAAGC,OAAO,EAAEC,oBAC1B,qBAACN,YAAgBsB,KAAK;QACpBhB,KAAKA;QACLF,WAAWI,IAAAA,SAAE,EACX,qVACAJ;QAEFmB,eAAY;QACX,GAAGlB,KAAK;kBAET,cAAA,qBAACmB,cAAC;YAACpB,WAAU;;;AAGjBV,WAAWe,WAAW,GAAGT,YAAgBsB,KAAK,CAACb,WAAW;AAE1D,MAAMZ,2BAAaK,OAAMC,UAAU,CAGjC,CAAC,EAAEC,SAAS,EAAE,GAAGC,OAAO,EAAEC,oBAC1B,qBAACN,YAAgByB,KAAK;QACpBnB,KAAKA;QACLF,WAAWI,IAAAA,SAAE,EAAC,yBAAyBJ;QACtC,GAAGC,KAAK;;AAGbR,WAAWY,WAAW,GAAGT,YAAgByB,KAAK,CAAChB,WAAW;AAE1D,MAAMd,iCAAmBO,OAAMC,UAAU,CAGvC,CAAC,EAAEC,SAAS,EAAE,GAAGC,OAAO,EAAEC,oBAC1B,qBAACN,YAAgB0B,WAAW;QAC1BpB,KAAKA;QACLF,WAAWI,IAAAA,SAAE,EAAC,sBAAsBJ;QACnC,GAAGC,KAAK;;AAGbV,iBAAiBc,WAAW,GAAGT,YAAgB0B,WAAW,CAACjB,WAAW;AAMtE,SAASV;IACP,MAAM,EAAE4B,MAAM,EAAE,GAAGC,IAAAA,kBAAQ;IAE3B,qBACE,sBAAChC;;YACE+B,OAAOE,GAAG,CAAC,SAAU,EAAEC,EAAE,EAAEC,KAAK,EAAEC,WAAW,EAAEC,MAAM,EAAE,GAAG5B,OAAO;gBAChE,qBACE,sBAACb;oBAAgB,GAAGa,KAAK;;sCACvB,sBAAC6B;4BAAI9B,WAAU;;gCACZ2B,uBAAS,qBAAClC;8CAAYkC;;gCACtBC,6BACC,qBAACrC;8CAAkBqC;;;;wBAGtBC;sCACD,qBAACvC;;mBARSoC;YAWhB;0BACA,qBAAChC;;;AAGP"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "886c9b81bab7a8a7d65d3a4d380dbabd52d32e9c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_48c1co2l4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_48c1co2l4();
cov_48c1co2l4().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_48c1co2l4().f[0]++;
  cov_48c1co2l4().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_48c1co2l4().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_48c1co2l4().s[3]++;
_export(exports, {
  get Toast() {
    /* istanbul ignore next */
    cov_48c1co2l4().f[1]++;
    cov_48c1co2l4().s[4]++;
    return Toast;
  },
  get ToastAction() {
    /* istanbul ignore next */
    cov_48c1co2l4().f[2]++;
    cov_48c1co2l4().s[5]++;
    return ToastAction;
  },
  get ToastClose() {
    /* istanbul ignore next */
    cov_48c1co2l4().f[3]++;
    cov_48c1co2l4().s[6]++;
    return ToastClose;
  },
  get ToastDescription() {
    /* istanbul ignore next */
    cov_48c1co2l4().f[4]++;
    cov_48c1co2l4().s[7]++;
    return ToastDescription;
  },
  get ToastProvider() {
    /* istanbul ignore next */
    cov_48c1co2l4().f[5]++;
    cov_48c1co2l4().s[8]++;
    return ToastProvider;
  },
  get ToastTitle() {
    /* istanbul ignore next */
    cov_48c1co2l4().f[6]++;
    cov_48c1co2l4().s[9]++;
    return ToastTitle;
  },
  get ToastViewport() {
    /* istanbul ignore next */
    cov_48c1co2l4().f[7]++;
    cov_48c1co2l4().s[10]++;
    return ToastViewport;
  },
  get Toaster() {
    /* istanbul ignore next */
    cov_48c1co2l4().f[8]++;
    cov_48c1co2l4().s[11]++;
    return Toaster;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_48c1co2l4().s[12]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_48c1co2l4().s[13]++, _interop_require_wildcard(require("react")));
const _reacttoast =
/* istanbul ignore next */
(/*#__PURE__*/cov_48c1co2l4().s[14]++, _interop_require_wildcard(require("@radix-ui/react-toast")));
const _classvarianceauthority =
/* istanbul ignore next */
(cov_48c1co2l4().s[15]++, require("class-variance-authority"));
const _lucidereact =
/* istanbul ignore next */
(cov_48c1co2l4().s[16]++, require("lucide-react"));
const _utils =
/* istanbul ignore next */
(cov_48c1co2l4().s[17]++, require("../../lib/utils"));
const _usetoast =
/* istanbul ignore next */
(cov_48c1co2l4().s[18]++, require("./use-toast"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_48c1co2l4().f[9]++;
  cov_48c1co2l4().s[19]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_48c1co2l4().b[0][0]++;
    cov_48c1co2l4().s[20]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_48c1co2l4().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_48c1co2l4().s[21]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_48c1co2l4().s[22]++, new WeakMap());
  /* istanbul ignore next */
  cov_48c1co2l4().s[23]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_48c1co2l4().f[10]++;
    cov_48c1co2l4().s[24]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_48c1co2l4().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_48c1co2l4().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_48c1co2l4().f[11]++;
  cov_48c1co2l4().s[25]++;
  if (
  /* istanbul ignore next */
  (cov_48c1co2l4().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_48c1co2l4().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_48c1co2l4().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_48c1co2l4().b[2][0]++;
    cov_48c1co2l4().s[26]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_48c1co2l4().b[2][1]++;
  }
  cov_48c1co2l4().s[27]++;
  if (
  /* istanbul ignore next */
  (cov_48c1co2l4().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_48c1co2l4().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_48c1co2l4().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_48c1co2l4().b[4][0]++;
    cov_48c1co2l4().s[28]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_48c1co2l4().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_48c1co2l4().s[29]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_48c1co2l4().s[30]++;
  if (
  /* istanbul ignore next */
  (cov_48c1co2l4().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_48c1co2l4().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_48c1co2l4().b[6][0]++;
    cov_48c1co2l4().s[31]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_48c1co2l4().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_48c1co2l4().s[32]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_48c1co2l4().s[33]++,
  /* istanbul ignore next */
  (cov_48c1co2l4().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_48c1co2l4().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_48c1co2l4().s[34]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_48c1co2l4().s[35]++;
    if (
    /* istanbul ignore next */
    (cov_48c1co2l4().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_48c1co2l4().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_48c1co2l4().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_48c1co2l4().s[36]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_48c1co2l4().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_48c1co2l4().b[11][1]++, null));
      /* istanbul ignore next */
      cov_48c1co2l4().s[37]++;
      if (
      /* istanbul ignore next */
      (cov_48c1co2l4().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_48c1co2l4().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_48c1co2l4().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_48c1co2l4().b[12][0]++;
        cov_48c1co2l4().s[38]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_48c1co2l4().b[12][1]++;
        cov_48c1co2l4().s[39]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_48c1co2l4().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_48c1co2l4().s[40]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_48c1co2l4().s[41]++;
  if (cache) {
    /* istanbul ignore next */
    cov_48c1co2l4().b[14][0]++;
    cov_48c1co2l4().s[42]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_48c1co2l4().b[14][1]++;
  }
  cov_48c1co2l4().s[43]++;
  return newObj;
}
const ToastProvider =
/* istanbul ignore next */
(cov_48c1co2l4().s[44]++, _reacttoast.Provider);
const ToastViewport =
/* istanbul ignore next */
(/*#__PURE__*/cov_48c1co2l4().s[45]++, _react.forwardRef(({
  className,
  ...props
}, ref) => {
  /* istanbul ignore next */
  cov_48c1co2l4().f[12]++;
  cov_48c1co2l4().s[46]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_reacttoast.Viewport, {
    ref: ref,
    className: (0, _utils.cn)("fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]", className),
    ...props
  });
}));
/* istanbul ignore next */
cov_48c1co2l4().s[47]++;
ToastViewport.displayName = _reacttoast.Viewport.displayName;
const toastVariants =
/* istanbul ignore next */
(cov_48c1co2l4().s[48]++, (0, _classvarianceauthority.cva)("group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full", {
  variants: {
    variant: {
      default: "border bg-white text-gray-950",
      destructive: "destructive group border-red-500 bg-red-500 text-gray-50",
      success: "border-green-500 bg-green-500 text-white",
      warning: "border-yellow-500 bg-yellow-500 text-white",
      info: "border-blue-500 bg-blue-500 text-white"
    }
  },
  defaultVariants: {
    variant: "default"
  }
}));
const Toast =
/* istanbul ignore next */
(/*#__PURE__*/cov_48c1co2l4().s[49]++, _react.forwardRef(({
  className,
  variant,
  ...props
}, ref) => {
  /* istanbul ignore next */
  cov_48c1co2l4().f[13]++;
  cov_48c1co2l4().s[50]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_reacttoast.Root, {
    ref: ref,
    className: (0, _utils.cn)(toastVariants({
      variant
    }), className),
    ...props
  });
}));
/* istanbul ignore next */
cov_48c1co2l4().s[51]++;
Toast.displayName = _reacttoast.Root.displayName;
const ToastAction =
/* istanbul ignore next */
(/*#__PURE__*/cov_48c1co2l4().s[52]++, _react.forwardRef(({
  className,
  ...props
}, ref) => {
  /* istanbul ignore next */
  cov_48c1co2l4().f[14]++;
  cov_48c1co2l4().s[53]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_reacttoast.Action, {
    ref: ref,
    className: (0, _utils.cn)("inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-white transition-colors hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-gray-100/40 group-[.destructive]:hover:border-red-500/30 group-[.destructive]:hover:bg-red-500 group-[.destructive]:hover:text-gray-50 group-[.destructive]:focus:ring-red-500", className),
    ...props
  });
}));
/* istanbul ignore next */
cov_48c1co2l4().s[54]++;
ToastAction.displayName = _reacttoast.Action.displayName;
const ToastClose =
/* istanbul ignore next */
(/*#__PURE__*/cov_48c1co2l4().s[55]++, _react.forwardRef(({
  className,
  ...props
}, ref) => {
  /* istanbul ignore next */
  cov_48c1co2l4().f[15]++;
  cov_48c1co2l4().s[56]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_reacttoast.Close, {
    ref: ref,
    className: (0, _utils.cn)("absolute right-2 top-2 rounded-md p-1 text-gray-950/50 opacity-0 transition-opacity hover:text-gray-950 focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600", className),
    "toast-close": "",
    ...props,
    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.X, {
      className: "h-4 w-4"
    })
  });
}));
/* istanbul ignore next */
cov_48c1co2l4().s[57]++;
ToastClose.displayName = _reacttoast.Close.displayName;
const ToastTitle =
/* istanbul ignore next */
(/*#__PURE__*/cov_48c1co2l4().s[58]++, _react.forwardRef(({
  className,
  ...props
}, ref) => {
  /* istanbul ignore next */
  cov_48c1co2l4().f[16]++;
  cov_48c1co2l4().s[59]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_reacttoast.Title, {
    ref: ref,
    className: (0, _utils.cn)("text-sm font-semibold", className),
    ...props
  });
}));
/* istanbul ignore next */
cov_48c1co2l4().s[60]++;
ToastTitle.displayName = _reacttoast.Title.displayName;
const ToastDescription =
/* istanbul ignore next */
(/*#__PURE__*/cov_48c1co2l4().s[61]++, _react.forwardRef(({
  className,
  ...props
}, ref) => {
  /* istanbul ignore next */
  cov_48c1co2l4().f[17]++;
  cov_48c1co2l4().s[62]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_reacttoast.Description, {
    ref: ref,
    className: (0, _utils.cn)("text-sm opacity-90", className),
    ...props
  });
}));
/* istanbul ignore next */
cov_48c1co2l4().s[63]++;
ToastDescription.displayName = _reacttoast.Description.displayName;
function Toaster() {
  /* istanbul ignore next */
  cov_48c1co2l4().f[18]++;
  const {
    toasts
  } =
  /* istanbul ignore next */
  (cov_48c1co2l4().s[64]++, (0, _usetoast.useToast)());
  /* istanbul ignore next */
  cov_48c1co2l4().s[65]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(ToastProvider, {
    children: [toasts.map(function ({
      id,
      title,
      description,
      action,
      ...props
    }) {
      /* istanbul ignore next */
      cov_48c1co2l4().f[19]++;
      cov_48c1co2l4().s[66]++;
      return /*#__PURE__*/(0, _jsxruntime.jsxs)(Toast, {
        ...props,
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "grid gap-1",
          children: [
          /* istanbul ignore next */
          (cov_48c1co2l4().b[15][0]++, title) &&
          /* istanbul ignore next */
          (cov_48c1co2l4().b[15][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(ToastTitle, {
            children: title
          })),
          /* istanbul ignore next */
          (cov_48c1co2l4().b[16][0]++, description) &&
          /* istanbul ignore next */
          (cov_48c1co2l4().b[16][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(ToastDescription, {
            children: description
          }))]
        }), action, /*#__PURE__*/(0, _jsxruntime.jsx)(ToastClose, {})]
      }, id);
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(ToastViewport, {})]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,