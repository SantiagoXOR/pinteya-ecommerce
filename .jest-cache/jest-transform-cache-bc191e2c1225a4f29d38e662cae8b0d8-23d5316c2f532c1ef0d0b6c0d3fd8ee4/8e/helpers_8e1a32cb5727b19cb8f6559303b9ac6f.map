{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\utils\\helpers.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - UTILITY HELPERS\r\n// ===================================\r\n\r\n/**\r\n * Formats a price in Argentine peso format\r\n */\r\nexport function formatPrice(price: number | null | undefined): string {\r\n  if (price === null || price === undefined || isNaN(price)) {\r\n    return '$0'\r\n  }\r\n\r\n  const roundedPrice = Math.round(price)\r\n  // Simple format without spaces for consistency\r\n  const formatted = roundedPrice.toLocaleString('es-AR')\r\n  return `$${formatted}`\r\n}\r\n\r\n/**\r\n * Calculates discount percentage\r\n */\r\nexport function calculateDiscount(originalPrice: number | null, discountedPrice: number | null): number {\r\n  // Handle null/undefined cases\r\n  if (originalPrice === null || originalPrice === undefined || originalPrice <= 0) {\r\n    return 0\r\n  }\r\n\r\n  if (discountedPrice === null || discountedPrice === undefined) {\r\n    return 0\r\n  }\r\n\r\n  if (discountedPrice >= originalPrice) {\r\n    return 0\r\n  }\r\n\r\n  // Special case: if discounted price is 0, it's 100% discount\r\n  if (discountedPrice === 0 && originalPrice > 0) {\r\n    return 100\r\n  }\r\n\r\n  const discount = ((originalPrice - discountedPrice) / originalPrice) * 100\r\n  return Math.round(discount)\r\n}\r\n\r\n/**\r\n * Validates email format\r\n */\r\nexport function validateEmail(email: string | null | undefined): boolean {\r\n  if (!email || typeof email !== 'string') {\r\n    return false\r\n  }\r\n\r\n  // More strict email validation\r\n  const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9][a-zA-Z0-9.-]*[a-zA-Z0-9]\\.[a-zA-Z]{2,}$/\r\n\r\n  // Additional checks\r\n  if (email.includes('..') || email.startsWith('.') || email.endsWith('.')) {\r\n    return false\r\n  }\r\n\r\n  if (email.includes('@.') || email.includes('.@')) {\r\n    return false\r\n  }\r\n\r\n  return emailRegex.test(email)\r\n}\r\n\r\n/**\r\n * Generates a URL-friendly slug from a string\r\n */\r\nexport function generateSlug(text: string | null | undefined): string {\r\n  if (!text) {\r\n    return ''\r\n  }\r\n  \r\n  return String(text)\r\n    .toLowerCase()\r\n    .trim()\r\n    .replace(/[áàäâ]/g, 'a')\r\n    .replace(/[éèëê]/g, 'e')\r\n    .replace(/[íìïî]/g, 'i')\r\n    .replace(/[óòöô]/g, 'o')\r\n    .replace(/[úùüû]/g, 'u')\r\n    .replace(/ñ/g, 'n')\r\n    .replace(/[^a-z0-9\\s-]/g, '')\r\n    .replace(/\\s+/g, '-')\r\n    .replace(/-+/g, '-')\r\n    .replace(/^-|-$/g, '')\r\n}\r\n\r\n/**\r\n * Formats phone number for display\r\n */\r\nexport function formatPhoneNumber(phone: string): string {\r\n  if (!phone) {\r\n    return ''\r\n  }\r\n\r\n  // If already formatted, return as is\r\n  if (phone.includes('(') && phone.includes(')') && phone.includes('-')) {\r\n    return phone\r\n  }\r\n\r\n  // Remove all non-numeric characters\r\n  const cleaned = phone.replace(/\\D/g, '')\r\n\r\n  // Format based on length\r\n  if (cleaned.length === 10) {\r\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6)}`\r\n  }\r\n\r\n  if (cleaned.length === 11) {\r\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 7)}-${cleaned.slice(7)}`\r\n  }\r\n\r\n  // Return original if doesn't match expected format\r\n  return phone\r\n}\r\n\r\n/**\r\n * Calculates shipping cost based on weight, location, and order total\r\n */\r\nexport function calculateShipping(\r\n  weight: number,\r\n  location: string,\r\n  orderTotal: number = 0,\r\n  express: boolean = false\r\n): number {\r\n  // Free shipping threshold\r\n  const freeShippingThreshold = 15000\r\n\r\n  if (orderTotal >= freeShippingThreshold) {\r\n    return 0\r\n  }\r\n\r\n  // Base rates by location\r\n  const locationRates: { [key: string]: number } = {\r\n    'CABA': 500,\r\n    'Buenos Aires': 800,\r\n    'Córdoba': 1200,\r\n    'Santa Fe': 1100,\r\n    'Mendoza': 1400,\r\n  }\r\n\r\n  const baseRate = locationRates[location] || 1500\r\n\r\n  // Weight multiplier (every 5kg adds 50% to base rate)\r\n  const weightMultiplier = 1 + Math.floor(weight / 5) * 0.5\r\n\r\n  // Express shipping doubles the cost\r\n  const expressMultiplier = express ? 2 : 1\r\n\r\n  return Math.round(baseRate * weightMultiplier * expressMultiplier)\r\n}\r\n\r\n/**\r\n * Validates cart item structure\r\n */\r\nexport function validateCartItem(item: unknown): boolean {\r\n  if (!item || typeof item !== 'object') {\r\n    return false\r\n  }\r\n  \r\n  const cartItem = item as Record<string, unknown>;\r\n  \r\n  // Required fields\r\n  if (!cartItem.id || !cartItem.name || !cartItem.price || !cartItem.quantity) {\r\n    return false\r\n  }\r\n  \r\n  // Validate types\r\n  if (typeof cartItem.price !== 'number' || cartItem.price <= 0) {\r\n    return false\r\n  }\r\n  \r\n  if (typeof cartItem.quantity !== 'number' || cartItem.quantity <= 0) {\r\n    return false\r\n  }\r\n  \r\n  // Validate stock if provided\r\n  if (cartItem.stock !== undefined && typeof cartItem.stock === 'number' && cartItem.quantity > cartItem.stock) {\r\n    return false\r\n  }\r\n  \r\n  return true\r\n}\r\n\r\n/**\r\n * Sanitizes user input to prevent XSS\r\n */\r\nexport function sanitizeInput(input: string | null | undefined): string {\r\n  if (!input) {\r\n    return ''\r\n  }\r\n  \r\n  return String(input)\r\n    .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '')\r\n    .replace(/<[^>]*>/g, '')\r\n    .trim()\r\n}\r\n\r\n/**\r\n * Debounce function for search inputs\r\n */\r\nexport function debounce<T extends (...args: unknown[]) => unknown>(\r\n  func: T,\r\n  wait: number\r\n): (...args: Parameters<T>) => void {\r\n  let timeout: NodeJS.Timeout\r\n  \r\n  return (...args: Parameters<T>) => {\r\n    clearTimeout(timeout)\r\n    timeout = setTimeout(() => func(...args), wait)\r\n  }\r\n}\r\n\r\n/**\r\n * Formats date for display\r\n */\r\nexport function formatDate(date: string | Date): string {\r\n  const dateObj = typeof date === 'string' ? new Date(date) : date\r\n  \r\n  return new Intl.DateTimeFormat('es-AR', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n  }).format(dateObj)\r\n}\r\n\r\n/**\r\n * Calculates estimated delivery date\r\n */\r\nexport function calculateDeliveryDate(location: string, express: boolean = false): Date {\r\n  const now = new Date()\r\n  let daysToAdd = 3 // Default delivery time\r\n  \r\n  // Location-based delivery times\r\n  const deliveryTimes: { [key: string]: number } = {\r\n    'CABA': 1,\r\n    'Buenos Aires': 2,\r\n    'Córdoba': 4,\r\n    'Santa Fe': 3,\r\n    'Mendoza': 5,\r\n  }\r\n  \r\n  daysToAdd = deliveryTimes[location] || 7\r\n  \r\n  // Express shipping halves delivery time (minimum 1 day)\r\n  if (express) {\r\n    daysToAdd = Math.max(1, Math.floor(daysToAdd / 2))\r\n  }\r\n  \r\n  const deliveryDate = new Date(now)\r\n  deliveryDate.setDate(now.getDate() + daysToAdd)\r\n  \r\n  return deliveryDate\r\n}\r\n\r\n/**\r\n * Validates Argentine DNI format\r\n */\r\nexport function validateDNI(dni: string): boolean {\r\n  if (!dni) {\r\n    return false\r\n  }\r\n  \r\n  // Remove dots and spaces\r\n  const cleaned = dni.replace(/[.\\s]/g, '')\r\n  \r\n  // Check if it's 7-8 digits\r\n  return /^\\d{7,8}$/.test(cleaned)\r\n}\r\n\r\n/**\r\n * Formats DNI for display\r\n */\r\nexport function formatDNI(dni: string): string {\r\n  if (!dni) {\r\n    return ''\r\n  }\r\n  \r\n  const cleaned = dni.replace(/[.\\s]/g, '')\r\n  \r\n  if (cleaned.length === 8) {\r\n    return `${cleaned.slice(0, 2)}.${cleaned.slice(2, 5)}.${cleaned.slice(5)}`\r\n  }\r\n  \r\n  if (cleaned.length === 7) {\r\n    return `${cleaned.slice(0, 1)}.${cleaned.slice(1, 4)}.${cleaned.slice(4)}`\r\n  }\r\n  \r\n  return dni\r\n}\r\n\r\n/**\r\n * Generates a random order reference\r\n */\r\nexport function generateOrderReference(): string {\r\n  const timestamp = Date.now()\r\n  const random = Math.random().toString(36).substring(2, 8)\r\n  return `PINTEYA-${timestamp}-${random.toUpperCase()}`\r\n}\r\n\r\n/**\r\n * Checks if a string contains only numbers\r\n */\r\nexport function isNumeric(str: string): boolean {\r\n  return /^\\d+$/.test(str)\r\n}\r\n\r\n/**\r\n * Capitalizes first letter of each word\r\n */\r\nexport function capitalizeWords(str: string): string {\r\n  return str.replace(/\\w\\S*/g, (txt) => \r\n    txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["calculateDeliveryDate","calculateDiscount","calculateShipping","capitalizeWords","debounce","formatDNI","formatDate","formatPhoneNumber","formatPrice","generateOrderReference","generateSlug","isNumeric","sanitizeInput","validateCartItem","validateDNI","validateEmail","price","undefined","isNaN","roundedPrice","Math","round","formatted","toLocaleString","originalPrice","discountedPrice","discount","email","emailRegex","includes","startsWith","endsWith","test","text","String","toLowerCase","trim","replace","phone","cleaned","length","slice","weight","location","orderTotal","express","freeShippingThreshold","locationRates","baseRate","weightMultiplier","floor","expressMultiplier","item","cartItem","id","name","quantity","stock","input","func","wait","timeout","args","clearTimeout","setTimeout","date","dateObj","Date","Intl","DateTimeFormat","year","month","day","format","now","daysToAdd","deliveryTimes","max","deliveryDate","setDate","getDate","dni","timestamp","random","toString","substring","toUpperCase","str","txt","charAt","substr"],"mappings":"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"}