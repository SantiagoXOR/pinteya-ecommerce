b70880dd2b0b5d36551809d5ab0ed518
"use strict";

/* istanbul ignore next */
function cov_9rd298t8x() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\optimization\\useShopDetailsReducer.ts";
  var hash = "c40906d3b5f4ad0bc05701c6733017e4b6a02bfe";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\optimization\\useShopDetailsReducer.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 37
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 45
        }
      },
      "6": {
        start: {
          line: 19,
          column: 15
        },
        end: {
          line: 19,
          column: 31
        }
      },
      "7": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 31,
          column: 1
        }
      },
      "8": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "9": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 39,
          column: 14
        }
      },
      "10": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 44,
          column: 14
        }
      },
      "11": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 49,
          column: 14
        }
      },
      "12": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 54,
          column: 14
        }
      },
      "13": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 59,
          column: 14
        }
      },
      "14": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 64,
          column: 14
        }
      },
      "15": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 69,
          column: 14
        }
      },
      "16": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 74,
          column: 14
        }
      },
      "17": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 79,
          column: 14
        }
      },
      "18": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 84,
          column: 14
        }
      },
      "19": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 89,
          column: 14
        }
      },
      "20": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 32
        }
      },
      "21": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 25
        }
      },
      "22": {
        start: {
          line: 97,
          column: 30
        },
        end: {
          line: 97,
          column: 86
        }
      },
      "23": {
        start: {
          line: 99,
          column: 20
        },
        end: {
          line: 145,
          column: 15
        }
      },
      "24": {
        start: {
          line: 99,
          column: 45
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "25": {
        start: {
          line: 100,
          column: 37
        },
        end: {
          line: 103,
          column: 18
        }
      },
      "26": {
        start: {
          line: 104,
          column: 36
        },
        end: {
          line: 107,
          column: 18
        }
      },
      "27": {
        start: {
          line: 108,
          column: 35
        },
        end: {
          line: 111,
          column: 18
        }
      },
      "28": {
        start: {
          line: 112,
          column: 29
        },
        end: {
          line: 115,
          column: 18
        }
      },
      "29": {
        start: {
          line: 116,
          column: 27
        },
        end: {
          line: 119,
          column: 18
        }
      },
      "30": {
        start: {
          line: 120,
          column: 37
        },
        end: {
          line: 123,
          column: 18
        }
      },
      "31": {
        start: {
          line: 124,
          column: 33
        },
        end: {
          line: 127,
          column: 18
        }
      },
      "32": {
        start: {
          line: 128,
          column: 35
        },
        end: {
          line: 131,
          column: 18
        }
      },
      "33": {
        start: {
          line: 132,
          column: 31
        },
        end: {
          line: 135,
          column: 18
        }
      },
      "34": {
        start: {
          line: 136,
          column: 35
        },
        end: {
          line: 138,
          column: 18
        }
      },
      "35": {
        start: {
          line: 139,
          column: 35
        },
        end: {
          line: 141,
          column: 18
        }
      },
      "36": {
        start: {
          line: 142,
          column: 28
        },
        end: {
          line: 144,
          column: 18
        }
      },
      "37": {
        start: {
          line: 147,
          column: 22
        },
        end: {
          line: 167,
          column: 6
        }
      },
      "38": {
        start: {
          line: 147,
          column: 47
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "39": {
        start: {
          line: 164,
          column: 40
        },
        end: {
          line: 164,
          column: 66
        }
      },
      "40": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 172,
          column: 6
        }
      },
      "41": {
        start: {
          line: 175,
          column: 42
        },
        end: {
          line: 175,
          column: 65
        }
      },
      "42": {
        start: {
          line: 177,
          column: 31
        },
        end: {
          line: 227,
          column: 6
        }
      },
      "43": {
        start: {
          line: 177,
          column: 56
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "44": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 182,
          column: 17
        }
      },
      "45": {
        start: {
          line: 180,
          column: 32
        },
        end: {
          line: 180,
          column: 59
        }
      },
      "46": {
        start: {
          line: 181,
          column: 20
        },
        end: {
          line: 181,
          column: 69
        }
      },
      "47": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 218,
          column: 17
        }
      },
      "48": {
        start: {
          line: 189,
          column: 32
        },
        end: {
          line: 189,
          column: 59
        }
      },
      "49": {
        start: {
          line: 190,
          column: 34
        },
        end: {
          line: 190,
          column: 59
        }
      },
      "50": {
        start: {
          line: 191,
          column: 20
        },
        end: {
          line: 217,
          column: 21
        }
      },
      "51": {
        start: {
          line: 192,
          column: 24
        },
        end: {
          line: 216,
          column: 25
        }
      },
      "52": {
        start: {
          line: 193,
          column: 48
        },
        end: {
          line: 193,
          column: 65
        }
      },
      "53": {
        start: {
          line: 195,
          column: 28
        },
        end: {
          line: 213,
          column: 31
        }
      },
      "54": {
        start: {
          line: 196,
          column: 32
        },
        end: {
          line: 212,
          column: 33
        }
      },
      "55": {
        start: {
          line: 198,
          column: 40
        },
        end: {
          line: 198,
          column: 70
        }
      },
      "56": {
        start: {
          line: 199,
          column: 40
        },
        end: {
          line: 199,
          column: 46
        }
      },
      "57": {
        start: {
          line: 201,
          column: 40
        },
        end: {
          line: 201,
          column: 66
        }
      },
      "58": {
        start: {
          line: 202,
          column: 40
        },
        end: {
          line: 202,
          column: 46
        }
      },
      "59": {
        start: {
          line: 204,
          column: 40
        },
        end: {
          line: 204,
          column: 63
        }
      },
      "60": {
        start: {
          line: 205,
          column: 40
        },
        end: {
          line: 205,
          column: 46
        }
      },
      "61": {
        start: {
          line: 207,
          column: 40
        },
        end: {
          line: 207,
          column: 62
        }
      },
      "62": {
        start: {
          line: 208,
          column: 40
        },
        end: {
          line: 208,
          column: 46
        }
      },
      "63": {
        start: {
          line: 210,
          column: 40
        },
        end: {
          line: 210,
          column: 67
        }
      },
      "64": {
        start: {
          line: 211,
          column: 40
        },
        end: {
          line: 211,
          column: 46
        }
      },
      "65": {
        start: {
          line: 215,
          column: 28
        },
        end: {
          line: 215,
          column: 92
        }
      },
      "66": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 233,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 33
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 41
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "shopDetailsReducer",
        decl: {
          start: {
            line: 33,
            column: 9
          },
          end: {
            line: 33,
            column: 27
          }
        },
        loc: {
          start: {
            line: 33,
            column: 43
          },
          end: {
            line: 95,
            column: 1
          }
        },
        line: 33
      },
      "4": {
        name: "useShopDetailsReducer",
        decl: {
          start: {
            line: 96,
            column: 9
          },
          end: {
            line: 96,
            column: 30
          }
        },
        loc: {
          start: {
            line: 96,
            column: 33
          },
          end: {
            line: 173,
            column: 1
          }
        },
        line: 96
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 99,
            column: 40
          },
          end: {
            line: 99,
            column: 41
          }
        },
        loc: {
          start: {
            line: 99,
            column: 45
          },
          end: {
            line: 145,
            column: 9
          }
        },
        line: 99
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 100,
            column: 28
          },
          end: {
            line: 100,
            column: 29
          }
        },
        loc: {
          start: {
            line: 100,
            column: 37
          },
          end: {
            line: 103,
            column: 18
          }
        },
        line: 100
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 104,
            column: 27
          },
          end: {
            line: 104,
            column: 28
          }
        },
        loc: {
          start: {
            line: 104,
            column: 36
          },
          end: {
            line: 107,
            column: 18
          }
        },
        line: 104
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 108,
            column: 24
          },
          end: {
            line: 108,
            column: 25
          }
        },
        loc: {
          start: {
            line: 108,
            column: 35
          },
          end: {
            line: 111,
            column: 18
          }
        },
        line: 108
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 112,
            column: 21
          },
          end: {
            line: 112,
            column: 22
          }
        },
        loc: {
          start: {
            line: 112,
            column: 29
          },
          end: {
            line: 115,
            column: 18
          }
        },
        line: 112
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 116,
            column: 20
          },
          end: {
            line: 116,
            column: 21
          }
        },
        loc: {
          start: {
            line: 116,
            column: 27
          },
          end: {
            line: 119,
            column: 18
          }
        },
        line: 116
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 120,
            column: 25
          },
          end: {
            line: 120,
            column: 26
          }
        },
        loc: {
          start: {
            line: 120,
            column: 37
          },
          end: {
            line: 123,
            column: 18
          }
        },
        line: 120
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 124,
            column: 26
          },
          end: {
            line: 124,
            column: 27
          }
        },
        loc: {
          start: {
            line: 124,
            column: 33
          },
          end: {
            line: 127,
            column: 18
          }
        },
        line: 124
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 128,
            column: 24
          },
          end: {
            line: 128,
            column: 25
          }
        },
        loc: {
          start: {
            line: 128,
            column: 35
          },
          end: {
            line: 131,
            column: 18
          }
        },
        line: 128
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 132,
            column: 22
          },
          end: {
            line: 132,
            column: 23
          }
        },
        loc: {
          start: {
            line: 132,
            column: 31
          },
          end: {
            line: 135,
            column: 18
          }
        },
        line: 132
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 136,
            column: 31
          },
          end: {
            line: 136,
            column: 32
          }
        },
        loc: {
          start: {
            line: 136,
            column: 35
          },
          end: {
            line: 138,
            column: 18
          }
        },
        line: 136
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 139,
            column: 31
          },
          end: {
            line: 139,
            column: 32
          }
        },
        loc: {
          start: {
            line: 139,
            column: 35
          },
          end: {
            line: 141,
            column: 18
          }
        },
        line: 139
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 142,
            column: 24
          },
          end: {
            line: 142,
            column: 25
          }
        },
        loc: {
          start: {
            line: 142,
            column: 28
          },
          end: {
            line: 144,
            column: 18
          }
        },
        line: 142
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 147,
            column: 42
          },
          end: {
            line: 147,
            column: 43
          }
        },
        loc: {
          start: {
            line: 147,
            column: 47
          },
          end: {
            line: 165,
            column: 9
          }
        },
        line: 147
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 164,
            column: 27
          },
          end: {
            line: 164,
            column: 28
          }
        },
        loc: {
          start: {
            line: 164,
            column: 40
          },
          end: {
            line: 164,
            column: 66
          }
        },
        line: 164
      },
      "20": {
        name: "useShopDetailsWithPersistence",
        decl: {
          start: {
            line: 174,
            column: 9
          },
          end: {
            line: 174,
            column: 38
          }
        },
        loc: {
          start: {
            line: 174,
            column: 50
          },
          end: {
            line: 234,
            column: 1
          }
        },
        line: 174
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 177,
            column: 51
          },
          end: {
            line: 177,
            column: 52
          }
        },
        loc: {
          start: {
            line: 177,
            column: 56
          },
          end: {
            line: 223,
            column: 9
          }
        },
        line: 177
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 178,
            column: 51
          },
          end: {
            line: 178,
            column: 52
          }
        },
        loc: {
          start: {
            line: 178,
            column: 55
          },
          end: {
            line: 183,
            column: 13
          }
        },
        line: 178
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 187,
            column: 53
          },
          end: {
            line: 187,
            column: 54
          }
        },
        loc: {
          start: {
            line: 187,
            column: 57
          },
          end: {
            line: 219,
            column: 13
          }
        },
        line: 187
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 195,
            column: 64
          },
          end: {
            line: 195,
            column: 65
          }
        },
        loc: {
          start: {
            line: 195,
            column: 80
          },
          end: {
            line: 213,
            column: 29
          }
        },
        line: 195
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 39,
            column: 14
          }
        }, {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 44,
            column: 14
          }
        }, {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 49,
            column: 14
          }
        }, {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 54,
            column: 14
          }
        }, {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 59,
            column: 14
          }
        }, {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 64,
            column: 14
          }
        }, {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 69,
            column: 14
          }
        }, {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 74,
            column: 14
          }
        }, {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 79,
            column: 14
          }
        }, {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 84,
            column: 14
          }
        }, {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 89,
            column: 14
          }
        }, {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 91,
            column: 32
          }
        }, {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 93,
            column: 25
          }
        }],
        line: 34
      },
      "1": {
        loc: {
          start: {
            line: 179,
            column: 16
          },
          end: {
            line: 182,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 16
          },
          end: {
            line: 182,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "2": {
        loc: {
          start: {
            line: 188,
            column: 16
          },
          end: {
            line: 218,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 16
          },
          end: {
            line: 218,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "3": {
        loc: {
          start: {
            line: 191,
            column: 20
          },
          end: {
            line: 217,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 20
          },
          end: {
            line: 217,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "4": {
        loc: {
          start: {
            line: 196,
            column: 32
          },
          end: {
            line: 212,
            column: 33
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 197,
            column: 36
          },
          end: {
            line: 199,
            column: 46
          }
        }, {
          start: {
            line: 200,
            column: 36
          },
          end: {
            line: 202,
            column: 46
          }
        }, {
          start: {
            line: 203,
            column: 36
          },
          end: {
            line: 205,
            column: 46
          }
        }, {
          start: {
            line: 206,
            column: 36
          },
          end: {
            line: 208,
            column: 46
          }
        }, {
          start: {
            line: 209,
            column: 36
          },
          end: {
            line: 211,
            column: 46
          }
        }],
        line: 196
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\optimization\\useShopDetailsReducer.ts"],
      sourcesContent: ["import { useReducer, useCallback, useMemo } from 'react';\r\n\r\n// Tipos para el estado del componente ShopDetails\r\ninterface ShopDetailsState {\r\n  activeColor: string;\r\n  previewImg: number;\r\n  storage: string;\r\n  type: string;\r\n  sim: string;\r\n  quantity: number;\r\n  activeTab: string;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n}\r\n\r\n// Tipos de acciones\r\ntype ShopDetailsAction =\r\n  | { type: 'SET_ACTIVE_COLOR'; payload: string }\r\n  | { type: 'SET_PREVIEW_IMG'; payload: number }\r\n  | { type: 'SET_STORAGE'; payload: string }\r\n  | { type: 'SET_TYPE'; payload: string }\r\n  | { type: 'SET_SIM'; payload: string }\r\n  | { type: 'SET_QUANTITY'; payload: number }\r\n  | { type: 'SET_ACTIVE_TAB'; payload: string }\r\n  | { type: 'SET_LOADING'; payload: boolean }\r\n  | { type: 'SET_ERROR'; payload: string | null }\r\n  | { type: 'RESET_STATE' }\r\n  | { type: 'INCREMENT_QUANTITY' }\r\n  | { type: 'DECREMENT_QUANTITY' };\r\n\r\n// Estado inicial\r\nconst initialState: ShopDetailsState = {\r\n  activeColor: 'blanco-puro', // Usar ID del color por defecto\r\n  previewImg: 0,\r\n  storage: 'gb128',\r\n  type: 'active',\r\n  sim: 'dual',\r\n  quantity: 1,\r\n  activeTab: 'tabOne',\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\n// Reducer function\r\nfunction shopDetailsReducer(\r\n  state: ShopDetailsState,\r\n  action: ShopDetailsAction\r\n): ShopDetailsState {\r\n  switch (action.type) {\r\n    case 'SET_ACTIVE_COLOR':\r\n      return { ...state, activeColor: action.payload };\r\n    \r\n    case 'SET_PREVIEW_IMG':\r\n      return { ...state, previewImg: action.payload };\r\n    \r\n    case 'SET_STORAGE':\r\n      return { ...state, storage: action.payload };\r\n    \r\n    case 'SET_TYPE':\r\n      return { ...state, type: action.payload };\r\n    \r\n    case 'SET_SIM':\r\n      return { ...state, sim: action.payload };\r\n    \r\n    case 'SET_QUANTITY':\r\n      return { \r\n        ...state, \r\n        quantity: Math.max(1, Math.min(99, action.payload)) // L\xEDmites de cantidad\r\n      };\r\n    \r\n    case 'SET_ACTIVE_TAB':\r\n      return { ...state, activeTab: action.payload };\r\n    \r\n    case 'SET_LOADING':\r\n      return { ...state, isLoading: action.payload };\r\n    \r\n    case 'SET_ERROR':\r\n      return { ...state, error: action.payload };\r\n    \r\n    case 'INCREMENT_QUANTITY':\r\n      return { \r\n        ...state, \r\n        quantity: Math.min(99, state.quantity + 1)\r\n      };\r\n    \r\n    case 'DECREMENT_QUANTITY':\r\n      return { \r\n        ...state, \r\n        quantity: Math.max(1, state.quantity - 1)\r\n      };\r\n    \r\n    case 'RESET_STATE':\r\n      return initialState;\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Hook personalizado\r\nexport function useShopDetailsReducer() {\r\n  const [state, dispatch] = useReducer(shopDetailsReducer, initialState);\r\n\r\n  // Acciones memoizadas\r\n  const actions = useMemo(() => ({\r\n    setActiveColor: (color: string) => \r\n      dispatch({ type: 'SET_ACTIVE_COLOR', payload: color }),\r\n    \r\n    setPreviewImg: (index: number) => \r\n      dispatch({ type: 'SET_PREVIEW_IMG', payload: index }),\r\n    \r\n    setStorage: (storage: string) => \r\n      dispatch({ type: 'SET_STORAGE', payload: storage }),\r\n    \r\n    setType: (type: string) => \r\n      dispatch({ type: 'SET_TYPE', payload: type }),\r\n    \r\n    setSim: (sim: string) => \r\n      dispatch({ type: 'SET_SIM', payload: sim }),\r\n    \r\n    setQuantity: (quantity: number) => \r\n      dispatch({ type: 'SET_QUANTITY', payload: quantity }),\r\n    \r\n    setActiveTab: (tab: string) => \r\n      dispatch({ type: 'SET_ACTIVE_TAB', payload: tab }),\r\n    \r\n    setLoading: (loading: boolean) => \r\n      dispatch({ type: 'SET_LOADING', payload: loading }),\r\n    \r\n    setError: (error: string | null) => \r\n      dispatch({ type: 'SET_ERROR', payload: error }),\r\n    \r\n    incrementQuantity: () => \r\n      dispatch({ type: 'INCREMENT_QUANTITY' }),\r\n    \r\n    decrementQuantity: () => \r\n      dispatch({ type: 'DECREMENT_QUANTITY' }),\r\n    \r\n    resetState: () => \r\n      dispatch({ type: 'RESET_STATE' }),\r\n  }), []);\r\n\r\n  // Selectores memoizados para valores derivados\r\n  const selectors = useMemo(() => ({\r\n    // Verificar si hay errores\r\n    hasError: Boolean(state.error),\r\n    \r\n    // Verificar si est\xE1 en estado de carga\r\n    isLoading: state.isLoading,\r\n    \r\n    // Obtener configuraci\xF3n actual del producto\r\n    currentConfig: {\r\n      color: state.activeColor,\r\n      storage: state.storage,\r\n      type: state.type,\r\n      sim: state.sim,\r\n      quantity: state.quantity,\r\n    },\r\n    \r\n    // Verificar si la cantidad est\xE1 en el l\xEDmite\r\n    isMaxQuantity: state.quantity >= 99,\r\n    isMinQuantity: state.quantity <= 1,\r\n    \r\n    // Obtener precio total basado en cantidad\r\n    getTotalPrice: (unitPrice: number) => unitPrice * state.quantity,\r\n  }), [state]);\r\n\r\n  return {\r\n    state,\r\n    actions,\r\n    selectors,\r\n  };\r\n}\r\n\r\n// Hook para manejar la persistencia en localStorage\r\nexport function useShopDetailsWithPersistence(productId?: string) {\r\n  const { state, actions, selectors } = useShopDetailsReducer();\r\n  \r\n  // Callbacks memoizados para persistencia\r\n  const persistenceActions = useMemo(() => ({\r\n    saveToStorage: useCallback(() => {\r\n      if (productId) {\r\n        const key = `shop-details-${productId}`;\r\n        localStorage.setItem(key, JSON.stringify(state));\r\n      }\r\n    }, [state, productId]),\r\n    \r\n    loadFromStorage: useCallback(() => {\r\n      if (productId) {\r\n        const key = `shop-details-${productId}`;\r\n        const saved = localStorage.getItem(key);\r\n        if (saved) {\r\n          try {\r\n            const parsedState = JSON.parse(saved);\r\n            // Restaurar estado desde localStorage\r\n            Object.entries(parsedState).forEach(([key, value]) => {\r\n              switch (key) {\r\n                case 'activeColor':\r\n                  actions.setActiveColor(value as string);\r\n                  break;\r\n                case 'storage':\r\n                  actions.setStorage(value as string);\r\n                  break;\r\n                case 'type':\r\n                  actions.setType(value as string);\r\n                  break;\r\n                case 'sim':\r\n                  actions.setSim(value as string);\r\n                  break;\r\n                case 'quantity':\r\n                  actions.setQuantity(value as number);\r\n                  break;\r\n              }\r\n            });\r\n          } catch (error) {\r\n            console.warn('Error loading shop details from storage:', error);\r\n          }\r\n        }\r\n      }\r\n    }, [productId, actions]),\r\n  }), [state, productId, actions]);\r\n\r\n  return {\r\n    state,\r\n    actions,\r\n    selectors,\r\n    persistenceActions,\r\n  };\r\n}\r\n\r\nexport type { ShopDetailsState, ShopDetailsAction };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useShopDetailsReducer", "useShopDetailsWithPersistence", "initialState", "activeColor", "previewImg", "storage", "type", "sim", "quantity", "activeTab", "isLoading", "error", "shopDetailsReducer", "state", "action", "payload", "Math", "max", "min", "dispatch", "useReducer", "actions", "useMemo", "setActiveColor", "color", "setPreviewImg", "index", "setStorage", "setType", "setSim", "setQuantity", "setActiveTab", "tab", "setLoading", "loading", "setError", "incrementQuantity", "decrementQuantity", "resetState", "selectors", "hasError", "Boolean", "currentConfig", "isMaxQuantity", "isMinQuantity", "getTotalPrice", "unitPrice", "productId", "persistenceActions", "saveToStorage", "useCallback", "key", "localStorage", "setItem", "JSON", "stringify", "loadFromStorage", "saved", "getItem", "parsedState", "parse", "Object", "entries", "forEach", "value", "console", "warn"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c40906d3b5f4ad0bc05701c6733017e4b6a02bfe"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_9rd298t8x = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_9rd298t8x();
cov_9rd298t8x().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_9rd298t8x().f[0]++;
  cov_9rd298t8x().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_9rd298t8x().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_9rd298t8x().s[3]++;
_export(exports, {
  get useShopDetailsReducer() {
    /* istanbul ignore next */
    cov_9rd298t8x().f[1]++;
    cov_9rd298t8x().s[4]++;
    return useShopDetailsReducer;
  },
  get useShopDetailsWithPersistence() {
    /* istanbul ignore next */
    cov_9rd298t8x().f[2]++;
    cov_9rd298t8x().s[5]++;
    return useShopDetailsWithPersistence;
  }
});
const _react =
/* istanbul ignore next */
(cov_9rd298t8x().s[6]++, require("react"));
// Estado inicial
const initialState =
/* istanbul ignore next */
(cov_9rd298t8x().s[7]++, {
  activeColor: 'blanco-puro',
  previewImg: 0,
  storage: 'gb128',
  type: 'active',
  sim: 'dual',
  quantity: 1,
  activeTab: 'tabOne',
  isLoading: false,
  error: null
});
// Reducer function
function shopDetailsReducer(state, action) {
  /* istanbul ignore next */
  cov_9rd298t8x().f[3]++;
  cov_9rd298t8x().s[8]++;
  switch (action.type) {
    case 'SET_ACTIVE_COLOR':
      /* istanbul ignore next */
      cov_9rd298t8x().b[0][0]++;
      cov_9rd298t8x().s[9]++;
      return {
        ...state,
        activeColor: action.payload
      };
    case 'SET_PREVIEW_IMG':
      /* istanbul ignore next */
      cov_9rd298t8x().b[0][1]++;
      cov_9rd298t8x().s[10]++;
      return {
        ...state,
        previewImg: action.payload
      };
    case 'SET_STORAGE':
      /* istanbul ignore next */
      cov_9rd298t8x().b[0][2]++;
      cov_9rd298t8x().s[11]++;
      return {
        ...state,
        storage: action.payload
      };
    case 'SET_TYPE':
      /* istanbul ignore next */
      cov_9rd298t8x().b[0][3]++;
      cov_9rd298t8x().s[12]++;
      return {
        ...state,
        type: action.payload
      };
    case 'SET_SIM':
      /* istanbul ignore next */
      cov_9rd298t8x().b[0][4]++;
      cov_9rd298t8x().s[13]++;
      return {
        ...state,
        sim: action.payload
      };
    case 'SET_QUANTITY':
      /* istanbul ignore next */
      cov_9rd298t8x().b[0][5]++;
      cov_9rd298t8x().s[14]++;
      return {
        ...state,
        quantity: Math.max(1, Math.min(99, action.payload)) // Límites de cantidad
      };
    case 'SET_ACTIVE_TAB':
      /* istanbul ignore next */
      cov_9rd298t8x().b[0][6]++;
      cov_9rd298t8x().s[15]++;
      return {
        ...state,
        activeTab: action.payload
      };
    case 'SET_LOADING':
      /* istanbul ignore next */
      cov_9rd298t8x().b[0][7]++;
      cov_9rd298t8x().s[16]++;
      return {
        ...state,
        isLoading: action.payload
      };
    case 'SET_ERROR':
      /* istanbul ignore next */
      cov_9rd298t8x().b[0][8]++;
      cov_9rd298t8x().s[17]++;
      return {
        ...state,
        error: action.payload
      };
    case 'INCREMENT_QUANTITY':
      /* istanbul ignore next */
      cov_9rd298t8x().b[0][9]++;
      cov_9rd298t8x().s[18]++;
      return {
        ...state,
        quantity: Math.min(99, state.quantity + 1)
      };
    case 'DECREMENT_QUANTITY':
      /* istanbul ignore next */
      cov_9rd298t8x().b[0][10]++;
      cov_9rd298t8x().s[19]++;
      return {
        ...state,
        quantity: Math.max(1, state.quantity - 1)
      };
    case 'RESET_STATE':
      /* istanbul ignore next */
      cov_9rd298t8x().b[0][11]++;
      cov_9rd298t8x().s[20]++;
      return initialState;
    default:
      /* istanbul ignore next */
      cov_9rd298t8x().b[0][12]++;
      cov_9rd298t8x().s[21]++;
      return state;
  }
}
function useShopDetailsReducer() {
  /* istanbul ignore next */
  cov_9rd298t8x().f[4]++;
  const [state, dispatch] =
  /* istanbul ignore next */
  (cov_9rd298t8x().s[22]++, (0, _react.useReducer)(shopDetailsReducer, initialState));
  // Acciones memoizadas
  const actions =
  /* istanbul ignore next */
  (cov_9rd298t8x().s[23]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_9rd298t8x().f[5]++;
    cov_9rd298t8x().s[24]++;
    return {
      setActiveColor: color => {
        /* istanbul ignore next */
        cov_9rd298t8x().f[6]++;
        cov_9rd298t8x().s[25]++;
        return dispatch({
          type: 'SET_ACTIVE_COLOR',
          payload: color
        });
      },
      setPreviewImg: index => {
        /* istanbul ignore next */
        cov_9rd298t8x().f[7]++;
        cov_9rd298t8x().s[26]++;
        return dispatch({
          type: 'SET_PREVIEW_IMG',
          payload: index
        });
      },
      setStorage: storage => {
        /* istanbul ignore next */
        cov_9rd298t8x().f[8]++;
        cov_9rd298t8x().s[27]++;
        return dispatch({
          type: 'SET_STORAGE',
          payload: storage
        });
      },
      setType: type => {
        /* istanbul ignore next */
        cov_9rd298t8x().f[9]++;
        cov_9rd298t8x().s[28]++;
        return dispatch({
          type: 'SET_TYPE',
          payload: type
        });
      },
      setSim: sim => {
        /* istanbul ignore next */
        cov_9rd298t8x().f[10]++;
        cov_9rd298t8x().s[29]++;
        return dispatch({
          type: 'SET_SIM',
          payload: sim
        });
      },
      setQuantity: quantity => {
        /* istanbul ignore next */
        cov_9rd298t8x().f[11]++;
        cov_9rd298t8x().s[30]++;
        return dispatch({
          type: 'SET_QUANTITY',
          payload: quantity
        });
      },
      setActiveTab: tab => {
        /* istanbul ignore next */
        cov_9rd298t8x().f[12]++;
        cov_9rd298t8x().s[31]++;
        return dispatch({
          type: 'SET_ACTIVE_TAB',
          payload: tab
        });
      },
      setLoading: loading => {
        /* istanbul ignore next */
        cov_9rd298t8x().f[13]++;
        cov_9rd298t8x().s[32]++;
        return dispatch({
          type: 'SET_LOADING',
          payload: loading
        });
      },
      setError: error => {
        /* istanbul ignore next */
        cov_9rd298t8x().f[14]++;
        cov_9rd298t8x().s[33]++;
        return dispatch({
          type: 'SET_ERROR',
          payload: error
        });
      },
      incrementQuantity: () => {
        /* istanbul ignore next */
        cov_9rd298t8x().f[15]++;
        cov_9rd298t8x().s[34]++;
        return dispatch({
          type: 'INCREMENT_QUANTITY'
        });
      },
      decrementQuantity: () => {
        /* istanbul ignore next */
        cov_9rd298t8x().f[16]++;
        cov_9rd298t8x().s[35]++;
        return dispatch({
          type: 'DECREMENT_QUANTITY'
        });
      },
      resetState: () => {
        /* istanbul ignore next */
        cov_9rd298t8x().f[17]++;
        cov_9rd298t8x().s[36]++;
        return dispatch({
          type: 'RESET_STATE'
        });
      }
    };
  }, []));
  // Selectores memoizados para valores derivados
  const selectors =
  /* istanbul ignore next */
  (cov_9rd298t8x().s[37]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_9rd298t8x().f[18]++;
    cov_9rd298t8x().s[38]++;
    return {
      // Verificar si hay errores
      hasError: Boolean(state.error),
      // Verificar si está en estado de carga
      isLoading: state.isLoading,
      // Obtener configuración actual del producto
      currentConfig: {
        color: state.activeColor,
        storage: state.storage,
        type: state.type,
        sim: state.sim,
        quantity: state.quantity
      },
      // Verificar si la cantidad está en el límite
      isMaxQuantity: state.quantity >= 99,
      isMinQuantity: state.quantity <= 1,
      // Obtener precio total basado en cantidad
      getTotalPrice: unitPrice => {
        /* istanbul ignore next */
        cov_9rd298t8x().f[19]++;
        cov_9rd298t8x().s[39]++;
        return unitPrice * state.quantity;
      }
    };
  }, [state]));
  /* istanbul ignore next */
  cov_9rd298t8x().s[40]++;
  return {
    state,
    actions,
    selectors
  };
}
function useShopDetailsWithPersistence(productId) {
  /* istanbul ignore next */
  cov_9rd298t8x().f[20]++;
  const {
    state,
    actions,
    selectors
  } =
  /* istanbul ignore next */
  (cov_9rd298t8x().s[41]++, useShopDetailsReducer());
  // Callbacks memoizados para persistencia
  const persistenceActions =
  /* istanbul ignore next */
  (cov_9rd298t8x().s[42]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_9rd298t8x().f[21]++;
    cov_9rd298t8x().s[43]++;
    return {
      saveToStorage: (0, _react.useCallback)(() => {
        /* istanbul ignore next */
        cov_9rd298t8x().f[22]++;
        cov_9rd298t8x().s[44]++;
        if (productId) {
          /* istanbul ignore next */
          cov_9rd298t8x().b[1][0]++;
          const key =
          /* istanbul ignore next */
          (cov_9rd298t8x().s[45]++, `shop-details-${productId}`);
          /* istanbul ignore next */
          cov_9rd298t8x().s[46]++;
          localStorage.setItem(key, JSON.stringify(state));
        } else
        /* istanbul ignore next */
        {
          cov_9rd298t8x().b[1][1]++;
        }
      }, [state, productId]),
      loadFromStorage: (0, _react.useCallback)(() => {
        /* istanbul ignore next */
        cov_9rd298t8x().f[23]++;
        cov_9rd298t8x().s[47]++;
        if (productId) {
          /* istanbul ignore next */
          cov_9rd298t8x().b[2][0]++;
          const key =
          /* istanbul ignore next */
          (cov_9rd298t8x().s[48]++, `shop-details-${productId}`);
          const saved =
          /* istanbul ignore next */
          (cov_9rd298t8x().s[49]++, localStorage.getItem(key));
          /* istanbul ignore next */
          cov_9rd298t8x().s[50]++;
          if (saved) {
            /* istanbul ignore next */
            cov_9rd298t8x().b[3][0]++;
            cov_9rd298t8x().s[51]++;
            try {
              const parsedState =
              /* istanbul ignore next */
              (cov_9rd298t8x().s[52]++, JSON.parse(saved));
              // Restaurar estado desde localStorage
              /* istanbul ignore next */
              cov_9rd298t8x().s[53]++;
              Object.entries(parsedState).forEach(([key, value]) => {
                /* istanbul ignore next */
                cov_9rd298t8x().f[24]++;
                cov_9rd298t8x().s[54]++;
                switch (key) {
                  case 'activeColor':
                    /* istanbul ignore next */
                    cov_9rd298t8x().b[4][0]++;
                    cov_9rd298t8x().s[55]++;
                    actions.setActiveColor(value);
                    /* istanbul ignore next */
                    cov_9rd298t8x().s[56]++;
                    break;
                  case 'storage':
                    /* istanbul ignore next */
                    cov_9rd298t8x().b[4][1]++;
                    cov_9rd298t8x().s[57]++;
                    actions.setStorage(value);
                    /* istanbul ignore next */
                    cov_9rd298t8x().s[58]++;
                    break;
                  case 'type':
                    /* istanbul ignore next */
                    cov_9rd298t8x().b[4][2]++;
                    cov_9rd298t8x().s[59]++;
                    actions.setType(value);
                    /* istanbul ignore next */
                    cov_9rd298t8x().s[60]++;
                    break;
                  case 'sim':
                    /* istanbul ignore next */
                    cov_9rd298t8x().b[4][3]++;
                    cov_9rd298t8x().s[61]++;
                    actions.setSim(value);
                    /* istanbul ignore next */
                    cov_9rd298t8x().s[62]++;
                    break;
                  case 'quantity':
                    /* istanbul ignore next */
                    cov_9rd298t8x().b[4][4]++;
                    cov_9rd298t8x().s[63]++;
                    actions.setQuantity(value);
                    /* istanbul ignore next */
                    cov_9rd298t8x().s[64]++;
                    break;
                }
              });
            } catch (error) {
              /* istanbul ignore next */
              cov_9rd298t8x().s[65]++;
              console.warn('Error loading shop details from storage:', error);
            }
          } else
          /* istanbul ignore next */
          {
            cov_9rd298t8x().b[3][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_9rd298t8x().b[2][1]++;
        }
      }, [productId, actions])
    };
  }, [state, productId, actions]));
  /* istanbul ignore next */
  cov_9rd298t8x().s[66]++;
  return {
    state,
    actions,
    selectors,
    persistenceActions
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,