5a2d5a4d651bb058c987ab9859c54063
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_2f6hw6qij8() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\seo\\testing\\route.ts";
  var hash = "180a0848e027a0c7dc6af95b8ac3451813230a5f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\seo\\testing\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 31,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 22
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 20
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 19
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "10": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 38
        }
      },
      "11": {
        start: {
          line: 33,
          column: 25
        },
        end: {
          line: 33,
          column: 73
        }
      },
      "12": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 60
        }
      },
      "13": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 24
        }
      },
      "14": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 136,
          column: 5
        }
      },
      "15": {
        start: {
          line: 38,
          column: 33
        },
        end: {
          line: 38,
          column: 53
        }
      },
      "16": {
        start: {
          line: 39,
          column: 23
        },
        end: {
          line: 39,
          column: 49
        }
      },
      "17": {
        start: {
          line: 40,
          column: 25
        },
        end: {
          line: 40,
          column: 53
        }
      },
      "18": {
        start: {
          line: 41,
          column: 22
        },
        end: {
          line: 41,
          column: 47
        }
      },
      "19": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "20": {
        start: {
          line: 44,
          column: 30
        },
        end: {
          line: 44,
          column: 88
        }
      },
      "21": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 48,
          column: 19
        }
      },
      "22": {
        start: {
          line: 50,
          column: 32
        },
        end: {
          line: 50,
          column: 124
        }
      },
      "23": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 54,
          column: 19
        }
      },
      "24": {
        start: {
          line: 56,
          column: 37
        },
        end: {
          line: 56,
          column: 99
        }
      },
      "25": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 60,
          column: 19
        }
      },
      "26": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 84,
          column: 17
        }
      },
      "27": {
        start: {
          line: 70,
          column: 20
        },
        end: {
          line: 83,
          column: 23
        }
      },
      "28": {
        start: {
          line: 85,
          column: 29
        },
        end: {
          line: 85,
          column: 65
        }
      },
      "29": {
        start: {
          line: 86,
          column: 36
        },
        end: {
          line: 86,
          column: 113
        }
      },
      "30": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 100,
          column: 19
        }
      },
      "31": {
        start: {
          line: 94,
          column: 60
        },
        end: {
          line: 94,
          column: 81
        }
      },
      "32": {
        start: {
          line: 95,
          column: 60
        },
        end: {
          line: 95,
          column: 81
        }
      },
      "33": {
        start: {
          line: 96,
          column: 62
        },
        end: {
          line: 96,
          column: 84
        }
      },
      "34": {
        start: {
          line: 97,
          column: 107
        },
        end: {
          line: 97,
          column: 120
        }
      },
      "35": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 125,
          column: 19
        }
      },
      "36": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 114
        }
      },
      "37": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 135,
          column: 11
        }
      },
      "38": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 247,
          column: 5
        }
      },
      "39": {
        start: {
          line: 140,
          column: 21
        },
        end: {
          line: 140,
          column: 41
        }
      },
      "40": {
        start: {
          line: 141,
          column: 52
        },
        end: {
          line: 141,
          column: 56
        }
      },
      "41": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "42": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 145,
          column: 95
        }
      },
      "43": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 22
        }
      },
      "44": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 163,
          column: 17
        }
      },
      "45": {
        start: {
          line: 149,
          column: 20
        },
        end: {
          line: 162,
          column: 23
        }
      },
      "46": {
        start: {
          line: 164,
          column: 35
        },
        end: {
          line: 164,
          column: 37
        }
      },
      "47": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 168,
          column: 17
        }
      },
      "48": {
        start: {
          line: 166,
          column: 40
        },
        end: {
          line: 166,
          column: 117
        }
      },
      "49": {
        start: {
          line: 167,
          column: 20
        },
        end: {
          line: 167,
          column: 52
        }
      },
      "50": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 179,
          column: 18
        }
      },
      "51": {
        start: {
          line: 174,
          column: 55
        },
        end: {
          line: 174,
          column: 76
        }
      },
      "52": {
        start: {
          line: 175,
          column: 55
        },
        end: {
          line: 175,
          column: 76
        }
      },
      "53": {
        start: {
          line: 176,
          column: 57
        },
        end: {
          line: 176,
          column: 79
        }
      },
      "54": {
        start: {
          line: 177,
          column: 101
        },
        end: {
          line: 177,
          column: 114
        }
      },
      "55": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 180,
          column: 22
        }
      },
      "56": {
        start: {
          line: 182,
          column: 40
        },
        end: {
          line: 182,
          column: 119
        }
      },
      "57": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 187,
          column: 18
        }
      },
      "58": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 188,
          column: 22
        }
      },
      "59": {
        start: {
          line: 190,
          column: 46
        },
        end: {
          line: 190,
          column: 132
        }
      },
      "60": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 195,
          column: 18
        }
      },
      "61": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 196,
          column: 22
        }
      },
      "62": {
        start: {
          line: 198,
          column: 37
        },
        end: {
          line: 198,
          column: 122
        }
      },
      "63": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 203,
          column: 18
        }
      },
      "64": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 204,
          column: 22
        }
      },
      "65": {
        start: {
          line: 206,
          column: 42
        },
        end: {
          line: 206,
          column: 123
        }
      },
      "66": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 211,
          column: 18
        }
      },
      "67": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 212,
          column: 22
        }
      },
      "68": {
        start: {
          line: 214,
          column: 16
        },
        end: {
          line: 227,
          column: 19
        }
      },
      "69": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 232,
          column: 36
        }
      },
      "70": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 237,
          column: 11
        }
      },
      "71": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 239,
          column: 115
        }
      },
      "72": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 246,
          column: 11
        }
      },
      "73": {
        start: {
          line: 250,
          column: 4
        },
        end: {
          line: 294,
          column: 5
        }
      },
      "74": {
        start: {
          line: 251,
          column: 21
        },
        end: {
          line: 251,
          column: 41
        }
      },
      "75": {
        start: {
          line: 252,
          column: 27
        },
        end: {
          line: 252,
          column: 31
        }
      },
      "76": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 273,
          column: 9
        }
      },
      "77": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 272,
          column: 15
        }
      },
      "78": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 274,
          column: 67
        }
      },
      "79": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 277,
          column: 36
        }
      },
      "80": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 284,
          column: 11
        }
      },
      "81": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 286,
          column: 114
        }
      },
      "82": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 293,
          column: 11
        }
      },
      "83": {
        start: {
          line: 297,
          column: 4
        },
        end: {
          line: 315,
          column: 5
        }
      },
      "84": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 298,
          column: 68
        }
      },
      "85": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 299,
          column: 115
        }
      },
      "86": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 305,
          column: 11
        }
      },
      "87": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 117
        }
      },
      "88": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 314,
          column: 11
        }
      },
      "89": {
        start: {
          line: 318,
          column: 4
        },
        end: {
          line: 325,
          column: 7
        }
      },
      "90": {
        start: {
          line: 331,
          column: 28
        },
        end: {
          line: 331,
          column: 30
        }
      },
      "91": {
        start: {
          line: 332,
          column: 25
        },
        end: {
          line: 332,
          column: 99
        }
      },
      "92": {
        start: {
          line: 332,
          column: 45
        },
        end: {
          line: 332,
          column: 98
        }
      },
      "93": {
        start: {
          line: 333,
          column: 31
        },
        end: {
          line: 333,
          column: 111
        }
      },
      "94": {
        start: {
          line: 333,
          column: 51
        },
        end: {
          line: 333,
          column: 110
        }
      },
      "95": {
        start: {
          line: 334,
          column: 27
        },
        end: {
          line: 334,
          column: 104
        }
      },
      "96": {
        start: {
          line: 334,
          column: 47
        },
        end: {
          line: 334,
          column: 103
        }
      },
      "97": {
        start: {
          line: 335,
          column: 28
        },
        end: {
          line: 335,
          column: 107
        }
      },
      "98": {
        start: {
          line: 335,
          column: 48
        },
        end: {
          line: 335,
          column: 106
        }
      },
      "99": {
        start: {
          line: 336,
          column: 4
        },
        end: {
          line: 338,
          column: 5
        }
      },
      "100": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 337,
          column: 108
        }
      },
      "101": {
        start: {
          line: 339,
          column: 4
        },
        end: {
          line: 341,
          column: 5
        }
      },
      "102": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 340,
          column: 116
        }
      },
      "103": {
        start: {
          line: 342,
          column: 4
        },
        end: {
          line: 344,
          column: 5
        }
      },
      "104": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 343,
          column: 114
        }
      },
      "105": {
        start: {
          line: 345,
          column: 4
        },
        end: {
          line: 347,
          column: 5
        }
      },
      "106": {
        start: {
          line: 346,
          column: 8
        },
        end: {
          line: 346,
          column: 113
        }
      },
      "107": {
        start: {
          line: 348,
          column: 4
        },
        end: {
          line: 350,
          column: 5
        }
      },
      "108": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 349,
          column: 88
        }
      },
      "109": {
        start: {
          line: 351,
          column: 4
        },
        end: {
          line: 351,
          column: 27
        }
      },
      "110": {
        start: {
          line: 354,
          column: 28
        },
        end: {
          line: 354,
          column: 30
        }
      },
      "111": {
        start: {
          line: 355,
          column: 27
        },
        end: {
          line: 355,
          column: 104
        }
      },
      "112": {
        start: {
          line: 355,
          column: 47
        },
        end: {
          line: 355,
          column: 103
        }
      },
      "113": {
        start: {
          line: 356,
          column: 29
        },
        end: {
          line: 356,
          column: 108
        }
      },
      "114": {
        start: {
          line: 356,
          column: 49
        },
        end: {
          line: 356,
          column: 107
        }
      },
      "115": {
        start: {
          line: 357,
          column: 26
        },
        end: {
          line: 357,
          column: 102
        }
      },
      "116": {
        start: {
          line: 357,
          column: 46
        },
        end: {
          line: 357,
          column: 101
        }
      },
      "117": {
        start: {
          line: 358,
          column: 4
        },
        end: {
          line: 360,
          column: 5
        }
      },
      "118": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 359,
          column: 86
        }
      },
      "119": {
        start: {
          line: 361,
          column: 4
        },
        end: {
          line: 363,
          column: 5
        }
      },
      "120": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 362,
          column: 106
        }
      },
      "121": {
        start: {
          line: 364,
          column: 4
        },
        end: {
          line: 366,
          column: 5
        }
      },
      "122": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 365,
          column: 92
        }
      },
      "123": {
        start: {
          line: 367,
          column: 4
        },
        end: {
          line: 369,
          column: 5
        }
      },
      "124": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 368,
          column: 93
        }
      },
      "125": {
        start: {
          line: 370,
          column: 4
        },
        end: {
          line: 370,
          column: 27
        }
      },
      "126": {
        start: {
          line: 373,
          column: 28
        },
        end: {
          line: 373,
          column: 30
        }
      },
      "127": {
        start: {
          line: 374,
          column: 24
        },
        end: {
          line: 374,
          column: 99
        }
      },
      "128": {
        start: {
          line: 374,
          column: 44
        },
        end: {
          line: 374,
          column: 98
        }
      },
      "129": {
        start: {
          line: 375,
          column: 25
        },
        end: {
          line: 375,
          column: 100
        }
      },
      "130": {
        start: {
          line: 375,
          column: 45
        },
        end: {
          line: 375,
          column: 99
        }
      },
      "131": {
        start: {
          line: 376,
          column: 28
        },
        end: {
          line: 376,
          column: 106
        }
      },
      "132": {
        start: {
          line: 376,
          column: 48
        },
        end: {
          line: 376,
          column: 105
        }
      },
      "133": {
        start: {
          line: 377,
          column: 4
        },
        end: {
          line: 379,
          column: 5
        }
      },
      "134": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 378,
          column: 80
        }
      },
      "135": {
        start: {
          line: 380,
          column: 4
        },
        end: {
          line: 382,
          column: 5
        }
      },
      "136": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 381,
          column: 84
        }
      },
      "137": {
        start: {
          line: 383,
          column: 4
        },
        end: {
          line: 385,
          column: 5
        }
      },
      "138": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 384,
          column: 90
        }
      },
      "139": {
        start: {
          line: 386,
          column: 4
        },
        end: {
          line: 388,
          column: 5
        }
      },
      "140": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 387,
          column: 92
        }
      },
      "141": {
        start: {
          line: 389,
          column: 4
        },
        end: {
          line: 389,
          column: 27
        }
      },
      "142": {
        start: {
          line: 392,
          column: 28
        },
        end: {
          line: 392,
          column: 30
        }
      },
      "143": {
        start: {
          line: 393,
          column: 24
        },
        end: {
          line: 393,
          column: 98
        }
      },
      "144": {
        start: {
          line: 393,
          column: 44
        },
        end: {
          line: 393,
          column: 97
        }
      },
      "145": {
        start: {
          line: 394,
          column: 25
        },
        end: {
          line: 394,
          column: 100
        }
      },
      "146": {
        start: {
          line: 394,
          column: 45
        },
        end: {
          line: 394,
          column: 99
        }
      },
      "147": {
        start: {
          line: 395,
          column: 32
        },
        end: {
          line: 395,
          column: 114
        }
      },
      "148": {
        start: {
          line: 395,
          column: 52
        },
        end: {
          line: 395,
          column: 113
        }
      },
      "149": {
        start: {
          line: 396,
          column: 24
        },
        end: {
          line: 396,
          column: 98
        }
      },
      "150": {
        start: {
          line: 396,
          column: 44
        },
        end: {
          line: 396,
          column: 97
        }
      },
      "151": {
        start: {
          line: 397,
          column: 4
        },
        end: {
          line: 399,
          column: 5
        }
      },
      "152": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 398,
          column: 79
        }
      },
      "153": {
        start: {
          line: 400,
          column: 4
        },
        end: {
          line: 402,
          column: 5
        }
      },
      "154": {
        start: {
          line: 401,
          column: 8
        },
        end: {
          line: 401,
          column: 92
        }
      },
      "155": {
        start: {
          line: 403,
          column: 4
        },
        end: {
          line: 405,
          column: 5
        }
      },
      "156": {
        start: {
          line: 404,
          column: 8
        },
        end: {
          line: 404,
          column: 93
        }
      },
      "157": {
        start: {
          line: 406,
          column: 4
        },
        end: {
          line: 408,
          column: 5
        }
      },
      "158": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 407,
          column: 83
        }
      },
      "159": {
        start: {
          line: 409,
          column: 4
        },
        end: {
          line: 411,
          column: 5
        }
      },
      "160": {
        start: {
          line: 410,
          column: 8
        },
        end: {
          line: 410,
          column: 98
        }
      },
      "161": {
        start: {
          line: 412,
          column: 4
        },
        end: {
          line: 412,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 16
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 15
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "GET",
        decl: {
          start: {
            line: 36,
            column: 15
          },
          end: {
            line: 36,
            column: 18
          }
        },
        loc: {
          start: {
            line: 36,
            column: 28
          },
          end: {
            line: 137,
            column: 1
          }
        },
        line: 36
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 94,
            column: 55
          },
          end: {
            line: 94,
            column: 56
          }
        },
        loc: {
          start: {
            line: 94,
            column: 60
          },
          end: {
            line: 94,
            column: 81
          }
        },
        line: 94
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 95,
            column: 55
          },
          end: {
            line: 95,
            column: 56
          }
        },
        loc: {
          start: {
            line: 95,
            column: 60
          },
          end: {
            line: 95,
            column: 81
          }
        },
        line: 95
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 96,
            column: 57
          },
          end: {
            line: 96,
            column: 58
          }
        },
        loc: {
          start: {
            line: 96,
            column: 62
          },
          end: {
            line: 96,
            column: 84
          }
        },
        line: 96
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 97,
            column: 97
          },
          end: {
            line: 97,
            column: 98
          }
        },
        loc: {
          start: {
            line: 97,
            column: 107
          },
          end: {
            line: 97,
            column: 120
          }
        },
        line: 97
      },
      "12": {
        name: "POST",
        decl: {
          start: {
            line: 138,
            column: 15
          },
          end: {
            line: 138,
            column: 19
          }
        },
        loc: {
          start: {
            line: 138,
            column: 29
          },
          end: {
            line: 248,
            column: 1
          }
        },
        line: 138
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 174,
            column: 50
          },
          end: {
            line: 174,
            column: 51
          }
        },
        loc: {
          start: {
            line: 174,
            column: 55
          },
          end: {
            line: 174,
            column: 76
          }
        },
        line: 174
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 175,
            column: 50
          },
          end: {
            line: 175,
            column: 51
          }
        },
        loc: {
          start: {
            line: 175,
            column: 55
          },
          end: {
            line: 175,
            column: 76
          }
        },
        line: 175
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 176,
            column: 52
          },
          end: {
            line: 176,
            column: 53
          }
        },
        loc: {
          start: {
            line: 176,
            column: 57
          },
          end: {
            line: 176,
            column: 79
          }
        },
        line: 176
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 177,
            column: 91
          },
          end: {
            line: 177,
            column: 92
          }
        },
        loc: {
          start: {
            line: 177,
            column: 101
          },
          end: {
            line: 177,
            column: 114
          }
        },
        line: 177
      },
      "17": {
        name: "PUT",
        decl: {
          start: {
            line: 249,
            column: 15
          },
          end: {
            line: 249,
            column: 18
          }
        },
        loc: {
          start: {
            line: 249,
            column: 28
          },
          end: {
            line: 295,
            column: 1
          }
        },
        line: 249
      },
      "18": {
        name: "DELETE",
        decl: {
          start: {
            line: 296,
            column: 15
          },
          end: {
            line: 296,
            column: 21
          }
        },
        loc: {
          start: {
            line: 296,
            column: 31
          },
          end: {
            line: 316,
            column: 1
          }
        },
        line: 296
      },
      "19": {
        name: "OPTIONS",
        decl: {
          start: {
            line: 317,
            column: 15
          },
          end: {
            line: 317,
            column: 22
          }
        },
        loc: {
          start: {
            line: 317,
            column: 32
          },
          end: {
            line: 326,
            column: 1
          }
        },
        line: 317
      },
      "20": {
        name: "generateMetadataRecommendations",
        decl: {
          start: {
            line: 330,
            column: 9
          },
          end: {
            line: 330,
            column: 40
          }
        },
        loc: {
          start: {
            line: 330,
            column: 50
          },
          end: {
            line: 352,
            column: 1
          }
        },
        line: 330
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 332,
            column: 40
          },
          end: {
            line: 332,
            column: 41
          }
        },
        loc: {
          start: {
            line: 332,
            column: 45
          },
          end: {
            line: 332,
            column: 98
          }
        },
        line: 332
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 333,
            column: 46
          },
          end: {
            line: 333,
            column: 47
          }
        },
        loc: {
          start: {
            line: 333,
            column: 51
          },
          end: {
            line: 333,
            column: 110
          }
        },
        line: 333
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 334,
            column: 42
          },
          end: {
            line: 334,
            column: 43
          }
        },
        loc: {
          start: {
            line: 334,
            column: 47
          },
          end: {
            line: 334,
            column: 103
          }
        },
        line: 334
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 335,
            column: 43
          },
          end: {
            line: 335,
            column: 44
          }
        },
        loc: {
          start: {
            line: 335,
            column: 48
          },
          end: {
            line: 335,
            column: 106
          }
        },
        line: 335
      },
      "25": {
        name: "generateStructuredDataRecommendations",
        decl: {
          start: {
            line: 353,
            column: 9
          },
          end: {
            line: 353,
            column: 46
          }
        },
        loc: {
          start: {
            line: 353,
            column: 56
          },
          end: {
            line: 371,
            column: 1
          }
        },
        line: 353
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 355,
            column: 42
          },
          end: {
            line: 355,
            column: 43
          }
        },
        loc: {
          start: {
            line: 355,
            column: 47
          },
          end: {
            line: 355,
            column: 103
          }
        },
        line: 355
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 356,
            column: 44
          },
          end: {
            line: 356,
            column: 45
          }
        },
        loc: {
          start: {
            line: 356,
            column: 49
          },
          end: {
            line: 356,
            column: 107
          }
        },
        line: 356
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 357,
            column: 41
          },
          end: {
            line: 357,
            column: 42
          }
        },
        loc: {
          start: {
            line: 357,
            column: 46
          },
          end: {
            line: 357,
            column: 101
          }
        },
        line: 357
      },
      "29": {
        name: "generateLinksRecommendations",
        decl: {
          start: {
            line: 372,
            column: 9
          },
          end: {
            line: 372,
            column: 37
          }
        },
        loc: {
          start: {
            line: 372,
            column: 47
          },
          end: {
            line: 390,
            column: 1
          }
        },
        line: 372
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 374,
            column: 39
          },
          end: {
            line: 374,
            column: 40
          }
        },
        loc: {
          start: {
            line: 374,
            column: 44
          },
          end: {
            line: 374,
            column: 98
          }
        },
        line: 374
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 375,
            column: 40
          },
          end: {
            line: 375,
            column: 41
          }
        },
        loc: {
          start: {
            line: 375,
            column: 45
          },
          end: {
            line: 375,
            column: 99
          }
        },
        line: 375
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 376,
            column: 43
          },
          end: {
            line: 376,
            column: 44
          }
        },
        loc: {
          start: {
            line: 376,
            column: 48
          },
          end: {
            line: 376,
            column: 105
          }
        },
        line: 376
      },
      "33": {
        name: "generateComplianceRecommendations",
        decl: {
          start: {
            line: 391,
            column: 9
          },
          end: {
            line: 391,
            column: 42
          }
        },
        loc: {
          start: {
            line: 391,
            column: 52
          },
          end: {
            line: 413,
            column: 1
          }
        },
        line: 391
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 393,
            column: 39
          },
          end: {
            line: 393,
            column: 40
          }
        },
        loc: {
          start: {
            line: 393,
            column: 44
          },
          end: {
            line: 393,
            column: 97
          }
        },
        line: 393
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 394,
            column: 40
          },
          end: {
            line: 394,
            column: 41
          }
        },
        loc: {
          start: {
            line: 394,
            column: 45
          },
          end: {
            line: 394,
            column: 99
          }
        },
        line: 394
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 395,
            column: 47
          },
          end: {
            line: 395,
            column: 48
          }
        },
        loc: {
          start: {
            line: 395,
            column: 52
          },
          end: {
            line: 395,
            column: 113
          }
        },
        line: 395
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 396,
            column: 39
          },
          end: {
            line: 396,
            column: 40
          }
        },
        loc: {
          start: {
            line: 396,
            column: 44
          },
          end: {
            line: 396,
            column: 97
          }
        },
        line: 396
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 48,
            column: 19
          }
        }, {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 54,
            column: 19
          }
        }, {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 60,
            column: 19
          }
        }, {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 100,
            column: 19
          }
        }, {
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 125,
            column: 19
          }
        }],
        line: 42
      },
      "1": {
        loc: {
          start: {
            line: 50,
            column: 88
          },
          end: {
            line: 50,
            column: 123
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 50,
            column: 96
          },
          end: {
            line: 50,
            column: 111
          }
        }, {
          start: {
            line: 50,
            column: 114
          },
          end: {
            line: 50,
            column: 123
          }
        }],
        line: 50
      },
      "2": {
        loc: {
          start: {
            line: 62,
            column: 16
          },
          end: {
            line: 84,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 16
          },
          end: {
            line: 84,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "3": {
        loc: {
          start: {
            line: 62,
            column: 20
          },
          end: {
            line: 69,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 20
          },
          end: {
            line: 62,
            column: 29
          }
        }, {
          start: {
            line: 62,
            column: 33
          },
          end: {
            line: 69,
            column: 36
          }
        }],
        line: 62
      },
      "4": {
        loc: {
          start: {
            line: 97,
            column: 42
          },
          end: {
            line: 97,
            column: 150
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 97,
            column: 67
          },
          end: {
            line: 97,
            column: 146
          }
        }, {
          start: {
            line: 97,
            column: 149
          },
          end: {
            line: 97,
            column: 150
          }
        }],
        line: 97
      },
      "5": {
        loc: {
          start: {
            line: 132,
            column: 21
          },
          end: {
            line: 132,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 132,
            column: 46
          },
          end: {
            line: 132,
            column: 59
          }
        }, {
          start: {
            line: 132,
            column: 62
          },
          end: {
            line: 132,
            column: 77
          }
        }],
        line: 132
      },
      "6": {
        loc: {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 146,
            column: 22
          }
        }, {
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 180,
            column: 22
          }
        }, {
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 188,
            column: 22
          }
        }, {
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 196,
            column: 22
          }
        }, {
          start: {
            line: 197,
            column: 12
          },
          end: {
            line: 204,
            column: 22
          }
        }, {
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 212,
            column: 22
          }
        }, {
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 227,
            column: 19
          }
        }],
        line: 143
      },
      "7": {
        loc: {
          start: {
            line: 148,
            column: 16
          },
          end: {
            line: 163,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 16
          },
          end: {
            line: 163,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "8": {
        loc: {
          start: {
            line: 148,
            column: 20
          },
          end: {
            line: 148,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 20
          },
          end: {
            line: 148,
            column: 30
          }
        }, {
          start: {
            line: 148,
            column: 34
          },
          end: {
            line: 148,
            column: 59
          }
        }],
        line: 148
      },
      "9": {
        loc: {
          start: {
            line: 177,
            column: 38
          },
          end: {
            line: 177,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 177,
            column: 62
          },
          end: {
            line: 177,
            column: 139
          }
        }, {
          start: {
            line: 177,
            column: 142
          },
          end: {
            line: 177,
            column: 143
          }
        }],
        line: 177
      },
      "10": {
        loc: {
          start: {
            line: 231,
            column: 23
          },
          end: {
            line: 231,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 23
          },
          end: {
            line: 231,
            column: 35
          }
        }, {
          start: {
            line: 231,
            column: 39
          },
          end: {
            line: 231,
            column: 40
          }
        }],
        line: 231
      },
      "11": {
        loc: {
          start: {
            line: 243,
            column: 21
          },
          end: {
            line: 243,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 243,
            column: 46
          },
          end: {
            line: 243,
            column: 59
          }
        }, {
          start: {
            line: 243,
            column: 62
          },
          end: {
            line: 243,
            column: 77
          }
        }],
        line: 243
      },
      "12": {
        loc: {
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      },
      "13": {
        loc: {
          start: {
            line: 253,
            column: 12
          },
          end: {
            line: 253,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 253,
            column: 12
          },
          end: {
            line: 253,
            column: 19
          }
        }, {
          start: {
            line: 253,
            column: 23
          },
          end: {
            line: 253,
            column: 49
          }
        }],
        line: 253
      },
      "14": {
        loc: {
          start: {
            line: 290,
            column: 21
          },
          end: {
            line: 290,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 290,
            column: 46
          },
          end: {
            line: 290,
            column: 59
          }
        }, {
          start: {
            line: 290,
            column: 62
          },
          end: {
            line: 290,
            column: 77
          }
        }],
        line: 290
      },
      "15": {
        loc: {
          start: {
            line: 311,
            column: 21
          },
          end: {
            line: 311,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 311,
            column: 46
          },
          end: {
            line: 311,
            column: 59
          }
        }, {
          start: {
            line: 311,
            column: 62
          },
          end: {
            line: 311,
            column: 77
          }
        }],
        line: 311
      },
      "16": {
        loc: {
          start: {
            line: 332,
            column: 45
          },
          end: {
            line: 332,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 332,
            column: 45
          },
          end: {
            line: 332,
            column: 73
          }
        }, {
          start: {
            line: 332,
            column: 77
          },
          end: {
            line: 332,
            column: 98
          }
        }],
        line: 332
      },
      "17": {
        loc: {
          start: {
            line: 333,
            column: 51
          },
          end: {
            line: 333,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 333,
            column: 51
          },
          end: {
            line: 333,
            column: 85
          }
        }, {
          start: {
            line: 333,
            column: 89
          },
          end: {
            line: 333,
            column: 110
          }
        }],
        line: 333
      },
      "18": {
        loc: {
          start: {
            line: 334,
            column: 47
          },
          end: {
            line: 334,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 334,
            column: 47
          },
          end: {
            line: 334,
            column: 78
          }
        }, {
          start: {
            line: 334,
            column: 82
          },
          end: {
            line: 334,
            column: 103
          }
        }],
        line: 334
      },
      "19": {
        loc: {
          start: {
            line: 335,
            column: 48
          },
          end: {
            line: 335,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 335,
            column: 48
          },
          end: {
            line: 335,
            column: 81
          }
        }, {
          start: {
            line: 335,
            column: 85
          },
          end: {
            line: 335,
            column: 106
          }
        }],
        line: 335
      },
      "20": {
        loc: {
          start: {
            line: 336,
            column: 4
          },
          end: {
            line: 338,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 336,
            column: 4
          },
          end: {
            line: 338,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 336
      },
      "21": {
        loc: {
          start: {
            line: 339,
            column: 4
          },
          end: {
            line: 341,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 339,
            column: 4
          },
          end: {
            line: 341,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 339
      },
      "22": {
        loc: {
          start: {
            line: 342,
            column: 4
          },
          end: {
            line: 344,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 342,
            column: 4
          },
          end: {
            line: 344,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 342
      },
      "23": {
        loc: {
          start: {
            line: 345,
            column: 4
          },
          end: {
            line: 347,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 345,
            column: 4
          },
          end: {
            line: 347,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 345
      },
      "24": {
        loc: {
          start: {
            line: 348,
            column: 4
          },
          end: {
            line: 350,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 348,
            column: 4
          },
          end: {
            line: 350,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 348
      },
      "25": {
        loc: {
          start: {
            line: 355,
            column: 47
          },
          end: {
            line: 355,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 355,
            column: 47
          },
          end: {
            line: 355,
            column: 78
          }
        }, {
          start: {
            line: 355,
            column: 82
          },
          end: {
            line: 355,
            column: 103
          }
        }],
        line: 355
      },
      "26": {
        loc: {
          start: {
            line: 356,
            column: 49
          },
          end: {
            line: 356,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 356,
            column: 49
          },
          end: {
            line: 356,
            column: 82
          }
        }, {
          start: {
            line: 356,
            column: 86
          },
          end: {
            line: 356,
            column: 107
          }
        }],
        line: 356
      },
      "27": {
        loc: {
          start: {
            line: 357,
            column: 46
          },
          end: {
            line: 357,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 357,
            column: 46
          },
          end: {
            line: 357,
            column: 76
          }
        }, {
          start: {
            line: 357,
            column: 80
          },
          end: {
            line: 357,
            column: 101
          }
        }],
        line: 357
      },
      "28": {
        loc: {
          start: {
            line: 358,
            column: 4
          },
          end: {
            line: 360,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 358,
            column: 4
          },
          end: {
            line: 360,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 358
      },
      "29": {
        loc: {
          start: {
            line: 361,
            column: 4
          },
          end: {
            line: 363,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 361,
            column: 4
          },
          end: {
            line: 363,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 361
      },
      "30": {
        loc: {
          start: {
            line: 364,
            column: 4
          },
          end: {
            line: 366,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 364,
            column: 4
          },
          end: {
            line: 366,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 364
      },
      "31": {
        loc: {
          start: {
            line: 367,
            column: 4
          },
          end: {
            line: 369,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 4
          },
          end: {
            line: 369,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "32": {
        loc: {
          start: {
            line: 374,
            column: 44
          },
          end: {
            line: 374,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 374,
            column: 44
          },
          end: {
            line: 374,
            column: 73
          }
        }, {
          start: {
            line: 374,
            column: 77
          },
          end: {
            line: 374,
            column: 98
          }
        }],
        line: 374
      },
      "33": {
        loc: {
          start: {
            line: 375,
            column: 45
          },
          end: {
            line: 375,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 375,
            column: 45
          },
          end: {
            line: 375,
            column: 74
          }
        }, {
          start: {
            line: 375,
            column: 78
          },
          end: {
            line: 375,
            column: 99
          }
        }],
        line: 375
      },
      "34": {
        loc: {
          start: {
            line: 376,
            column: 48
          },
          end: {
            line: 376,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 376,
            column: 48
          },
          end: {
            line: 376,
            column: 80
          }
        }, {
          start: {
            line: 376,
            column: 84
          },
          end: {
            line: 376,
            column: 105
          }
        }],
        line: 376
      },
      "35": {
        loc: {
          start: {
            line: 377,
            column: 4
          },
          end: {
            line: 379,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 377,
            column: 4
          },
          end: {
            line: 379,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 377
      },
      "36": {
        loc: {
          start: {
            line: 380,
            column: 4
          },
          end: {
            line: 382,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 380,
            column: 4
          },
          end: {
            line: 382,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 380
      },
      "37": {
        loc: {
          start: {
            line: 383,
            column: 4
          },
          end: {
            line: 385,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 383,
            column: 4
          },
          end: {
            line: 385,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 383
      },
      "38": {
        loc: {
          start: {
            line: 386,
            column: 4
          },
          end: {
            line: 388,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 386,
            column: 4
          },
          end: {
            line: 388,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 386
      },
      "39": {
        loc: {
          start: {
            line: 393,
            column: 44
          },
          end: {
            line: 393,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 393,
            column: 44
          },
          end: {
            line: 393,
            column: 72
          }
        }, {
          start: {
            line: 393,
            column: 76
          },
          end: {
            line: 393,
            column: 97
          }
        }],
        line: 393
      },
      "40": {
        loc: {
          start: {
            line: 394,
            column: 45
          },
          end: {
            line: 394,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 394,
            column: 45
          },
          end: {
            line: 394,
            column: 74
          }
        }, {
          start: {
            line: 394,
            column: 78
          },
          end: {
            line: 394,
            column: 99
          }
        }],
        line: 394
      },
      "41": {
        loc: {
          start: {
            line: 395,
            column: 52
          },
          end: {
            line: 395,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 395,
            column: 52
          },
          end: {
            line: 395,
            column: 88
          }
        }, {
          start: {
            line: 395,
            column: 92
          },
          end: {
            line: 395,
            column: 113
          }
        }],
        line: 395
      },
      "42": {
        loc: {
          start: {
            line: 396,
            column: 44
          },
          end: {
            line: 396,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 396,
            column: 44
          },
          end: {
            line: 396,
            column: 72
          }
        }, {
          start: {
            line: 396,
            column: 76
          },
          end: {
            line: 396,
            column: 97
          }
        }],
        line: 396
      },
      "43": {
        loc: {
          start: {
            line: 397,
            column: 4
          },
          end: {
            line: 399,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 397,
            column: 4
          },
          end: {
            line: 399,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 397
      },
      "44": {
        loc: {
          start: {
            line: 400,
            column: 4
          },
          end: {
            line: 402,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 400,
            column: 4
          },
          end: {
            line: 402,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 400
      },
      "45": {
        loc: {
          start: {
            line: 403,
            column: 4
          },
          end: {
            line: 405,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 403,
            column: 4
          },
          end: {
            line: 405,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 403
      },
      "46": {
        loc: {
          start: {
            line: 406,
            column: 4
          },
          end: {
            line: 408,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 406,
            column: 4
          },
          end: {
            line: 408,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 406
      },
      "47": {
        loc: {
          start: {
            line: 409,
            column: 4
          },
          end: {
            line: 411,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 409,
            column: 4
          },
          end: {
            line: 411,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 409
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    b: {
      "0": [0, 0, 0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0, 0, 0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\seo\\testing\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - SEO TESTING API\r\n// API endpoints para la suite de tests automatizados SEO\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { enhancedSEOTestingSuite } from '@/lib/seo/seo-testing-suite';\r\nimport { logger, LogCategory, LogLevel } from '@/lib/enterprise/logger';\r\n\r\n// ===================================\r\n// GET - Obtener informaci\xF3n y estad\xEDsticas\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const action = searchParams.get('action');\r\n    const testType = searchParams.get('testType') as any;\r\n    const limit = searchParams.get('limit');\r\n\r\n    switch (action) {\r\n      case 'stats':\r\n        const stats = enhancedSEOTestingSuite.getTestingStats();\r\n        return NextResponse.json({\r\n          success: true,\r\n          data: stats\r\n        });\r\n\r\n      case 'history':\r\n        const history = enhancedSEOTestingSuite.getTestHistory(\r\n          limit ? parseInt(limit) : undefined\r\n        );\r\n        return NextResponse.json({\r\n          success: true,\r\n          data: history\r\n        });\r\n\r\n      case 'active':\r\n        const activeSuites = enhancedSEOTestingSuite.getActiveTestSuites();\r\n        return NextResponse.json({\r\n          success: true,\r\n          data: activeSuites\r\n        });\r\n\r\n      case 'run-by-type':\r\n        if (!testType || !['metadata', 'structured_data', 'robots_txt', 'internal_links', 'compliance', 'performance'].includes(testType)) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'testType parameter is required and must be valid',\r\n            availableTypes: ['metadata', 'structured_data', 'robots_txt', 'internal_links', 'compliance', 'performance']\r\n          }, { status: 400 });\r\n        }\r\n\r\n        const urls = searchParams.get('urls')?.split(',');\r\n        const testResults = await enhancedSEOTestingSuite.runTestsByType(testType, urls);\r\n        \r\n        return NextResponse.json({\r\n          success: true,\r\n          data: {\r\n            testType,\r\n            results: testResults,\r\n            summary: {\r\n              totalTests: testResults.length,\r\n              passed: testResults.filter(t => t.status === 'passed').length,\r\n              failed: testResults.filter(t => t.status === 'failed').length,\r\n              warnings: testResults.filter(t => t.status === 'warning').length,\r\n              averageScore: testResults.length > 0 \r\n                ? Math.round(testResults.reduce((sum, t) => sum + t.score, 0) / testResults.length)\r\n                : 0\r\n            }\r\n          }\r\n        });\r\n\r\n      default:\r\n        return NextResponse.json({\r\n          success: true,\r\n          data: {\r\n            message: 'SEO Testing Suite API',\r\n            version: '1.0.0',\r\n            endpoints: {\r\n              'GET ?action=stats': 'Get testing statistics',\r\n              'GET ?action=history&limit=10': 'Get test history',\r\n              'GET ?action=active': 'Get active test suites',\r\n              'GET ?action=run-by-type&testType=metadata': 'Run specific test type',\r\n              'POST': 'Run full test suite',\r\n              'PUT': 'Update configuration',\r\n              'DELETE': 'Clear cache'\r\n            },\r\n            testTypes: ['metadata', 'structured_data', 'robots_txt', 'internal_links', 'compliance', 'performance']\r\n          }\r\n        });\r\n    }\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'SEO testing API GET error', error as Error, LogCategory.SEO);\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Failed to process request',\r\n      details: error instanceof Error ? error.message : 'Unknown error'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// POST - Ejecutar tests\r\n// ===================================\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { action, urls, testTypes, config } = body;\r\n\r\n    let result;\r\n\r\n    switch (action) {\r\n      case 'run-full-suite':\r\n        result = await enhancedSEOTestingSuite.runFullTestSuite(urls);\r\n        break;\r\n\r\n      case 'run-specific-tests':\r\n        if (!testTypes || !Array.isArray(testTypes)) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'testTypes array is required',\r\n            availableTypes: ['metadata', 'structured_data', 'robots_txt', 'internal_links', 'compliance', 'performance']\r\n          }, { status: 400 });\r\n        }\r\n\r\n        const allResults = [];\r\n        for (const testType of testTypes) {\r\n          const typeResults = await enhancedSEOTestingSuite.runTestsByType(testType, urls);\r\n          allResults.push(...typeResults);\r\n        }\r\n\r\n        result = {\r\n          testTypes,\r\n          results: allResults,\r\n          summary: {\r\n            totalTests: allResults.length,\r\n            passed: allResults.filter(t => t.status === 'passed').length,\r\n            failed: allResults.filter(t => t.status === 'failed').length,\r\n            warnings: allResults.filter(t => t.status === 'warning').length,\r\n            averageScore: allResults.length > 0 \r\n              ? Math.round(allResults.reduce((sum, t) => sum + t.score, 0) / allResults.length)\r\n              : 0\r\n          }\r\n        };\r\n        break;\r\n\r\n      case 'validate-metadata':\r\n        const metadataResults = await enhancedSEOTestingSuite.runTestsByType('metadata', urls);\r\n        result = {\r\n          testType: 'metadata',\r\n          results: metadataResults,\r\n          recommendations: generateMetadataRecommendations(metadataResults)\r\n        };\r\n        break;\r\n\r\n      case 'validate-structured-data':\r\n        const structuredDataResults = await enhancedSEOTestingSuite.runTestsByType('structured_data', urls);\r\n        result = {\r\n          testType: 'structured_data',\r\n          results: structuredDataResults,\r\n          recommendations: generateStructuredDataRecommendations(structuredDataResults)\r\n        };\r\n        break;\r\n\r\n      case 'audit-internal-links':\r\n        const linksResults = await enhancedSEOTestingSuite.runTestsByType('internal_links', urls);\r\n        result = {\r\n          testType: 'internal_links',\r\n          results: linksResults,\r\n          recommendations: generateLinksRecommendations(linksResults)\r\n        };\r\n        break;\r\n\r\n      case 'check-compliance':\r\n        const complianceResults = await enhancedSEOTestingSuite.runTestsByType('compliance', urls);\r\n        result = {\r\n          testType: 'compliance',\r\n          results: complianceResults,\r\n          recommendations: generateComplianceRecommendations(complianceResults)\r\n        };\r\n        break;\r\n\r\n      default:\r\n        return NextResponse.json({\r\n          success: false,\r\n          error: 'Invalid action',\r\n          availableActions: [\r\n            'run-full-suite',\r\n            'run-specific-tests',\r\n            'validate-metadata',\r\n            'validate-structured-data',\r\n            'audit-internal-links',\r\n            'check-compliance'\r\n          ]\r\n        }, { status: 400 });\r\n    }\r\n\r\n    logger.info(LogLevel.INFO, 'SEO testing completed', {\r\n      action,\r\n      urlsCount: urls?.length || 0\r\n    }, LogCategory.SEO);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: result,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'SEO testing API POST error', error as Error, LogCategory.SEO);\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Failed to run SEO tests',\r\n      details: error instanceof Error ? error.message : 'Unknown error'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// PUT - Actualizar configuraci\xF3n\r\n// ===================================\r\nexport async function PUT(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { config } = body;\r\n\r\n    if (!config || typeof config !== 'object') {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'config object is required',\r\n        example: {\r\n          config: {\r\n            enableMetadataTests: true,\r\n            enableStructuredDataTests: true,\r\n            testTimeout: 30,\r\n            thresholds: {\r\n              titleMinLength: 30,\r\n              titleMaxLength: 60,\r\n              descriptionMinLength: 120,\r\n              descriptionMaxLength: 160\r\n            }\r\n          }\r\n        }\r\n      }, { status: 400 });\r\n    }\r\n\r\n    enhancedSEOTestingSuite.configure(config);\r\n\r\n    logger.info(LogLevel.INFO, 'SEO testing suite reconfigured', {\r\n      configKeys: Object.keys(config)\r\n    }, LogCategory.SEO);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        message: 'Configuration updated successfully',\r\n        updatedKeys: Object.keys(config)\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'SEO testing API PUT error', error as Error, LogCategory.SEO);\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Failed to update configuration',\r\n      details: error instanceof Error ? error.message : 'Unknown error'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// DELETE - Limpiar cache\r\n// ===================================\r\nexport async function DELETE(request: NextRequest) {\r\n  try {\r\n    await enhancedSEOTestingSuite.clearCache();\r\n\r\n    logger.info(LogLevel.INFO, 'SEO testing suite cache cleared', {}, LogCategory.SEO);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        message: 'Cache cleared successfully'\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'SEO testing API DELETE error', error as Error, LogCategory.SEO);\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Failed to clear cache',\r\n      details: error instanceof Error ? error.message : 'Unknown error'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// OPCIONES CORS\r\n// ===================================\r\nexport async function OPTIONS(request: NextRequest) {\r\n  return new NextResponse(null, {\r\n    status: 200,\r\n    headers: {\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\r\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\r\n    },\r\n  });\r\n}\r\n\r\n// ===================================\r\n// FUNCIONES DE UTILIDAD\r\n// ===================================\r\n\r\nfunction generateMetadataRecommendations(results: any[]): string[] {\r\n  const recommendations = [];\r\n\r\n  const failedTitles = results.filter(r => r.testName.includes('Title') && r.status === 'failed');\r\n  const failedDescriptions = results.filter(r => r.testName.includes('Description') && r.status === 'failed');\r\n  const failedKeywords = results.filter(r => r.testName.includes('Keywords') && r.status !== 'passed');\r\n  const failedOpenGraph = results.filter(r => r.testName.includes('Open Graph') && r.status !== 'passed');\r\n\r\n  if (failedTitles.length > 0) {\r\n    recommendations.push(`Fix ${failedTitles.length} title tag issues - ensure 30-60 character length`);\r\n  }\r\n\r\n  if (failedDescriptions.length > 0) {\r\n    recommendations.push(`Improve ${failedDescriptions.length} meta descriptions - aim for 120-160 characters`);\r\n  }\r\n\r\n  if (failedKeywords.length > 0) {\r\n    recommendations.push(`Optimize keywords for ${failedKeywords.length} pages - include 3-5 relevant terms`);\r\n  }\r\n\r\n  if (failedOpenGraph.length > 0) {\r\n    recommendations.push(`Add Open Graph tags to ${failedOpenGraph.length} pages for better social sharing`);\r\n  }\r\n\r\n  if (recommendations.length === 0) {\r\n    recommendations.push('All metadata tests passed - excellent SEO optimization!');\r\n  }\r\n\r\n  return recommendations;\r\n}\r\n\r\nfunction generateStructuredDataRecommendations(results: any[]): string[] {\r\n  const recommendations = [];\r\n\r\n  const failedPresence = results.filter(r => r.testName.includes('Presence') && r.status === 'failed');\r\n  const failedValidation = results.filter(r => r.testName.includes('Validation') && r.status === 'failed');\r\n  const failedProduct = results.filter(r => r.testName.includes('Product') && r.status === 'failed');\r\n\r\n  if (failedPresence.length > 0) {\r\n    recommendations.push(`Add structured data to ${failedPresence.length} pages`);\r\n  }\r\n\r\n  if (failedValidation.length > 0) {\r\n    recommendations.push(`Fix structured data validation errors on ${failedValidation.length} pages`);\r\n  }\r\n\r\n  if (failedProduct.length > 0) {\r\n    recommendations.push(`Add Product schema to ${failedProduct.length} product pages`);\r\n  }\r\n\r\n  if (recommendations.length === 0) {\r\n    recommendations.push('All structured data tests passed - excellent implementation!');\r\n  }\r\n\r\n  return recommendations;\r\n}\r\n\r\nfunction generateLinksRecommendations(results: any[]): string[] {\r\n  const recommendations = [];\r\n\r\n  const brokenLinks = results.filter(r => r.testName.includes('Broken') && r.status === 'failed');\r\n  const anchorIssues = results.filter(r => r.testName.includes('Anchor') && r.status !== 'passed');\r\n  const hierarchyIssues = results.filter(r => r.testName.includes('Hierarchy') && r.status !== 'passed');\r\n\r\n  if (brokenLinks.length > 0) {\r\n    recommendations.push(`Fix broken links on ${brokenLinks.length} pages`);\r\n  }\r\n\r\n  if (anchorIssues.length > 0) {\r\n    recommendations.push(`Improve anchor text on ${anchorIssues.length} pages`);\r\n  }\r\n\r\n  if (hierarchyIssues.length > 0) {\r\n    recommendations.push(`Improve link hierarchy on ${hierarchyIssues.length} pages`);\r\n  }\r\n\r\n  if (recommendations.length === 0) {\r\n    recommendations.push('All internal links tests passed - excellent link structure!');\r\n  }\r\n\r\n  return recommendations;\r\n}\r\n\r\nfunction generateComplianceRecommendations(results: any[]): string[] {\r\n  const recommendations = [];\r\n\r\n  const httpsIssues = results.filter(r => r.testName.includes('HTTPS') && r.status === 'failed');\r\n  const mobileIssues = results.filter(r => r.testName.includes('Mobile') && r.status === 'failed');\r\n  const accessibilityIssues = results.filter(r => r.testName.includes('Accessibility') && r.status !== 'passed');\r\n  const speedIssues = results.filter(r => r.testName.includes('Speed') && r.status !== 'passed');\r\n\r\n  if (httpsIssues.length > 0) {\r\n    recommendations.push(`Implement HTTPS on ${httpsIssues.length} pages`);\r\n  }\r\n\r\n  if (mobileIssues.length > 0) {\r\n    recommendations.push(`Improve mobile optimization on ${mobileIssues.length} pages`);\r\n  }\r\n\r\n  if (accessibilityIssues.length > 0) {\r\n    recommendations.push(`Improve accessibility on ${accessibilityIssues.length} pages`);\r\n  }\r\n\r\n  if (speedIssues.length > 0) {\r\n    recommendations.push(`Optimize page speed on ${speedIssues.length} pages`);\r\n  }\r\n\r\n  if (recommendations.length === 0) {\r\n    recommendations.push('All compliance tests passed - excellent technical implementation!');\r\n  }\r\n\r\n  return recommendations;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["DELETE", "GET", "OPTIONS", "POST", "PUT", "runtime", "request", "searchParams", "URL", "url", "action", "get", "testType", "limit", "stats", "enhancedSEOTestingSuite", "getTestingStats", "NextResponse", "json", "success", "data", "history", "getTestHistory", "parseInt", "undefined", "activeSuites", "getActiveTestSuites", "includes", "error", "availableTypes", "status", "urls", "split", "testResults", "runTestsByType", "results", "summary", "totalTests", "length", "passed", "filter", "t", "failed", "warnings", "averageScore", "Math", "round", "reduce", "sum", "score", "message", "version", "endpoints", "testTypes", "logger", "LogLevel", "ERROR", "LogCategory", "SEO", "details", "Error", "body", "config", "result", "runFullTestSuite", "Array", "isArray", "allResults", "typeResults", "push", "metadataResults", "recommendations", "generateMetadataRecommendations", "structuredDataResults", "generateStructuredDataRecommendations", "linksResults", "generateLinksRecommendations", "complianceResults", "generateComplianceRecommendations", "availableActions", "info", "INFO", "urlsCount", "timestamp", "Date", "toISOString", "example", "enableMetadataTests", "enableStructuredDataTests", "testTimeout", "thresholds", "titleMinLength", "titleMaxLength", "descriptionMinLength", "descriptionMaxLength", "configure", "configKeys", "Object", "keys", "updatedKeys", "clearCache", "headers", "failedTitles", "r", "testName", "failedDescriptions", "failedKeywords", "failedOpenGraph", "failedPresence", "failedValidation", "failedProduct", "brokenLinks", "anchorIssues", "hierarchyIssues", "httpsIssues", "mobileIssues", "accessibilityIssues", "speedIssues"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QAwRfA;eAAAA;;QAzQAC;eAAAA;;QAoSAC;eAAAA;;QAtMAC;eAAAA;;QAsHAC;eAAAA;;QAlOTC;eAAAA;;;wBAO6B;iCACF;wBACM;AATvC,MAAMA,UAAU;AAchB,eAAeJ,IAAIK,OAAoB;IAC5C,IAAI;QACF,MAAM,EAAEC,YAAY,EAAE,GAAG,IAAIC,IAAIF,QAAQG,GAAG;QAC5C,MAAMC,SAASH,aAAaI,GAAG,CAAC;QAChC,MAAMC,WAAWL,aAAaI,GAAG,CAAC;QAClC,MAAME,QAAQN,aAAaI,GAAG,CAAC;QAE/B,OAAQD;YACN,KAAK;gBACH,MAAMI,QAAQC,wCAAuB,CAACC,eAAe;gBACrD,OAAOC,oBAAY,CAACC,IAAI,CAAC;oBACvBC,SAAS;oBACTC,MAAMN;gBACR;YAEF,KAAK;gBACH,MAAMO,UAAUN,wCAAuB,CAACO,cAAc,CACpDT,QAAQU,SAASV,SAASW;gBAE5B,OAAOP,oBAAY,CAACC,IAAI,CAAC;oBACvBC,SAAS;oBACTC,MAAMC;gBACR;YAEF,KAAK;gBACH,MAAMI,eAAeV,wCAAuB,CAACW,mBAAmB;gBAChE,OAAOT,oBAAY,CAACC,IAAI,CAAC;oBACvBC,SAAS;oBACTC,MAAMK;gBACR;YAEF,KAAK;gBACH,IAAI,CAACb,YAAY,CAAC;oBAAC;oBAAY;oBAAmB;oBAAc;oBAAkB;oBAAc;iBAAc,CAACe,QAAQ,CAACf,WAAW;oBACjI,OAAOK,oBAAY,CAACC,IAAI,CAAC;wBACvBC,SAAS;wBACTS,OAAO;wBACPC,gBAAgB;4BAAC;4BAAY;4BAAmB;4BAAc;4BAAkB;4BAAc;yBAAc;oBAC9G,GAAG;wBAAEC,QAAQ;oBAAI;gBACnB;gBAEA,MAAMC,OAAOxB,aAAaI,GAAG,CAAC,SAASqB,MAAM;gBAC7C,MAAMC,cAAc,MAAMlB,wCAAuB,CAACmB,cAAc,CAACtB,UAAUmB;gBAE3E,OAAOd,oBAAY,CAACC,IAAI,CAAC;oBACvBC,SAAS;oBACTC,MAAM;wBACJR;wBACAuB,SAASF;wBACTG,SAAS;4BACPC,YAAYJ,YAAYK,MAAM;4BAC9BC,QAAQN,YAAYO,MAAM,CAACC,CAAAA,IAAKA,EAAEX,MAAM,KAAK,UAAUQ,MAAM;4BAC7DI,QAAQT,YAAYO,MAAM,CAACC,CAAAA,IAAKA,EAAEX,MAAM,KAAK,UAAUQ,MAAM;4BAC7DK,UAAUV,YAAYO,MAAM,CAACC,CAAAA,IAAKA,EAAEX,MAAM,KAAK,WAAWQ,MAAM;4BAChEM,cAAcX,YAAYK,MAAM,GAAG,IAC/BO,KAAKC,KAAK,CAACb,YAAYc,MAAM,CAAC,CAACC,KAAKP,IAAMO,MAAMP,EAAEQ,KAAK,EAAE,KAAKhB,YAAYK,MAAM,IAChF;wBACN;oBACF;gBACF;YAEF;gBACE,OAAOrB,oBAAY,CAACC,IAAI,CAAC;oBACvBC,SAAS;oBACTC,MAAM;wBACJ8B,SAAS;wBACTC,SAAS;wBACTC,WAAW;4BACT,qBAAqB;4BACrB,gCAAgC;4BAChC,sBAAsB;4BACtB,6CAA6C;4BAC7C,QAAQ;4BACR,OAAO;4BACP,UAAU;wBACZ;wBACAC,WAAW;4BAAC;4BAAY;4BAAmB;4BAAc;4BAAkB;4BAAc;yBAAc;oBACzG;gBACF;QACJ;IAEF,EAAE,OAAOzB,OAAO;QACd0B,cAAM,CAAC1B,KAAK,CAAC2B,gBAAQ,CAACC,KAAK,EAAE,6BAA6B5B,OAAgB6B,mBAAW,CAACC,GAAG;QAEzF,OAAOzC,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTS,OAAO;YACP+B,SAAS/B,iBAAiBgC,QAAQhC,MAAMsB,OAAO,GAAG;QACpD,GAAG;YAAEpB,QAAQ;QAAI;IACnB;AACF;AAKO,eAAe3B,KAAKG,OAAoB;IAC7C,IAAI;QACF,MAAMuD,OAAO,MAAMvD,QAAQY,IAAI;QAC/B,MAAM,EAAER,MAAM,EAAEqB,IAAI,EAAEsB,SAAS,EAAES,MAAM,EAAE,GAAGD;QAE5C,IAAIE;QAEJ,OAAQrD;YACN,KAAK;gBACHqD,SAAS,MAAMhD,wCAAuB,CAACiD,gBAAgB,CAACjC;gBACxD;YAEF,KAAK;gBACH,IAAI,CAACsB,aAAa,CAACY,MAAMC,OAAO,CAACb,YAAY;oBAC3C,OAAOpC,oBAAY,CAACC,IAAI,CAAC;wBACvBC,SAAS;wBACTS,OAAO;wBACPC,gBAAgB;4BAAC;4BAAY;4BAAmB;4BAAc;4BAAkB;4BAAc;yBAAc;oBAC9G,GAAG;wBAAEC,QAAQ;oBAAI;gBACnB;gBAEA,MAAMqC,aAAa,EAAE;gBACrB,KAAK,MAAMvD,YAAYyC,UAAW;oBAChC,MAAMe,cAAc,MAAMrD,wCAAuB,CAACmB,cAAc,CAACtB,UAAUmB;oBAC3EoC,WAAWE,IAAI,IAAID;gBACrB;gBAEAL,SAAS;oBACPV;oBACAlB,SAASgC;oBACT/B,SAAS;wBACPC,YAAY8B,WAAW7B,MAAM;wBAC7BC,QAAQ4B,WAAW3B,MAAM,CAACC,CAAAA,IAAKA,EAAEX,MAAM,KAAK,UAAUQ,MAAM;wBAC5DI,QAAQyB,WAAW3B,MAAM,CAACC,CAAAA,IAAKA,EAAEX,MAAM,KAAK,UAAUQ,MAAM;wBAC5DK,UAAUwB,WAAW3B,MAAM,CAACC,CAAAA,IAAKA,EAAEX,MAAM,KAAK,WAAWQ,MAAM;wBAC/DM,cAAcuB,WAAW7B,MAAM,GAAG,IAC9BO,KAAKC,KAAK,CAACqB,WAAWpB,MAAM,CAAC,CAACC,KAAKP,IAAMO,MAAMP,EAAEQ,KAAK,EAAE,KAAKkB,WAAW7B,MAAM,IAC9E;oBACN;gBACF;gBACA;YAEF,KAAK;gBACH,MAAMgC,kBAAkB,MAAMvD,wCAAuB,CAACmB,cAAc,CAAC,YAAYH;gBACjFgC,SAAS;oBACPnD,UAAU;oBACVuB,SAASmC;oBACTC,iBAAiBC,gCAAgCF;gBACnD;gBACA;YAEF,KAAK;gBACH,MAAMG,wBAAwB,MAAM1D,wCAAuB,CAACmB,cAAc,CAAC,mBAAmBH;gBAC9FgC,SAAS;oBACPnD,UAAU;oBACVuB,SAASsC;oBACTF,iBAAiBG,sCAAsCD;gBACzD;gBACA;YAEF,KAAK;gBACH,MAAME,eAAe,MAAM5D,wCAAuB,CAACmB,cAAc,CAAC,kBAAkBH;gBACpFgC,SAAS;oBACPnD,UAAU;oBACVuB,SAASwC;oBACTJ,iBAAiBK,6BAA6BD;gBAChD;gBACA;YAEF,KAAK;gBACH,MAAME,oBAAoB,MAAM9D,wCAAuB,CAACmB,cAAc,CAAC,cAAcH;gBACrFgC,SAAS;oBACPnD,UAAU;oBACVuB,SAAS0C;oBACTN,iBAAiBO,kCAAkCD;gBACrD;gBACA;YAEF;gBACE,OAAO5D,oBAAY,CAACC,IAAI,CAAC;oBACvBC,SAAS;oBACTS,OAAO;oBACPmD,kBAAkB;wBAChB;wBACA;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH,GAAG;oBAAEjD,QAAQ;gBAAI;QACrB;QAEAwB,cAAM,CAAC0B,IAAI,CAACzB,gBAAQ,CAAC0B,IAAI,EAAE,yBAAyB;YAClDvE;YACAwE,WAAWnD,MAAMO,UAAU;QAC7B,GAAGmB,mBAAW,CAACC,GAAG;QAElB,OAAOzC,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTC,MAAM2C;YACNoB,WAAW,IAAIC,OAAOC,WAAW;QACnC;IAEF,EAAE,OAAOzD,OAAO;QACd0B,cAAM,CAAC1B,KAAK,CAAC2B,gBAAQ,CAACC,KAAK,EAAE,8BAA8B5B,OAAgB6B,mBAAW,CAACC,GAAG;QAE1F,OAAOzC,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTS,OAAO;YACP+B,SAAS/B,iBAAiBgC,QAAQhC,MAAMsB,OAAO,GAAG;QACpD,GAAG;YAAEpB,QAAQ;QAAI;IACnB;AACF;AAKO,eAAe1B,IAAIE,OAAoB;IAC5C,IAAI;QACF,MAAMuD,OAAO,MAAMvD,QAAQY,IAAI;QAC/B,MAAM,EAAE4C,MAAM,EAAE,GAAGD;QAEnB,IAAI,CAACC,UAAU,OAAOA,WAAW,UAAU;YACzC,OAAO7C,oBAAY,CAACC,IAAI,CAAC;gBACvBC,SAAS;gBACTS,OAAO;gBACP0D,SAAS;oBACPxB,QAAQ;wBACNyB,qBAAqB;wBACrBC,2BAA2B;wBAC3BC,aAAa;wBACbC,YAAY;4BACVC,gBAAgB;4BAChBC,gBAAgB;4BAChBC,sBAAsB;4BACtBC,sBAAsB;wBACxB;oBACF;gBACF;YACF,GAAG;gBAAEhE,QAAQ;YAAI;QACnB;QAEAf,wCAAuB,CAACgF,SAAS,CAACjC;QAElCR,cAAM,CAAC0B,IAAI,CAACzB,gBAAQ,CAAC0B,IAAI,EAAE,kCAAkC;YAC3De,YAAYC,OAAOC,IAAI,CAACpC;QAC1B,GAAGL,mBAAW,CAACC,GAAG;QAElB,OAAOzC,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTC,MAAM;gBACJ8B,SAAS;gBACTiD,aAAaF,OAAOC,IAAI,CAACpC;YAC3B;QACF;IAEF,EAAE,OAAOlC,OAAO;QACd0B,cAAM,CAAC1B,KAAK,CAAC2B,gBAAQ,CAACC,KAAK,EAAE,6BAA6B5B,OAAgB6B,mBAAW,CAACC,GAAG;QAEzF,OAAOzC,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTS,OAAO;YACP+B,SAAS/B,iBAAiBgC,QAAQhC,MAAMsB,OAAO,GAAG;QACpD,GAAG;YAAEpB,QAAQ;QAAI;IACnB;AACF;AAKO,eAAe9B,OAAOM,OAAoB;IAC/C,IAAI;QACF,MAAMS,wCAAuB,CAACqF,UAAU;QAExC9C,cAAM,CAAC0B,IAAI,CAACzB,gBAAQ,CAAC0B,IAAI,EAAE,mCAAmC,CAAC,GAAGxB,mBAAW,CAACC,GAAG;QAEjF,OAAOzC,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTC,MAAM;gBACJ8B,SAAS;YACX;QACF;IAEF,EAAE,OAAOtB,OAAO;QACd0B,cAAM,CAAC1B,KAAK,CAAC2B,gBAAQ,CAACC,KAAK,EAAE,gCAAgC5B,OAAgB6B,mBAAW,CAACC,GAAG;QAE5F,OAAOzC,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTS,OAAO;YACP+B,SAAS/B,iBAAiBgC,QAAQhC,MAAMsB,OAAO,GAAG;QACpD,GAAG;YAAEpB,QAAQ;QAAI;IACnB;AACF;AAKO,eAAe5B,QAAQI,OAAoB;IAChD,OAAO,IAAIW,oBAAY,CAAC,MAAM;QAC5Ba,QAAQ;QACRuE,SAAS;YACP,+BAA+B;YAC/B,gCAAgC;YAChC,gCAAgC;QAClC;IACF;AACF;AAEA,sCAAsC;AACtC,wBAAwB;AACxB,sCAAsC;AAEtC,SAAS7B,gCAAgCrC,OAAc;IACrD,MAAMoC,kBAAkB,EAAE;IAE1B,MAAM+B,eAAenE,QAAQK,MAAM,CAAC+D,CAAAA,IAAKA,EAAEC,QAAQ,CAAC7E,QAAQ,CAAC,YAAY4E,EAAEzE,MAAM,KAAK;IACtF,MAAM2E,qBAAqBtE,QAAQK,MAAM,CAAC+D,CAAAA,IAAKA,EAAEC,QAAQ,CAAC7E,QAAQ,CAAC,kBAAkB4E,EAAEzE,MAAM,KAAK;IAClG,MAAM4E,iBAAiBvE,QAAQK,MAAM,CAAC+D,CAAAA,IAAKA,EAAEC,QAAQ,CAAC7E,QAAQ,CAAC,eAAe4E,EAAEzE,MAAM,KAAK;IAC3F,MAAM6E,kBAAkBxE,QAAQK,MAAM,CAAC+D,CAAAA,IAAKA,EAAEC,QAAQ,CAAC7E,QAAQ,CAAC,iBAAiB4E,EAAEzE,MAAM,KAAK;IAE9F,IAAIwE,aAAahE,MAAM,GAAG,GAAG;QAC3BiC,gBAAgBF,IAAI,CAAC,CAAC,IAAI,EAAEiC,aAAahE,MAAM,CAAC,iDAAiD,CAAC;IACpG;IAEA,IAAImE,mBAAmBnE,MAAM,GAAG,GAAG;QACjCiC,gBAAgBF,IAAI,CAAC,CAAC,QAAQ,EAAEoC,mBAAmBnE,MAAM,CAAC,+CAA+C,CAAC;IAC5G;IAEA,IAAIoE,eAAepE,MAAM,GAAG,GAAG;QAC7BiC,gBAAgBF,IAAI,CAAC,CAAC,sBAAsB,EAAEqC,eAAepE,MAAM,CAAC,mCAAmC,CAAC;IAC1G;IAEA,IAAIqE,gBAAgBrE,MAAM,GAAG,GAAG;QAC9BiC,gBAAgBF,IAAI,CAAC,CAAC,uBAAuB,EAAEsC,gBAAgBrE,MAAM,CAAC,gCAAgC,CAAC;IACzG;IAEA,IAAIiC,gBAAgBjC,MAAM,KAAK,GAAG;QAChCiC,gBAAgBF,IAAI,CAAC;IACvB;IAEA,OAAOE;AACT;AAEA,SAASG,sCAAsCvC,OAAc;IAC3D,MAAMoC,kBAAkB,EAAE;IAE1B,MAAMqC,iBAAiBzE,QAAQK,MAAM,CAAC+D,CAAAA,IAAKA,EAAEC,QAAQ,CAAC7E,QAAQ,CAAC,eAAe4E,EAAEzE,MAAM,KAAK;IAC3F,MAAM+E,mBAAmB1E,QAAQK,MAAM,CAAC+D,CAAAA,IAAKA,EAAEC,QAAQ,CAAC7E,QAAQ,CAAC,iBAAiB4E,EAAEzE,MAAM,KAAK;IAC/F,MAAMgF,gBAAgB3E,QAAQK,MAAM,CAAC+D,CAAAA,IAAKA,EAAEC,QAAQ,CAAC7E,QAAQ,CAAC,cAAc4E,EAAEzE,MAAM,KAAK;IAEzF,IAAI8E,eAAetE,MAAM,GAAG,GAAG;QAC7BiC,gBAAgBF,IAAI,CAAC,CAAC,uBAAuB,EAAEuC,eAAetE,MAAM,CAAC,MAAM,CAAC;IAC9E;IAEA,IAAIuE,iBAAiBvE,MAAM,GAAG,GAAG;QAC/BiC,gBAAgBF,IAAI,CAAC,CAAC,yCAAyC,EAAEwC,iBAAiBvE,MAAM,CAAC,MAAM,CAAC;IAClG;IAEA,IAAIwE,cAAcxE,MAAM,GAAG,GAAG;QAC5BiC,gBAAgBF,IAAI,CAAC,CAAC,sBAAsB,EAAEyC,cAAcxE,MAAM,CAAC,cAAc,CAAC;IACpF;IAEA,IAAIiC,gBAAgBjC,MAAM,KAAK,GAAG;QAChCiC,gBAAgBF,IAAI,CAAC;IACvB;IAEA,OAAOE;AACT;AAEA,SAASK,6BAA6BzC,OAAc;IAClD,MAAMoC,kBAAkB,EAAE;IAE1B,MAAMwC,cAAc5E,QAAQK,MAAM,CAAC+D,CAAAA,IAAKA,EAAEC,QAAQ,CAAC7E,QAAQ,CAAC,aAAa4E,EAAEzE,MAAM,KAAK;IACtF,MAAMkF,eAAe7E,QAAQK,MAAM,CAAC+D,CAAAA,IAAKA,EAAEC,QAAQ,CAAC7E,QAAQ,CAAC,aAAa4E,EAAEzE,MAAM,KAAK;IACvF,MAAMmF,kBAAkB9E,QAAQK,MAAM,CAAC+D,CAAAA,IAAKA,EAAEC,QAAQ,CAAC7E,QAAQ,CAAC,gBAAgB4E,EAAEzE,MAAM,KAAK;IAE7F,IAAIiF,YAAYzE,MAAM,GAAG,GAAG;QAC1BiC,gBAAgBF,IAAI,CAAC,CAAC,oBAAoB,EAAE0C,YAAYzE,MAAM,CAAC,MAAM,CAAC;IACxE;IAEA,IAAI0E,aAAa1E,MAAM,GAAG,GAAG;QAC3BiC,gBAAgBF,IAAI,CAAC,CAAC,uBAAuB,EAAE2C,aAAa1E,MAAM,CAAC,MAAM,CAAC;IAC5E;IAEA,IAAI2E,gBAAgB3E,MAAM,GAAG,GAAG;QAC9BiC,gBAAgBF,IAAI,CAAC,CAAC,0BAA0B,EAAE4C,gBAAgB3E,MAAM,CAAC,MAAM,CAAC;IAClF;IAEA,IAAIiC,gBAAgBjC,MAAM,KAAK,GAAG;QAChCiC,gBAAgBF,IAAI,CAAC;IACvB;IAEA,OAAOE;AACT;AAEA,SAASO,kCAAkC3C,OAAc;IACvD,MAAMoC,kBAAkB,EAAE;IAE1B,MAAM2C,cAAc/E,QAAQK,MAAM,CAAC+D,CAAAA,IAAKA,EAAEC,QAAQ,CAAC7E,QAAQ,CAAC,YAAY4E,EAAEzE,MAAM,KAAK;IACrF,MAAMqF,eAAehF,QAAQK,MAAM,CAAC+D,CAAAA,IAAKA,EAAEC,QAAQ,CAAC7E,QAAQ,CAAC,aAAa4E,EAAEzE,MAAM,KAAK;IACvF,MAAMsF,sBAAsBjF,QAAQK,MAAM,CAAC+D,CAAAA,IAAKA,EAAEC,QAAQ,CAAC7E,QAAQ,CAAC,oBAAoB4E,EAAEzE,MAAM,KAAK;IACrG,MAAMuF,cAAclF,QAAQK,MAAM,CAAC+D,CAAAA,IAAKA,EAAEC,QAAQ,CAAC7E,QAAQ,CAAC,YAAY4E,EAAEzE,MAAM,KAAK;IAErF,IAAIoF,YAAY5E,MAAM,GAAG,GAAG;QAC1BiC,gBAAgBF,IAAI,CAAC,CAAC,mBAAmB,EAAE6C,YAAY5E,MAAM,CAAC,MAAM,CAAC;IACvE;IAEA,IAAI6E,aAAa7E,MAAM,GAAG,GAAG;QAC3BiC,gBAAgBF,IAAI,CAAC,CAAC,+BAA+B,EAAE8C,aAAa7E,MAAM,CAAC,MAAM,CAAC;IACpF;IAEA,IAAI8E,oBAAoB9E,MAAM,GAAG,GAAG;QAClCiC,gBAAgBF,IAAI,CAAC,CAAC,yBAAyB,EAAE+C,oBAAoB9E,MAAM,CAAC,MAAM,CAAC;IACrF;IAEA,IAAI+E,YAAY/E,MAAM,GAAG,GAAG;QAC1BiC,gBAAgBF,IAAI,CAAC,CAAC,uBAAuB,EAAEgD,YAAY/E,MAAM,CAAC,MAAM,CAAC;IAC3E;IAEA,IAAIiC,gBAAgBjC,MAAM,KAAK,GAAG;QAChCiC,gBAAgBF,IAAI,CAAC;IACvB;IAEA,OAAOE;AACT"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "180a0848e027a0c7dc6af95b8ac3451813230a5f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2f6hw6qij8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2f6hw6qij8();
cov_2f6hw6qij8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2f6hw6qij8().f[0]++;
  cov_2f6hw6qij8().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2f6hw6qij8().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2f6hw6qij8().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_2f6hw6qij8().f[1]++;
    cov_2f6hw6qij8().s[4]++;
    return DELETE;
  },
  get GET() {
    /* istanbul ignore next */
    cov_2f6hw6qij8().f[2]++;
    cov_2f6hw6qij8().s[5]++;
    return GET;
  },
  get OPTIONS() {
    /* istanbul ignore next */
    cov_2f6hw6qij8().f[3]++;
    cov_2f6hw6qij8().s[6]++;
    return OPTIONS;
  },
  get POST() {
    /* istanbul ignore next */
    cov_2f6hw6qij8().f[4]++;
    cov_2f6hw6qij8().s[7]++;
    return POST;
  },
  get PUT() {
    /* istanbul ignore next */
    cov_2f6hw6qij8().f[5]++;
    cov_2f6hw6qij8().s[8]++;
    return PUT;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_2f6hw6qij8().f[6]++;
    cov_2f6hw6qij8().s[9]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_2f6hw6qij8().s[10]++, require("next/server"));
const _seotestingsuite =
/* istanbul ignore next */
(cov_2f6hw6qij8().s[11]++, require("../../../../lib/seo/seo-testing-suite"));
const _logger =
/* istanbul ignore next */
(cov_2f6hw6qij8().s[12]++, require("../../../../lib/enterprise/logger"));
const runtime =
/* istanbul ignore next */
(cov_2f6hw6qij8().s[13]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_2f6hw6qij8().f[7]++;
  cov_2f6hw6qij8().s[14]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_2f6hw6qij8().s[15]++, new URL(request.url));
    const action =
    /* istanbul ignore next */
    (cov_2f6hw6qij8().s[16]++, searchParams.get('action'));
    const testType =
    /* istanbul ignore next */
    (cov_2f6hw6qij8().s[17]++, searchParams.get('testType'));
    const limit =
    /* istanbul ignore next */
    (cov_2f6hw6qij8().s[18]++, searchParams.get('limit'));
    /* istanbul ignore next */
    cov_2f6hw6qij8().s[19]++;
    switch (action) {
      case 'stats':
        /* istanbul ignore next */
        cov_2f6hw6qij8().b[0][0]++;
        const stats =
        /* istanbul ignore next */
        (cov_2f6hw6qij8().s[20]++, _seotestingsuite.enhancedSEOTestingSuite.getTestingStats());
        /* istanbul ignore next */
        cov_2f6hw6qij8().s[21]++;
        return _server.NextResponse.json({
          success: true,
          data: stats
        });
      case 'history':
        /* istanbul ignore next */
        cov_2f6hw6qij8().b[0][1]++;
        const history =
        /* istanbul ignore next */
        (cov_2f6hw6qij8().s[22]++, _seotestingsuite.enhancedSEOTestingSuite.getTestHistory(limit ?
        /* istanbul ignore next */
        (cov_2f6hw6qij8().b[1][0]++, parseInt(limit)) :
        /* istanbul ignore next */
        (cov_2f6hw6qij8().b[1][1]++, undefined)));
        /* istanbul ignore next */
        cov_2f6hw6qij8().s[23]++;
        return _server.NextResponse.json({
          success: true,
          data: history
        });
      case 'active':
        /* istanbul ignore next */
        cov_2f6hw6qij8().b[0][2]++;
        const activeSuites =
        /* istanbul ignore next */
        (cov_2f6hw6qij8().s[24]++, _seotestingsuite.enhancedSEOTestingSuite.getActiveTestSuites());
        /* istanbul ignore next */
        cov_2f6hw6qij8().s[25]++;
        return _server.NextResponse.json({
          success: true,
          data: activeSuites
        });
      case 'run-by-type':
        /* istanbul ignore next */
        cov_2f6hw6qij8().b[0][3]++;
        cov_2f6hw6qij8().s[26]++;
        if (
        /* istanbul ignore next */
        (cov_2f6hw6qij8().b[3][0]++, !testType) ||
        /* istanbul ignore next */
        (cov_2f6hw6qij8().b[3][1]++, !['metadata', 'structured_data', 'robots_txt', 'internal_links', 'compliance', 'performance'].includes(testType))) {
          /* istanbul ignore next */
          cov_2f6hw6qij8().b[2][0]++;
          cov_2f6hw6qij8().s[27]++;
          return _server.NextResponse.json({
            success: false,
            error: 'testType parameter is required and must be valid',
            availableTypes: ['metadata', 'structured_data', 'robots_txt', 'internal_links', 'compliance', 'performance']
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_2f6hw6qij8().b[2][1]++;
        }
        const urls =
        /* istanbul ignore next */
        (cov_2f6hw6qij8().s[28]++, searchParams.get('urls')?.split(','));
        const testResults =
        /* istanbul ignore next */
        (cov_2f6hw6qij8().s[29]++, await _seotestingsuite.enhancedSEOTestingSuite.runTestsByType(testType, urls));
        /* istanbul ignore next */
        cov_2f6hw6qij8().s[30]++;
        return _server.NextResponse.json({
          success: true,
          data: {
            testType,
            results: testResults,
            summary: {
              totalTests: testResults.length,
              passed: testResults.filter(t => {
                /* istanbul ignore next */
                cov_2f6hw6qij8().f[8]++;
                cov_2f6hw6qij8().s[31]++;
                return t.status === 'passed';
              }).length,
              failed: testResults.filter(t => {
                /* istanbul ignore next */
                cov_2f6hw6qij8().f[9]++;
                cov_2f6hw6qij8().s[32]++;
                return t.status === 'failed';
              }).length,
              warnings: testResults.filter(t => {
                /* istanbul ignore next */
                cov_2f6hw6qij8().f[10]++;
                cov_2f6hw6qij8().s[33]++;
                return t.status === 'warning';
              }).length,
              averageScore: testResults.length > 0 ?
              /* istanbul ignore next */
              (cov_2f6hw6qij8().b[4][0]++, Math.round(testResults.reduce((sum, t) => {
                /* istanbul ignore next */
                cov_2f6hw6qij8().f[11]++;
                cov_2f6hw6qij8().s[34]++;
                return sum + t.score;
              }, 0) / testResults.length)) :
              /* istanbul ignore next */
              (cov_2f6hw6qij8().b[4][1]++, 0)
            }
          }
        });
      default:
        /* istanbul ignore next */
        cov_2f6hw6qij8().b[0][4]++;
        cov_2f6hw6qij8().s[35]++;
        return _server.NextResponse.json({
          success: true,
          data: {
            message: 'SEO Testing Suite API',
            version: '1.0.0',
            endpoints: {
              'GET ?action=stats': 'Get testing statistics',
              'GET ?action=history&limit=10': 'Get test history',
              'GET ?action=active': 'Get active test suites',
              'GET ?action=run-by-type&testType=metadata': 'Run specific test type',
              'POST': 'Run full test suite',
              'PUT': 'Update configuration',
              'DELETE': 'Clear cache'
            },
            testTypes: ['metadata', 'structured_data', 'robots_txt', 'internal_links', 'compliance', 'performance']
          }
        });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_2f6hw6qij8().s[36]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'SEO testing API GET error', error, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_2f6hw6qij8().s[37]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Failed to process request',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2f6hw6qij8().b[5][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2f6hw6qij8().b[5][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_2f6hw6qij8().f[12]++;
  cov_2f6hw6qij8().s[38]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_2f6hw6qij8().s[39]++, await request.json());
    const {
      action,
      urls,
      testTypes,
      config
    } =
    /* istanbul ignore next */
    (cov_2f6hw6qij8().s[40]++, body);
    let result;
    /* istanbul ignore next */
    cov_2f6hw6qij8().s[41]++;
    switch (action) {
      case 'run-full-suite':
        /* istanbul ignore next */
        cov_2f6hw6qij8().b[6][0]++;
        cov_2f6hw6qij8().s[42]++;
        result = await _seotestingsuite.enhancedSEOTestingSuite.runFullTestSuite(urls);
        /* istanbul ignore next */
        cov_2f6hw6qij8().s[43]++;
        break;
      case 'run-specific-tests':
        /* istanbul ignore next */
        cov_2f6hw6qij8().b[6][1]++;
        cov_2f6hw6qij8().s[44]++;
        if (
        /* istanbul ignore next */
        (cov_2f6hw6qij8().b[8][0]++, !testTypes) ||
        /* istanbul ignore next */
        (cov_2f6hw6qij8().b[8][1]++, !Array.isArray(testTypes))) {
          /* istanbul ignore next */
          cov_2f6hw6qij8().b[7][0]++;
          cov_2f6hw6qij8().s[45]++;
          return _server.NextResponse.json({
            success: false,
            error: 'testTypes array is required',
            availableTypes: ['metadata', 'structured_data', 'robots_txt', 'internal_links', 'compliance', 'performance']
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_2f6hw6qij8().b[7][1]++;
        }
        const allResults =
        /* istanbul ignore next */
        (cov_2f6hw6qij8().s[46]++, []);
        /* istanbul ignore next */
        cov_2f6hw6qij8().s[47]++;
        for (const testType of testTypes) {
          const typeResults =
          /* istanbul ignore next */
          (cov_2f6hw6qij8().s[48]++, await _seotestingsuite.enhancedSEOTestingSuite.runTestsByType(testType, urls));
          /* istanbul ignore next */
          cov_2f6hw6qij8().s[49]++;
          allResults.push(...typeResults);
        }
        /* istanbul ignore next */
        cov_2f6hw6qij8().s[50]++;
        result = {
          testTypes,
          results: allResults,
          summary: {
            totalTests: allResults.length,
            passed: allResults.filter(t => {
              /* istanbul ignore next */
              cov_2f6hw6qij8().f[13]++;
              cov_2f6hw6qij8().s[51]++;
              return t.status === 'passed';
            }).length,
            failed: allResults.filter(t => {
              /* istanbul ignore next */
              cov_2f6hw6qij8().f[14]++;
              cov_2f6hw6qij8().s[52]++;
              return t.status === 'failed';
            }).length,
            warnings: allResults.filter(t => {
              /* istanbul ignore next */
              cov_2f6hw6qij8().f[15]++;
              cov_2f6hw6qij8().s[53]++;
              return t.status === 'warning';
            }).length,
            averageScore: allResults.length > 0 ?
            /* istanbul ignore next */
            (cov_2f6hw6qij8().b[9][0]++, Math.round(allResults.reduce((sum, t) => {
              /* istanbul ignore next */
              cov_2f6hw6qij8().f[16]++;
              cov_2f6hw6qij8().s[54]++;
              return sum + t.score;
            }, 0) / allResults.length)) :
            /* istanbul ignore next */
            (cov_2f6hw6qij8().b[9][1]++, 0)
          }
        };
        /* istanbul ignore next */
        cov_2f6hw6qij8().s[55]++;
        break;
      case 'validate-metadata':
        /* istanbul ignore next */
        cov_2f6hw6qij8().b[6][2]++;
        const metadataResults =
        /* istanbul ignore next */
        (cov_2f6hw6qij8().s[56]++, await _seotestingsuite.enhancedSEOTestingSuite.runTestsByType('metadata', urls));
        /* istanbul ignore next */
        cov_2f6hw6qij8().s[57]++;
        result = {
          testType: 'metadata',
          results: metadataResults,
          recommendations: generateMetadataRecommendations(metadataResults)
        };
        /* istanbul ignore next */
        cov_2f6hw6qij8().s[58]++;
        break;
      case 'validate-structured-data':
        /* istanbul ignore next */
        cov_2f6hw6qij8().b[6][3]++;
        const structuredDataResults =
        /* istanbul ignore next */
        (cov_2f6hw6qij8().s[59]++, await _seotestingsuite.enhancedSEOTestingSuite.runTestsByType('structured_data', urls));
        /* istanbul ignore next */
        cov_2f6hw6qij8().s[60]++;
        result = {
          testType: 'structured_data',
          results: structuredDataResults,
          recommendations: generateStructuredDataRecommendations(structuredDataResults)
        };
        /* istanbul ignore next */
        cov_2f6hw6qij8().s[61]++;
        break;
      case 'audit-internal-links':
        /* istanbul ignore next */
        cov_2f6hw6qij8().b[6][4]++;
        const linksResults =
        /* istanbul ignore next */
        (cov_2f6hw6qij8().s[62]++, await _seotestingsuite.enhancedSEOTestingSuite.runTestsByType('internal_links', urls));
        /* istanbul ignore next */
        cov_2f6hw6qij8().s[63]++;
        result = {
          testType: 'internal_links',
          results: linksResults,
          recommendations: generateLinksRecommendations(linksResults)
        };
        /* istanbul ignore next */
        cov_2f6hw6qij8().s[64]++;
        break;
      case 'check-compliance':
        /* istanbul ignore next */
        cov_2f6hw6qij8().b[6][5]++;
        const complianceResults =
        /* istanbul ignore next */
        (cov_2f6hw6qij8().s[65]++, await _seotestingsuite.enhancedSEOTestingSuite.runTestsByType('compliance', urls));
        /* istanbul ignore next */
        cov_2f6hw6qij8().s[66]++;
        result = {
          testType: 'compliance',
          results: complianceResults,
          recommendations: generateComplianceRecommendations(complianceResults)
        };
        /* istanbul ignore next */
        cov_2f6hw6qij8().s[67]++;
        break;
      default:
        /* istanbul ignore next */
        cov_2f6hw6qij8().b[6][6]++;
        cov_2f6hw6qij8().s[68]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Invalid action',
          availableActions: ['run-full-suite', 'run-specific-tests', 'validate-metadata', 'validate-structured-data', 'audit-internal-links', 'check-compliance']
        }, {
          status: 400
        });
    }
    /* istanbul ignore next */
    cov_2f6hw6qij8().s[69]++;
    _logger.logger.info(_logger.LogLevel.INFO, 'SEO testing completed', {
      action,
      urlsCount:
      /* istanbul ignore next */
      (cov_2f6hw6qij8().b[10][0]++, urls?.length) ||
      /* istanbul ignore next */
      (cov_2f6hw6qij8().b[10][1]++, 0)
    }, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_2f6hw6qij8().s[70]++;
    return _server.NextResponse.json({
      success: true,
      data: result,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2f6hw6qij8().s[71]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'SEO testing API POST error', error, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_2f6hw6qij8().s[72]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Failed to run SEO tests',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2f6hw6qij8().b[11][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2f6hw6qij8().b[11][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
}
async function PUT(request) {
  /* istanbul ignore next */
  cov_2f6hw6qij8().f[17]++;
  cov_2f6hw6qij8().s[73]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_2f6hw6qij8().s[74]++, await request.json());
    const {
      config
    } =
    /* istanbul ignore next */
    (cov_2f6hw6qij8().s[75]++, body);
    /* istanbul ignore next */
    cov_2f6hw6qij8().s[76]++;
    if (
    /* istanbul ignore next */
    (cov_2f6hw6qij8().b[13][0]++, !config) ||
    /* istanbul ignore next */
    (cov_2f6hw6qij8().b[13][1]++, typeof config !== 'object')) {
      /* istanbul ignore next */
      cov_2f6hw6qij8().b[12][0]++;
      cov_2f6hw6qij8().s[77]++;
      return _server.NextResponse.json({
        success: false,
        error: 'config object is required',
        example: {
          config: {
            enableMetadataTests: true,
            enableStructuredDataTests: true,
            testTimeout: 30,
            thresholds: {
              titleMinLength: 30,
              titleMaxLength: 60,
              descriptionMinLength: 120,
              descriptionMaxLength: 160
            }
          }
        }
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2f6hw6qij8().b[12][1]++;
    }
    cov_2f6hw6qij8().s[78]++;
    _seotestingsuite.enhancedSEOTestingSuite.configure(config);
    /* istanbul ignore next */
    cov_2f6hw6qij8().s[79]++;
    _logger.logger.info(_logger.LogLevel.INFO, 'SEO testing suite reconfigured', {
      configKeys: Object.keys(config)
    }, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_2f6hw6qij8().s[80]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        message: 'Configuration updated successfully',
        updatedKeys: Object.keys(config)
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2f6hw6qij8().s[81]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'SEO testing API PUT error', error, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_2f6hw6qij8().s[82]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Failed to update configuration',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2f6hw6qij8().b[14][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2f6hw6qij8().b[14][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
}
async function DELETE(request) {
  /* istanbul ignore next */
  cov_2f6hw6qij8().f[18]++;
  cov_2f6hw6qij8().s[83]++;
  try {
    /* istanbul ignore next */
    cov_2f6hw6qij8().s[84]++;
    await _seotestingsuite.enhancedSEOTestingSuite.clearCache();
    /* istanbul ignore next */
    cov_2f6hw6qij8().s[85]++;
    _logger.logger.info(_logger.LogLevel.INFO, 'SEO testing suite cache cleared', {}, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_2f6hw6qij8().s[86]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        message: 'Cache cleared successfully'
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2f6hw6qij8().s[87]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'SEO testing API DELETE error', error, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_2f6hw6qij8().s[88]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Failed to clear cache',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2f6hw6qij8().b[15][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2f6hw6qij8().b[15][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
}
async function OPTIONS(request) {
  /* istanbul ignore next */
  cov_2f6hw6qij8().f[19]++;
  cov_2f6hw6qij8().s[89]++;
  return new _server.NextResponse(null, {
    status: 200,
    headers: {
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',
      'Access-Control-Allow-Headers': 'Content-Type, Authorization'
    }
  });
}
// ===================================
// FUNCIONES DE UTILIDAD
// ===================================
function generateMetadataRecommendations(results) {
  /* istanbul ignore next */
  cov_2f6hw6qij8().f[20]++;
  const recommendations =
  /* istanbul ignore next */
  (cov_2f6hw6qij8().s[90]++, []);
  const failedTitles =
  /* istanbul ignore next */
  (cov_2f6hw6qij8().s[91]++, results.filter(r => {
    /* istanbul ignore next */
    cov_2f6hw6qij8().f[21]++;
    cov_2f6hw6qij8().s[92]++;
    return /* istanbul ignore next */(cov_2f6hw6qij8().b[16][0]++, r.testName.includes('Title')) &&
    /* istanbul ignore next */
    (cov_2f6hw6qij8().b[16][1]++, r.status === 'failed');
  }));
  const failedDescriptions =
  /* istanbul ignore next */
  (cov_2f6hw6qij8().s[93]++, results.filter(r => {
    /* istanbul ignore next */
    cov_2f6hw6qij8().f[22]++;
    cov_2f6hw6qij8().s[94]++;
    return /* istanbul ignore next */(cov_2f6hw6qij8().b[17][0]++, r.testName.includes('Description')) &&
    /* istanbul ignore next */
    (cov_2f6hw6qij8().b[17][1]++, r.status === 'failed');
  }));
  const failedKeywords =
  /* istanbul ignore next */
  (cov_2f6hw6qij8().s[95]++, results.filter(r => {
    /* istanbul ignore next */
    cov_2f6hw6qij8().f[23]++;
    cov_2f6hw6qij8().s[96]++;
    return /* istanbul ignore next */(cov_2f6hw6qij8().b[18][0]++, r.testName.includes('Keywords')) &&
    /* istanbul ignore next */
    (cov_2f6hw6qij8().b[18][1]++, r.status !== 'passed');
  }));
  const failedOpenGraph =
  /* istanbul ignore next */
  (cov_2f6hw6qij8().s[97]++, results.filter(r => {
    /* istanbul ignore next */
    cov_2f6hw6qij8().f[24]++;
    cov_2f6hw6qij8().s[98]++;
    return /* istanbul ignore next */(cov_2f6hw6qij8().b[19][0]++, r.testName.includes('Open Graph')) &&
    /* istanbul ignore next */
    (cov_2f6hw6qij8().b[19][1]++, r.status !== 'passed');
  }));
  /* istanbul ignore next */
  cov_2f6hw6qij8().s[99]++;
  if (failedTitles.length > 0) {
    /* istanbul ignore next */
    cov_2f6hw6qij8().b[20][0]++;
    cov_2f6hw6qij8().s[100]++;
    recommendations.push(`Fix ${failedTitles.length} title tag issues - ensure 30-60 character length`);
  } else
  /* istanbul ignore next */
  {
    cov_2f6hw6qij8().b[20][1]++;
  }
  cov_2f6hw6qij8().s[101]++;
  if (failedDescriptions.length > 0) {
    /* istanbul ignore next */
    cov_2f6hw6qij8().b[21][0]++;
    cov_2f6hw6qij8().s[102]++;
    recommendations.push(`Improve ${failedDescriptions.length} meta descriptions - aim for 120-160 characters`);
  } else
  /* istanbul ignore next */
  {
    cov_2f6hw6qij8().b[21][1]++;
  }
  cov_2f6hw6qij8().s[103]++;
  if (failedKeywords.length > 0) {
    /* istanbul ignore next */
    cov_2f6hw6qij8().b[22][0]++;
    cov_2f6hw6qij8().s[104]++;
    recommendations.push(`Optimize keywords for ${failedKeywords.length} pages - include 3-5 relevant terms`);
  } else
  /* istanbul ignore next */
  {
    cov_2f6hw6qij8().b[22][1]++;
  }
  cov_2f6hw6qij8().s[105]++;
  if (failedOpenGraph.length > 0) {
    /* istanbul ignore next */
    cov_2f6hw6qij8().b[23][0]++;
    cov_2f6hw6qij8().s[106]++;
    recommendations.push(`Add Open Graph tags to ${failedOpenGraph.length} pages for better social sharing`);
  } else
  /* istanbul ignore next */
  {
    cov_2f6hw6qij8().b[23][1]++;
  }
  cov_2f6hw6qij8().s[107]++;
  if (recommendations.length === 0) {
    /* istanbul ignore next */
    cov_2f6hw6qij8().b[24][0]++;
    cov_2f6hw6qij8().s[108]++;
    recommendations.push('All metadata tests passed - excellent SEO optimization!');
  } else
  /* istanbul ignore next */
  {
    cov_2f6hw6qij8().b[24][1]++;
  }
  cov_2f6hw6qij8().s[109]++;
  return recommendations;
}
function generateStructuredDataRecommendations(results) {
  /* istanbul ignore next */
  cov_2f6hw6qij8().f[25]++;
  const recommendations =
  /* istanbul ignore next */
  (cov_2f6hw6qij8().s[110]++, []);
  const failedPresence =
  /* istanbul ignore next */
  (cov_2f6hw6qij8().s[111]++, results.filter(r => {
    /* istanbul ignore next */
    cov_2f6hw6qij8().f[26]++;
    cov_2f6hw6qij8().s[112]++;
    return /* istanbul ignore next */(cov_2f6hw6qij8().b[25][0]++, r.testName.includes('Presence')) &&
    /* istanbul ignore next */
    (cov_2f6hw6qij8().b[25][1]++, r.status === 'failed');
  }));
  const failedValidation =
  /* istanbul ignore next */
  (cov_2f6hw6qij8().s[113]++, results.filter(r => {
    /* istanbul ignore next */
    cov_2f6hw6qij8().f[27]++;
    cov_2f6hw6qij8().s[114]++;
    return /* istanbul ignore next */(cov_2f6hw6qij8().b[26][0]++, r.testName.includes('Validation')) &&
    /* istanbul ignore next */
    (cov_2f6hw6qij8().b[26][1]++, r.status === 'failed');
  }));
  const failedProduct =
  /* istanbul ignore next */
  (cov_2f6hw6qij8().s[115]++, results.filter(r => {
    /* istanbul ignore next */
    cov_2f6hw6qij8().f[28]++;
    cov_2f6hw6qij8().s[116]++;
    return /* istanbul ignore next */(cov_2f6hw6qij8().b[27][0]++, r.testName.includes('Product')) &&
    /* istanbul ignore next */
    (cov_2f6hw6qij8().b[27][1]++, r.status === 'failed');
  }));
  /* istanbul ignore next */
  cov_2f6hw6qij8().s[117]++;
  if (failedPresence.length > 0) {
    /* istanbul ignore next */
    cov_2f6hw6qij8().b[28][0]++;
    cov_2f6hw6qij8().s[118]++;
    recommendations.push(`Add structured data to ${failedPresence.length} pages`);
  } else
  /* istanbul ignore next */
  {
    cov_2f6hw6qij8().b[28][1]++;
  }
  cov_2f6hw6qij8().s[119]++;
  if (failedValidation.length > 0) {
    /* istanbul ignore next */
    cov_2f6hw6qij8().b[29][0]++;
    cov_2f6hw6qij8().s[120]++;
    recommendations.push(`Fix structured data validation errors on ${failedValidation.length} pages`);
  } else
  /* istanbul ignore next */
  {
    cov_2f6hw6qij8().b[29][1]++;
  }
  cov_2f6hw6qij8().s[121]++;
  if (failedProduct.length > 0) {
    /* istanbul ignore next */
    cov_2f6hw6qij8().b[30][0]++;
    cov_2f6hw6qij8().s[122]++;
    recommendations.push(`Add Product schema to ${failedProduct.length} product pages`);
  } else
  /* istanbul ignore next */
  {
    cov_2f6hw6qij8().b[30][1]++;
  }
  cov_2f6hw6qij8().s[123]++;
  if (recommendations.length === 0) {
    /* istanbul ignore next */
    cov_2f6hw6qij8().b[31][0]++;
    cov_2f6hw6qij8().s[124]++;
    recommendations.push('All structured data tests passed - excellent implementation!');
  } else
  /* istanbul ignore next */
  {
    cov_2f6hw6qij8().b[31][1]++;
  }
  cov_2f6hw6qij8().s[125]++;
  return recommendations;
}
function generateLinksRecommendations(results) {
  /* istanbul ignore next */
  cov_2f6hw6qij8().f[29]++;
  const recommendations =
  /* istanbul ignore next */
  (cov_2f6hw6qij8().s[126]++, []);
  const brokenLinks =
  /* istanbul ignore next */
  (cov_2f6hw6qij8().s[127]++, results.filter(r => {
    /* istanbul ignore next */
    cov_2f6hw6qij8().f[30]++;
    cov_2f6hw6qij8().s[128]++;
    return /* istanbul ignore next */(cov_2f6hw6qij8().b[32][0]++, r.testName.includes('Broken')) &&
    /* istanbul ignore next */
    (cov_2f6hw6qij8().b[32][1]++, r.status === 'failed');
  }));
  const anchorIssues =
  /* istanbul ignore next */
  (cov_2f6hw6qij8().s[129]++, results.filter(r => {
    /* istanbul ignore next */
    cov_2f6hw6qij8().f[31]++;
    cov_2f6hw6qij8().s[130]++;
    return /* istanbul ignore next */(cov_2f6hw6qij8().b[33][0]++, r.testName.includes('Anchor')) &&
    /* istanbul ignore next */
    (cov_2f6hw6qij8().b[33][1]++, r.status !== 'passed');
  }));
  const hierarchyIssues =
  /* istanbul ignore next */
  (cov_2f6hw6qij8().s[131]++, results.filter(r => {
    /* istanbul ignore next */
    cov_2f6hw6qij8().f[32]++;
    cov_2f6hw6qij8().s[132]++;
    return /* istanbul ignore next */(cov_2f6hw6qij8().b[34][0]++, r.testName.includes('Hierarchy')) &&
    /* istanbul ignore next */
    (cov_2f6hw6qij8().b[34][1]++, r.status !== 'passed');
  }));
  /* istanbul ignore next */
  cov_2f6hw6qij8().s[133]++;
  if (brokenLinks.length > 0) {
    /* istanbul ignore next */
    cov_2f6hw6qij8().b[35][0]++;
    cov_2f6hw6qij8().s[134]++;
    recommendations.push(`Fix broken links on ${brokenLinks.length} pages`);
  } else
  /* istanbul ignore next */
  {
    cov_2f6hw6qij8().b[35][1]++;
  }
  cov_2f6hw6qij8().s[135]++;
  if (anchorIssues.length > 0) {
    /* istanbul ignore next */
    cov_2f6hw6qij8().b[36][0]++;
    cov_2f6hw6qij8().s[136]++;
    recommendations.push(`Improve anchor text on ${anchorIssues.length} pages`);
  } else
  /* istanbul ignore next */
  {
    cov_2f6hw6qij8().b[36][1]++;
  }
  cov_2f6hw6qij8().s[137]++;
  if (hierarchyIssues.length > 0) {
    /* istanbul ignore next */
    cov_2f6hw6qij8().b[37][0]++;
    cov_2f6hw6qij8().s[138]++;
    recommendations.push(`Improve link hierarchy on ${hierarchyIssues.length} pages`);
  } else
  /* istanbul ignore next */
  {
    cov_2f6hw6qij8().b[37][1]++;
  }
  cov_2f6hw6qij8().s[139]++;
  if (recommendations.length === 0) {
    /* istanbul ignore next */
    cov_2f6hw6qij8().b[38][0]++;
    cov_2f6hw6qij8().s[140]++;
    recommendations.push('All internal links tests passed - excellent link structure!');
  } else
  /* istanbul ignore next */
  {
    cov_2f6hw6qij8().b[38][1]++;
  }
  cov_2f6hw6qij8().s[141]++;
  return recommendations;
}
function generateComplianceRecommendations(results) {
  /* istanbul ignore next */
  cov_2f6hw6qij8().f[33]++;
  const recommendations =
  /* istanbul ignore next */
  (cov_2f6hw6qij8().s[142]++, []);
  const httpsIssues =
  /* istanbul ignore next */
  (cov_2f6hw6qij8().s[143]++, results.filter(r => {
    /* istanbul ignore next */
    cov_2f6hw6qij8().f[34]++;
    cov_2f6hw6qij8().s[144]++;
    return /* istanbul ignore next */(cov_2f6hw6qij8().b[39][0]++, r.testName.includes('HTTPS')) &&
    /* istanbul ignore next */
    (cov_2f6hw6qij8().b[39][1]++, r.status === 'failed');
  }));
  const mobileIssues =
  /* istanbul ignore next */
  (cov_2f6hw6qij8().s[145]++, results.filter(r => {
    /* istanbul ignore next */
    cov_2f6hw6qij8().f[35]++;
    cov_2f6hw6qij8().s[146]++;
    return /* istanbul ignore next */(cov_2f6hw6qij8().b[40][0]++, r.testName.includes('Mobile')) &&
    /* istanbul ignore next */
    (cov_2f6hw6qij8().b[40][1]++, r.status === 'failed');
  }));
  const accessibilityIssues =
  /* istanbul ignore next */
  (cov_2f6hw6qij8().s[147]++, results.filter(r => {
    /* istanbul ignore next */
    cov_2f6hw6qij8().f[36]++;
    cov_2f6hw6qij8().s[148]++;
    return /* istanbul ignore next */(cov_2f6hw6qij8().b[41][0]++, r.testName.includes('Accessibility')) &&
    /* istanbul ignore next */
    (cov_2f6hw6qij8().b[41][1]++, r.status !== 'passed');
  }));
  const speedIssues =
  /* istanbul ignore next */
  (cov_2f6hw6qij8().s[149]++, results.filter(r => {
    /* istanbul ignore next */
    cov_2f6hw6qij8().f[37]++;
    cov_2f6hw6qij8().s[150]++;
    return /* istanbul ignore next */(cov_2f6hw6qij8().b[42][0]++, r.testName.includes('Speed')) &&
    /* istanbul ignore next */
    (cov_2f6hw6qij8().b[42][1]++, r.status !== 'passed');
  }));
  /* istanbul ignore next */
  cov_2f6hw6qij8().s[151]++;
  if (httpsIssues.length > 0) {
    /* istanbul ignore next */
    cov_2f6hw6qij8().b[43][0]++;
    cov_2f6hw6qij8().s[152]++;
    recommendations.push(`Implement HTTPS on ${httpsIssues.length} pages`);
  } else
  /* istanbul ignore next */
  {
    cov_2f6hw6qij8().b[43][1]++;
  }
  cov_2f6hw6qij8().s[153]++;
  if (mobileIssues.length > 0) {
    /* istanbul ignore next */
    cov_2f6hw6qij8().b[44][0]++;
    cov_2f6hw6qij8().s[154]++;
    recommendations.push(`Improve mobile optimization on ${mobileIssues.length} pages`);
  } else
  /* istanbul ignore next */
  {
    cov_2f6hw6qij8().b[44][1]++;
  }
  cov_2f6hw6qij8().s[155]++;
  if (accessibilityIssues.length > 0) {
    /* istanbul ignore next */
    cov_2f6hw6qij8().b[45][0]++;
    cov_2f6hw6qij8().s[156]++;
    recommendations.push(`Improve accessibility on ${accessibilityIssues.length} pages`);
  } else
  /* istanbul ignore next */
  {
    cov_2f6hw6qij8().b[45][1]++;
  }
  cov_2f6hw6qij8().s[157]++;
  if (speedIssues.length > 0) {
    /* istanbul ignore next */
    cov_2f6hw6qij8().b[46][0]++;
    cov_2f6hw6qij8().s[158]++;
    recommendations.push(`Optimize page speed on ${speedIssues.length} pages`);
  } else
  /* istanbul ignore next */
  {
    cov_2f6hw6qij8().b[46][1]++;
  }
  cov_2f6hw6qij8().s[159]++;
  if (recommendations.length === 0) {
    /* istanbul ignore next */
    cov_2f6hw6qij8().b[47][0]++;
    cov_2f6hw6qij8().s[160]++;
    recommendations.push('All compliance tests passed - excellent technical implementation!');
  } else
  /* istanbul ignore next */
  {
    cov_2f6hw6qij8().b[47][1]++;
  }
  cov_2f6hw6qij8().s[161]++;
  return recommendations;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,