230e88ac6a730b7900de7f79f4ceb171
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_1b84146wv8() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\preferences\\route.ts";
  var hash = "98481615f4a144d381221d339fb380d1634660eb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\preferences\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 22
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 19
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 23
        }
      },
      "8": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "9": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 54
        }
      },
      "10": {
        start: {
          line: 28,
          column: 18
        },
        end: {
          line: 28,
          column: 66
        }
      },
      "11": {
        start: {
          line: 29,
          column: 24
        },
        end: {
          line: 29,
          column: 74
        }
      },
      "12": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 24
        }
      },
      "13": {
        start: {
          line: 32,
          column: 27
        },
        end: {
          line: 56,
          column: 1
        }
      },
      "14": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 91,
          column: 5
        }
      },
      "15": {
        start: {
          line: 59,
          column: 24
        },
        end: {
          line: 59,
          column: 49
        }
      },
      "16": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "17": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 65,
          column: 15
        }
      },
      "18": {
        start: {
          line: 67,
          column: 23
        },
        end: {
          line: 67,
          column: 38
        }
      },
      "19": {
        start: {
          line: 69,
          column: 43
        },
        end: {
          line: 69,
          column: 150
        }
      },
      "20": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "21": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 67
        }
      },
      "22": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 76,
          column: 15
        }
      },
      "23": {
        start: {
          line: 79,
          column: 28
        },
        end: {
          line: 79,
          column: 72
        }
      },
      "24": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 83,
          column: 11
        }
      },
      "25": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 68
        }
      },
      "26": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 90,
          column: 11
        }
      },
      "27": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 154,
          column: 5
        }
      },
      "28": {
        start: {
          line: 95,
          column: 24
        },
        end: {
          line: 95,
          column: 49
        }
      },
      "29": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "30": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 101,
          column: 15
        }
      },
      "31": {
        start: {
          line: 103,
          column: 23
        },
        end: {
          line: 103,
          column: 38
        }
      },
      "32": {
        start: {
          line: 104,
          column: 21
        },
        end: {
          line: 104,
          column: 41
        }
      },
      "33": {
        start: {
          line: 105,
          column: 32
        },
        end: {
          line: 105,
          column: 36
        }
      },
      "34": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "35": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 111,
          column: 15
        }
      },
      "36": {
        start: {
          line: 114,
          column: 37
        },
        end: {
          line: 114,
          column: 69
        }
      },
      "37": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 121,
          column: 9
        }
      },
      "38": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 120,
          column: 15
        }
      },
      "39": {
        start: {
          line: 123,
          column: 46
        },
        end: {
          line: 127,
          column: 28
        }
      },
      "40": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "41": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 70
        }
      },
      "42": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 134,
          column: 15
        }
      },
      "43": {
        start: {
          line: 137,
          column: 28
        },
        end: {
          line: 137,
          column: 72
        }
      },
      "44": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 141,
          column: 24
        }
      },
      "45": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 146,
          column: 11
        }
      },
      "46": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 68
        }
      },
      "47": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 153,
          column: 11
        }
      },
      "48": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 199,
          column: 5
        }
      },
      "49": {
        start: {
          line: 158,
          column: 24
        },
        end: {
          line: 158,
          column: 49
        }
      },
      "50": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "51": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 164,
          column: 15
        }
      },
      "52": {
        start: {
          line: 166,
          column: 23
        },
        end: {
          line: 166,
          column: 38
        }
      },
      "53": {
        start: {
          line: 168,
          column: 44
        },
        end: {
          line: 172,
          column: 28
        }
      },
      "54": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 180,
          column: 9
        }
      },
      "55": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 68
        }
      },
      "56": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 179,
          column: 15
        }
      },
      "57": {
        start: {
          line: 182,
          column: 28
        },
        end: {
          line: 182,
          column: 72
        }
      },
      "58": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 186,
          column: 24
        }
      },
      "59": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 191,
          column: 11
        }
      },
      "60": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 71
        }
      },
      "61": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 198,
          column: 11
        }
      },
      "62": {
        start: {
          line: 203,
          column: 4
        },
        end: {
          line: 272,
          column: 5
        }
      },
      "63": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "64": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 24
        }
      },
      "65": {
        start: {
          line: 209,
          column: 26
        },
        end: {
          line: 222,
          column: 9
        }
      },
      "66": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 233,
          column: 9
        }
      },
      "67": {
        start: {
          line: 225,
          column: 39
        },
        end: {
          line: 229,
          column: 13
        }
      },
      "68": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 232,
          column: 13
        }
      },
      "69": {
        start: {
          line: 231,
          column: 16
        },
        end: {
          line: 231,
          column: 50
        }
      },
      "70": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 248,
          column: 9
        }
      },
      "71": {
        start: {
          line: 235,
          column: 40
        },
        end: {
          line: 244,
          column: 13
        }
      },
      "72": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 247,
          column: 13
        }
      },
      "73": {
        start: {
          line: 246,
          column: 16
        },
        end: {
          line: 246,
          column: 51
        }
      },
      "74": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 258,
          column: 9
        }
      },
      "75": {
        start: {
          line: 250,
          column: 36
        },
        end: {
          line: 254,
          column: 13
        }
      },
      "76": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 257,
          column: 13
        }
      },
      "77": {
        start: {
          line: 256,
          column: 16
        },
        end: {
          line: 256,
          column: 51
        }
      },
      "78": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 267,
          column: 9
        }
      },
      "79": {
        start: {
          line: 260,
          column: 40
        },
        end: {
          line: 263,
          column: 13
        }
      },
      "80": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 266,
          column: 13
        }
      },
      "81": {
        start: {
          line: 265,
          column: 16
        },
        end: {
          line: 265,
          column: 64
        }
      },
      "82": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 268,
          column: 25
        }
      },
      "83": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 270,
          column: 63
        }
      },
      "84": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 271,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "GET",
        decl: {
          start: {
            line: 57,
            column: 15
          },
          end: {
            line: 57,
            column: 18
          }
        },
        loc: {
          start: {
            line: 57,
            column: 28
          },
          end: {
            line: 92,
            column: 1
          }
        },
        line: 57
      },
      "6": {
        name: "PUT",
        decl: {
          start: {
            line: 93,
            column: 15
          },
          end: {
            line: 93,
            column: 18
          }
        },
        loc: {
          start: {
            line: 93,
            column: 28
          },
          end: {
            line: 155,
            column: 1
          }
        },
        line: 93
      },
      "7": {
        name: "DELETE",
        decl: {
          start: {
            line: 156,
            column: 15
          },
          end: {
            line: 156,
            column: 21
          }
        },
        loc: {
          start: {
            line: 156,
            column: 31
          },
          end: {
            line: 200,
            column: 1
          }
        },
        line: 156
      },
      "8": {
        name: "validatePreferences",
        decl: {
          start: {
            line: 202,
            column: 9
          },
          end: {
            line: 202,
            column: 28
          }
        },
        loc: {
          start: {
            line: 202,
            column: 42
          },
          end: {
            line: 273,
            column: 1
          }
        },
        line: 202
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "1": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "2": {
        loc: {
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 70,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 70,
            column: 17
          }
        }, {
          start: {
            line: 70,
            column: 21
          },
          end: {
            line: 70,
            column: 46
          }
        }],
        line: 70
      },
      "3": {
        loc: {
          start: {
            line: 79,
            column: 28
          },
          end: {
            line: 79,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 28
          },
          end: {
            line: 79,
            column: 50
          }
        }, {
          start: {
            line: 79,
            column: 54
          },
          end: {
            line: 79,
            column: 72
          }
        }],
        line: 79
      },
      "4": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "5": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "6": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "7": {
        loc: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "8": {
        loc: {
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "9": {
        loc: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "10": {
        loc: {
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "11": {
        loc: {
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 205,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 205,
            column: 24
          }
        }, {
          start: {
            line: 205,
            column: 28
          },
          end: {
            line: 205,
            column: 59
          }
        }],
        line: 205
      },
      "12": {
        loc: {
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "13": {
        loc: {
          start: {
            line: 230,
            column: 12
          },
          end: {
            line: 232,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 12
          },
          end: {
            line: 232,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "14": {
        loc: {
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 248,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 248,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "15": {
        loc: {
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 247,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 247,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "16": {
        loc: {
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 258,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 258,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "17": {
        loc: {
          start: {
            line: 255,
            column: 12
          },
          end: {
            line: 257,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 12
          },
          end: {
            line: 257,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "18": {
        loc: {
          start: {
            line: 259,
            column: 8
          },
          end: {
            line: 267,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 8
          },
          end: {
            line: 267,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 259
      },
      "19": {
        loc: {
          start: {
            line: 264,
            column: 12
          },
          end: {
            line: 266,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 264,
            column: 12
          },
          end: {
            line: 266,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 264
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\preferences\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API DE PREFERENCIAS DE USUARIO\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { logPreferenceActivity, getRequestInfo } from '@/lib/activity/activityLogger';\r\n\r\n// Tipos para las preferencias\r\ninterface UserPreferences {\r\n  notifications: {\r\n    emailNotifications: boolean;\r\n    orderUpdates: boolean;\r\n    promotions: boolean;\r\n    securityAlerts: boolean;\r\n    marketingEmails: boolean;\r\n    pushNotifications: boolean;\r\n    smsNotifications: boolean;\r\n  };\r\n  display: {\r\n    language: string;\r\n    timezone: string;\r\n    currency: string;\r\n    theme: string;\r\n  };\r\n  privacy: {\r\n    profileVisibility: 'public' | 'private';\r\n    activityTracking: boolean;\r\n    marketingConsent: boolean;\r\n    dataCollection: boolean;\r\n    thirdPartySharing: boolean;\r\n    analyticsOptOut: boolean;\r\n  };\r\n}\r\n\r\n// Preferencias por defecto\r\nconst defaultPreferences: UserPreferences = {\r\n  notifications: {\r\n    emailNotifications: true,\r\n    orderUpdates: true,\r\n    promotions: false,\r\n    securityAlerts: true,\r\n    marketingEmails: false,\r\n    pushNotifications: true,\r\n    smsNotifications: false,\r\n  },\r\n  display: {\r\n    language: 'es',\r\n    timezone: 'America/Argentina/Buenos_Aires',\r\n    currency: 'ARS',\r\n    theme: 'system',\r\n  },\r\n  privacy: {\r\n    profileVisibility: 'private',\r\n    activityTracking: true,\r\n    marketingConsent: false,\r\n    dataCollection: true,\r\n    thirdPartySharing: false,\r\n    analyticsOptOut: false,\r\n  },\r\n};\r\n\r\n// GET - Obtener preferencias del usuario\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const session = await auth();\r\n    if (!session?.user?.id) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n\r\n    // Obtener preferencias de la base de datos\r\n    const { data: userPrefs, error } = await supabaseAdmin\r\n      .from('user_preferences')\r\n      .select('preferences')\r\n      .eq('user_id', userId)\r\n      .single();\r\n\r\n    if (error && error.code !== 'PGRST116') { // PGRST116 = no rows found\r\n      console.error('Error al obtener preferencias:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al obtener preferencias' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Si no hay preferencias guardadas, devolver las por defecto\r\n    const preferences = userPrefs?.preferences || defaultPreferences;\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      preferences,\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en GET /api/user/preferences:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// PUT - Actualizar preferencias completas\r\nexport async function PUT(request: NextRequest) {\r\n  try {\r\n    const session = await auth();\r\n    if (!session?.user?.id) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n    const body = await request.json();\r\n    const { preferences } = body;\r\n\r\n    if (!preferences) {\r\n      return NextResponse.json(\r\n        { error: 'Preferencias requeridas' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Validar estructura de preferencias\r\n    const validatedPreferences = validatePreferences(preferences);\r\n    if (!validatedPreferences) {\r\n      return NextResponse.json(\r\n        { error: 'Formato de preferencias inv\xE1lido' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Upsert preferencias en la base de datos\r\n    const { data: updatedPrefs, error } = await supabaseAdmin\r\n      .from('user_preferences')\r\n      .upsert({\r\n        user_id: userId,\r\n        preferences: validatedPreferences,\r\n        updated_at: new Date().toISOString(),\r\n      })\r\n      .select()\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('Error al actualizar preferencias:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al actualizar preferencias' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Registrar actividad\r\n    const requestInfo = getRequestInfo(request);\r\n    await logPreferenceActivity(\r\n      userId,\r\n      'update_preferences',\r\n      {\r\n        sections_updated: Object.keys(preferences),\r\n        total_preferences: Object.keys(validatedPreferences).length,\r\n      },\r\n      requestInfo\r\n    );\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      preferences: updatedPrefs.preferences,\r\n      message: 'Preferencias actualizadas correctamente',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en PUT /api/user/preferences:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// DELETE - Resetear a preferencias por defecto\r\nexport async function DELETE(request: NextRequest) {\r\n  try {\r\n    const session = await auth();\r\n    if (!session?.user?.id) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n\r\n    // Resetear a preferencias por defecto\r\n    const { data: resetPrefs, error } = await supabaseAdmin\r\n      .from('user_preferences')\r\n      .upsert({\r\n        user_id: userId,\r\n        preferences: defaultPreferences,\r\n        updated_at: new Date().toISOString(),\r\n      })\r\n      .select()\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('Error al resetear preferencias:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al resetear preferencias' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Registrar actividad\r\n    const requestInfo = getRequestInfo(request);\r\n    await logPreferenceActivity(\r\n      userId,\r\n      'reset_preferences',\r\n      {\r\n        reset_to_defaults: true,\r\n        previous_preferences_count: Object.keys(defaultPreferences).length,\r\n      },\r\n      requestInfo\r\n    );\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      preferences: resetPrefs.preferences,\r\n      message: 'Preferencias reseteadas a valores por defecto',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en DELETE /api/user/preferences:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// Funci\xF3n para validar preferencias\r\nfunction validatePreferences(preferences: any): UserPreferences | null {\r\n  try {\r\n    // Validar estructura b\xE1sica\r\n    if (!preferences || typeof preferences !== 'object') {\r\n      return null;\r\n    }\r\n\r\n    // Combinar con valores por defecto para asegurar completitud\r\n    const validated: UserPreferences = {\r\n      notifications: {\r\n        ...defaultPreferences.notifications,\r\n        ...preferences.notifications,\r\n      },\r\n      display: {\r\n        ...defaultPreferences.display,\r\n        ...preferences.display,\r\n      },\r\n      privacy: {\r\n        ...defaultPreferences.privacy,\r\n        ...preferences.privacy,\r\n      },\r\n    };\r\n\r\n    // Validaciones espec\xEDficas\r\n    if (preferences.display?.language) {\r\n      const supportedLanguages = ['es', 'en', 'pt'];\r\n      if (!supportedLanguages.includes(preferences.display.language)) {\r\n        validated.display.language = 'es';\r\n      }\r\n    }\r\n\r\n    if (preferences.display?.currency) {\r\n      const supportedCurrencies = ['ARS', 'USD', 'EUR', 'BRL', 'CLP', 'COP', 'MXN', 'PEN'];\r\n      if (!supportedCurrencies.includes(preferences.display.currency)) {\r\n        validated.display.currency = 'ARS';\r\n      }\r\n    }\r\n\r\n    if (preferences.display?.theme) {\r\n      const supportedThemes = ['light', 'dark', 'system'];\r\n      if (!supportedThemes.includes(preferences.display.theme)) {\r\n        validated.display.theme = 'system';\r\n      }\r\n    }\r\n\r\n    if (preferences.privacy?.profileVisibility) {\r\n      const supportedVisibility = ['public', 'private'];\r\n      if (!supportedVisibility.includes(preferences.privacy.profileVisibility)) {\r\n        validated.privacy.profileVisibility = 'private';\r\n      }\r\n    }\r\n\r\n    return validated;\r\n  } catch (error) {\r\n    console.error('Error al validar preferencias:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["DELETE", "GET", "PUT", "runtime", "defaultPreferences", "notifications", "emailNotifications", "orderUpdates", "promotions", "securityAlerts", "marketingEmails", "pushNotifications", "smsNotifications", "display", "language", "timezone", "currency", "theme", "privacy", "profileVisibility", "activityTracking", "marketingConsent", "dataCollection", "thirdPartySharing", "analyticsOptOut", "request", "session", "auth", "user", "id", "NextResponse", "json", "error", "status", "userId", "data", "userPrefs", "supabaseAdmin", "from", "select", "eq", "single", "code", "console", "preferences", "success", "body", "validatedPreferences", "validatePreferences", "updatedPrefs", "upsert", "user_id", "updated_at", "Date", "toISOString", "requestInfo", "getRequestInfo", "logPreferenceActivity", "sections_updated", "Object", "keys", "total_preferences", "length", "message", "resetPrefs", "reset_to_defaults", "previous_preferences_count", "validated", "supportedLanguages", "includes", "supportedCurrencies", "supportedThemes", "supportedVisibility"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "98481615f4a144d381221d339fb380d1634660eb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1b84146wv8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1b84146wv8();
cov_1b84146wv8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1b84146wv8().f[0]++;
  cov_1b84146wv8().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1b84146wv8().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1b84146wv8().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_1b84146wv8().f[1]++;
    cov_1b84146wv8().s[4]++;
    return DELETE;
  },
  get GET() {
    /* istanbul ignore next */
    cov_1b84146wv8().f[2]++;
    cov_1b84146wv8().s[5]++;
    return GET;
  },
  get PUT() {
    /* istanbul ignore next */
    cov_1b84146wv8().f[3]++;
    cov_1b84146wv8().s[6]++;
    return PUT;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_1b84146wv8().f[4]++;
    cov_1b84146wv8().s[7]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_1b84146wv8().s[8]++, require("next/server"));
const _config =
/* istanbul ignore next */
(cov_1b84146wv8().s[9]++, require("../../../../lib/auth/config"));
const _supabase =
/* istanbul ignore next */
(cov_1b84146wv8().s[10]++, require("../../../../lib/integrations/supabase"));
const _activityLogger =
/* istanbul ignore next */
(cov_1b84146wv8().s[11]++, require("../../../../lib/activity/activityLogger"));
const runtime =
/* istanbul ignore next */
(cov_1b84146wv8().s[12]++, 'nodejs');
// Preferencias por defecto
const defaultPreferences =
/* istanbul ignore next */
(cov_1b84146wv8().s[13]++, {
  notifications: {
    emailNotifications: true,
    orderUpdates: true,
    promotions: false,
    securityAlerts: true,
    marketingEmails: false,
    pushNotifications: true,
    smsNotifications: false
  },
  display: {
    language: 'es',
    timezone: 'America/Argentina/Buenos_Aires',
    currency: 'ARS',
    theme: 'system'
  },
  privacy: {
    profileVisibility: 'private',
    activityTracking: true,
    marketingConsent: false,
    dataCollection: true,
    thirdPartySharing: false,
    analyticsOptOut: false
  }
});
async function GET(request) {
  /* istanbul ignore next */
  cov_1b84146wv8().f[5]++;
  cov_1b84146wv8().s[14]++;
  try {
    const session =
    /* istanbul ignore next */
    (cov_1b84146wv8().s[15]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_1b84146wv8().s[16]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_1b84146wv8().b[0][0]++;
      cov_1b84146wv8().s[17]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1b84146wv8().b[0][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_1b84146wv8().s[18]++, session.user.id);
    // Obtener preferencias de la base de datos
    const {
      data: userPrefs,
      error
    } =
    /* istanbul ignore next */
    (cov_1b84146wv8().s[19]++, await _supabase.supabaseAdmin.from('user_preferences').select('preferences').eq('user_id', userId).single());
    /* istanbul ignore next */
    cov_1b84146wv8().s[20]++;
    if (
    /* istanbul ignore next */
    (cov_1b84146wv8().b[2][0]++, error) &&
    /* istanbul ignore next */
    (cov_1b84146wv8().b[2][1]++, error.code !== 'PGRST116')) {
      /* istanbul ignore next */
      cov_1b84146wv8().b[1][0]++;
      cov_1b84146wv8().s[21]++;
      console.error('Error al obtener preferencias:', error);
      /* istanbul ignore next */
      cov_1b84146wv8().s[22]++;
      return _server.NextResponse.json({
        error: 'Error al obtener preferencias'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_1b84146wv8().b[1][1]++;
    }
    // Si no hay preferencias guardadas, devolver las por defecto
    const preferences =
    /* istanbul ignore next */
    (cov_1b84146wv8().s[23]++,
    /* istanbul ignore next */
    (cov_1b84146wv8().b[3][0]++, userPrefs?.preferences) ||
    /* istanbul ignore next */
    (cov_1b84146wv8().b[3][1]++, defaultPreferences));
    /* istanbul ignore next */
    cov_1b84146wv8().s[24]++;
    return _server.NextResponse.json({
      success: true,
      preferences
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1b84146wv8().s[25]++;
    console.error('Error en GET /api/user/preferences:', error);
    /* istanbul ignore next */
    cov_1b84146wv8().s[26]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function PUT(request) {
  /* istanbul ignore next */
  cov_1b84146wv8().f[6]++;
  cov_1b84146wv8().s[27]++;
  try {
    const session =
    /* istanbul ignore next */
    (cov_1b84146wv8().s[28]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_1b84146wv8().s[29]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_1b84146wv8().b[4][0]++;
      cov_1b84146wv8().s[30]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1b84146wv8().b[4][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_1b84146wv8().s[31]++, session.user.id);
    const body =
    /* istanbul ignore next */
    (cov_1b84146wv8().s[32]++, await request.json());
    const {
      preferences
    } =
    /* istanbul ignore next */
    (cov_1b84146wv8().s[33]++, body);
    /* istanbul ignore next */
    cov_1b84146wv8().s[34]++;
    if (!preferences) {
      /* istanbul ignore next */
      cov_1b84146wv8().b[5][0]++;
      cov_1b84146wv8().s[35]++;
      return _server.NextResponse.json({
        error: 'Preferencias requeridas'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1b84146wv8().b[5][1]++;
    }
    // Validar estructura de preferencias
    const validatedPreferences =
    /* istanbul ignore next */
    (cov_1b84146wv8().s[36]++, validatePreferences(preferences));
    /* istanbul ignore next */
    cov_1b84146wv8().s[37]++;
    if (!validatedPreferences) {
      /* istanbul ignore next */
      cov_1b84146wv8().b[6][0]++;
      cov_1b84146wv8().s[38]++;
      return _server.NextResponse.json({
        error: 'Formato de preferencias invÃ¡lido'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1b84146wv8().b[6][1]++;
    }
    // Upsert preferencias en la base de datos
    const {
      data: updatedPrefs,
      error
    } =
    /* istanbul ignore next */
    (cov_1b84146wv8().s[39]++, await _supabase.supabaseAdmin.from('user_preferences').upsert({
      user_id: userId,
      preferences: validatedPreferences,
      updated_at: new Date().toISOString()
    }).select().single());
    /* istanbul ignore next */
    cov_1b84146wv8().s[40]++;
    if (error) {
      /* istanbul ignore next */
      cov_1b84146wv8().b[7][0]++;
      cov_1b84146wv8().s[41]++;
      console.error('Error al actualizar preferencias:', error);
      /* istanbul ignore next */
      cov_1b84146wv8().s[42]++;
      return _server.NextResponse.json({
        error: 'Error al actualizar preferencias'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_1b84146wv8().b[7][1]++;
    }
    // Registrar actividad
    const requestInfo =
    /* istanbul ignore next */
    (cov_1b84146wv8().s[43]++, (0, _activityLogger.getRequestInfo)(request));
    /* istanbul ignore next */
    cov_1b84146wv8().s[44]++;
    await (0, _activityLogger.logPreferenceActivity)(userId, 'update_preferences', {
      sections_updated: Object.keys(preferences),
      total_preferences: Object.keys(validatedPreferences).length
    }, requestInfo);
    /* istanbul ignore next */
    cov_1b84146wv8().s[45]++;
    return _server.NextResponse.json({
      success: true,
      preferences: updatedPrefs.preferences,
      message: 'Preferencias actualizadas correctamente'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1b84146wv8().s[46]++;
    console.error('Error en PUT /api/user/preferences:', error);
    /* istanbul ignore next */
    cov_1b84146wv8().s[47]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function DELETE(request) {
  /* istanbul ignore next */
  cov_1b84146wv8().f[7]++;
  cov_1b84146wv8().s[48]++;
  try {
    const session =
    /* istanbul ignore next */
    (cov_1b84146wv8().s[49]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_1b84146wv8().s[50]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_1b84146wv8().b[8][0]++;
      cov_1b84146wv8().s[51]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1b84146wv8().b[8][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_1b84146wv8().s[52]++, session.user.id);
    // Resetear a preferencias por defecto
    const {
      data: resetPrefs,
      error
    } =
    /* istanbul ignore next */
    (cov_1b84146wv8().s[53]++, await _supabase.supabaseAdmin.from('user_preferences').upsert({
      user_id: userId,
      preferences: defaultPreferences,
      updated_at: new Date().toISOString()
    }).select().single());
    /* istanbul ignore next */
    cov_1b84146wv8().s[54]++;
    if (error) {
      /* istanbul ignore next */
      cov_1b84146wv8().b[9][0]++;
      cov_1b84146wv8().s[55]++;
      console.error('Error al resetear preferencias:', error);
      /* istanbul ignore next */
      cov_1b84146wv8().s[56]++;
      return _server.NextResponse.json({
        error: 'Error al resetear preferencias'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_1b84146wv8().b[9][1]++;
    }
    // Registrar actividad
    const requestInfo =
    /* istanbul ignore next */
    (cov_1b84146wv8().s[57]++, (0, _activityLogger.getRequestInfo)(request));
    /* istanbul ignore next */
    cov_1b84146wv8().s[58]++;
    await (0, _activityLogger.logPreferenceActivity)(userId, 'reset_preferences', {
      reset_to_defaults: true,
      previous_preferences_count: Object.keys(defaultPreferences).length
    }, requestInfo);
    /* istanbul ignore next */
    cov_1b84146wv8().s[59]++;
    return _server.NextResponse.json({
      success: true,
      preferences: resetPrefs.preferences,
      message: 'Preferencias reseteadas a valores por defecto'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1b84146wv8().s[60]++;
    console.error('Error en DELETE /api/user/preferences:', error);
    /* istanbul ignore next */
    cov_1b84146wv8().s[61]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
// FunciÃ³n para validar preferencias
function validatePreferences(preferences) {
  /* istanbul ignore next */
  cov_1b84146wv8().f[8]++;
  cov_1b84146wv8().s[62]++;
  try {
    /* istanbul ignore next */
    cov_1b84146wv8().s[63]++;
    // Validar estructura bÃ¡sica
    if (
    /* istanbul ignore next */
    (cov_1b84146wv8().b[11][0]++, !preferences) ||
    /* istanbul ignore next */
    (cov_1b84146wv8().b[11][1]++, typeof preferences !== 'object')) {
      /* istanbul ignore next */
      cov_1b84146wv8().b[10][0]++;
      cov_1b84146wv8().s[64]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1b84146wv8().b[10][1]++;
    }
    // Combinar con valores por defecto para asegurar completitud
    const validated =
    /* istanbul ignore next */
    (cov_1b84146wv8().s[65]++, {
      notifications: {
        ...defaultPreferences.notifications,
        ...preferences.notifications
      },
      display: {
        ...defaultPreferences.display,
        ...preferences.display
      },
      privacy: {
        ...defaultPreferences.privacy,
        ...preferences.privacy
      }
    });
    // Validaciones especÃ­ficas
    /* istanbul ignore next */
    cov_1b84146wv8().s[66]++;
    if (preferences.display?.language) {
      /* istanbul ignore next */
      cov_1b84146wv8().b[12][0]++;
      const supportedLanguages =
      /* istanbul ignore next */
      (cov_1b84146wv8().s[67]++, ['es', 'en', 'pt']);
      /* istanbul ignore next */
      cov_1b84146wv8().s[68]++;
      if (!supportedLanguages.includes(preferences.display.language)) {
        /* istanbul ignore next */
        cov_1b84146wv8().b[13][0]++;
        cov_1b84146wv8().s[69]++;
        validated.display.language = 'es';
      } else
      /* istanbul ignore next */
      {
        cov_1b84146wv8().b[13][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1b84146wv8().b[12][1]++;
    }
    cov_1b84146wv8().s[70]++;
    if (preferences.display?.currency) {
      /* istanbul ignore next */
      cov_1b84146wv8().b[14][0]++;
      const supportedCurrencies =
      /* istanbul ignore next */
      (cov_1b84146wv8().s[71]++, ['ARS', 'USD', 'EUR', 'BRL', 'CLP', 'COP', 'MXN', 'PEN']);
      /* istanbul ignore next */
      cov_1b84146wv8().s[72]++;
      if (!supportedCurrencies.includes(preferences.display.currency)) {
        /* istanbul ignore next */
        cov_1b84146wv8().b[15][0]++;
        cov_1b84146wv8().s[73]++;
        validated.display.currency = 'ARS';
      } else
      /* istanbul ignore next */
      {
        cov_1b84146wv8().b[15][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1b84146wv8().b[14][1]++;
    }
    cov_1b84146wv8().s[74]++;
    if (preferences.display?.theme) {
      /* istanbul ignore next */
      cov_1b84146wv8().b[16][0]++;
      const supportedThemes =
      /* istanbul ignore next */
      (cov_1b84146wv8().s[75]++, ['light', 'dark', 'system']);
      /* istanbul ignore next */
      cov_1b84146wv8().s[76]++;
      if (!supportedThemes.includes(preferences.display.theme)) {
        /* istanbul ignore next */
        cov_1b84146wv8().b[17][0]++;
        cov_1b84146wv8().s[77]++;
        validated.display.theme = 'system';
      } else
      /* istanbul ignore next */
      {
        cov_1b84146wv8().b[17][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1b84146wv8().b[16][1]++;
    }
    cov_1b84146wv8().s[78]++;
    if (preferences.privacy?.profileVisibility) {
      /* istanbul ignore next */
      cov_1b84146wv8().b[18][0]++;
      const supportedVisibility =
      /* istanbul ignore next */
      (cov_1b84146wv8().s[79]++, ['public', 'private']);
      /* istanbul ignore next */
      cov_1b84146wv8().s[80]++;
      if (!supportedVisibility.includes(preferences.privacy.profileVisibility)) {
        /* istanbul ignore next */
        cov_1b84146wv8().b[19][0]++;
        cov_1b84146wv8().s[81]++;
        validated.privacy.profileVisibility = 'private';
      } else
      /* istanbul ignore next */
      {
        cov_1b84146wv8().b[19][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1b84146wv8().b[18][1]++;
    }
    cov_1b84146wv8().s[82]++;
    return validated;
  } catch (error) {
    /* istanbul ignore next */
    cov_1b84146wv8().s[83]++;
    console.error('Error al validar preferencias:', error);
    /* istanbul ignore next */
    cov_1b84146wv8().s[84]++;
    return null;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,