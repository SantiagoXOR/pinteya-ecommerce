95801d92b6077ca52250cdd808005c3f
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_25ji1wo38k() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\test-reports\\route.ts";
  var hash = "265e87dbc7b75214fd35b03e33ccde9b18bbf8bb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\test-reports\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 26
        },
        end: {
          line: 21,
          column: 65
        }
      },
      "8": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 22,
          column: 69
        }
      },
      "9": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 6
        }
      },
      "10": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 24
        }
      },
      "11": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 91,
          column: 5
        }
      },
      "12": {
        start: {
          line: 31,
          column: 33
        },
        end: {
          line: 31,
          column: 92
        }
      },
      "13": {
        start: {
          line: 32,
          column: 31
        },
        end: {
          line: 32,
          column: 80
        }
      },
      "14": {
        start: {
          line: 33,
          column: 22
        },
        end: {
          line: 33,
          column: 24
        }
      },
      "15": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "16": {
        start: {
          line: 36,
          column: 32
        },
        end: {
          line: 44,
          column: 14
        }
      },
      "17": {
        start: {
          line: 36,
          column: 89
        },
        end: {
          line: 36,
          column: 111
        }
      },
      "18": {
        start: {
          line: 38,
          column: 35
        },
        end: {
          line: 38,
          column: 49
        }
      },
      "19": {
        start: {
          line: 39,
          column: 35
        },
        end: {
          line: 39,
          column: 49
        }
      },
      "20": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 42,
          column: 17
        }
      },
      "21": {
        start: {
          line: 41,
          column: 20
        },
        end: {
          line: 41,
          column: 77
        }
      },
      "22": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 42
        }
      },
      "23": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 48,
          column: 14
        }
      },
      "24": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "25": {
        start: {
          line: 52,
          column: 30
        },
        end: {
          line: 59,
          column: 14
        }
      },
      "26": {
        start: {
          line: 52,
          column: 85
        },
        end: {
          line: 52,
          column: 107
        }
      },
      "27": {
        start: {
          line: 53,
          column: 35
        },
        end: {
          line: 53,
          column: 49
        }
      },
      "28": {
        start: {
          line: 54,
          column: 35
        },
        end: {
          line: 54,
          column: 49
        }
      },
      "29": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 57,
          column: 17
        }
      },
      "30": {
        start: {
          line: 56,
          column: 20
        },
        end: {
          line: 56,
          column: 77
        }
      },
      "31": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 42
        }
      },
      "32": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 65,
          column: 13
        }
      },
      "33": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 64,
          column: 19
        }
      },
      "34": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 72,
          column: 13
        }
      },
      "35": {
        start: {
          line: 67,
          column: 35
        },
        end: {
          line: 67,
          column: 75
        }
      },
      "36": {
        start: {
          line: 68,
          column: 33
        },
        end: {
          line: 68,
          column: 75
        }
      },
      "37": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 71,
          column: 17
        }
      },
      "38": {
        start: {
          line: 70,
          column: 20
        },
        end: {
          line: 70,
          column: 67
        }
      },
      "39": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 32
        }
      },
      "40": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 80,
          column: 11
        }
      },
      "41": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 58
        }
      },
      "42": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 90,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 33
          }
        },
        loc: {
          start: {
            line: 23,
            column: 39
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "GET",
        decl: {
          start: {
            line: 29,
            column: 15
          },
          end: {
            line: 29,
            column: 18
          }
        },
        loc: {
          start: {
            line: 29,
            column: 28
          },
          end: {
            line: 92,
            column: 1
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 36,
            column: 81
          },
          end: {
            line: 36,
            column: 82
          }
        },
        loc: {
          start: {
            line: 36,
            column: 89
          },
          end: {
            line: 36,
            column: 111
          }
        },
        line: 36
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 36,
            column: 118
          },
          end: {
            line: 36,
            column: 119
          }
        },
        loc: {
          start: {
            line: 36,
            column: 126
          },
          end: {
            line: 44,
            column: 13
          }
        },
        line: 36
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 52,
            column: 77
          },
          end: {
            line: 52,
            column: 78
          }
        },
        loc: {
          start: {
            line: 52,
            column: 85
          },
          end: {
            line: 52,
            column: 107
          }
        },
        line: 52
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 52,
            column: 114
          },
          end: {
            line: 52,
            column: 115
          }
        },
        loc: {
          start: {
            line: 52,
            column: 122
          },
          end: {
            line: 59,
            column: 13
          }
        },
        line: 52
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 35
          },
          end: {
            line: 24,
            column: 38
          }
        }, {
          start: {
            line: 24,
            column: 41
          },
          end: {
            line: 26,
            column: 5
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 24,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 24,
            column: 14
          }
        }, {
          start: {
            line: 24,
            column: 18
          },
          end: {
            line: 24,
            column: 32
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 42,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 42,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "4": {
        loc: {
          start: {
            line: 40,
            column: 20
          },
          end: {
            line: 40,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 20
          },
          end: {
            line: 40,
            column: 30
          }
        }, {
          start: {
            line: 40,
            column: 34
          },
          end: {
            line: 40,
            column: 44
          }
        }],
        line: 40
      },
      "5": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "6": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 32
          }
        }, {
          start: {
            line: 51,
            column: 36
          },
          end: {
            line: 51,
            column: 74
          }
        }],
        line: 51
      },
      "7": {
        loc: {
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 57,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 57,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "8": {
        loc: {
          start: {
            line: 55,
            column: 20
          },
          end: {
            line: 55,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 20
          },
          end: {
            line: 55,
            column: 30
          }
        }, {
          start: {
            line: 55,
            column: 34
          },
          end: {
            line: 55,
            column: 44
          }
        }],
        line: 55
      },
      "9": {
        loc: {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 65,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 65,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "10": {
        loc: {
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 71,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 71,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "11": {
        loc: {
          start: {
            line: 79,
            column: 21
          },
          end: {
            line: 79,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 79,
            column: 42
          },
          end: {
            line: 79,
            column: 74
          }
        }, {
          start: {
            line: 79,
            column: 77
          },
          end: {
            line: 79,
            column: 105
          }
        }],
        line: 79
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\test-reports\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const publicReportsDir = path.join(process.cwd(), 'public', 'test-reports');\r\n    const rootReportsDir = path.join(process.cwd(), 'test-reports');\r\n    \r\n    let reports: string[] = [];\r\n    \r\n    // Verificar carpeta public/test-reports\r\n    if (fs.existsSync(publicReportsDir)) {\r\n      const publicFiles = fs.readdirSync(publicReportsDir)\r\n        .filter(file => file.endsWith('.json'))\r\n        .sort((a, b) => {\r\n          // Ordenar por timestamp (m\xE1s reciente primero)\r\n          const timestampA = a.match(/\\d+/);\r\n          const timestampB = b.match(/\\d+/);\r\n          if (timestampA && timestampB) {\r\n            return parseInt(timestampB[0]) - parseInt(timestampA[0]);\r\n          }\r\n          return b.localeCompare(a);\r\n        });\r\n      reports = [...reports, ...publicFiles];\r\n    }\r\n    \r\n    // Si no hay reportes en public, verificar carpeta ra\xEDz\r\n    if (reports.length === 0 && fs.existsSync(rootReportsDir)) {\r\n      const rootFiles = fs.readdirSync(rootReportsDir)\r\n        .filter(file => file.endsWith('.json'))\r\n        .sort((a, b) => {\r\n          const timestampA = a.match(/\\d+/);\r\n          const timestampB = b.match(/\\d+/);\r\n          if (timestampA && timestampB) {\r\n            return parseInt(timestampB[0]) - parseInt(timestampA[0]);\r\n          }\r\n          return b.localeCompare(a);\r\n        });\r\n      \r\n      // Copiar archivos a public para que sean accesibles\r\n      if (!fs.existsSync(publicReportsDir)) {\r\n        fs.mkdirSync(publicReportsDir, { recursive: true });\r\n      }\r\n      \r\n      for (const file of rootFiles) {\r\n        const sourcePath = path.join(rootReportsDir, file);\r\n        const destPath = path.join(publicReportsDir, file);\r\n        if (!fs.existsSync(destPath)) {\r\n          fs.copyFileSync(sourcePath, destPath);\r\n        }\r\n      }\r\n      \r\n      reports = rootFiles;\r\n    }\r\n    \r\n    return NextResponse.json({\r\n      success: true,\r\n      reports,\r\n      total: reports.length,\r\n      message: reports.length > 0 ? 'Reportes cargados exitosamente' : 'No se encontraron reportes'\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error('Error al cargar reportes:', error);\r\n    return NextResponse.json(\r\n      {\r\n        success: false,\r\n        error: 'Error interno del servidor',\r\n        reports: [],\r\n        total: 0\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "runtime", "request", "publicReportsDir", "path", "join", "process", "cwd", "rootReportsDir", "reports", "fs", "existsSync", "publicFiles", "readdirSync", "filter", "file", "endsWith", "sort", "a", "b", "timestampA", "match", "timestampB", "parseInt", "localeCompare", "length", "rootFiles", "mkdirSync", "recursive", "sourcePath", "destPath", "copyFileSync", "NextResponse", "json", "success", "total", "message", "error", "console", "status"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QAOfA;eAAAA;;QANTC;eAAAA;;;wBAE6B;2DAC3B;6DACE;;;;;;AAJV,MAAMA,UAAU;AAMhB,eAAeD,IAAIE,OAAoB;IAC5C,IAAI;QACF,MAAMC,mBAAmBC,aAAI,CAACC,IAAI,CAACC,QAAQC,GAAG,IAAI,UAAU;QAC5D,MAAMC,iBAAiBJ,aAAI,CAACC,IAAI,CAACC,QAAQC,GAAG,IAAI;QAEhD,IAAIE,UAAoB,EAAE;QAE1B,wCAAwC;QACxC,IAAIC,WAAE,CAACC,UAAU,CAACR,mBAAmB;YACnC,MAAMS,cAAcF,WAAE,CAACG,WAAW,CAACV,kBAChCW,MAAM,CAACC,CAAAA,OAAQA,KAAKC,QAAQ,CAAC,UAC7BC,IAAI,CAAC,CAACC,GAAGC;gBACR,+CAA+C;gBAC/C,MAAMC,aAAaF,EAAEG,KAAK,CAAC;gBAC3B,MAAMC,aAAaH,EAAEE,KAAK,CAAC;gBAC3B,IAAID,cAAcE,YAAY;oBAC5B,OAAOC,SAASD,UAAU,CAAC,EAAE,IAAIC,SAASH,UAAU,CAAC,EAAE;gBACzD;gBACA,OAAOD,EAAEK,aAAa,CAACN;YACzB;YACFT,UAAU;mBAAIA;mBAAYG;aAAY;QACxC;QAEA,uDAAuD;QACvD,IAAIH,QAAQgB,MAAM,KAAK,KAAKf,WAAE,CAACC,UAAU,CAACH,iBAAiB;YACzD,MAAMkB,YAAYhB,WAAE,CAACG,WAAW,CAACL,gBAC9BM,MAAM,CAACC,CAAAA,OAAQA,KAAKC,QAAQ,CAAC,UAC7BC,IAAI,CAAC,CAACC,GAAGC;gBACR,MAAMC,aAAaF,EAAEG,KAAK,CAAC;gBAC3B,MAAMC,aAAaH,EAAEE,KAAK,CAAC;gBAC3B,IAAID,cAAcE,YAAY;oBAC5B,OAAOC,SAASD,UAAU,CAAC,EAAE,IAAIC,SAASH,UAAU,CAAC,EAAE;gBACzD;gBACA,OAAOD,EAAEK,aAAa,CAACN;YACzB;YAEF,oDAAoD;YACpD,IAAI,CAACR,WAAE,CAACC,UAAU,CAACR,mBAAmB;gBACpCO,WAAE,CAACiB,SAAS,CAACxB,kBAAkB;oBAAEyB,WAAW;gBAAK;YACnD;YAEA,KAAK,MAAMb,QAAQW,UAAW;gBAC5B,MAAMG,aAAazB,aAAI,CAACC,IAAI,CAACG,gBAAgBO;gBAC7C,MAAMe,WAAW1B,aAAI,CAACC,IAAI,CAACF,kBAAkBY;gBAC7C,IAAI,CAACL,WAAE,CAACC,UAAU,CAACmB,WAAW;oBAC5BpB,WAAE,CAACqB,YAAY,CAACF,YAAYC;gBAC9B;YACF;YAEArB,UAAUiB;QACZ;QAEA,OAAOM,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTzB;YACA0B,OAAO1B,QAAQgB,MAAM;YACrBW,SAAS3B,QAAQgB,MAAM,GAAG,IAAI,mCAAmC;QACnE;IAEF,EAAE,OAAOY,OAAO;QACdC,QAAQD,KAAK,CAAC,6BAA6BA;QAC3C,OAAOL,oBAAY,CAACC,IAAI,CACtB;YACEC,SAAS;YACTG,OAAO;YACP5B,SAAS,EAAE;YACX0B,OAAO;QACT,GACA;YAAEI,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "265e87dbc7b75214fd35b03e33ccde9b18bbf8bb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_25ji1wo38k = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_25ji1wo38k();
cov_25ji1wo38k().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_25ji1wo38k().f[0]++;
  cov_25ji1wo38k().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_25ji1wo38k().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_25ji1wo38k().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_25ji1wo38k().f[1]++;
    cov_25ji1wo38k().s[4]++;
    return GET;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_25ji1wo38k().f[2]++;
    cov_25ji1wo38k().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_25ji1wo38k().s[6]++, require("next/server"));
const _fs =
/* istanbul ignore next */
(/*#__PURE__*/cov_25ji1wo38k().s[7]++, _interop_require_default(require("fs")));
const _path =
/* istanbul ignore next */
(/*#__PURE__*/cov_25ji1wo38k().s[8]++, _interop_require_default(require("path")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_25ji1wo38k().f[3]++;
  cov_25ji1wo38k().s[9]++;
  return /* istanbul ignore next */(cov_25ji1wo38k().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_25ji1wo38k().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_25ji1wo38k().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_25ji1wo38k().b[0][1]++, {
    default: obj
  });
}
const runtime =
/* istanbul ignore next */
(cov_25ji1wo38k().s[10]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_25ji1wo38k().f[4]++;
  cov_25ji1wo38k().s[11]++;
  try {
    const publicReportsDir =
    /* istanbul ignore next */
    (cov_25ji1wo38k().s[12]++, _path.default.join(process.cwd(), 'public', 'test-reports'));
    const rootReportsDir =
    /* istanbul ignore next */
    (cov_25ji1wo38k().s[13]++, _path.default.join(process.cwd(), 'test-reports'));
    let reports =
    /* istanbul ignore next */
    (cov_25ji1wo38k().s[14]++, []);
    // Verificar carpeta public/test-reports
    /* istanbul ignore next */
    cov_25ji1wo38k().s[15]++;
    if (_fs.default.existsSync(publicReportsDir)) {
      /* istanbul ignore next */
      cov_25ji1wo38k().b[2][0]++;
      const publicFiles =
      /* istanbul ignore next */
      (cov_25ji1wo38k().s[16]++, _fs.default.readdirSync(publicReportsDir).filter(file => {
        /* istanbul ignore next */
        cov_25ji1wo38k().f[5]++;
        cov_25ji1wo38k().s[17]++;
        return file.endsWith('.json');
      }).sort((a, b) => {
        /* istanbul ignore next */
        cov_25ji1wo38k().f[6]++;
        // Ordenar por timestamp (mÃ¡s reciente primero)
        const timestampA =
        /* istanbul ignore next */
        (cov_25ji1wo38k().s[18]++, a.match(/\d+/));
        const timestampB =
        /* istanbul ignore next */
        (cov_25ji1wo38k().s[19]++, b.match(/\d+/));
        /* istanbul ignore next */
        cov_25ji1wo38k().s[20]++;
        if (
        /* istanbul ignore next */
        (cov_25ji1wo38k().b[4][0]++, timestampA) &&
        /* istanbul ignore next */
        (cov_25ji1wo38k().b[4][1]++, timestampB)) {
          /* istanbul ignore next */
          cov_25ji1wo38k().b[3][0]++;
          cov_25ji1wo38k().s[21]++;
          return parseInt(timestampB[0]) - parseInt(timestampA[0]);
        } else
        /* istanbul ignore next */
        {
          cov_25ji1wo38k().b[3][1]++;
        }
        cov_25ji1wo38k().s[22]++;
        return b.localeCompare(a);
      }));
      /* istanbul ignore next */
      cov_25ji1wo38k().s[23]++;
      reports = [...reports, ...publicFiles];
    } else
    /* istanbul ignore next */
    {
      cov_25ji1wo38k().b[2][1]++;
    }
    // Si no hay reportes en public, verificar carpeta raÃ­z
    cov_25ji1wo38k().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_25ji1wo38k().b[6][0]++, reports.length === 0) &&
    /* istanbul ignore next */
    (cov_25ji1wo38k().b[6][1]++, _fs.default.existsSync(rootReportsDir))) {
      /* istanbul ignore next */
      cov_25ji1wo38k().b[5][0]++;
      const rootFiles =
      /* istanbul ignore next */
      (cov_25ji1wo38k().s[25]++, _fs.default.readdirSync(rootReportsDir).filter(file => {
        /* istanbul ignore next */
        cov_25ji1wo38k().f[7]++;
        cov_25ji1wo38k().s[26]++;
        return file.endsWith('.json');
      }).sort((a, b) => {
        /* istanbul ignore next */
        cov_25ji1wo38k().f[8]++;
        const timestampA =
        /* istanbul ignore next */
        (cov_25ji1wo38k().s[27]++, a.match(/\d+/));
        const timestampB =
        /* istanbul ignore next */
        (cov_25ji1wo38k().s[28]++, b.match(/\d+/));
        /* istanbul ignore next */
        cov_25ji1wo38k().s[29]++;
        if (
        /* istanbul ignore next */
        (cov_25ji1wo38k().b[8][0]++, timestampA) &&
        /* istanbul ignore next */
        (cov_25ji1wo38k().b[8][1]++, timestampB)) {
          /* istanbul ignore next */
          cov_25ji1wo38k().b[7][0]++;
          cov_25ji1wo38k().s[30]++;
          return parseInt(timestampB[0]) - parseInt(timestampA[0]);
        } else
        /* istanbul ignore next */
        {
          cov_25ji1wo38k().b[7][1]++;
        }
        cov_25ji1wo38k().s[31]++;
        return b.localeCompare(a);
      }));
      // Copiar archivos a public para que sean accesibles
      /* istanbul ignore next */
      cov_25ji1wo38k().s[32]++;
      if (!_fs.default.existsSync(publicReportsDir)) {
        /* istanbul ignore next */
        cov_25ji1wo38k().b[9][0]++;
        cov_25ji1wo38k().s[33]++;
        _fs.default.mkdirSync(publicReportsDir, {
          recursive: true
        });
      } else
      /* istanbul ignore next */
      {
        cov_25ji1wo38k().b[9][1]++;
      }
      cov_25ji1wo38k().s[34]++;
      for (const file of rootFiles) {
        const sourcePath =
        /* istanbul ignore next */
        (cov_25ji1wo38k().s[35]++, _path.default.join(rootReportsDir, file));
        const destPath =
        /* istanbul ignore next */
        (cov_25ji1wo38k().s[36]++, _path.default.join(publicReportsDir, file));
        /* istanbul ignore next */
        cov_25ji1wo38k().s[37]++;
        if (!_fs.default.existsSync(destPath)) {
          /* istanbul ignore next */
          cov_25ji1wo38k().b[10][0]++;
          cov_25ji1wo38k().s[38]++;
          _fs.default.copyFileSync(sourcePath, destPath);
        } else
        /* istanbul ignore next */
        {
          cov_25ji1wo38k().b[10][1]++;
        }
      }
      /* istanbul ignore next */
      cov_25ji1wo38k().s[39]++;
      reports = rootFiles;
    } else
    /* istanbul ignore next */
    {
      cov_25ji1wo38k().b[5][1]++;
    }
    cov_25ji1wo38k().s[40]++;
    return _server.NextResponse.json({
      success: true,
      reports,
      total: reports.length,
      message: reports.length > 0 ?
      /* istanbul ignore next */
      (cov_25ji1wo38k().b[11][0]++, 'Reportes cargados exitosamente') :
      /* istanbul ignore next */
      (cov_25ji1wo38k().b[11][1]++, 'No se encontraron reportes')
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_25ji1wo38k().s[41]++;
    console.error('Error al cargar reportes:', error);
    /* istanbul ignore next */
    cov_25ji1wo38k().s[42]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor',
      reports: [],
      total: 0
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,