5b96dd045ae974cdb64e67f67e2541b2
/**
 * Configuración centralizada de CORS para la aplicación
 * Maneja orígenes permitidos según el entorno
 */ // ===================================
// CONFIGURACIÓN DE ORÍGENES PERMITIDOS
// ===================================
"use strict";

/* istanbul ignore next */
function cov_nqnq58eqw() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\security\\cors-config.ts";
  var hash = "66f66388266a8d9f4a29d8a8c589ff9383955d45";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\security\\cors-config.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "1": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 15,
          column: 7
        }
      },
      "2": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 15,
          column: 7
        }
      },
      "3": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 33,
          column: 3
        }
      },
      "4": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 27
        }
      },
      "5": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 35
        }
      },
      "6": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 33
        }
      },
      "7": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 35
        }
      },
      "8": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 31
        }
      },
      "9": {
        start: {
          line: 34,
          column: 27
        },
        end: {
          line: 38,
          column: 1
        }
      },
      "10": {
        start: {
          line: 39,
          column: 28
        },
        end: {
          line: 44,
          column: 1
        }
      },
      "11": {
        start: {
          line: 45,
          column: 24
        },
        end: {
          line: 48,
          column: 1
        }
      },
      "12": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 36
        }
      },
      "13": {
        start: {
          line: 51,
          column: 26
        },
        end: {
          line: 51,
          column: 100
        }
      },
      "14": {
        start: {
          line: 51,
          column: 80
        },
        end: {
          line: 51,
          column: 93
        }
      },
      "15": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "16": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 57,
          column: 14
        }
      },
      "17": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 62,
          column: 14
        }
      },
      "18": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 69,
          column: 14
        }
      },
      "19": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 30
        }
      },
      "20": {
        start: {
          line: 73,
          column: 17
        },
        end: {
          line: 73,
          column: 30
        }
      },
      "21": {
        start: {
          line: 74,
          column: 27
        },
        end: {
          line: 74,
          column: 46
        }
      },
      "22": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 75,
          column: 43
        }
      },
      "23": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "24": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 19
        }
      },
      "25": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "26": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 29
        }
      },
      "27": {
        start: {
          line: 87,
          column: 27
        },
        end: {
          line: 87,
          column: 46
        }
      },
      "28": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 88,
          column: 39
        }
      },
      "29": {
        start: {
          line: 90,
          column: 20
        },
        end: {
          line: 133,
          column: 1
        }
      },
      "30": {
        start: {
          line: 135,
          column: 19
        },
        end: {
          line: 135,
          column: 42
        }
      },
      "31": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 143,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 16
          }
        },
        loc: {
          start: {
            line: 11,
            column: 30
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 23
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 31
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 29
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 31
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 27
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "6": {
        name: "getAllowedOrigins",
        decl: {
          start: {
            line: 49,
            column: 9
          },
          end: {
            line: 49,
            column: 26
          }
        },
        loc: {
          start: {
            line: 49,
            column: 29
          },
          end: {
            line: 71,
            column: 1
          }
        },
        line: 49
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 51,
            column: 70
          },
          end: {
            line: 51,
            column: 71
          }
        },
        loc: {
          start: {
            line: 51,
            column: 80
          },
          end: {
            line: 51,
            column: 93
          }
        },
        line: 51
      },
      "8": {
        name: "isOriginAllowed",
        decl: {
          start: {
            line: 72,
            column: 9
          },
          end: {
            line: 72,
            column: 24
          }
        },
        loc: {
          start: {
            line: 72,
            column: 33
          },
          end: {
            line: 76,
            column: 1
          }
        },
        line: 72
      },
      "9": {
        name: "getCorsOriginHeader",
        decl: {
          start: {
            line: 77,
            column: 9
          },
          end: {
            line: 77,
            column: 28
          }
        },
        loc: {
          start: {
            line: 77,
            column: 44
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 77
      },
      "10": {
        name: "generateCorsHeaders",
        decl: {
          start: {
            line: 134,
            column: 9
          },
          end: {
            line: 134,
            column: 28
          }
        },
        loc: {
          start: {
            line: 134,
            column: 67
          },
          end: {
            line: 144,
            column: 1
          }
        },
        line: 134
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 51,
            column: 26
          },
          end: {
            line: 51,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 26
          },
          end: {
            line: 51,
            column: 94
          }
        }, {
          start: {
            line: 51,
            column: 98
          },
          end: {
            line: 51,
            column: 100
          }
        }],
        line: 51
      },
      "1": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 57,
            column: 14
          }
        }, {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 62,
            column: 14
          }
        }, {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 63,
            column: 27
          }
        }, {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 64,
            column: 20
          }
        }, {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 69,
            column: 14
          }
        }],
        line: 52
      },
      "2": {
        loc: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "3": {
        loc: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "4": {
        loc: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "5": {
        loc: {
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 83,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 83,
            column: 21
          }
        }, {
          start: {
            line: 83,
            column: 25
          },
          end: {
            line: 83,
            column: 55
          }
        }],
        line: 83
      },
      "6": {
        loc: {
          start: {
            line: 88,
            column: 11
          },
          end: {
            line: 88,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 11
          },
          end: {
            line: 88,
            column: 28
          }
        }, {
          start: {
            line: 88,
            column: 32
          },
          end: {
            line: 88,
            column: 38
          }
        }],
        line: 88
      },
      "7": {
        loc: {
          start: {
            line: 134,
            column: 44
          },
          end: {
            line: 134,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 134,
            column: 57
          },
          end: {
            line: 134,
            column: 65
          }
        }],
        line: 134
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\security\\cors-config.ts"],
      sourcesContent: ["/**\r\n * Configuraci\xF3n centralizada de CORS para la aplicaci\xF3n\r\n * Maneja or\xEDgenes permitidos seg\xFAn el entorno\r\n */\r\n\r\n// ===================================\r\n// CONFIGURACI\xD3N DE OR\xCDGENES PERMITIDOS\r\n// ===================================\r\n\r\nconst PRODUCTION_ORIGINS = [\r\n  'https://yourdomain.com',\r\n  'https://www.yourdomain.com',\r\n  'https://admin.yourdomain.com'\r\n];\r\n\r\nconst DEVELOPMENT_ORIGINS = [\r\n  'http://localhost:3000',\r\n  'http://localhost:3001',\r\n  'http://127.0.0.1:3000',\r\n  'https://localhost:3000'\r\n];\r\n\r\nconst STAGING_ORIGINS = [\r\n  'https://staging.yourdomain.com',\r\n  'https://preview.yourdomain.com'\r\n];\r\n\r\n// ===================================\r\n// UTILIDADES CORS\r\n// ===================================\r\n\r\n/**\r\n * Obtiene los or\xEDgenes permitidos seg\xFAn el entorno\r\n */\r\nexport function getAllowedOrigins(): string[] {\r\n  const env = process.env.NODE_ENV;\r\n  const customOrigins = process.env.ALLOWED_ORIGINS?.split(',').map(origin => origin.trim()) || [];\r\n  \r\n  switch (env) {\r\n    case 'production':\r\n      return [...PRODUCTION_ORIGINS, ...customOrigins];\r\n    case 'staging':\r\n      return [...STAGING_ORIGINS, ...customOrigins];\r\n    case 'development':\r\n    case 'test':\r\n    default:\r\n      return [...DEVELOPMENT_ORIGINS, ...customOrigins];\r\n  }\r\n}\r\n\r\n/**\r\n * Verifica si un origen est\xE1 permitido\r\n */\r\nexport function isOriginAllowed(origin: string | undefined): boolean {\r\n  if (!origin) return false;\r\n  \r\n  const allowedOrigins = getAllowedOrigins();\r\n  return allowedOrigins.includes(origin);\r\n}\r\n\r\n/**\r\n * Obtiene el header Access-Control-Allow-Origin apropiado\r\n */\r\nexport function getCorsOriginHeader(requestOrigin?: string): string {\r\n  // En desarrollo, permitir todos los or\xEDgenes para facilitar el desarrollo\r\n  if (process.env.NODE_ENV === 'development') {\r\n    return '*';\r\n  }\r\n  \r\n  // En producci\xF3n, verificar origen espec\xEDfico\r\n  if (requestOrigin && isOriginAllowed(requestOrigin)) {\r\n    return requestOrigin;\r\n  }\r\n  \r\n  // Por defecto, usar el primer origen permitido\r\n  const allowedOrigins = getAllowedOrigins();\r\n  return allowedOrigins[0] || 'null';\r\n}\r\n\r\n/**\r\n * Configuraci\xF3n CORS completa para diferentes endpoints\r\n */\r\nexport const CORS_CONFIG = {\r\n  // Para APIs p\xFAblicas (m\xE1s restrictivo)\r\n  public: {\r\n    methods: ['GET', 'POST', 'OPTIONS'],\r\n    headers: ['Content-Type', 'Authorization'],\r\n    credentials: false\r\n  },\r\n  \r\n  // Para APIs de administraci\xF3n (muy restrictivo)\r\n  admin: {\r\n    methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\r\n    headers: ['Content-Type', 'Authorization', 'X-Admin-Token'],\r\n    credentials: true\r\n  },\r\n  \r\n  // Para webhooks (espec\xEDfico)\r\n  webhook: {\r\n    methods: ['POST', 'OPTIONS'],\r\n    headers: ['Content-Type', 'X-Signature', 'User-Agent'],\r\n    credentials: false\r\n  }\r\n} as const;\r\n\r\n/**\r\n * Genera headers CORS completos para una respuesta\r\n */\r\nexport function generateCorsHeaders(\r\n  requestOrigin?: string,\r\n  configType: keyof typeof CORS_CONFIG = 'public'\r\n): Record<string, string> {\r\n  const config = CORS_CONFIG[configType];\r\n  \r\n  return {\r\n    'Access-Control-Allow-Origin': getCorsOriginHeader(requestOrigin),\r\n    'Access-Control-Allow-Methods': config.methods.join(', '),\r\n    'Access-Control-Allow-Headers': config.headers.join(', '),\r\n    'Access-Control-Allow-Credentials': config.credentials.toString(),\r\n    'Access-Control-Max-Age': '86400', // 24 horas\r\n    'Vary': 'Origin'\r\n  };\r\n}"],
      names: ["CORS_CONFIG", "generateCorsHeaders", "getAllowedOrigins", "getCorsOriginHeader", "isOriginAllowed", "PRODUCTION_ORIGINS", "DEVELOPMENT_ORIGINS", "STAGING_ORIGINS", "env", "process", "NODE_ENV", "customOrigins", "ALLOWED_ORIGINS", "split", "map", "origin", "trim", "allowedOrigins", "includes", "requestOrigin", "public", "methods", "headers", "credentials", "admin", "webhook", "configType", "config", "join", "toString"],
      mappings: "AAAA;;;CAGC,GAED,sCAAsC;AACtC,uCAAuC;AACvC,sCAAsC;;;;;;;;;;;;QA2EzBA;eAAAA;;QA0BGC;eAAAA;;QA1EAC;eAAAA;;QA6BAC;eAAAA;;QAVAC;eAAAA;;;AA5ChB,MAAMC,qBAAqB;IACzB;IACA;IACA;CACD;AAED,MAAMC,sBAAsB;IAC1B;IACA;IACA;IACA;CACD;AAED,MAAMC,kBAAkB;IACtB;IACA;CACD;AASM,SAASL;IACd,MAAMM,MAAMC,QAAQD,GAAG,CAACE,QAAQ;IAChC,MAAMC,gBAAgBF,QAAQD,GAAG,CAACI,eAAe,EAAEC,MAAM,KAAKC,IAAIC,CAAAA,SAAUA,OAAOC,IAAI,OAAO,EAAE;IAEhG,OAAQR;QACN,KAAK;YACH,OAAO;mBAAIH;mBAAuBM;aAAc;QAClD,KAAK;YACH,OAAO;mBAAIJ;mBAAoBI;aAAc;QAC/C,KAAK;QACL,KAAK;QACL;YACE,OAAO;mBAAIL;mBAAwBK;aAAc;IACrD;AACF;AAKO,SAASP,gBAAgBW,MAA0B;IACxD,IAAI,CAACA,QAAQ,OAAO;IAEpB,MAAME,iBAAiBf;IACvB,OAAOe,eAAeC,QAAQ,CAACH;AACjC;AAKO,SAASZ,oBAAoBgB,aAAsB;IACxD,0EAA0E;IAC1E,IAAIV,QAAQD,GAAG,CAACE,QAAQ,KAAK,eAAe;QAC1C,OAAO;IACT;IAEA,6CAA6C;IAC7C,IAAIS,iBAAiBf,gBAAgBe,gBAAgB;QACnD,OAAOA;IACT;IAEA,+CAA+C;IAC/C,MAAMF,iBAAiBf;IACvB,OAAOe,cAAc,CAAC,EAAE,IAAI;AAC9B;AAKO,MAAMjB,cAAc;IACzB,uCAAuC;IACvCoB,QAAQ;QACNC,SAAS;YAAC;YAAO;YAAQ;SAAU;QACnCC,SAAS;YAAC;YAAgB;SAAgB;QAC1CC,aAAa;IACf;IAEA,gDAAgD;IAChDC,OAAO;QACLH,SAAS;YAAC;YAAO;YAAQ;YAAO;YAAU;SAAU;QACpDC,SAAS;YAAC;YAAgB;YAAiB;SAAgB;QAC3DC,aAAa;IACf;IAEA,6BAA6B;IAC7BE,SAAS;QACPJ,SAAS;YAAC;YAAQ;SAAU;QAC5BC,SAAS;YAAC;YAAgB;YAAe;SAAa;QACtDC,aAAa;IACf;AACF;AAKO,SAAStB,oBACdkB,aAAsB,EACtBO,aAAuC,QAAQ;IAE/C,MAAMC,SAAS3B,WAAW,CAAC0B,WAAW;IAEtC,OAAO;QACL,+BAA+BvB,oBAAoBgB;QACnD,gCAAgCQ,OAAON,OAAO,CAACO,IAAI,CAAC;QACpD,gCAAgCD,OAAOL,OAAO,CAACM,IAAI,CAAC;QACpD,oCAAoCD,OAAOJ,WAAW,CAACM,QAAQ;QAC/D,0BAA0B;QAC1B,QAAQ;IACV;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "66f66388266a8d9f4a29d8a8c589ff9383955d45"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_nqnq58eqw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_nqnq58eqw();
cov_nqnq58eqw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_nqnq58eqw().f[0]++;
  cov_nqnq58eqw().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_nqnq58eqw().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_nqnq58eqw().s[3]++;
_export(exports, {
  get CORS_CONFIG() {
    /* istanbul ignore next */
    cov_nqnq58eqw().f[1]++;
    cov_nqnq58eqw().s[4]++;
    return CORS_CONFIG;
  },
  get generateCorsHeaders() {
    /* istanbul ignore next */
    cov_nqnq58eqw().f[2]++;
    cov_nqnq58eqw().s[5]++;
    return generateCorsHeaders;
  },
  get getAllowedOrigins() {
    /* istanbul ignore next */
    cov_nqnq58eqw().f[3]++;
    cov_nqnq58eqw().s[6]++;
    return getAllowedOrigins;
  },
  get getCorsOriginHeader() {
    /* istanbul ignore next */
    cov_nqnq58eqw().f[4]++;
    cov_nqnq58eqw().s[7]++;
    return getCorsOriginHeader;
  },
  get isOriginAllowed() {
    /* istanbul ignore next */
    cov_nqnq58eqw().f[5]++;
    cov_nqnq58eqw().s[8]++;
    return isOriginAllowed;
  }
});
const PRODUCTION_ORIGINS =
/* istanbul ignore next */
(cov_nqnq58eqw().s[9]++, ['https://yourdomain.com', 'https://www.yourdomain.com', 'https://admin.yourdomain.com']);
const DEVELOPMENT_ORIGINS =
/* istanbul ignore next */
(cov_nqnq58eqw().s[10]++, ['http://localhost:3000', 'http://localhost:3001', 'http://127.0.0.1:3000', 'https://localhost:3000']);
const STAGING_ORIGINS =
/* istanbul ignore next */
(cov_nqnq58eqw().s[11]++, ['https://staging.yourdomain.com', 'https://preview.yourdomain.com']);
function getAllowedOrigins() {
  /* istanbul ignore next */
  cov_nqnq58eqw().f[6]++;
  const env =
  /* istanbul ignore next */
  (cov_nqnq58eqw().s[12]++, process.env.NODE_ENV);
  const customOrigins =
  /* istanbul ignore next */
  (cov_nqnq58eqw().s[13]++,
  /* istanbul ignore next */
  (cov_nqnq58eqw().b[0][0]++, process.env.ALLOWED_ORIGINS?.split(',').map(origin => {
    /* istanbul ignore next */
    cov_nqnq58eqw().f[7]++;
    cov_nqnq58eqw().s[14]++;
    return origin.trim();
  })) ||
  /* istanbul ignore next */
  (cov_nqnq58eqw().b[0][1]++, []));
  /* istanbul ignore next */
  cov_nqnq58eqw().s[15]++;
  switch (env) {
    case 'production':
      /* istanbul ignore next */
      cov_nqnq58eqw().b[1][0]++;
      cov_nqnq58eqw().s[16]++;
      return [...PRODUCTION_ORIGINS, ...customOrigins];
    case 'staging':
      /* istanbul ignore next */
      cov_nqnq58eqw().b[1][1]++;
      cov_nqnq58eqw().s[17]++;
      return [...STAGING_ORIGINS, ...customOrigins];
    case 'development':
      /* istanbul ignore next */
      cov_nqnq58eqw().b[1][2]++;
    case 'test':
      /* istanbul ignore next */
      cov_nqnq58eqw().b[1][3]++;
    default:
      /* istanbul ignore next */
      cov_nqnq58eqw().b[1][4]++;
      cov_nqnq58eqw().s[18]++;
      return [...DEVELOPMENT_ORIGINS, ...customOrigins];
  }
}
function isOriginAllowed(origin) {
  /* istanbul ignore next */
  cov_nqnq58eqw().f[8]++;
  cov_nqnq58eqw().s[19]++;
  if (!origin) {
    /* istanbul ignore next */
    cov_nqnq58eqw().b[2][0]++;
    cov_nqnq58eqw().s[20]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_nqnq58eqw().b[2][1]++;
  }
  const allowedOrigins =
  /* istanbul ignore next */
  (cov_nqnq58eqw().s[21]++, getAllowedOrigins());
  /* istanbul ignore next */
  cov_nqnq58eqw().s[22]++;
  return allowedOrigins.includes(origin);
}
function getCorsOriginHeader(requestOrigin) {
  /* istanbul ignore next */
  cov_nqnq58eqw().f[9]++;
  cov_nqnq58eqw().s[23]++;
  // En desarrollo, permitir todos los orígenes para facilitar el desarrollo
  if (process.env.NODE_ENV === 'development') {
    /* istanbul ignore next */
    cov_nqnq58eqw().b[3][0]++;
    cov_nqnq58eqw().s[24]++;
    return '*';
  } else
  /* istanbul ignore next */
  {
    cov_nqnq58eqw().b[3][1]++;
  }
  // En producción, verificar origen específico
  cov_nqnq58eqw().s[25]++;
  if (
  /* istanbul ignore next */
  (cov_nqnq58eqw().b[5][0]++, requestOrigin) &&
  /* istanbul ignore next */
  (cov_nqnq58eqw().b[5][1]++, isOriginAllowed(requestOrigin))) {
    /* istanbul ignore next */
    cov_nqnq58eqw().b[4][0]++;
    cov_nqnq58eqw().s[26]++;
    return requestOrigin;
  } else
  /* istanbul ignore next */
  {
    cov_nqnq58eqw().b[4][1]++;
  }
  // Por defecto, usar el primer origen permitido
  const allowedOrigins =
  /* istanbul ignore next */
  (cov_nqnq58eqw().s[27]++, getAllowedOrigins());
  /* istanbul ignore next */
  cov_nqnq58eqw().s[28]++;
  return /* istanbul ignore next */(cov_nqnq58eqw().b[6][0]++, allowedOrigins[0]) ||
  /* istanbul ignore next */
  (cov_nqnq58eqw().b[6][1]++, 'null');
}
const CORS_CONFIG =
/* istanbul ignore next */
(cov_nqnq58eqw().s[29]++, {
  // Para APIs públicas (más restrictivo)
  public: {
    methods: ['GET', 'POST', 'OPTIONS'],
    headers: ['Content-Type', 'Authorization'],
    credentials: false
  },
  // Para APIs de administración (muy restrictivo)
  admin: {
    methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
    headers: ['Content-Type', 'Authorization', 'X-Admin-Token'],
    credentials: true
  },
  // Para webhooks (específico)
  webhook: {
    methods: ['POST', 'OPTIONS'],
    headers: ['Content-Type', 'X-Signature', 'User-Agent'],
    credentials: false
  }
});
function generateCorsHeaders(requestOrigin, configType =
/* istanbul ignore next */
(cov_nqnq58eqw().b[7][0]++, 'public')) {
  /* istanbul ignore next */
  cov_nqnq58eqw().f[10]++;
  const config =
  /* istanbul ignore next */
  (cov_nqnq58eqw().s[30]++, CORS_CONFIG[configType]);
  /* istanbul ignore next */
  cov_nqnq58eqw().s[31]++;
  return {
    'Access-Control-Allow-Origin': getCorsOriginHeader(requestOrigin),
    'Access-Control-Allow-Methods': config.methods.join(', '),
    'Access-Control-Allow-Headers': config.headers.join(', '),
    'Access-Control-Allow-Credentials': config.credentials.toString(),
    'Access-Control-Max-Age': '86400',
    'Vary': 'Origin'
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDT1JTX0NPTkZJRyIsImNvdl9ucW5xNThlcXciLCJmIiwicyIsImdlbmVyYXRlQ29yc0hlYWRlcnMiLCJnZXRBbGxvd2VkT3JpZ2lucyIsImdldENvcnNPcmlnaW5IZWFkZXIiLCJpc09yaWdpbkFsbG93ZWQiLCJQUk9EVUNUSU9OX09SSUdJTlMiLCJERVZFTE9QTUVOVF9PUklHSU5TIiwiU1RBR0lOR19PUklHSU5TIiwiZW52IiwicHJvY2VzcyIsIk5PREVfRU5WIiwiY3VzdG9tT3JpZ2lucyIsImIiLCJBTExPV0VEX09SSUdJTlMiLCJzcGxpdCIsIm1hcCIsIm9yaWdpbiIsInRyaW0iLCJhbGxvd2VkT3JpZ2lucyIsImluY2x1ZGVzIiwicmVxdWVzdE9yaWdpbiIsInB1YmxpYyIsIm1ldGhvZHMiLCJoZWFkZXJzIiwiY3JlZGVudGlhbHMiLCJhZG1pbiIsIndlYmhvb2siLCJjb25maWdUeXBlIiwiY29uZmlnIiwiam9pbiIsInRvU3RyaW5nIl0sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxtYXJ0aVxcRGVza3RvcFxcREVTQVJST0xMT1NXXFxCT0lMRVJQTEFUVEUgRS1DT01NRVJDRVxcc3JjXFxsaWJcXHNlY3VyaXR5XFxjb3JzLWNvbmZpZy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ29uZmlndXJhY2nDs24gY2VudHJhbGl6YWRhIGRlIENPUlMgcGFyYSBsYSBhcGxpY2FjacOzblxyXG4gKiBNYW5lamEgb3LDrWdlbmVzIHBlcm1pdGlkb3Mgc2Vnw7puIGVsIGVudG9ybm9cclxuICovXHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyBDT05GSUdVUkFDScOTTiBERSBPUsONR0VORVMgUEVSTUlUSURPU1xyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuY29uc3QgUFJPRFVDVElPTl9PUklHSU5TID0gW1xyXG4gICdodHRwczovL3lvdXJkb21haW4uY29tJyxcclxuICAnaHR0cHM6Ly93d3cueW91cmRvbWFpbi5jb20nLFxyXG4gICdodHRwczovL2FkbWluLnlvdXJkb21haW4uY29tJ1xyXG5dO1xyXG5cclxuY29uc3QgREVWRUxPUE1FTlRfT1JJR0lOUyA9IFtcclxuICAnaHR0cDovL2xvY2FsaG9zdDozMDAwJyxcclxuICAnaHR0cDovL2xvY2FsaG9zdDozMDAxJyxcclxuICAnaHR0cDovLzEyNy4wLjAuMTozMDAwJyxcclxuICAnaHR0cHM6Ly9sb2NhbGhvc3Q6MzAwMCdcclxuXTtcclxuXHJcbmNvbnN0IFNUQUdJTkdfT1JJR0lOUyA9IFtcclxuICAnaHR0cHM6Ly9zdGFnaW5nLnlvdXJkb21haW4uY29tJyxcclxuICAnaHR0cHM6Ly9wcmV2aWV3LnlvdXJkb21haW4uY29tJ1xyXG5dO1xyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gVVRJTElEQURFUyBDT1JTXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG4vKipcclxuICogT2J0aWVuZSBsb3Mgb3LDrWdlbmVzIHBlcm1pdGlkb3Mgc2Vnw7puIGVsIGVudG9ybm9cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRBbGxvd2VkT3JpZ2lucygpOiBzdHJpbmdbXSB7XHJcbiAgY29uc3QgZW52ID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlY7XHJcbiAgY29uc3QgY3VzdG9tT3JpZ2lucyA9IHByb2Nlc3MuZW52LkFMTE9XRURfT1JJR0lOUz8uc3BsaXQoJywnKS5tYXAob3JpZ2luID0+IG9yaWdpbi50cmltKCkpIHx8IFtdO1xyXG4gIFxyXG4gIHN3aXRjaCAoZW52KSB7XHJcbiAgICBjYXNlICdwcm9kdWN0aW9uJzpcclxuICAgICAgcmV0dXJuIFsuLi5QUk9EVUNUSU9OX09SSUdJTlMsIC4uLmN1c3RvbU9yaWdpbnNdO1xyXG4gICAgY2FzZSAnc3RhZ2luZyc6XHJcbiAgICAgIHJldHVybiBbLi4uU1RBR0lOR19PUklHSU5TLCAuLi5jdXN0b21PcmlnaW5zXTtcclxuICAgIGNhc2UgJ2RldmVsb3BtZW50JzpcclxuICAgIGNhc2UgJ3Rlc3QnOlxyXG4gICAgZGVmYXVsdDpcclxuICAgICAgcmV0dXJuIFsuLi5ERVZFTE9QTUVOVF9PUklHSU5TLCAuLi5jdXN0b21PcmlnaW5zXTtcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBWZXJpZmljYSBzaSB1biBvcmlnZW4gZXN0w6EgcGVybWl0aWRvXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gaXNPcmlnaW5BbGxvd2VkKG9yaWdpbjogc3RyaW5nIHwgdW5kZWZpbmVkKTogYm9vbGVhbiB7XHJcbiAgaWYgKCFvcmlnaW4pIHJldHVybiBmYWxzZTtcclxuICBcclxuICBjb25zdCBhbGxvd2VkT3JpZ2lucyA9IGdldEFsbG93ZWRPcmlnaW5zKCk7XHJcbiAgcmV0dXJuIGFsbG93ZWRPcmlnaW5zLmluY2x1ZGVzKG9yaWdpbik7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBPYnRpZW5lIGVsIGhlYWRlciBBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4gYXByb3BpYWRvXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q29yc09yaWdpbkhlYWRlcihyZXF1ZXN0T3JpZ2luPzogc3RyaW5nKTogc3RyaW5nIHtcclxuICAvLyBFbiBkZXNhcnJvbGxvLCBwZXJtaXRpciB0b2RvcyBsb3Mgb3LDrWdlbmVzIHBhcmEgZmFjaWxpdGFyIGVsIGRlc2Fycm9sbG9cclxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHtcclxuICAgIHJldHVybiAnKic7XHJcbiAgfVxyXG4gIFxyXG4gIC8vIEVuIHByb2R1Y2Npw7NuLCB2ZXJpZmljYXIgb3JpZ2VuIGVzcGVjw61maWNvXHJcbiAgaWYgKHJlcXVlc3RPcmlnaW4gJiYgaXNPcmlnaW5BbGxvd2VkKHJlcXVlc3RPcmlnaW4pKSB7XHJcbiAgICByZXR1cm4gcmVxdWVzdE9yaWdpbjtcclxuICB9XHJcbiAgXHJcbiAgLy8gUG9yIGRlZmVjdG8sIHVzYXIgZWwgcHJpbWVyIG9yaWdlbiBwZXJtaXRpZG9cclxuICBjb25zdCBhbGxvd2VkT3JpZ2lucyA9IGdldEFsbG93ZWRPcmlnaW5zKCk7XHJcbiAgcmV0dXJuIGFsbG93ZWRPcmlnaW5zWzBdIHx8ICdudWxsJztcclxufVxyXG5cclxuLyoqXHJcbiAqIENvbmZpZ3VyYWNpw7NuIENPUlMgY29tcGxldGEgcGFyYSBkaWZlcmVudGVzIGVuZHBvaW50c1xyXG4gKi9cclxuZXhwb3J0IGNvbnN0IENPUlNfQ09ORklHID0ge1xyXG4gIC8vIFBhcmEgQVBJcyBww7pibGljYXMgKG3DoXMgcmVzdHJpY3Rpdm8pXHJcbiAgcHVibGljOiB7XHJcbiAgICBtZXRob2RzOiBbJ0dFVCcsICdQT1NUJywgJ09QVElPTlMnXSxcclxuICAgIGhlYWRlcnM6IFsnQ29udGVudC1UeXBlJywgJ0F1dGhvcml6YXRpb24nXSxcclxuICAgIGNyZWRlbnRpYWxzOiBmYWxzZVxyXG4gIH0sXHJcbiAgXHJcbiAgLy8gUGFyYSBBUElzIGRlIGFkbWluaXN0cmFjacOzbiAobXV5IHJlc3RyaWN0aXZvKVxyXG4gIGFkbWluOiB7XHJcbiAgICBtZXRob2RzOiBbJ0dFVCcsICdQT1NUJywgJ1BVVCcsICdERUxFVEUnLCAnT1BUSU9OUyddLFxyXG4gICAgaGVhZGVyczogWydDb250ZW50LVR5cGUnLCAnQXV0aG9yaXphdGlvbicsICdYLUFkbWluLVRva2VuJ10sXHJcbiAgICBjcmVkZW50aWFsczogdHJ1ZVxyXG4gIH0sXHJcbiAgXHJcbiAgLy8gUGFyYSB3ZWJob29rcyAoZXNwZWPDrWZpY28pXHJcbiAgd2ViaG9vazoge1xyXG4gICAgbWV0aG9kczogWydQT1NUJywgJ09QVElPTlMnXSxcclxuICAgIGhlYWRlcnM6IFsnQ29udGVudC1UeXBlJywgJ1gtU2lnbmF0dXJlJywgJ1VzZXItQWdlbnQnXSxcclxuICAgIGNyZWRlbnRpYWxzOiBmYWxzZVxyXG4gIH1cclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBHZW5lcmEgaGVhZGVycyBDT1JTIGNvbXBsZXRvcyBwYXJhIHVuYSByZXNwdWVzdGFcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZUNvcnNIZWFkZXJzKFxyXG4gIHJlcXVlc3RPcmlnaW4/OiBzdHJpbmcsXHJcbiAgY29uZmlnVHlwZToga2V5b2YgdHlwZW9mIENPUlNfQ09ORklHID0gJ3B1YmxpYydcclxuKTogUmVjb3JkPHN0cmluZywgc3RyaW5nPiB7XHJcbiAgY29uc3QgY29uZmlnID0gQ09SU19DT05GSUdbY29uZmlnVHlwZV07XHJcbiAgXHJcbiAgcmV0dXJuIHtcclxuICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nOiBnZXRDb3JzT3JpZ2luSGVhZGVyKHJlcXVlc3RPcmlnaW4pLFxyXG4gICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMnOiBjb25maWcubWV0aG9kcy5qb2luKCcsICcpLFxyXG4gICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnMnOiBjb25maWcuaGVhZGVycy5qb2luKCcsICcpLFxyXG4gICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LUNyZWRlbnRpYWxzJzogY29uZmlnLmNyZWRlbnRpYWxzLnRvU3RyaW5nKCksXHJcbiAgICAnQWNjZXNzLUNvbnRyb2wtTWF4LUFnZSc6ICc4NjQwMCcsIC8vIDI0IGhvcmFzXHJcbiAgICAnVmFyeSc6ICdPcmlnaW4nXHJcbiAgfTtcclxufSJdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUFBLENBS0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7TUEyRWFBLFlBQUE7SUFBQTtJQUFBQyxhQUFBLEdBQUFDLENBQUE7SUFBQUQsYUFBQSxHQUFBRSxDQUFBO1dBQUFILFdBQUE7O01BMEJHSSxvQkFBQTtJQUFBO0lBQUFILGFBQUEsR0FBQUMsQ0FBQTtJ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