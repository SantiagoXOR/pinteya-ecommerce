9a2af09ec182e44171216da0a0d99ba0
"use strict";
jest.mock('next/navigation', ()=>({
        useRouter: ()=>mockUseRouter(),
        usePathname: ()=>mockUsePathname()
    }));
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
const _reactredux = require("react-redux");
const _toolkit = require("@reduxjs/toolkit");
const _bottomnavigation = require("../../../components/ui/bottom-navigation");
const _cartslice = /*#__PURE__*/ _interop_require_default(require("../../../redux/features/cart-slice"));
const _lucidereact = require("lucide-react");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
// Mock Next.js router
const mockUsePathname = jest.fn();
const mockUseRouter = jest.fn();
// Mock store
const createMockStore = (cartItems = [])=>{
    return (0, _toolkit.configureStore)({
        reducer: {
            cartReducer: _cartslice.default
        },
        preloadedState: {
            cartReducer: {
                items: cartItems
            }
        }
    });
};
const renderWithStore = (component, cartItems = [])=>{
    const store = createMockStore(cartItems);
    return (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_reactredux.Provider, {
        store: store,
        children: component
    }));
};
describe('BottomNavigation', ()=>{
    beforeEach(()=>{
        mockUsePathname.mockReturnValue('/');
    });
    afterEach(()=>{
        jest.clearAllMocks();
    });
    it('renders default navigation items', ()=>{
        renderWithStore(/*#__PURE__*/ (0, _jsxruntime.jsx)(_bottomnavigation.BottomNavigation, {}));
        expect(_react1.screen.getByText('Inicio')).toBeInTheDocument();
        expect(_react1.screen.getByText('Ofertas')).toBeInTheDocument();
        expect(_react1.screen.getByText('Pedidos')).toBeInTheDocument();
        expect(_react1.screen.getByText('Cotizador')).toBeInTheDocument();
        expect(_react1.screen.getByText('Menú')).toBeInTheDocument();
    });
    it('shows cart badge when there are items in cart', ()=>{
        const cartItems = [
            {
                id: '1',
                name: 'Product 1',
                price: 100,
                quantity: 2
            },
            {
                id: '2',
                name: 'Product 2',
                price: 200,
                quantity: 1
            }
        ];
        renderWithStore(/*#__PURE__*/ (0, _jsxruntime.jsx)(_bottomnavigation.BottomNavigation, {}), cartItems);
        // Should show badge with cart items count
        expect(_react1.screen.getByText('2')).toBeInTheDocument();
    });
    it('highlights active navigation item', ()=>{
        mockUsePathname.mockReturnValue('/shop');
        renderWithStore(/*#__PURE__*/ (0, _jsxruntime.jsx)(_bottomnavigation.BottomNavigation, {}));
        const offersLink = _react1.screen.getByLabelText('Ofertas');
        expect(offersLink).toHaveClass('text-primary-700');
    });
    it('renders custom navigation items', ()=>{
        const customItems = [
            {
                id: 'home',
                label: 'Home',
                href: '/',
                icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Home, {
                    className: "w-5 h-5"
                })
            },
            {
                id: 'shop',
                label: 'Shop',
                href: '/shop',
                icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Tag, {
                    className: "w-5 h-5"
                }),
                badge: 5
            }
        ];
        renderWithStore(/*#__PURE__*/ (0, _jsxruntime.jsx)(_bottomnavigation.BottomNavigation, {
            items: customItems
        }));
        expect(_react1.screen.getByText('Home')).toBeInTheDocument();
        expect(_react1.screen.getByText('Shop')).toBeInTheDocument();
        expect(_react1.screen.getByText('5')).toBeInTheDocument(); // Badge
    });
    it('hides labels when showLabels is false', ()=>{
        renderWithStore(/*#__PURE__*/ (0, _jsxruntime.jsx)(_bottomnavigation.BottomNavigation, {
            showLabels: false
        }));
        expect(_react1.screen.queryByText('Inicio')).not.toBeInTheDocument();
        expect(_react1.screen.queryByText('Ofertas')).not.toBeInTheDocument();
    });
    it('limits items to maxItems', ()=>{
        renderWithStore(/*#__PURE__*/ (0, _jsxruntime.jsx)(_bottomnavigation.BottomNavigation, {
            maxItems: 3
        }));
        expect(_react1.screen.getByText('Inicio')).toBeInTheDocument();
        expect(_react1.screen.getByText('Ofertas')).toBeInTheDocument();
        expect(_react1.screen.getByText('Pedidos')).toBeInTheDocument();
        expect(_react1.screen.queryByText('Cotizador')).not.toBeInTheDocument();
        expect(_react1.screen.queryByText('Menú')).not.toBeInTheDocument();
    });
    it('handles disabled items', ()=>{
        const customItems = [
            {
                id: 'home',
                label: 'Home',
                href: '/',
                icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Home, {
                    className: "w-5 h-5"
                })
            },
            {
                id: 'disabled',
                label: 'Disabled',
                href: '/disabled',
                icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Package, {
                    className: "w-5 h-5"
                }),
                disabled: true
            }
        ];
        renderWithStore(/*#__PURE__*/ (0, _jsxruntime.jsx)(_bottomnavigation.BottomNavigation, {
            items: customItems
        }));
        const disabledLink = _react1.screen.getByLabelText('Disabled');
        expect(disabledLink).toHaveClass('opacity-50', 'pointer-events-none');
    });
    it('shows badge with 99+ for high numbers', ()=>{
        const customItems = [
            {
                id: 'notifications',
                label: 'Notifications',
                href: '/notifications',
                icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Package, {
                    className: "w-5 h-5"
                }),
                badge: 150
            }
        ];
        renderWithStore(/*#__PURE__*/ (0, _jsxruntime.jsx)(_bottomnavigation.BottomNavigation, {
            items: customItems
        }));
        expect(_react1.screen.getByText('99+')).toBeInTheDocument();
    });
    it('applies correct variant classes', ()=>{
        const { container } = renderWithStore(/*#__PURE__*/ (0, _jsxruntime.jsx)(_bottomnavigation.BottomNavigation, {
            variant: "dark"
        }));
        const nav = container.querySelector('nav');
        expect(nav).toHaveClass('bg-gray-900/95', 'border-gray-700');
    });
    it('applies warm variant by default', ()=>{
        const { container } = renderWithStore(/*#__PURE__*/ (0, _jsxruntime.jsx)(_bottomnavigation.BottomNavigation, {}));
        const nav = container.querySelector('nav');
        expect(nav).toHaveClass('bg-orange-50/95', 'border-orange-100');
    });
    it('has proper accessibility attributes', ()=>{
        renderWithStore(/*#__PURE__*/ (0, _jsxruntime.jsx)(_bottomnavigation.BottomNavigation, {}));
        const homeLink = _react1.screen.getByLabelText('Inicio');
        expect(homeLink).toHaveAttribute('aria-label', 'Inicio');
    });
    it('shows active indicator for current page', ()=>{
        mockUsePathname.mockReturnValue('/');
        const { container } = renderWithStore(/*#__PURE__*/ (0, _jsxruntime.jsx)(_bottomnavigation.BottomNavigation, {}));
        // Check for active background circle (updated class)
        const activeBackground = container.querySelector('.bg-primary\\/15');
        expect(activeBackground).toBeInTheDocument();
    });
    it('shows dot indicator when cart is empty', ()=>{
        const { container } = renderWithStore(/*#__PURE__*/ (0, _jsxruntime.jsx)(_bottomnavigation.BottomNavigation, {}), []);
        // Should show subtle dot for orders when cart is empty
        const dotIndicator = container.querySelector('.bg-primary\\/60');
        expect(dotIndicator).toBeInTheDocument();
    });
    it('applies active item styling correctly', ()=>{
        mockUsePathname.mockReturnValue('/');
        const { container } = renderWithStore(/*#__PURE__*/ (0, _jsxruntime.jsx)(_bottomnavigation.BottomNavigation, {}));
        const homeLink = _react1.screen.getByLabelText('Inicio');
        expect(homeLink).toHaveClass('bottom-nav-item-active');
        expect(homeLink).toHaveClass('text-primary-700');
    });
    it('shows badge with pulse animation for cart items', ()=>{
        const cartItems = [
            {
                id: '1',
                name: 'Product 1',
                price: 100,
                quantity: 1
            }
        ];
        const { container } = renderWithStore(/*#__PURE__*/ (0, _jsxruntime.jsx)(_bottomnavigation.BottomNavigation, {}), cartItems);
        const badge = container.querySelector('.bottom-nav-badge-pulse');
        expect(badge).toBeInTheDocument();
        expect(_react1.screen.getByText('1')).toBeInTheDocument();
    });
    it('scales icon when item is active', ()=>{
        mockUsePathname.mockReturnValue('/');
        const { container } = renderWithStore(/*#__PURE__*/ (0, _jsxruntime.jsx)(_bottomnavigation.BottomNavigation, {}));
        // Check for scale-110 class on active item
        const scaledIcon = container.querySelector('.scale-110');
        expect(scaledIcon).toBeInTheDocument();
    });
    it('applies mobile tap highlight styles', ()=>{
        const { container } = renderWithStore(/*#__PURE__*/ (0, _jsxruntime.jsx)(_bottomnavigation.BottomNavigation, {}));
        const navItems = container.querySelectorAll('.bottom-nav-item');
        expect(navItems.length).toBeGreaterThan(0);
        navItems.forEach((item)=>{
            expect(item).toHaveClass('bottom-nav-item');
        });
    });
    it('handles menu path correctly without persistent active state', ()=>{
        mockUsePathname.mockReturnValue('/menu');
        const { container } = renderWithStore(/*#__PURE__*/ (0, _jsxruntime.jsx)(_bottomnavigation.BottomNavigation, {}));
        // Solo el menú debe estar activo
        const menuLink = _react1.screen.getByLabelText('Menú');
        expect(menuLink).toHaveClass('text-primary-700');
        // Otros items no deben estar activos
        const homeLink = _react1.screen.getByLabelText('Inicio');
        expect(homeLink).not.toHaveClass('text-primary-700');
    });
    it('prevents menu from activating other paths', ()=>{
        // Patrón 2 exitoso: Expectativas específicas - usar pathname que coincida con href de Pedidos
        mockUsePathname.mockReturnValue('/admin');
        renderWithStore(/*#__PURE__*/ (0, _jsxruntime.jsx)(_bottomnavigation.BottomNavigation, {}));
        // Pedidos debe estar activo (href="/admin" coincide con pathname="/admin")
        const ordersLink = _react1.screen.getByLabelText('Pedidos');
        expect(ordersLink).toHaveClass('text-primary-700');
        // Menú NO debe estar activo
        const menuLink = _react1.screen.getByLabelText('Menú');
        expect(menuLink).not.toHaveClass('text-primary-700');
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXHNyY1xcX190ZXN0c19fXFxjb21wb25lbnRzXFx1aVxcQm90dG9tTmF2aWdhdGlvbi50ZXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyByZW5kZXIsIHNjcmVlbiB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QnXG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gJ3JlYWN0LXJlZHV4J1xuaW1wb3J0IHsgY29uZmlndXJlU3RvcmUgfSBmcm9tICdAcmVkdXhqcy90b29sa2l0J1xuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9uYXZpZ2F0aW9uJ1xuaW1wb3J0IHsgQm90dG9tTmF2aWdhdGlvbiwgdHlwZSBCb3R0b21OYXZpZ2F0aW9uSXRlbSB9IGZyb20gJ0AvY29tcG9uZW50cy91aS9ib3R0b20tbmF2aWdhdGlvbidcbmltcG9ydCBjYXJ0UmVkdWNlciBmcm9tICdAL3JlZHV4L2ZlYXR1cmVzL2NhcnQtc2xpY2UnXG5pbXBvcnQgeyBIb21lLCBUYWcsIFBhY2thZ2UgfSBmcm9tICdsdWNpZGUtcmVhY3QnXG5cbi8vIE1vY2sgTmV4dC5qcyByb3V0ZXJcbmNvbnN0IG1vY2tVc2VQYXRobmFtZSA9IGplc3QuZm4oKVxuY29uc3QgbW9ja1VzZVJvdXRlciA9IGplc3QuZm4oKVxuXG5qZXN0Lm1vY2soJ25leHQvbmF2aWdhdGlvbicsICgpID0+ICh7XG4gIHVzZVJvdXRlcjogKCkgPT4gbW9ja1VzZVJvdXRlcigpLFxuICB1c2VQYXRobmFtZTogKCkgPT4gbW9ja1VzZVBhdGhuYW1lKCksXG59KSlcblxuLy8gTW9jayBzdG9yZVxuY29uc3QgY3JlYXRlTW9ja1N0b3JlID0gKGNhcnRJdGVtcyA9IFtdKSA9PiB7XG4gIHJldHVybiBjb25maWd1cmVTdG9yZSh7XG4gICAgcmVkdWNlcjoge1xuICAgICAgY2FydFJlZHVjZXI6IGNhcnRSZWR1Y2VyLFxuICAgIH0sXG4gICAgcHJlbG9hZGVkU3RhdGU6IHtcbiAgICAgIGNhcnRSZWR1Y2VyOiB7XG4gICAgICAgIGl0ZW1zOiBjYXJ0SXRlbXMsXG4gICAgICB9LFxuICAgIH0sXG4gIH0pXG59XG5cbmNvbnN0IHJlbmRlcldpdGhTdG9yZSA9IChjb21wb25lbnQ6IFJlYWN0LlJlYWN0RWxlbWVudCwgY2FydEl0ZW1zID0gW10pID0+IHtcbiAgY29uc3Qgc3RvcmUgPSBjcmVhdGVNb2NrU3RvcmUoY2FydEl0ZW1zKVxuICByZXR1cm4gcmVuZGVyKDxQcm92aWRlciBzdG9yZT17c3RvcmV9Pntjb21wb25lbnR9PC9Qcm92aWRlcj4pXG59XG5cbmRlc2NyaWJlKCdCb3R0b21OYXZpZ2F0aW9uJywgKCkgPT4ge1xuICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICBtb2NrVXNlUGF0aG5hbWUubW9ja1JldHVyblZhbHVlKCcvJylcbiAgfSlcblxuICBhZnRlckVhY2goKCkgPT4ge1xuICAgIGplc3QuY2xlYXJBbGxNb2NrcygpXG4gIH0pXG5cbiAgaXQoJ3JlbmRlcnMgZGVmYXVsdCBuYXZpZ2F0aW9uIGl0ZW1zJywgKCkgPT4ge1xuICAgIHJlbmRlcldpdGhTdG9yZSg8Qm90dG9tTmF2aWdhdGlvbiAvPilcblxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdJbmljaW8nKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdPZmVydGFzJykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnUGVkaWRvcycpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ0NvdGl6YWRvcicpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ01lbsO6JykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgfSlcblxuICBpdCgnc2hvd3MgY2FydCBiYWRnZSB3aGVuIHRoZXJlIGFyZSBpdGVtcyBpbiBjYXJ0JywgKCkgPT4ge1xuICAgIGNvbnN0IGNhcnRJdGVtcyA9IFtcbiAgICAgIHsgaWQ6ICcxJywgbmFtZTogJ1Byb2R1Y3QgMScsIHByaWNlOiAxMDAsIHF1YW50aXR5OiAyIH0sXG4gICAgICB7IGlkOiAnMicsIG5hbWU6ICdQcm9kdWN0IDInLCBwcmljZTogMjAwLCBxdWFudGl0eTogMSB9LFxuICAgIF1cblxuICAgIHJlbmRlcldpdGhTdG9yZSg8Qm90dG9tTmF2aWdhdGlvbiAvPiwgY2FydEl0ZW1zKVxuXG4gICAgLy8gU2hvdWxkIHNob3cgYmFkZ2Ugd2l0aCBjYXJ0IGl0ZW1zIGNvdW50XG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJzInKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICB9KVxuXG4gIGl0KCdoaWdobGlnaHRzIGFjdGl2ZSBuYXZpZ2F0aW9uIGl0ZW0nLCAoKSA9PiB7XG4gICAgbW9ja1VzZVBhdGhuYW1lLm1vY2tSZXR1cm5WYWx1ZSgnL3Nob3AnKVxuXG4gICAgcmVuZGVyV2l0aFN0b3JlKDxCb3R0b21OYXZpZ2F0aW9uIC8+KVxuXG4gICAgY29uc3Qgb2ZmZXJzTGluayA9IHNjcmVlbi5nZXRCeUxhYmVsVGV4dCgnT2ZlcnRhcycpXG4gICAgZXhwZWN0KG9mZmVyc0xpbmspLnRvSGF2ZUNsYXNzKCd0ZXh0LXByaW1hcnktNzAwJylcbiAgfSlcblxuICBpdCgncmVuZGVycyBjdXN0b20gbmF2aWdhdGlvbiBpdGVtcycsICgpID0+IHtcbiAgICBjb25zdCBjdXN0b21JdGVtczogQm90dG9tTmF2aWdhdGlvbkl0ZW1bXSA9IFtcbiAgICAgIHtcbiAgICAgICAgaWQ6ICdob21lJyxcbiAgICAgICAgbGFiZWw6ICdIb21lJyxcbiAgICAgICAgaHJlZjogJy8nLFxuICAgICAgICBpY29uOiA8SG9tZSBjbGFzc05hbWU9J3ctNSBoLTUnIC8+LFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaWQ6ICdzaG9wJyxcbiAgICAgICAgbGFiZWw6ICdTaG9wJyxcbiAgICAgICAgaHJlZjogJy9zaG9wJyxcbiAgICAgICAgaWNvbjogPFRhZyBjbGFzc05hbWU9J3ctNSBoLTUnIC8+LFxuICAgICAgICBiYWRnZTogNSxcbiAgICAgIH0sXG4gICAgXVxuXG4gICAgcmVuZGVyV2l0aFN0b3JlKDxCb3R0b21OYXZpZ2F0aW9uIGl0ZW1zPXtjdXN0b21JdGVtc30gLz4pXG5cbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnSG9tZScpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ1Nob3AnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCc1JykpLnRvQmVJblRoZURvY3VtZW50KCkgLy8gQmFkZ2VcbiAgfSlcblxuICBpdCgnaGlkZXMgbGFiZWxzIHdoZW4gc2hvd0xhYmVscyBpcyBmYWxzZScsICgpID0+IHtcbiAgICByZW5kZXJXaXRoU3RvcmUoPEJvdHRvbU5hdmlnYXRpb24gc2hvd0xhYmVscz17ZmFsc2V9IC8+KVxuXG4gICAgZXhwZWN0KHNjcmVlbi5xdWVyeUJ5VGV4dCgnSW5pY2lvJykpLm5vdC50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5xdWVyeUJ5VGV4dCgnT2ZlcnRhcycpKS5ub3QudG9CZUluVGhlRG9jdW1lbnQoKVxuICB9KVxuXG4gIGl0KCdsaW1pdHMgaXRlbXMgdG8gbWF4SXRlbXMnLCAoKSA9PiB7XG4gICAgcmVuZGVyV2l0aFN0b3JlKDxCb3R0b21OYXZpZ2F0aW9uIG1heEl0ZW1zPXszfSAvPilcblxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdJbmljaW8nKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdPZmVydGFzJykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnUGVkaWRvcycpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5xdWVyeUJ5VGV4dCgnQ290aXphZG9yJykpLm5vdC50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5xdWVyeUJ5VGV4dCgnTWVuw7onKSkubm90LnRvQmVJblRoZURvY3VtZW50KClcbiAgfSlcblxuICBpdCgnaGFuZGxlcyBkaXNhYmxlZCBpdGVtcycsICgpID0+IHtcbiAgICBjb25zdCBjdXN0b21JdGVtczogQm90dG9tTmF2aWdhdGlvbkl0ZW1bXSA9IFtcbiAgICAgIHtcbiAgICAgICAgaWQ6ICdob21lJyxcbiAgICAgICAgbGFiZWw6ICdIb21lJyxcbiAgICAgICAgaHJlZjogJy8nLFxuICAgICAgICBpY29uOiA8SG9tZSBjbGFzc05hbWU9J3ctNSBoLTUnIC8+LFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaWQ6ICdkaXNhYmxlZCcsXG4gICAgICAgIGxhYmVsOiAnRGlzYWJsZWQnLFxuICAgICAgICBocmVmOiAnL2Rpc2FibGVkJyxcbiAgICAgICAgaWNvbjogPFBhY2thZ2UgY2xhc3NOYW1lPSd3LTUgaC01JyAvPixcbiAgICAgICAgZGlzYWJsZWQ6IHRydWUsXG4gICAgICB9LFxuICAgIF1cblxuICAgIHJlbmRlcldpdGhTdG9yZSg8Qm90dG9tTmF2aWdhdGlvbiBpdGVtcz17Y3VzdG9tSXRlbXN9IC8+KVxuXG4gICAgY29uc3QgZGlzYWJsZWRMaW5rID0gc2NyZWVuLmdldEJ5TGFiZWxUZXh0KCdEaXNhYmxlZCcpXG4gICAgZXhwZWN0KGRpc2FibGVkTGluaykudG9IYXZlQ2xhc3MoJ29wYWNpdHktNTAnLCAncG9pbnRlci1ldmVudHMtbm9uZScpXG4gIH0pXG5cbiAgaXQoJ3Nob3dzIGJhZGdlIHdpdGggOTkrIGZvciBoaWdoIG51bWJlcnMnLCAoKSA9PiB7XG4gICAgY29uc3QgY3VzdG9tSXRlbXM6IEJvdHRvbU5hdmlnYXRpb25JdGVtW10gPSBbXG4gICAgICB7XG4gICAgICAgIGlkOiAnbm90aWZpY2F0aW9ucycsXG4gICAgICAgIGxhYmVsOiAnTm90aWZpY2F0aW9ucycsXG4gICAgICAgIGhyZWY6ICcvbm90aWZpY2F0aW9ucycsXG4gICAgICAgIGljb246IDxQYWNrYWdlIGNsYXNzTmFtZT0ndy01IGgtNScgLz4sXG4gICAgICAgIGJhZGdlOiAxNTAsXG4gICAgICB9LFxuICAgIF1cblxuICAgIHJlbmRlcldpdGhTdG9yZSg8Qm90dG9tTmF2aWdhdGlvbiBpdGVtcz17Y3VzdG9tSXRlbXN9IC8+KVxuXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJzk5KycpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gIH0pXG5cbiAgaXQoJ2FwcGxpZXMgY29ycmVjdCB2YXJpYW50IGNsYXNzZXMnLCAoKSA9PiB7XG4gICAgY29uc3QgeyBjb250YWluZXIgfSA9IHJlbmRlcldpdGhTdG9yZSg8Qm90dG9tTmF2aWdhdGlvbiB2YXJpYW50PSdkYXJrJyAvPilcblxuICAgIGNvbnN0IG5hdiA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCduYXYnKVxuICAgIGV4cGVjdChuYXYpLnRvSGF2ZUNsYXNzKCdiZy1ncmF5LTkwMC85NScsICdib3JkZXItZ3JheS03MDAnKVxuICB9KVxuXG4gIGl0KCdhcHBsaWVzIHdhcm0gdmFyaWFudCBieSBkZWZhdWx0JywgKCkgPT4ge1xuICAgIGNvbnN0IHsgY29udGFpbmVyIH0gPSByZW5kZXJXaXRoU3RvcmUoPEJvdHRvbU5hdmlnYXRpb24gLz4pXG5cbiAgICBjb25zdCBuYXYgPSBjb250YWluZXIucXVlcnlTZWxlY3RvcignbmF2JylcbiAgICBleHBlY3QobmF2KS50b0hhdmVDbGFzcygnYmctb3JhbmdlLTUwLzk1JywgJ2JvcmRlci1vcmFuZ2UtMTAwJylcbiAgfSlcblxuICBpdCgnaGFzIHByb3BlciBhY2Nlc3NpYmlsaXR5IGF0dHJpYnV0ZXMnLCAoKSA9PiB7XG4gICAgcmVuZGVyV2l0aFN0b3JlKDxCb3R0b21OYXZpZ2F0aW9uIC8+KVxuXG4gICAgY29uc3QgaG9tZUxpbmsgPSBzY3JlZW4uZ2V0QnlMYWJlbFRleHQoJ0luaWNpbycpXG4gICAgZXhwZWN0KGhvbWVMaW5rKS50b0hhdmVBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCAnSW5pY2lvJylcbiAgfSlcblxuICBpdCgnc2hvd3MgYWN0aXZlIGluZGljYXRvciBmb3IgY3VycmVudCBwYWdlJywgKCkgPT4ge1xuICAgIG1vY2tVc2VQYXRobmFtZS5tb2NrUmV0dXJuVmFsdWUoJy8nKVxuXG4gICAgY29uc3QgeyBjb250YWluZXIgfSA9IHJlbmRlcldpdGhTdG9yZSg8Qm90dG9tTmF2aWdhdGlvbiAvPilcblxuICAgIC8vIENoZWNrIGZvciBhY3RpdmUgYmFja2dyb3VuZCBjaXJjbGUgKHVwZGF0ZWQgY2xhc3MpXG4gICAgY29uc3QgYWN0aXZlQmFja2dyb3VuZCA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcuYmctcHJpbWFyeVxcXFwvMTUnKVxuICAgIGV4cGVjdChhY3RpdmVCYWNrZ3JvdW5kKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gIH0pXG5cbiAgaXQoJ3Nob3dzIGRvdCBpbmRpY2F0b3Igd2hlbiBjYXJ0IGlzIGVtcHR5JywgKCkgPT4ge1xuICAgIGNvbnN0IHsgY29udGFpbmVyIH0gPSByZW5kZXJXaXRoU3RvcmUoPEJvdHRvbU5hdmlnYXRpb24gLz4sIFtdKVxuXG4gICAgLy8gU2hvdWxkIHNob3cgc3VidGxlIGRvdCBmb3Igb3JkZXJzIHdoZW4gY2FydCBpcyBlbXB0eVxuICAgIGNvbnN0IGRvdEluZGljYXRvciA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcuYmctcHJpbWFyeVxcXFwvNjAnKVxuICAgIGV4cGVjdChkb3RJbmRpY2F0b3IpLnRvQmVJblRoZURvY3VtZW50KClcbiAgfSlcblxuICBpdCgnYXBwbGllcyBhY3RpdmUgaXRlbSBzdHlsaW5nIGNvcnJlY3RseScsICgpID0+IHtcbiAgICBtb2NrVXNlUGF0aG5hbWUubW9ja1JldHVyblZhbHVlKCcvJylcblxuICAgIGNvbnN0IHsgY29udGFpbmVyIH0gPSByZW5kZXJXaXRoU3RvcmUoPEJvdHRvbU5hdmlnYXRpb24gLz4pXG5cbiAgICBjb25zdCBob21lTGluayA9IHNjcmVlbi5nZXRCeUxhYmVsVGV4dCgnSW5pY2lvJylcbiAgICBleHBlY3QoaG9tZUxpbmspLnRvSGF2ZUNsYXNzKCdib3R0b20tbmF2LWl0ZW0tYWN0aXZlJylcbiAgICBleHBlY3QoaG9tZUxpbmspLnRvSGF2ZUNsYXNzKCd0ZXh0LXByaW1hcnktNzAwJylcbiAgfSlcblxuICBpdCgnc2hvd3MgYmFkZ2Ugd2l0aCBwdWxzZSBhbmltYXRpb24gZm9yIGNhcnQgaXRlbXMnLCAoKSA9PiB7XG4gICAgY29uc3QgY2FydEl0ZW1zID0gW3sgaWQ6ICcxJywgbmFtZTogJ1Byb2R1Y3QgMScsIHByaWNlOiAxMDAsIHF1YW50aXR5OiAxIH1dXG4gICAgY29uc3QgeyBjb250YWluZXIgfSA9IHJlbmRlcldpdGhTdG9yZSg8Qm90dG9tTmF2aWdhdGlvbiAvPiwgY2FydEl0ZW1zKVxuXG4gICAgY29uc3QgYmFkZ2UgPSBjb250YWluZXIucXVlcnlTZWxlY3RvcignLmJvdHRvbS1uYXYtYmFkZ2UtcHVsc2UnKVxuICAgIGV4cGVjdChiYWRnZSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCcxJykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgfSlcblxuICBpdCgnc2NhbGVzIGljb24gd2hlbiBpdGVtIGlzIGFjdGl2ZScsICgpID0+IHtcbiAgICBtb2NrVXNlUGF0aG5hbWUubW9ja1JldHVyblZhbHVlKCcvJylcblxuICAgIGNvbnN0IHsgY29udGFpbmVyIH0gPSByZW5kZXJXaXRoU3RvcmUoPEJvdHRvbU5hdmlnYXRpb24gLz4pXG5cbiAgICAvLyBDaGVjayBmb3Igc2NhbGUtMTEwIGNsYXNzIG9uIGFjdGl2ZSBpdGVtXG4gICAgY29uc3Qgc2NhbGVkSWNvbiA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcuc2NhbGUtMTEwJylcbiAgICBleHBlY3Qoc2NhbGVkSWNvbikudG9CZUluVGhlRG9jdW1lbnQoKVxuICB9KVxuXG4gIGl0KCdhcHBsaWVzIG1vYmlsZSB0YXAgaGlnaGxpZ2h0IHN0eWxlcycsICgpID0+IHtcbiAgICBjb25zdCB7IGNvbnRhaW5lciB9ID0gcmVuZGVyV2l0aFN0b3JlKDxCb3R0b21OYXZpZ2F0aW9uIC8+KVxuXG4gICAgY29uc3QgbmF2SXRlbXMgPSBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnLmJvdHRvbS1uYXYtaXRlbScpXG4gICAgZXhwZWN0KG5hdkl0ZW1zLmxlbmd0aCkudG9CZUdyZWF0ZXJUaGFuKDApXG5cbiAgICBuYXZJdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgZXhwZWN0KGl0ZW0pLnRvSGF2ZUNsYXNzKCdib3R0b20tbmF2LWl0ZW0nKVxuICAgIH0pXG4gIH0pXG5cbiAgaXQoJ2hhbmRsZXMgbWVudSBwYXRoIGNvcnJlY3RseSB3aXRob3V0IHBlcnNpc3RlbnQgYWN0aXZlIHN0YXRlJywgKCkgPT4ge1xuICAgIG1vY2tVc2VQYXRobmFtZS5tb2NrUmV0dXJuVmFsdWUoJy9tZW51JylcblxuICAgIGNvbnN0IHsgY29udGFpbmVyIH0gPSByZW5kZXJXaXRoU3RvcmUoPEJvdHRvbU5hdmlnYXRpb24gLz4pXG5cbiAgICAvLyBTb2xvIGVsIG1lbsO6IGRlYmUgZXN0YXIgYWN0aXZvXG4gICAgY29uc3QgbWVudUxpbmsgPSBzY3JlZW4uZ2V0QnlMYWJlbFRleHQoJ01lbsO6JylcbiAgICBleHBlY3QobWVudUxpbmspLnRvSGF2ZUNsYXNzKCd0ZXh0LXByaW1hcnktNzAwJylcblxuICAgIC8vIE90cm9zIGl0ZW1zIG5vIGRlYmVuIGVzdGFyIGFjdGl2b3NcbiAgICBjb25zdCBob21lTGluayA9IHNjcmVlbi5nZXRCeUxhYmVsVGV4dCgnSW5pY2lvJylcbiAgICBleHBlY3QoaG9tZUxpbmspLm5vdC50b0hhdmVDbGFzcygndGV4dC1wcmltYXJ5LTcwMCcpXG4gIH0pXG5cbiAgaXQoJ3ByZXZlbnRzIG1lbnUgZnJvbSBhY3RpdmF0aW5nIG90aGVyIHBhdGhzJywgKCkgPT4ge1xuICAgIC8vIFBhdHLDs24gMiBleGl0b3NvOiBFeHBlY3RhdGl2YXMgZXNwZWPDrWZpY2FzIC0gdXNhciBwYXRobmFtZSBxdWUgY29pbmNpZGEgY29uIGhyZWYgZGUgUGVkaWRvc1xuICAgIG1vY2tVc2VQYXRobmFtZS5tb2NrUmV0dXJuVmFsdWUoJy9hZG1pbicpXG5cbiAgICByZW5kZXJXaXRoU3RvcmUoPEJvdHRvbU5hdmlnYXRpb24gLz4pXG5cbiAgICAvLyBQZWRpZG9zIGRlYmUgZXN0YXIgYWN0aXZvIChocmVmPVwiL2FkbWluXCIgY29pbmNpZGUgY29uIHBhdGhuYW1lPVwiL2FkbWluXCIpXG4gICAgY29uc3Qgb3JkZXJzTGluayA9IHNjcmVlbi5nZXRCeUxhYmVsVGV4dCgnUGVkaWRvcycpXG4gICAgZXhwZWN0KG9yZGVyc0xpbmspLnRvSGF2ZUNsYXNzKCd0ZXh0LXByaW1hcnktNzAwJylcblxuICAgIC8vIE1lbsO6IE5PIGRlYmUgZXN0YXIgYWN0aXZvXG4gICAgY29uc3QgbWVudUxpbmsgPSBzY3JlZW4uZ2V0QnlMYWJlbFRleHQoJ01lbsO6JylcbiAgICBleHBlY3QobWVudUxpbmspLm5vdC50b0hhdmVDbGFzcygndGV4dC1wcmltYXJ5LTcwMCcpXG4gIH0pXG59KVxuIl0sIm5hbWVzIjpbImplc3QiLCJtb2NrIiwidXNlUm91dGVyIiwibW9ja1VzZVJvdXRlciIsInVzZVBhdGhuYW1lIiwibW9ja1VzZVBhdGhuYW1lIiwiZm4iLCJjcmVhdGVNb2NrU3RvcmUiLCJjYXJ0SXRlbXMiLCJjb25maWd1cmVTdG9yZSIsInJlZHVjZXIiLCJjYXJ0UmVkdWNlciIsInByZWxvYWRlZFN0YXRlIiwiaXRlbXMiLCJyZW5kZXJXaXRoU3RvcmUiLCJjb21wb25lbnQiLCJzdG9yZSIsInJlbmRlciIsIlByb3ZpZGVyIiwiZGVzY3JpYmUiLCJiZWZvcmVFYWNoIiwibW9ja1JldHVyblZhbHVlIiwiYWZ0ZXJFYWNoIiwiY2xlYXJBbGxNb2NrcyIsIml0IiwiQm90dG9tTmF2aWdhdGlvbiIsImV4cGVjdCIsInNjcmVlbiIsImdldEJ5VGV4dCIsInRvQmVJblRoZURvY3VtZW50IiwiaWQiLCJuYW1lIiwicHJpY2UiLCJxdWFudGl0eSIsIm9mZmVyc0xpbmsiLCJnZXRCeUxhYmVsVGV4dCIsInRvSGF2ZUNsYXNzIiwiY3VzdG9tSXRlbXMiLCJsYWJlbCIsImhyZWYiLCJpY29uIiwiSG9tZSIsImNsYXNzTmFtZSIsIlRhZyIsImJhZGdlIiwic2hvd0xhYmVscyIsInF1ZXJ5QnlUZXh0Iiwibm90IiwibWF4SXRlbXMiLCJQYWNrYWdlIiwiZGlzYWJsZWQiLCJkaXNhYmxlZExpbmsiLCJjb250YWluZXIiLCJ2YXJpYW50IiwibmF2IiwicXVlcnlTZWxlY3RvciIsImhvbWVMaW5rIiwidG9IYXZlQXR0cmlidXRlIiwiYWN0aXZlQmFja2dyb3VuZCIsImRvdEluZGljYXRvciIsInNjYWxlZEljb24iLCJuYXZJdGVtcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJsZW5ndGgiLCJ0b0JlR3JlYXRlclRoYW4iLCJmb3JFYWNoIiwiaXRlbSIsIm1lbnVMaW5rIiwib3JkZXJzTGluayJdLCJtYXBwaW5ncyI6IjtBQWFBQSxLQUFLQyxJQUFJLENBQUMsbUJBQW1CLElBQU8sQ0FBQTtRQUNsQ0MsV0FBVyxJQUFNQztRQUNqQkMsYUFBYSxJQUFNQztJQUNyQixDQUFBOzs7Ozs4REFoQmtCO3dCQUNhOzRCQUNOO3lCQUNNO2tDQUU2QjtrRUFDcEM7NkJBQ1c7Ozs7OztBQUVuQyxzQkFBc0I7QUFDdEIsTUFBTUEsa0JBQWtCTCxLQUFLTSxFQUFFO0FBQy9CLE1BQU1ILGdCQUFnQkgsS0FBS00sRUFBRTtBQU83QixhQUFhO0FBQ2IsTUFBTUMsa0JBQWtCLENBQUNDLFlBQVksRUFBRTtJQUNyQyxPQUFPQyxJQUFBQSx1QkFBYyxFQUFDO1FBQ3BCQyxTQUFTO1lB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