{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\__tests__\\components\\ui\\BottomNavigation.test.tsx"],"sourcesContent":["import React from 'react'\nimport { render, screen } from '@testing-library/react'\nimport { Provider } from 'react-redux'\nimport { configureStore } from '@reduxjs/toolkit'\nimport { useRouter } from 'next/navigation'\nimport { BottomNavigation, type BottomNavigationItem } from '@/components/ui/bottom-navigation'\nimport cartReducer from '@/redux/features/cart-slice'\nimport { Home, Tag, Package } from 'lucide-react'\n\n// Mock Next.js router\nconst mockUsePathname = jest.fn()\nconst mockUseRouter = jest.fn()\n\njest.mock('next/navigation', () => ({\n  useRouter: () => mockUseRouter(),\n  usePathname: () => mockUsePathname(),\n}))\n\n// Mock store\nconst createMockStore = (cartItems = []) => {\n  return configureStore({\n    reducer: {\n      cartReducer: cartReducer,\n    },\n    preloadedState: {\n      cartReducer: {\n        items: cartItems,\n      },\n    },\n  })\n}\n\nconst renderWithStore = (component: React.ReactElement, cartItems = []) => {\n  const store = createMockStore(cartItems)\n  return render(<Provider store={store}>{component}</Provider>)\n}\n\ndescribe('BottomNavigation', () => {\n  beforeEach(() => {\n    mockUsePathname.mockReturnValue('/')\n  })\n\n  afterEach(() => {\n    jest.clearAllMocks()\n  })\n\n  it('renders default navigation items', () => {\n    renderWithStore(<BottomNavigation />)\n\n    expect(screen.getByText('Inicio')).toBeInTheDocument()\n    expect(screen.getByText('Ofertas')).toBeInTheDocument()\n    expect(screen.getByText('Pedidos')).toBeInTheDocument()\n    expect(screen.getByText('Cotizador')).toBeInTheDocument()\n    expect(screen.getByText('Menú')).toBeInTheDocument()\n  })\n\n  it('shows cart badge when there are items in cart', () => {\n    const cartItems = [\n      { id: '1', name: 'Product 1', price: 100, quantity: 2 },\n      { id: '2', name: 'Product 2', price: 200, quantity: 1 },\n    ]\n\n    renderWithStore(<BottomNavigation />, cartItems)\n\n    // Should show badge with cart items count\n    expect(screen.getByText('2')).toBeInTheDocument()\n  })\n\n  it('highlights active navigation item', () => {\n    mockUsePathname.mockReturnValue('/shop')\n\n    renderWithStore(<BottomNavigation />)\n\n    const offersLink = screen.getByLabelText('Ofertas')\n    expect(offersLink).toHaveClass('text-primary-700')\n  })\n\n  it('renders custom navigation items', () => {\n    const customItems: BottomNavigationItem[] = [\n      {\n        id: 'home',\n        label: 'Home',\n        href: '/',\n        icon: <Home className='w-5 h-5' />,\n      },\n      {\n        id: 'shop',\n        label: 'Shop',\n        href: '/shop',\n        icon: <Tag className='w-5 h-5' />,\n        badge: 5,\n      },\n    ]\n\n    renderWithStore(<BottomNavigation items={customItems} />)\n\n    expect(screen.getByText('Home')).toBeInTheDocument()\n    expect(screen.getByText('Shop')).toBeInTheDocument()\n    expect(screen.getByText('5')).toBeInTheDocument() // Badge\n  })\n\n  it('hides labels when showLabels is false', () => {\n    renderWithStore(<BottomNavigation showLabels={false} />)\n\n    expect(screen.queryByText('Inicio')).not.toBeInTheDocument()\n    expect(screen.queryByText('Ofertas')).not.toBeInTheDocument()\n  })\n\n  it('limits items to maxItems', () => {\n    renderWithStore(<BottomNavigation maxItems={3} />)\n\n    expect(screen.getByText('Inicio')).toBeInTheDocument()\n    expect(screen.getByText('Ofertas')).toBeInTheDocument()\n    expect(screen.getByText('Pedidos')).toBeInTheDocument()\n    expect(screen.queryByText('Cotizador')).not.toBeInTheDocument()\n    expect(screen.queryByText('Menú')).not.toBeInTheDocument()\n  })\n\n  it('handles disabled items', () => {\n    const customItems: BottomNavigationItem[] = [\n      {\n        id: 'home',\n        label: 'Home',\n        href: '/',\n        icon: <Home className='w-5 h-5' />,\n      },\n      {\n        id: 'disabled',\n        label: 'Disabled',\n        href: '/disabled',\n        icon: <Package className='w-5 h-5' />,\n        disabled: true,\n      },\n    ]\n\n    renderWithStore(<BottomNavigation items={customItems} />)\n\n    const disabledLink = screen.getByLabelText('Disabled')\n    expect(disabledLink).toHaveClass('opacity-50', 'pointer-events-none')\n  })\n\n  it('shows badge with 99+ for high numbers', () => {\n    const customItems: BottomNavigationItem[] = [\n      {\n        id: 'notifications',\n        label: 'Notifications',\n        href: '/notifications',\n        icon: <Package className='w-5 h-5' />,\n        badge: 150,\n      },\n    ]\n\n    renderWithStore(<BottomNavigation items={customItems} />)\n\n    expect(screen.getByText('99+')).toBeInTheDocument()\n  })\n\n  it('applies correct variant classes', () => {\n    const { container } = renderWithStore(<BottomNavigation variant='dark' />)\n\n    const nav = container.querySelector('nav')\n    expect(nav).toHaveClass('bg-gray-900/95', 'border-gray-700')\n  })\n\n  it('applies warm variant by default', () => {\n    const { container } = renderWithStore(<BottomNavigation />)\n\n    const nav = container.querySelector('nav')\n    expect(nav).toHaveClass('bg-orange-50/95', 'border-orange-100')\n  })\n\n  it('has proper accessibility attributes', () => {\n    renderWithStore(<BottomNavigation />)\n\n    const homeLink = screen.getByLabelText('Inicio')\n    expect(homeLink).toHaveAttribute('aria-label', 'Inicio')\n  })\n\n  it('shows active indicator for current page', () => {\n    mockUsePathname.mockReturnValue('/')\n\n    const { container } = renderWithStore(<BottomNavigation />)\n\n    // Check for active background circle (updated class)\n    const activeBackground = container.querySelector('.bg-primary\\\\/15')\n    expect(activeBackground).toBeInTheDocument()\n  })\n\n  it('shows dot indicator when cart is empty', () => {\n    const { container } = renderWithStore(<BottomNavigation />, [])\n\n    // Should show subtle dot for orders when cart is empty\n    const dotIndicator = container.querySelector('.bg-primary\\\\/60')\n    expect(dotIndicator).toBeInTheDocument()\n  })\n\n  it('applies active item styling correctly', () => {\n    mockUsePathname.mockReturnValue('/')\n\n    const { container } = renderWithStore(<BottomNavigation />)\n\n    const homeLink = screen.getByLabelText('Inicio')\n    expect(homeLink).toHaveClass('bottom-nav-item-active')\n    expect(homeLink).toHaveClass('text-primary-700')\n  })\n\n  it('shows badge with pulse animation for cart items', () => {\n    const cartItems = [{ id: '1', name: 'Product 1', price: 100, quantity: 1 }]\n    const { container } = renderWithStore(<BottomNavigation />, cartItems)\n\n    const badge = container.querySelector('.bottom-nav-badge-pulse')\n    expect(badge).toBeInTheDocument()\n    expect(screen.getByText('1')).toBeInTheDocument()\n  })\n\n  it('scales icon when item is active', () => {\n    mockUsePathname.mockReturnValue('/')\n\n    const { container } = renderWithStore(<BottomNavigation />)\n\n    // Check for scale-110 class on active item\n    const scaledIcon = container.querySelector('.scale-110')\n    expect(scaledIcon).toBeInTheDocument()\n  })\n\n  it('applies mobile tap highlight styles', () => {\n    const { container } = renderWithStore(<BottomNavigation />)\n\n    const navItems = container.querySelectorAll('.bottom-nav-item')\n    expect(navItems.length).toBeGreaterThan(0)\n\n    navItems.forEach(item => {\n      expect(item).toHaveClass('bottom-nav-item')\n    })\n  })\n\n  it('handles menu path correctly without persistent active state', () => {\n    mockUsePathname.mockReturnValue('/menu')\n\n    const { container } = renderWithStore(<BottomNavigation />)\n\n    // Solo el menú debe estar activo\n    const menuLink = screen.getByLabelText('Menú')\n    expect(menuLink).toHaveClass('text-primary-700')\n\n    // Otros items no deben estar activos\n    const homeLink = screen.getByLabelText('Inicio')\n    expect(homeLink).not.toHaveClass('text-primary-700')\n  })\n\n  it('prevents menu from activating other paths', () => {\n    // Patrón 2 exitoso: Expectativas específicas - usar pathname que coincida con href de Pedidos\n    mockUsePathname.mockReturnValue('/admin')\n\n    renderWithStore(<BottomNavigation />)\n\n    // Pedidos debe estar activo (href=\"/admin\" coincide con pathname=\"/admin\")\n    const ordersLink = screen.getByLabelText('Pedidos')\n    expect(ordersLink).toHaveClass('text-primary-700')\n\n    // Menú NO debe estar activo\n    const menuLink = screen.getByLabelText('Menú')\n    expect(menuLink).not.toHaveClass('text-primary-700')\n  })\n})\n"],"names":["jest","mock","useRouter","mockUseRouter","usePathname","mockUsePathname","fn","createMockStore","cartItems","configureStore","reducer","cartReducer","preloadedState","items","renderWithStore","component","store","render","Provider","describe","beforeEach","mockReturnValue","afterEach","clearAllMocks","it","BottomNavigation","expect","screen","getByText","toBeInTheDocument","id","name","price","quantity","offersLink","getByLabelText","toHaveClass","customItems","label","href","icon","Home","className","Tag","badge","showLabels","queryByText","not","maxItems","Package","disabled","disabledLink","container","variant","nav","querySelector","homeLink","toHaveAttribute","activeBackground","dotIndicator","scaledIcon","navItems","querySelectorAll","length","toBeGreaterThan","forEach","item","menuLink","ordersLink"],"mappings":"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"}