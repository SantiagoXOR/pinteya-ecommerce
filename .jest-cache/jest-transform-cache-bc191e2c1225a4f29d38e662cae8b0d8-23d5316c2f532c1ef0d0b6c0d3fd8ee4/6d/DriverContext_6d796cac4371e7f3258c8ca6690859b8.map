{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\contexts\\DriverContext.tsx"],"sourcesContent":["/**\n * Contexto global para la aplicación de drivers\n * Maneja estado de ubicación, rutas asignadas y sincronización en tiempo real\n */\n\n'use client'\n\nimport React, { createContext, useContext, useReducer, useEffect } from 'react'\nimport { useSession } from 'next-auth/react'\n\n// =====================================================\n// TIPOS E INTERFACES\n// =====================================================\n\ninterface Driver {\n  id: string\n  name: string\n  email: string\n  phone: string\n  vehicle_type: string\n  license_plate: string\n  status: 'available' | 'busy' | 'offline'\n  current_location?: {\n    lat: number\n    lng: number\n  }\n}\n\ninterface RouteAssignment {\n  id: string\n  name: string\n  status: 'planned' | 'active' | 'completed'\n  shipments: any[]\n  waypoints: Array<{ lat: number; lng: number }>\n  total_distance: number\n  estimated_time: number\n  optimization_score: number\n}\n\ninterface DriverState {\n  driver: Driver | null\n  currentRoute: RouteAssignment | null\n  assignedRoutes: RouteAssignment[]\n  currentLocation: { lat: number; lng: number } | null\n  isTracking: boolean\n  isOnline: boolean\n  notifications: any[]\n  loading: boolean\n  error: string | null\n}\n\ntype DriverAction =\n  | { type: 'SET_DRIVER'; payload: Driver }\n  | { type: 'SET_CURRENT_ROUTE'; payload: RouteAssignment }\n  | { type: 'SET_ASSIGNED_ROUTES'; payload: RouteAssignment[] }\n  | { type: 'UPDATE_LOCATION'; payload: { lat: number; lng: number } }\n  | { type: 'SET_TRACKING'; payload: boolean }\n  | { type: 'SET_ONLINE'; payload: boolean }\n  | { type: 'ADD_NOTIFICATION'; payload: any }\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'SET_ERROR'; payload: string | null }\n  | { type: 'COMPLETE_DELIVERY'; payload: string }\n  | { type: 'START_ROUTE'; payload: string }\n  | { type: 'COMPLETE_ROUTE'; payload: string }\n\n// =====================================================\n// REDUCER\n// =====================================================\n\nconst initialState: DriverState = {\n  driver: null,\n  currentRoute: null,\n  assignedRoutes: [],\n  currentLocation: null,\n  isTracking: false,\n  isOnline: false,\n  notifications: [],\n  loading: false,\n  error: null,\n}\n\nfunction driverReducer(state: DriverState, action: DriverAction): DriverState {\n  switch (action.type) {\n    case 'SET_DRIVER':\n      return { ...state, driver: action.payload }\n\n    case 'SET_CURRENT_ROUTE':\n      return { ...state, currentRoute: action.payload }\n\n    case 'SET_ASSIGNED_ROUTES':\n      return { ...state, assignedRoutes: action.payload }\n\n    case 'UPDATE_LOCATION':\n      return {\n        ...state,\n        currentLocation: action.payload,\n        driver: state.driver\n          ? {\n              ...state.driver,\n              current_location: action.payload,\n            }\n          : null,\n      }\n\n    case 'SET_TRACKING':\n      return { ...state, isTracking: action.payload }\n\n    case 'SET_ONLINE':\n      return { ...state, isOnline: action.payload }\n\n    case 'ADD_NOTIFICATION':\n      return {\n        ...state,\n        notifications: [action.payload, ...state.notifications.slice(0, 9)],\n      }\n\n    case 'SET_LOADING':\n      return { ...state, loading: action.payload }\n\n    case 'SET_ERROR':\n      return { ...state, error: action.payload }\n\n    case 'START_ROUTE':\n      return {\n        ...state,\n        currentRoute: state.assignedRoutes.find(r => r.id === action.payload) || null,\n        assignedRoutes: state.assignedRoutes.map(route =>\n          route.id === action.payload ? { ...route, status: 'active' as const } : route\n        ),\n      }\n\n    case 'COMPLETE_ROUTE':\n      return {\n        ...state,\n        currentRoute: null,\n        assignedRoutes: state.assignedRoutes.map(route =>\n          route.id === action.payload ? { ...route, status: 'completed' as const } : route\n        ),\n      }\n\n    default:\n      return state\n  }\n}\n\n// =====================================================\n// CONTEXTO\n// =====================================================\n\ninterface DriverContextType {\n  state: DriverState\n  dispatch: React.Dispatch<DriverAction>\n\n  // Acciones específicas\n  startLocationTracking: () => void\n  stopLocationTracking: () => void\n  updateDriverLocation: (location: { lat: number; lng: number }) => void\n  startRoute: (routeId: string) => void\n  completeRoute: (routeId: string) => void\n  completeDelivery: (shipmentId: string) => void\n  goOnline: () => void\n  goOffline: () => void\n}\n\nconst DriverContext = createContext<DriverContextType | undefined>(undefined)\n\n// =====================================================\n// PROVIDER\n// =====================================================\n\nexport function DriverProvider({ children }: { children: React.ReactNode }) {\n  const [state, dispatch] = useReducer(driverReducer, initialState)\n  const { data: session } = useSession()\n\n  // Inicializar driver al cargar\n  useEffect(() => {\n    if (session?.user?.email) {\n      loadDriverData()\n    }\n  }, [session])\n\n  // Funciones del contexto\n  const loadDriverData = async () => {\n    dispatch({ type: 'SET_LOADING', payload: true })\n    try {\n      const response = await fetch('/api/driver/profile')\n      const data = await response.json()\n\n      if (data.driver) {\n        dispatch({ type: 'SET_DRIVER', payload: data.driver })\n        dispatch({ type: 'SET_ASSIGNED_ROUTES', payload: data.routes || [] })\n      }\n    } catch (error) {\n      dispatch({ type: 'SET_ERROR', payload: 'Error cargando datos del driver' })\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false })\n    }\n  }\n\n  const startLocationTracking = () => {\n    if ('geolocation' in navigator) {\n      dispatch({ type: 'SET_TRACKING', payload: true })\n\n      // Intentar primero con alta precisión\n      const tryHighAccuracy = () => {\n        const watchId = navigator.geolocation.watchPosition(\n          position => {\n            const location = {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude,\n            }\n            updateDriverLocation(location)\n          },\n          error => {\n            console.warn('High accuracy geolocation failed, trying standard accuracy:', error)\n            // Si falla con alta precisión, intentar con precisión estándar\n            tryStandardAccuracy()\n          },\n          {\n            enableHighAccuracy: true,\n            timeout: 10000,\n            maximumAge: 30000,\n          }\n        )\n\n        // Guardar watchId para poder detener el tracking\n        ;(window as any).driverLocationWatchId = watchId\n      }\n\n      // Función de respaldo con precisión estándar\n      const tryStandardAccuracy = () => {\n        const watchId = navigator.geolocation.watchPosition(\n          position => {\n            const location = {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude,\n            }\n            updateDriverLocation(location)\n          },\n          error => {\n            console.error('Error tracking location:', error)\n            dispatch({ type: 'SET_ERROR', payload: 'Error obteniendo ubicación' })\n          },\n          {\n            enableHighAccuracy: true,\n            timeout: 10000,\n            maximumAge: 5000,\n          }\n        )\n\n        // Guardar watchId para poder detener el tracking\n        ;(window as any).driverLocationWatchId = watchId\n      }\n\n      // Iniciar con alta precisión\n      tryHighAccuracy()\n    }\n  }\n\n  const stopLocationTracking = () => {\n    dispatch({ type: 'SET_TRACKING', payload: false })\n    if ((window as any).driverLocationWatchId) {\n      navigator.geolocation.clearWatch((window as any).driverLocationWatchId)\n    }\n  }\n\n  const updateDriverLocation = async (location: { lat: number; lng: number }) => {\n    dispatch({ type: 'UPDATE_LOCATION', payload: location })\n\n    // Enviar ubicación al servidor\n    try {\n      await fetch('/api/driver/location', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ location }),\n      })\n    } catch (error) {\n      console.error('Error updating location:', error)\n    }\n  }\n\n  const startRoute = (routeId: string) => {\n    dispatch({ type: 'START_ROUTE', payload: routeId })\n    startLocationTracking()\n  }\n\n  const completeRoute = (routeId: string) => {\n    dispatch({ type: 'COMPLETE_ROUTE', payload: routeId })\n    stopLocationTracking()\n  }\n\n  const completeDelivery = (shipmentId: string) => {\n    dispatch({ type: 'COMPLETE_DELIVERY', payload: shipmentId })\n  }\n\n  const goOnline = () => {\n    dispatch({ type: 'SET_ONLINE', payload: true })\n    startLocationTracking()\n  }\n\n  const goOffline = () => {\n    dispatch({ type: 'SET_ONLINE', payload: false })\n    stopLocationTracking()\n  }\n\n  const contextValue: DriverContextType = {\n    state,\n    dispatch,\n    startLocationTracking,\n    stopLocationTracking,\n    updateDriverLocation,\n    startRoute,\n    completeRoute,\n    completeDelivery,\n    goOnline,\n    goOffline,\n  }\n\n  return <DriverContext.Provider value={contextValue}>{children}</DriverContext.Provider>\n}\n\n// =====================================================\n// HOOK\n// =====================================================\n\nexport function useDriver() {\n  const context = useContext(DriverContext)\n  if (context === undefined) {\n    throw new Error('useDriver must be used within a DriverProvider')\n  }\n  return context\n}\n"],"names":["DriverProvider","useDriver","initialState","driver","currentRoute","assignedRoutes","currentLocation","isTracking","isOnline","notifications","loading","error","driverReducer","state","action","type","payload","current_location","slice","find","r","id","map","route","status","DriverContext","createContext","undefined","children","dispatch","useReducer","data","session","useSession","useEffect","user","email","loadDriverData","response","fetch","json","routes","startLocationTracking","navigator","tryHighAccuracy","watchId","geolocation","watchPosition","position","location","lat","coords","latitude","lng","longitude","updateDriverLocation","console","warn","tryStandardAccuracy","enableHighAccuracy","timeout","maximumAge","window","driverLocationWatchId","stopLocationTracking","clearWatch","method","headers","body","JSON","stringify","startRoute","routeId","completeRoute","completeDelivery","shipmentId","goOnline","goOffline","contextValue","Provider","value","context","useContext","Error"],"mappings":"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"}