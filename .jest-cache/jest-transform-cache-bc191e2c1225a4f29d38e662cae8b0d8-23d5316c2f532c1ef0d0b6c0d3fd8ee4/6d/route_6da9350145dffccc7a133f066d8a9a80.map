{"version":3,"names":["cov_2dbo0ctxbp","actualCoverage","s","GET","f","POST","runtime","request","body","json","url","content","keywords","b","type","console","log","result","_server","NextResponse","success","error","status","contentAnalysis","_seooptimizationtools","enhancedSEOOptimizationTools","analyzeContent","titleSuggestion","length","optimizeTitle","descriptionSuggestion","optimizeMetaDescription","suggestions","title","description","keywordSuggestions","Promise","all","map","keyword","suggestKeywords","competitorAnalysis","analyzeCompetitors","flat","metrics","_seoanalyticsmanager","seoAnalyticsManager","collectMetrics","overallScore","calculateOverallSEOScore","technicalMetrics","technicalSEO","coreWebVitals","indexationStatus","pageData","path","URL","pathname","optimizedMetadata","_dynamicseomanager","dynamicSEOManager","generatePageMetadata","currentMetadata","recommendations","timestamp","Date","toISOString","message","Error","searchParams","period","get","includeKeywords","includeAlerts","report","generateSEOReport","response","summary","alerts"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\seo\\analyze\\route.ts"],"sourcesContent":["// Configuraci√≥n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - SEO ANALYSIS API\r\n// API para an√°lisis y optimizaci√≥n SEO\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { enhancedSEOOptimizationTools } from '@/lib/seo/seo-optimization-tools';\r\nimport { seoAnalyticsManager } from '@/lib/seo/seo-analytics-manager';\r\nimport { dynamicSEOManager } from '@/lib/seo/dynamic-seo-manager';\r\n\r\n// POST - Analizar contenido de una URL\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { url, content, keywords = [], type = 'content' } = body;\r\n\r\n    console.log(`üîç Analizando ${type} para URL: ${url}`);\r\n\r\n    let result: {\r\n      contentAnalysis?: any;\r\n      suggestions?: any;\r\n      keywordSuggestions?: string[];\r\n      competitorAnalysis?: any;\r\n      technicalMetrics?: any;\r\n      coreWebVitals?: any;\r\n      indexationStatus?: any;\r\n      overallScore?: number;\r\n      currentMetadata?: any;\r\n      optimizedMetadata?: any;\r\n      recommendations?: string[];\r\n    } = {};\r\n\r\n    switch (type) {\r\n      case 'content':\r\n        if (!content) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'Contenido HTML es requerido para an√°lisis de contenido'\r\n          }, { status: 400 });\r\n        }\r\n\r\n        // Analizar contenido\r\n        const contentAnalysis = enhancedSEOOptimizationTools.analyzeContent(content, keywords);\r\n\r\n        // Generar sugerencias de optimizaci√≥n\r\n        const titleSuggestion = keywords.length > 0 ?\r\n          enhancedSEOOptimizationTools.optimizeTitle('T√≠tulo actual', keywords[0]) : null;\r\n\r\n        const descriptionSuggestion = keywords.length > 0 ?\r\n          enhancedSEOOptimizationTools.optimizeMetaDescription('Descripci√≥n actual', keywords[0]) : null;\r\n\r\n        result = {\r\n          contentAnalysis,\r\n          suggestions: {\r\n            title: titleSuggestion,\r\n            description: descriptionSuggestion\r\n          }\r\n        };\r\n        break;\r\n\r\n      case 'keywords':\r\n        if (!keywords.length) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'Al menos una keyword es requerida para an√°lisis de keywords'\r\n          }, { status: 400 });\r\n        }\r\n\r\n        // Analizar keywords\r\n        const keywordSuggestions = await Promise.all(\r\n          keywords.map((keyword: string) => enhancedSEOOptimizationTools.suggestKeywords(keyword))\r\n        );\r\n\r\n        // An√°lisis de competidores\r\n        const competitorAnalysis = await enhancedSEOOptimizationTools.analyzeCompetitors(keywords);\r\n\r\n        result = {\r\n          keywordSuggestions: keywordSuggestions.flat(),\r\n          competitorAnalysis\r\n        };\r\n        break;\r\n\r\n      case 'technical':\r\n        // Obtener m√©tricas t√©cnicas\r\n        const metrics = await seoAnalyticsManager.collectMetrics();\r\n        const overallScore = seoAnalyticsManager.calculateOverallSEOScore(metrics);\r\n\r\n        result = {\r\n          technicalMetrics: metrics.technicalSEO,\r\n          coreWebVitals: metrics.coreWebVitals,\r\n          indexationStatus: metrics.indexationStatus,\r\n          overallScore\r\n        };\r\n        break;\r\n\r\n      case 'metadata':\r\n        if (!url) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'URL es requerida para an√°lisis de metadata'\r\n          }, { status: 400 });\r\n        }\r\n\r\n        // Simular datos de p√°gina para generar metadata optimizada\r\n        const pageData = {\r\n          path: new URL(url).pathname,\r\n          title: 'T√≠tulo de la p√°gina',\r\n          description: 'Descripci√≥n de la p√°gina',\r\n          type: 'page' as const\r\n        };\r\n\r\n        const optimizedMetadata = dynamicSEOManager.generatePageMetadata(pageData);\r\n\r\n        result = {\r\n          currentMetadata: {\r\n            title: 'T√≠tulo actual',\r\n            description: 'Descripci√≥n actual'\r\n          },\r\n          optimizedMetadata,\r\n          recommendations: [\r\n            'Optimizar t√≠tulo para incluir keyword principal',\r\n            'Mejorar descripci√≥n para aumentar CTR',\r\n            'Agregar Open Graph tags',\r\n            'Implementar structured data'\r\n          ]\r\n        };\r\n        break;\r\n\r\n      default:\r\n        return NextResponse.json({\r\n          success: false,\r\n          error: `Tipo de an√°lisis no soportado: ${type}`\r\n        }, { status: 400 });\r\n    }\r\n\r\n    console.log(`‚úÖ An√°lisis ${type} completado`);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      type,\r\n      url,\r\n      timestamp: new Date().toISOString(),\r\n      ...result\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('‚ùå Error en an√°lisis SEO:', error);\r\n\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error interno del servidor',\r\n      message: error instanceof Error ? error.message : 'Error desconocido'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// GET - Obtener m√©tricas SEO generales\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const period = searchParams.get('period') || 'weekly';\r\n    const includeKeywords = searchParams.get('keywords') === 'true';\r\n    const includeAlerts = searchParams.get('alerts') === 'true';\r\n\r\n    console.log(`üìä Obteniendo m√©tricas SEO (per√≠odo: ${period})`);\r\n\r\n    // Generar reporte SEO\r\n    const report = await seoAnalyticsManager.generateSEOReport(\r\n      period as 'daily' | 'weekly' | 'monthly'\r\n    );\r\n\r\n    // Filtrar datos seg√∫n par√°metros\r\n    const response: {\r\n      success: boolean;\r\n      period: string;\r\n      metrics: any;\r\n      summary: any;\r\n      timestamp: string;\r\n      keywords?: any;\r\n      alerts?: any;\r\n    } = {\r\n      success: true,\r\n      period,\r\n      metrics: report.metrics,\r\n      summary: report.summary,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    if (includeKeywords) {\r\n      response.keywords = report.keywords;\r\n    }\r\n\r\n    if (includeAlerts) {\r\n      response.alerts = report.alerts;\r\n    }\r\n\r\n    console.log('‚úÖ M√©tricas SEO obtenidas exitosamente');\r\n\r\n    return NextResponse.json(response);\r\n\r\n  } catch (error) {\r\n    console.error('‚ùå Error obteniendo m√©tricas SEO:', error);\r\n\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error obteniendo m√©tricas SEO',\r\n      message: error instanceof Error ? error.message : 'Error desconocido'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}