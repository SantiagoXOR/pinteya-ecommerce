2caf68d81b3f5fa8aaa42349b6ced309
// ===================================
// PINTEYA E-COMMERCE - API MONITORING SYSTEM
// Sistema de monitoreo para detectar problemas de renderizado y API
// ===================================
"use strict";

/* istanbul ignore next */
function cov_bdf3v228n() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\utils\\api-monitoring.ts";
  var hash = "8a31c954ab8d95da03016a5ca6158697a43bb6c7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\utils\\api-monitoring.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "2": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "3": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 28,
          column: 3
        }
      },
      "4": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 29
        }
      },
      "5": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 36
        }
      },
      "6": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 30
        }
      },
      "7": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 32
        }
      },
      "8": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 25
        }
      },
      "9": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 34
        }
      },
      "10": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 50
        }
      },
      "11": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "12": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 71
        }
      },
      "13": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 45
        }
      },
      "14": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 82
        }
      },
      "15": {
        start: {
          line: 47,
          column: 22
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "16": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 32
        }
      },
      "17": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "18": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 65,
          column: 15
        }
      },
      "19": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 69,
          column: 13
        }
      },
      "20": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 46
        }
      },
      "21": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "22": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 50
        }
      },
      "23": {
        start: {
          line: 79,
          column: 22
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "24": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 41
        }
      },
      "25": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 94,
          column: 11
        }
      },
      "26": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "27": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 67
        }
      },
      "28": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "29": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 109,
          column: 15
        }
      },
      "30": {
        start: {
          line: 121,
          column: 31
        },
        end: {
          line: 121,
          column: 80
        }
      },
      "31": {
        start: {
          line: 121,
          column: 55
        },
        end: {
          line: 121,
          column: 72
        }
      },
      "32": {
        start: {
          line: 122,
          column: 33
        },
        end: {
          line: 122,
          column: 95
        }
      },
      "33": {
        start: {
          line: 122,
          column: 62
        },
        end: {
          line: 122,
          column: 91
        }
      },
      "34": {
        start: {
          line: 123,
          column: 35
        },
        end: {
          line: 123,
          column: 101
        }
      },
      "35": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 131,
          column: 10
        }
      },
      "36": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 25
        }
      },
      "37": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 34
        }
      },
      "38": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 50
        }
      },
      "39": {
        start: {
          line: 143,
          column: 21
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "40": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 45
        }
      },
      "41": {
        start: {
          line: 153,
          column: 22
        },
        end: {
          line: 153,
          column: 56
        }
      },
      "42": {
        start: {
          line: 155,
          column: 4
        },
        end: {
          line: 161,
          column: 6
        }
      },
      "43": {
        start: {
          line: 164,
          column: 26
        },
        end: {
          line: 164,
          column: 91
        }
      },
      "44": {
        start: {
          line: 165,
          column: 24
        },
        end: {
          line: 165,
          column: 79
        }
      },
      "45": {
        start: {
          line: 166,
          column: 4
        },
        end: {
          line: 168,
          column: 5
        }
      },
      "46": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 81
        }
      },
      "47": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 192,
          column: 6
        }
      },
      "48": {
        start: {
          line: 172,
          column: 23
        },
        end: {
          line: 172,
          column: 39
        }
      },
      "49": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 190,
          column: 10
        }
      },
      "50": {
        start: {
          line: 174,
          column: 30
        },
        end: {
          line: 174,
          column: 40
        }
      },
      "51": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 189,
          column: 13
        }
      },
      "52": {
        start: {
          line: 176,
          column: 31
        },
        end: {
          line: 176,
          column: 61
        }
      },
      "53": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 183,
          column: 17
        }
      },
      "54": {
        start: {
          line: 179,
          column: 20
        },
        end: {
          line: 182,
          column: 21
        }
      },
      "55": {
        start: {
          line: 180,
          column: 41
        },
        end: {
          line: 180,
          column: 47
        }
      },
      "56": {
        start: {
          line: 181,
          column: 24
        },
        end: {
          line: 181,
          column: 105
        }
      },
      "57": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 184,
          column: 30
        }
      },
      "58": {
        start: {
          line: 186,
          column: 33
        },
        end: {
          line: 186,
          column: 55
        }
      },
      "59": {
        start: {
          line: 187,
          column: 16
        },
        end: {
          line: 187,
          column: 93
        }
      },
      "60": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 188,
          column: 28
        }
      },
      "61": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 26
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 16
          }
        },
        loc: {
          start: {
            line: 9,
            column: 30
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 25
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 32
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 26
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 28
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 17
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 25
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 35
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        loc: {
          start: {
            line: 41,
            column: 24
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 41
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 46,
            column: 6
          },
          end: {
            line: 46,
            column: 7
          }
        },
        loc: {
          start: {
            line: 46,
            column: 65
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 46
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 78,
            column: 6
          },
          end: {
            line: 78,
            column: 7
          }
        },
        loc: {
          start: {
            line: 78,
            column: 98
          },
          end: {
            line: 99,
            column: 5
          }
        },
        line: 78
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 102,
            column: 6
          },
          end: {
            line: 102,
            column: 7
          }
        },
        loc: {
          start: {
            line: 102,
            column: 31
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 102
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 120,
            column: 6
          },
          end: {
            line: 120,
            column: 7
          }
        },
        loc: {
          start: {
            line: 120,
            column: 27
          },
          end: {
            line: 132,
            column: 5
          }
        },
        line: 120
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 121,
            column: 50
          },
          end: {
            line: 121,
            column: 51
          }
        },
        loc: {
          start: {
            line: 121,
            column: 55
          },
          end: {
            line: 121,
            column: 72
          }
        },
        line: 121
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 122,
            column: 52
          },
          end: {
            line: 122,
            column: 53
          }
        },
        loc: {
          start: {
            line: 122,
            column: 62
          },
          end: {
            line: 122,
            column: 91
          }
        },
        line: 122
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 135,
            column: 6
          },
          end: {
            line: 135,
            column: 7
          }
        },
        loc: {
          start: {
            line: 135,
            column: 28
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 135
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 142,
            column: 6
          },
          end: {
            line: 142,
            column: 7
          }
        },
        loc: {
          start: {
            line: 142,
            column: 29
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 142
      },
      "16": {
        name: "useApiMonitoring",
        decl: {
          start: {
            line: 154,
            column: 9
          },
          end: {
            line: 154,
            column: 25
          }
        },
        loc: {
          start: {
            line: 154,
            column: 28
          },
          end: {
            line: 162,
            column: 1
          }
        },
        line: 154
      },
      "17": {
        name: "detectApiDiscrepancy",
        decl: {
          start: {
            line: 163,
            column: 9
          },
          end: {
            line: 163,
            column: 29
          }
        },
        loc: {
          start: {
            line: 163,
            column: 68
          },
          end: {
            line: 169,
            column: 1
          }
        },
        line: 163
      },
      "18": {
        name: "monitorApiCall",
        decl: {
          start: {
            line: 170,
            column: 9
          },
          end: {
            line: 170,
            column: 23
          }
        },
        loc: {
          start: {
            line: 170,
            column: 34
          },
          end: {
            line: 193,
            column: 1
          }
        },
        line: 170
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 171,
            column: 11
          },
          end: {
            line: 171,
            column: 12
          }
        },
        loc: {
          start: {
            line: 171,
            column: 54
          },
          end: {
            line: 192,
            column: 5
          }
        },
        line: 171
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 173,
            column: 27
          },
          end: {
            line: 173,
            column: 28
          }
        },
        loc: {
          start: {
            line: 173,
            column: 51
          },
          end: {
            line: 190,
            column: 9
          }
        },
        line: 173
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "1": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "2": {
        loc: {
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "3": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "4": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "5": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "6": {
        loc: {
          start: {
            line: 123,
            column: 35
          },
          end: {
            line: 123,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 123,
            column: 60
          },
          end: {
            line: 123,
            column: 97
          }
        }, {
          start: {
            line: 123,
            column: 100
          },
          end: {
            line: 123,
            column: 101
          }
        }],
        line: 123
      },
      "7": {
        loc: {
          start: {
            line: 164,
            column: 26
          },
          end: {
            line: 164,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 26
          },
          end: {
            line: 164,
            column: 43
          }
        }, {
          start: {
            line: 164,
            column: 47
          },
          end: {
            line: 164,
            column: 64
          }
        }, {
          start: {
            line: 164,
            column: 68
          },
          end: {
            line: 164,
            column: 86
          }
        }, {
          start: {
            line: 164,
            column: 90
          },
          end: {
            line: 164,
            column: 91
          }
        }],
        line: 164
      },
      "8": {
        loc: {
          start: {
            line: 165,
            column: 24
          },
          end: {
            line: 165,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 55
          },
          end: {
            line: 165,
            column: 75
          }
        }, {
          start: {
            line: 165,
            column: 78
          },
          end: {
            line: 165,
            column: 79
          }
        }],
        line: 165
      },
      "9": {
        loc: {
          start: {
            line: 166,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "10": {
        loc: {
          start: {
            line: 178,
            column: 16
          },
          end: {
            line: 183,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 16
          },
          end: {
            line: 183,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "11": {
        loc: {
          start: {
            line: 178,
            column: 20
          },
          end: {
            line: 178,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 20
          },
          end: {
            line: 178,
            column: 26
          }
        }, {
          start: {
            line: 178,
            column: 30
          },
          end: {
            line: 178,
            column: 56
          }
        }],
        line: 178
      },
      "12": {
        loc: {
          start: {
            line: 179,
            column: 20
          },
          end: {
            line: 182,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 20
          },
          end: {
            line: 182,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "13": {
        loc: {
          start: {
            line: 179,
            column: 24
          },
          end: {
            line: 179,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 24
          },
          end: {
            line: 179,
            column: 40
          }
        }, {
          start: {
            line: 179,
            column: 44
          },
          end: {
            line: 179,
            column: 71
          }
        }],
        line: 179
      },
      "14": {
        loc: {
          start: {
            line: 181,
            column: 72
          },
          end: {
            line: 181,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 181,
            column: 72
          },
          end: {
            line: 181,
            column: 83
          }
        }, {
          start: {
            line: 181,
            column: 87
          },
          end: {
            line: 181,
            column: 97
          }
        }, {
          start: {
            line: 181,
            column: 101
          },
          end: {
            line: 181,
            column: 103
          }
        }],
        line: 181
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\utils\\api-monitoring.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - API MONITORING SYSTEM\r\n// Sistema de monitoreo para detectar problemas de renderizado y API\r\n// ===================================\r\n\r\ninterface ApiMonitoringEvent {\r\n  timestamp: string;\r\n  endpoint: string;\r\n  expectedCount: number;\r\n  actualCount: number;\r\n  discrepancy: number;\r\n  userAgent: string;\r\n  sessionId: string;\r\n}\r\n\r\ninterface RenderingIssue {\r\n  timestamp: string;\r\n  component: string;\r\n  expectedItems: number;\r\n  renderedItems: number;\r\n  filterCriteria?: Record<string, unknown>;\r\n  errorDetails?: string;\r\n}\r\n\r\nclass ApiMonitoringService {\r\n  private static instance: ApiMonitoringService;\r\n  private events: ApiMonitoringEvent[] = [];\r\n  private renderingIssues: RenderingIssue[] = [];\r\n  private sessionId: string;\r\n\r\n  constructor() {\r\n    this.sessionId = this.generateSessionId();\r\n  }\r\n\r\n  static getInstance(): ApiMonitoringService {\r\n    if (!ApiMonitoringService.instance) {\r\n      ApiMonitoringService.instance = new ApiMonitoringService();\r\n    }\r\n    return ApiMonitoringService.instance;\r\n  }\r\n\r\n  private generateSessionId(): string {\r\n    return `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  /**\r\n   * Registra una discrepancia entre datos de API y renderizado\r\n   */\r\n  recordApiDiscrepancy(\r\n    endpoint: string,\r\n    expectedCount: number,\r\n    actualCount: number\r\n  ): void {\r\n    const event: ApiMonitoringEvent = {\r\n      timestamp: new Date().toISOString(),\r\n      endpoint,\r\n      expectedCount,\r\n      actualCount,\r\n      discrepancy: expectedCount - actualCount,\r\n      userAgent: navigator.userAgent,\r\n      sessionId: this.sessionId\r\n    };\r\n\r\n    this.events.push(event);\r\n    \r\n    // Log cr\xEDtico si hay discrepancia significativa\r\n    if (event.discrepancy > 0) {\r\n      console.error('\uD83D\uDEA8 API Discrepancy Detected:', {\r\n        endpoint: event.endpoint,\r\n        expected: event.expectedCount,\r\n        actual: event.actualCount,\r\n        lost: event.discrepancy,\r\n        percentage: ((event.discrepancy / event.expectedCount) * 100).toFixed(2) + '%'\r\n      });\r\n      \r\n      // Enviar alerta si la discrepancia es mayor al 20%\r\n      if (event.discrepancy / event.expectedCount > 0.2) {\r\n        this.sendCriticalAlert(event);\r\n      }\r\n    }\r\n\r\n    // Mantener solo los \xFAltimos 100 eventos\r\n    if (this.events.length > 100) {\r\n      this.events = this.events.slice(-100);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registra un problema de renderizado\r\n   */\r\n  recordRenderingIssue(\r\n    component: string,\r\n    expectedItems: number,\r\n    renderedItems: number,\r\n    filterCriteria?: Record<string, unknown>,\r\n    errorDetails?: string\r\n  ): void {\r\n    const issue: RenderingIssue = {\r\n      timestamp: new Date().toISOString(),\r\n      component,\r\n      expectedItems,\r\n      renderedItems,\r\n      filterCriteria,\r\n      errorDetails\r\n    };\r\n\r\n    this.renderingIssues.push(issue);\r\n\r\n    console.warn('\u26A0\uFE0F Rendering Issue Detected:', {\r\n      component: issue.component,\r\n      expected: issue.expectedItems,\r\n      rendered: issue.renderedItems,\r\n      filters: issue.filterCriteria,\r\n      error: issue.errorDetails\r\n    });\r\n\r\n    // Mantener solo los \xFAltimos 50 problemas\r\n    if (this.renderingIssues.length > 50) {\r\n      this.renderingIssues = this.renderingIssues.slice(-50);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Env\xEDa una alerta cr\xEDtica (en producci\xF3n se enviar\xEDa a un servicio de monitoreo)\r\n   */\r\n  private sendCriticalAlert(event: ApiMonitoringEvent): void {\r\n    // En desarrollo, solo log\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.error('\uD83D\uDEA8 CRITICAL ALERT:', {\r\n        message: 'Significant data loss detected',\r\n        event,\r\n        recommendation: 'Check API validation logic and data filtering'\r\n      });\r\n      \r\n    }\r\n\r\n    // En producci\xF3n, enviar a servicio de monitoreo\r\n    // fetch('/api/monitoring/alerts', {\r\n    //   method: 'POST',\r\n    //   headers: { 'Content-Type': 'application/json' },\r\n    //   body: JSON.stringify({ type: 'api_discrepancy', event })\r\n    // }).catch(console.error);\r\n  }\r\n\r\n  /**\r\n   * Obtiene estad\xEDsticas de monitoreo\r\n   */\r\n  getMonitoringStats(): {\r\n    totalEvents: number;\r\n    totalIssues: number;\r\n    criticalEvents: number;\r\n    averageDiscrepancy: number;\r\n    recentEvents: ApiMonitoringEvent[];\r\n    recentIssues: RenderingIssue[];\r\n  } {\r\n    const criticalEvents = this.events.filter(e => e.discrepancy > 0).length;\r\n    const totalDiscrepancy = this.events.reduce((sum, e) => sum + Math.abs(e.discrepancy), 0);\r\n    const averageDiscrepancy = this.events.length > 0 ? totalDiscrepancy / this.events.length : 0;\r\n\r\n    return {\r\n      totalEvents: this.events.length,\r\n      totalIssues: this.renderingIssues.length,\r\n      criticalEvents,\r\n      averageDiscrepancy,\r\n      recentEvents: this.events.slice(-10),\r\n      recentIssues: this.renderingIssues.slice(-10)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Limpia los datos de monitoreo\r\n   */\r\n  clearMonitoringData(): void {\r\n    this.events = [];\r\n    this.renderingIssues = [];\r\n    console.log('\uD83E\uDDF9 Monitoring data cleared');\r\n  }\r\n\r\n  /**\r\n   * Exporta datos de monitoreo para an\xE1lisis\r\n   */\r\n  exportMonitoringData(): string {\r\n    const data = {\r\n      sessionId: this.sessionId,\r\n      exportTimestamp: new Date().toISOString(),\r\n      events: this.events,\r\n      renderingIssues: this.renderingIssues,\r\n      stats: this.getMonitoringStats()\r\n    };\r\n\r\n    return JSON.stringify(data, null, 2);\r\n  }\r\n}\r\n\r\n// Instancia singleton\r\nexport const apiMonitoring = ApiMonitoringService.getInstance();\r\n\r\n// Hook para usar el monitoreo en componentes React\r\nexport function useApiMonitoring() {\r\n  return {\r\n    recordDiscrepancy: apiMonitoring.recordApiDiscrepancy.bind(apiMonitoring),\r\n    recordRenderingIssue: apiMonitoring.recordRenderingIssue.bind(apiMonitoring),\r\n    getStats: apiMonitoring.getMonitoringStats.bind(apiMonitoring),\r\n    clearData: apiMonitoring.clearMonitoringData.bind(apiMonitoring),\r\n    exportData: apiMonitoring.exportMonitoringData.bind(apiMonitoring)\r\n  };\r\n}\r\n\r\n// Utilidad para detectar autom\xE1ticamente discrepancias\r\nexport function detectApiDiscrepancy(\r\n  endpoint: string,\r\n  apiResponse: { total?: number; count?: number; length?: number },\r\n  renderedItems: unknown[]\r\n): void {\r\n  const expectedCount = apiResponse.total || apiResponse.count || apiResponse.length || 0;\r\n  const actualCount = Array.isArray(renderedItems) ? renderedItems.length : 0;\r\n  \r\n  if (expectedCount !== actualCount) {\r\n    apiMonitoring.recordApiDiscrepancy(endpoint, expectedCount, actualCount);\r\n  }\r\n}\r\n\r\n// Decorator para monitorear autom\xE1ticamente funciones de API\r\nexport function monitorApiCall(endpoint: string) {\r\n  return function (target: unknown, propertyName: string, descriptor: PropertyDescriptor) {\r\n    const method = descriptor.value;\r\n    \r\n    descriptor.value = async function (...args: unknown[]) {\r\n      const startTime = Date.now();\r\n      \r\n      try {\r\n        const result = await method.apply(this, args);\r\n        \r\n        // Si el resultado tiene datos paginados, verificar discrepancias\r\n        if (result && typeof result === 'object') {\r\n          if ('data' in result && 'pagination' in result.data) {\r\n            const { data } = result;\r\n            detectApiDiscrepancy(endpoint, data.pagination, data.orders || data.items || []);\r\n          }\r\n        }\r\n        \r\n        return result;\r\n      } catch (error) {\r\n        const duration = Date.now() - startTime;\r\n        console.error(`API call failed for ${endpoint} after ${duration}ms:`, error);\r\n        throw error;\r\n      }\r\n    };\r\n    \r\n    return descriptor;\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["apiMonitoring", "detectApiDiscrepancy", "monitorApiCall", "useApiMonitoring", "ApiMonitoringService", "events", "renderingIssues", "sessionId", "generateSessionId", "getInstance", "instance", "Date", "now", "Math", "random", "toString", "substr", "recordApiDiscrepancy", "endpoint", "expectedCount", "actualCount", "event", "timestamp", "toISOString", "discrepancy", "userAgent", "navigator", "push", "console", "error", "expected", "actual", "lost", "percentage", "toFixed", "sendCriticalAlert", "length", "slice", "recordRenderingIssue", "component", "expectedItems", "renderedItems", "filterCriteria", "errorDetails", "issue", "warn", "rendered", "filters", "process", "env", "NODE_ENV", "message", "recommendation", "getMonitoringStats", "criticalEvents", "filter", "e", "totalDiscrepancy", "reduce", "sum", "abs", "averageDiscrepancy", "totalEvents", "totalIssues", "recentEvents", "recentIssues", "clearMonitoringData", "log", "exportMonitoringData", "data", "exportTimestamp", "stats", "JSON", "stringify", "recordDiscrepancy", "bind", "getStats", "clearData", "exportData", "apiResponse", "total", "count", "Array", "isArray", "target", "propertyName", "descriptor", "method", "value", "args", "startTime", "result", "apply", "pagination", "orders", "items", "duration"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8a31c954ab8d95da03016a5ca6158697a43bb6c7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_bdf3v228n = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_bdf3v228n();
cov_bdf3v228n().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_bdf3v228n().f[0]++;
  cov_bdf3v228n().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_bdf3v228n().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_bdf3v228n().s[3]++;
_export(exports, {
  get apiMonitoring() {
    /* istanbul ignore next */
    cov_bdf3v228n().f[1]++;
    cov_bdf3v228n().s[4]++;
    return apiMonitoring;
  },
  get detectApiDiscrepancy() {
    /* istanbul ignore next */
    cov_bdf3v228n().f[2]++;
    cov_bdf3v228n().s[5]++;
    return detectApiDiscrepancy;
  },
  get monitorApiCall() {
    /* istanbul ignore next */
    cov_bdf3v228n().f[3]++;
    cov_bdf3v228n().s[6]++;
    return monitorApiCall;
  },
  get useApiMonitoring() {
    /* istanbul ignore next */
    cov_bdf3v228n().f[4]++;
    cov_bdf3v228n().s[7]++;
    return useApiMonitoring;
  }
});
class ApiMonitoringService {
  constructor() {
    /* istanbul ignore next */
    cov_bdf3v228n().f[5]++;
    cov_bdf3v228n().s[8]++;
    this.events = [];
    /* istanbul ignore next */
    cov_bdf3v228n().s[9]++;
    this.renderingIssues = [];
    /* istanbul ignore next */
    cov_bdf3v228n().s[10]++;
    this.sessionId = this.generateSessionId();
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_bdf3v228n().f[6]++;
    cov_bdf3v228n().s[11]++;
    if (!ApiMonitoringService.instance) {
      /* istanbul ignore next */
      cov_bdf3v228n().b[0][0]++;
      cov_bdf3v228n().s[12]++;
      ApiMonitoringService.instance = new ApiMonitoringService();
    } else
    /* istanbul ignore next */
    {
      cov_bdf3v228n().b[0][1]++;
    }
    cov_bdf3v228n().s[13]++;
    return ApiMonitoringService.instance;
  }
  generateSessionId() {
    /* istanbul ignore next */
    cov_bdf3v228n().f[7]++;
    cov_bdf3v228n().s[14]++;
    return `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  /**
  * Registra una discrepancia entre datos de API y renderizado
  */
  recordApiDiscrepancy(endpoint, expectedCount, actualCount) {
    /* istanbul ignore next */
    cov_bdf3v228n().f[8]++;
    const event =
    /* istanbul ignore next */
    (cov_bdf3v228n().s[15]++, {
      timestamp: new Date().toISOString(),
      endpoint,
      expectedCount,
      actualCount,
      discrepancy: expectedCount - actualCount,
      userAgent: navigator.userAgent,
      sessionId: this.sessionId
    });
    /* istanbul ignore next */
    cov_bdf3v228n().s[16]++;
    this.events.push(event);
    // Log crítico si hay discrepancia significativa
    /* istanbul ignore next */
    cov_bdf3v228n().s[17]++;
    if (event.discrepancy > 0) {
      /* istanbul ignore next */
      cov_bdf3v228n().b[1][0]++;
      cov_bdf3v228n().s[18]++;
      console.error('🚨 API Discrepancy Detected:', {
        endpoint: event.endpoint,
        expected: event.expectedCount,
        actual: event.actualCount,
        lost: event.discrepancy,
        percentage: (event.discrepancy / event.expectedCount * 100).toFixed(2) + '%'
      });
      // Enviar alerta si la discrepancia es mayor al 20%
      /* istanbul ignore next */
      cov_bdf3v228n().s[19]++;
      if (event.discrepancy / event.expectedCount > 0.2) {
        /* istanbul ignore next */
        cov_bdf3v228n().b[2][0]++;
        cov_bdf3v228n().s[20]++;
        this.sendCriticalAlert(event);
      } else
      /* istanbul ignore next */
      {
        cov_bdf3v228n().b[2][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_bdf3v228n().b[1][1]++;
    }
    // Mantener solo los últimos 100 eventos
    cov_bdf3v228n().s[21]++;
    if (this.events.length > 100) {
      /* istanbul ignore next */
      cov_bdf3v228n().b[3][0]++;
      cov_bdf3v228n().s[22]++;
      this.events = this.events.slice(-100);
    } else
    /* istanbul ignore next */
    {
      cov_bdf3v228n().b[3][1]++;
    }
  }
  /**
  * Registra un problema de renderizado
  */
  recordRenderingIssue(component, expectedItems, renderedItems, filterCriteria, errorDetails) {
    /* istanbul ignore next */
    cov_bdf3v228n().f[9]++;
    const issue =
    /* istanbul ignore next */
    (cov_bdf3v228n().s[23]++, {
      timestamp: new Date().toISOString(),
      component,
      expectedItems,
      renderedItems,
      filterCriteria,
      errorDetails
    });
    /* istanbul ignore next */
    cov_bdf3v228n().s[24]++;
    this.renderingIssues.push(issue);
    /* istanbul ignore next */
    cov_bdf3v228n().s[25]++;
    console.warn('⚠️ Rendering Issue Detected:', {
      component: issue.component,
      expected: issue.expectedItems,
      rendered: issue.renderedItems,
      filters: issue.filterCriteria,
      error: issue.errorDetails
    });
    // Mantener solo los últimos 50 problemas
    /* istanbul ignore next */
    cov_bdf3v228n().s[26]++;
    if (this.renderingIssues.length > 50) {
      /* istanbul ignore next */
      cov_bdf3v228n().b[4][0]++;
      cov_bdf3v228n().s[27]++;
      this.renderingIssues = this.renderingIssues.slice(-50);
    } else
    /* istanbul ignore next */
    {
      cov_bdf3v228n().b[4][1]++;
    }
  }
  /**
  * Envía una alerta crítica (en producción se enviaría a un servicio de monitoreo)
  */
  sendCriticalAlert(event) {
    /* istanbul ignore next */
    cov_bdf3v228n().f[10]++;
    cov_bdf3v228n().s[28]++;
    // En desarrollo, solo log
    if (process.env.NODE_ENV === 'development') {
      /* istanbul ignore next */
      cov_bdf3v228n().b[5][0]++;
      cov_bdf3v228n().s[29]++;
      console.error('🚨 CRITICAL ALERT:', {
        message: 'Significant data loss detected',
        event,
        recommendation: 'Check API validation logic and data filtering'
      });
    } else
    /* istanbul ignore next */
    {
      cov_bdf3v228n().b[5][1]++;
    }
    // En producción, enviar a servicio de monitoreo
    // fetch('/api/monitoring/alerts', {
    //   method: 'POST',
    //   headers: { 'Content-Type': 'application/json' },
    //   body: JSON.stringify({ type: 'api_discrepancy', event })
    // }).catch(console.error);
  }
  /**
  * Obtiene estadísticas de monitoreo
  */
  getMonitoringStats() {
    /* istanbul ignore next */
    cov_bdf3v228n().f[11]++;
    const criticalEvents =
    /* istanbul ignore next */
    (cov_bdf3v228n().s[30]++, this.events.filter(e => {
      /* istanbul ignore next */
      cov_bdf3v228n().f[12]++;
      cov_bdf3v228n().s[31]++;
      return e.discrepancy > 0;
    }).length);
    const totalDiscrepancy =
    /* istanbul ignore next */
    (cov_bdf3v228n().s[32]++, this.events.reduce((sum, e) => {
      /* istanbul ignore next */
      cov_bdf3v228n().f[13]++;
      cov_bdf3v228n().s[33]++;
      return sum + Math.abs(e.discrepancy);
    }, 0));
    const averageDiscrepancy =
    /* istanbul ignore next */
    (cov_bdf3v228n().s[34]++, this.events.length > 0 ?
    /* istanbul ignore next */
    (cov_bdf3v228n().b[6][0]++, totalDiscrepancy / this.events.length) :
    /* istanbul ignore next */
    (cov_bdf3v228n().b[6][1]++, 0));
    /* istanbul ignore next */
    cov_bdf3v228n().s[35]++;
    return {
      totalEvents: this.events.length,
      totalIssues: this.renderingIssues.length,
      criticalEvents,
      averageDiscrepancy,
      recentEvents: this.events.slice(-10),
      recentIssues: this.renderingIssues.slice(-10)
    };
  }
  /**
  * Limpia los datos de monitoreo
  */
  clearMonitoringData() {
    /* istanbul ignore next */
    cov_bdf3v228n().f[14]++;
    cov_bdf3v228n().s[36]++;
    this.events = [];
    /* istanbul ignore next */
    cov_bdf3v228n().s[37]++;
    this.renderingIssues = [];
    /* istanbul ignore next */
    cov_bdf3v228n().s[38]++;
    console.log('🧹 Monitoring data cleared');
  }
  /**
  * Exporta datos de monitoreo para análisis
  */
  exportMonitoringData() {
    /* istanbul ignore next */
    cov_bdf3v228n().f[15]++;
    const data =
    /* istanbul ignore next */
    (cov_bdf3v228n().s[39]++, {
      sessionId: this.sessionId,
      exportTimestamp: new Date().toISOString(),
      events: this.events,
      renderingIssues: this.renderingIssues,
      stats: this.getMonitoringStats()
    });
    /* istanbul ignore next */
    cov_bdf3v228n().s[40]++;
    return JSON.stringify(data, null, 2);
  }
}
const apiMonitoring =
/* istanbul ignore next */
(cov_bdf3v228n().s[41]++, ApiMonitoringService.getInstance());
function useApiMonitoring() {
  /* istanbul ignore next */
  cov_bdf3v228n().f[16]++;
  cov_bdf3v228n().s[42]++;
  return {
    recordDiscrepancy: apiMonitoring.recordApiDiscrepancy.bind(apiMonitoring),
    recordRenderingIssue: apiMonitoring.recordRenderingIssue.bind(apiMonitoring),
    getStats: apiMonitoring.getMonitoringStats.bind(apiMonitoring),
    clearData: apiMonitoring.clearMonitoringData.bind(apiMonitoring),
    exportData: apiMonitoring.exportMonitoringData.bind(apiMonitoring)
  };
}
function detectApiDiscrepancy(endpoint, apiResponse, renderedItems) {
  /* istanbul ignore next */
  cov_bdf3v228n().f[17]++;
  const expectedCount =
  /* istanbul ignore next */
  (cov_bdf3v228n().s[43]++,
  /* istanbul ignore next */
  (cov_bdf3v228n().b[7][0]++, apiResponse.total) ||
  /* istanbul ignore next */
  (cov_bdf3v228n().b[7][1]++, apiResponse.count) ||
  /* istanbul ignore next */
  (cov_bdf3v228n().b[7][2]++, apiResponse.length) ||
  /* istanbul ignore next */
  (cov_bdf3v228n().b[7][3]++, 0));
  const actualCount =
  /* istanbul ignore next */
  (cov_bdf3v228n().s[44]++, Array.isArray(renderedItems) ?
  /* istanbul ignore next */
  (cov_bdf3v228n().b[8][0]++, renderedItems.length) :
  /* istanbul ignore next */
  (cov_bdf3v228n().b[8][1]++, 0));
  /* istanbul ignore next */
  cov_bdf3v228n().s[45]++;
  if (expectedCount !== actualCount) {
    /* istanbul ignore next */
    cov_bdf3v228n().b[9][0]++;
    cov_bdf3v228n().s[46]++;
    apiMonitoring.recordApiDiscrepancy(endpoint, expectedCount, actualCount);
  } else
  /* istanbul ignore next */
  {
    cov_bdf3v228n().b[9][1]++;
  }
}
function monitorApiCall(endpoint) {
  /* istanbul ignore next */
  cov_bdf3v228n().f[18]++;
  cov_bdf3v228n().s[47]++;
  return function (target, propertyName, descriptor) {
    /* istanbul ignore next */
    cov_bdf3v228n().f[19]++;
    const method =
    /* istanbul ignore next */
    (cov_bdf3v228n().s[48]++, descriptor.value);
    /* istanbul ignore next */
    cov_bdf3v228n().s[49]++;
    descriptor.value = async function (...args) {
      /* istanbul ignore next */
      cov_bdf3v228n().f[20]++;
      const startTime =
      /* istanbul ignore next */
      (cov_bdf3v228n().s[50]++, Date.now());
      /* istanbul ignore next */
      cov_bdf3v228n().s[51]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_bdf3v228n().s[52]++, await method.apply(this, args));
        // Si el resultado tiene datos paginados, verificar discrepancias
        /* istanbul ignore next */
        cov_bdf3v228n().s[53]++;
        if (
        /* istanbul ignore next */
        (cov_bdf3v228n().b[11][0]++, result) &&
        /* istanbul ignore next */
        (cov_bdf3v228n().b[11][1]++, typeof result === 'object')) {
          /* istanbul ignore next */
          cov_bdf3v228n().b[10][0]++;
          cov_bdf3v228n().s[54]++;
          if (
          /* istanbul ignore next */
          (cov_bdf3v228n().b[13][0]++, 'data' in result) &&
          /* istanbul ignore next */
          (cov_bdf3v228n().b[13][1]++, 'pagination' in result.data)) {
            /* istanbul ignore next */
            cov_bdf3v228n().b[12][0]++;
            const {
              data
            } =
            /* istanbul ignore next */
            (cov_bdf3v228n().s[55]++, result);
            /* istanbul ignore next */
            cov_bdf3v228n().s[56]++;
            detectApiDiscrepancy(endpoint, data.pagination,
            /* istanbul ignore next */
            (cov_bdf3v228n().b[14][0]++, data.orders) ||
            /* istanbul ignore next */
            (cov_bdf3v228n().b[14][1]++, data.items) ||
            /* istanbul ignore next */
            (cov_bdf3v228n().b[14][2]++, []));
          } else
          /* istanbul ignore next */
          {
            cov_bdf3v228n().b[12][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_bdf3v228n().b[10][1]++;
        }
        cov_bdf3v228n().s[57]++;
        return result;
      } catch (error) {
        const duration =
        /* istanbul ignore next */
        (cov_bdf3v228n().s[58]++, Date.now() - startTime);
        /* istanbul ignore next */
        cov_bdf3v228n().s[59]++;
        console.error(`API call failed for ${endpoint} after ${duration}ms:`, error);
        /* istanbul ignore next */
        cov_bdf3v228n().s[60]++;
        throw error;
      }
    };
    /* istanbul ignore next */
    cov_bdf3v228n().s[61]++;
    return descriptor;
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfYmRmM3YyMjhuIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiYXBpTW9uaXRvcmluZyIsImYiLCJkZXRlY3RBcGlEaXNjcmVwYW5jeSIsIm1vbml0b3JBcGlDYWxsIiwidXNlQXBpTW9uaXRvcmluZyIsIkFwaU1vbml0b3JpbmdTZXJ2aWNlIiwiY29uc3RydWN0b3IiLCJldmVudHMiLCJyZW5kZXJpbmdJc3N1ZXMiLCJzZXNzaW9uSWQiLCJnZW5lcmF0ZVNlc3Npb25JZCIsImdldEluc3RhbmNlIiwiaW5zdGFuY2UiLCJiIiwiRGF0ZSIsIm5vdyIsIk1hdGgiLCJyYW5kb20iLCJ0b1N0cmluZyIsInN1YnN0ciIsInJlY29yZEFwaURpc2NyZXBhbmN5IiwiZW5kcG9pbnQiLCJleHBlY3RlZENvdW50IiwiYWN0dWFsQ291bnQiLCJldmVudCIsInRpbWVzdGFtcCIsInRvSVNPU3RyaW5nIiwiZGlzY3JlcGFuY3kiLCJ1c2VyQWdlbnQiLCJuYXZpZ2F0b3IiLCJwdXNoIiwiY29uc29sZSIsImVycm9yIiwiZXhwZWN0ZWQiLCJhY3R1YWwiLCJsb3N0IiwicGVyY2VudGFnZSIsInRvRml4ZWQiLCJzZW5kQ3JpdGljYWxBbGVydCIsImxlbmd0aCIsInNsaWNlIiwicmVjb3JkUmVuZGVyaW5nSXNzdWUiLCJjb21wb25lbnQiLCJleHBlY3RlZEl0ZW1zIiwicmVuZGVyZWRJdGVtcyIsImZpbHRlckNyaXRlcmlhIiwiZXJyb3JEZXRhaWxzIiwiaXNzdWUiLCJ3YXJuIiwicmVuZGVyZWQiLCJmaWx0ZXJzIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwibWVzc2FnZSIsInJlY29tbWVuZGF0aW9uIiwiZ2V0TW9uaXRvcmluZ1N0YXRzIiwiY3JpdGljYWxFdmVudHMiLCJmaWx0ZXIiLCJlIiwidG90YWxEaXNjcmVwYW5jeSIsInJlZHVjZSIsInN1bSIsImFicyIsImF2ZXJhZ2VEaXNjcmVwYW5jeSIsInRvdGFsRXZlbnRzIiwidG90YWxJc3N1ZXMiLCJyZWNlbnRFdmVudHMiLCJyZWNlbnRJc3N1ZXMiLCJjbGVhck1vbml0b3JpbmdEYXRhIiwibG9nIiwiZXhwb3J0TW9uaXRvcmluZ0RhdGEiLCJkYXRhIiwiZXhwb3J0VGltZXN0YW1wIiwic3RhdHMiLCJKU09OIiwic3RyaW5naWZ5IiwicmVjb3JkRGlzY3JlcGFuY3kiLCJiaW5kIiwiZ2V0U3RhdHMiLCJjbGVhckRhdGEiLCJleHBvcnREYXRhIiwiYXBpUmVzcG9uc2UiLCJ0b3RhbCIsImNvdW50IiwiQXJyYXkiLCJpc0FycmF5IiwidGFyZ2V0IiwicHJvcGVydHlOYW1lIiwiZGVzY3JpcHRvciIsIm1ldGhvZCIsInZhbHVlIiwiYXJncyIsInN0YXJ0VGltZSIsInJlc3VsdCIsImFwcGx5IiwicGFnaW5hdGlvbiIsIm9yZGVycyIsIml0ZW1zIiwiZHVyYXRpb24iXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXG1hcnRpXFxEZXNrdG9wXFxERVNBUlJPTExPU1dcXEJPSUxFUlBMQVRURSBFLUNPTU1FUkNFXFxzcmNcXHV0aWxzXFxhcGktbW9uaXRvcmluZy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyBQSU5URVlBIEUtQ09NTUVSQ0UgLSBBUEkgTU9OSVRPUklORyBTWVNURU1cclxuLy8gU2lzdGVtYSBkZSBtb25pdG9yZW8gcGFyYSBkZXRlY3RhciBwcm9ibGVtYXMgZGUgcmVuZGVyaXphZG8geSBBUElcclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbmludGVyZmFjZSBBcGlNb25pdG9yaW5nRXZlbnQge1xyXG4gIHRpbWVzdGFtcDogc3RyaW5nO1xyXG4gIGVuZHBvaW50OiBzdHJpbmc7XHJcbiAgZXhwZWN0ZWRDb3VudDogbnVtYmVyO1xyXG4gIGFjdHVhbENvdW50OiBudW1iZXI7XHJcbiAgZGlzY3JlcGFuY3k6IG51bWJlcjtcclxuICB1c2VyQWdlbnQ6IHN0cmluZztcclxuICBzZXNzaW9uSWQ6IHN0cmluZztcclxufVxyXG5cclxuaW50ZXJmYWNlIFJlbmRlcmluZ0lzc3VlIHtcclxuICB0aW1lc3RhbXA6IHN0cmluZztcclxuICBjb21wb25lbnQ6IHN0cmluZztcclxuICBleHBlY3RlZEl0ZW1zOiBudW1iZXI7XHJcbiAgcmVuZGVyZWRJdGVtczogbnVtYmVyO1xyXG4gIGZpbHRlckNyaXRlcmlhPzogUmVjb3JkPHN0cmluZywgdW5rbm93bj47XHJcbiAgZXJyb3JEZXRhaWxzPzogc3RyaW5nO1xyXG59XHJcblxyXG5jbGFzcyBBcGlNb25pdG9yaW5nU2VydmljZSB7XHJcbiAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IEFwaU1vbml0b3JpbmdTZXJ2aWNlO1xyXG4gIHByaXZhdGUgZXZlbnRzOiBBcGlNb25pdG9yaW5nRXZlbnRbXSA9IFtdO1xyXG4gIHByaXZhdGUgcmVuZGVyaW5nSXNzdWVzOiBSZW5kZXJpbmdJc3N1ZVtdID0gW107XHJcbiAgcHJpdmF0ZSBzZXNzaW9uSWQ6IHN0cmluZztcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICB0aGlzLnNlc3Npb25JZCA9IHRoaXMuZ2VuZXJhdGVTZXNzaW9uSWQoKTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBnZXRJbnN0YW5jZSgpOiBBcGlNb25pdG9yaW5nU2VydmljZSB7XHJcbiAgICBpZiAoIUFwaU1vbml0b3JpbmdTZXJ2aWNlLmluc3RhbmNlKSB7XHJcbiAgICAgIEFwaU1vbml0b3JpbmdTZXJ2aWNlLmluc3RhbmNlID0gbmV3IEFwaU1vbml0b3JpbmdTZXJ2aWNlKCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gQXBpTW9uaXRvcmluZ1NlcnZpY2UuaW5zdGFuY2U7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGdlbmVyYXRlU2Vzc2lvbklkKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gYHNlc3Npb25fJHtEYXRlLm5vdygpfV8ke01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCA5KX1gO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogUmVnaXN0cmEgdW5hIGRpc2NyZXBhbmNpYSBlbnRyZSBkYXRvcyBkZSBBUEkgeSByZW5kZXJpemFkb1xyXG4gICAqL1xyXG4gIHJlY29yZEFwaURpc2NyZXBhbmN5KFxyXG4gICAgZW5kcG9pbnQ6IHN0cmluZyxcclxuICAgIGV4cGVjdGVkQ291bnQ6IG51bWJlcixcclxuICAgIGFjdHVhbENvdW50OiBudW1iZXJcclxuICApOiB2b2lkIHtcclxuICAgIGNvbnN0IGV2ZW50OiBBcGlNb25pdG9yaW5nRXZlbnQgPSB7XHJcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxyXG4gICAgICBlbmRwb2ludCxcclxuICAgICAgZXhwZWN0ZWRDb3VudCxcclxuICAgICAgYWN0dWFsQ291bnQsXHJcbiAgICAgIGRpc2NyZXBhbmN5OiBleHBlY3RlZENvdW50IC0gYWN0dWFsQ291bnQsXHJcbiAgICAgIHVzZXJBZ2VudDogbmF2aWdhdG9yLnVzZXJBZ2VudCxcclxuICAgICAgc2Vzc2lvbklkOiB0aGlzLnNlc3Npb25JZFxyXG4gICAgfTtcclxuXHJcbiAgICB0aGlzLmV2ZW50cy5wdXNoKGV2ZW50KTtcclxuICAgIFxyXG4gICAgLy8gTG9nIGNyw610aWNvIHNpIGhheSBkaXNjcmVwYW5jaWEgc2lnbmlmaWNhdGl2YVxyXG4gICAgaWYgKGV2ZW50LmRpc2NyZXBhbmN5ID4gMCkge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCfwn5qoIEFQSSBEaXNjcmVwYW5jeSBEZXRlY3RlZDonLCB7XHJcbiAgICAgICAgZW5kcG9pbnQ6IGV2ZW50LmVuZHBvaW50LFxyXG4gICAgICAgIGV4cGVjdGVkOiBldmVudC5leHBlY3RlZENvdW50LFxyXG4gICAgICAgIGFjdHVhbDogZXZlbnQuYWN0dWFsQ291bnQsXHJcbiAgICAgICAgbG9zdDogZXZlbnQuZGlzY3JlcGFuY3ksXHJcbiAgICAgICAgcGVyY2VudGFnZTogKChldmVudC5kaXNjcmVwYW5jeSAvIGV2ZW50LmV4cGVjdGVkQ291bnQpICogMTAwKS50b0ZpeGVkKDIpICsgJyUnXHJcbiAgICAgIH0pO1xyXG4gICAgICBcclxuICAgICAgLy8gRW52aWFyIGFsZXJ0YSBzaSBsYSBkaXNjcmVwYW5jaWEgZXMgbWF5b3IgYWwgMjAlXHJcbiAgICAgIGlmIChldmVudC5kaXNjcmVwYW5jeSAvIGV2ZW50LmV4cGVjdGVkQ291bnQgPiAwLjIpIHtcclxuICAgICAgICB0aGlzLnNlbmRDcml0aWNhbEFsZXJ0KGV2ZW50KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIE1hbnRlbmVyIHNvbG8gbG9zIMO6bHRpbW9zIDEwMCBldmVudG9zXHJcbiAgICBpZiAodGhpcy5ldmVudHMubGVuZ3RoID4gMTAwKSB7XHJcbiAgICAgIHRoaXMuZXZlbnRzID0gdGhpcy5ldmVudHMuc2xpY2UoLTEwMCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZWdpc3RyYSB1biBwcm9ibGVtYSBkZSByZW5kZXJpemFkb1xyXG4gICAqL1xyXG4gIHJlY29yZFJlbmRlcmluZ0lzc3VlKFxyXG4gICAgY29tcG9uZW50OiBzdHJpbmcsXHJcbiAgICBleHBlY3RlZEl0ZW1zOiBudW1iZXIsXHJcbiAgICByZW5kZXJlZEl0ZW1zOiBudW1iZXIsXHJcbiAgICBmaWx0ZXJDcml0ZXJpYT86IFJlY29yZDxzdHJpbmcsIHVua25vd24+LFxyXG4gICAgZXJyb3JEZXRhaWxzPzogc3RyaW5nXHJcbiAgKTogdm9pZCB7XHJcbiAgICBjb25zdCBpc3N1ZTogUmVuZGVyaW5nSXNzdWUgPSB7XHJcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxyXG4gICAgICBjb21wb25lbnQsXHJcbiAgICAgIGV4cGVjdGVkSXRlbXMsXHJcbiAgICAgIHJlbmRlcmVkSXRlbXMsXHJcbiAgICAgIGZpbHRlckNyaXRlcmlhLFxyXG4gICAgICBlcnJvckRldGFpbHNcclxuICAgIH07XHJcblxyXG4gICAgdGhpcy5yZW5kZXJpbmdJc3N1ZXMucHVzaChpc3N1ZSk7XHJcblxyXG4gICAgY29uc29sZS53YXJuKCfimqDvuI8gUmVuZGVyaW5nIElzc3VlIERldGVjdGVkOicsIHtcclxuICAgICAgY29tcG9uZW50OiBpc3N1ZS5jb21wb25lbnQsXHJcbiAgICAgIGV4cGVjdGVkOiBpc3N1ZS5leHBlY3RlZEl0ZW1zLFxyXG4gICAgICByZW5kZXJlZDogaXNzdWUucmVuZGVyZWRJdGVtcyxcclxuICAgICAgZmlsdGVyczogaXNzdWUuZmlsdGVyQ3JpdGVyaWEsXHJcbiAgICAgIGVycm9yOiBpc3N1ZS5lcnJvckRldGFpbHNcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIE1hbnRlbmVyIHNvbG8gbG9zIMO6bHRpbW9zIDUwIHByb2JsZW1hc1xyXG4gICAgaWYgKHRoaXMucmVuZGVyaW5nSXNzdWVzLmxlbmd0aCA+IDUwKSB7XHJcbiAgICAgIHRoaXMucmVuZGVyaW5nSXNzdWVzID0gdGhpcy5yZW5kZXJpbmdJc3N1ZXMuc2xpY2UoLTUwKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEVudsOtYSB1bmEgYWxlcnRhIGNyw610aWNhIChlbiBwcm9kdWNjacOzbiBzZSBlbnZpYXLDrWEgYSB1biBzZXJ2aWNpbyBkZSBtb25pdG9yZW8pXHJcbiAgICovXHJcbiAgcHJpdmF0ZSBzZW5kQ3JpdGljYWxBbGVydChldmVudDogQXBpTW9uaXRvcmluZ0V2ZW50KTogdm9pZCB7XHJcbiAgICAvLyBFbiBkZXNhcnJvbGxvLCBzb2xvIGxvZ1xyXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ/CfmqggQ1JJVElDQUwgQUxFUlQ6Jywge1xyXG4gICAgICAgIG1lc3NhZ2U6ICdTaWduaWZpY2FudCBkYXRhIGxvc3MgZGV0ZWN0ZWQnLFxyXG4gICAgICAgIGV2ZW50LFxyXG4gICAgICAgIHJlY29tbWVuZGF0aW9uOiAnQ2hlY2sgQVBJIHZhbGlkYXRpb24gbG9naWMgYW5kIGRhdGEgZmlsdGVyaW5nJ1xyXG4gICAgICB9KTtcclxuICAgICAgXHJcbiAgICB9XHJcblxyXG4gICAgLy8gRW4gcHJvZHVjY2nDs24sIGVudmlhciBhIHNlcnZpY2lvIGRlIG1vbml0b3Jlb1xyXG4gICAgLy8gZmV0Y2goJy9hcGkvbW9uaXRvcmluZy9hbGVydHMnLCB7XHJcbiAgICAvLyAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgLy8gICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcclxuICAgIC8vICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyB0eXBlOiAnYXBpX2Rpc2NyZXBhbmN5JywgZXZlbnQgfSlcclxuICAgIC8vIH0pLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogT2J0aWVuZSBlc3RhZMOtc3RpY2FzIGRlIG1vbml0b3Jlb1xyXG4gICAqL1xyXG4gIGdldE1vbml0b3JpbmdTdGF0cygpOiB7XHJcbiAgICB0b3RhbEV2ZW50czogbnVtYmVyO1xyXG4gICAgdG90YWxJc3N1ZXM6IG51bWJlcjtcclxuICAgIGNyaXRpY2FsRXZlbnRzOiBudW1iZXI7XHJcbiAgICBhdmVyYWdlRGlzY3JlcGFuY3k6IG51bWJlcjtcclxuICAgIHJlY2VudEV2ZW50czogQXBpTW9uaXRvcmluZ0V2ZW50W107XHJcbiAgICByZWNlbnRJc3N1ZXM6IFJlbmRlcmluZ0lzc3VlW107XHJcbiAgfSB7XHJcbiAgICBjb25zdCBjcml0aWNhbEV2ZW50cyA9IHRoaXMuZXZlbnRzLmZpbHRlcihlID0+IGUuZGlzY3JlcGFuY3kgPiAwKS5sZW5ndGg7XHJcbiAgICBjb25zdCB0b3RhbERpc2NyZXBhbmN5ID0gdGhpcy5ldmVudHMucmVkdWNlKChzdW0sIGUpID0+IHN1bSArIE1hdGguYWJzKGUuZGlzY3JlcGFuY3kpLCAwKTtcclxuICAgIGNvbnN0IGF2ZXJhZ2VEaXNjcmVwYW5jeSA9IHRoaXMuZXZlbnRzLmxlbmd0aCA+IDAgPyB0b3RhbERpc2NyZXBhbmN5IC8gdGhpcy5ldmVudHMubGVuZ3RoIDogMDtcclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICB0b3RhbEV2ZW50czogdGhpcy5ldmVudHMubGVuZ3RoLFxyXG4gICAgICB0b3RhbElzc3VlczogdGhpcy5yZW5kZXJpbmdJc3N1ZXMubGVuZ3RoLFxyXG4gICAgICBjcml0aWNhbEV2ZW50cyxcclxuICAgICAgYXZlcmFnZURpc2NyZXBhbmN5LFxyXG4gICAgICByZWNlbnRFdmVudHM6IHRoaXMuZXZlbnRzLnNsaWNlKC0xMCksXHJcbiAgICAgIHJlY2VudElzc3VlczogdGhpcy5yZW5kZXJpbmdJc3N1ZXMuc2xpY2UoLTEwKVxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIExpbXBpYSBsb3MgZGF0b3MgZGUgbW9uaXRvcmVvXHJcbiAgICovXHJcbiAgY2xlYXJNb25pdG9yaW5nRGF0YSgpOiB2b2lkIHtcclxuICAgIHRoaXMuZXZlbnRzID0gW107XHJcbiAgICB0aGlzLnJlbmRlcmluZ0lzc3VlcyA9IFtdO1xyXG4gICAgY29uc29sZS5sb2coJ/Cfp7kgTW9uaXRvcmluZyBkYXRhIGNsZWFyZWQnKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEV4cG9ydGEgZGF0b3MgZGUgbW9uaXRvcmVvIHBhcmEgYW7DoWxpc2lzXHJcbiAgICovXHJcbiAgZXhwb3J0TW9uaXRvcmluZ0RhdGEoKTogc3RyaW5nIHtcclxuICAgIGNvbnN0IGRhdGEgPSB7XHJcbiAgICAgIHNlc3Npb25JZDogdGhpcy5zZXNzaW9uSWQsXHJcbiAgICAgIGV4cG9ydFRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxyXG4gICAgICBldmVudHM6IHRoaXMuZXZlbnRzLFxyXG4gICAgICByZW5kZXJpbmdJc3N1ZXM6IHRoaXMucmVuZGVyaW5nSXNzdWVzLFxyXG4gICAgICBzdGF0czogdGhpcy5nZXRNb25pdG9yaW5nU3RhdHMoKVxyXG4gICAgfTtcclxuXHJcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoZGF0YSwgbnVsbCwgMik7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBJbnN0YW5jaWEgc2luZ2xldG9uXHJcbmV4cG9ydCBjb25zdCBhcGlNb25pdG9yaW5nID0gQXBpTW9uaXRvcmluZ1NlcnZpY2UuZ2V0SW5zdGFuY2UoKTtcclxuXHJcbi8vIEhvb2sgcGFyYSB1c2FyIGVsIG1vbml0b3JlbyBlbiBjb21wb25lbnRlcyBSZWFjdFxyXG5leHBvcnQgZnVuY3Rpb24gdXNlQXBpTW9uaXRvcmluZygpIHtcclxuICByZXR1cm4ge1xyXG4gICAgcmVjb3JkRGlzY3JlcGFuY3k6IGFwaU1vbml0b3JpbmcucmVjb3JkQXBpRGlzY3JlcGFuY3kuYmluZChhcGlNb25pdG9yaW5nKSxcclxuICAgIHJlY29yZFJlbmRlcmluZ0lzc3VlOiBhcGlNb25pdG9yaW5nLnJlY29yZFJlbmRlcmluZ0lzc3VlLmJpbmQoYXBpTW9uaXRvcmluZyksXHJcbiAgICBnZXRTdGF0czogYXBpTW9uaXRvcmluZy5nZXRNb25pdG9yaW5nU3RhdHMuYmluZChhcGlNb25pdG9yaW5nKSxcclxuICAgIGNsZWFyRGF0YTogYXBpTW9uaXRvcmluZy5jbGVhck1vbml0b3JpbmdEYXRhLmJpbmQoYXBpTW9uaXRvcmluZyksXHJcbiAgICBleHBvcnREYXRhOiBhcGlNb25pdG9yaW5nLmV4cG9ydE1vbml0b3JpbmdEYXRhLmJpbmQoYXBpTW9uaXRvcmluZylcclxuICB9O1xyXG59XHJcblxyXG4vLyBVdGlsaWRhZCBwYXJhIGRldGVjdGFyIGF1dG9tw6F0aWNhbWVudGUgZGlzY3JlcGFuY2lhc1xyXG5leHBvcnQgZnVuY3Rpb24gZGV0ZWN0QXBpRGlzY3JlcGFuY3koXHJcbiAgZW5kcG9pbnQ6IHN0cmluZyxcclxuICBhcGlSZXNwb25zZTogeyB0b3RhbD86IG51bWJlcjsgY291bnQ/OiBudW1iZXI7IGxlbmd0aD86IG51bWJlciB9LFxyXG4gIHJlbmRlcmVkSXRlbXM6IHVua25vd25bXVxyXG4pOiB2b2lkIHtcclxuICBjb25zdCBleHBlY3RlZENvdW50ID0gYXBpUmVzcG9uc2UudG90YWwgfHwgYXBpUmVzcG9uc2UuY291bnQgfHwgYXBpUmVzcG9uc2UubGVuZ3RoIHx8IDA7XHJcbiAgY29uc3QgYWN0dWFsQ291bnQgPSBBcnJheS5pc0FycmF5KHJlbmRlcmVkSXRlbXMpID8gcmVuZGVyZWRJdGVtcy5sZW5ndGggOiAwO1xyXG4gIFxyXG4gIGlmIChleHBlY3RlZENvdW50ICE9PSBhY3R1YWxDb3VudCkge1xyXG4gICAgYXBpTW9uaXRvcmluZy5yZWNvcmRBcGlEaXNjcmVwYW5jeShlbmRwb2ludCwgZXhwZWN0ZWRDb3VudCwgYWN0dWFsQ291bnQpO1xyXG4gIH1cclxufVxyXG5cclxuLy8gRGVjb3JhdG9yIHBhcmEgbW9uaXRvcmVhciBhdXRvbcOhdGljYW1lbnRlIGZ1bmNpb25lcyBkZSBBUElcclxuZXhwb3J0IGZ1bmN0aW9uIG1vbml0b3JBcGlDYWxsKGVuZHBvaW50OiBzdHJpbmcpIHtcclxuICByZXR1cm4gZnVuY3Rpb24gKHRhcmdldDogdW5rbm93biwgcHJvcGVydHlOYW1lOiBzdHJpbmcsIGRlc2NyaXB0b3I6IFByb3BlcnR5RGVzY3JpcHRvcikge1xyXG4gICAgY29uc3QgbWV0aG9kID0gZGVzY3JpcHRvci52YWx1ZTtcclxuICAgIFxyXG4gICAgZGVzY3JpcHRvci52YWx1ZSA9IGFzeW5jIGZ1bmN0aW9uICguLi5hcmdzOiB1bmtub3duW10pIHtcclxuICAgICAgY29uc3Qgc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcclxuICAgICAgXHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgbWV0aG9kLmFwcGx5KHRoaXMsIGFyZ3MpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIFNpIGVsIHJlc3VsdGFkbyB0aWVuZSBkYXRvcyBwYWdpbmFkb3MsIHZlcmlmaWNhciBkaXNjcmVwYW5jaWFzXHJcbiAgICAgICAgaWYgKHJlc3VsdCAmJiB0eXBlb2YgcmVzdWx0ID09PSAnb2JqZWN0Jykge1xyXG4gICAgICAgICAgaWYgKCdkYXRhJyBpbiByZXN1bHQgJiYgJ3BhZ2luYXRpb24nIGluIHJlc3VsdC5kYXRhKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHsgZGF0YSB9ID0gcmVzdWx0O1xyXG4gICAgICAgICAgICBkZXRlY3RBcGlEaXNjcmVwYW5jeShlbmRwb2ludCwgZGF0YS5wYWdpbmF0aW9uLCBkYXRhLm9yZGVycyB8fCBkYXRhLml0ZW1zIHx8IFtdKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBjb25zdCBkdXJhdGlvbiA9IERhdGUubm93KCkgLSBzdGFydFRpbWU7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihgQVBJIGNhbGwgZmFpbGVkIGZvciAke2VuZHBvaW50fSBhZnRlciAke2R1cmF0aW9ufW1zOmAsIGVycm9yKTtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgfVxyXG4gICAgfTtcclxuICAgIFxyXG4gICAgcmV0dXJuIGRlc2NyaXB0b3I7XHJcbiAgfTtcclxufVxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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