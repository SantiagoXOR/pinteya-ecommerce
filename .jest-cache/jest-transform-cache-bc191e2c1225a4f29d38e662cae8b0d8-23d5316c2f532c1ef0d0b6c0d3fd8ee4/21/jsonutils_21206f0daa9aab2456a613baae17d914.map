{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\json-utils.ts"],"sourcesContent":["/**\r\n * Utilidades para manejo seguro de JSON\r\n * Previene errores de parsing con datos corruptos o malformados\r\n */\r\n\r\nexport interface SafeJsonResult<T> {\r\n  success: boolean;\r\n  data: T | null;\r\n  error?: string;\r\n}\r\n\r\n/**\r\n * Parsea JSON de forma segura, manejando casos edge y datos corruptos\r\n */\r\nexport function safeJsonParse<T = any>(jsonString: string | null | undefined): SafeJsonResult<T> {\r\n  // Validaciones b√°sicas\r\n  if (!jsonString) {\r\n    return {\r\n      success: false,\r\n      data: null,\r\n      error: 'JSON string is null or undefined'\r\n    };\r\n  }\r\n\r\n  // Limpiar string\r\n  const trimmed = jsonString.trim();\r\n  \r\n  // Detectar casos problem√°ticos\r\n  if (trimmed === '' || trimmed === '\"\"' || trimmed === \"''\" || trimmed === 'null' || trimmed === 'undefined') {\r\n    return {\r\n      success: false,\r\n      data: null,\r\n      error: 'JSON string is empty or invalid'\r\n    };\r\n  }\r\n\r\n  // Detectar comillas dobles corruptas\r\n  if (trimmed.includes('\"\"') && trimmed.length < 5) {\r\n    return {\r\n      success: false,\r\n      data: null,\r\n      error: 'Detected corrupted JSON with empty quotes'\r\n    };\r\n  }\r\n\r\n  // Intentar parsear\r\n  try {\r\n    const parsed = JSON.parse(trimmed);\r\n    return {\r\n      success: true,\r\n      data: parsed,\r\n      error: undefined\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      data: null,\r\n      error: error instanceof Error ? error.message : 'Unknown JSON parse error'\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Stringify JSON de forma segura, manejando objetos circulares\r\n */\r\nexport function safeJsonStringify(data: any, space?: number): SafeJsonResult<string> {\r\n  try {\r\n    const result = JSON.stringify(data, null, space);\r\n    return {\r\n      success: true,\r\n      data: result,\r\n      error: undefined\r\n    };\r\n  } catch (error) {\r\n    // Intentar con replacer para objetos circulares\r\n    try {\r\n      const seen = new WeakSet();\r\n      const result = JSON.stringify(data, (key, value) => {\r\n        if (typeof value === 'object' && value !== null) {\r\n          if (seen.has(value)) {\r\n            return '[Circular Reference]';\r\n          }\r\n          seen.add(value);\r\n        }\r\n        return value;\r\n      }, space);\r\n      \r\n      return {\r\n        success: true,\r\n        data: result,\r\n        error: undefined\r\n      };\r\n    } catch (fallbackError) {\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        error: fallbackError instanceof Error ? fallbackError.message : 'Unknown JSON stringify error'\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Carga datos de localStorage de forma segura\r\n */\r\nexport function safeLocalStorageGet<T = any>(key: string): SafeJsonResult<T> {\r\n  if (typeof window === 'undefined') {\r\n    return {\r\n      success: false,\r\n      data: null,\r\n      error: 'localStorage not available (SSR)'\r\n    };\r\n  }\r\n\r\n  try {\r\n    const stored = localStorage.getItem(key);\r\n    if (!stored) {\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        error: 'No data found in localStorage'\r\n      };\r\n    }\r\n\r\n    return safeJsonParse<T>(stored);\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      data: null,\r\n      error: error instanceof Error ? error.message : 'localStorage access error'\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Guarda datos en localStorage de forma segura\r\n */\r\nexport function safeLocalStorageSet(key: string, data: any): SafeJsonResult<boolean> {\r\n  if (typeof window === 'undefined') {\r\n    return {\r\n      success: false,\r\n      data: false,\r\n      error: 'localStorage not available (SSR)'\r\n    };\r\n  }\r\n\r\n  try {\r\n    const stringifyResult = safeJsonStringify(data);\r\n    if (!stringifyResult.success) {\r\n      return {\r\n        success: false,\r\n        data: false,\r\n        error: `Failed to stringify data: ${stringifyResult.error}`\r\n      };\r\n    }\r\n\r\n    localStorage.setItem(key, stringifyResult.data!);\r\n    return {\r\n      success: true,\r\n      data: true,\r\n      error: undefined\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      data: false,\r\n      error: error instanceof Error ? error.message : 'localStorage write error'\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Limpia localStorage de datos corruptos\r\n */\r\nexport function cleanCorruptedLocalStorage(keys: string[]): number {\r\n  if (typeof window === 'undefined') {\r\n    return 0;\r\n  }\r\n\r\n  let cleanedCount = 0;\r\n\r\n  keys.forEach(key => {\r\n    try {\r\n      const stored = localStorage.getItem(key);\r\n      if (stored) {\r\n        const parseResult = safeJsonParse(stored);\r\n        if (!parseResult.success) {\r\n          console.warn(`Cleaning corrupted localStorage key: ${key}`, parseResult.error);\r\n          localStorage.removeItem(key);\r\n          cleanedCount++;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.warn(`Error checking localStorage key ${key}:`, error);\r\n      localStorage.removeItem(key);\r\n      cleanedCount++;\r\n    }\r\n  });\r\n\r\n  return cleanedCount;\r\n}\r\n\r\n/**\r\n * Valida que una respuesta de API tenga JSON v√°lido\r\n */\r\nexport async function safeApiResponseJson<T = any>(response: Response): Promise<SafeJsonResult<T>> {\r\n  const DEBUG_MODE = process.env.NODE_ENV === 'development';\r\n\r\n  try {\r\n    if (DEBUG_MODE) {\r\n    }\r\n\r\n    // Verificar que la respuesta sea v√°lida\r\n    if (!response.ok) {\r\n      // Try to get error details from response body\r\n      let errorDetails = '';\r\n      try {\r\n        const errorText = await response.text();\r\n        if (DEBUG_MODE) {\r\n        }\r\n        errorDetails = errorText ? ` - ${errorText}` : '';\r\n      } catch (textError) {\r\n        if (DEBUG_MODE) {\r\n          console.warn('Could not read error response body:', textError);\r\n        }\r\n      }\r\n\r\n      return {\r\n        success: false,\r\n        data: null,\r\n        error: `HTTP ${response.status}: ${response.statusText}${errorDetails}`\r\n      };\r\n    }\r\n\r\n    // Obtener el texto primero\r\n    const text = await response.text();\r\n    if (DEBUG_MODE) {\r\n      console.log('üìÑ Response text preview:', text.substring(0, 200) + (text.length > 200 ? '...' : ''));\r\n    }\r\n\r\n    // Parsear de forma segura\r\n    const parseResult = safeJsonParse<T>(text);\r\n    if (DEBUG_MODE) {\r\n    }\r\n\r\n    return parseResult;\r\n  } catch (error) {\r\n    console.error('‚ùå safeApiResponseJson error:', error);\r\n    return {\r\n      success: false,\r\n      data: null,\r\n      error: error instanceof Error ? error.message : 'API response error'\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Constantes para keys de localStorage comunes\r\n */\r\nexport const STORAGE_KEYS = {\r\n  CART: 'pinteya-cart',\r\n  RECENT_SEARCHES: 'pinteya-recent-searches',\r\n  USER_PREFERENCES: 'pinteya-user-preferences',\r\n  ANALYTICS: 'pinteya-analytics',\r\n} as const;\r\n\r\n/**\r\n * Funci√≥n de inicializaci√≥n para limpiar localStorage corrupto al cargar la app\r\n */\r\nexport function initializeJsonSafety(): void {\r\n  if (typeof window === 'undefined') {return;}\r\n\r\n  const keysToCheck = Object.values(STORAGE_KEYS);\r\n  const cleanedCount = cleanCorruptedLocalStorage(keysToCheck);\r\n  \r\n  if (cleanedCount > 0) {\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["STORAGE_KEYS","cleanCorruptedLocalStorage","initializeJsonSafety","safeApiResponseJson","safeJsonParse","safeJsonStringify","safeLocalStorageGet","safeLocalStorageSet","jsonString","success","data","error","trimmed","trim","includes","length","parsed","JSON","parse","undefined","Error","message","space","result","stringify","seen","WeakSet","key","value","has","add","fallbackError","window","stored","localStorage","getItem","stringifyResult","setItem","keys","cleanedCount","forEach","parseResult","console","warn","removeItem","response","DEBUG_MODE","process","env","NODE_ENV","ok","errorDetails","errorText","text","textError","status","statusText","log","substring","CART","RECENT_SEARCHES","USER_PREFERENCES","ANALYTICS","keysToCheck","Object","values"],"mappings":"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"}