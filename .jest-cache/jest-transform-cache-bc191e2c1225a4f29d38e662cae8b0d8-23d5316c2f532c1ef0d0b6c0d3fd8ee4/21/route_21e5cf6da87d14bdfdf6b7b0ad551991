5aea4715f6a2758fe8d831b8639adb10
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_22hyf8nh6n() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug-order-109\\route.ts";
  var hash = "aba6b14df8062eaf976ceb0dd4ba515140d52f60";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug-order-109\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 20
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 18
        },
        end: {
          line: 21,
          column: 63
        }
      },
      "8": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 24
        }
      },
      "9": {
        start: {
          line: 24,
          column: 17
        },
        end: {
          line: 24,
          column: 19
        }
      },
      "10": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 157,
          column: 5
        }
      },
      "11": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 94
        }
      },
      "12": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 39,
          column: 9
        }
      },
      "13": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 87
        }
      },
      "14": {
        start: {
          line: 42,
          column: 28
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "15": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 87
        }
      },
      "16": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 65
        }
      },
      "17": {
        start: {
          line: 52,
          column: 25
        },
        end: {
          line: 52,
          column: 63
        }
      },
      "18": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "19": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 78
        }
      },
      "20": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 60,
          column: 15
        }
      },
      "21": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 56
        }
      },
      "22": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 106
        }
      },
      "23": {
        start: {
          line: 65,
          column: 51
        },
        end: {
          line: 65,
          column: 158
        }
      },
      "24": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "25": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 89
        }
      },
      "26": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 74,
          column: 15
        }
      },
      "27": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "28": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 64
        }
      },
      "29": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 83,
          column: 15
        }
      },
      "30": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 76
        }
      },
      "31": {
        start: {
          line: 87,
          column: 31
        },
        end: {
          line: 87,
          column: 37
        }
      },
      "32": {
        start: {
          line: 88,
          column: 33
        },
        end: {
          line: 88,
          column: 39
        }
      },
      "33": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 107
        }
      },
      "34": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 59
        }
      },
      "35": {
        start: {
          line: 92,
          column: 59
        },
        end: {
          line: 97,
          column: 47
        }
      },
      "36": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "37": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 94
        }
      },
      "38": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 106,
          column: 15
        }
      },
      "39": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 101
        }
      },
      "40": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 145,
          column: 11
        }
      },
      "41": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 61
        }
      },
      "42": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 55
        }
      },
      "43": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 156,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 16
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "POST",
        decl: {
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 23,
            column: 19
          }
        },
        loc: {
          start: {
            line: 23,
            column: 29
          },
          end: {
            line: 158,
            column: 1
          }
        },
        line: 23
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "1": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "2": {
        loc: {
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "3": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug-order-109\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - DEBUG ORDER 109 WEBHOOK\r\n// Endpoint espec\xEDfico para probar webhook con orden 109 (nueva manual)\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getSupabaseClient } from '@/lib/integrations/supabase';\r\n\r\nexport async function POST(request: NextRequest) {\r\n  const logs: string[] = [];\r\n  \r\n  try {\r\n    logs.push('[DEBUG_109] Iniciando debug del webhook para orden 109 (nueva manual)...');\r\n\r\n    // Simular datos de webhook para orden 109\r\n    const webhookData = {\r\n      action: \"payment.updated\",\r\n      api_version: \"v1\",\r\n      data: { id: \"new_manual_payment\" },\r\n      date_created: \"2021-11-01T02:02:02Z\",\r\n      id: \"new_manual_payment\",\r\n      live_mode: false,\r\n      type: \"payment\",\r\n      user_id: 452711838\r\n    };\r\n\r\n    logs.push('[DEBUG_109] Webhook data simulado: ' + JSON.stringify(webhookData));\r\n\r\n    // Simular datos de pago para orden 109\r\n    const paymentData = {\r\n      id: 'new_manual_payment',\r\n      status: 'approved',\r\n      external_reference: 'express_checkout_1757621876739', // Orden 109 nueva\r\n      transaction_amount: 850,\r\n      currency_id: 'ARS'\r\n    };\r\n\r\n    logs.push('[DEBUG_109] Payment data simulado: ' + JSON.stringify(paymentData));\r\n\r\n    // Probar conexi\xF3n a Supabase\r\n    logs.push('[DEBUG_109] Probando conexi\xF3n a Supabase...');\r\n    const supabase = getSupabaseClient(true);\r\n    \r\n    if (!supabase) {\r\n      logs.push('[DEBUG_109] ERROR: Cliente de Supabase no disponible');\r\n      return NextResponse.json({ error: 'Supabase not available', logs }, { status: 500 });\r\n    }\r\n\r\n    logs.push('[DEBUG_109] Cliente de Supabase OK');\r\n\r\n    // Buscar orden 109\r\n    logs.push('[DEBUG_109] Buscando orden con external_reference: ' + paymentData.external_reference);\r\n    \r\n    const { data: order, error: orderError } = await supabase\r\n      .from('orders')\r\n      .select('*')\r\n      .eq('external_reference', paymentData.external_reference)\r\n      .single();\r\n\r\n    if (orderError) {\r\n      logs.push('[DEBUG_109] ERROR buscando orden: ' + JSON.stringify(orderError));\r\n      return NextResponse.json({ error: 'Order lookup failed', logs, orderError }, { status: 500 });\r\n    }\r\n\r\n    if (!order) {\r\n      logs.push('[DEBUG_109] ERROR: Orden no encontrada');\r\n      return NextResponse.json({ error: 'Order not found', logs }, { status: 404 });\r\n    }\r\n\r\n    logs.push('[DEBUG_109] Orden encontrada: ' + JSON.stringify(order));\r\n\r\n    // Mapear estados\r\n    const newOrderStatus = 'paid';\r\n    const newPaymentStatus = 'paid';\r\n\r\n    logs.push('[DEBUG_109] Nuevos estados: order=' + newOrderStatus + ', payment=' + newPaymentStatus);\r\n\r\n    // Actualizar orden 109\r\n    logs.push('[DEBUG_109] Actualizando orden 109...');\r\n    \r\n    const { data: updatedOrder, error: updateError } = await supabase\r\n      .from('orders')\r\n      .update({\r\n        payment_status: newPaymentStatus,\r\n        status: newOrderStatus,\r\n        payment_id: paymentData.id,\r\n        updated_at: new Date().toISOString()\r\n      })\r\n      .eq('id', order.id)\r\n      .select()\r\n      .single();\r\n\r\n    if (updateError) {\r\n      logs.push('[DEBUG_109] ERROR actualizando orden: ' + JSON.stringify(updateError));\r\n      return NextResponse.json({ error: 'Update failed', logs, updateError }, { status: 500 });\r\n    }\r\n\r\n    logs.push('[DEBUG_109] Orden 109 actualizada exitosamente: ' + JSON.stringify(updatedOrder));\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: 'Debug webhook para orden 109 (nueva manual) completado exitosamente',\r\n      logs,\r\n      originalOrder: order,\r\n      updatedOrder,\r\n      paymentData,\r\n      orderComparison: {\r\n        before: {\r\n          id: order.id,\r\n          status: order.status,\r\n          payment_status: order.payment_status,\r\n          payment_id: order.payment_id,\r\n          total: order.total,\r\n          external_reference: order.external_reference\r\n        },\r\n        after: {\r\n          id: updatedOrder.id,\r\n          status: updatedOrder.status,\r\n          payment_status: updatedOrder.payment_status,\r\n          payment_id: updatedOrder.payment_id,\r\n          total: updatedOrder.total,\r\n          external_reference: updatedOrder.external_reference\r\n        }\r\n      },\r\n      newManualOrderInfo: {\r\n        created_manually: true,\r\n        customer: order.payer_info,\r\n        total_amount: order.total,\r\n        created_at: order.created_at,\r\n        order_number: 109,\r\n        is_smaller_order: true,\r\n        note: \"Orden m\xE1s peque\xF1a ($850) para testing adicional\"\r\n      }\r\n    }, { status: 200 });\r\n\r\n  } catch (error: any) {\r\n    logs.push('[DEBUG_109] EXCEPTION: ' + error.message);\r\n    logs.push('[DEBUG_109] STACK: ' + error.stack);\r\n\r\n    return NextResponse.json({\r\n      error: 'Debug order 109 failed',\r\n      message: error.message,\r\n      logs,\r\n      stack: error.stack\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["POST", "runtime", "request", "logs", "push", "webhookData", "action", "api_version", "data", "id", "date_created", "live_mode", "type", "user_id", "JSON", "stringify", "paymentData", "status", "external_reference", "transaction_amount", "currency_id", "supabase", "getSupabaseClient", "NextResponse", "json", "error", "order", "orderError", "from", "select", "eq", "single", "newOrderStatus", "newPaymentStatus", "updatedOrder", "updateError", "update", "payment_status", "payment_id", "updated_at", "Date", "toISOString", "success", "message", "originalOrder", "orderComparison", "before", "total", "after", "newManualOrderInfo", "created_manually", "customer", "payer_info", "total_amount", "created_at", "order_number", "is_smaller_order", "note", "stack"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "aba6b14df8062eaf976ceb0dd4ba515140d52f60"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_22hyf8nh6n = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_22hyf8nh6n();
cov_22hyf8nh6n().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_22hyf8nh6n().f[0]++;
  cov_22hyf8nh6n().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_22hyf8nh6n().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_22hyf8nh6n().s[3]++;
_export(exports, {
  get POST() {
    /* istanbul ignore next */
    cov_22hyf8nh6n().f[1]++;
    cov_22hyf8nh6n().s[4]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_22hyf8nh6n().f[2]++;
    cov_22hyf8nh6n().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_22hyf8nh6n().s[6]++, require("next/server"));
const _supabase =
/* istanbul ignore next */
(cov_22hyf8nh6n().s[7]++, require("../../../lib/integrations/supabase"));
const runtime =
/* istanbul ignore next */
(cov_22hyf8nh6n().s[8]++, 'nodejs');
async function POST(request) {
  /* istanbul ignore next */
  cov_22hyf8nh6n().f[3]++;
  const logs =
  /* istanbul ignore next */
  (cov_22hyf8nh6n().s[9]++, []);
  /* istanbul ignore next */
  cov_22hyf8nh6n().s[10]++;
  try {
    /* istanbul ignore next */
    cov_22hyf8nh6n().s[11]++;
    logs.push('[DEBUG_109] Iniciando debug del webhook para orden 109 (nueva manual)...');
    // Simular datos de webhook para orden 109
    const webhookData =
    /* istanbul ignore next */
    (cov_22hyf8nh6n().s[12]++, {
      action: "payment.updated",
      api_version: "v1",
      data: {
        id: "new_manual_payment"
      },
      date_created: "2021-11-01T02:02:02Z",
      id: "new_manual_payment",
      live_mode: false,
      type: "payment",
      user_id: 452711838
    });
    /* istanbul ignore next */
    cov_22hyf8nh6n().s[13]++;
    logs.push('[DEBUG_109] Webhook data simulado: ' + JSON.stringify(webhookData));
    // Simular datos de pago para orden 109
    const paymentData =
    /* istanbul ignore next */
    (cov_22hyf8nh6n().s[14]++, {
      id: 'new_manual_payment',
      status: 'approved',
      external_reference: 'express_checkout_1757621876739',
      transaction_amount: 850,
      currency_id: 'ARS'
    });
    /* istanbul ignore next */
    cov_22hyf8nh6n().s[15]++;
    logs.push('[DEBUG_109] Payment data simulado: ' + JSON.stringify(paymentData));
    // Probar conexiÃ³n a Supabase
    /* istanbul ignore next */
    cov_22hyf8nh6n().s[16]++;
    logs.push('[DEBUG_109] Probando conexiÃ³n a Supabase...');
    const supabase =
    /* istanbul ignore next */
    (cov_22hyf8nh6n().s[17]++, (0, _supabase.getSupabaseClient)(true));
    /* istanbul ignore next */
    cov_22hyf8nh6n().s[18]++;
    if (!supabase) {
      /* istanbul ignore next */
      cov_22hyf8nh6n().b[0][0]++;
      cov_22hyf8nh6n().s[19]++;
      logs.push('[DEBUG_109] ERROR: Cliente de Supabase no disponible');
      /* istanbul ignore next */
      cov_22hyf8nh6n().s[20]++;
      return _server.NextResponse.json({
        error: 'Supabase not available',
        logs
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_22hyf8nh6n().b[0][1]++;
    }
    cov_22hyf8nh6n().s[21]++;
    logs.push('[DEBUG_109] Cliente de Supabase OK');
    // Buscar orden 109
    /* istanbul ignore next */
    cov_22hyf8nh6n().s[22]++;
    logs.push('[DEBUG_109] Buscando orden con external_reference: ' + paymentData.external_reference);
    const {
      data: order,
      error: orderError
    } =
    /* istanbul ignore next */
    (cov_22hyf8nh6n().s[23]++, await supabase.from('orders').select('*').eq('external_reference', paymentData.external_reference).single());
    /* istanbul ignore next */
    cov_22hyf8nh6n().s[24]++;
    if (orderError) {
      /* istanbul ignore next */
      cov_22hyf8nh6n().b[1][0]++;
      cov_22hyf8nh6n().s[25]++;
      logs.push('[DEBUG_109] ERROR buscando orden: ' + JSON.stringify(orderError));
      /* istanbul ignore next */
      cov_22hyf8nh6n().s[26]++;
      return _server.NextResponse.json({
        error: 'Order lookup failed',
        logs,
        orderError
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_22hyf8nh6n().b[1][1]++;
    }
    cov_22hyf8nh6n().s[27]++;
    if (!order) {
      /* istanbul ignore next */
      cov_22hyf8nh6n().b[2][0]++;
      cov_22hyf8nh6n().s[28]++;
      logs.push('[DEBUG_109] ERROR: Orden no encontrada');
      /* istanbul ignore next */
      cov_22hyf8nh6n().s[29]++;
      return _server.NextResponse.json({
        error: 'Order not found',
        logs
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_22hyf8nh6n().b[2][1]++;
    }
    cov_22hyf8nh6n().s[30]++;
    logs.push('[DEBUG_109] Orden encontrada: ' + JSON.stringify(order));
    // Mapear estados
    const newOrderStatus =
    /* istanbul ignore next */
    (cov_22hyf8nh6n().s[31]++, 'paid');
    const newPaymentStatus =
    /* istanbul ignore next */
    (cov_22hyf8nh6n().s[32]++, 'paid');
    /* istanbul ignore next */
    cov_22hyf8nh6n().s[33]++;
    logs.push('[DEBUG_109] Nuevos estados: order=' + newOrderStatus + ', payment=' + newPaymentStatus);
    // Actualizar orden 109
    /* istanbul ignore next */
    cov_22hyf8nh6n().s[34]++;
    logs.push('[DEBUG_109] Actualizando orden 109...');
    const {
      data: updatedOrder,
      error: updateError
    } =
    /* istanbul ignore next */
    (cov_22hyf8nh6n().s[35]++, await supabase.from('orders').update({
      payment_status: newPaymentStatus,
      status: newOrderStatus,
      payment_id: paymentData.id,
      updated_at: new Date().toISOString()
    }).eq('id', order.id).select().single());
    /* istanbul ignore next */
    cov_22hyf8nh6n().s[36]++;
    if (updateError) {
      /* istanbul ignore next */
      cov_22hyf8nh6n().b[3][0]++;
      cov_22hyf8nh6n().s[37]++;
      logs.push('[DEBUG_109] ERROR actualizando orden: ' + JSON.stringify(updateError));
      /* istanbul ignore next */
      cov_22hyf8nh6n().s[38]++;
      return _server.NextResponse.json({
        error: 'Update failed',
        logs,
        updateError
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_22hyf8nh6n().b[3][1]++;
    }
    cov_22hyf8nh6n().s[39]++;
    logs.push('[DEBUG_109] Orden 109 actualizada exitosamente: ' + JSON.stringify(updatedOrder));
    /* istanbul ignore next */
    cov_22hyf8nh6n().s[40]++;
    return _server.NextResponse.json({
      success: true,
      message: 'Debug webhook para orden 109 (nueva manual) completado exitosamente',
      logs,
      originalOrder: order,
      updatedOrder,
      paymentData,
      orderComparison: {
        before: {
          id: order.id,
          status: order.status,
          payment_status: order.payment_status,
          payment_id: order.payment_id,
          total: order.total,
          external_reference: order.external_reference
        },
        after: {
          id: updatedOrder.id,
          status: updatedOrder.status,
          payment_status: updatedOrder.payment_status,
          payment_id: updatedOrder.payment_id,
          total: updatedOrder.total,
          external_reference: updatedOrder.external_reference
        }
      },
      newManualOrderInfo: {
        created_manually: true,
        customer: order.payer_info,
        total_amount: order.total,
        created_at: order.created_at,
        order_number: 109,
        is_smaller_order: true,
        note: "Orden mÃ¡s pequeÃ±a ($850) para testing adicional"
      }
    }, {
      status: 200
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_22hyf8nh6n().s[41]++;
    logs.push('[DEBUG_109] EXCEPTION: ' + error.message);
    /* istanbul ignore next */
    cov_22hyf8nh6n().s[42]++;
    logs.push('[DEBUG_109] STACK: ' + error.stack);
    /* istanbul ignore next */
    cov_22hyf8nh6n().s[43]++;
    return _server.NextResponse.json({
      error: 'Debug order 109 failed',
      message: error.message,
      logs,
      stack: error.stack
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,