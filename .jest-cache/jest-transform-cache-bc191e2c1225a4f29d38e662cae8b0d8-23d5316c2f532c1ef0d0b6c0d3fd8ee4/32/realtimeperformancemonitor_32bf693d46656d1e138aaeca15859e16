67e8f144002284b1ebea725d0377d11a
// ===================================
// PINTEYA E-COMMERCE - REAL-TIME PERFORMANCE MONITOR
// ===================================
"use strict";

/* istanbul ignore next */
function cov_1nqco75e4() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\monitoring\\real-time-performance-monitor.ts";
  var hash = "8d662237f5b866868d7247d42b61141f88929382";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\monitoring\\real-time-performance-monitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 27,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 34
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 39
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 42
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 42
        }
      },
      "8": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 47
        }
      },
      "9": {
        start: {
          line: 29,
          column: 15
        },
        end: {
          line: 29,
          column: 47
        }
      },
      "10": {
        start: {
          line: 30,
          column: 27
        },
        end: {
          line: 69,
          column: 1
        }
      },
      "11": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 50
        }
      },
      "12": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 45
        }
      },
      "13": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 32
        }
      },
      "14": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 32
        }
      },
      "15": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 34
        }
      },
      "16": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 35
        }
      },
      "17": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 34
        }
      },
      "18": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 37
        }
      },
      "19": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 31
        }
      },
      "20": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 34
        }
      },
      "21": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "22": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 83
        }
      },
      "23": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 51
        }
      },
      "24": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 94,
          column: 17
        }
      },
      "25": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 40
        }
      },
      "26": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 104
        }
      },
      "27": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 102,
          column: 18
        }
      },
      "28": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 39
        }
      },
      "29": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "30": {
        start: {
          line: 108,
          column: 28
        },
        end: {
          line: 119,
          column: 13
        }
      },
      "31": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 45
        }
      },
      "32": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 124,
          column: 13
        }
      },
      "33": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 68
        }
      },
      "34": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 48
        }
      },
      "35": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 55
        }
      },
      "36": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 107
        }
      },
      "37": {
        start: {
          line: 136,
          column: 26
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "38": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 45
        }
      },
      "39": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "40": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 67
        }
      },
      "41": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 49
        }
      },
      "42": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 55
        }
      },
      "43": {
        start: {
          line: 153,
          column: 27
        },
        end: {
          line: 156,
          column: 9
        }
      },
      "44": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 47
        }
      },
      "45": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 161,
          column: 9
        }
      },
      "46": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 70
        }
      },
      "47": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 44
        }
      },
      "48": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 57
        }
      },
      "49": {
        start: {
          line: 170,
          column: 26
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "50": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 45
        }
      },
      "51": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "52": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 68
        }
      },
      "53": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 48
        }
      },
      "54": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 55
        }
      },
      "55": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "56": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 191
        }
      },
      "57": {
        start: {
          line: 190,
          column: 15
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "58": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 185
        }
      },
      "59": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "60": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 193
        }
      },
      "61": {
        start: {
          line: 196,
          column: 15
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "62": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 187
        }
      },
      "63": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "64": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 187
        }
      },
      "65": {
        start: {
          line: 202,
          column: 15
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "66": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 181
        }
      },
      "67": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 210,
          column: 9
        }
      },
      "68": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 203
        }
      },
      "69": {
        start: {
          line: 208,
          column: 15
        },
        end: {
          line: 210,
          column: 9
        }
      },
      "70": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 197
        }
      },
      "71": {
        start: {
          line: 215,
          column: 34
        },
        end: {
          line: 215,
          column: 49
        }
      },
      "72": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 221,
          column: 9
        }
      },
      "73": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 125
        }
      },
      "74": {
        start: {
          line: 219,
          column: 15
        },
        end: {
          line: 221,
          column: 9
        }
      },
      "75": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 137
        }
      },
      "76": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "77": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 125
        }
      },
      "78": {
        start: {
          line: 225,
          column: 15
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "79": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 137
        }
      },
      "80": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 233,
          column: 9
        }
      },
      "81": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 230,
          column: 123
        }
      },
      "82": {
        start: {
          line: 231,
          column: 15
        },
        end: {
          line: 233,
          column: 9
        }
      },
      "83": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 135
        }
      },
      "84": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 240,
          column: 9
        }
      },
      "85": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 212
        }
      },
      "86": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 245,
          column: 9
        }
      },
      "87": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 167
        }
      },
      "88": {
        start: {
          line: 243,
          column: 15
        },
        end: {
          line: 245,
          column: 9
        }
      },
      "89": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 244,
          column: 174
        }
      },
      "90": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 252,
          column: 9
        }
      },
      "91": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 176
        }
      },
      "92": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "93": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 158
        }
      },
      "94": {
        start: {
          line: 260,
          column: 24
        },
        end: {
          line: 260,
          column: 57
        }
      },
      "95": {
        start: {
          line: 261,
          column: 22
        },
        end: {
          line: 272,
          column: 9
        }
      },
      "96": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 273,
          column: 40
        }
      },
      "97": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 275,
          column: 47
        }
      },
      "98": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 283,
          column: 11
        }
      },
      "99": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 285,
          column: 39
        }
      },
      "100": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 290,
          column: 39
        }
      },
      "101": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 293,
          column: 10
        }
      },
      "102": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 292,
          column: 46
        }
      },
      "103": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 308,
          column: 11
        }
      },
      "104": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 307,
          column: 13
        }
      },
      "105": {
        start: {
          line: 300,
          column: 16
        },
        end: {
          line: 304,
          column: 19
        }
      },
      "106": {
        start: {
          line: 306,
          column: 16
        },
        end: {
          line: 306,
          column: 106
        }
      },
      "107": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 327,
          column: 10
        }
      },
      "108": {
        start: {
          line: 326,
          column: 65
        },
        end: {
          line: 326,
          column: 76
        }
      },
      "109": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 335,
          column: 10
        }
      },
      "110": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 336,
          column: 94
        }
      },
      "111": {
        start: {
          line: 341,
          column: 22
        },
        end: {
          line: 341,
          column: 46
        }
      },
      "112": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 348,
          column: 9
        }
      },
      "113": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 343,
          column: 34
        }
      },
      "114": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 344,
          column: 42
        }
      },
      "115": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 345,
          column: 59
        }
      },
      "116": {
        start: {
          line: 346,
          column: 12
        },
        end: {
          line: 346,
          column: 94
        }
      },
      "117": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 347,
          column: 24
        }
      },
      "118": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 349,
          column: 21
        }
      },
      "119": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 371,
          column: 9
        }
      },
      "120": {
        start: {
          line: 355,
          column: 30
        },
        end: {
          line: 355,
          column: 40
        }
      },
      "121": {
        start: {
          line: 357,
          column: 12
        },
        end: {
          line: 359,
          column: 13
        }
      },
      "122": {
        start: {
          line: 358,
          column: 16
        },
        end: {
          line: 358,
          column: 115
        }
      },
      "123": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 362,
          column: 13
        }
      },
      "124": {
        start: {
          line: 361,
          column: 16
        },
        end: {
          line: 361,
          column: 118
        }
      },
      "125": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 365,
          column: 13
        }
      },
      "126": {
        start: {
          line: 364,
          column: 16
        },
        end: {
          line: 364,
          column: 113
        }
      },
      "127": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 368,
          column: 13
        }
      },
      "128": {
        start: {
          line: 367,
          column: 16
        },
        end: {
          line: 367,
          column: 117
        }
      },
      "129": {
        start: {
          line: 370,
          column: 12
        },
        end: {
          line: 370,
          column: 107
        }
      },
      "130": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 380,
          column: 9
        }
      },
      "131": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 90
        }
      },
      "132": {
        start: {
          line: 379,
          column: 12
        },
        end: {
          line: 379,
          column: 98
        }
      },
      "133": {
        start: {
          line: 387,
          column: 26
        },
        end: {
          line: 387,
          column: 58
        }
      },
      "134": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 390,
          column: 9
        }
      },
      "135": {
        start: {
          line: 389,
          column: 12
        },
        end: {
          line: 389,
          column: 21
        }
      },
      "136": {
        start: {
          line: 391,
          column: 22
        },
        end: {
          line: 391,
          column: 83
        }
      },
      "137": {
        start: {
          line: 391,
          column: 54
        },
        end: {
          line: 391,
          column: 79
        }
      },
      "138": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 392,
          column: 40
        }
      },
      "139": {
        start: {
          line: 396,
          column: 20
        },
        end: {
          line: 396,
          column: 30
        }
      },
      "140": {
        start: {
          line: 397,
          column: 29
        },
        end: {
          line: 397,
          column: 40
        }
      },
      "141": {
        start: {
          line: 398,
          column: 31
        },
        end: {
          line: 398,
          column: 92
        }
      },
      "142": {
        start: {
          line: 398,
          column: 65
        },
        end: {
          line: 398,
          column: 91
        }
      },
      "143": {
        start: {
          line: 399,
          column: 8
        },
        end: {
          line: 399,
          column: 42
        }
      },
      "144": {
        start: {
          line: 402,
          column: 26
        },
        end: {
          line: 402,
          column: 59
        }
      },
      "145": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 405,
          column: 9
        }
      },
      "146": {
        start: {
          line: 404,
          column: 12
        },
        end: {
          line: 404,
          column: 21
        }
      },
      "147": {
        start: {
          line: 406,
          column: 23
        },
        end: {
          line: 406,
          column: 72
        }
      },
      "148": {
        start: {
          line: 406,
          column: 45
        },
        end: {
          line: 406,
          column: 64
        }
      },
      "149": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 407,
          column: 41
        }
      },
      "150": {
        start: {
          line: 411,
          column: 8
        },
        end: {
          line: 411,
          column: 35
        }
      },
      "151": {
        start: {
          line: 415,
          column: 8
        },
        end: {
          line: 418,
          column: 9
        }
      },
      "152": {
        start: {
          line: 416,
          column: 29
        },
        end: {
          line: 416,
          column: 50
        }
      },
      "153": {
        start: {
          line: 417,
          column: 12
        },
        end: {
          line: 417,
          column: 58
        }
      },
      "154": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 419,
          column: 35
        }
      },
      "155": {
        start: {
          line: 423,
          column: 8
        },
        end: {
          line: 423,
          column: 52
        }
      },
      "156": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 427,
          column: 46
        }
      },
      "157": {
        start: {
          line: 431,
          column: 8
        },
        end: {
          line: 431,
          column: 41
        }
      },
      "158": {
        start: {
          line: 435,
          column: 8
        },
        end: {
          line: 435,
          column: 50
        }
      },
      "159": {
        start: {
          line: 440,
          column: 8
        },
        end: {
          line: 442,
          column: 9
        }
      },
      "160": {
        start: {
          line: 441,
          column: 12
        },
        end: {
          line: 441,
          column: 51
        }
      },
      "161": {
        start: {
          line: 443,
          column: 8
        },
        end: {
          line: 445,
          column: 9
        }
      },
      "162": {
        start: {
          line: 444,
          column: 12
        },
        end: {
          line: 444,
          column: 46
        }
      },
      "163": {
        start: {
          line: 446,
          column: 8
        },
        end: {
          line: 446,
          column: 33
        }
      },
      "164": {
        start: {
          line: 449,
          column: 35
        },
        end: {
          line: 449,
          column: 75
        }
      },
      "165": {
        start: {
          line: 450,
          column: 32
        },
        end: {
          line: 490,
          column: 1
        }
      },
      "166": {
        start: {
          line: 454,
          column: 8
        },
        end: {
          line: 454,
          column: 59
        }
      },
      "167": {
        start: {
          line: 459,
          column: 8
        },
        end: {
          line: 459,
          column: 61
        }
      },
      "168": {
        start: {
          line: 464,
          column: 8
        },
        end: {
          line: 464,
          column: 66
        }
      },
      "169": {
        start: {
          line: 469,
          column: 24
        },
        end: {
          line: 469,
          column: 70
        }
      },
      "170": {
        start: {
          line: 470,
          column: 30
        },
        end: {
          line: 470,
          column: 75
        }
      },
      "171": {
        start: {
          line: 471,
          column: 8
        },
        end: {
          line: 479,
          column: 9
        }
      },
      "172": {
        start: {
          line: 472,
          column: 12
        },
        end: {
          line: 478,
          column: 14
        }
      },
      "173": {
        start: {
          line: 480,
          column: 29
        },
        end: {
          line: 480,
          column: 50
        }
      },
      "174": {
        start: {
          line: 481,
          column: 24
        },
        end: {
          line: 481,
          column: 113
        }
      },
      "175": {
        start: {
          line: 482,
          column: 8
        },
        end: {
          line: 488,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 30
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 35
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 38
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 38
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 17
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 71
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        loc: {
          start: {
            line: 83,
            column: 25
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 83
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 91,
            column: 6
          },
          end: {
            line: 91,
            column: 7
          }
        },
        loc: {
          start: {
            line: 91,
            column: 24
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 91
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 92,
            column: 46
          },
          end: {
            line: 92,
            column: 47
          }
        },
        loc: {
          start: {
            line: 92,
            column: 50
          },
          end: {
            line: 94,
            column: 9
          }
        },
        line: 92
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 99,
            column: 6
          },
          end: {
            line: 99,
            column: 7
          }
        },
        loc: {
          start: {
            line: 99,
            column: 27
          },
          end: {
            line: 103,
            column: 5
          }
        },
        line: 99
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 100,
            column: 41
          },
          end: {
            line: 100,
            column: 42
          }
        },
        loc: {
          start: {
            line: 100,
            column: 45
          },
          end: {
            line: 102,
            column: 9
          }
        },
        line: 100
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 106,
            column: 6
          },
          end: {
            line: 106,
            column: 7
          }
        },
        loc: {
          start: {
            line: 106,
            column: 35
          },
          end: {
            line: 132,
            column: 5
          }
        },
        line: 106
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 135,
            column: 6
          },
          end: {
            line: 135,
            column: 7
          }
        },
        loc: {
          start: {
            line: 135,
            column: 30
          },
          end: {
            line: 149,
            column: 5
          }
        },
        line: 135
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 152,
            column: 6
          },
          end: {
            line: 152,
            column: 7
          }
        },
        loc: {
          start: {
            line: 152,
            column: 32
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 152
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 169,
            column: 6
          },
          end: {
            line: 169,
            column: 7
          }
        },
        loc: {
          start: {
            line: 169,
            column: 37
          },
          end: {
            line: 183,
            column: 5
          }
        },
        line: 169
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 186,
            column: 6
          },
          end: {
            line: 186,
            column: 7
          }
        },
        loc: {
          start: {
            line: 186,
            column: 37
          },
          end: {
            line: 211,
            column: 5
          }
        },
        line: 186
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 214,
            column: 6
          },
          end: {
            line: 214,
            column: 7
          }
        },
        loc: {
          start: {
            line: 214,
            column: 39
          },
          end: {
            line: 234,
            column: 5
          }
        },
        line: 214
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 237,
            column: 6
          },
          end: {
            line: 237,
            column: 7
          }
        },
        loc: {
          start: {
            line: 237,
            column: 34
          },
          end: {
            line: 246,
            column: 5
          }
        },
        line: 237
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 249,
            column: 6
          },
          end: {
            line: 249,
            column: 7
          }
        },
        loc: {
          start: {
            line: 249,
            column: 39
          },
          end: {
            line: 256,
            column: 5
          }
        },
        line: 249
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 259,
            column: 6
          },
          end: {
            line: 259,
            column: 7
          }
        },
        loc: {
          start: {
            line: 259,
            column: 75
          },
          end: {
            line: 286,
            column: 5
          }
        },
        line: 259
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 289,
            column: 6
          },
          end: {
            line: 289,
            column: 7
          }
        },
        loc: {
          start: {
            line: 289,
            column: 26
          },
          end: {
            line: 294,
            column: 5
          }
        },
        line: 289
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 291,
            column: 15
          },
          end: {
            line: 291,
            column: 16
          }
        },
        loc: {
          start: {
            line: 291,
            column: 19
          },
          end: {
            line: 293,
            column: 9
          }
        },
        line: 291
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 297,
            column: 6
          },
          end: {
            line: 297,
            column: 7
          }
        },
        loc: {
          start: {
            line: 297,
            column: 36
          },
          end: {
            line: 309,
            column: 5
          }
        },
        line: 297
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 298,
            column: 33
          },
          end: {
            line: 298,
            column: 34
          }
        },
        loc: {
          start: {
            line: 298,
            column: 45
          },
          end: {
            line: 308,
            column: 9
          }
        },
        line: 298
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 312,
            column: 6
          },
          end: {
            line: 312,
            column: 7
          }
        },
        loc: {
          start: {
            line: 312,
            column: 26
          },
          end: {
            line: 328,
            column: 5
          }
        },
        line: 312
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 326,
            column: 60
          },
          end: {
            line: 326,
            column: 61
          }
        },
        loc: {
          start: {
            line: 326,
            column: 65
          },
          end: {
            line: 326,
            column: 76
          }
        },
        line: 326
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 331,
            column: 6
          },
          end: {
            line: 331,
            column: 7
          }
        },
        loc: {
          start: {
            line: 331,
            column: 38
          },
          end: {
            line: 337,
            column: 5
          }
        },
        line: 331
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 340,
            column: 6
          },
          end: {
            line: 340,
            column: 7
          }
        },
        loc: {
          start: {
            line: 340,
            column: 28
          },
          end: {
            line: 350,
            column: 5
          }
        },
        line: 340
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 353,
            column: 6
          },
          end: {
            line: 353,
            column: 7
          }
        },
        loc: {
          start: {
            line: 353,
            column: 34
          },
          end: {
            line: 372,
            column: 5
          }
        },
        line: 353
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 375,
            column: 6
          },
          end: {
            line: 375,
            column: 7
          }
        },
        loc: {
          start: {
            line: 375,
            column: 32
          },
          end: {
            line: 381,
            column: 5
          }
        },
        line: 375
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 385,
            column: 4
          },
          end: {
            line: 385,
            column: 5
          }
        },
        loc: {
          start: {
            line: 385,
            column: 35
          },
          end: {
            line: 393,
            column: 5
          }
        },
        line: 385
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 391,
            column: 39
          },
          end: {
            line: 391,
            column: 40
          }
        },
        loc: {
          start: {
            line: 391,
            column: 54
          },
          end: {
            line: 391,
            column: 79
          }
        },
        line: 391
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 394,
            column: 4
          },
          end: {
            line: 394,
            column: 5
          }
        },
        loc: {
          start: {
            line: 394,
            column: 33
          },
          end: {
            line: 400,
            column: 5
          }
        },
        line: 394
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 398,
            column: 60
          },
          end: {
            line: 398,
            column: 61
          }
        },
        loc: {
          start: {
            line: 398,
            column: 65
          },
          end: {
            line: 398,
            column: 91
          }
        },
        line: 398
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 401,
            column: 4
          },
          end: {
            line: 401,
            column: 5
          }
        },
        loc: {
          start: {
            line: 401,
            column: 32
          },
          end: {
            line: 408,
            column: 5
          }
        },
        line: 401
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 406,
            column: 40
          },
          end: {
            line: 406,
            column: 41
          }
        },
        loc: {
          start: {
            line: 406,
            column: 45
          },
          end: {
            line: 406,
            column: 64
          }
        },
        line: 406
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 409,
            column: 4
          },
          end: {
            line: 409,
            column: 5
          }
        },
        loc: {
          start: {
            line: 409,
            column: 24
          },
          end: {
            line: 412,
            column: 5
          }
        },
        line: 409
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 413,
            column: 4
          },
          end: {
            line: 413,
            column: 5
          }
        },
        loc: {
          start: {
            line: 413,
            column: 27
          },
          end: {
            line: 420,
            column: 5
          }
        },
        line: 413
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 421,
            column: 4
          },
          end: {
            line: 421,
            column: 5
          }
        },
        loc: {
          start: {
            line: 421,
            column: 33
          },
          end: {
            line: 424,
            column: 5
          }
        },
        line: 421
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 425,
            column: 4
          },
          end: {
            line: 425,
            column: 5
          }
        },
        loc: {
          start: {
            line: 425,
            column: 25
          },
          end: {
            line: 428,
            column: 5
          }
        },
        line: 425
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 429,
            column: 4
          },
          end: {
            line: 429,
            column: 5
          }
        },
        loc: {
          start: {
            line: 429,
            column: 28
          },
          end: {
            line: 432,
            column: 5
          }
        },
        line: 429
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 433,
            column: 4
          },
          end: {
            line: 433,
            column: 5
          }
        },
        loc: {
          start: {
            line: 433,
            column: 36
          },
          end: {
            line: 436,
            column: 5
          }
        },
        line: 433
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 439,
            column: 6
          },
          end: {
            line: 439,
            column: 7
          }
        },
        loc: {
          start: {
            line: 439,
            column: 16
          },
          end: {
            line: 447,
            column: 5
          }
        },
        line: 439
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 453,
            column: 6
          },
          end: {
            line: 453,
            column: 7
          }
        },
        loc: {
          start: {
            line: 453,
            column: 31
          },
          end: {
            line: 455,
            column: 5
          }
        },
        line: 453
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 458,
            column: 6
          },
          end: {
            line: 458,
            column: 7
          }
        },
        loc: {
          start: {
            line: 458,
            column: 30
          },
          end: {
            line: 460,
            column: 5
          }
        },
        line: 458
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 463,
            column: 6
          },
          end: {
            line: 463,
            column: 7
          }
        },
        loc: {
          start: {
            line: 463,
            column: 36
          },
          end: {
            line: 465,
            column: 5
          }
        },
        line: 463
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 468,
            column: 6
          },
          end: {
            line: 468,
            column: 7
          }
        },
        loc: {
          start: {
            line: 468,
            column: 26
          },
          end: {
            line: 489,
            column: 5
          }
        },
        line: 468
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "1": {
        loc: {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "2": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "3": {
        loc: {
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "4": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "5": {
        loc: {
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        }, {
          start: {
            line: 190,
            column: 15
          },
          end: {
            line: 192,
            column: 9
          }
        }],
        line: 188
      },
      "6": {
        loc: {
          start: {
            line: 190,
            column: 15
          },
          end: {
            line: 192,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 15
          },
          end: {
            line: 192,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "7": {
        loc: {
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        }, {
          start: {
            line: 196,
            column: 15
          },
          end: {
            line: 198,
            column: 9
          }
        }],
        line: 194
      },
      "8": {
        loc: {
          start: {
            line: 196,
            column: 15
          },
          end: {
            line: 198,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 15
          },
          end: {
            line: 198,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "9": {
        loc: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        }, {
          start: {
            line: 202,
            column: 15
          },
          end: {
            line: 204,
            column: 9
          }
        }],
        line: 200
      },
      "10": {
        loc: {
          start: {
            line: 202,
            column: 15
          },
          end: {
            line: 204,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 15
          },
          end: {
            line: 204,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "11": {
        loc: {
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 210,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 210,
            column: 9
          }
        }, {
          start: {
            line: 208,
            column: 15
          },
          end: {
            line: 210,
            column: 9
          }
        }],
        line: 206
      },
      "12": {
        loc: {
          start: {
            line: 208,
            column: 15
          },
          end: {
            line: 210,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 15
          },
          end: {
            line: 210,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "13": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        }, {
          start: {
            line: 219,
            column: 15
          },
          end: {
            line: 221,
            column: 9
          }
        }],
        line: 217
      },
      "14": {
        loc: {
          start: {
            line: 219,
            column: 15
          },
          end: {
            line: 221,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 15
          },
          end: {
            line: 221,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "15": {
        loc: {
          start: {
            line: 223,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        }, {
          start: {
            line: 225,
            column: 15
          },
          end: {
            line: 227,
            column: 9
          }
        }],
        line: 223
      },
      "16": {
        loc: {
          start: {
            line: 225,
            column: 15
          },
          end: {
            line: 227,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 15
          },
          end: {
            line: 227,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "17": {
        loc: {
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        }, {
          start: {
            line: 231,
            column: 15
          },
          end: {
            line: 233,
            column: 9
          }
        }],
        line: 229
      },
      "18": {
        loc: {
          start: {
            line: 231,
            column: 15
          },
          end: {
            line: 233,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 15
          },
          end: {
            line: 233,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      },
      "19": {
        loc: {
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 240,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 240,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "20": {
        loc: {
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        }, {
          start: {
            line: 243,
            column: 15
          },
          end: {
            line: 245,
            column: 9
          }
        }],
        line: 241
      },
      "21": {
        loc: {
          start: {
            line: 243,
            column: 15
          },
          end: {
            line: 245,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 15
          },
          end: {
            line: 245,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "22": {
        loc: {
          start: {
            line: 250,
            column: 8
          },
          end: {
            line: 252,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 250,
            column: 8
          },
          end: {
            line: 252,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 250
      },
      "23": {
        loc: {
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      },
      "24": {
        loc: {
          start: {
            line: 342,
            column: 8
          },
          end: {
            line: 348,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 342,
            column: 8
          },
          end: {
            line: 348,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 342
      },
      "25": {
        loc: {
          start: {
            line: 342,
            column: 12
          },
          end: {
            line: 342,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 342,
            column: 12
          },
          end: {
            line: 342,
            column: 17
          }
        }, {
          start: {
            line: 342,
            column: 21
          },
          end: {
            line: 342,
            column: 36
          }
        }],
        line: 342
      },
      "26": {
        loc: {
          start: {
            line: 357,
            column: 12
          },
          end: {
            line: 359,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 357,
            column: 12
          },
          end: {
            line: 359,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 357
      },
      "27": {
        loc: {
          start: {
            line: 360,
            column: 12
          },
          end: {
            line: 362,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 360,
            column: 12
          },
          end: {
            line: 362,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 360
      },
      "28": {
        loc: {
          start: {
            line: 363,
            column: 12
          },
          end: {
            line: 365,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 363,
            column: 12
          },
          end: {
            line: 365,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 363
      },
      "29": {
        loc: {
          start: {
            line: 366,
            column: 12
          },
          end: {
            line: 368,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 366,
            column: 12
          },
          end: {
            line: 368,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 366
      },
      "30": {
        loc: {
          start: {
            line: 388,
            column: 8
          },
          end: {
            line: 390,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 388,
            column: 8
          },
          end: {
            line: 390,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 388
      },
      "31": {
        loc: {
          start: {
            line: 403,
            column: 8
          },
          end: {
            line: 405,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 403,
            column: 8
          },
          end: {
            line: 405,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 403
      },
      "32": {
        loc: {
          start: {
            line: 415,
            column: 8
          },
          end: {
            line: 418,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 415,
            column: 8
          },
          end: {
            line: 418,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 415
      },
      "33": {
        loc: {
          start: {
            line: 440,
            column: 8
          },
          end: {
            line: 442,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 440,
            column: 8
          },
          end: {
            line: 442,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 440
      },
      "34": {
        loc: {
          start: {
            line: 443,
            column: 8
          },
          end: {
            line: 445,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 443,
            column: 8
          },
          end: {
            line: 445,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 443
      },
      "35": {
        loc: {
          start: {
            line: 471,
            column: 8
          },
          end: {
            line: 479,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 471,
            column: 8
          },
          end: {
            line: 479,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 471
      },
      "36": {
        loc: {
          start: {
            line: 481,
            column: 24
          },
          end: {
            line: 481,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 481,
            column: 24
          },
          end: {
            line: 481,
            column: 42
          }
        }, {
          start: {
            line: 481,
            column: 46
          },
          end: {
            line: 481,
            column: 79
          }
        }, {
          start: {
            line: 481,
            column: 83
          },
          end: {
            line: 481,
            column: 113
          }
        }],
        line: 481
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\monitoring\\real-time-performance-monitor.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - REAL-TIME PERFORMANCE MONITOR\r\n// ===================================\r\n\r\nimport { logger, LogCategory } from '../enterprise/logger';\r\nimport { getRedisClient } from '../integrations/redis';\r\n\r\n/**\r\n * M\xE9tricas de performance en tiempo real\r\n */\r\nexport interface RealTimeMetrics {\r\n  timestamp: number;\r\n  responseTime: number;\r\n  throughput: number;\r\n  errorRate: number;\r\n  cpuUsage: number;\r\n  memoryUsage: number;\r\n  activeConnections: number;\r\n  queueSize: number;\r\n  cacheHitRate: number;\r\n  dbConnectionPool: number;\r\n}\r\n\r\n/**\r\n * Core Web Vitals en tiempo real\r\n */\r\nexport interface CoreWebVitals {\r\n  lcp: number;        // Largest Contentful Paint\r\n  fid: number;        // First Input Delay\r\n  cls: number;        // Cumulative Layout Shift\r\n  fcp: number;        // First Contentful Paint\r\n  ttfb: number;       // Time to First Byte\r\n  inp: number;        // Interaction to Next Paint\r\n  timestamp: number;\r\n}\r\n\r\n/**\r\n * M\xE9tricas de API en tiempo real\r\n */\r\nexport interface APIMetrics {\r\n  endpoint: string;\r\n  method: string;\r\n  responseTime: number;\r\n  statusCode: number;\r\n  requestSize: number;\r\n  responseSize: number;\r\n  userAgent: string;\r\n  ip: string;\r\n  timestamp: number;\r\n}\r\n\r\n/**\r\n * M\xE9tricas de base de datos\r\n */\r\nexport interface DatabaseMetrics {\r\n  queryTime: number;\r\n  queryType: 'SELECT' | 'INSERT' | 'UPDATE' | 'DELETE';\r\n  tableName: string;\r\n  rowsAffected: number;\r\n  connectionPoolSize: number;\r\n  activeConnections: number;\r\n  waitingConnections: number;\r\n  timestamp: number;\r\n}\r\n\r\n/**\r\n * Alertas de performance\r\n */\r\nexport interface PerformanceAlert {\r\n  id: string;\r\n  type: 'performance' | 'error' | 'capacity' | 'availability';\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  metric: string;\r\n  value: number;\r\n  threshold: number;\r\n  message: string;\r\n  timestamp: number;\r\n  resolved: boolean;\r\n  resolvedAt?: number;\r\n  escalated: boolean;\r\n  escalatedAt?: number;\r\n}\r\n\r\n/**\r\n * Configuraci\xF3n de umbrales\r\n */\r\nexport interface PerformanceThresholds {\r\n  responseTime: {\r\n    warning: number;\r\n    critical: number;\r\n  };\r\n  errorRate: {\r\n    warning: number;\r\n    critical: number;\r\n  };\r\n  cpuUsage: {\r\n    warning: number;\r\n    critical: number;\r\n  };\r\n  memoryUsage: {\r\n    warning: number;\r\n    critical: number;\r\n  };\r\n  coreWebVitals: {\r\n    lcp: { good: number; poor: number };\r\n    fid: { good: number; poor: number };\r\n    cls: { good: number; poor: number };\r\n    fcp: { good: number; poor: number };\r\n    ttfb: { good: number; poor: number };\r\n  };\r\n}\r\n\r\n/**\r\n * Configuraci\xF3n por defecto de umbrales\r\n */\r\nexport const DEFAULT_THRESHOLDS: PerformanceThresholds = {\r\n  responseTime: {\r\n    warning: 1000,    // 1 segundo\r\n    critical: 3000    // 3 segundos\r\n  },\r\n  errorRate: {\r\n    warning: 0.05,    // 5%\r\n    critical: 0.10    // 10%\r\n  },\r\n  cpuUsage: {\r\n    warning: 0.70,    // 70%\r\n    critical: 0.90    // 90%\r\n  },\r\n  memoryUsage: {\r\n    warning: 0.80,    // 80%\r\n    critical: 0.95    // 95%\r\n  },\r\n  coreWebVitals: {\r\n    lcp: { good: 2500, poor: 4000 },\r\n    fid: { good: 100, poor: 300 },\r\n    cls: { good: 0.1, poor: 0.25 },\r\n    fcp: { good: 1800, poor: 3000 },\r\n    ttfb: { good: 800, poor: 1800 }\r\n  }\r\n};\r\n\r\n/**\r\n * Monitor de performance en tiempo real\r\n */\r\nexport class RealTimePerformanceMonitor {\r\n  private static instance: RealTimePerformanceMonitor;\r\n  private redis = getRedisClient();\r\n  private thresholds: PerformanceThresholds = DEFAULT_THRESHOLDS;\r\n  private alerts: Map<string, PerformanceAlert> = new Map();\r\n  private metricsBuffer: RealTimeMetrics[] = [];\r\n  private webVitalsBuffer: CoreWebVitals[] = [];\r\n  private apiMetricsBuffer: APIMetrics[] = [];\r\n  private dbMetricsBuffer: DatabaseMetrics[] = [];\r\n  private subscribers: Set<(data: any) => void> = new Set();\r\n  private flushInterval?: NodeJS.Timeout;\r\n  private monitoringInterval?: NodeJS.Timeout;\r\n\r\n  private constructor() {\r\n    this.startMonitoring();\r\n    this.startPeriodicFlush();\r\n  }\r\n\r\n  static getInstance(): RealTimePerformanceMonitor {\r\n    if (!RealTimePerformanceMonitor.instance) {\r\n      RealTimePerformanceMonitor.instance = new RealTimePerformanceMonitor();\r\n    }\r\n    return RealTimePerformanceMonitor.instance;\r\n  }\r\n\r\n  /**\r\n   * Inicia el monitoreo en tiempo real\r\n   */\r\n  private startMonitoring(): void {\r\n    this.monitoringInterval = setInterval(() => {\r\n      this.collectSystemMetrics();\r\n    }, 5000); // Cada 5 segundos\r\n\r\n    logger.info(LogCategory.MONITORING, 'Real-time performance monitoring started');\r\n  }\r\n\r\n  /**\r\n   * Inicia el flush peri\xF3dico de m\xE9tricas\r\n   */\r\n  private startPeriodicFlush(): void {\r\n    this.flushInterval = setInterval(() => {\r\n      this.flushMetricsToRedis();\r\n    }, 30000); // Cada 30 segundos\r\n  }\r\n\r\n  /**\r\n   * Recolecta m\xE9tricas del sistema\r\n   */\r\n  private async collectSystemMetrics(): Promise<void> {\r\n    try {\r\n      const metrics: RealTimeMetrics = {\r\n        timestamp: Date.now(),\r\n        responseTime: await this.getAverageResponseTime(),\r\n        throughput: await this.getCurrentThroughput(),\r\n        errorRate: await this.getCurrentErrorRate(),\r\n        cpuUsage: await this.getCPUUsage(),\r\n        memoryUsage: await this.getMemoryUsage(),\r\n        activeConnections: await this.getActiveConnections(),\r\n        queueSize: await this.getQueueSize(),\r\n        cacheHitRate: await this.getCacheHitRate(),\r\n        dbConnectionPool: await this.getDBConnectionPoolSize()\r\n      };\r\n\r\n      this.metricsBuffer.push(metrics);\r\n      \r\n      // Mantener solo las \xFAltimas 100 m\xE9tricas en buffer\r\n      if (this.metricsBuffer.length > 100) {\r\n        this.metricsBuffer = this.metricsBuffer.slice(-100);\r\n      }\r\n\r\n      // Verificar umbrales y generar alertas\r\n      await this.checkThresholds(metrics);\r\n\r\n      // Notificar a suscriptores\r\n      this.notifySubscribers('metrics', metrics);\r\n\r\n    } catch (error) {\r\n      logger.error(LogCategory.MONITORING, 'Error collecting system metrics', error as Error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registra m\xE9tricas de Core Web Vitals\r\n   */\r\n  recordWebVitals(vitals: Omit<CoreWebVitals, 'timestamp'>): void {\r\n    const webVitals: CoreWebVitals = {\r\n      ...vitals,\r\n      timestamp: Date.now()\r\n    };\r\n\r\n    this.webVitalsBuffer.push(webVitals);\r\n    \r\n    // Mantener solo las \xFAltimas 50 m\xE9tricas\r\n    if (this.webVitalsBuffer.length > 50) {\r\n      this.webVitalsBuffer = this.webVitalsBuffer.slice(-50);\r\n    }\r\n\r\n    // Verificar umbrales de Core Web Vitals\r\n    this.checkWebVitalsThresholds(webVitals);\r\n\r\n    // Notificar a suscriptores\r\n    this.notifySubscribers('webVitals', webVitals);\r\n  }\r\n\r\n  /**\r\n   * Registra m\xE9tricas de API\r\n   */\r\n  recordAPIMetrics(metrics: Omit<APIMetrics, 'timestamp'>): void {\r\n    const apiMetrics: APIMetrics = {\r\n      ...metrics,\r\n      timestamp: Date.now()\r\n    };\r\n\r\n    this.apiMetricsBuffer.push(apiMetrics);\r\n    \r\n    // Mantener solo las \xFAltimas 200 m\xE9tricas\r\n    if (this.apiMetricsBuffer.length > 200) {\r\n      this.apiMetricsBuffer = this.apiMetricsBuffer.slice(-200);\r\n    }\r\n\r\n    // Verificar umbrales de API\r\n    this.checkAPIThresholds(apiMetrics);\r\n\r\n    // Notificar a suscriptores\r\n    this.notifySubscribers('apiMetrics', apiMetrics);\r\n  }\r\n\r\n  /**\r\n   * Registra m\xE9tricas de base de datos\r\n   */\r\n  recordDatabaseMetrics(metrics: Omit<DatabaseMetrics, 'timestamp'>): void {\r\n    const dbMetrics: DatabaseMetrics = {\r\n      ...metrics,\r\n      timestamp: Date.now()\r\n    };\r\n\r\n    this.dbMetricsBuffer.push(dbMetrics);\r\n    \r\n    // Mantener solo las \xFAltimas 100 m\xE9tricas\r\n    if (this.dbMetricsBuffer.length > 100) {\r\n      this.dbMetricsBuffer = this.dbMetricsBuffer.slice(-100);\r\n    }\r\n\r\n    // Verificar umbrales de DB\r\n    this.checkDatabaseThresholds(dbMetrics);\r\n\r\n    // Notificar a suscriptores\r\n    this.notifySubscribers('dbMetrics', dbMetrics);\r\n  }\r\n\r\n  /**\r\n   * Verifica umbrales y genera alertas\r\n   */\r\n  private async checkThresholds(metrics: RealTimeMetrics): Promise<void> {\r\n    // Verificar tiempo de respuesta\r\n    if (metrics.responseTime > this.thresholds.responseTime.critical) {\r\n      await this.createAlert('performance', 'critical', 'responseTime', metrics.responseTime, \r\n        this.thresholds.responseTime.critical, `Response time cr\xEDtico: ${metrics.responseTime}ms`);\r\n    } else if (metrics.responseTime > this.thresholds.responseTime.warning) {\r\n      await this.createAlert('performance', 'medium', 'responseTime', metrics.responseTime, \r\n        this.thresholds.responseTime.warning, `Response time alto: ${metrics.responseTime}ms`);\r\n    }\r\n\r\n    // Verificar tasa de errores\r\n    if (metrics.errorRate > this.thresholds.errorRate.critical) {\r\n      await this.createAlert('error', 'critical', 'errorRate', metrics.errorRate, \r\n        this.thresholds.errorRate.critical, `Tasa de errores cr\xEDtica: ${(metrics.errorRate * 100).toFixed(1)}%`);\r\n    } else if (metrics.errorRate > this.thresholds.errorRate.warning) {\r\n      await this.createAlert('error', 'medium', 'errorRate', metrics.errorRate, \r\n        this.thresholds.errorRate.warning, `Tasa de errores alta: ${(metrics.errorRate * 100).toFixed(1)}%`);\r\n    }\r\n\r\n    // Verificar uso de CPU\r\n    if (metrics.cpuUsage > this.thresholds.cpuUsage.critical) {\r\n      await this.createAlert('capacity', 'critical', 'cpuUsage', metrics.cpuUsage, \r\n        this.thresholds.cpuUsage.critical, `Uso de CPU cr\xEDtico: ${(metrics.cpuUsage * 100).toFixed(1)}%`);\r\n    } else if (metrics.cpuUsage > this.thresholds.cpuUsage.warning) {\r\n      await this.createAlert('capacity', 'medium', 'cpuUsage', metrics.cpuUsage, \r\n        this.thresholds.cpuUsage.warning, `Uso de CPU alto: ${(metrics.cpuUsage * 100).toFixed(1)}%`);\r\n    }\r\n\r\n    // Verificar uso de memoria\r\n    if (metrics.memoryUsage > this.thresholds.memoryUsage.critical) {\r\n      await this.createAlert('capacity', 'critical', 'memoryUsage', metrics.memoryUsage, \r\n        this.thresholds.memoryUsage.critical, `Uso de memoria cr\xEDtico: ${(metrics.memoryUsage * 100).toFixed(1)}%`);\r\n    } else if (metrics.memoryUsage > this.thresholds.memoryUsage.warning) {\r\n      await this.createAlert('capacity', 'medium', 'memoryUsage', metrics.memoryUsage, \r\n        this.thresholds.memoryUsage.warning, `Uso de memoria alto: ${(metrics.memoryUsage * 100).toFixed(1)}%`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verifica umbrales de Core Web Vitals\r\n   */\r\n  private checkWebVitalsThresholds(vitals: CoreWebVitals): void {\r\n    const { coreWebVitals } = this.thresholds;\r\n\r\n    // Verificar LCP\r\n    if (vitals.lcp > coreWebVitals.lcp.poor) {\r\n      this.createAlert('performance', 'high', 'lcp', vitals.lcp, \r\n        coreWebVitals.lcp.poor, `LCP pobre: ${vitals.lcp}ms`);\r\n    } else if (vitals.lcp > coreWebVitals.lcp.good) {\r\n      this.createAlert('performance', 'medium', 'lcp', vitals.lcp, \r\n        coreWebVitals.lcp.good, `LCP necesita mejora: ${vitals.lcp}ms`);\r\n    }\r\n\r\n    // Verificar FID\r\n    if (vitals.fid > coreWebVitals.fid.poor) {\r\n      this.createAlert('performance', 'high', 'fid', vitals.fid, \r\n        coreWebVitals.fid.poor, `FID pobre: ${vitals.fid}ms`);\r\n    } else if (vitals.fid > coreWebVitals.fid.good) {\r\n      this.createAlert('performance', 'medium', 'fid', vitals.fid, \r\n        coreWebVitals.fid.good, `FID necesita mejora: ${vitals.fid}ms`);\r\n    }\r\n\r\n    // Verificar CLS\r\n    if (vitals.cls > coreWebVitals.cls.poor) {\r\n      this.createAlert('performance', 'high', 'cls', vitals.cls, \r\n        coreWebVitals.cls.poor, `CLS pobre: ${vitals.cls}`);\r\n    } else if (vitals.cls > coreWebVitals.cls.good) {\r\n      this.createAlert('performance', 'medium', 'cls', vitals.cls, \r\n        coreWebVitals.cls.good, `CLS necesita mejora: ${vitals.cls}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verifica umbrales de API\r\n   */\r\n  private checkAPIThresholds(metrics: APIMetrics): void {\r\n    if (metrics.responseTime > this.thresholds.responseTime.critical) {\r\n      this.createAlert('performance', 'high', 'apiResponseTime', metrics.responseTime, \r\n        this.thresholds.responseTime.critical, \r\n        `API lenta: ${metrics.method} ${metrics.endpoint} - ${metrics.responseTime}ms`);\r\n    }\r\n\r\n    if (metrics.statusCode >= 500) {\r\n      this.createAlert('error', 'high', 'apiError', metrics.statusCode, \r\n        500, `Error de servidor: ${metrics.method} ${metrics.endpoint} - ${metrics.statusCode}`);\r\n    } else if (metrics.statusCode >= 400) {\r\n      this.createAlert('error', 'medium', 'apiClientError', metrics.statusCode, \r\n        400, `Error de cliente: ${metrics.method} ${metrics.endpoint} - ${metrics.statusCode}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verifica umbrales de base de datos\r\n   */\r\n  private checkDatabaseThresholds(metrics: DatabaseMetrics): void {\r\n    if (metrics.queryTime > 5000) { // 5 segundos\r\n      this.createAlert('performance', 'high', 'slowQuery', metrics.queryTime, \r\n        5000, `Query lenta: ${metrics.queryType} en ${metrics.tableName} - ${metrics.queryTime}ms`);\r\n    }\r\n\r\n    if (metrics.waitingConnections > 10) {\r\n      this.createAlert('capacity', 'medium', 'dbConnectionWait', metrics.waitingConnections, \r\n        10, `Conexiones esperando: ${metrics.waitingConnections}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Crea una alerta\r\n   */\r\n  private async createAlert(\r\n    type: PerformanceAlert['type'],\r\n    severity: PerformanceAlert['severity'],\r\n    metric: string,\r\n    value: number,\r\n    threshold: number,\r\n    message: string\r\n  ): Promise<void> {\r\n    const alertId = `${type}_${metric}_${Date.now()}`;\r\n    \r\n    const alert: PerformanceAlert = {\r\n      id: alertId,\r\n      type,\r\n      severity,\r\n      metric,\r\n      value,\r\n      threshold,\r\n      message,\r\n      timestamp: Date.now(),\r\n      resolved: false,\r\n      escalated: false\r\n    };\r\n\r\n    this.alerts.set(alertId, alert);\r\n\r\n    // Notificar a suscriptores\r\n    this.notifySubscribers('alert', alert);\r\n\r\n    // Log de la alerta\r\n    logger.warn(LogCategory.MONITORING, `Performance alert: ${message}`, {\r\n      type,\r\n      severity,\r\n      metric,\r\n      value,\r\n      threshold\r\n    });\r\n\r\n    // Persistir en Redis\r\n    await this.persistAlert(alert);\r\n  }\r\n\r\n  /**\r\n   * Suscribirse a actualizaciones en tiempo real\r\n   */\r\n  subscribe(callback: (data: any) => void): () => void {\r\n    this.subscribers.add(callback);\r\n    \r\n    return () => {\r\n      this.subscribers.delete(callback);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Notifica a todos los suscriptores\r\n   */\r\n  private notifySubscribers(type: string, data: any): void {\r\n    this.subscribers.forEach(callback => {\r\n      try {\r\n        callback({ type, data, timestamp: Date.now() });\r\n      } catch (error) {\r\n        logger.error(LogCategory.MONITORING, 'Error notifying subscriber', error as Error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Obtiene m\xE9tricas actuales\r\n   */\r\n  getCurrentMetrics(): {\r\n    realTime: RealTimeMetrics[];\r\n    webVitals: CoreWebVitals[];\r\n    apiMetrics: APIMetrics[];\r\n    dbMetrics: DatabaseMetrics[];\r\n    alerts: PerformanceAlert[];\r\n  } {\r\n    return {\r\n      realTime: [...this.metricsBuffer],\r\n      webVitals: [...this.webVitalsBuffer],\r\n      apiMetrics: [...this.apiMetricsBuffer],\r\n      dbMetrics: [...this.dbMetricsBuffer],\r\n      alerts: Array.from(this.alerts.values()).filter(a => !a.resolved)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Actualiza umbrales\r\n   */\r\n  updateThresholds(newThresholds: Partial<PerformanceThresholds>): void {\r\n    this.thresholds = { ...this.thresholds, ...newThresholds };\r\n    logger.info(LogCategory.MONITORING, 'Performance thresholds updated');\r\n  }\r\n\r\n  /**\r\n   * Resuelve una alerta\r\n   */\r\n  resolveAlert(alertId: string): boolean {\r\n    const alert = this.alerts.get(alertId);\r\n    if (alert && !alert.resolved) {\r\n      alert.resolved = true;\r\n      alert.resolvedAt = Date.now();\r\n      \r\n      this.notifySubscribers('alertResolved', alert);\r\n      logger.info(LogCategory.MONITORING, `Alert resolved: ${alertId}`);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Flush de m\xE9tricas a Redis\r\n   */\r\n  private async flushMetricsToRedis(): Promise<void> {\r\n    try {\r\n      const timestamp = Date.now();\r\n      \r\n      // Guardar m\xE9tricas en Redis con TTL de 24 horas\r\n      if (this.metricsBuffer.length > 0) {\r\n        await this.redis.setex(\r\n          `metrics:realtime:${timestamp}`,\r\n          86400,\r\n          JSON.stringify(this.metricsBuffer)\r\n        );\r\n      }\r\n\r\n      if (this.webVitalsBuffer.length > 0) {\r\n        await this.redis.setex(\r\n          `metrics:webvitals:${timestamp}`,\r\n          86400,\r\n          JSON.stringify(this.webVitalsBuffer)\r\n        );\r\n      }\r\n\r\n      if (this.apiMetricsBuffer.length > 0) {\r\n        await this.redis.setex(\r\n          `metrics:api:${timestamp}`,\r\n          86400,\r\n          JSON.stringify(this.apiMetricsBuffer)\r\n        );\r\n      }\r\n\r\n      if (this.dbMetricsBuffer.length > 0) {\r\n        await this.redis.setex(\r\n          `metrics:database:${timestamp}`,\r\n          86400,\r\n          JSON.stringify(this.dbMetricsBuffer)\r\n        );\r\n      }\r\n\r\n    } catch (error) {\r\n      logger.error(LogCategory.MONITORING, 'Error flushing metrics to Redis', error as Error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Persiste alerta en Redis\r\n   */\r\n  private async persistAlert(alert: PerformanceAlert): Promise<void> {\r\n    try {\r\n      await this.redis.setex(\r\n        `alert:${alert.id}`,\r\n        86400 * 7, // 7 d\xEDas\r\n        JSON.stringify(alert)\r\n      );\r\n    } catch (error) {\r\n      logger.error(LogCategory.MONITORING, 'Error persisting alert', error as Error);\r\n    }\r\n  }\r\n\r\n  // ===================================\r\n  // M\xC9TODOS DE RECOLECCI\xD3N DE M\xC9TRICAS\r\n  // ===================================\r\n\r\n  private async getAverageResponseTime(): Promise<number> {\r\n    // Calcular tiempo de respuesta promedio de las \xFAltimas m\xE9tricas de API\r\n    const recentAPI = this.apiMetricsBuffer.slice(-10);\r\n    if (recentAPI.length === 0) {return 0;}\r\n    \r\n    const total = recentAPI.reduce((sum, metric) => sum + metric.responseTime, 0);\r\n    return total / recentAPI.length;\r\n  }\r\n\r\n  private async getCurrentThroughput(): Promise<number> {\r\n    // Calcular throughput basado en requests por segundo\r\n    const now = Date.now();\r\n    const oneMinuteAgo = now - 60000;\r\n    const recentRequests = this.apiMetricsBuffer.filter(m => m.timestamp > oneMinuteAgo);\r\n    return recentRequests.length / 60; // requests por segundo\r\n  }\r\n\r\n  private async getCurrentErrorRate(): Promise<number> {\r\n    const recentAPI = this.apiMetricsBuffer.slice(-100);\r\n    if (recentAPI.length === 0) {return 0;}\r\n    \r\n    const errors = recentAPI.filter(m => m.statusCode >= 400).length;\r\n    return errors / recentAPI.length;\r\n  }\r\n\r\n  private async getCPUUsage(): Promise<number> {\r\n    // Simulaci\xF3n de uso de CPU (en implementaci\xF3n real, usar librer\xEDas del sistema)\r\n    return Math.random() * 0.8; // 0-80%\r\n  }\r\n\r\n  private async getMemoryUsage(): Promise<number> {\r\n    // Obtener uso de memoria real\r\n    if (typeof process !== 'undefined') {\r\n      const memUsage = process.memoryUsage();\r\n      return memUsage.heapUsed / memUsage.heapTotal;\r\n    }\r\n    return Math.random() * 0.7; // Fallback\r\n  }\r\n\r\n  private async getActiveConnections(): Promise<number> {\r\n    // Simulaci\xF3n de conexiones activas\r\n    return Math.floor(Math.random() * 100) + 10;\r\n  }\r\n\r\n  private async getQueueSize(): Promise<number> {\r\n    // Simulaci\xF3n de tama\xF1o de cola\r\n    return Math.floor(Math.random() * 20);\r\n  }\r\n\r\n  private async getCacheHitRate(): Promise<number> {\r\n    // Obtener hit rate del cache (integrar con cache manager)\r\n    return Math.random() * 0.3 + 0.7; // 70-100%\r\n  }\r\n\r\n  private async getDBConnectionPoolSize(): Promise<number> {\r\n    // Simulaci\xF3n de pool de conexiones DB\r\n    return Math.floor(Math.random() * 10) + 5;\r\n  }\r\n\r\n  /**\r\n   * Destructor\r\n   */\r\n  destroy(): void {\r\n    if (this.monitoringInterval) {\r\n      clearInterval(this.monitoringInterval);\r\n    }\r\n    if (this.flushInterval) {\r\n      clearInterval(this.flushInterval);\r\n    }\r\n    this.subscribers.clear();\r\n  }\r\n}\r\n\r\n// Instancia singleton\r\nexport const realTimePerformanceMonitor = RealTimePerformanceMonitor.getInstance();\r\n\r\n/**\r\n * Utilidades para monitoreo en tiempo real\r\n */\r\nexport const RealTimeMonitoringUtils = {\r\n  /**\r\n   * Registra m\xE9tricas de Web Vitals desde el cliente\r\n   */\r\n  recordWebVitals(vitals: Omit<CoreWebVitals, 'timestamp'>): void {\r\n    realTimePerformanceMonitor.recordWebVitals(vitals);\r\n  },\r\n\r\n  /**\r\n   * Registra m\xE9tricas de API\r\n   */\r\n  recordAPICall(metrics: Omit<APIMetrics, 'timestamp'>): void {\r\n    realTimePerformanceMonitor.recordAPIMetrics(metrics);\r\n  },\r\n\r\n  /**\r\n   * Registra m\xE9tricas de base de datos\r\n   */\r\n  recordDatabaseQuery(metrics: Omit<DatabaseMetrics, 'timestamp'>): void {\r\n    realTimePerformanceMonitor.recordDatabaseMetrics(metrics);\r\n  },\r\n\r\n  /**\r\n   * Obtiene resumen de estado actual\r\n   */\r\n  getCurrentStatus(): {\r\n    healthy: boolean;\r\n    activeAlerts: number;\r\n    avgResponseTime: number;\r\n    errorRate: number;\r\n    lastUpdate: number;\r\n  } {\r\n    const current = realTimePerformanceMonitor.getCurrentMetrics();\r\n    const latestMetrics = current.realTime[current.realTime.length - 1];\r\n    \r\n    if (!latestMetrics) {\r\n      return {\r\n        healthy: false,\r\n        activeAlerts: 0,\r\n        avgResponseTime: 0,\r\n        errorRate: 0,\r\n        lastUpdate: 0\r\n      };\r\n    }\r\n\r\n    const activeAlerts = current.alerts.length;\r\n    const healthy = activeAlerts === 0 && \r\n                   latestMetrics.responseTime < 2000 && \r\n                   latestMetrics.errorRate < 0.05;\r\n\r\n    return {\r\n      healthy,\r\n      activeAlerts,\r\n      avgResponseTime: latestMetrics.responseTime,\r\n      errorRate: latestMetrics.errorRate,\r\n      lastUpdate: latestMetrics.timestamp\r\n    };\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["DEFAULT_THRESHOLDS", "RealTimeMonitoringUtils", "RealTimePerformanceMonitor", "realTimePerformanceMonitor", "responseTime", "warning", "critical", "errorRate", "cpuUsage", "memoryUsage", "coreWebVitals", "lcp", "good", "poor", "fid", "cls", "fcp", "ttfb", "redis", "getRedisClient", "thresholds", "alerts", "Map", "metricsBuffer", "webVitalsBuffer", "apiMetricsBuffer", "dbMetricsBuffer", "subscribers", "Set", "startMonitoring", "startPeriodicFlush", "getInstance", "instance", "monitoringInterval", "setInterval", "collectSystemMetrics", "logger", "info", "LogCategory", "MONITORING", "flushInterval", "flushMetricsToRedis", "metrics", "timestamp", "Date", "now", "getAverageResponseTime", "throughput", "getCurrentThroughput", "getCurrentErrorRate", "getCPUUsage", "getMemoryUsage", "activeConnections", "getActiveConnections", "queueSize", "getQueueSize", "cacheHitRate", "getCacheHitRate", "dbConnectionPool", "getDBConnectionPoolSize", "push", "length", "slice", "checkThresholds", "notifySubscribers", "error", "recordWebVitals", "vitals", "webVitals", "checkWebVitalsThresholds", "recordAPIMetrics", "apiMetrics", "checkAPIThresholds", "recordDatabaseMetrics", "dbMetrics", "checkDatabaseThresholds", "createAlert", "toFixed", "method", "endpoint", "statusCode", "queryTime", "queryType", "tableName", "waitingConnections", "type", "severity", "metric", "value", "threshold", "message", "alertId", "alert", "id", "resolved", "escalated", "set", "warn", "persistAlert", "subscribe", "callback", "add", "delete", "data", "forEach", "getCurrentMetrics", "realTime", "Array", "from", "values", "filter", "a", "updateThresholds", "newThresholds", "resolveAlert", "get", "resolvedAt", "setex", "JSON", "stringify", "recentAPI", "total", "reduce", "sum", "oneMinuteAgo", "recentRequests", "m", "errors", "Math", "random", "process", "memUsage", "heapUsed", "heapTotal", "floor", "destroy", "clearInterval", "clear", "recordAPICall", "recordDatabaseQuery", "getCurrentStatus", "current", "latestMetrics", "healthy", "activeAlerts", "avgResponseTime", "lastUpdate"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8d662237f5b866868d7247d42b61141f88929382"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1nqco75e4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1nqco75e4();
cov_1nqco75e4().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1nqco75e4().f[0]++;
  cov_1nqco75e4().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1nqco75e4().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1nqco75e4().s[3]++;
_export(exports, {
  get DEFAULT_THRESHOLDS() {
    /* istanbul ignore next */
    cov_1nqco75e4().f[1]++;
    cov_1nqco75e4().s[4]++;
    return DEFAULT_THRESHOLDS;
  },
  get RealTimeMonitoringUtils() {
    /* istanbul ignore next */
    cov_1nqco75e4().f[2]++;
    cov_1nqco75e4().s[5]++;
    return RealTimeMonitoringUtils;
  },
  get RealTimePerformanceMonitor() {
    /* istanbul ignore next */
    cov_1nqco75e4().f[3]++;
    cov_1nqco75e4().s[6]++;
    return RealTimePerformanceMonitor;
  },
  get realTimePerformanceMonitor() {
    /* istanbul ignore next */
    cov_1nqco75e4().f[4]++;
    cov_1nqco75e4().s[7]++;
    return realTimePerformanceMonitor;
  }
});
const _logger =
/* istanbul ignore next */
(cov_1nqco75e4().s[8]++, require("../enterprise/logger"));
const _redis =
/* istanbul ignore next */
(cov_1nqco75e4().s[9]++, require("../integrations/redis"));
const DEFAULT_THRESHOLDS =
/* istanbul ignore next */
(cov_1nqco75e4().s[10]++, {
  responseTime: {
    warning: 1000,
    critical: 3000 // 3 segundos
  },
  errorRate: {
    warning: 0.05,
    critical: 0.10 // 10%
  },
  cpuUsage: {
    warning: 0.70,
    critical: 0.90 // 90%
  },
  memoryUsage: {
    warning: 0.80,
    critical: 0.95 // 95%
  },
  coreWebVitals: {
    lcp: {
      good: 2500,
      poor: 4000
    },
    fid: {
      good: 100,
      poor: 300
    },
    cls: {
      good: 0.1,
      poor: 0.25
    },
    fcp: {
      good: 1800,
      poor: 3000
    },
    ttfb: {
      good: 800,
      poor: 1800
    }
  }
});
class RealTimePerformanceMonitor {
  constructor() {
    /* istanbul ignore next */
    cov_1nqco75e4().f[5]++;
    cov_1nqco75e4().s[11]++;
    this.redis = (0, _redis.getRedisClient)();
    /* istanbul ignore next */
    cov_1nqco75e4().s[12]++;
    this.thresholds = DEFAULT_THRESHOLDS;
    /* istanbul ignore next */
    cov_1nqco75e4().s[13]++;
    this.alerts = new Map();
    /* istanbul ignore next */
    cov_1nqco75e4().s[14]++;
    this.metricsBuffer = [];
    /* istanbul ignore next */
    cov_1nqco75e4().s[15]++;
    this.webVitalsBuffer = [];
    /* istanbul ignore next */
    cov_1nqco75e4().s[16]++;
    this.apiMetricsBuffer = [];
    /* istanbul ignore next */
    cov_1nqco75e4().s[17]++;
    this.dbMetricsBuffer = [];
    /* istanbul ignore next */
    cov_1nqco75e4().s[18]++;
    this.subscribers = new Set();
    /* istanbul ignore next */
    cov_1nqco75e4().s[19]++;
    this.startMonitoring();
    /* istanbul ignore next */
    cov_1nqco75e4().s[20]++;
    this.startPeriodicFlush();
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_1nqco75e4().f[6]++;
    cov_1nqco75e4().s[21]++;
    if (!RealTimePerformanceMonitor.instance) {
      /* istanbul ignore next */
      cov_1nqco75e4().b[0][0]++;
      cov_1nqco75e4().s[22]++;
      RealTimePerformanceMonitor.instance = new RealTimePerformanceMonitor();
    } else
    /* istanbul ignore next */
    {
      cov_1nqco75e4().b[0][1]++;
    }
    cov_1nqco75e4().s[23]++;
    return RealTimePerformanceMonitor.instance;
  }
  /**
  * Inicia el monitoreo en tiempo real
  */
  startMonitoring() {
    /* istanbul ignore next */
    cov_1nqco75e4().f[7]++;
    cov_1nqco75e4().s[24]++;
    this.monitoringInterval = setInterval(() => {
      /* istanbul ignore next */
      cov_1nqco75e4().f[8]++;
      cov_1nqco75e4().s[25]++;
      this.collectSystemMetrics();
    }, 5000); // Cada 5 segundos
    /* istanbul ignore next */
    cov_1nqco75e4().s[26]++;
    _logger.logger.info(_logger.LogCategory.MONITORING, 'Real-time performance monitoring started');
  }
  /**
  * Inicia el flush periódico de métricas
  */
  startPeriodicFlush() {
    /* istanbul ignore next */
    cov_1nqco75e4().f[9]++;
    cov_1nqco75e4().s[27]++;
    this.flushInterval = setInterval(() => {
      /* istanbul ignore next */
      cov_1nqco75e4().f[10]++;
      cov_1nqco75e4().s[28]++;
      this.flushMetricsToRedis();
    }, 30000); // Cada 30 segundos
  }
  /**
  * Recolecta métricas del sistema
  */
  async collectSystemMetrics() {
    /* istanbul ignore next */
    cov_1nqco75e4().f[11]++;
    cov_1nqco75e4().s[29]++;
    try {
      const metrics =
      /* istanbul ignore next */
      (cov_1nqco75e4().s[30]++, {
        timestamp: Date.now(),
        responseTime: await this.getAverageResponseTime(),
        throughput: await this.getCurrentThroughput(),
        errorRate: await this.getCurrentErrorRate(),
        cpuUsage: await this.getCPUUsage(),
        memoryUsage: await this.getMemoryUsage(),
        activeConnections: await this.getActiveConnections(),
        queueSize: await this.getQueueSize(),
        cacheHitRate: await this.getCacheHitRate(),
        dbConnectionPool: await this.getDBConnectionPoolSize()
      });
      /* istanbul ignore next */
      cov_1nqco75e4().s[31]++;
      this.metricsBuffer.push(metrics);
      // Mantener solo las últimas 100 métricas en buffer
      /* istanbul ignore next */
      cov_1nqco75e4().s[32]++;
      if (this.metricsBuffer.length > 100) {
        /* istanbul ignore next */
        cov_1nqco75e4().b[1][0]++;
        cov_1nqco75e4().s[33]++;
        this.metricsBuffer = this.metricsBuffer.slice(-100);
      } else
      /* istanbul ignore next */
      {
        cov_1nqco75e4().b[1][1]++;
      }
      // Verificar umbrales y generar alertas
      cov_1nqco75e4().s[34]++;
      await this.checkThresholds(metrics);
      // Notificar a suscriptores
      /* istanbul ignore next */
      cov_1nqco75e4().s[35]++;
      this.notifySubscribers('metrics', metrics);
    } catch (error) {
      /* istanbul ignore next */
      cov_1nqco75e4().s[36]++;
      _logger.logger.error(_logger.LogCategory.MONITORING, 'Error collecting system metrics', error);
    }
  }
  /**
  * Registra métricas de Core Web Vitals
  */
  recordWebVitals(vitals) {
    /* istanbul ignore next */
    cov_1nqco75e4().f[12]++;
    const webVitals =
    /* istanbul ignore next */
    (cov_1nqco75e4().s[37]++, {
      ...vitals,
      timestamp: Date.now()
    });
    /* istanbul ignore next */
    cov_1nqco75e4().s[38]++;
    this.webVitalsBuffer.push(webVitals);
    // Mantener solo las últimas 50 métricas
    /* istanbul ignore next */
    cov_1nqco75e4().s[39]++;
    if (this.webVitalsBuffer.length > 50) {
      /* istanbul ignore next */
      cov_1nqco75e4().b[2][0]++;
      cov_1nqco75e4().s[40]++;
      this.webVitalsBuffer = this.webVitalsBuffer.slice(-50);
    } else
    /* istanbul ignore next */
    {
      cov_1nqco75e4().b[2][1]++;
    }
    // Verificar umbrales de Core Web Vitals
    cov_1nqco75e4().s[41]++;
    this.checkWebVitalsThresholds(webVitals);
    // Notificar a suscriptores
    /* istanbul ignore next */
    cov_1nqco75e4().s[42]++;
    this.notifySubscribers('webVitals', webVitals);
  }
  /**
  * Registra métricas de API
  */
  recordAPIMetrics(metrics) {
    /* istanbul ignore next */
    cov_1nqco75e4().f[13]++;
    const apiMetrics =
    /* istanbul ignore next */
    (cov_1nqco75e4().s[43]++, {
      ...metrics,
      timestamp: Date.now()
    });
    /* istanbul ignore next */
    cov_1nqco75e4().s[44]++;
    this.apiMetricsBuffer.push(apiMetrics);
    // Mantener solo las últimas 200 métricas
    /* istanbul ignore next */
    cov_1nqco75e4().s[45]++;
    if (this.apiMetricsBuffer.length > 200) {
      /* istanbul ignore next */
      cov_1nqco75e4().b[3][0]++;
      cov_1nqco75e4().s[46]++;
      this.apiMetricsBuffer = this.apiMetricsBuffer.slice(-200);
    } else
    /* istanbul ignore next */
    {
      cov_1nqco75e4().b[3][1]++;
    }
    // Verificar umbrales de API
    cov_1nqco75e4().s[47]++;
    this.checkAPIThresholds(apiMetrics);
    // Notificar a suscriptores
    /* istanbul ignore next */
    cov_1nqco75e4().s[48]++;
    this.notifySubscribers('apiMetrics', apiMetrics);
  }
  /**
  * Registra métricas de base de datos
  */
  recordDatabaseMetrics(metrics) {
    /* istanbul ignore next */
    cov_1nqco75e4().f[14]++;
    const dbMetrics =
    /* istanbul ignore next */
    (cov_1nqco75e4().s[49]++, {
      ...metrics,
      timestamp: Date.now()
    });
    /* istanbul ignore next */
    cov_1nqco75e4().s[50]++;
    this.dbMetricsBuffer.push(dbMetrics);
    // Mantener solo las últimas 100 métricas
    /* istanbul ignore next */
    cov_1nqco75e4().s[51]++;
    if (this.dbMetricsBuffer.length > 100) {
      /* istanbul ignore next */
      cov_1nqco75e4().b[4][0]++;
      cov_1nqco75e4().s[52]++;
      this.dbMetricsBuffer = this.dbMetricsBuffer.slice(-100);
    } else
    /* istanbul ignore next */
    {
      cov_1nqco75e4().b[4][1]++;
    }
    // Verificar umbrales de DB
    cov_1nqco75e4().s[53]++;
    this.checkDatabaseThresholds(dbMetrics);
    // Notificar a suscriptores
    /* istanbul ignore next */
    cov_1nqco75e4().s[54]++;
    this.notifySubscribers('dbMetrics', dbMetrics);
  }
  /**
  * Verifica umbrales y genera alertas
  */
  async checkThresholds(metrics) {
    /* istanbul ignore next */
    cov_1nqco75e4().f[15]++;
    cov_1nqco75e4().s[55]++;
    // Verificar tiempo de respuesta
    if (metrics.responseTime > this.thresholds.responseTime.critical) {
      /* istanbul ignore next */
      cov_1nqco75e4().b[5][0]++;
      cov_1nqco75e4().s[56]++;
      await this.createAlert('performance', 'critical', 'responseTime', metrics.responseTime, this.thresholds.responseTime.critical, `Response time crítico: ${metrics.responseTime}ms`);
    } else {
      /* istanbul ignore next */
      cov_1nqco75e4().b[5][1]++;
      cov_1nqco75e4().s[57]++;
      if (metrics.responseTime > this.thresholds.responseTime.warning) {
        /* istanbul ignore next */
        cov_1nqco75e4().b[6][0]++;
        cov_1nqco75e4().s[58]++;
        await this.createAlert('performance', 'medium', 'responseTime', metrics.responseTime, this.thresholds.responseTime.warning, `Response time alto: ${metrics.responseTime}ms`);
      } else
      /* istanbul ignore next */
      {
        cov_1nqco75e4().b[6][1]++;
      }
    }
    // Verificar tasa de errores
    /* istanbul ignore next */
    cov_1nqco75e4().s[59]++;
    if (metrics.errorRate > this.thresholds.errorRate.critical) {
      /* istanbul ignore next */
      cov_1nqco75e4().b[7][0]++;
      cov_1nqco75e4().s[60]++;
      await this.createAlert('error', 'critical', 'errorRate', metrics.errorRate, this.thresholds.errorRate.critical, `Tasa de errores crítica: ${(metrics.errorRate * 100).toFixed(1)}%`);
    } else {
      /* istanbul ignore next */
      cov_1nqco75e4().b[7][1]++;
      cov_1nqco75e4().s[61]++;
      if (metrics.errorRate > this.thresholds.errorRate.warning) {
        /* istanbul ignore next */
        cov_1nqco75e4().b[8][0]++;
        cov_1nqco75e4().s[62]++;
        await this.createAlert('error', 'medium', 'errorRate', metrics.errorRate, this.thresholds.errorRate.warning, `Tasa de errores alta: ${(metrics.errorRate * 100).toFixed(1)}%`);
      } else
      /* istanbul ignore next */
      {
        cov_1nqco75e4().b[8][1]++;
      }
    }
    // Verificar uso de CPU
    /* istanbul ignore next */
    cov_1nqco75e4().s[63]++;
    if (metrics.cpuUsage > this.thresholds.cpuUsage.critical) {
      /* istanbul ignore next */
      cov_1nqco75e4().b[9][0]++;
      cov_1nqco75e4().s[64]++;
      await this.createAlert('capacity', 'critical', 'cpuUsage', metrics.cpuUsage, this.thresholds.cpuUsage.critical, `Uso de CPU crítico: ${(metrics.cpuUsage * 100).toFixed(1)}%`);
    } else {
      /* istanbul ignore next */
      cov_1nqco75e4().b[9][1]++;
      cov_1nqco75e4().s[65]++;
      if (metrics.cpuUsage > this.thresholds.cpuUsage.warning) {
        /* istanbul ignore next */
        cov_1nqco75e4().b[10][0]++;
        cov_1nqco75e4().s[66]++;
        await this.createAlert('capacity', 'medium', 'cpuUsage', metrics.cpuUsage, this.thresholds.cpuUsage.warning, `Uso de CPU alto: ${(metrics.cpuUsage * 100).toFixed(1)}%`);
      } else
      /* istanbul ignore next */
      {
        cov_1nqco75e4().b[10][1]++;
      }
    }
    // Verificar uso de memoria
    /* istanbul ignore next */
    cov_1nqco75e4().s[67]++;
    if (metrics.memoryUsage > this.thresholds.memoryUsage.critical) {
      /* istanbul ignore next */
      cov_1nqco75e4().b[11][0]++;
      cov_1nqco75e4().s[68]++;
      await this.createAlert('capacity', 'critical', 'memoryUsage', metrics.memoryUsage, this.thresholds.memoryUsage.critical, `Uso de memoria crítico: ${(metrics.memoryUsage * 100).toFixed(1)}%`);
    } else {
      /* istanbul ignore next */
      cov_1nqco75e4().b[11][1]++;
      cov_1nqco75e4().s[69]++;
      if (metrics.memoryUsage > this.thresholds.memoryUsage.warning) {
        /* istanbul ignore next */
        cov_1nqco75e4().b[12][0]++;
        cov_1nqco75e4().s[70]++;
        await this.createAlert('capacity', 'medium', 'memoryUsage', metrics.memoryUsage, this.thresholds.memoryUsage.warning, `Uso de memoria alto: ${(metrics.memoryUsage * 100).toFixed(1)}%`);
      } else
      /* istanbul ignore next */
      {
        cov_1nqco75e4().b[12][1]++;
      }
    }
  }
  /**
  * Verifica umbrales de Core Web Vitals
  */
  checkWebVitalsThresholds(vitals) {
    /* istanbul ignore next */
    cov_1nqco75e4().f[16]++;
    const {
      coreWebVitals
    } =
    /* istanbul ignore next */
    (cov_1nqco75e4().s[71]++, this.thresholds);
    // Verificar LCP
    /* istanbul ignore next */
    cov_1nqco75e4().s[72]++;
    if (vitals.lcp > coreWebVitals.lcp.poor) {
      /* istanbul ignore next */
      cov_1nqco75e4().b[13][0]++;
      cov_1nqco75e4().s[73]++;
      this.createAlert('performance', 'high', 'lcp', vitals.lcp, coreWebVitals.lcp.poor, `LCP pobre: ${vitals.lcp}ms`);
    } else {
      /* istanbul ignore next */
      cov_1nqco75e4().b[13][1]++;
      cov_1nqco75e4().s[74]++;
      if (vitals.lcp > coreWebVitals.lcp.good) {
        /* istanbul ignore next */
        cov_1nqco75e4().b[14][0]++;
        cov_1nqco75e4().s[75]++;
        this.createAlert('performance', 'medium', 'lcp', vitals.lcp, coreWebVitals.lcp.good, `LCP necesita mejora: ${vitals.lcp}ms`);
      } else
      /* istanbul ignore next */
      {
        cov_1nqco75e4().b[14][1]++;
      }
    }
    // Verificar FID
    /* istanbul ignore next */
    cov_1nqco75e4().s[76]++;
    if (vitals.fid > coreWebVitals.fid.poor) {
      /* istanbul ignore next */
      cov_1nqco75e4().b[15][0]++;
      cov_1nqco75e4().s[77]++;
      this.createAlert('performance', 'high', 'fid', vitals.fid, coreWebVitals.fid.poor, `FID pobre: ${vitals.fid}ms`);
    } else {
      /* istanbul ignore next */
      cov_1nqco75e4().b[15][1]++;
      cov_1nqco75e4().s[78]++;
      if (vitals.fid > coreWebVitals.fid.good) {
        /* istanbul ignore next */
        cov_1nqco75e4().b[16][0]++;
        cov_1nqco75e4().s[79]++;
        this.createAlert('performance', 'medium', 'fid', vitals.fid, coreWebVitals.fid.good, `FID necesita mejora: ${vitals.fid}ms`);
      } else
      /* istanbul ignore next */
      {
        cov_1nqco75e4().b[16][1]++;
      }
    }
    // Verificar CLS
    /* istanbul ignore next */
    cov_1nqco75e4().s[80]++;
    if (vitals.cls > coreWebVitals.cls.poor) {
      /* istanbul ignore next */
      cov_1nqco75e4().b[17][0]++;
      cov_1nqco75e4().s[81]++;
      this.createAlert('performance', 'high', 'cls', vitals.cls, coreWebVitals.cls.poor, `CLS pobre: ${vitals.cls}`);
    } else {
      /* istanbul ignore next */
      cov_1nqco75e4().b[17][1]++;
      cov_1nqco75e4().s[82]++;
      if (vitals.cls > coreWebVitals.cls.good) {
        /* istanbul ignore next */
        cov_1nqco75e4().b[18][0]++;
        cov_1nqco75e4().s[83]++;
        this.createAlert('performance', 'medium', 'cls', vitals.cls, coreWebVitals.cls.good, `CLS necesita mejora: ${vitals.cls}`);
      } else
      /* istanbul ignore next */
      {
        cov_1nqco75e4().b[18][1]++;
      }
    }
  }
  /**
  * Verifica umbrales de API
  */
  checkAPIThresholds(metrics) {
    /* istanbul ignore next */
    cov_1nqco75e4().f[17]++;
    cov_1nqco75e4().s[84]++;
    if (metrics.responseTime > this.thresholds.responseTime.critical) {
      /* istanbul ignore next */
      cov_1nqco75e4().b[19][0]++;
      cov_1nqco75e4().s[85]++;
      this.createAlert('performance', 'high', 'apiResponseTime', metrics.responseTime, this.thresholds.responseTime.critical, `API lenta: ${metrics.method} ${metrics.endpoint} - ${metrics.responseTime}ms`);
    } else
    /* istanbul ignore next */
    {
      cov_1nqco75e4().b[19][1]++;
    }
    cov_1nqco75e4().s[86]++;
    if (metrics.statusCode >= 500) {
      /* istanbul ignore next */
      cov_1nqco75e4().b[20][0]++;
      cov_1nqco75e4().s[87]++;
      this.createAlert('error', 'high', 'apiError', metrics.statusCode, 500, `Error de servidor: ${metrics.method} ${metrics.endpoint} - ${metrics.statusCode}`);
    } else {
      /* istanbul ignore next */
      cov_1nqco75e4().b[20][1]++;
      cov_1nqco75e4().s[88]++;
      if (metrics.statusCode >= 400) {
        /* istanbul ignore next */
        cov_1nqco75e4().b[21][0]++;
        cov_1nqco75e4().s[89]++;
        this.createAlert('error', 'medium', 'apiClientError', metrics.statusCode, 400, `Error de cliente: ${metrics.method} ${metrics.endpoint} - ${metrics.statusCode}`);
      } else
      /* istanbul ignore next */
      {
        cov_1nqco75e4().b[21][1]++;
      }
    }
  }
  /**
  * Verifica umbrales de base de datos
  */
  checkDatabaseThresholds(metrics) {
    /* istanbul ignore next */
    cov_1nqco75e4().f[18]++;
    cov_1nqco75e4().s[90]++;
    if (metrics.queryTime > 5000) {
      /* istanbul ignore next */
      cov_1nqco75e4().b[22][0]++;
      cov_1nqco75e4().s[91]++;
      this.createAlert('performance', 'high', 'slowQuery', metrics.queryTime, 5000, `Query lenta: ${metrics.queryType} en ${metrics.tableName} - ${metrics.queryTime}ms`);
    } else
    /* istanbul ignore next */
    {
      cov_1nqco75e4().b[22][1]++;
    }
    cov_1nqco75e4().s[92]++;
    if (metrics.waitingConnections > 10) {
      /* istanbul ignore next */
      cov_1nqco75e4().b[23][0]++;
      cov_1nqco75e4().s[93]++;
      this.createAlert('capacity', 'medium', 'dbConnectionWait', metrics.waitingConnections, 10, `Conexiones esperando: ${metrics.waitingConnections}`);
    } else
    /* istanbul ignore next */
    {
      cov_1nqco75e4().b[23][1]++;
    }
  }
  /**
  * Crea una alerta
  */
  async createAlert(type, severity, metric, value, threshold, message) {
    /* istanbul ignore next */
    cov_1nqco75e4().f[19]++;
    const alertId =
    /* istanbul ignore next */
    (cov_1nqco75e4().s[94]++, `${type}_${metric}_${Date.now()}`);
    const alert =
    /* istanbul ignore next */
    (cov_1nqco75e4().s[95]++, {
      id: alertId,
      type,
      severity,
      metric,
      value,
      threshold,
      message,
      timestamp: Date.now(),
      resolved: false,
      escalated: false
    });
    /* istanbul ignore next */
    cov_1nqco75e4().s[96]++;
    this.alerts.set(alertId, alert);
    // Notificar a suscriptores
    /* istanbul ignore next */
    cov_1nqco75e4().s[97]++;
    this.notifySubscribers('alert', alert);
    // Log de la alerta
    /* istanbul ignore next */
    cov_1nqco75e4().s[98]++;
    _logger.logger.warn(_logger.LogCategory.MONITORING, `Performance alert: ${message}`, {
      type,
      severity,
      metric,
      value,
      threshold
    });
    // Persistir en Redis
    /* istanbul ignore next */
    cov_1nqco75e4().s[99]++;
    await this.persistAlert(alert);
  }
  /**
  * Suscribirse a actualizaciones en tiempo real
  */
  subscribe(callback) {
    /* istanbul ignore next */
    cov_1nqco75e4().f[20]++;
    cov_1nqco75e4().s[100]++;
    this.subscribers.add(callback);
    /* istanbul ignore next */
    cov_1nqco75e4().s[101]++;
    return () => {
      /* istanbul ignore next */
      cov_1nqco75e4().f[21]++;
      cov_1nqco75e4().s[102]++;
      this.subscribers.delete(callback);
    };
  }
  /**
  * Notifica a todos los suscriptores
  */
  notifySubscribers(type, data) {
    /* istanbul ignore next */
    cov_1nqco75e4().f[22]++;
    cov_1nqco75e4().s[103]++;
    this.subscribers.forEach(callback => {
      /* istanbul ignore next */
      cov_1nqco75e4().f[23]++;
      cov_1nqco75e4().s[104]++;
      try {
        /* istanbul ignore next */
        cov_1nqco75e4().s[105]++;
        callback({
          type,
          data,
          timestamp: Date.now()
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_1nqco75e4().s[106]++;
        _logger.logger.error(_logger.LogCategory.MONITORING, 'Error notifying subscriber', error);
      }
    });
  }
  /**
  * Obtiene métricas actuales
  */
  getCurrentMetrics() {
    /* istanbul ignore next */
    cov_1nqco75e4().f[24]++;
    cov_1nqco75e4().s[107]++;
    return {
      realTime: [...this.metricsBuffer],
      webVitals: [...this.webVitalsBuffer],
      apiMetrics: [...this.apiMetricsBuffer],
      dbMetrics: [...this.dbMetricsBuffer],
      alerts: Array.from(this.alerts.values()).filter(a => {
        /* istanbul ignore next */
        cov_1nqco75e4().f[25]++;
        cov_1nqco75e4().s[108]++;
        return !a.resolved;
      })
    };
  }
  /**
  * Actualiza umbrales
  */
  updateThresholds(newThresholds) {
    /* istanbul ignore next */
    cov_1nqco75e4().f[26]++;
    cov_1nqco75e4().s[109]++;
    this.thresholds = {
      ...this.thresholds,
      ...newThresholds
    };
    /* istanbul ignore next */
    cov_1nqco75e4().s[110]++;
    _logger.logger.info(_logger.LogCategory.MONITORING, 'Performance thresholds updated');
  }
  /**
  * Resuelve una alerta
  */
  resolveAlert(alertId) {
    /* istanbul ignore next */
    cov_1nqco75e4().f[27]++;
    const alert =
    /* istanbul ignore next */
    (cov_1nqco75e4().s[111]++, this.alerts.get(alertId));
    /* istanbul ignore next */
    cov_1nqco75e4().s[112]++;
    if (
    /* istanbul ignore next */
    (cov_1nqco75e4().b[25][0]++, alert) &&
    /* istanbul ignore next */
    (cov_1nqco75e4().b[25][1]++, !alert.resolved)) {
      /* istanbul ignore next */
      cov_1nqco75e4().b[24][0]++;
      cov_1nqco75e4().s[113]++;
      alert.resolved = true;
      /* istanbul ignore next */
      cov_1nqco75e4().s[114]++;
      alert.resolvedAt = Date.now();
      /* istanbul ignore next */
      cov_1nqco75e4().s[115]++;
      this.notifySubscribers('alertResolved', alert);
      /* istanbul ignore next */
      cov_1nqco75e4().s[116]++;
      _logger.logger.info(_logger.LogCategory.MONITORING, `Alert resolved: ${alertId}`);
      /* istanbul ignore next */
      cov_1nqco75e4().s[117]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_1nqco75e4().b[24][1]++;
    }
    cov_1nqco75e4().s[118]++;
    return false;
  }
  /**
  * Flush de métricas a Redis
  */
  async flushMetricsToRedis() {
    /* istanbul ignore next */
    cov_1nqco75e4().f[28]++;
    cov_1nqco75e4().s[119]++;
    try {
      const timestamp =
      /* istanbul ignore next */
      (cov_1nqco75e4().s[120]++, Date.now());
      // Guardar métricas en Redis con TTL de 24 horas
      /* istanbul ignore next */
      cov_1nqco75e4().s[121]++;
      if (this.metricsBuffer.length > 0) {
        /* istanbul ignore next */
        cov_1nqco75e4().b[26][0]++;
        cov_1nqco75e4().s[122]++;
        await this.redis.setex(`metrics:realtime:${timestamp}`, 86400, JSON.stringify(this.metricsBuffer));
      } else
      /* istanbul ignore next */
      {
        cov_1nqco75e4().b[26][1]++;
      }
      cov_1nqco75e4().s[123]++;
      if (this.webVitalsBuffer.length > 0) {
        /* istanbul ignore next */
        cov_1nqco75e4().b[27][0]++;
        cov_1nqco75e4().s[124]++;
        await this.redis.setex(`metrics:webvitals:${timestamp}`, 86400, JSON.stringify(this.webVitalsBuffer));
      } else
      /* istanbul ignore next */
      {
        cov_1nqco75e4().b[27][1]++;
      }
      cov_1nqco75e4().s[125]++;
      if (this.apiMetricsBuffer.length > 0) {
        /* istanbul ignore next */
        cov_1nqco75e4().b[28][0]++;
        cov_1nqco75e4().s[126]++;
        await this.redis.setex(`metrics:api:${timestamp}`, 86400, JSON.stringify(this.apiMetricsBuffer));
      } else
      /* istanbul ignore next */
      {
        cov_1nqco75e4().b[28][1]++;
      }
      cov_1nqco75e4().s[127]++;
      if (this.dbMetricsBuffer.length > 0) {
        /* istanbul ignore next */
        cov_1nqco75e4().b[29][0]++;
        cov_1nqco75e4().s[128]++;
        await this.redis.setex(`metrics:database:${timestamp}`, 86400, JSON.stringify(this.dbMetricsBuffer));
      } else
      /* istanbul ignore next */
      {
        cov_1nqco75e4().b[29][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1nqco75e4().s[129]++;
      _logger.logger.error(_logger.LogCategory.MONITORING, 'Error flushing metrics to Redis', error);
    }
  }
  /**
  * Persiste alerta en Redis
  */
  async persistAlert(alert) {
    /* istanbul ignore next */
    cov_1nqco75e4().f[29]++;
    cov_1nqco75e4().s[130]++;
    try {
      /* istanbul ignore next */
      cov_1nqco75e4().s[131]++;
      await this.redis.setex(`alert:${alert.id}`, 86400 * 7, JSON.stringify(alert));
    } catch (error) {
      /* istanbul ignore next */
      cov_1nqco75e4().s[132]++;
      _logger.logger.error(_logger.LogCategory.MONITORING, 'Error persisting alert', error);
    }
  }
  // ===================================
  // MÉTODOS DE RECOLECCIÓN DE MÉTRICAS
  // ===================================
  async getAverageResponseTime() {
    /* istanbul ignore next */
    cov_1nqco75e4().f[30]++;
    // Calcular tiempo de respuesta promedio de las últimas métricas de API
    const recentAPI =
    /* istanbul ignore next */
    (cov_1nqco75e4().s[133]++, this.apiMetricsBuffer.slice(-10));
    /* istanbul ignore next */
    cov_1nqco75e4().s[134]++;
    if (recentAPI.length === 0) {
      /* istanbul ignore next */
      cov_1nqco75e4().b[30][0]++;
      cov_1nqco75e4().s[135]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_1nqco75e4().b[30][1]++;
    }
    const total =
    /* istanbul ignore next */
    (cov_1nqco75e4().s[136]++, recentAPI.reduce((sum, metric) => {
      /* istanbul ignore next */
      cov_1nqco75e4().f[31]++;
      cov_1nqco75e4().s[137]++;
      return sum + metric.responseTime;
    }, 0));
    /* istanbul ignore next */
    cov_1nqco75e4().s[138]++;
    return total / recentAPI.length;
  }
  async getCurrentThroughput() {
    /* istanbul ignore next */
    cov_1nqco75e4().f[32]++;
    // Calcular throughput basado en requests por segundo
    const now =
    /* istanbul ignore next */
    (cov_1nqco75e4().s[139]++, Date.now());
    const oneMinuteAgo =
    /* istanbul ignore next */
    (cov_1nqco75e4().s[140]++, now - 60000);
    const recentRequests =
    /* istanbul ignore next */
    (cov_1nqco75e4().s[141]++, this.apiMetricsBuffer.filter(m => {
      /* istanbul ignore next */
      cov_1nqco75e4().f[33]++;
      cov_1nqco75e4().s[142]++;
      return m.timestamp > oneMinuteAgo;
    }));
    /* istanbul ignore next */
    cov_1nqco75e4().s[143]++;
    return recentRequests.length / 60; // requests por segundo
  }
  async getCurrentErrorRate() {
    /* istanbul ignore next */
    cov_1nqco75e4().f[34]++;
    const recentAPI =
    /* istanbul ignore next */
    (cov_1nqco75e4().s[144]++, this.apiMetricsBuffer.slice(-100));
    /* istanbul ignore next */
    cov_1nqco75e4().s[145]++;
    if (recentAPI.length === 0) {
      /* istanbul ignore next */
      cov_1nqco75e4().b[31][0]++;
      cov_1nqco75e4().s[146]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_1nqco75e4().b[31][1]++;
    }
    const errors =
    /* istanbul ignore next */
    (cov_1nqco75e4().s[147]++, recentAPI.filter(m => {
      /* istanbul ignore next */
      cov_1nqco75e4().f[35]++;
      cov_1nqco75e4().s[148]++;
      return m.statusCode >= 400;
    }).length);
    /* istanbul ignore next */
    cov_1nqco75e4().s[149]++;
    return errors / recentAPI.length;
  }
  async getCPUUsage() {
    /* istanbul ignore next */
    cov_1nqco75e4().f[36]++;
    cov_1nqco75e4().s[150]++;
    // Simulación de uso de CPU (en implementación real, usar librerías del sistema)
    return Math.random() * 0.8; // 0-80%
  }
  async getMemoryUsage() {
    /* istanbul ignore next */
    cov_1nqco75e4().f[37]++;
    cov_1nqco75e4().s[151]++;
    // Obtener uso de memoria real
    if (typeof process !== 'undefined') {
      /* istanbul ignore next */
      cov_1nqco75e4().b[32][0]++;
      const memUsage =
      /* istanbul ignore next */
      (cov_1nqco75e4().s[152]++, process.memoryUsage());
      /* istanbul ignore next */
      cov_1nqco75e4().s[153]++;
      return memUsage.heapUsed / memUsage.heapTotal;
    } else
    /* istanbul ignore next */
    {
      cov_1nqco75e4().b[32][1]++;
    }
    cov_1nqco75e4().s[154]++;
    return Math.random() * 0.7; // Fallback
  }
  async getActiveConnections() {
    /* istanbul ignore next */
    cov_1nqco75e4().f[38]++;
    cov_1nqco75e4().s[155]++;
    // Simulación de conexiones activas
    return Math.floor(Math.random() * 100) + 10;
  }
  async getQueueSize() {
    /* istanbul ignore next */
    cov_1nqco75e4().f[39]++;
    cov_1nqco75e4().s[156]++;
    // Simulación de tamaño de cola
    return Math.floor(Math.random() * 20);
  }
  async getCacheHitRate() {
    /* istanbul ignore next */
    cov_1nqco75e4().f[40]++;
    cov_1nqco75e4().s[157]++;
    // Obtener hit rate del cache (integrar con cache manager)
    return Math.random() * 0.3 + 0.7; // 70-100%
  }
  async getDBConnectionPoolSize() {
    /* istanbul ignore next */
    cov_1nqco75e4().f[41]++;
    cov_1nqco75e4().s[158]++;
    // Simulación de pool de conexiones DB
    return Math.floor(Math.random() * 10) + 5;
  }
  /**
  * Destructor
  */
  destroy() {
    /* istanbul ignore next */
    cov_1nqco75e4().f[42]++;
    cov_1nqco75e4().s[159]++;
    if (this.monitoringInterval) {
      /* istanbul ignore next */
      cov_1nqco75e4().b[33][0]++;
      cov_1nqco75e4().s[160]++;
      clearInterval(this.monitoringInterval);
    } else
    /* istanbul ignore next */
    {
      cov_1nqco75e4().b[33][1]++;
    }
    cov_1nqco75e4().s[161]++;
    if (this.flushInterval) {
      /* istanbul ignore next */
      cov_1nqco75e4().b[34][0]++;
      cov_1nqco75e4().s[162]++;
      clearInterval(this.flushInterval);
    } else
    /* istanbul ignore next */
    {
      cov_1nqco75e4().b[34][1]++;
    }
    cov_1nqco75e4().s[163]++;
    this.subscribers.clear();
  }
}
const realTimePerformanceMonitor =
/* istanbul ignore next */
(cov_1nqco75e4().s[164]++, RealTimePerformanceMonitor.getInstance());
const RealTimeMonitoringUtils =
/* istanbul ignore next */
(cov_1nqco75e4().s[165]++, {
  /**
  * Registra métricas de Web Vitals desde el cliente
  */
  recordWebVitals(vitals) {
    /* istanbul ignore next */
    cov_1nqco75e4().f[43]++;
    cov_1nqco75e4().s[166]++;
    realTimePerformanceMonitor.recordWebVitals(vitals);
  },
  /**
  * Registra métricas de API
  */
  recordAPICall(metrics) {
    /* istanbul ignore next */
    cov_1nqco75e4().f[44]++;
    cov_1nqco75e4().s[167]++;
    realTimePerformanceMonitor.recordAPIMetrics(metrics);
  },
  /**
  * Registra métricas de base de datos
  */
  recordDatabaseQuery(metrics) {
    /* istanbul ignore next */
    cov_1nqco75e4().f[45]++;
    cov_1nqco75e4().s[168]++;
    realTimePerformanceMonitor.recordDatabaseMetrics(metrics);
  },
  /**
  * Obtiene resumen de estado actual
  */
  getCurrentStatus() {
    /* istanbul ignore next */
    cov_1nqco75e4().f[46]++;
    const current =
    /* istanbul ignore next */
    (cov_1nqco75e4().s[169]++, realTimePerformanceMonitor.getCurrentMetrics());
    const latestMetrics =
    /* istanbul ignore next */
    (cov_1nqco75e4().s[170]++, current.realTime[current.realTime.length - 1]);
    /* istanbul ignore next */
    cov_1nqco75e4().s[171]++;
    if (!latestMetrics) {
      /* istanbul ignore next */
      cov_1nqco75e4().b[35][0]++;
      cov_1nqco75e4().s[172]++;
      return {
        healthy: false,
        activeAlerts: 0,
        avgResponseTime: 0,
        errorRate: 0,
        lastUpdate: 0
      };
    } else
    /* istanbul ignore next */
    {
      cov_1nqco75e4().b[35][1]++;
    }
    const activeAlerts =
    /* istanbul ignore next */
    (cov_1nqco75e4().s[173]++, current.alerts.length);
    const healthy =
    /* istanbul ignore next */
    (cov_1nqco75e4().s[174]++,
    /* istanbul ignore next */
    (cov_1nqco75e4().b[36][0]++, activeAlerts === 0) &&
    /* istanbul ignore next */
    (cov_1nqco75e4().b[36][1]++, latestMetrics.responseTime < 2000) &&
    /* istanbul ignore next */
    (cov_1nqco75e4().b[36][2]++, latestMetrics.errorRate < 0.05));
    /* istanbul ignore next */
    cov_1nqco75e4().s[175]++;
    return {
      healthy,
      activeAlerts,
      avgResponseTime: latestMetrics.responseTime,
      errorRate: latestMetrics.errorRate,
      lastUpdate: latestMetrics.timestamp
    };
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,