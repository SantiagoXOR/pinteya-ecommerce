{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\redux\\store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\n\nimport quickViewReducer from './features/quickView-slice'\nimport cartReducer from './features/cart-slice'\nimport wishlistReducer from './features/wishlist-slice'\nimport productDetailsReducer from './features/product-details'\nimport { cartPersistenceMiddleware } from './middleware/cartPersistence'\n\nimport { TypedUseSelectorHook, useSelector, useDispatch } from 'react-redux'\n\nexport const store = configureStore({\n  reducer: {\n    quickViewReducer,\n    cartReducer,\n    wishlistReducer,\n    productDetailsReducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        // Ignorar estas acciones para el check de serializaci√≥n\n        ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE'],\n      },\n    }).concat(cartPersistenceMiddleware),\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n"],"names":["store","useAppDispatch","useAppSelector","configureStore","reducer","quickViewReducer","cartReducer","wishlistReducer","productDetailsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","concat","cartPersistenceMiddleware","useSelector","useDispatch"],"mappings":";;;;;;;;;;;QAUaA;eAAAA;;QAoBAC;eAAAA;;QADAC;eAAAA;;;yBA7BkB;uEAEF;kEACL;sEACI;uEACM;iCACQ;4BAEqB;;;;;;AAExD,MAAMF,QAAQG,IAAAA,uBAAc,EAAC;IAClCC,SAAS;QACPC,kBAAAA,uBAAgB;QAChBC,aAAAA,kBAAW;QACXC,iBAAAA,sBAAe;QACfC,uBAAAA,uBAAqB;IACvB;IACAC,YAAYC,CAAAA,uBACVA,qBAAqB;YACnBC,mBAAmB;gBACjB,wDAAwD;gBACxDC,gBAAgB;oBAAC;oBAAmB;iBAAoB;YAC1D;QACF,GAAGC,MAAM,CAACC,0CAAyB;AACvC;AAKO,MAAMZ,iBAAkDa,uBAAW;AACnE,MAAMd,iBAAiB,IAAMe,IAAAA,uBAAW"}