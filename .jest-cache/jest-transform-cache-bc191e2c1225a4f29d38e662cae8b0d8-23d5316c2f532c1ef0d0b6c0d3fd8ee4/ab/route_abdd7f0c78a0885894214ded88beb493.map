{"version":3,"names":["cov_1zzf0038nu","actualCoverage","s","GET","f","POST","runtime","request","console","log","startTime","Date","now","sitemap","_dynamicsitemapgenerator","enhancedDynamicSitemapGenerator","generateSitemap","endTime","validation","validateSitemap","isValid","b","error","errors","_server","NextResponse","json","success","details","status","stats","getSitemapStats","headers","Headers","totalUrls","toString","fileSize","toISOString","message","Error","clearCache","staticPages","productPages","categoryPages","lastGenerated"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\seo\\sitemap\\route.ts"],"sourcesContent":["// Configuraci√≥n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - SITEMAP API\r\n// API para generar y servir sitemap din√°mico\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { enhancedDynamicSitemapGenerator } from '@/lib/seo/dynamic-sitemap-generator';\r\n\r\n// GET - Generar y servir sitemap\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    console.log('üó∫Ô∏è Generando sitemap din√°mico...');\r\n    \r\n    const startTime = Date.now();\r\n    \r\n    // Generar sitemap\r\n    const sitemap = await enhancedDynamicSitemapGenerator.generateSitemap();\r\n\r\n    const endTime = Date.now();\r\n    console.log(`‚úÖ Sitemap generado en ${endTime - startTime}ms`);\r\n\r\n    // Validar sitemap\r\n    const validation = enhancedDynamicSitemapGenerator.validateSitemap(sitemap);\r\n    if (!validation.isValid) {\r\n      console.error('‚ùå Sitemap inv√°lido:', validation.errors);\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Sitemap generado es inv√°lido',\r\n        details: validation.errors\r\n      }, { status: 500 });\r\n    }\r\n    \r\n    // Obtener estad√≠sticas\r\n    const stats = await enhancedDynamicSitemapGenerator.getSitemapStats();\r\n    \r\n    // Configurar headers para XML\r\n    const headers = new Headers({\r\n      'Content-Type': 'application/xml; charset=utf-8',\r\n      'Cache-Control': 'public, max-age=3600', // Cache por 1 hora\r\n      'X-Sitemap-URLs': stats.totalUrls.toString(),\r\n      'X-Sitemap-Size': stats.fileSize.toString(),\r\n      'X-Generated-At': new Date().toISOString()\r\n    });\r\n    \r\n    return new NextResponse(sitemap, { headers });\r\n    \r\n  } catch (error) {\r\n    console.error('‚ùå Error generando sitemap:', error);\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error interno del servidor',\r\n      message: error instanceof Error ? error.message : 'Error desconocido'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// POST - Regenerar sitemap y limpiar cache\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    console.log('üîÑ Regenerando sitemap...');\r\n    \r\n    // Limpiar cache\r\n    enhancedDynamicSitemapGenerator.clearCache();\r\n\r\n    // Generar nuevo sitemap\r\n    const sitemap = await enhancedDynamicSitemapGenerator.generateSitemap();\r\n    const stats = await enhancedDynamicSitemapGenerator.getSitemapStats();\r\n    \r\n    console.log('‚úÖ Sitemap regenerado exitosamente');\r\n    \r\n    return NextResponse.json({\r\n      success: true,\r\n      message: 'Sitemap regenerado exitosamente',\r\n      stats: {\r\n        totalUrls: stats.totalUrls,\r\n        staticPages: stats.staticPages,\r\n        productPages: stats.productPages,\r\n        categoryPages: stats.categoryPages,\r\n        fileSize: stats.fileSize,\r\n        lastGenerated: stats.lastGenerated\r\n      }\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error('‚ùå Error regenerando sitemap:', error);\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error regenerando sitemap',\r\n      message: error instanceof Error ? error.message : 'Error desconocido'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}