{"version":3,"names":["ScreenshotManager","cov_25myxcx5qh","f","s","screenshotManager","constructor","options","browser","page","screenshotsDir","b","_path","default","join","process","cwd","browserType","initialize","_playwright","firefox","launch","headless","webkit","chromium","contextOptions","viewport","width","height","userAgent","context","newContext","newPage","_fs","promises","mkdir","recursive","console","log","error","navigateTo","url","Error","goto","waitUntil","timeout","captureScreenshot","filename","description","startTime","Date","now","timestamp","toISOString","timestampForFile","replace","fileExtension","type","fullFilename","screenshotPath","mask","length","selector","locator","evaluate","el","style","filter","catch","screenshotOptions","path","fullPage","quality","clip","screenshotBuffer","screenshot","annotations","addAnnotations","duration","fileStats","stat","currentUrl","viewportSize","metadata","undefined","fileSize","size","captureElementScreenshot","element","first","waitFor","state","boundingBox","annotation","ann","div","document","createElement","textContent","text","position","left","x","top","y","background","color","padding","borderRadius","fontSize","fontFamily","zIndex","pointerEvents","body","appendChild","waitAndCapture","captureSequence","screenshots","results","delay","waitForTimeout","push","getPageInfo","title","navigator","close","getPage"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\testing\\screenshot-manager.ts"],"sourcesContent":["import { promises as fs } from 'fs';\r\nimport path from 'path';\r\nimport { Page, Browser, chromium, firefox, webkit } from 'playwright';\r\n\r\nexport interface ScreenshotOptions {\r\n  fullPage?: boolean;\r\n  quality?: number;\r\n  type?: 'png' | 'jpeg';\r\n  clip?: {\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n  };\r\n  mask?: string[]; // CSS selectors to mask\r\n  annotations?: {\r\n    text: string;\r\n    x: number;\r\n    y: number;\r\n    color?: string;\r\n  }[];\r\n}\r\n\r\nexport interface ScreenshotMetadata {\r\n  filename: string;\r\n  path: string;\r\n  timestamp: string;\r\n  description?: string;\r\n  url?: string;\r\n  viewport?: { width: number; height: number } | undefined;\r\n  fileSize?: number;\r\n  duration?: number;\r\n}\r\n\r\nexport class ScreenshotManager {\r\n  private browser: Browser | null = null;\r\n  private page: Page | null = null;\r\n  private screenshotsDir: string;\r\n  private browserType: 'chromium' | 'firefox' | 'webkit';\r\n\r\n  constructor(options?: {\r\n    screenshotsDir?: string;\r\n    browserType?: 'chromium' | 'firefox' | 'webkit';\r\n  }) {\r\n    this.screenshotsDir = options?.screenshotsDir || path.join(process.cwd(), 'test-screenshots');\r\n    this.browserType = options?.browserType || 'chromium';\r\n  }\r\n\r\n  /**\r\n   * Inicializa el navegador y la p√°gina\r\n   */\r\n  async initialize(options?: {\r\n    headless?: boolean;\r\n    viewport?: { width: number; height: number };\r\n    userAgent?: string;\r\n  }): Promise<void> {\r\n    try {\r\n      // Seleccionar el navegador\r\n      switch (this.browserType) {\r\n        case 'firefox':\r\n          this.browser = await firefox.launch({ headless: options?.headless ?? true });\r\n          break;\r\n        case 'webkit':\r\n          this.browser = await webkit.launch({ headless: options?.headless ?? true });\r\n          break;\r\n        default:\r\n          this.browser = await chromium.launch({ headless: options?.headless ?? true });\r\n      }\r\n\r\n      // Crear contexto y p√°gina\r\n      const contextOptions: any = {\r\n        viewport: options?.viewport || { width: 1920, height: 1080 }\r\n      };\r\n      \r\n      if (options?.userAgent) {\r\n        contextOptions.userAgent = options.userAgent;\r\n      }\r\n      \r\n      const context = await this.browser.newContext(contextOptions);\r\n\r\n      this.page = await context.newPage();\r\n      \r\n      // Asegurar que el directorio de screenshots existe\r\n      await fs.mkdir(this.screenshotsDir, { recursive: true });\r\n      \r\n      console.log(`üåê Navegador ${this.browserType} inicializado`);\r\n      \r\n    } catch (error) {\r\n      console.error('Error inicializando navegador:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Navega a una URL\r\n   */\r\n  async navigateTo(url: string, options?: {\r\n    waitUntil?: 'load' | 'domcontentloaded' | 'networkidle';\r\n    timeout?: number;\r\n  }): Promise<void> {\r\n    if (!this.page) {\r\n      throw new Error('Navegador no inicializado. Llama a initialize() primero.');\r\n    }\r\n\r\n    try {\r\n      await this.page.goto(url, {\r\n        waitUntil: options?.waitUntil || 'networkidle',\r\n        timeout: options?.timeout || 30000\r\n      });\r\n      \r\n      console.log(`üîó Navegado a: ${url}`);\r\n      \r\n    } catch (error) {\r\n      console.error(`Error navegando a ${url}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Captura una screenshot con opciones avanzadas\r\n   */\r\n  async captureScreenshot(\r\n    filename: string,\r\n    description: string,\r\n    options?: ScreenshotOptions\r\n  ): Promise<ScreenshotMetadata> {\r\n    if (!this.page) {\r\n      throw new Error('Navegador no inicializado. Llama a initialize() primero.');\r\n    }\r\n\r\n    const startTime = Date.now();\r\n    const timestamp = new Date().toISOString();\r\n    const timestampForFile = timestamp.replace(/[:.]/g, '-');\r\n    \r\n    try {\r\n      // Preparar nombre del archivo\r\n      const fileExtension = options?.type || 'png';\r\n      const fullFilename = `${timestampForFile}-${filename}.${fileExtension}`;\r\n      const screenshotPath = path.join(this.screenshotsDir, fullFilename);\r\n\r\n      // Aplicar m√°scaras si se especifican\r\n      if (options?.mask && options.mask.length > 0) {\r\n        for (const selector of options.mask) {\r\n          await this.page.locator(selector).evaluate(el => {\r\n            (el as HTMLElement).style.filter = 'blur(10px)';\r\n          }).catch(() => {});\r\n        }\r\n      }\r\n\r\n      // Capturar screenshot\r\n      const screenshotOptions: any = {\r\n        path: screenshotPath,\r\n        fullPage: options?.fullPage || false,\r\n        type: options?.type || 'png'\r\n      };\r\n      \r\n      // Solo agregar quality para JPEG\r\n      if (options?.type === 'jpeg' && options?.quality) {\r\n        screenshotOptions.quality = options.quality;\r\n      }\r\n      \r\n      if (options?.clip) {\r\n        screenshotOptions.clip = options.clip;\r\n      }\r\n      \r\n      const screenshotBuffer = await this.page.screenshot(screenshotOptions);\r\n\r\n      // Agregar anotaciones si se especifican\r\n      if (options?.annotations && options.annotations.length > 0) {\r\n        await this.addAnnotations(options.annotations);\r\n      }\r\n\r\n      const duration = Date.now() - startTime;\r\n      const fileStats = await fs.stat(screenshotPath);\r\n      const currentUrl = this.page.url();\r\n      const viewport = this.page.viewportSize();\r\n\r\n      const metadata: ScreenshotMetadata = {\r\n        filename: fullFilename,\r\n        path: screenshotPath,\r\n        timestamp,\r\n        description,\r\n        url: currentUrl,\r\n        viewport: viewport ?? undefined,\r\n        fileSize: fileStats.size,\r\n        duration\r\n      };\r\n\r\n      console.log(`üì∏ Screenshot capturada: ${fullFilename} (${fileStats.size} bytes, ${duration}ms)`);\r\n      \r\n      return metadata;\r\n      \r\n    } catch (error) {\r\n      console.error('Error capturando screenshot:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Captura screenshot de un elemento espec√≠fico\r\n   */\r\n  async captureElementScreenshot(\r\n    selector: string,\r\n    filename: string,\r\n    description: string,\r\n    options?: Omit<ScreenshotOptions, 'fullPage' | 'clip'>\r\n  ): Promise<ScreenshotMetadata> {\r\n    if (!this.page) {\r\n      throw new Error('Navegador no inicializado. Llama a initialize() primero.');\r\n    }\r\n\r\n    try {\r\n      const element = await this.page.locator(selector).first();\r\n      await element.waitFor({ state: 'visible', timeout: 10000 });\r\n      \r\n      const boundingBox = await element.boundingBox();\r\n      if (!boundingBox) {\r\n        throw new Error(`Elemento no encontrado o no visible: ${selector}`);\r\n      }\r\n\r\n      return await this.captureScreenshot(filename, description, {\r\n        ...options,\r\n        clip: boundingBox\r\n      });\r\n      \r\n    } catch (error) {\r\n      console.error(`Error capturando screenshot del elemento ${selector}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Agrega anotaciones visuales a la p√°gina\r\n   */\r\n  private async addAnnotations(annotations: ScreenshotOptions['annotations']): Promise<void> {\r\n    if (!this.page || !annotations) {return;}\r\n\r\n    for (const annotation of annotations) {\r\n      await this.page.evaluate((ann) => {\r\n        const div = document.createElement('div');\r\n        div.textContent = ann.text;\r\n        div.style.position = 'absolute';\r\n        div.style.left = `${ann.x}px`;\r\n        div.style.top = `${ann.y}px`;\r\n        div.style.background = ann.color || 'red';\r\n        div.style.color = 'white';\r\n        div.style.padding = '4px 8px';\r\n        div.style.borderRadius = '4px';\r\n        div.style.fontSize = '12px';\r\n        div.style.fontFamily = 'Arial, sans-serif';\r\n        div.style.zIndex = '9999';\r\n        div.style.pointerEvents = 'none';\r\n        document.body.appendChild(div);\r\n      }, annotation);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Espera a que un elemento sea visible antes de capturar\r\n   */\r\n  async waitAndCapture(\r\n    selector: string,\r\n    filename: string,\r\n    description: string,\r\n    options?: ScreenshotOptions & { timeout?: number }\r\n  ): Promise<ScreenshotMetadata> {\r\n    if (!this.page) {\r\n      throw new Error('Navegador no inicializado. Llama a initialize() primero.');\r\n    }\r\n\r\n    try {\r\n      await this.page.locator(selector).waitFor({ \r\n        state: 'visible', \r\n        timeout: options?.timeout || 10000 \r\n      });\r\n      \r\n      return await this.captureScreenshot(filename, description, options);\r\n      \r\n    } catch (error) {\r\n      console.error(`Error esperando elemento ${selector}:`, error);\r\n      // Capturar screenshot de error\r\n      return await this.captureScreenshot(\r\n        `error-${filename}`,\r\n        `Error esperando: ${description}`,\r\n        options\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Captura m√∫ltiples screenshots con delay\r\n   */\r\n  async captureSequence(\r\n    screenshots: Array<{\r\n      filename: string;\r\n      description: string;\r\n      delay?: number;\r\n      options?: ScreenshotOptions;\r\n    }>\r\n  ): Promise<ScreenshotMetadata[]> {\r\n    const results: ScreenshotMetadata[] = [];\r\n\r\n    for (const screenshot of screenshots) {\r\n      if (screenshot.delay) {\r\n        await this.page?.waitForTimeout(screenshot.delay);\r\n      }\r\n      \r\n      const metadata = await this.captureScreenshot(\r\n        screenshot.filename,\r\n        screenshot.description,\r\n        screenshot.options\r\n      );\r\n      \r\n      results.push(metadata);\r\n    }\r\n\r\n    return results;\r\n  }\r\n\r\n  /**\r\n   * Obtiene informaci√≥n de la p√°gina actual\r\n   */\r\n  async getPageInfo(): Promise<{\r\n    url: string;\r\n    title: string;\r\n    viewport: { width: number; height: number } | null;\r\n    userAgent: string;\r\n  }> {\r\n    if (!this.page) {\r\n      throw new Error('Navegador no inicializado. Llama a initialize() primero.');\r\n    }\r\n\r\n    return {\r\n      url: this.page.url(),\r\n      title: await this.page.title(),\r\n      viewport: this.page.viewportSize(),\r\n      userAgent: await this.page.evaluate(() => navigator.userAgent)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Cierra el navegador\r\n   */\r\n  async close(): Promise<void> {\r\n    try {\r\n      if (this.browser) {\r\n        await this.browser.close();\r\n        this.browser = null;\r\n        this.page = null;\r\n        console.log('üîí Navegador cerrado');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error cerrando navegador:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtiene la p√°gina actual (para operaciones avanzadas)\r\n   */\r\n  getPage(): Page | null {\r\n    return this.page;\r\n  }\r\n}\r\n\r\n// Instancia global del screenshot manager\r\nexport const screenshotManager = new ScreenshotManager();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}