d7668bbcafe87be128556e2773793233
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_7g0fozxh0() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\payments\\create-preference\\route.ts";
  var hash = "28f1d0e471bb504b839ab7879a90e878a6bf5416";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\payments\\create-preference\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 20
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 18
        },
        end: {
          line: 21,
          column: 66
        }
      },
      "8": {
        start: {
          line: 22,
          column: 21
        },
        end: {
          line: 22,
          column: 72
        }
      },
      "9": {
        start: {
          line: 23,
          column: 14
        },
        end: {
          line: 23,
          column: 51
        }
      },
      "10": {
        start: {
          line: 24,
          column: 13
        },
        end: {
          line: 24,
          column: 27
        }
      },
      "11": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 60
        }
      },
      "12": {
        start: {
          line: 26,
          column: 21
        },
        end: {
          line: 26,
          column: 71
        }
      },
      "13": {
        start: {
          line: 27,
          column: 31
        },
        end: {
          line: 27,
          column: 95
        }
      },
      "14": {
        start: {
          line: 28,
          column: 17
        },
        end: {
          line: 28,
          column: 62
        }
      },
      "15": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 24
        }
      },
      "16": {
        start: {
          line: 31,
          column: 31
        },
        end: {
          line: 57,
          column: 2
        }
      },
      "17": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 53
        }
      },
      "18": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "19": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 76
        }
      },
      "20": {
        start: {
          line: 67,
          column: 22
        },
        end: {
          line: 72,
          column: 6
        }
      },
      "21": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 76,
          column: 5
        }
      },
      "22": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 63
        }
      },
      "23": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 58
        }
      },
      "24": {
        start: {
          line: 79,
          column: 25
        },
        end: {
          line: 79,
          column: 35
        }
      },
      "25": {
        start: {
          line: 80,
          column: 21
        },
        end: {
          line: 80,
          column: 72
        }
      },
      "26": {
        start: {
          line: 81,
          column: 22
        },
        end: {
          line: 81,
          column: 68
        }
      },
      "27": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 89,
          column: 7
        }
      },
      "28": {
        start: {
          line: 91,
          column: 28
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "29": {
        start: {
          line: 95,
          column: 28
        },
        end: {
          line: 95,
          column: 92
        }
      },
      "30": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 115,
          column: 5
        }
      },
      "31": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 101,
          column: 11
        }
      },
      "32": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 114,
          column: 11
        }
      },
      "33": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 488,
          column: 5
        }
      },
      "34": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "35": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 121,
          column: 15
        }
      },
      "36": {
        start: {
          line: 122,
          column: 34
        },
        end: {
          line: 126,
          column: 13
        }
      },
      "37": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 129,
          column: 15
        }
      },
      "38": {
        start: {
          line: 132,
          column: 24
        },
        end: {
          line: 132,
          column: 44
        }
      },
      "39": {
        start: {
          line: 133,
          column: 33
        },
        end: {
          line: 133,
          column: 74
        }
      },
      "40": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 143,
          column: 9
        }
      },
      "41": {
        start: {
          line: 135,
          column: 34
        },
        end: {
          line: 139,
          column: 13
        }
      },
      "42": {
        start: {
          line: 138,
          column: 82
        },
        end: {
          line: 138,
          column: 91
        }
      },
      "43": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 142,
          column: 15
        }
      },
      "44": {
        start: {
          line: 144,
          column: 26
        },
        end: {
          line: 144,
          column: 47
        }
      },
      "45": {
        start: {
          line: 145,
          column: 27
        },
        end: {
          line: 145,
          column: 73
        }
      },
      "46": {
        start: {
          line: 145,
          column: 55
        },
        end: {
          line: 145,
          column: 72
        }
      },
      "47": {
        start: {
          line: 146,
          column: 29
        },
        end: {
          line: 146,
          column: 58
        }
      },
      "48": {
        start: {
          line: 150,
          column: 21
        },
        end: {
          line: 150,
          column: 25
        }
      },
      "49": {
        start: {
          line: 151,
          column: 24
        },
        end: {
          line: 151,
          column: 28
        }
      },
      "50": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 187,
          column: 9
        }
      },
      "51": {
        start: {
          line: 154,
          column: 30
        },
        end: {
          line: 154,
          column: 49
        }
      },
      "52": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 183,
          column: 13
        }
      },
      "53": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 38
        }
      },
      "54": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 157,
          column: 80
        }
      },
      "55": {
        start: {
          line: 159,
          column: 65
        },
        end: {
          line: 159,
          column: 169
        }
      },
      "56": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 162,
          column: 17
        }
      },
      "57": {
        start: {
          line: 161,
          column: 20
        },
        end: {
          line: 161,
          column: 81
        }
      },
      "58": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 182,
          column: 17
        }
      },
      "59": {
        start: {
          line: 165,
          column: 70
        },
        end: {
          line: 169,
          column: 44
        }
      },
      "60": {
        start: {
          line: 170,
          column: 20
        },
        end: {
          line: 179,
          column: 21
        }
      },
      "61": {
        start: {
          line: 171,
          column: 24
        },
        end: {
          line: 171,
          column: 91
        }
      },
      "62": {
        start: {
          line: 173,
          column: 24
        },
        end: {
          line: 173,
          column: 38
        }
      },
      "63": {
        start: {
          line: 174,
          column: 27
        },
        end: {
          line: 179,
          column: 21
        }
      },
      "64": {
        start: {
          line: 175,
          column: 24
        },
        end: {
          line: 175,
          column: 44
        }
      },
      "65": {
        start: {
          line: 177,
          column: 24
        },
        end: {
          line: 177,
          column: 80
        }
      },
      "66": {
        start: {
          line: 178,
          column: 24
        },
        end: {
          line: 178,
          column: 38
        }
      },
      "67": {
        start: {
          line: 181,
          column: 20
        },
        end: {
          line: 181,
          column: 45
        }
      },
      "68": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 67
        }
      },
      "69": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 206,
          column: 9
        }
      },
      "70": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 60
        }
      },
      "71": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 46
        }
      },
      "72": {
        start: {
          line: 193,
          column: 61
        },
        end: {
          line: 193,
          column: 143
        }
      },
      "73": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 205,
          column: 13
        }
      },
      "74": {
        start: {
          line: 196,
          column: 51
        },
        end: {
          line: 201,
          column: 18
        }
      },
      "75": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 204,
          column: 17
        }
      },
      "76": {
        start: {
          line: 203,
          column: 20
        },
        end: {
          line: 203,
          column: 85
        }
      },
      "77": {
        start: {
          line: 210,
          column: 57
        },
        end: {
          line: 221,
          column: 29
        }
      },
      "78": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 232,
          column: 9
        }
      },
      "79": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 69
        }
      },
      "80": {
        start: {
          line: 224,
          column: 34
        },
        end: {
          line: 228,
          column: 13
        }
      },
      "81": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 231,
          column: 15
        }
      },
      "82": {
        start: {
          line: 234,
          column: 30
        },
        end: {
          line: 237,
          column: 15
        }
      },
      "83": {
        start: {
          line: 234,
          column: 55
        },
        end: {
          line: 237,
          column: 13
        }
      },
      "84": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 261,
          column: 9
        }
      },
      "85": {
        start: {
          line: 240,
          column: 28
        },
        end: {
          line: 240,
          column: 79
        }
      },
      "86": {
        start: {
          line: 240,
          column: 52
        },
        end: {
          line: 240,
          column: 78
        }
      },
      "87": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 250,
          column: 13
        }
      },
      "88": {
        start: {
          line: 242,
          column: 38
        },
        end: {
          line: 246,
          column: 17
        }
      },
      "89": {
        start: {
          line: 247,
          column: 16
        },
        end: {
          line: 249,
          column: 19
        }
      },
      "90": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 260,
          column: 13
        }
      },
      "91": {
        start: {
          line: 252,
          column: 38
        },
        end: {
          line: 256,
          column: 17
        }
      },
      "92": {
        start: {
          line: 257,
          column: 16
        },
        end: {
          line: 259,
          column: 19
        }
      },
      "93": {
        start: {
          line: 265,
          column: 27
        },
        end: {
          line: 273,
          column: 13
        }
      },
      "94": {
        start: {
          line: 266,
          column: 28
        },
        end: {
          line: 266,
          column: 79
        }
      },
      "95": {
        start: {
          line: 266,
          column: 52
        },
        end: {
          line: 266,
          column: 78
        }
      },
      "96": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 269,
          column: 13
        }
      },
      "97": {
        start: {
          line: 268,
          column: 16
        },
        end: {
          line: 268,
          column: 29
        }
      },
      "98": {
        start: {
          line: 271,
          column: 31
        },
        end: {
          line: 271,
          column: 53
        }
      },
      "99": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 54
        }
      },
      "100": {
        start: {
          line: 274,
          column: 28
        },
        end: {
          line: 274,
          column: 53
        }
      },
      "101": {
        start: {
          line: 278,
          column: 51
        },
        end: {
          line: 292,
          column: 28
        }
      },
      "102": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 310,
          column: 9
        }
      },
      "103": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 294,
          column: 63
        }
      },
      "104": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 301,
          column: 15
        }
      },
      "105": {
        start: {
          line: 302,
          column: 34
        },
        end: {
          line: 306,
          column: 13
        }
      },
      "106": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 309,
          column: 15
        }
      },
      "107": {
        start: {
          line: 314,
          column: 27
        },
        end: {
          line: 327,
          column: 10
        }
      },
      "108": {
        start: {
          line: 315,
          column: 28
        },
        end: {
          line: 315,
          column: 79
        }
      },
      "109": {
        start: {
          line: 315,
          column: 52
        },
        end: {
          line: 315,
          column: 78
        }
      },
      "110": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 318,
          column: 13
        }
      },
      "111": {
        start: {
          line: 317,
          column: 16
        },
        end: {
          line: 317,
          column: 69
        }
      },
      "112": {
        start: {
          line: 320,
          column: 31
        },
        end: {
          line: 320,
          column: 53
        }
      },
      "113": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 326,
          column: 14
        }
      },
      "114": {
        start: {
          line: 328,
          column: 38
        },
        end: {
          line: 328,
          column: 106
        }
      },
      "115": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 341,
          column: 9
        }
      },
      "116": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 330,
          column: 69
        }
      },
      "117": {
        start: {
          line: 332,
          column: 12
        },
        end: {
          line: 332,
          column: 85
        }
      },
      "118": {
        start: {
          line: 333,
          column: 34
        },
        end: {
          line: 337,
          column: 13
        }
      },
      "119": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 340,
          column: 15
        }
      },
      "120": {
        start: {
          line: 345,
          column: 33
        },
        end: {
          line: 362,
          column: 10
        }
      },
      "121": {
        start: {
          line: 346,
          column: 30
        },
        end: {
          line: 346,
          column: 93
        }
      },
      "122": {
        start: {
          line: 346,
          column: 59
        },
        end: {
          line: 346,
          column: 92
        }
      },
      "123": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 349,
          column: 13
        }
      },
      "124": {
        start: {
          line: 348,
          column: 16
        },
        end: {
          line: 348,
          column: 82
        }
      },
      "125": {
        start: {
          line: 351,
          column: 31
        },
        end: {
          line: 351,
          column: 53
        }
      },
      "126": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 361,
          column: 14
        }
      },
      "127": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 374,
          column: 9
        }
      },
      "128": {
        start: {
          line: 365,
          column: 12
        },
        end: {
          line: 373,
          column: 15
        }
      },
      "129": {
        start: {
          line: 376,
          column: 33
        },
        end: {
          line: 409,
          column: 10
        }
      },
      "130": {
        start: {
          line: 411,
          column: 8
        },
        end: {
          line: 413,
          column: 9
        }
      },
      "131": {
        start: {
          line: 412,
          column: 12
        },
        end: {
          line: 412,
          column: 120
        }
      },
      "132": {
        start: {
          line: 415,
          column: 31
        },
        end: {
          line: 415,
          column: 88
        }
      },
      "133": {
        start: {
          line: 416,
          column: 39
        },
        end: {
          line: 418,
          column: 29
        }
      },
      "134": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 425,
          column: 9
        }
      },
      "135": {
        start: {
          line: 420,
          column: 12
        },
        end: {
          line: 424,
          column: 15
        }
      },
      "136": {
        start: {
          line: 427,
          column: 31
        },
        end: {
          line: 427,
          column: 56
        }
      },
      "137": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 437,
          column: 11
        }
      },
      "138": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 445,
          column: 11
        }
      },
      "139": {
        start: {
          line: 447,
          column: 25
        },
        end: {
          line: 453,
          column: 10
        }
      },
      "140": {
        start: {
          line: 455,
          column: 8
        },
        end: {
          line: 458,
          column: 11
        }
      },
      "141": {
        start: {
          line: 460,
          column: 8
        },
        end: {
          line: 460,
          column: 97
        }
      },
      "142": {
        start: {
          line: 463,
          column: 31
        },
        end: {
          line: 463,
          column: 56
        }
      },
      "143": {
        start: {
          line: 464,
          column: 8
        },
        end: {
          line: 467,
          column: 11
        }
      },
      "144": {
        start: {
          line: 468,
          column: 8
        },
        end: {
          line: 475,
          column: 11
        }
      },
      "145": {
        start: {
          line: 477,
          column: 8
        },
        end: {
          line: 481,
          column: 11
        }
      },
      "146": {
        start: {
          line: 482,
          column: 8
        },
        end: {
          line: 487,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 16
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "getFinalPrice",
        decl: {
          start: {
            line: 59,
            column: 9
          },
          end: {
            line: 59,
            column: 22
          }
        },
        loc: {
          start: {
            line: 59,
            column: 32
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 59
      },
      "4": {
        name: "createTemporaryUser",
        decl: {
          start: {
            line: 63,
            column: 15
          },
          end: {
            line: 63,
            column: 34
          }
        },
        loc: {
          start: {
            line: 63,
            column: 56
          },
          end: {
            line: 77,
            column: 1
          }
        },
        line: 63
      },
      "5": {
        name: "POST",
        decl: {
          start: {
            line: 78,
            column: 15
          },
          end: {
            line: 78,
            column: 19
          }
        },
        loc: {
          start: {
            line: 78,
            column: 29
          },
          end: {
            line: 489,
            column: 1
          }
        },
        line: 78
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 138,
            column: 77
          },
          end: {
            line: 138,
            column: 78
          }
        },
        loc: {
          start: {
            line: 138,
            column: 82
          },
          end: {
            line: 138,
            column: 91
          }
        },
        line: 138
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 145,
            column: 47
          },
          end: {
            line: 145,
            column: 48
          }
        },
        loc: {
          start: {
            line: 145,
            column: 55
          },
          end: {
            line: 145,
            column: 72
          }
        },
        line: 145
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 234,
            column: 43
          },
          end: {
            line: 234,
            column: 44
          }
        },
        loc: {
          start: {
            line: 234,
            column: 55
          },
          end: {
            line: 237,
            column: 13
          }
        },
        line: 234
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 240,
            column: 47
          },
          end: {
            line: 240,
            column: 48
          }
        },
        loc: {
          start: {
            line: 240,
            column: 52
          },
          end: {
            line: 240,
            column: 78
          }
        },
        line: 240
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 265,
            column: 50
          },
          end: {
            line: 265,
            column: 51
          }
        },
        loc: {
          start: {
            line: 265,
            column: 65
          },
          end: {
            line: 273,
            column: 9
          }
        },
        line: 265
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 266,
            column: 47
          },
          end: {
            line: 266,
            column: 48
          }
        },
        loc: {
          start: {
            line: 266,
            column: 52
          },
          end: {
            line: 266,
            column: 78
          }
        },
        line: 266
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 314,
            column: 47
          },
          end: {
            line: 314,
            column: 48
          }
        },
        loc: {
          start: {
            line: 314,
            column: 55
          },
          end: {
            line: 327,
            column: 9
          }
        },
        line: 314
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 315,
            column: 47
          },
          end: {
            line: 315,
            column: 48
          }
        },
        loc: {
          start: {
            line: 315,
            column: 52
          },
          end: {
            line: 315,
            column: 78
          }
        },
        line: 315
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 345,
            column: 51
          },
          end: {
            line: 345,
            column: 52
          }
        },
        loc: {
          start: {
            line: 345,
            column: 62
          },
          end: {
            line: 362,
            column: 9
          }
        },
        line: 345
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 346,
            column: 51
          },
          end: {
            line: 346,
            column: 52
          }
        },
        loc: {
          start: {
            line: 346,
            column: 59
          },
          end: {
            line: 346,
            column: 92
          }
        },
        line: 346
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 60,
            column: 11
          },
          end: {
            line: 60,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 11
          },
          end: {
            line: 60,
            column: 35
          }
        }, {
          start: {
            line: 60,
            column: 39
          },
          end: {
            line: 60,
            column: 52
          }
        }],
        line: 60
      },
      "1": {
        loc: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "2": {
        loc: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "3": {
        loc: {
          start: {
            line: 80,
            column: 21
          },
          end: {
            line: 80,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 21
          },
          end: {
            line: 80,
            column: 59
          }
        }, {
          start: {
            line: 80,
            column: 63
          },
          end: {
            line: 80,
            column: 72
          }
        }],
        line: 80
      },
      "4": {
        loc: {
          start: {
            line: 81,
            column: 22
          },
          end: {
            line: 81,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 22
          },
          end: {
            line: 81,
            column: 55
          }
        }, {
          start: {
            line: 81,
            column: 59
          },
          end: {
            line: 81,
            column: 68
          }
        }],
        line: 81
      },
      "5": {
        loc: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "6": {
        loc: {
          start: {
            line: 112,
            column: 31
          },
          end: {
            line: 112,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 31
          },
          end: {
            line: 112,
            column: 69
          }
        }, {
          start: {
            line: 112,
            column: 73
          },
          end: {
            line: 112,
            column: 77
          }
        }],
        line: 112
      },
      "7": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "8": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "9": {
        loc: {
          start: {
            line: 146,
            column: 29
          },
          end: {
            line: 146,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 29
          },
          end: {
            line: 146,
            column: 53
          }
        }, {
          start: {
            line: 146,
            column: 57
          },
          end: {
            line: 146,
            column: 58
          }
        }],
        line: 146
      },
      "10": {
        loc: {
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 183,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 183,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "11": {
        loc: {
          start: {
            line: 157,
            column: 28
          },
          end: {
            line: 157,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 28
          },
          end: {
            line: 157,
            column: 71
          }
        }, {
          start: {
            line: 157,
            column: 75
          },
          end: {
            line: 157,
            column: 79
          }
        }],
        line: 157
      },
      "12": {
        loc: {
          start: {
            line: 160,
            column: 16
          },
          end: {
            line: 162,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 16
          },
          end: {
            line: 162,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "13": {
        loc: {
          start: {
            line: 160,
            column: 20
          },
          end: {
            line: 160,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 20
          },
          end: {
            line: 160,
            column: 29
          }
        }, {
          start: {
            line: 160,
            column: 33
          },
          end: {
            line: 160,
            column: 62
          }
        }],
        line: 160
      },
      "14": {
        loc: {
          start: {
            line: 164,
            column: 16
          },
          end: {
            line: 182,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 16
          },
          end: {
            line: 182,
            column: 17
          }
        }, {
          start: {
            line: 180,
            column: 23
          },
          end: {
            line: 182,
            column: 17
          }
        }],
        line: 164
      },
      "15": {
        loc: {
          start: {
            line: 168,
            column: 30
          },
          end: {
            line: 168,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 30
          },
          end: {
            line: 168,
            column: 95
          }
        }, {
          start: {
            line: 168,
            column: 99
          },
          end: {
            line: 168,
            column: 108
          }
        }],
        line: 168
      },
      "16": {
        loc: {
          start: {
            line: 168,
            column: 33
          },
          end: {
            line: 168,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 33
          },
          end: {
            line: 168,
            column: 52
          }
        }, {
          start: {
            line: 168,
            column: 56
          },
          end: {
            line: 168,
            column: 58
          }
        }],
        line: 168
      },
      "17": {
        loc: {
          start: {
            line: 168,
            column: 62
          },
          end: {
            line: 168,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 62
          },
          end: {
            line: 168,
            column: 80
          }
        }, {
          start: {
            line: 168,
            column: 84
          },
          end: {
            line: 168,
            column: 86
          }
        }],
        line: 168
      },
      "18": {
        loc: {
          start: {
            line: 170,
            column: 20
          },
          end: {
            line: 179,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 20
          },
          end: {
            line: 179,
            column: 21
          }
        }, {
          start: {
            line: 174,
            column: 27
          },
          end: {
            line: 179,
            column: 21
          }
        }],
        line: 170
      },
      "19": {
        loc: {
          start: {
            line: 174,
            column: 27
          },
          end: {
            line: 179,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 27
          },
          end: {
            line: 179,
            column: 21
          }
        }, {
          start: {
            line: 176,
            column: 27
          },
          end: {
            line: 179,
            column: 21
          }
        }],
        line: 174
      },
      "20": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "21": {
        loc: {
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 205,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 205,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "22": {
        loc: {
          start: {
            line: 202,
            column: 16
          },
          end: {
            line: 204,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 16
          },
          end: {
            line: 204,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "23": {
        loc: {
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 232,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 232,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "24": {
        loc: {
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 222,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 222,
            column: 25
          }
        }, {
          start: {
            line: 222,
            column: 29
          },
          end: {
            line: 222,
            column: 38
          }
        }],
        line: 222
      },
      "25": {
        loc: {
          start: {
            line: 236,
            column: 26
          },
          end: {
            line: 236,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 236,
            column: 76
          },
          end: {
            line: 236,
            column: 95
          }
        }, {
          start: {
            line: 236,
            column: 98
          },
          end: {
            line: 236,
            column: 102
          }
        }],
        line: 236
      },
      "26": {
        loc: {
          start: {
            line: 236,
            column: 26
          },
          end: {
            line: 236,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 26
          },
          end: {
            line: 236,
            column: 42
          }
        }, {
          start: {
            line: 236,
            column: 46
          },
          end: {
            line: 236,
            column: 73
          }
        }],
        line: 236
      },
      "27": {
        loc: {
          start: {
            line: 241,
            column: 12
          },
          end: {
            line: 250,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 12
          },
          end: {
            line: 250,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "28": {
        loc: {
          start: {
            line: 251,
            column: 12
          },
          end: {
            line: 260,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 12
          },
          end: {
            line: 260,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "29": {
        loc: {
          start: {
            line: 267,
            column: 12
          },
          end: {
            line: 269,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 267,
            column: 12
          },
          end: {
            line: 269,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 267
      },
      "30": {
        loc: {
          start: {
            line: 282,
            column: 30
          },
          end: {
            line: 282,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 282,
            column: 60
          },
          end: {
            line: 282,
            column: 102
          }
        }, {
          start: {
            line: 282,
            column: 105
          },
          end: {
            line: 282,
            column: 109
          }
        }],
        line: 282
      },
      "31": {
        loc: {
          start: {
            line: 283,
            column: 32
          },
          end: {
            line: 283,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 283,
            column: 32
          },
          end: {
            line: 283,
            column: 60
          }
        }, {
          start: {
            line: 283,
            column: 64
          },
          end: {
            line: 283,
            column: 85
          }
        }],
        line: 283
      },
      "32": {
        loc: {
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 310,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 310,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      },
      "33": {
        loc: {
          start: {
            line: 293,
            column: 12
          },
          end: {
            line: 293,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 293,
            column: 12
          },
          end: {
            line: 293,
            column: 22
          }
        }, {
          start: {
            line: 293,
            column: 26
          },
          end: {
            line: 293,
            column: 32
          }
        }],
        line: 293
      },
      "34": {
        loc: {
          start: {
            line: 299,
            column: 34
          },
          end: {
            line: 299,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 299,
            column: 64
          },
          end: {
            line: 299,
            column: 106
          }
        }, {
          start: {
            line: 299,
            column: 109
          },
          end: {
            line: 299,
            column: 113
          }
        }],
        line: 299
      },
      "35": {
        loc: {
          start: {
            line: 300,
            column: 36
          },
          end: {
            line: 300,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 300,
            column: 36
          },
          end: {
            line: 300,
            column: 64
          }
        }, {
          start: {
            line: 300,
            column: 68
          },
          end: {
            line: 300,
            column: 89
          }
        }],
        line: 300
      },
      "36": {
        loc: {
          start: {
            line: 305,
            column: 47
          },
          end: {
            line: 305,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 305,
            column: 47
          },
          end: {
            line: 305,
            column: 66
          }
        }, {
          start: {
            line: 305,
            column: 70
          },
          end: {
            line: 305,
            column: 85
          }
        }],
        line: 305
      },
      "37": {
        loc: {
          start: {
            line: 316,
            column: 12
          },
          end: {
            line: 318,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 316,
            column: 12
          },
          end: {
            line: 318,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 316
      },
      "38": {
        loc: {
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 341,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 341,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 329
      },
      "39": {
        loc: {
          start: {
            line: 347,
            column: 12
          },
          end: {
            line: 349,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 347,
            column: 12
          },
          end: {
            line: 349,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 347
      },
      "40": {
        loc: {
          start: {
            line: 355,
            column: 57
          },
          end: {
            line: 355,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 355,
            column: 57
          },
          end: {
            line: 355,
            column: 79
          }
        }, {
          start: {
            line: 355,
            column: 83
          },
          end: {
            line: 355,
            column: 92
          }
        }],
        line: 355
      },
      "41": {
        loc: {
          start: {
            line: 356,
            column: 29
          },
          end: {
            line: 356,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 356,
            column: 29
          },
          end: {
            line: 356,
            column: 58
          }
        }, {
          start: {
            line: 356,
            column: 62
          },
          end: {
            line: 356,
            column: 64
          }
        }],
        line: 356
      },
      "42": {
        loc: {
          start: {
            line: 357,
            column: 29
          },
          end: {
            line: 357,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 357,
            column: 29
          },
          end: {
            line: 357,
            column: 51
          }
        }, {
          start: {
            line: 357,
            column: 55
          },
          end: {
            line: 357,
            column: 64
          }
        }],
        line: 357
      },
      "43": {
        loc: {
          start: {
            line: 364,
            column: 8
          },
          end: {
            line: 374,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 364,
            column: 8
          },
          end: {
            line: 374,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 364
      },
      "44": {
        loc: {
          start: {
            line: 382,
            column: 23
          },
          end: {
            line: 385,
            column: 29
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 382,
            column: 47
          },
          end: {
            line: 385,
            column: 17
          }
        }, {
          start: {
            line: 385,
            column: 20
          },
          end: {
            line: 385,
            column: 29
          }
        }],
        line: 382
      },
      "45": {
        loc: {
          start: {
            line: 387,
            column: 25
          },
          end: {
            line: 391,
            column: 29
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 387,
            column: 46
          },
          end: {
            line: 391,
            column: 17
          }
        }, {
          start: {
            line: 391,
            column: 20
          },
          end: {
            line: 391,
            column: 29
          }
        }],
        line: 387
      },
      "46": {
        loc: {
          start: {
            line: 399,
            column: 23
          },
          end: {
            line: 408,
            column: 25
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 399,
            column: 44
          },
          end: {
            line: 408,
            column: 13
          }
        }, {
          start: {
            line: 408,
            column: 16
          },
          end: {
            line: 408,
            column: 25
          }
        }],
        line: 399
      },
      "47": {
        loc: {
          start: {
            line: 411,
            column: 8
          },
          end: {
            line: 413,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 411,
            column: 8
          },
          end: {
            line: 413,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 411
      },
      "48": {
        loc: {
          start: {
            line: 412,
            column: 28
          },
          end: {
            line: 412,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 412,
            column: 58
          },
          end: {
            line: 412,
            column: 80
          }
        }, {
          start: {
            line: 412,
            column: 83
          },
          end: {
            line: 412,
            column: 118
          }
        }],
        line: 412
      },
      "49": {
        loc: {
          start: {
            line: 415,
            column: 31
          },
          end: {
            line: 415,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 415,
            column: 60
          },
          end: {
            line: 415,
            column: 81
          }
        }, {
          start: {
            line: 415,
            column: 84
          },
          end: {
            line: 415,
            column: 88
          }
        }],
        line: 415
      },
      "50": {
        loc: {
          start: {
            line: 419,
            column: 8
          },
          end: {
            line: 425,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 419,
            column: 8
          },
          end: {
            line: 425,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 419
      },
      "51": {
        loc: {
          start: {
            line: 484,
            column: 19
          },
          end: {
            line: 484,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 484,
            column: 60
          },
          end: {
            line: 484,
            column: 73
          }
        }, {
          start: {
            line: 484,
            column: 76
          },
          end: {
            line: 484,
            column: 104
          }
        }],
        line: 484
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\payments\\create-preference\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - CREATE PAYMENT PREFERENCE API\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { CreatePreferencePayload } from '@/types/checkout';\r\nimport { ApiResponse } from '@/types/api';\r\nimport { createPaymentPreference } from '@/lib/integrations/mercadopago';\r\nimport type { MercadoPagoItem } from '@/lib/integrations/mercadopago';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { CHECKOUT_CONSTANTS, VALIDATION_CONSTANTS } from '@/constants/shop';\r\nimport { z } from 'zod';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\nimport { checkRateLimit, addRateLimitHeaders, endpointKeyGenerator } from '@/lib/enterprise/rate-limiter';\r\nimport { ENTERPRISE_RATE_LIMIT_CONFIGS } from '@/lib/rate-limiting/enterprise-rate-limiter';\r\nimport { metricsCollector } from '@/lib/enterprise/metrics';\r\n\r\n// Schema de validaci\xF3n para la entrada\r\nconst CreatePreferenceSchema = z.object({\r\n  items: z.array(z.object({\r\n    id: z.string().min(1, 'ID de producto requerido'),\r\n    quantity: z.number().min(1, 'Cantidad debe ser mayor a 0').max(99, 'Cantidad m\xE1xima excedida'),\r\n  })).min(1, 'Al menos un producto es requerido'),\r\n  payer: z.object({\r\n    name: z.string().min(VALIDATION_CONSTANTS.MIN_NAME_LENGTH, 'Nombre requerido'),\r\n    surname: z.string().min(VALIDATION_CONSTANTS.MIN_NAME_LENGTH, 'Apellido requerido'),\r\n    email: z.string().email('Email inv\xE1lido'),\r\n    phone: z.string().regex(VALIDATION_CONSTANTS.PHONE_REGEX, 'Tel\xE9fono inv\xE1lido').optional(),\r\n    identification: z.object({\r\n      type: z.string().min(1, 'Tipo de identificaci\xF3n requerido'),\r\n      number: z.string().min(1, 'N\xFAmero de identificaci\xF3n requerido'),\r\n    }).optional(),\r\n  }),\r\n  shipping: z.object({\r\n    cost: z.number().min(0, 'Costo de env\xEDo inv\xE1lido'),\r\n    address: z.object({\r\n      street_name: z.string().min(1, 'Nombre de calle requerido'),\r\n      street_number: z.string().min(1, 'N\xFAmero de calle requerido'),\r\n      zip_code: z.string().min(1, 'C\xF3digo postal requerido'),\r\n      city_name: z.string().min(1, 'Ciudad requerida'),\r\n      state_name: z.string().min(1, 'Provincia requerida'),\r\n    }),\r\n  }).optional(),\r\n  external_reference: z.string().optional(),\r\n});\r\n\r\ninterface Product {\r\n  id: number;\r\n  name: string;\r\n  price: number;\r\n  discounted_price?: number;\r\n  images?: {\r\n    previews: string[];\r\n  };\r\n  category?: {\r\n    name: string;\r\n    slug: string;\r\n  };\r\n}\r\n\r\n// Funci\xF3n helper para calcular precio final\r\nfunction getFinalPrice(product: { price: number; discounted_price?: number | null }): number {\r\n  return product.discounted_price ?? product.price;\r\n}\r\n\r\n// Funci\xF3n helper para crear usuario temporal\r\nasync function createTemporaryUser(userId: string, email: string, name: string) {\r\n  if (!supabaseAdmin) {\r\n    throw new Error('Cliente administrativo de Supabase no disponible');\r\n  }\r\n\r\n  const { error } = await supabaseAdmin\r\n    .from('users')\r\n    .insert({\r\n      id: userId,\r\n      clerk_id: 'temp-user',\r\n      email,\r\n      name,\r\n    });\r\n\r\n  if (error) {\r\n    console.error('Error creating temporary user:', error);\r\n    throw new Error('Error creando usuario temporal');\r\n  }\r\n}\r\n\r\nexport async function POST(request: NextRequest) {\r\n  const requestStart = Date.now();\r\n  const clientIP = request.headers.get('x-forwarded-for') || 'unknown';\r\n  const userAgent = request.headers.get('user-agent') || 'unknown';\r\n\r\n  // \u2705 NUEVO: Logging estructurado del inicio de la request\r\n  logger.info(LogCategory.PAYMENT, 'Create preference request started', {\r\n    endpoint: '/api/payments/create-preference',\r\n    method: 'POST',\r\n  }, {\r\n    clientIP,\r\n    userAgent,\r\n  });\r\n\r\n  // \u2705 NUEVO: Rate limiting avanzado para API de pagos\r\n  const rateLimitConfig = {\r\n    ...ENTERPRISE_RATE_LIMIT_CONFIGS.PAYMENT_API,\r\n    keyGenerator: endpointKeyGenerator('create-preference'),\r\n  };\r\n\r\n  const rateLimitResult = await checkRateLimit(request, rateLimitConfig);\r\n\r\n  if (!rateLimitResult.success) {\r\n    logger.warn(LogCategory.SECURITY, 'Rate limit exceeded for create-preference', {\r\n      clientIP,\r\n      limit: rateLimitResult.limit,\r\n      retryAfter: rateLimitResult.retryAfter,\r\n    });\r\n\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: rateLimitConfig.message,\r\n      retryAfter: rateLimitResult.retryAfter,\r\n    }, {\r\n      status: 429,\r\n      headers: {\r\n        'RateLimit-Limit': rateLimitResult.limit.toString(),\r\n        'RateLimit-Remaining': rateLimitResult.remaining.toString(),\r\n        'RateLimit-Reset': new Date(rateLimitResult.resetTime).toISOString(),\r\n        'Retry-After': rateLimitResult.retryAfter?.toString() || '60',\r\n      }\r\n    });\r\n  }\r\n\r\n  try {\r\n    // Verificar que el cliente administrativo est\xE9 disponible\r\n    if (!supabaseAdmin) {\r\n      logger.error(LogCategory.PAYMENT, 'Supabase admin client not available', undefined, { clientIP });\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'Servicio de base de datos no disponible',\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 503 });\r\n    }\r\n\r\n    // Validar entrada\r\n    const rawData = await request.json();\r\n    const validationResult = CreatePreferenceSchema.safeParse(rawData);\r\n\r\n    if (!validationResult.success) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: `Datos inv\xE1lidos: ${validationResult.error.errors.map(e => e.message).join(', ')}`,\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 400 });\r\n    }\r\n\r\n    const orderData = validationResult.data;\r\n    const productIds = orderData.items.map(item => parseInt(item.id));\r\n    const shippingCost = orderData.shipping?.cost || 0;\r\n\r\n    // ===================================\r\n    // OBTENER USUARIO AUTENTICADO CON CLERK\r\n    // ===================================\r\n    let userId: string | null = null;\r\n    let userEmail: string | null = null;\r\n\r\n    try {\r\n      // Intentar obtener usuario autenticado de Clerk\r\n      const clerkUser = await currentUser();\r\n      if (clerkUser) {\r\n        userId = clerkUser.id;\r\n        userEmail = clerkUser.emailAddresses?.[0]?.emailAddress || null;\r\n\r\n        // Verificar si el usuario existe en nuestra base de datos\r\n        const { data: existingUser, error: userError } = await supabaseAdmin\r\n          .from('users')\r\n          .select('id, clerk_id')\r\n          .eq('clerk_id', clerkUser.id)\r\n          .single();\r\n\r\n        if (userError && userError.code !== 'PGRST116') {\r\n          console.error('Error checking user in database:', userError);\r\n        }\r\n\r\n        // Si el usuario no existe en nuestra DB, crearlo\r\n        if (!existingUser) {\r\n          const { data: newUser, error: createUserError } = await supabaseAdmin\r\n            .from('users')\r\n            .insert({\r\n              clerk_id: clerkUser.id,\r\n              email: userEmail,\r\n              name: `${clerkUser.firstName || ''} ${clerkUser.lastName || ''}`.trim() || 'Usuario',\r\n            })\r\n            .select('id')\r\n            .single();\r\n\r\n          if (createUserError) {\r\n            console.error('Error creating user in database:', createUserError);\r\n            // Continuar con usuario temporal si falla la creaci\xF3n\r\n            userId = null;\r\n          } else if (newUser) {\r\n            userId = newUser.id;\r\n          } else {\r\n            console.error('Error: newUser is null after insertion');\r\n            userId = null;\r\n          }\r\n        } else {\r\n          userId = existingUser.id;\r\n        }\r\n      }\r\n    } catch (clerkError) {\r\n      console.error('Error getting Clerk user:', clerkError);\r\n      // Continuar sin usuario autenticado\r\n    }\r\n\r\n    // Si no hay usuario autenticado, usar usuario temporal\r\n    if (!userId) {\r\n      userId = '00000000-0000-4000-8000-000000000000';\r\n      userEmail = orderData.payer.email;\r\n\r\n      // Verificar que el usuario temporal existe\r\n      const { data: tempUser, error: tempUserError } = await supabaseAdmin\r\n        .from('users')\r\n        .select('id')\r\n        .eq('id', userId)\r\n        .single();\r\n\r\n      if (tempUserError) {\r\n        // Crear usuario temporal si no existe\r\n        const { error: createTempError } = await supabaseAdmin\r\n          .from('users')\r\n          .insert({\r\n            id: userId,\r\n            clerk_id: 'temp-user',\r\n            email: userEmail,\r\n            name: `${orderData.payer.name} ${orderData.payer.surname}`.trim(),\r\n          });\r\n\r\n        if (createTempError) {\r\n          console.error('Error creating temporary user:', createTempError);\r\n        }\r\n      }\r\n    }\r\n\r\n    // ===================================\r\n    // OBTENER PRODUCTOS Y VALIDAR STOCK\r\n    // ===================================\r\n    const { data: products, error: productsError } = await supabaseAdmin\r\n      .from('products')\r\n      .select(`\r\n        id,\r\n        name,\r\n        price,\r\n        discounted_price,\r\n        stock,\r\n        images,\r\n        category:categories (\r\n          name,\r\n          slug\r\n        )\r\n      `)\r\n      .in('id', productIds);\r\n\r\n    if (productsError || !products) {\r\n      console.error('Error fetching products:', productsError);\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'Error obteniendo productos',\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 500 });\r\n    }\r\n\r\n    // Definir tipo para productos con categor\xEDa (como viene de Supabase)\r\n    type SupabaseProduct = {\r\n      id: number;\r\n      name: string;\r\n      price: number;\r\n      discounted_price: number | null;\r\n      stock: number;\r\n      images: any;\r\n      category: {\r\n        name: string;\r\n        slug: string;\r\n      }[] | null;\r\n    };\r\n\r\n    // Convertir productos para tener categor\xEDa como objeto\r\n    const typedProducts = (products as SupabaseProduct[]).map(product => ({\r\n      ...product,\r\n      category: product.category && product.category.length > 0 ? product.category[0] : null\r\n    }));\r\n\r\n    // Validar stock disponible\r\n    for (const item of orderData.items) {\r\n      const product = typedProducts.find(p => p.id === parseInt(item.id));\r\n      if (!product) {\r\n        const errorResponse: ApiResponse<null> = {\r\n          data: null,\r\n          success: false,\r\n          error: `Producto ${item.id} no encontrado`,\r\n        };\r\n        return NextResponse.json(errorResponse, { status: 400 });\r\n      }\r\n\r\n      if (product.stock < item.quantity) {\r\n        const errorResponse: ApiResponse<null> = {\r\n          data: null,\r\n          success: false,\r\n          error: `Stock insuficiente para ${product.name}. Disponible: ${product.stock}, solicitado: ${item.quantity}`,\r\n        };\r\n        return NextResponse.json(errorResponse, { status: 400 });\r\n      }\r\n    }\r\n\r\n    // ===================================\r\n    // CALCULAR TOTALES CON PRECIOS CORRECTOS\r\n    // ===================================\r\n    const itemsTotal = orderData.items.reduce((total, item) => {\r\n      const product = typedProducts.find(p => p.id === parseInt(item.id));\r\n      if (!product) {return total;}\r\n\r\n      // Usar precio con descuento si existe, sino precio normal\r\n      const finalPrice = getFinalPrice(product);\r\n      return total + (finalPrice * item.quantity);\r\n    }, 0);\r\n\r\n    const totalAmount = itemsTotal + shippingCost;\r\n\r\n    // ===================================\r\n    // CREAR ORDEN EN BASE DE DATOS\r\n    // ===================================\r\n    const { data: order, error: orderError } = await supabaseAdmin\r\n      .from('orders')\r\n      .insert({\r\n        user_id: userId,\r\n        status: 'pending',\r\n        total: totalAmount,\r\n        shipping_address: orderData.shipping?.address ? JSON.stringify(orderData.shipping.address) : null,\r\n        external_reference: orderData.external_reference || `order_${Date.now()}`,\r\n        // \u2705 NUEVO: Guardar informaci\xF3n del payer\r\n        payer_info: {\r\n          name: orderData.payer.name,\r\n          surname: orderData.payer.surname,\r\n          email: orderData.payer.email,\r\n          phone: orderData.payer.phone,\r\n          identification: orderData.payer.identification,\r\n        },\r\n      })\r\n      .select()\r\n      .single();\r\n\r\n    if (orderError || !order) {\r\n      console.error('Error creating order:', orderError);\r\n      console.error('Order data attempted:', {\r\n        user_id: userId,\r\n        status: 'pending',\r\n        total: totalAmount,\r\n        shipping_address: orderData.shipping?.address ? JSON.stringify(orderData.shipping.address) : null,\r\n        external_reference: orderData.external_reference || `order_${Date.now()}`,\r\n      });\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: `Error creando orden: ${orderError?.message || 'Unknown error'}`,\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 500 });\r\n    }\r\n\r\n    // ===================================\r\n    // CREAR ITEMS DE LA ORDEN CON PRECIOS CORRECTOS\r\n    // ===================================\r\n    const orderItems = orderData.items.map(item => {\r\n      const product = typedProducts.find(p => p.id === parseInt(item.id));\r\n      if (!product) {\r\n        throw new Error(`Producto ${item.id} no encontrado`);\r\n      }\r\n\r\n      // Usar precio con descuento si existe, sino precio normal\r\n      const finalPrice = getFinalPrice(product);\r\n\r\n      return {\r\n        order_id: order.id,\r\n        product_id: parseInt(item.id),\r\n        quantity: item.quantity,\r\n        price: finalPrice,\r\n      };\r\n    });\r\n\r\n    const { error: itemsError } = await supabaseAdmin\r\n      .from('order_items')\r\n      .insert(orderItems);\r\n\r\n    if (itemsError) {\r\n      console.error('Error creating order items:', itemsError);\r\n      // Rollback: eliminar orden creada\r\n      await supabaseAdmin.from('orders').delete().eq('id', order.id);\r\n      \r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'Error creando items de orden',\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 500 });\r\n    }\r\n\r\n    // ===================================\r\n    // CONVERTIR ITEMS PARA MERCADOPAGO\r\n    // ===================================\r\n    const mercadoPagoItems: MercadoPagoItem[] = typedProducts.map((product) => {\r\n      const orderItem = orderData.items.find(item => item.id === product.id.toString());\r\n      if (!orderItem) {\r\n        throw new Error(`Order item not found for product ${product.id}`);\r\n      }\r\n\r\n      // Usar precio con descuento si existe, sino precio normal\r\n      const finalPrice = getFinalPrice(product);\r\n\r\n      return {\r\n        id: product.id.toString(),\r\n        title: product.name,\r\n        description: `Producto de pinturer\xEDa - ${product.category?.name || 'General'}`,\r\n        picture_url: product.images?.previews?.[0] || '',\r\n        category_id: product.category?.slug || 'general',\r\n        quantity: orderItem.quantity,\r\n        currency_id: 'ARS',\r\n        unit_price: finalPrice,\r\n      };\r\n    });\r\n\r\n    // Agregar costo de env\xEDo si existe\r\n    if (shippingCost > 0) {\r\n      mercadoPagoItems.push({\r\n        id: 'shipping',\r\n        title: 'Costo de env\xEDo',\r\n        description: 'Env\xEDo a domicilio',\r\n        category_id: 'shipping',\r\n        quantity: 1,\r\n        currency_id: 'ARS',\r\n        unit_price: shippingCost,\r\n      });\r\n    }\r\n\r\n    // \u2705 MEJORADO: Usar nueva funci\xF3n con configuraci\xF3n avanzada\r\n    const preferenceResult = await createPaymentPreference({\r\n      items: mercadoPagoItems,\r\n      payer: {\r\n        name: orderData.payer.name,\r\n        surname: orderData.payer.surname,\r\n        email: orderData.payer.email,\r\n        phone: orderData.payer.phone ? {\r\n          area_code: orderData.payer.phone.substring(0, 3),\r\n          number: orderData.payer.phone.substring(3),\r\n        } : undefined,\r\n        identification: orderData.payer.identification,\r\n        address: orderData.shipping ? {\r\n          street_name: orderData.shipping.address.street_name,\r\n          street_number: orderData.shipping.address.street_number,\r\n          zip_code: orderData.shipping.address.zip_code,\r\n        } : undefined,\r\n      },\r\n      back_urls: {\r\n        success: `${process.env.NEXT_PUBLIC_APP_URL}/checkout/success?order_id=${order.id}`,\r\n        failure: `${process.env.NEXT_PUBLIC_APP_URL}/checkout/failure?order_id=${order.id}`,\r\n        pending: `${process.env.NEXT_PUBLIC_APP_URL}/checkout/pending?order_id=${order.id}`,\r\n      },\r\n      external_reference: order.id.toString(),\r\n      shipments: orderData.shipping ? {\r\n        cost: orderData.shipping.cost,\r\n        receiver_address: {\r\n          zip_code: orderData.shipping.address.zip_code,\r\n          street_name: orderData.shipping.address.street_name,\r\n          street_number: orderData.shipping.address.street_number,\r\n          city_name: orderData.shipping.address.city_name,\r\n          state_name: orderData.shipping.address.state_name,\r\n        },\r\n      } : undefined,\r\n    });\r\n\r\n    // \u2705 MEJORADO: Manejar resultado de la nueva funci\xF3n\r\n    if (!preferenceResult.success) {\r\n      throw new Error('error' in preferenceResult ? preferenceResult.error : 'Error creando preferencia de pago');\r\n    }\r\n\r\n    // Actualizar orden con ID de preferencia\r\n    const preferenceData = 'data' in preferenceResult ? preferenceResult.data : null;\r\n    const { error: updateError } = await supabaseAdmin\r\n      .from('orders')\r\n      .update({\r\n        payment_preference_id: preferenceData?.id,\r\n      })\r\n      .eq('id', order.id);\r\n\r\n    if (updateError) {\r\n      logger.warn(LogCategory.PAYMENT, 'Failed to update order with preference ID', { updateError }, { clientIP });\r\n    }\r\n\r\n    // \u2705 NUEVO: Logging exitoso de creaci\xF3n de preferencia\r\n    const processingTime = Date.now() - requestStart;\r\n    logger.payment(LogLevel.INFO, 'Payment preference created successfully', {\r\n      orderId: order.id.toString(),\r\n      preferenceId: preferenceData?.id,\r\n      amount: totalAmount,\r\n      currency: 'ARS',\r\n      method: 'mercadopago',\r\n    }, {\r\n      clientIP,\r\n      userAgent,\r\n    });\r\n\r\n    logger.performance(LogLevel.INFO, 'Create preference request completed', {\r\n      operation: 'create-preference',\r\n      duration: processingTime,\r\n      endpoint: '/api/payments/create-preference',\r\n      statusCode: 200,\r\n    }, { clientIP });\r\n\r\n    // \u2705 NUEVO: Crear respuesta con headers de rate limiting\r\n    const response = NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        init_point: preferenceData?.init_point,\r\n        preference_id: preferenceData?.id,\r\n      },\r\n    });\r\n\r\n    // \u2705 NUEVO: Registrar m\xE9tricas de \xE9xito\r\n    await metricsCollector.recordRequest(\r\n      'create-preference',\r\n      'POST',\r\n      200,\r\n      Date.now() - requestStart,\r\n      { clientIP, userAgent }\r\n    );\r\n\r\n    // Agregar headers de rate limiting a la respuesta exitosa\r\n    return addRateLimitHeaders(response, rateLimitResult, rateLimitConfig);\r\n\r\n  } catch (error: any) {\r\n    // \u2705 MEJORADO: Logging estructurado de errores\r\n    const processingTime = Date.now() - requestStart;\r\n\r\n    logger.error(LogCategory.PAYMENT, 'Failed to create payment preference', error, {\r\n      clientIP,\r\n      userAgent,\r\n    });\r\n\r\n    logger.performance(LogLevel.ERROR, 'Create preference request failed', {\r\n      operation: 'create-preference',\r\n      duration: processingTime,\r\n      endpoint: '/api/payments/create-preference',\r\n      statusCode: 500,\r\n    }, { clientIP });\r\n\r\n    // \u2705 NUEVO: Registrar m\xE9tricas de error\r\n    await metricsCollector.recordRequest(\r\n      'create-preference',\r\n      'POST',\r\n      500,\r\n      processingTime,\r\n      { clientIP, userAgent, error: error.message }\r\n    );\r\n\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: process.env.NODE_ENV === 'development' ? error.message : 'Error interno del servidor',\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["POST", "runtime", "CreatePreferenceSchema", "z", "object", "items", "array", "id", "string", "min", "quantity", "number", "max", "payer", "name", "VALIDATION_CONSTANTS", "MIN_NAME_LENGTH", "surname", "email", "phone", "regex", "PHONE_REGEX", "optional", "identification", "type", "shipping", "cost", "address", "street_name", "street_number", "zip_code", "city_name", "state_name", "external_reference", "getFinalPrice", "product", "discounted_price", "price", "createTemporaryUser", "userId", "supabaseAdmin", "Error", "error", "from", "insert", "clerk_id", "console", "request", "requestStart", "Date", "now", "clientIP", "headers", "get", "userAgent", "logger", "info", "LogCategory", "PAYMENT", "endpoint", "method", "rateLimitConfig", "ENTERPRISE_RATE_LIMIT_CONFIGS", "PAYMENT_API", "keyGenerator", "endpointKeyGenerator", "rateLimitResult", "checkRateLimit", "success", "warn", "SECURITY", "limit", "retryAfter", "NextResponse", "json", "message", "status", "toString", "remaining", "resetTime", "toISOString", "undefined", "errorResponse", "data", "rawData", "validationResult", "safeParse", "errors", "map", "e", "join", "orderData", "productIds", "item", "parseInt", "shippingCost", "userEmail", "clerkUser", "currentUser", "emailAddresses", "emailAddress", "existingUser", "userError", "select", "eq", "single", "code", "newUser", "createUserError", "firstName", "lastName", "trim", "clerkError", "tempUser", "tempUserError", "createTempError", "products", "productsError", "in", "typedProducts", "category", "length", "find", "p", "stock", "itemsTotal", "reduce", "total", "finalPrice", "totalAmount", "order", "orderError", "user_id", "shipping_address", "JSON", "stringify", "payer_info", "orderItems", "order_id", "product_id", "itemsError", "delete", "mercadoPagoItems", "orderItem", "title", "description", "picture_url", "images", "previews", "category_id", "slug", "currency_id", "unit_price", "push", "preferenceResult", "createPaymentPreference", "area_code", "substring", "back_urls", "process", "env", "NEXT_PUBLIC_APP_URL", "failure", "pending", "shipments", "receiver_address", "preferenceData", "updateError", "update", "payment_preference_id", "processingTime", "payment", "LogLevel", "INFO", "orderId", "preferenceId", "amount", "currency", "performance", "operation", "duration", "statusCode", "response", "init_point", "preference_id", "metricsCollector", "recordRequest", "addRateLimitHeaders", "ERROR", "NODE_ENV"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "28f1d0e471bb504b839ab7879a90e878a6bf5416"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_7g0fozxh0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_7g0fozxh0();
cov_7g0fozxh0().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_7g0fozxh0().f[0]++;
  cov_7g0fozxh0().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_7g0fozxh0().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_7g0fozxh0().s[3]++;
_export(exports, {
  get POST() {
    /* istanbul ignore next */
    cov_7g0fozxh0().f[1]++;
    cov_7g0fozxh0().s[4]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_7g0fozxh0().f[2]++;
    cov_7g0fozxh0().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_7g0fozxh0().s[6]++, require("next/server"));
const _supabase =
/* istanbul ignore next */
(cov_7g0fozxh0().s[7]++, require("../../../../lib/integrations/supabase"));
const _mercadopago =
/* istanbul ignore next */
(cov_7g0fozxh0().s[8]++, require("../../../../lib/integrations/mercadopago"));
const _shop =
/* istanbul ignore next */
(cov_7g0fozxh0().s[9]++, require("../../../../constants/shop"));
const _zod =
/* istanbul ignore next */
(cov_7g0fozxh0().s[10]++, require("zod"));
const _logger =
/* istanbul ignore next */
(cov_7g0fozxh0().s[11]++, require("../../../../lib/enterprise/logger"));
const _ratelimiter =
/* istanbul ignore next */
(cov_7g0fozxh0().s[12]++, require("../../../../lib/enterprise/rate-limiter"));
const _enterpriseratelimiter =
/* istanbul ignore next */
(cov_7g0fozxh0().s[13]++, require("../../../../lib/rate-limiting/enterprise-rate-limiter"));
const _metrics =
/* istanbul ignore next */
(cov_7g0fozxh0().s[14]++, require("../../../../lib/enterprise/metrics"));
const runtime =
/* istanbul ignore next */
(cov_7g0fozxh0().s[15]++, 'nodejs');
// Schema de validaciÃ³n para la entrada
const CreatePreferenceSchema =
/* istanbul ignore next */
(cov_7g0fozxh0().s[16]++, _zod.z.object({
  items: _zod.z.array(_zod.z.object({
    id: _zod.z.string().min(1, 'ID de producto requerido'),
    quantity: _zod.z.number().min(1, 'Cantidad debe ser mayor a 0').max(99, 'Cantidad mÃ¡xima excedida')
  })).min(1, 'Al menos un producto es requerido'),
  payer: _zod.z.object({
    name: _zod.z.string().min(_shop.VALIDATION_CONSTANTS.MIN_NAME_LENGTH, 'Nombre requerido'),
    surname: _zod.z.string().min(_shop.VALIDATION_CONSTANTS.MIN_NAME_LENGTH, 'Apellido requerido'),
    email: _zod.z.string().email('Email invÃ¡lido'),
    phone: _zod.z.string().regex(_shop.VALIDATION_CONSTANTS.PHONE_REGEX, 'TelÃ©fono invÃ¡lido').optional(),
    identification: _zod.z.object({
      type: _zod.z.string().min(1, 'Tipo de identificaciÃ³n requerido'),
      number: _zod.z.string().min(1, 'NÃºmero de identificaciÃ³n requerido')
    }).optional()
  }),
  shipping: _zod.z.object({
    cost: _zod.z.number().min(0, 'Costo de envÃ­o invÃ¡lido'),
    address: _zod.z.object({
      street_name: _zod.z.string().min(1, 'Nombre de calle requerido'),
      street_number: _zod.z.string().min(1, 'NÃºmero de calle requerido'),
      zip_code: _zod.z.string().min(1, 'CÃ³digo postal requerido'),
      city_name: _zod.z.string().min(1, 'Ciudad requerida'),
      state_name: _zod.z.string().min(1, 'Provincia requerida')
    })
  }).optional(),
  external_reference: _zod.z.string().optional()
}));
// FunciÃ³n helper para calcular precio final
function getFinalPrice(product) {
  /* istanbul ignore next */
  cov_7g0fozxh0().f[3]++;
  cov_7g0fozxh0().s[17]++;
  return /* istanbul ignore next */(cov_7g0fozxh0().b[0][0]++, product.discounted_price) ??
  /* istanbul ignore next */
  (cov_7g0fozxh0().b[0][1]++, product.price);
}
// FunciÃ³n helper para crear usuario temporal
async function createTemporaryUser(userId, email, name) {
  /* istanbul ignore next */
  cov_7g0fozxh0().f[4]++;
  cov_7g0fozxh0().s[18]++;
  if (!_supabase.supabaseAdmin) {
    /* istanbul ignore next */
    cov_7g0fozxh0().b[1][0]++;
    cov_7g0fozxh0().s[19]++;
    throw new Error('Cliente administrativo de Supabase no disponible');
  } else
  /* istanbul ignore next */
  {
    cov_7g0fozxh0().b[1][1]++;
  }
  const {
    error
  } =
  /* istanbul ignore next */
  (cov_7g0fozxh0().s[20]++, await _supabase.supabaseAdmin.from('users').insert({
    id: userId,
    clerk_id: 'temp-user',
    email,
    name
  }));
  /* istanbul ignore next */
  cov_7g0fozxh0().s[21]++;
  if (error) {
    /* istanbul ignore next */
    cov_7g0fozxh0().b[2][0]++;
    cov_7g0fozxh0().s[22]++;
    console.error('Error creating temporary user:', error);
    /* istanbul ignore next */
    cov_7g0fozxh0().s[23]++;
    throw new Error('Error creando usuario temporal');
  } else
  /* istanbul ignore next */
  {
    cov_7g0fozxh0().b[2][1]++;
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_7g0fozxh0().f[5]++;
  const requestStart =
  /* istanbul ignore next */
  (cov_7g0fozxh0().s[24]++, Date.now());
  const clientIP =
  /* istanbul ignore next */
  (cov_7g0fozxh0().s[25]++,
  /* istanbul ignore next */
  (cov_7g0fozxh0().b[3][0]++, request.headers.get('x-forwarded-for')) ||
  /* istanbul ignore next */
  (cov_7g0fozxh0().b[3][1]++, 'unknown'));
  const userAgent =
  /* istanbul ignore next */
  (cov_7g0fozxh0().s[26]++,
  /* istanbul ignore next */
  (cov_7g0fozxh0().b[4][0]++, request.headers.get('user-agent')) ||
  /* istanbul ignore next */
  (cov_7g0fozxh0().b[4][1]++, 'unknown'));
  // â NUEVO: Logging estructurado del inicio de la request
  /* istanbul ignore next */
  cov_7g0fozxh0().s[27]++;
  _logger.logger.info(_logger.LogCategory.PAYMENT, 'Create preference request started', {
    endpoint: '/api/payments/create-preference',
    method: 'POST'
  }, {
    clientIP,
    userAgent
  });
  // â NUEVO: Rate limiting avanzado para API de pagos
  const rateLimitConfig =
  /* istanbul ignore next */
  (cov_7g0fozxh0().s[28]++, {
    ..._enterpriseratelimiter.ENTERPRISE_RATE_LIMIT_CONFIGS.PAYMENT_API,
    keyGenerator: (0, _ratelimiter.endpointKeyGenerator)('create-preference')
  });
  const rateLimitResult =
  /* istanbul ignore next */
  (cov_7g0fozxh0().s[29]++, await (0, _ratelimiter.checkRateLimit)(request, rateLimitConfig));
  /* istanbul ignore next */
  cov_7g0fozxh0().s[30]++;
  if (!rateLimitResult.success) {
    /* istanbul ignore next */
    cov_7g0fozxh0().b[5][0]++;
    cov_7g0fozxh0().s[31]++;
    _logger.logger.warn(_logger.LogCategory.SECURITY, 'Rate limit exceeded for create-preference', {
      clientIP,
      limit: rateLimitResult.limit,
      retryAfter: rateLimitResult.retryAfter
    });
    /* istanbul ignore next */
    cov_7g0fozxh0().s[32]++;
    return _server.NextResponse.json({
      success: false,
      error: rateLimitConfig.message,
      retryAfter: rateLimitResult.retryAfter
    }, {
      status: 429,
      headers: {
        'RateLimit-Limit': rateLimitResult.limit.toString(),
        'RateLimit-Remaining': rateLimitResult.remaining.toString(),
        'RateLimit-Reset': new Date(rateLimitResult.resetTime).toISOString(),
        'Retry-After':
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[6][0]++, rateLimitResult.retryAfter?.toString()) ||
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[6][1]++, '60')
      }
    });
  } else
  /* istanbul ignore next */
  {
    cov_7g0fozxh0().b[5][1]++;
  }
  cov_7g0fozxh0().s[33]++;
  try {
    /* istanbul ignore next */
    cov_7g0fozxh0().s[34]++;
    // Verificar que el cliente administrativo estÃ© disponible
    if (!_supabase.supabaseAdmin) {
      /* istanbul ignore next */
      cov_7g0fozxh0().b[7][0]++;
      cov_7g0fozxh0().s[35]++;
      _logger.logger.error(_logger.LogCategory.PAYMENT, 'Supabase admin client not available', undefined, {
        clientIP
      });
      const errorResponse =
      /* istanbul ignore next */
      (cov_7g0fozxh0().s[36]++, {
        data: null,
        success: false,
        error: 'Servicio de base de datos no disponible'
      });
      /* istanbul ignore next */
      cov_7g0fozxh0().s[37]++;
      return _server.NextResponse.json(errorResponse, {
        status: 503
      });
    } else
    /* istanbul ignore next */
    {
      cov_7g0fozxh0().b[7][1]++;
    }
    // Validar entrada
    const rawData =
    /* istanbul ignore next */
    (cov_7g0fozxh0().s[38]++, await request.json());
    const validationResult =
    /* istanbul ignore next */
    (cov_7g0fozxh0().s[39]++, CreatePreferenceSchema.safeParse(rawData));
    /* istanbul ignore next */
    cov_7g0fozxh0().s[40]++;
    if (!validationResult.success) {
      /* istanbul ignore next */
      cov_7g0fozxh0().b[8][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_7g0fozxh0().s[41]++, {
        data: null,
        success: false,
        error: `Datos invÃ¡lidos: ${validationResult.error.errors.map(e => {
          /* istanbul ignore next */
          cov_7g0fozxh0().f[6]++;
          cov_7g0fozxh0().s[42]++;
          return e.message;
        }).join(', ')}`
      });
      /* istanbul ignore next */
      cov_7g0fozxh0().s[43]++;
      return _server.NextResponse.json(errorResponse, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_7g0fozxh0().b[8][1]++;
    }
    const orderData =
    /* istanbul ignore next */
    (cov_7g0fozxh0().s[44]++, validationResult.data);
    const productIds =
    /* istanbul ignore next */
    (cov_7g0fozxh0().s[45]++, orderData.items.map(item => {
      /* istanbul ignore next */
      cov_7g0fozxh0().f[7]++;
      cov_7g0fozxh0().s[46]++;
      return parseInt(item.id);
    }));
    const shippingCost =
    /* istanbul ignore next */
    (cov_7g0fozxh0().s[47]++,
    /* istanbul ignore next */
    (cov_7g0fozxh0().b[9][0]++, orderData.shipping?.cost) ||
    /* istanbul ignore next */
    (cov_7g0fozxh0().b[9][1]++, 0));
    // ===================================
    // OBTENER USUARIO AUTENTICADO CON CLERK
    // ===================================
    let userId =
    /* istanbul ignore next */
    (cov_7g0fozxh0().s[48]++, null);
    let userEmail =
    /* istanbul ignore next */
    (cov_7g0fozxh0().s[49]++, null);
    /* istanbul ignore next */
    cov_7g0fozxh0().s[50]++;
    try {
      // Intentar obtener usuario autenticado de Clerk
      const clerkUser =
      /* istanbul ignore next */
      (cov_7g0fozxh0().s[51]++, await currentUser());
      /* istanbul ignore next */
      cov_7g0fozxh0().s[52]++;
      if (clerkUser) {
        /* istanbul ignore next */
        cov_7g0fozxh0().b[10][0]++;
        cov_7g0fozxh0().s[53]++;
        userId = clerkUser.id;
        /* istanbul ignore next */
        cov_7g0fozxh0().s[54]++;
        userEmail =
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[11][0]++, clerkUser.emailAddresses?.[0]?.emailAddress) ||
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[11][1]++, null);
        // Verificar si el usuario existe en nuestra base de datos
        const {
          data: existingUser,
          error: userError
        } =
        /* istanbul ignore next */
        (cov_7g0fozxh0().s[55]++, await _supabase.supabaseAdmin.from('users').select('id, clerk_id').eq('clerk_id', clerkUser.id).single());
        /* istanbul ignore next */
        cov_7g0fozxh0().s[56]++;
        if (
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[13][0]++, userError) &&
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[13][1]++, userError.code !== 'PGRST116')) {
          /* istanbul ignore next */
          cov_7g0fozxh0().b[12][0]++;
          cov_7g0fozxh0().s[57]++;
          console.error('Error checking user in database:', userError);
        } else
        /* istanbul ignore next */
        {
          cov_7g0fozxh0().b[12][1]++;
        }
        // Si el usuario no existe en nuestra DB, crearlo
        cov_7g0fozxh0().s[58]++;
        if (!existingUser) {
          /* istanbul ignore next */
          cov_7g0fozxh0().b[14][0]++;
          const {
            data: newUser,
            error: createUserError
          } =
          /* istanbul ignore next */
          (cov_7g0fozxh0().s[59]++, await _supabase.supabaseAdmin.from('users').insert({
            clerk_id: clerkUser.id,
            email: userEmail,
            name:
            /* istanbul ignore next */
            (cov_7g0fozxh0().b[15][0]++, `${
            /* istanbul ignore next */
            (cov_7g0fozxh0().b[16][0]++, clerkUser.firstName) ||
            /* istanbul ignore next */
            (cov_7g0fozxh0().b[16][1]++, '')} ${
            /* istanbul ignore next */
            (cov_7g0fozxh0().b[17][0]++, clerkUser.lastName) ||
            /* istanbul ignore next */
            (cov_7g0fozxh0().b[17][1]++, '')}`.trim()) ||
            /* istanbul ignore next */
            (cov_7g0fozxh0().b[15][1]++, 'Usuario')
          }).select('id').single());
          /* istanbul ignore next */
          cov_7g0fozxh0().s[60]++;
          if (createUserError) {
            /* istanbul ignore next */
            cov_7g0fozxh0().b[18][0]++;
            cov_7g0fozxh0().s[61]++;
            console.error('Error creating user in database:', createUserError);
            // Continuar con usuario temporal si falla la creaciÃ³n
            /* istanbul ignore next */
            cov_7g0fozxh0().s[62]++;
            userId = null;
          } else {
            /* istanbul ignore next */
            cov_7g0fozxh0().b[18][1]++;
            cov_7g0fozxh0().s[63]++;
            if (newUser) {
              /* istanbul ignore next */
              cov_7g0fozxh0().b[19][0]++;
              cov_7g0fozxh0().s[64]++;
              userId = newUser.id;
            } else {
              /* istanbul ignore next */
              cov_7g0fozxh0().b[19][1]++;
              cov_7g0fozxh0().s[65]++;
              console.error('Error: newUser is null after insertion');
              /* istanbul ignore next */
              cov_7g0fozxh0().s[66]++;
              userId = null;
            }
          }
        } else {
          /* istanbul ignore next */
          cov_7g0fozxh0().b[14][1]++;
          cov_7g0fozxh0().s[67]++;
          userId = existingUser.id;
        }
      } else
      /* istanbul ignore next */
      {
        cov_7g0fozxh0().b[10][1]++;
      }
    } catch (clerkError) {
      /* istanbul ignore next */
      cov_7g0fozxh0().s[68]++;
      console.error('Error getting Clerk user:', clerkError);
      // Continuar sin usuario autenticado
    }
    // Si no hay usuario autenticado, usar usuario temporal
    /* istanbul ignore next */
    cov_7g0fozxh0().s[69]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_7g0fozxh0().b[20][0]++;
      cov_7g0fozxh0().s[70]++;
      userId = '00000000-0000-4000-8000-000000000000';
      /* istanbul ignore next */
      cov_7g0fozxh0().s[71]++;
      userEmail = orderData.payer.email;
      // Verificar que el usuario temporal existe
      const {
        data: tempUser,
        error: tempUserError
      } =
      /* istanbul ignore next */
      (cov_7g0fozxh0().s[72]++, await _supabase.supabaseAdmin.from('users').select('id').eq('id', userId).single());
      /* istanbul ignore next */
      cov_7g0fozxh0().s[73]++;
      if (tempUserError) {
        /* istanbul ignore next */
        cov_7g0fozxh0().b[21][0]++;
        // Crear usuario temporal si no existe
        const {
          error: createTempError
        } =
        /* istanbul ignore next */
        (cov_7g0fozxh0().s[74]++, await _supabase.supabaseAdmin.from('users').insert({
          id: userId,
          clerk_id: 'temp-user',
          email: userEmail,
          name: `${orderData.payer.name} ${orderData.payer.surname}`.trim()
        }));
        /* istanbul ignore next */
        cov_7g0fozxh0().s[75]++;
        if (createTempError) {
          /* istanbul ignore next */
          cov_7g0fozxh0().b[22][0]++;
          cov_7g0fozxh0().s[76]++;
          console.error('Error creating temporary user:', createTempError);
        } else
        /* istanbul ignore next */
        {
          cov_7g0fozxh0().b[22][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_7g0fozxh0().b[21][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_7g0fozxh0().b[20][1]++;
    }
    // ===================================
    // OBTENER PRODUCTOS Y VALIDAR STOCK
    // ===================================
    const {
      data: products,
      error: productsError
    } =
    /* istanbul ignore next */
    (cov_7g0fozxh0().s[77]++, await _supabase.supabaseAdmin.from('products').select(`
        id,
        name,
        price,
        discounted_price,
        stock,
        images,
        category:categories (
          name,
          slug
        )
      `).in('id', productIds));
    /* istanbul ignore next */
    cov_7g0fozxh0().s[78]++;
    if (
    /* istanbul ignore next */
    (cov_7g0fozxh0().b[24][0]++, productsError) ||
    /* istanbul ignore next */
    (cov_7g0fozxh0().b[24][1]++, !products)) {
      /* istanbul ignore next */
      cov_7g0fozxh0().b[23][0]++;
      cov_7g0fozxh0().s[79]++;
      console.error('Error fetching products:', productsError);
      const errorResponse =
      /* istanbul ignore next */
      (cov_7g0fozxh0().s[80]++, {
        data: null,
        success: false,
        error: 'Error obteniendo productos'
      });
      /* istanbul ignore next */
      cov_7g0fozxh0().s[81]++;
      return _server.NextResponse.json(errorResponse, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_7g0fozxh0().b[23][1]++;
    }
    // Convertir productos para tener categorÃ­a como objeto
    const typedProducts =
    /* istanbul ignore next */
    (cov_7g0fozxh0().s[82]++, products.map(product => {
      /* istanbul ignore next */
      cov_7g0fozxh0().f[8]++;
      cov_7g0fozxh0().s[83]++;
      return {
        ...product,
        category:
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[26][0]++, product.category) &&
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[26][1]++, product.category.length > 0) ?
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[25][0]++, product.category[0]) :
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[25][1]++, null)
      };
    }));
    // Validar stock disponible
    /* istanbul ignore next */
    cov_7g0fozxh0().s[84]++;
    for (const item of orderData.items) {
      const product =
      /* istanbul ignore next */
      (cov_7g0fozxh0().s[85]++, typedProducts.find(p => {
        /* istanbul ignore next */
        cov_7g0fozxh0().f[9]++;
        cov_7g0fozxh0().s[86]++;
        return p.id === parseInt(item.id);
      }));
      /* istanbul ignore next */
      cov_7g0fozxh0().s[87]++;
      if (!product) {
        /* istanbul ignore next */
        cov_7g0fozxh0().b[27][0]++;
        const errorResponse =
        /* istanbul ignore next */
        (cov_7g0fozxh0().s[88]++, {
          data: null,
          success: false,
          error: `Producto ${item.id} no encontrado`
        });
        /* istanbul ignore next */
        cov_7g0fozxh0().s[89]++;
        return _server.NextResponse.json(errorResponse, {
          status: 400
        });
      } else
      /* istanbul ignore next */
      {
        cov_7g0fozxh0().b[27][1]++;
      }
      cov_7g0fozxh0().s[90]++;
      if (product.stock < item.quantity) {
        /* istanbul ignore next */
        cov_7g0fozxh0().b[28][0]++;
        const errorResponse =
        /* istanbul ignore next */
        (cov_7g0fozxh0().s[91]++, {
          data: null,
          success: false,
          error: `Stock insuficiente para ${product.name}. Disponible: ${product.stock}, solicitado: ${item.quantity}`
        });
        /* istanbul ignore next */
        cov_7g0fozxh0().s[92]++;
        return _server.NextResponse.json(errorResponse, {
          status: 400
        });
      } else
      /* istanbul ignore next */
      {
        cov_7g0fozxh0().b[28][1]++;
      }
    }
    // ===================================
    // CALCULAR TOTALES CON PRECIOS CORRECTOS
    // ===================================
    const itemsTotal =
    /* istanbul ignore next */
    (cov_7g0fozxh0().s[93]++, orderData.items.reduce((total, item) => {
      /* istanbul ignore next */
      cov_7g0fozxh0().f[10]++;
      const product =
      /* istanbul ignore next */
      (cov_7g0fozxh0().s[94]++, typedProducts.find(p => {
        /* istanbul ignore next */
        cov_7g0fozxh0().f[11]++;
        cov_7g0fozxh0().s[95]++;
        return p.id === parseInt(item.id);
      }));
      /* istanbul ignore next */
      cov_7g0fozxh0().s[96]++;
      if (!product) {
        /* istanbul ignore next */
        cov_7g0fozxh0().b[29][0]++;
        cov_7g0fozxh0().s[97]++;
        return total;
      } else
      /* istanbul ignore next */
      {
        cov_7g0fozxh0().b[29][1]++;
      }
      // Usar precio con descuento si existe, sino precio normal
      const finalPrice =
      /* istanbul ignore next */
      (cov_7g0fozxh0().s[98]++, getFinalPrice(product));
      /* istanbul ignore next */
      cov_7g0fozxh0().s[99]++;
      return total + finalPrice * item.quantity;
    }, 0));
    const totalAmount =
    /* istanbul ignore next */
    (cov_7g0fozxh0().s[100]++, itemsTotal + shippingCost);
    // ===================================
    // CREAR ORDEN EN BASE DE DATOS
    // ===================================
    const {
      data: order,
      error: orderError
    } =
    /* istanbul ignore next */
    (cov_7g0fozxh0().s[101]++, await _supabase.supabaseAdmin.from('orders').insert({
      user_id: userId,
      status: 'pending',
      total: totalAmount,
      shipping_address: orderData.shipping?.address ?
      /* istanbul ignore next */
      (cov_7g0fozxh0().b[30][0]++, JSON.stringify(orderData.shipping.address)) :
      /* istanbul ignore next */
      (cov_7g0fozxh0().b[30][1]++, null),
      external_reference:
      /* istanbul ignore next */
      (cov_7g0fozxh0().b[31][0]++, orderData.external_reference) ||
      /* istanbul ignore next */
      (cov_7g0fozxh0().b[31][1]++, `order_${Date.now()}`),
      // â NUEVO: Guardar informaciÃ³n del payer
      payer_info: {
        name: orderData.payer.name,
        surname: orderData.payer.surname,
        email: orderData.payer.email,
        phone: orderData.payer.phone,
        identification: orderData.payer.identification
      }
    }).select().single());
    /* istanbul ignore next */
    cov_7g0fozxh0().s[102]++;
    if (
    /* istanbul ignore next */
    (cov_7g0fozxh0().b[33][0]++, orderError) ||
    /* istanbul ignore next */
    (cov_7g0fozxh0().b[33][1]++, !order)) {
      /* istanbul ignore next */
      cov_7g0fozxh0().b[32][0]++;
      cov_7g0fozxh0().s[103]++;
      console.error('Error creating order:', orderError);
      /* istanbul ignore next */
      cov_7g0fozxh0().s[104]++;
      console.error('Order data attempted:', {
        user_id: userId,
        status: 'pending',
        total: totalAmount,
        shipping_address: orderData.shipping?.address ?
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[34][0]++, JSON.stringify(orderData.shipping.address)) :
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[34][1]++, null),
        external_reference:
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[35][0]++, orderData.external_reference) ||
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[35][1]++, `order_${Date.now()}`)
      });
      const errorResponse =
      /* istanbul ignore next */
      (cov_7g0fozxh0().s[105]++, {
        data: null,
        success: false,
        error: `Error creando orden: ${
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[36][0]++, orderError?.message) ||
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[36][1]++, 'Unknown error')}`
      });
      /* istanbul ignore next */
      cov_7g0fozxh0().s[106]++;
      return _server.NextResponse.json(errorResponse, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_7g0fozxh0().b[32][1]++;
    }
    // ===================================
    // CREAR ITEMS DE LA ORDEN CON PRECIOS CORRECTOS
    // ===================================
    const orderItems =
    /* istanbul ignore next */
    (cov_7g0fozxh0().s[107]++, orderData.items.map(item => {
      /* istanbul ignore next */
      cov_7g0fozxh0().f[12]++;
      const product =
      /* istanbul ignore next */
      (cov_7g0fozxh0().s[108]++, typedProducts.find(p => {
        /* istanbul ignore next */
        cov_7g0fozxh0().f[13]++;
        cov_7g0fozxh0().s[109]++;
        return p.id === parseInt(item.id);
      }));
      /* istanbul ignore next */
      cov_7g0fozxh0().s[110]++;
      if (!product) {
        /* istanbul ignore next */
        cov_7g0fozxh0().b[37][0]++;
        cov_7g0fozxh0().s[111]++;
        throw new Error(`Producto ${item.id} no encontrado`);
      } else
      /* istanbul ignore next */
      {
        cov_7g0fozxh0().b[37][1]++;
      }
      // Usar precio con descuento si existe, sino precio normal
      const finalPrice =
      /* istanbul ignore next */
      (cov_7g0fozxh0().s[112]++, getFinalPrice(product));
      /* istanbul ignore next */
      cov_7g0fozxh0().s[113]++;
      return {
        order_id: order.id,
        product_id: parseInt(item.id),
        quantity: item.quantity,
        price: finalPrice
      };
    }));
    const {
      error: itemsError
    } =
    /* istanbul ignore next */
    (cov_7g0fozxh0().s[114]++, await _supabase.supabaseAdmin.from('order_items').insert(orderItems));
    /* istanbul ignore next */
    cov_7g0fozxh0().s[115]++;
    if (itemsError) {
      /* istanbul ignore next */
      cov_7g0fozxh0().b[38][0]++;
      cov_7g0fozxh0().s[116]++;
      console.error('Error creating order items:', itemsError);
      // Rollback: eliminar orden creada
      /* istanbul ignore next */
      cov_7g0fozxh0().s[117]++;
      await _supabase.supabaseAdmin.from('orders').delete().eq('id', order.id);
      const errorResponse =
      /* istanbul ignore next */
      (cov_7g0fozxh0().s[118]++, {
        data: null,
        success: false,
        error: 'Error creando items de orden'
      });
      /* istanbul ignore next */
      cov_7g0fozxh0().s[119]++;
      return _server.NextResponse.json(errorResponse, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_7g0fozxh0().b[38][1]++;
    }
    // ===================================
    // CONVERTIR ITEMS PARA MERCADOPAGO
    // ===================================
    const mercadoPagoItems =
    /* istanbul ignore next */
    (cov_7g0fozxh0().s[120]++, typedProducts.map(product => {
      /* istanbul ignore next */
      cov_7g0fozxh0().f[14]++;
      const orderItem =
      /* istanbul ignore next */
      (cov_7g0fozxh0().s[121]++, orderData.items.find(item => {
        /* istanbul ignore next */
        cov_7g0fozxh0().f[15]++;
        cov_7g0fozxh0().s[122]++;
        return item.id === product.id.toString();
      }));
      /* istanbul ignore next */
      cov_7g0fozxh0().s[123]++;
      if (!orderItem) {
        /* istanbul ignore next */
        cov_7g0fozxh0().b[39][0]++;
        cov_7g0fozxh0().s[124]++;
        throw new Error(`Order item not found for product ${product.id}`);
      } else
      /* istanbul ignore next */
      {
        cov_7g0fozxh0().b[39][1]++;
      }
      // Usar precio con descuento si existe, sino precio normal
      const finalPrice =
      /* istanbul ignore next */
      (cov_7g0fozxh0().s[125]++, getFinalPrice(product));
      /* istanbul ignore next */
      cov_7g0fozxh0().s[126]++;
      return {
        id: product.id.toString(),
        title: product.name,
        description: `Producto de pinturerÃ­a - ${
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[40][0]++, product.category?.name) ||
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[40][1]++, 'General')}`,
        picture_url:
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[41][0]++, product.images?.previews?.[0]) ||
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[41][1]++, ''),
        category_id:
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[42][0]++, product.category?.slug) ||
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[42][1]++, 'general'),
        quantity: orderItem.quantity,
        currency_id: 'ARS',
        unit_price: finalPrice
      };
    }));
    // Agregar costo de envÃ­o si existe
    /* istanbul ignore next */
    cov_7g0fozxh0().s[127]++;
    if (shippingCost > 0) {
      /* istanbul ignore next */
      cov_7g0fozxh0().b[43][0]++;
      cov_7g0fozxh0().s[128]++;
      mercadoPagoItems.push({
        id: 'shipping',
        title: 'Costo de envÃ­o',
        description: 'EnvÃ­o a domicilio',
        category_id: 'shipping',
        quantity: 1,
        currency_id: 'ARS',
        unit_price: shippingCost
      });
    } else
    /* istanbul ignore next */
    {
      cov_7g0fozxh0().b[43][1]++;
    }
    // â MEJORADO: Usar nueva funciÃ³n con configuraciÃ³n avanzada
    const preferenceResult =
    /* istanbul ignore next */
    (cov_7g0fozxh0().s[129]++, await (0, _mercadopago.createPaymentPreference)({
      items: mercadoPagoItems,
      payer: {
        name: orderData.payer.name,
        surname: orderData.payer.surname,
        email: orderData.payer.email,
        phone: orderData.payer.phone ?
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[44][0]++, {
          area_code: orderData.payer.phone.substring(0, 3),
          number: orderData.payer.phone.substring(3)
        }) :
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[44][1]++, undefined),
        identification: orderData.payer.identification,
        address: orderData.shipping ?
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[45][0]++, {
          street_name: orderData.shipping.address.street_name,
          street_number: orderData.shipping.address.street_number,
          zip_code: orderData.shipping.address.zip_code
        }) :
        /* istanbul ignore next */
        (cov_7g0fozxh0().b[45][1]++, undefined)
      },
      back_urls: {
        success: `${process.env.NEXT_PUBLIC_APP_URL}/checkout/success?order_id=${order.id}`,
        failure: `${process.env.NEXT_PUBLIC_APP_URL}/checkout/failure?order_id=${order.id}`,
        pending: `${process.env.NEXT_PUBLIC_APP_URL}/checkout/pending?order_id=${order.id}`
      },
      external_reference: order.id.toString(),
      shipments: orderData.shipping ?
      /* istanbul ignore next */
      (cov_7g0fozxh0().b[46][0]++, {
        cost: orderData.shipping.cost,
        receiver_address: {
          zip_code: orderData.shipping.address.zip_code,
          street_name: orderData.shipping.address.street_name,
          street_number: orderData.shipping.address.street_number,
          city_name: orderData.shipping.address.city_name,
          state_name: orderData.shipping.address.state_name
        }
      }) :
      /* istanbul ignore next */
      (cov_7g0fozxh0().b[46][1]++, undefined)
    }));
    // â MEJORADO: Manejar resultado de la nueva funciÃ³n
    /* istanbul ignore next */
    cov_7g0fozxh0().s[130]++;
    if (!preferenceResult.success) {
      /* istanbul ignore next */
      cov_7g0fozxh0().b[47][0]++;
      cov_7g0fozxh0().s[131]++;
      throw new Error('error' in preferenceResult ?
      /* istanbul ignore next */
      (cov_7g0fozxh0().b[48][0]++, preferenceResult.error) :
      /* istanbul ignore next */
      (cov_7g0fozxh0().b[48][1]++, 'Error creando preferencia de pago'));
    } else
    /* istanbul ignore next */
    {
      cov_7g0fozxh0().b[47][1]++;
    }
    // Actualizar orden con ID de preferencia
    const preferenceData =
    /* istanbul ignore next */
    (cov_7g0fozxh0().s[132]++, 'data' in preferenceResult ?
    /* istanbul ignore next */
    (cov_7g0fozxh0().b[49][0]++, preferenceResult.data) :
    /* istanbul ignore next */
    (cov_7g0fozxh0().b[49][1]++, null));
    const {
      error: updateError
    } =
    /* istanbul ignore next */
    (cov_7g0fozxh0().s[133]++, await _supabase.supabaseAdmin.from('orders').update({
      payment_preference_id: preferenceData?.id
    }).eq('id', order.id));
    /* istanbul ignore next */
    cov_7g0fozxh0().s[134]++;
    if (updateError) {
      /* istanbul ignore next */
      cov_7g0fozxh0().b[50][0]++;
      cov_7g0fozxh0().s[135]++;
      _logger.logger.warn(_logger.LogCategory.PAYMENT, 'Failed to update order with preference ID', {
        updateError
      }, {
        clientIP
      });
    } else
    /* istanbul ignore next */
    {
      cov_7g0fozxh0().b[50][1]++;
    }
    // â NUEVO: Logging exitoso de creaciÃ³n de preferencia
    const processingTime =
    /* istanbul ignore next */
    (cov_7g0fozxh0().s[136]++, Date.now() - requestStart);
    /* istanbul ignore next */
    cov_7g0fozxh0().s[137]++;
    _logger.logger.payment(_logger.LogLevel.INFO, 'Payment preference created successfully', {
      orderId: order.id.toString(),
      preferenceId: preferenceData?.id,
      amount: totalAmount,
      currency: 'ARS',
      method: 'mercadopago'
    }, {
      clientIP,
      userAgent
    });
    /* istanbul ignore next */
    cov_7g0fozxh0().s[138]++;
    _logger.logger.performance(_logger.LogLevel.INFO, 'Create preference request completed', {
      operation: 'create-preference',
      duration: processingTime,
      endpoint: '/api/payments/create-preference',
      statusCode: 200
    }, {
      clientIP
    });
    // â NUEVO: Crear respuesta con headers de rate limiting
    const response =
    /* istanbul ignore next */
    (cov_7g0fozxh0().s[139]++, _server.NextResponse.json({
      success: true,
      data: {
        init_point: preferenceData?.init_point,
        preference_id: preferenceData?.id
      }
    }));
    // â NUEVO: Registrar mÃ©tricas de Ã©xito
    /* istanbul ignore next */
    cov_7g0fozxh0().s[140]++;
    await _metrics.metricsCollector.recordRequest('create-preference', 'POST', 200, Date.now() - requestStart, {
      clientIP,
      userAgent
    });
    // Agregar headers de rate limiting a la respuesta exitosa
    /* istanbul ignore next */
    cov_7g0fozxh0().s[141]++;
    return (0, _ratelimiter.addRateLimitHeaders)(response, rateLimitResult, rateLimitConfig);
  } catch (error) {
    // â MEJORADO: Logging estructurado de errores
    const processingTime =
    /* istanbul ignore next */
    (cov_7g0fozxh0().s[142]++, Date.now() - requestStart);
    /* istanbul ignore next */
    cov_7g0fozxh0().s[143]++;
    _logger.logger.error(_logger.LogCategory.PAYMENT, 'Failed to create payment preference', error, {
      clientIP,
      userAgent
    });
    /* istanbul ignore next */
    cov_7g0fozxh0().s[144]++;
    _logger.logger.performance(_logger.LogLevel.ERROR, 'Create preference request failed', {
      operation: 'create-preference',
      duration: processingTime,
      endpoint: '/api/payments/create-preference',
      statusCode: 500
    }, {
      clientIP
    });
    // â NUEVO: Registrar mÃ©tricas de error
    /* istanbul ignore next */
    cov_7g0fozxh0().s[145]++;
    await _metrics.metricsCollector.recordRequest('create-preference', 'POST', 500, processingTime, {
      clientIP,
      userAgent,
      error: error.message
    });
    /* istanbul ignore next */
    cov_7g0fozxh0().s[146]++;
    return _server.NextResponse.json({
      success: false,
      error: process.env.NODE_ENV === 'development' ?
      /* istanbul ignore next */
      (cov_7g0fozxh0().b[51][0]++, error.message) :
      /* istanbul ignore next */
      (cov_7g0fozxh0().b[51][1]++, 'Error interno del servidor')
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfN2cwZm96eGgwIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiUE9TVCIsImYiLCJydW50aW1lIiwiQ3JlYXRlUHJlZmVyZW5jZVNjaGVtYSIsIl96b2QiLCJ6Iiwib2JqZWN0IiwiaXRlbXMiLCJhcnJheSIsImlkIiwic3RyaW5nIiwibWluIiwicXVhbnRpdHkiLCJudW1iZXIiLCJtYXgiLCJwYXllciIsIm5hbWUiLCJfc2hvcCIsIlZBTElEQVRJT05fQ09OU1RBTlRTIiwiTUlOX05BTUVfTEVOR1RIIiwic3VybmFtZSIsImVtYWlsIiwicGhvbmUiLCJyZWdleCIsIlBIT05FX1JFR0VYIiwib3B0aW9uYWwiLCJpZGVudGlmaWNhdGlvbiIsInR5cGUiLCJzaGlwcGluZyIsImNvc3QiLCJhZGRyZXNzIiwic3RyZWV0X25hbWUiLCJzdHJlZXRfbnVtYmVyIiwiemlwX2NvZGUiLCJjaXR5X25hbWUiLCJzdGF0ZV9uYW1lIiwiZXh0ZXJuYWxfcmVmZXJlbmNlIiwiZ2V0RmluYWxQcmljZSIsInByb2R1Y3QiLCJiIiwiZGlzY291bnRlZF9wcmljZSIsInByaWNlIiwiY3JlYXRlVGVtcG9yYXJ5VXNlciIsInVzZXJJZCIsIl9zdXBhYmFzZSIsInN1cGFiYXNlQWRtaW4iLCJFcnJvciIsImVycm9yIiwiZnJvbSIsImluc2VydCIsImNsZXJrX2lkIiwiY29uc29sZSIsInJlcXVlc3QiLCJyZXF1ZXN0U3RhcnQiLCJEYXRlIiwibm93IiwiY2xpZW50SVAiLCJoZWFkZXJzIiwiZ2V0IiwidXNlckFnZW50IiwiX2xvZ2dlciIsImxvZ2dlciIsImluZm8iLCJMb2dDYXRlZ29yeSIsIlBBWU1FTlQiLCJlbmRwb2ludCIsIm1ldGhvZCIsInJhdGVMaW1pdENvbmZpZyIsIl9lbnRlcnByaXNlcmF0ZWxpbWl0ZXIiLCJFTlRFUlBSSVNFX1JBVEVfTElNSVRfQ09ORklHUyIsIlBBWU1FTlRfQVBJIiwia2V5R2VuZXJhdG9yIiwiX3JhdGVsaW1pdGVyIiwiZW5kcG9pbnRLZXlHZW5lcmF0b3IiLCJyYXRlTGltaXRSZXN1bHQiLCJjaGVja1JhdGVMaW1pdCIsInN1Y2Nlc3MiLCJ3YXJuIiwiU0VDVVJJVFkiLCJsaW1pdCIsInJldHJ5QWZ0ZXIiLCJfc2VydmVyIiwiTmV4dFJlc3BvbnNlIiwianNvbiIsIm1lc3NhZ2UiLCJzdGF0dXMiLCJ0b1N0cmluZyIsInJlbWFpbmluZyIsInJlc2V0VGltZSIsInRvSVNPU3RyaW5nIiwidW5kZWZpbmVkIiwiZXJyb3JSZXNwb25zZSIsImRhdGEiLCJyYXdEYXRhIiwidmFsaWRhdGlvblJlc3VsdCIsInNhZmVQYXJzZSIsImVycm9ycyIsIm1hcCIsImUiLCJqb2luIiwib3JkZXJEYXRhIiwicHJvZHVjdElkcyIsIml0ZW0iLCJwYXJzZUludCIsInNoaXBwaW5nQ29zdCIsInVzZXJFbWFpbCIsImNsZXJrVXNlciIsImN1cnJlbnRVc2VyIiwiZW1haWxBZGRyZXNzZXMiLCJlbWFpbEFkZHJlc3MiLCJleGlzdGluZ1VzZXIiLCJ1c2VyRXJyb3IiLCJzZWxlY3QiLCJlcSIsInNpbmdsZSIsImNvZGUiLCJuZXdVc2VyIiwiY3JlYXRlVXNlckVycm9yIiwiZmlyc3ROYW1lIiwibGFzdE5hbWUiLCJ0cmltIiwiY2xlcmtFcnJvciIsInRlbXBVc2VyIiwidGVtcFVzZXJFcnJvciIsImNyZWF0ZVRlbXBFcnJvciIsInByb2R1Y3RzIiwicHJvZHVjdHNFcnJvciIsImluIiwidHlwZWRQcm9kdWN0cyIsImNhdGVnb3J5IiwibGVuZ3RoIiwiZmluZCIsInAiLCJzdG9jayIsIml0ZW1zVG90YWwiLCJyZWR1Y2UiLCJ0b3RhbCIsImZpbmFsUHJpY2UiLCJ0b3RhbEFtb3VudCIsIm9yZGVyIiwib3JkZXJFcnJvciIsInVzZXJfaWQiLCJzaGlwcGluZ19hZGRyZXNzIiwiSlNPTiIsInN0cmluZ2lmeSIsInBheWVyX2luZm8iLCJvcmRlckl0ZW1zIiwib3JkZXJfaWQiLCJwcm9kdWN0X2lkIiwiaXRlbXNFcnJvciIsImRlbGV0ZSIsIm1lcmNhZG9QYWdvSXRlbXMiLCJvcmRlckl0ZW0iLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwicGljdHVyZV91cmwiLCJpbWFnZXMiLCJwcmV2aWV3cyIsImNhdGVnb3J5X2lkIiwic2x1ZyIsImN1cnJlbmN5X2lkIiwidW5pdF9wcmljZSIsInB1c2giLCJwcmVmZXJlbmNlUmVzdWx0IiwiX21lcmNhZG9wYWdvIiwiY3JlYXRlUGF5bWVudFByZWZlcmVuY2UiLCJhcmVhX2NvZGUiLCJzdWJzdHJpbmciLCJiYWNrX3VybHMiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfQVBQX1VSTCIsImZhaWx1cmUiLCJwZW5kaW5nIiwic2hpcG1lbnRzIiwicmVjZWl2ZXJfYWRkcmVzcyIsInByZWZlcmVuY2VEYXRhIiwidXBkYXRlRXJyb3IiLCJ1cGRhdGUiLCJwYXltZW50X3ByZWZlcmVuY2VfaWQiLCJwcm9jZXNzaW5nVGltZSIsInBheW1lbnQiLCJMb2dMZXZlbCIsIklORk8iLCJvcmRlcklkIiwicHJlZmVyZW5jZUlkIiwiYW1vdW50IiwiY3VycmVuY3kiLCJwZXJmb3JtYW5jZSIsIm9wZXJhdGlvbiIsImR1cmF0aW9uIiwic3RhdHVzQ29kZSIsInJlc3BvbnNlIiwiaW5pdF9wb2ludCIsInByZWZlcmVuY2VfaWQiLCJfbWV0cmljcyIsIm1ldHJpY3NDb2xsZWN0b3IiLCJyZWNvcmRSZXF1ZXN0IiwiYWRkUmF0ZUxpbWl0SGVhZGVycyIsIkVSUk9SIiwiTk9ERV9FTlYiXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXG1hcnRpXFxEZXNrdG9wXFxERVNBUlJPTExPU1dcXEJPSUxFUlBMQVRURSBFLUNPTU1FUkNFXFxzcmNcXGFwcFxcYXBpXFxwYXltZW50c1xcY3JlYXRlLXByZWZlcmVuY2VcXHJvdXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvbmZpZ3VyYWNpw7NuIHBhcmEgTm9kZS5qcyBSdW50aW1lXHJcbmV4cG9ydCBjb25zdCBydW50aW1lID0gJ25vZGVqcyc7XHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyBQSU5URVlBIEUtQ09NTUVSQ0UgLSBDUkVBVEUgUEFZTUVOVCBQUkVGRVJFTkNFIEFQSVxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcclxuaW1wb3J0IHsgc3VwYWJhc2VBZG1pbiB9IGZyb20gJ0AvbGliL2ludGVncmF0aW9ucy9zdXBhYmFzZSc7XHJcbmltcG9ydCB7IENyZWF0ZVByZWZlcmVuY2VQYXlsb2FkIH0gZnJvbSAnQC90eXBlcy9jaGVja291dCc7XHJcbmltcG9ydCB7IEFwaVJlc3BvbnNlIH0gZnJvbSAnQC90eXBlcy9hcGknO1xyXG5pbXBvcnQgeyBjcmVhdGVQYXltZW50UHJlZmVyZW5jZSB9IGZyb20gJ0AvbGliL2ludGVncmF0aW9ucy9tZXJjYWRvcGFnbyc7XHJcbmltcG9ydCB0eXBlIHsgTWVyY2Fkb1BhZ29JdGVtIH0gZnJvbSAnQC9saWIvaW50ZWdyYXRpb25zL21lcmNhZG9wYWdvJztcclxuaW1wb3J0IHsgYXV0aCB9IGZyb20gJ0AvbGliL2F1dGgvY29uZmlnJztcclxuaW1wb3J0IHsgQ0hFQ0tPVVRfQ09OU1RBTlRTLCBWQUxJREFUSU9OX0NPTlNUQU5UUyB9IGZyb20gJ0AvY29uc3RhbnRzL3Nob3AnO1xyXG5pbXBvcnQgeyB6IH0gZnJvbSAnem9kJztcclxuaW1wb3J0IHsgbG9nZ2VyLCBMb2dMZXZlbCwgTG9nQ2F0ZWdvcnkgfSBmcm9tICdAL2xpYi9lbnRlcnByaXNlL2xvZ2dlcic7XHJcbmltcG9ydCB7IGNoZWNrUmF0ZUxpbWl0LCBhZGRSYXRlTGltaXRIZWFkZXJzLCBlbmRwb2ludEtleUdlbmVyYXRvciB9IGZyb20gJ0AvbGliL2VudGVycHJpc2UvcmF0ZS1saW1pdGVyJztcclxuaW1wb3J0IHsgRU5URVJQUklTRV9SQVRFX0xJTUlUX0NPTkZJR1MgfSBmcm9tICdAL2xpYi9yYXRlLWxpbWl0aW5nL2VudGVycHJpc2UtcmF0ZS1saW1pdGVyJztcclxuaW1wb3J0IHsgbWV0cmljc0NvbGxlY3RvciB9IGZyb20gJ0AvbGliL2VudGVycHJpc2UvbWV0cmljcyc7XHJcblxyXG4vLyBTY2hlbWEgZGUgdmFsaWRhY2nDs24gcGFyYSBsYSBlbnRyYWRhXHJcbmNvbnN0IENyZWF0ZVByZWZlcmVuY2VTY2hlbWEgPSB6Lm9iamVjdCh7XHJcbiAgaXRlbXM6IHouYXJyYXkoei5vYmplY3Qoe1xyXG4gICAgaWQ6IHouc3RyaW5nKCkubWluKDEsICdJRCBkZSBwcm9kdWN0byByZXF1ZXJpZG8nKSxcclxuICAgIHF1YW50aXR5OiB6Lm51bWJlcigpLm1pbigxLCAnQ2FudGlkYWQgZGViZSBzZXIgbWF5b3IgYSAwJykubWF4KDk5LCAnQ2FudGlkYWQgbcOheGltYSBleGNlZGlkYScpLFxyXG4gIH0pKS5taW4oMSwgJ0FsIG1lbm9zIHVuIHByb2R1Y3RvIGVzIHJlcXVlcmlkbycpLFxyXG4gIHBheWVyOiB6Lm9iamVjdCh7XHJcbiAgICBuYW1lOiB6LnN0cmluZygpLm1pbihWQUxJREFUSU9OX0NPTlNUQU5UUy5NSU5fTkFNRV9MRU5HVEgsICdOb21icmUgcmVxdWVyaWRvJyksXHJcbiAgICBzdXJuYW1lOiB6LnN0cmluZygpLm1pbihWQUxJREFUSU9OX0NPTlNUQU5UUy5NSU5fTkFNRV9MRU5HVEgsICdBcGVsbGlkbyByZXF1ZXJpZG8nKSxcclxuICAgIGVtYWlsOiB6LnN0cmluZygpLmVtYWlsKCdFbWFpbCBpbnbDoWxpZG8nKSxcclxuICAgIHBob25lOiB6LnN0cmluZygpLnJlZ2V4KFZBTElEQVRJT05fQ09OU1RBTlRTLlBIT05FX1JFR0VYLCAnVGVsw6lmb25vIGludsOhbGlkbycpLm9wdGlvbmFsKCksXHJcbiAgICBpZGVudGlmaWNhdGlvbjogei5vYmplY3Qoe1xyXG4gICAgICB0eXBlOiB6LnN0cmluZygpLm1pbigxLCAnVGlwbyBkZSBpZGVudGlmaWNhY2nDs24gcmVxdWVyaWRvJyksXHJcbiAgICAgIG51bWJlcjogei5zdHJpbmcoKS5taW4oMSwgJ07Dum1lcm8gZGUgaWRlbnRpZmljYWNpw7NuIHJlcXVlcmlkbycpLFxyXG4gICAgfSkub3B0aW9uYWwoKSxcclxuICB9KSxcclxuICBzaGlwcGluZzogei5vYmplY3Qoe1xyXG4gICAgY29zdDogei5udW1iZXIoKS5taW4oMCwgJ0Nvc3RvIGRlIGVudsOtbyBpbnbDoWxpZG8nKSxcclxuICAgIGFkZHJlc3M6IHoub2JqZWN0KHtcclxuICAgICAgc3RyZWV0X25hbWU6IHouc3RyaW5nKCkubWluKDEsICdOb21icmUgZGUgY2FsbGUgcmVxdWVyaWRvJyksXHJcbiAgICAgIHN0cmVldF9udW1iZXI6IHouc3RyaW5nKCkubWluKDEsICdOw7ptZXJvIGRlIGNhbGxlIHJlcXVlcmlkbycpLFxyXG4gICAgICB6aXBfY29kZTogei5zdHJpbmcoKS5taW4oMSwgJ0PDs2RpZ28gcG9zdGFsIHJlcXVlcmlkbycpLFxyXG4gICAgICBjaXR5X25hbWU6IHouc3RyaW5nKCkubWluKDEsICdDaXVkYWQgcmVxdWVyaWRhJyksXHJcbiAgICAgIHN0YXRlX25hbWU6IHouc3RyaW5nKCkubWluKDEsICdQcm92aW5jaWEgcmVxdWVyaWRhJyksXHJcbiAgICB9KSxcclxuICB9KS5vcHRpb25hbCgpLFxyXG4gIGV4dGVybmFsX3JlZmVyZW5jZTogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxyXG59KTtcclxuXHJcbmludGVyZmFjZSBQcm9kdWN0IHtcclxuICBpZDogbnVtYmVyO1xyXG4gIG5hbWU6IHN0cmluZztcclxuICBwcmljZTogbnVtYmVyO1xyXG4gIGRpc2NvdW50ZWRfcHJpY2U/OiBudW1iZXI7XHJcbiAgaW1hZ2VzPzoge1xyXG4gICAgcHJldmlld3M6IHN0cmluZ1tdO1xyXG4gIH07XHJcbiAgY2F0ZWdvcnk/OiB7XHJcbiAgICBuYW1lOiBzdHJpbmc7XHJcbiAgICBzbHVnOiBzdHJpbmc7XHJcbiAgfTtcclxufVxyXG5cclxuLy8gRnVuY2nDs24gaGVscGVyIHBhcmEgY2FsY3VsYXIgcHJlY2lvIGZpbmFsXHJcbmZ1bmN0aW9uIGdldEZpbmFsUHJpY2UocHJvZHVjdDogeyBwcmljZTogbnVtYmVyOyBkaXNjb3VudGVkX3ByaWNlPzogbnVtYmVyIHwgbnVsbCB9KTogbnVtYmVyIHtcclxuICByZXR1cm4gcHJvZHVjdC5kaXNjb3VudGVkX3ByaWNlID8/IHByb2R1Y3QucHJpY2U7XHJcbn1cclxuXHJcbi8vIEZ1bmNpw7NuIGhlbHBlciBwYXJhIGNyZWFyIHVzdWFyaW8gdGVtcG9yYWxcclxuYXN5bmMgZnVuY3Rpb24gY3JlYXRlVGVtcG9yYXJ5VXNlcih1c2VySWQ6IHN0cmluZywgZW1haWw6IHN0cmluZywgbmFtZTogc3RyaW5nKSB7XHJcbiAgaWYgKCFzdXBhYmFzZUFkbWluKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0NsaWVudGUgYWRtaW5pc3RyYXRpdm8gZGUgU3VwYWJhc2Ugbm8gZGlzcG9uaWJsZScpO1xyXG4gIH1cclxuXHJcbiAgY29uc3QgeyBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VBZG1pblxyXG4gICAgLmZyb20oJ3VzZXJzJylcclxuICAgIC5pbnNlcnQoe1xyXG4gICAgICBpZDogdXNlcklkLFxyXG4gICAgICBjbGVya19pZDogJ3RlbXAtdXNlcicsXHJcbiAgICAgIGVtYWlsLFxyXG4gICAgICBuYW1lLFxyXG4gICAgfSk7XHJcblxyXG4gIGlmIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgY3JlYXRpbmcgdGVtcG9yYXJ5IHVzZXI6JywgZXJyb3IpO1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKCdFcnJvciBjcmVhbmRvIHVzdWFyaW8gdGVtcG9yYWwnKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XHJcbiAgY29uc3QgcmVxdWVzdFN0YXJ0ID0gRGF0ZS5ub3coKTtcclxuICBjb25zdCBjbGllbnRJUCA9IHJlcXVlc3QuaGVhZGVycy5nZXQoJ3gtZm9yd2FyZGVkLWZvcicpIHx8ICd1bmtub3duJztcclxuICBjb25zdCB1c2VyQWdlbnQgPSByZXF1ZXN0LmhlYWRlcnMuZ2V0KCd1c2VyLWFnZW50JykgfHwgJ3Vua25vd24nO1xyXG5cclxuICAvLyDinIUgTlVFVk86IExvZ2dpbmcgZXN0cnVjdHVyYWRvIGRlbCBpbmljaW8gZGUgbGEgcmVxdWVzdFxyXG4gIGxvZ2dlci5pbmZvKExvZ0NhdGVnb3J5LlBBWU1FTlQsICdDcmVhdGUgcHJlZmVyZW5jZSByZXF1ZXN0IHN0YXJ0ZWQnLCB7XHJcbiAgICBlbmRwb2ludDogJy9hcGkvcGF5bWVudHMvY3JlYXRlLXByZWZlcmVuY2UnLFxyXG4gICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgfSwge1xyXG4gICAgY2xpZW50SVAsXHJcbiAgICB1c2VyQWdlbnQsXHJcbiAgfSk7XHJcblxyXG4gIC8vIOKchSBOVUVWTzogUmF0ZSBsaW1pdGluZyBhdmFuemFkbyBwYXJhIEFQSSBkZSBwYWdvc1xyXG4gIGNvbnN0IHJhdGVMaW1pdENvbmZpZyA9IHtcclxuICAgIC4uLkVOVEVSUFJJU0VfUkFURV9MSU1JVF9DT05GSUdTLlBBWU1FTlRfQVBJLFxyXG4gICAga2V5R2VuZXJhdG9yOiBlbmRwb2ludEtleUdlbmVyYXRvcignY3JlYXRlLXByZWZlcmVuY2UnKSxcclxuICB9O1xyXG5cclxuICBjb25zdCByYXRlTGltaXRSZXN1bHQgPSBhd2FpdCBjaGVja1JhdGVMaW1pdChyZXF1ZXN0LCByYXRlTGltaXRDb25maWcpO1xyXG5cclxuICBpZiAoIXJhdGVMaW1pdFJlc3VsdC5zdWNjZXNzKSB7XHJcbiAgICBsb2dnZXIud2FybihMb2dDYXRlZ29yeS5TRUNVUklUWSwgJ1JhdGUgbGltaXQgZXhjZWVkZWQgZm9yIGNyZWF0ZS1wcmVmZXJlbmNlJywge1xyXG4gICAgICBjbGllbnRJUCxcclxuICAgICAgbGltaXQ6IHJhdGVMaW1pdFJlc3VsdC5saW1pdCxcclxuICAgICAgcmV0cnlBZnRlcjogcmF0ZUxpbWl0UmVzdWx0LnJldHJ5QWZ0ZXIsXHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgZXJyb3I6IHJhdGVMaW1pdENvbmZpZy5tZXNzYWdlLFxyXG4gICAgICByZXRyeUFmdGVyOiByYXRlTGltaXRSZXN1bHQucmV0cnlBZnRlcixcclxuICAgIH0sIHtcclxuICAgICAgc3RhdHVzOiA0MjksXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAnUmF0ZUxpbWl0LUxpbWl0JzogcmF0ZUxpbWl0UmVzdWx0LmxpbWl0LnRvU3RyaW5nKCksXHJcbiAgICAgICAgJ1JhdGVMaW1pdC1SZW1haW5pbmcnOiByYXRlTGltaXRSZXN1bHQucmVtYWluaW5nLnRvU3RyaW5nKCksXHJcbiAgICAgICAgJ1JhdGVMaW1pdC1SZXNldCc6IG5ldyBEYXRlKHJhdGVMaW1pdFJlc3VsdC5yZXNldFRpbWUpLnRvSVNPU3RyaW5nKCksXHJcbiAgICAgICAgJ1JldHJ5LUFmdGVyJzogcmF0ZUxpbWl0UmVzdWx0LnJldHJ5QWZ0ZXI/LnRvU3RyaW5nKCkgfHwgJzYwJyxcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICB0cnkge1xyXG4gICAgLy8gVmVyaWZpY2FyIHF1ZSBlbCBjbGllbnRlIGFkbWluaXN0cmF0aXZvIGVzdMOpIGRpc3BvbmlibGVcclxuICAgIGlmICghc3VwYWJhc2VBZG1pbikge1xyXG4gICAgICBsb2dnZXIuZXJyb3IoTG9nQ2F0ZWdvcnkuUEFZTUVOVCwgJ1N1cGFiYXNlIGFkbWluIGNsaWVudCBub3QgYXZhaWxhYmxlJywgdW5kZWZpbmVkLCB7IGNsaWVudElQIH0pO1xyXG4gICAgICBjb25zdCBlcnJvclJlc3BvbnNlOiBBcGlSZXNwb25zZTxudWxsPiA9IHtcclxuICAgICAgICBkYXRhOiBudWxsLFxyXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgIGVycm9yOiAnU2VydmljaW8gZGUgYmFzZSBkZSBkYXRvcyBubyBkaXNwb25pYmxlJyxcclxuICAgICAgfTtcclxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKGVycm9yUmVzcG9uc2UsIHsgc3RhdHVzOiA1MDMgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gVmFsaWRhciBlbnRyYWRhXHJcbiAgICBjb25zdCByYXdEYXRhID0gYXdhaXQgcmVxdWVzdC5qc29uKCk7XHJcbiAgICBjb25zdCB2YWxpZGF0aW9uUmVzdWx0ID0gQ3JlYXRlUHJlZmVyZW5jZVNjaGVtYS5zYWZlUGFyc2UocmF3RGF0YSk7XHJcblxyXG4gICAgaWYgKCF2YWxpZGF0aW9uUmVzdWx0LnN1Y2Nlc3MpIHtcclxuICAgICAgY29uc3QgZXJyb3JSZXNwb25zZTogQXBpUmVzcG9uc2U8bnVsbD4gPSB7XHJcbiAgICAgICAgZGF0YTogbnVsbCxcclxuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgICBlcnJvcjogYERhdG9zIGludsOhbGlkb3M6ICR7dmFsaWRhdGlvblJlc3VsdC5lcnJvci5lcnJvcnMubWFwKGUgPT4gZS5tZXNzYWdlKS5qb2luKCcsICcpfWAsXHJcbiAgICAgIH07XHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihlcnJvclJlc3BvbnNlLCB7IHN0YXR1czogNDAwIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IG9yZGVyRGF0YSA9IHZhbGlkYXRpb25SZXN1bHQuZGF0YTtcclxuICAgIGNvbnN0IHByb2R1Y3RJZHMgPSBvcmRlckRhdGEuaXRlbXMubWFwKGl0ZW0gPT4gcGFyc2VJbnQoaXRlbS5pZCkpO1xyXG4gICAgY29uc3Qgc2hpcHBpbmdDb3N0ID0gb3JkZXJEYXRhLnNoaXBwaW5nPy5jb3N0IHx8IDA7XHJcblxyXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICAgIC8vIE9CVEVORVIgVVNVQVJJTyBBVVRFTlRJQ0FETyBDT04gQ0xFUktcclxuICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAgICBsZXQgdXNlcklkOiBzdHJpbmcgfCBudWxsID0gbnVsbDtcclxuICAgIGxldCB1c2VyRW1haWw6IHN0cmluZyB8IG51bGwgPSBudWxsO1xyXG5cclxuICAgIHRyeSB7XHJcbiAgICAgIC8vIEludGVudGFyIG9idGVuZXIgdXN1YXJpbyBhdXRlbnRpY2FkbyBkZSBDbGVya1xyXG4gICAgICBjb25zdCBjbGVya1VzZXIgPSBhd2FpdCBjdXJyZW50VXNlcigpO1xyXG4gICAgICBpZiAoY2xlcmtVc2VyKSB7XHJcbiAgICAgICAgdXNlcklkID0gY2xlcmtVc2VyLmlkO1xyXG4gICAgICAgIHVzZXJFbWFpbCA9IGNsZXJrVXNlci5lbWFpbEFkZHJlc3Nlcz8uWzBdPy5lbWFpbEFkZHJlc3MgfHwgbnVsbDtcclxuXHJcbiAgICAgICAgLy8gVmVyaWZpY2FyIHNpIGVsIHVzdWFyaW8gZXhpc3RlIGVuIG51ZXN0cmEgYmFzZSBkZSBkYXRvc1xyXG4gICAgICAgIGNvbnN0IHsgZGF0YTogZXhpc3RpbmdVc2VyLCBlcnJvcjogdXNlckVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZUFkbWluXHJcbiAgICAgICAgICAuZnJvbSgndXNlcnMnKVxyXG4gICAgICAgICAgLnNlbGVjdCgnaWQsIGNsZXJrX2lkJylcclxuICAgICAgICAgIC5lcSgnY2xlcmtfaWQnLCBjbGVya1VzZXIuaWQpXHJcbiAgICAgICAgICAuc2luZ2xlKCk7XHJcblxyXG4gICAgICAgIGlmICh1c2VyRXJyb3IgJiYgdXNlckVycm9yLmNvZGUgIT09ICdQR1JTVDExNicpIHtcclxuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGNoZWNraW5nIHVzZXIgaW4gZGF0YWJhc2U6JywgdXNlckVycm9yKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIFNpIGVsIHVzdWFyaW8gbm8gZXhpc3RlIGVuIG51ZXN0cmEgREIsIGNyZWFybG9cclxuICAgICAgICBpZiAoIWV4aXN0aW5nVXNlcikge1xyXG4gICAgICAgICAgY29uc3QgeyBkYXRhOiBuZXdVc2VyLCBlcnJvcjogY3JlYXRlVXNlckVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZUFkbWluXHJcbiAgICAgICAgICAgIC5mcm9tKCd1c2VycycpXHJcbiAgICAgICAgICAgIC5pbnNlcnQoe1xyXG4gICAgICAgICAgICAgIGNsZXJrX2lkOiBjbGVya1VzZXIuaWQsXHJcbiAgICAgICAgICAgICAgZW1haWw6IHVzZXJFbWFpbCxcclxuICAgICAgICAgICAgICBuYW1lOiBgJHtjbGVya1VzZXIuZmlyc3ROYW1lIHx8ICcnfSAke2NsZXJrVXNlci5sYXN0TmFtZSB8fCAnJ31gLnRyaW0oKSB8fCAnVXN1YXJpbycsXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5zZWxlY3QoJ2lkJylcclxuICAgICAgICAgICAgLnNpbmdsZSgpO1xyXG5cclxuICAgICAgICAgIGlmIChjcmVhdGVVc2VyRXJyb3IpIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgY3JlYXRpbmcgdXNlciBpbiBkYXRhYmFzZTonLCBjcmVhdGVVc2VyRXJyb3IpO1xyXG4gICAgICAgICAgICAvLyBDb250aW51YXIgY29uIHVzdWFyaW8gdGVtcG9yYWwgc2kgZmFsbGEgbGEgY3JlYWNpw7NuXHJcbiAgICAgICAgICAgIHVzZXJJZCA9IG51bGw7XHJcbiAgICAgICAgICB9IGVsc2UgaWYgKG5ld1VzZXIpIHtcclxuICAgICAgICAgICAgdXNlcklkID0gbmV3VXNlci5pZDtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yOiBuZXdVc2VyIGlzIG51bGwgYWZ0ZXIgaW5zZXJ0aW9uJyk7XHJcbiAgICAgICAgICAgIHVzZXJJZCA9IG51bGw7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHVzZXJJZCA9IGV4aXN0aW5nVXNlci5pZDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGNsZXJrRXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZ2V0dGluZyBDbGVyayB1c2VyOicsIGNsZXJrRXJyb3IpO1xyXG4gICAgICAvLyBDb250aW51YXIgc2luIHVzdWFyaW8gYXV0ZW50aWNhZG9cclxuICAgIH1cclxuXHJcbiAgICAvLyBTaSBubyBoYXkgdXN1YXJpbyBhdXRlbnRpY2FkbywgdXNhciB1c3VhcmlvIHRlbXBvcmFsXHJcbiAgICBpZiAoIXVzZXJJZCkge1xyXG4gICAgICB1c2VySWQgPSAnMDAwMDAwMDAtMDAwMC00MDAwLTgwMDAtMDAwMDAwMDAwMDAwJztcclxuICAgICAgdXNlckVtYWlsID0gb3JkZXJEYXRhLnBheWVyLmVtYWlsO1xyXG5cclxuICAgICAgLy8gVmVyaWZpY2FyIHF1ZSBlbCB1c3VhcmlvIHRlbXBvcmFsIGV4aXN0ZVxyXG4gICAgICBjb25zdCB7IGRhdGE6IHRlbXBVc2VyLCBlcnJvcjogdGVtcFVzZXJFcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VBZG1pblxyXG4gICAgICAgIC5mcm9tKCd1c2VycycpXHJcbiAgICAgICAgLnNlbGVjdCgnaWQnKVxyXG4gICAgICAgIC5lcSgnaWQnLCB1c2VySWQpXHJcbiAgICAgICAgLnNpbmdsZSgpO1xyXG5cclxuICAgICAgaWYgKHRlbXBVc2VyRXJyb3IpIHtcclxuICAgICAgICAvLyBDcmVhciB1c3VhcmlvIHRlbXBvcmFsIHNpIG5vIGV4aXN0ZVxyXG4gICAgICAgIGNvbnN0IHsgZXJyb3I6IGNyZWF0ZVRlbXBFcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VBZG1pblxyXG4gICAgICAgICAgLmZyb20oJ3VzZXJzJylcclxuICAgICAgICAgIC5pbnNlcnQoe1xyXG4gICAgICAgICAgICBpZDogdXNlcklkLFxyXG4gICAgICAgICAgICBjbGVya19pZDogJ3RlbXAtdXNlcicsXHJcbiAgICAgICAgICAgIGVtYWlsOiB1c2VyRW1haWwsXHJcbiAgICAgICAgICAgIG5hbWU6IGAke29yZGVyRGF0YS5wYXllci5uYW1lfSAke29yZGVyRGF0YS5wYXllci5zdXJuYW1lfWAudHJpbSgpLFxyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGlmIChjcmVhdGVUZW1wRXJyb3IpIHtcclxuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGNyZWF0aW5nIHRlbXBvcmFyeSB1c2VyOicsIGNyZWF0ZVRlbXBFcnJvcik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICAgIC8vIE9CVEVORVIgUFJPRFVDVE9TIFkgVkFMSURBUiBTVE9DS1xyXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICAgIGNvbnN0IHsgZGF0YTogcHJvZHVjdHMsIGVycm9yOiBwcm9kdWN0c0Vycm9yIH0gPSBhd2FpdCBzdXBhYmFzZUFkbWluXHJcbiAgICAgIC5mcm9tKCdwcm9kdWN0cycpXHJcbiAgICAgIC5zZWxlY3QoYFxyXG4gICAgICAgIGlkLFxyXG4gICAgICAgIG5hbWUsXHJcbiAgICAgICAgcHJpY2UsXHJcbiAgICAgICAgZGlzY291bnRlZF9wcmljZSxcclxuICAgICAgICBzdG9jayxcclxuICAgICAgICBpbWFnZXMsXHJcbiAgICAgICAgY2F0ZWdvcnk6Y2F0ZWdvcmllcyAoXHJcbiAgICAgICAgICBuYW1lLFxyXG4gICAgICAgICAgc2x1Z1xyXG4gICAgICAgIClcclxuICAgICAgYClcclxuICAgICAgLmluKCdpZCcsIHByb2R1Y3RJZHMpO1xyXG5cclxuICAgIGlmIChwcm9kdWN0c0Vycm9yIHx8ICFwcm9kdWN0cykge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBwcm9kdWN0czonLCBwcm9kdWN0c0Vycm9yKTtcclxuICAgICAgY29uc3QgZXJyb3JSZXNwb25zZTogQXBpUmVzcG9uc2U8bnVsbD4gPSB7XHJcbiAgICAgICAgZGF0YTogbnVsbCxcclxuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgICBlcnJvcjogJ0Vycm9yIG9idGVuaWVuZG8gcHJvZHVjdG9zJyxcclxuICAgICAgfTtcclxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKGVycm9yUmVzcG9uc2UsIHsgc3RhdHVzOiA1MDAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gRGVmaW5pciB0aXBvIHBhcmEgcHJvZHVjdG9zIGNvbiBjYXRlZ29yw61hIChjb21vIHZpZW5lIGRlIFN1cGFiYXNlKVxyXG4gICAgdHlwZSBTdXBhYmFzZVByb2R1Y3QgPSB7XHJcbiAgICAgIGlkOiBudW1iZXI7XHJcbiAgICAgIG5hbWU6IHN0cmluZztcclxuICAgICAgcHJpY2U6IG51bWJlcjtcclxuICAgICAgZGlzY291bnRlZF9wcmljZTogbnVtYmVyIHwgbnVsbDtcclxuICAgICAgc3RvY2s6IG51bWJlcjtcclxuICAgICAgaW1hZ2VzOiBhbnk7XHJcbiAgICAgIGNhdGVnb3J5OiB7XHJcbiAgICAgICAgbmFtZTogc3RyaW5nO1xyXG4gICAgICAgIHNsdWc6IHN0cmluZztcclxuICAgICAgfVtdIHwgbnVsbDtcclxuICAgIH07XHJcblxyXG4gICAgLy8gQ29udmVydGlyIHByb2R1Y3RvcyBwYXJhIHRlbmVyIGNhdGVnb3LDrWEgY29tbyBvYmpldG9cclxuICAgIGNvbnN0IHR5cGVkUHJvZHVjdHMgPSAocHJvZHVjdHMgYXMgU3VwYWJhc2VQcm9kdWN0W10pLm1hcChwcm9kdWN0ID0+ICh7XHJcbiAgICAgIC4uLnByb2R1Y3QsXHJcbiAgICAgIGNhdGVnb3J5OiBwcm9kdWN0LmNhdGVnb3J5ICYmIHByb2R1Y3QuY2F0ZWdvcnkubGVuZ3RoID4gMCA/IHByb2R1Y3QuY2F0ZWdvcnlbMF0gOiBudWxsXHJcbiAgICB9KSk7XHJcblxyXG4gICAgLy8gVmFsaWRhciBzdG9jayBkaXNwb25pYmxlXHJcbiAgICBmb3IgKGNvbnN0IGl0ZW0gb2Ygb3JkZXJEYXRhLml0ZW1zKSB7XHJcbiAgICAgIGNvbnN0IHByb2R1Y3QgPSB0eXBlZFByb2R1Y3RzLmZpbmQocCA9PiBwLmlkID09PSBwYXJzZUludChpdGVtLmlkKSk7XHJcbiAgICAgIGlmICghcHJvZHVjdCkge1xyXG4gICAgICAgIGNvbnN0IGVycm9yUmVzcG9uc2U6IEFwaVJlc3BvbnNlPG51bGw+ID0ge1xyXG4gICAgICAgICAgZGF0YTogbnVsbCxcclxuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgICAgZXJyb3I6IGBQcm9kdWN0byAke2l0ZW0uaWR9IG5vIGVuY29udHJhZG9gLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKGVycm9yUmVzcG9uc2UsIHsgc3RhdHVzOiA0MDAgfSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChwcm9kdWN0LnN0b2NrIDwgaXRlbS5xdWFudGl0eSkge1xyXG4gICAgICAgIGNvbnN0IGVycm9yUmVzcG9uc2U6IEFwaVJlc3BvbnNlPG51bGw+ID0ge1xyXG4gICAgICAgICAgZGF0YTogbnVsbCxcclxuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgICAgZXJyb3I6IGBTdG9jayBpbnN1ZmljaWVudGUgcGFyYSAke3Byb2R1Y3QubmFtZX0uIERpc3BvbmlibGU6ICR7cHJvZHVjdC5zdG9ja30sIHNvbGljaXRhZG86ICR7aXRlbS5xdWFudGl0eX1gLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKGVycm9yUmVzcG9uc2UsIHsgc3RhdHVzOiA0MDAgfSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICAgLy8gQ0FMQ1VMQVIgVE9UQUxFUyBDT04gUFJFQ0lPUyBDT1JSRUNUT1NcclxuICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAgICBjb25zdCBpdGVtc1RvdGFsID0gb3JkZXJEYXRhLml0ZW1zLnJlZHVjZSgodG90YWwsIGl0ZW0pID0+IHtcclxuICAgICAgY29uc3QgcHJvZHVjdCA9IHR5cGVkUHJvZHVjdHMuZmluZChwID0+IHAuaWQgPT09IHBhcnNlSW50KGl0ZW0uaWQpKTtcclxuICAgICAgaWYgKCFwcm9kdWN0KSB7cmV0dXJuIHRvdGFsO31cclxuXHJcbiAgICAgIC8vIFVzYXIgcHJlY2lvIGNvbiBkZXNjdWVudG8gc2kgZXhpc3RlLCBzaW5vIHByZWNpbyBub3JtYWxcclxuICAgICAgY29uc3QgZmluYWxQcmljZSA9IGdldEZpbmFsUHJpY2UocHJvZHVjdCk7XHJcbiAgICAgIHJldHVybiB0b3RhbCArIChmaW5hbFByaWNlICogaXRlbS5xdWFudGl0eSk7XHJcbiAgICB9LCAwKTtcclxuXHJcbiAgICBjb25zdCB0b3RhbEFtb3VudCA9IGl0ZW1zVG90YWwgKyBzaGlwcGluZ0Nvc3Q7XHJcblxyXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICAgIC8vIENSRUFSIE9SREVOIEVOIEJBU0UgREUgREFUT1NcclxuICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAgICBjb25zdCB7IGRhdGE6IG9yZGVyLCBlcnJvcjogb3JkZXJFcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VBZG1pblxyXG4gICAgICAuZnJvbSgnb3JkZXJzJylcclxuICAgICAgLmluc2VydCh7XHJcbiAgICAgICAgdXNlcl9pZDogdXNlcklkLFxyXG4gICAgICAgIHN0YXR1czogJ3BlbmRpbmcnLFxyXG4gICAgICAgIHRvdGFsOiB0b3RhbEFtb3VudCxcclxuICAgICAgICBzaGlwcGluZ19hZGRyZXNzOiBvcmRlckRhdGEuc2hpcHBpbmc/LmFkZHJlc3MgPyBKU09OLnN0cmluZ2lmeShvcmRlckRhdGEuc2hpcHBpbmcuYWRkcmVzcykgOiBudWxsLFxyXG4gICAgICAgIGV4dGVybmFsX3JlZmVyZW5jZTogb3JkZXJEYXRhLmV4dGVybmFsX3JlZmVyZW5jZSB8fCBgb3JkZXJfJHtEYXRlLm5vdygpfWAsXHJcbiAgICAgICAgLy8g4pyFIE5VRVZPOiBHdWFyZGFyIGluZm9ybWFjacOzbiBkZWwgcGF5ZXJcclxuICAgICAgICBwYXllcl9pbmZvOiB7XHJcbiAgICAgICAgICBuYW1lOiBvcmRlckRhdGEucGF5ZXIubmFtZSxcclxuICAgICAgICAgIHN1cm5hbWU6IG9yZGVyRGF0YS5wYXllci5zdXJuYW1lLFxyXG4gICAgICAgICAgZW1haWw6IG9yZGVyRGF0YS5wYXllci5lbWFpbCxcclxuICAgICAgICAgIHBob25lOiBvcmRlckRhdGEucGF5ZXIucGhvbmUsXHJcbiAgICAgICAgICBpZGVudGlmaWNhdGlvbjogb3JkZXJEYXRhLnBheWVyLmlkZW50aWZpY2F0aW9uLFxyXG4gICAgICAgIH0sXHJcbiAgICAgIH0pXHJcbiAgICAgIC5zZWxlY3QoKVxyXG4gICAgICAuc2luZ2xlKCk7XHJcblxyXG4gICAgaWYgKG9yZGVyRXJyb3IgfHwgIW9yZGVyKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGNyZWF0aW5nIG9yZGVyOicsIG9yZGVyRXJyb3IpO1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdPcmRlciBkYXRhIGF0dGVtcHRlZDonLCB7XHJcbiAgICAgICAgdXNlcl9pZDogdXNlcklkLFxyXG4gICAgICAgIHN0YXR1czogJ3BlbmRpbmcnLFxyXG4gICAgICAgIHRvdGFsOiB0b3RhbEFtb3VudCxcclxuICAgICAgICBzaGlwcGluZ19hZGRyZXNzOiBvcmRlckRhdGEuc2hpcHBpbmc/LmFkZHJlc3MgPyBKU09OLnN0cmluZ2lmeShvcmRlckRhdGEuc2hpcHBpbmcuYWRkcmVzcykgOiBudWxsLFxyXG4gICAgICAgIGV4dGVybmFsX3JlZmVyZW5jZTogb3JkZXJEYXRhLmV4dGVybmFsX3JlZmVyZW5jZSB8fCBgb3JkZXJfJHtEYXRlLm5vdygpfWAsXHJcbiAgICAgIH0pO1xyXG4gICAgICBjb25zdCBlcnJvclJlc3BvbnNlOiBBcGlSZXNwb25zZTxudWxsPiA9IHtcclxuICAgICAgICBkYXRhOiBudWxsLFxyXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgIGVycm9yOiBgRXJyb3IgY3JlYW5kbyBvcmRlbjogJHtvcmRlckVycm9yPy5tZXNzYWdlIHx8ICdVbmtub3duIGVycm9yJ31gLFxyXG4gICAgICB9O1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oZXJyb3JSZXNwb25zZSwgeyBzdGF0dXM6IDUwMCB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICAgLy8gQ1JFQVIgSVRFTVMgREUgTEEgT1JERU4gQ09OIFBSRUNJT1MgQ09SUkVDVE9TXHJcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICAgY29uc3Qgb3JkZXJJdGVtcyA9IG9yZGVyRGF0YS5pdGVtcy5tYXAoaXRlbSA9PiB7XHJcbiAgICAgIGNvbnN0IHByb2R1Y3QgPSB0eXBlZFByb2R1Y3RzLmZpbmQocCA9PiBwLmlkID09PSBwYXJzZUludChpdGVtLmlkKSk7XHJcbiAgICAgIGlmICghcHJvZHVjdCkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgUHJvZHVjdG8gJHtpdGVtLmlkfSBubyBlbmNvbnRyYWRvYCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIFVzYXIgcHJlY2lvIGNvbiBkZXNjdWVudG8gc2kgZXhpc3RlLCBzaW5vIHByZWNpbyBub3JtYWxcclxuICAgICAgY29uc3QgZmluYWxQcmljZSA9IGdldEZpbmFsUHJpY2UocHJvZHVjdCk7XHJcblxyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIG9yZGVyX2lkOiBvcmRlci5pZCxcclxuICAgICAgICBwcm9kdWN0X2lkOiBwYXJzZUludChpdGVtLmlkKSxcclxuICAgICAgICBxdWFudGl0eTogaXRlbS5xdWFudGl0eSxcclxuICAgICAgICBwcmljZTogZmluYWxQcmljZSxcclxuICAgICAgfTtcclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnN0IHsgZXJyb3I6IGl0ZW1zRXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlQWRtaW5cclxuICAgICAgLmZyb20oJ29yZGVyX2l0ZW1zJylcclxuICAgICAgLmluc2VydChvcmRlckl0ZW1zKTtcclxuXHJcbiAgICBpZiAoaXRlbXNFcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBjcmVhdGluZyBvcmRlciBpdGVtczonLCBpdGVtc0Vycm9yKTtcclxuICAgICAgLy8gUm9sbGJhY2s6IGVsaW1pbmFyIG9yZGVuIGNyZWFkYVxyXG4gICAgICBhd2FpdCBzdXBhYmFzZUFkbWluLmZyb20oJ29yZGVycycpLmRlbGV0ZSgpLmVxKCdpZCcsIG9yZGVyLmlkKTtcclxuICAgICAgXHJcbiAgICAgIGNvbnN0IGVycm9yUmVzcG9uc2U6IEFwaVJlc3BvbnNlPG51bGw+ID0ge1xyXG4gICAgICAgIGRhdGE6IG51bGwsXHJcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXHJcbiAgICAgICAgZXJyb3I6ICdFcnJvciBjcmVhbmRvIGl0ZW1zIGRlIG9yZGVuJyxcclxuICAgICAgfTtcclxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKGVycm9yUmVzcG9uc2UsIHsgc3RhdHVzOiA1MDAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICAgIC8vIENPTlZFUlRJUiBJVEVNUyBQQVJBIE1FUkNBRE9QQUdPXHJcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICAgY29uc3QgbWVyY2Fkb1BhZ29JdGVtczogTWVyY2Fkb1BhZ29JdGVtW10gPSB0eXBlZFByb2R1Y3RzLm1hcCgocHJvZHVjdCkgPT4ge1xyXG4gICAgICBjb25zdCBvcmRlckl0ZW0gPSBvcmRlckRhdGEuaXRlbXMuZmluZChpdGVtID0+IGl0ZW0uaWQgPT09IHByb2R1Y3QuaWQudG9TdHJpbmcoKSk7XHJcbiAgICAgIGlmICghb3JkZXJJdGVtKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBPcmRlciBpdGVtIG5vdCBmb3VuZCBmb3IgcHJvZHVjdCAke3Byb2R1Y3QuaWR9YCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIFVzYXIgcHJlY2lvIGNvbiBkZXNjdWVudG8gc2kgZXhpc3RlLCBzaW5vIHByZWNpbyBub3JtYWxcclxuICAgICAgY29uc3QgZmluYWxQcmljZSA9IGdldEZpbmFsUHJpY2UocHJvZHVjdCk7XHJcblxyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIGlkOiBwcm9kdWN0LmlkLnRvU3RyaW5nKCksXHJcbiAgICAgICAgdGl0bGU6IHByb2R1Y3QubmFtZSxcclxuICAgICAgICBkZXNjcmlwdGlvbjogYFByb2R1Y3RvIGRlIHBpbnR1cmVyw61hIC0gJHtwcm9kdWN0LmNhdGVnb3J5Py5uYW1lIHx8ICdHZW5lcmFsJ31gLFxyXG4gICAgICAgIHBpY3R1cmVfdXJsOiBwcm9kdWN0LmltYWdlcz8ucHJldmlld3M/LlswXSB8fCAnJyxcclxuICAgICAgICBjYXRlZ29yeV9pZDogcHJvZHVjdC5jYXRlZ29yeT8uc2x1ZyB8fCAnZ2VuZXJhbCcsXHJcbiAgICAgICAgcXVhbnRpdHk6IG9yZGVySXRlbS5xdWFudGl0eSxcclxuICAgICAgICBjdXJyZW5jeV9pZDogJ0FSUycsXHJcbiAgICAgICAgdW5pdF9wcmljZTogZmluYWxQcmljZSxcclxuICAgICAgfTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIEFncmVnYXIgY29zdG8gZGUgZW52w61vIHNpIGV4aXN0ZVxyXG4gICAgaWYgKHNoaXBwaW5nQ29zdCA+IDApIHtcclxuICAgICAgbWVyY2Fkb1BhZ29JdGVtcy5wdXNoKHtcclxuICAgICAgICBpZDogJ3NoaXBwaW5nJyxcclxuICAgICAgICB0aXRsZTogJ0Nvc3RvIGRlIGVudsOtbycsXHJcbiAgICAgICAgZGVzY3JpcHRpb246ICdFbnbDrW8gYSBkb21pY2lsaW8nLFxyXG4gICAgICAgIGNhdGVnb3J5X2lkOiAnc2hpcHBpbmcnLFxyXG4gICAgICAgIHF1YW50aXR5OiAxLFxyXG4gICAgICAgIGN1cnJlbmN5X2lkOiAnQVJTJyxcclxuICAgICAgICB1bml0X3ByaWNlOiBzaGlwcGluZ0Nvc3QsXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIOKchSBNRUpPUkFETzogVXNhciBudWV2YSBmdW5jacOzbiBjb24gY29uZmlndXJhY2nDs24gYXZhbnphZGFcclxuICAgIGNvbnN0IHByZWZlcmVuY2VSZXN1bHQgPSBhd2FpdCBjcmVhdGVQYXltZW50UHJlZmVyZW5jZSh7XHJcbiAgICAgIGl0ZW1zOiBtZXJjYWRvUGFnb0l0ZW1zLFxyXG4gICAgICBwYXllcjoge1xyXG4gICAgICAgIG5hbWU6IG9yZGVyRGF0YS5wYXllci5uYW1lLFxyXG4gICAgICAgIHN1cm5hbWU6IG9yZGVyRGF0YS5wYXllci5zdXJuYW1lLFxyXG4gICAgICAgIGVtYWlsOiBvcmRlckRhdGEucGF5ZXIuZW1haWwsXHJcbiAgICAgICAgcGhvbmU6IG9yZGVyRGF0YS5wYXllci5waG9uZSA/IHtcclxuICAgICAgICAgIGFyZWFfY29kZTogb3JkZXJEYXRhLnBheWVyLnBob25lLnN1YnN0cmluZygwLCAzKSxcclxuICAgICAgICAgIG51bWJlcjogb3JkZXJEYXRhLnBheWVyLnBob25lLnN1YnN0cmluZygzKSxcclxuICAgICAgICB9IDogdW5kZWZpbmVkLFxyXG4gICAgICAgIGlkZW50aWZpY2F0aW9uOiBvcmRlckRhdGEucGF5ZXIuaWRlbnRpZmljYXRpb24sXHJcbiAgICAgICAgYWRkcmVzczogb3JkZXJEYXRhLnNoaXBwaW5nID8ge1xyXG4gICAgICAgICAgc3RyZWV0X25hbWU6IG9yZGVyRGF0YS5zaGlwcGluZy5hZGRyZXNzLnN0cmVldF9uYW1lLFxyXG4gICAgICAgICAgc3RyZWV0X251bWJlcjogb3JkZXJEYXRhLnNoaXBwaW5nLmFkZHJlc3Muc3RyZWV0X251bWJlcixcclxuICAgICAgICAgIHppcF9jb2RlOiBvcmRlckRhdGEuc2hpcHBpbmcuYWRkcmVzcy56aXBfY29kZSxcclxuICAgICAgICB9IDogdW5kZWZpbmVkLFxyXG4gICAgICB9LFxyXG4gICAgICBiYWNrX3VybHM6IHtcclxuICAgICAgICBzdWNjZXNzOiBgJHtwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BUFBfVVJMfS9jaGVja291dC9zdWNjZXNzP29yZGVyX2lkPSR7b3JkZXIuaWR9YCxcclxuICAgICAgICBmYWlsdXJlOiBgJHtwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BUFBfVVJMfS9jaGVja291dC9mYWlsdXJlP29yZGVyX2lkPSR7b3JkZXIuaWR9YCxcclxuICAgICAgICBwZW5kaW5nOiBgJHtwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BUFBfVVJMfS9jaGVja291dC9wZW5kaW5nP29yZGVyX2lkPSR7b3JkZXIuaWR9YCxcclxuICAgICAgfSxcclxuICAgICAgZXh0ZXJuYWxfcmVmZXJlbmNlOiBvcmRlci5pZC50b1N0cmluZygpLFxyXG4gICAgICBzaGlwbWVudHM6IG9yZGVyRGF0YS5zaGlwcGluZyA/IHtcclxuICAgICAgICBjb3N0OiBvcmRlckRhdGEuc2hpcHBpbmcuY29zdCxcclxuICAgICAgICByZWNlaXZlcl9hZGRyZXNzOiB7XHJcbiAgICAgICAgICB6aXBfY29kZTogb3JkZXJEYXRhLnNoaXBwaW5nLmFkZHJlc3MuemlwX2NvZGUsXHJcbiAgICAgICAgICBzdHJlZXRfbmFtZTogb3JkZXJEYXRhLnNoaXBwaW5nLmFkZHJlc3Muc3RyZWV0X25hbWUsXHJcbiAgICAgICAgICBzdHJlZXRfbnVtYmVyOiBvcmRlckRhdGEuc2hpcHBpbmcuYWRkcmVzcy5zdHJlZXRfbnVtYmVyLFxyXG4gICAgICAgICAgY2l0eV9uYW1lOiBvcmRlckRhdGEuc2hpcHBpbmcuYWRkcmVzcy5jaXR5X25hbWUsXHJcbiAgICAgICAgICBzdGF0ZV9uYW1lOiBvcmRlckRhdGEuc2hpcHBpbmcuYWRkcmVzcy5zdGF0ZV9uYW1lLFxyXG4gICAgICAgIH0sXHJcbiAgICAgIH0gOiB1bmRlZmluZWQsXHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyDinIUgTUVKT1JBRE86IE1hbmVqYXIgcmVzdWx0YWRvIGRlIGxhIG51ZXZhIGZ1bmNpw7NuXHJcbiAgICBpZiAoIXByZWZlcmVuY2VSZXN1bHQuc3VjY2Vzcykge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2Vycm9yJyBpbiBwcmVmZXJlbmNlUmVzdWx0ID8gcHJlZmVyZW5jZVJlc3VsdC5lcnJvciA6ICdFcnJvciBjcmVhbmRvIHByZWZlcmVuY2lhIGRlIHBhZ28nKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBBY3R1YWxpemFyIG9yZGVuIGNvbiBJRCBkZSBwcmVmZXJlbmNpYVxyXG4gICAgY29uc3QgcHJlZmVyZW5jZURhdGEgPSAnZGF0YScgaW4gcHJlZmVyZW5jZVJlc3VsdCA/IHByZWZlcmVuY2VSZXN1bHQuZGF0YSA6IG51bGw7XHJcbiAgICBjb25zdCB7IGVycm9yOiB1cGRhdGVFcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VBZG1pblxyXG4gICAgICAuZnJvbSgnb3JkZXJzJylcclxuICAgICAgLnVwZGF0ZSh7XHJcbiAgICAgICAgcGF5bWVudF9wcmVmZXJlbmNlX2lkOiBwcmVmZXJlbmNlRGF0YT8uaWQsXHJcbiAgICAgIH0pXHJcbiAgICAgIC5lcSgnaWQnLCBvcmRlci5pZCk7XHJcblxyXG4gICAgaWYgKHVwZGF0ZUVycm9yKSB7XHJcbiAgICAgIGxvZ2dlci53YXJuKExvZ0NhdGVnb3J5LlBBWU1FTlQsICdGYWlsZWQgdG8gdXBkYXRlIG9yZGVyIHdpdGggcHJlZmVyZW5jZSBJRCcsIHsgdXBkYXRlRXJyb3IgfSwgeyBjbGllbnRJUCB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyDinIUgTlVFVk86IExvZ2dpbmcgZXhpdG9zbyBkZSBjcmVhY2nDs24gZGUgcHJlZmVyZW5jaWFcclxuICAgIGNvbnN0IHByb2Nlc3NpbmdUaW1lID0gRGF0ZS5ub3coKSAtIHJlcXVlc3RTdGFydDtcclxuICAgIGxvZ2dlci5wYXltZW50KExvZ0xldmVsLklORk8sICdQYXltZW50IHByZWZlcmVuY2UgY3JlYXRlZCBzdWNjZXNzZnVsbHknLCB7XHJcbiAgICAgIG9yZGVySWQ6IG9yZGVyLmlkLnRvU3RyaW5nKCksXHJcbiAgICAgIHByZWZlcmVuY2VJZDogcHJlZmVyZW5jZURhdGE/LmlkLFxyXG4gICAgICBhbW91bnQ6IHRvdGFsQW1vdW50LFxyXG4gICAgICBjdXJyZW5jeTogJ0FSUycsXHJcbiAgICAgIG1ldGhvZDogJ21lcmNhZG9wYWdvJyxcclxuICAgIH0sIHtcclxuICAgICAgY2xpZW50SVAsXHJcbiAgICAgIHVzZXJBZ2VudCxcclxuICAgIH0pO1xyXG5cclxuICAgIGxvZ2dlci5wZXJmb3JtYW5jZShMb2dMZXZlbC5JTkZPLCAnQ3JlYXRlIHByZWZlcmVuY2UgcmVxdWVzdCBjb21wbGV0ZWQnLCB7XHJcbiAgICAgIG9wZXJhdGlvbjogJ2NyZWF0ZS1wcmVmZXJlbmNlJyxcclxuICAgICAgZHVyYXRpb246IHByb2Nlc3NpbmdUaW1lLFxyXG4gICAgICBlbmRwb2ludDogJy9hcGkvcGF5bWVudHMvY3JlYXRlLXByZWZlcmVuY2UnLFxyXG4gICAgICBzdGF0dXNDb2RlOiAyMDAsXHJcbiAgICB9LCB7IGNsaWVudElQIH0pO1xyXG5cclxuICAgIC8vIOKchSBOVUVWTzogQ3JlYXIgcmVzcHVlc3RhIGNvbiBoZWFkZXJzIGRlIHJhdGUgbGltaXRpbmdcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICBzdWNjZXNzOiB0cnVlLFxyXG4gICAgICBkYXRhOiB7XHJcbiAgICAgICAgaW5pdF9wb2ludDogcHJlZmVyZW5jZURhdGE/LmluaXRfcG9pbnQsXHJcbiAgICAgICAgcHJlZmVyZW5jZV9pZDogcHJlZmVyZW5jZURhdGE/LmlkLFxyXG4gICAgICB9LFxyXG4gICAgfSk7XHJcblxyXG4gICAgLy8g4pyFIE5VRVZPOiBSZWdpc3RyYXIgbcOpdHJpY2FzIGRlIMOpeGl0b1xyXG4gICAgYXdhaXQgbWV0cmljc0NvbGxlY3Rvci5yZWNvcmRSZXF1ZXN0KFxyXG4gICAgICAnY3JlYXRlLXByZWZlcmVuY2UnLFxyXG4gICAgICAnUE9TVCcsXHJcbiAgICAgIDIwMCxcclxuICAgICAgRGF0ZS5ub3coKSAtIHJlcXVlc3RTdGFydCxcclxuICAgICAgeyBjbGllbnRJUCwgdXNlckFnZW50IH1cclxuICAgICk7XHJcblxyXG4gICAgLy8gQWdyZWdhciBoZWFkZXJzIGRlIHJhdGUgbGltaXRpbmcgYSBsYSByZXNwdWVzdGEgZXhpdG9zYVxyXG4gICAgcmV0dXJuIGFkZFJhdGVMaW1pdEhlYWRlcnMocmVzcG9uc2UsIHJhdGVMaW1pdFJlc3VsdCwgcmF0ZUxpbWl0Q29uZmlnKTtcclxuXHJcbiAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xyXG4gICAgLy8g4pyFIE1FSk9SQURPOiBMb2dnaW5nIGVzdHJ1Y3R1cmFkbyBkZSBlcnJvcmVzXHJcbiAgICBjb25zdCBwcm9jZXNzaW5nVGltZSA9IERhdGUubm93KCkgLSByZXF1ZXN0U3RhcnQ7XHJcblxyXG4gICAgbG9nZ2VyLmVycm9yKExvZ0NhdGVnb3J5LlBBWU1FTlQsICdGYWlsZWQgdG8gY3JlYXRlIHBheW1lbnQgcHJlZmVyZW5jZScsIGVycm9yLCB7XHJcbiAgICAgIGNsaWVudElQLFxyXG4gICAgICB1c2VyQWdlbnQsXHJcbiAgICB9KTtcclxuXHJcbiAgICBsb2dnZXIucGVyZm9ybWFuY2UoTG9nTGV2ZWwuRVJST1IsICdDcmVhdGUgcHJlZmVyZW5jZSByZXF1ZXN0IGZhaWxlZCcsIHtcclxuICAgICAgb3BlcmF0aW9uOiAnY3JlYXRlLXByZWZlcmVuY2UnLFxyXG4gICAgICBkdXJhdGlvbjogcHJvY2Vzc2luZ1RpbWUsXHJcbiAgICAgIGVuZHBvaW50OiAnL2FwaS9wYXltZW50cy9jcmVhdGUtcHJlZmVyZW5jZScsXHJcbiAgICAgIHN0YXR1c0NvZGU6IDUwMCxcclxuICAgIH0sIHsgY2xpZW50SVAgfSk7XHJcblxyXG4gICAgLy8g4pyFIE5VRVZPOiBSZWdpc3RyYXIgbcOpdHJpY2FzIGRlIGVycm9yXHJcbiAgICBhd2FpdCBtZXRyaWNzQ29sbGVjdG9yLnJlY29yZFJlcXVlc3QoXHJcbiAgICAgICdjcmVhdGUtcHJlZmVyZW5jZScsXHJcbiAgICAgICdQT1NUJyxcclxuICAgICAgNTAwLFxyXG4gICAgICBwcm9jZXNzaW5nVGltZSxcclxuICAgICAgeyBjbGllbnRJUCwgdXNlckFnZW50LCBlcnJvcjogZXJyb3IubWVzc2FnZSB9XHJcbiAgICApO1xyXG5cclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XHJcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICBlcnJvcjogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcgPyBlcnJvci5tZXNzYWdlIDogJ0Vycm9yIGludGVybm8gZGVsIHNlcnZpZG9yJyxcclxuICAgIH0sIHsgc3RhdHVzOiA1MDAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4iXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUNhO0lBQUFBLGFBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtF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