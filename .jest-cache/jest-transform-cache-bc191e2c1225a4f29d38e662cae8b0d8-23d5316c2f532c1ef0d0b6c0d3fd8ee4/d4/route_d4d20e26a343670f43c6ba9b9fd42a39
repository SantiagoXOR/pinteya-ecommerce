22e0567daac6c4db4d4e77507e078989
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_ah28xr4wa() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\performance\\metrics\\route.ts";
  var hash = "32a911c25e8df6ba786a8ad1977d6d5eeef3bc15";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\performance\\metrics\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 22
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 20
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 23
        }
      },
      "8": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "9": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 57
        }
      },
      "10": {
        start: {
          line: 28,
          column: 31
        },
        end: {
          line: 28,
          column: 90
        }
      },
      "11": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 24
        }
      },
      "12": {
        start: {
          line: 31,
          column: 19
        },
        end: {
          line: 31,
          column: 21
        }
      },
      "13": {
        start: {
          line: 34,
          column: 19
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "14": {
        start: {
          line: 40,
          column: 25
        },
        end: {
          line: 40,
          column: 69
        }
      },
      "15": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "16": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 27
        }
      },
      "17": {
        start: {
          line: 44,
          column: 11
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "18": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 28
        }
      },
      "19": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 29
        }
      },
      "20": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 53,
          column: 6
        }
      },
      "21": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "22": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 20
        }
      },
      "23": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 21
        }
      },
      "24": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 77,
          column: 5
        }
      },
      "25": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "26": {
        start: {
          line: 69,
          column: 26
        },
        end: {
          line: 69,
          column: 47
        }
      },
      "27": {
        start: {
          line: 70,
          column: 27
        },
        end: {
          line: 70,
          column: 55
        }
      },
      "28": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 32
        }
      },
      "29": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 20
        }
      },
      "30": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 21
        }
      },
      "31": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "32": {
        start: {
          line: 82,
          column: 26
        },
        end: {
          line: 82,
          column: 67
        }
      },
      "33": {
        start: {
          line: 83,
          column: 23
        },
        end: {
          line: 83,
          column: 49
        }
      },
      "34": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 75
        }
      },
      "35": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 20
        }
      },
      "36": {
        start: {
          line: 92,
          column: 20
        },
        end: {
          line: 92,
          column: 36
        }
      },
      "37": {
        start: {
          line: 93,
          column: 18
        },
        end: {
          line: 93,
          column: 30
        }
      },
      "38": {
        start: {
          line: 94,
          column: 17
        },
        end: {
          line: 94,
          column: 27
        }
      },
      "39": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "40": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 65
        }
      },
      "41": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "42": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 68
        }
      },
      "43": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 101,
          column: 70
        }
      },
      "44": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 195,
          column: 5
        }
      },
      "45": {
        start: {
          line: 106,
          column: 24
        },
        end: {
          line: 106,
          column: 49
        }
      },
      "46": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "47": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 113,
          column: 15
        }
      },
      "48": {
        start: {
          line: 115,
          column: 33
        },
        end: {
          line: 115,
          column: 53
        }
      },
      "49": {
        start: {
          line: 116,
          column: 26
        },
        end: {
          line: 116,
          column: 63
        }
      },
      "50": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 117,
          column: 43
        }
      },
      "51": {
        start: {
          line: 118,
          column: 30
        },
        end: {
          line: 118,
          column: 67
        }
      },
      "52": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 120,
          column: 30
        }
      },
      "53": {
        start: {
          line: 121,
          column: 25
        },
        end: {
          line: 121,
          column: 39
        }
      },
      "54": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "55": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 44
        }
      },
      "56": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 22
        }
      },
      "57": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 127,
          column: 44
        }
      },
      "58": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 128,
          column: 22
        }
      },
      "59": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 49
        }
      },
      "60": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 131,
          column: 22
        }
      },
      "61": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 53
        }
      },
      "62": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 22
        }
      },
      "63": {
        start: {
          line: 136,
          column: 26
        },
        end: {
          line: 136,
          column: 42
        }
      },
      "64": {
        start: {
          line: 138,
          column: 26
        },
        end: {
          line: 138,
          column: 67
        }
      },
      "65": {
        start: {
          line: 139,
          column: 23
        },
        end: {
          line: 139,
          column: 49
        }
      },
      "66": {
        start: {
          line: 141,
          column: 32
        },
        end: {
          line: 141,
          column: 92
        }
      },
      "67": {
        start: {
          line: 141,
          column: 62
        },
        end: {
          line: 141,
          column: 91
        }
      },
      "68": {
        start: {
          line: 143,
          column: 30
        },
        end: {
          line: 143,
          column: 39
        }
      },
      "69": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 152,
          column: 11
        }
      },
      "70": {
        start: {
          line: 145,
          column: 25
        },
        end: {
          line: 145,
          column: 35
        }
      },
      "71": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 148,
          column: 13
        }
      },
      "72": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 44
        }
      },
      "73": {
        start: {
          line: 150,
          column: 33
        },
        end: {
          line: 150,
          column: 85
        }
      },
      "74": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 55
        }
      },
      "75": {
        start: {
          line: 153,
          column: 33
        },
        end: {
          line: 156,
          column: 64
        }
      },
      "76": {
        start: {
          line: 153,
          column: 91
        },
        end: {
          line: 156,
          column: 13
        }
      },
      "77": {
        start: {
          line: 155,
          column: 46
        },
        end: {
          line: 155,
          column: 51
        }
      },
      "78": {
        start: {
          line: 156,
          column: 29
        },
        end: {
          line: 156,
          column: 50
        }
      },
      "79": {
        start: {
          line: 158,
          column: 31
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "80": {
        start: {
          line: 164,
          column: 26
        },
        end: {
          line: 164,
          column: 30
        }
      },
      "81": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "82": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 53
        }
      },
      "83": {
        start: {
          line: 169,
          column: 25
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "84": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 51
        }
      },
      "85": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 68
        }
      },
      "86": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 194,
          column: 11
        }
      },
      "87": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 267,
          column: 5
        }
      },
      "88": {
        start: {
          line: 200,
          column: 30
        },
        end: {
          line: 200,
          column: 68
        }
      },
      "89": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 210,
          column: 9
        }
      },
      "90": {
        start: {
          line: 202,
          column: 31
        },
        end: {
          line: 202,
          column: 67
        }
      },
      "91": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 209,
          column: 13
        }
      },
      "92": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 208,
          column: 19
        }
      },
      "93": {
        start: {
          line: 211,
          column: 21
        },
        end: {
          line: 211,
          column: 41
        }
      },
      "94": {
        start: {
          line: 212,
          column: 78
        },
        end: {
          line: 212,
          column: 82
        }
      },
      "95": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "96": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 219,
          column: 15
        }
      },
      "97": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "98": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 227,
          column: 15
        }
      },
      "99": {
        start: {
          line: 230,
          column: 33
        },
        end: {
          line: 230,
          column: 35
        }
      },
      "100": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 243,
          column: 9
        }
      },
      "101": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 234,
          column: 13
        }
      },
      "102": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 25
        }
      },
      "103": {
        start: {
          line: 235,
          column: 30
        },
        end: {
          line: 241,
          column: 13
        }
      },
      "104": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 45
        }
      },
      "105": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 245,
          column: 47
        }
      },
      "106": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 248,
          column: 9
        }
      },
      "107": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 63
        }
      },
      "108": {
        start: {
          line: 250,
          column: 27
        },
        end: {
          line: 250,
          column: 130
        }
      },
      "109": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 253,
          column: 9
        }
      },
      "110": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 80
        }
      },
      "111": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 259,
          column: 11
        }
      },
      "112": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 261,
          column: 70
        }
      },
      "113": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 266,
          column: 11
        }
      },
      "114": {
        start: {
          line: 270,
          column: 4
        },
        end: {
          line: 303,
          column: 5
        }
      },
      "115": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 302,
          column: 10
        }
      },
      "116": {
        start: {
          line: 304,
          column: 33
        },
        end: {
          line: 313,
          column: 5
        }
      },
      "117": {
        start: {
          line: 305,
          column: 23
        },
        end: {
          line: 305,
          column: 49
        }
      },
      "118": {
        start: {
          line: 305,
          column: 43
        },
        end: {
          line: 305,
          column: 48
        }
      },
      "119": {
        start: {
          line: 306,
          column: 20
        },
        end: {
          line: 306,
          column: 33
        }
      },
      "120": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 312,
          column: 10
        }
      },
      "121": {
        start: {
          line: 308,
          column: 43
        },
        end: {
          line: 308,
          column: 52
        }
      },
      "122": {
        start: {
          line: 314,
          column: 22
        },
        end: {
          line: 314,
          column: 82
        }
      },
      "123": {
        start: {
          line: 314,
          column: 39
        },
        end: {
          line: 314,
          column: 52
        }
      },
      "124": {
        start: {
          line: 314,
          column: 66
        },
        end: {
          line: 314,
          column: 81
        }
      },
      "125": {
        start: {
          line: 315,
          column: 22
        },
        end: {
          line: 315,
          column: 82
        }
      },
      "126": {
        start: {
          line: 315,
          column: 39
        },
        end: {
          line: 315,
          column: 52
        }
      },
      "127": {
        start: {
          line: 315,
          column: 66
        },
        end: {
          line: 315,
          column: 81
        }
      },
      "128": {
        start: {
          line: 316,
          column: 22
        },
        end: {
          line: 316,
          column: 82
        }
      },
      "129": {
        start: {
          line: 316,
          column: 39
        },
        end: {
          line: 316,
          column: 52
        }
      },
      "130": {
        start: {
          line: 316,
          column: 66
        },
        end: {
          line: 316,
          column: 81
        }
      },
      "131": {
        start: {
          line: 317,
          column: 22
        },
        end: {
          line: 317,
          column: 82
        }
      },
      "132": {
        start: {
          line: 317,
          column: 39
        },
        end: {
          line: 317,
          column: 52
        }
      },
      "133": {
        start: {
          line: 317,
          column: 66
        },
        end: {
          line: 317,
          column: 81
        }
      },
      "134": {
        start: {
          line: 318,
          column: 25
        },
        end: {
          line: 318,
          column: 92
        }
      },
      "135": {
        start: {
          line: 318,
          column: 42
        },
        end: {
          line: 318,
          column: 62
        }
      },
      "136": {
        start: {
          line: 318,
          column: 76
        },
        end: {
          line: 318,
          column: 91
        }
      },
      "137": {
        start: {
          line: 319,
          column: 4
        },
        end: {
          line: 325,
          column: 6
        }
      },
      "138": {
        start: {
          line: 328,
          column: 23
        },
        end: {
          line: 328,
          column: 25
        }
      },
      "139": {
        start: {
          line: 329,
          column: 20
        },
        end: {
          line: 335,
          column: 5
        }
      },
      "140": {
        start: {
          line: 336,
          column: 4
        },
        end: {
          line: 341,
          column: 7
        }
      },
      "141": {
        start: {
          line: 337,
          column: 22
        },
        end: {
          line: 337,
          column: 41
        }
      },
      "142": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 340,
          column: 9
        }
      },
      "143": {
        start: {
          line: 339,
          column: 12
        },
        end: {
          line: 339,
          column: 76
        }
      },
      "144": {
        start: {
          line: 342,
          column: 4
        },
        end: {
          line: 342,
          column: 22
        }
      },
      "145": {
        start: {
          line: 345,
          column: 4
        },
        end: {
          line: 386,
          column: 5
        }
      },
      "146": {
        start: {
          line: 347,
          column: 27
        },
        end: {
          line: 347,
          column: 63
        }
      },
      "147": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 354,
          column: 9
        }
      },
      "148": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 353,
          column: 15
        }
      },
      "149": {
        start: {
          line: 355,
          column: 33
        },
        end: {
          line: 355,
          column: 53
        }
      },
      "150": {
        start: {
          line: 356,
          column: 26
        },
        end: {
          line: 356,
          column: 64
        }
      },
      "151": {
        start: {
          line: 357,
          column: 25
        },
        end: {
          line: 357,
          column: 35
        }
      },
      "152": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 368,
          column: 9
        }
      },
      "153": {
        start: {
          line: 360,
          column: 16
        },
        end: {
          line: 360,
          column: 45
        }
      },
      "154": {
        start: {
          line: 361,
          column: 16
        },
        end: {
          line: 361,
          column: 22
        }
      },
      "155": {
        start: {
          line: 363,
          column: 16
        },
        end: {
          line: 363,
          column: 50
        }
      },
      "156": {
        start: {
          line: 364,
          column: 16
        },
        end: {
          line: 364,
          column: 22
        }
      },
      "157": {
        start: {
          line: 366,
          column: 16
        },
        end: {
          line: 366,
          column: 54
        }
      },
      "158": {
        start: {
          line: 367,
          column: 16
        },
        end: {
          line: 367,
          column: 22
        }
      },
      "159": {
        start: {
          line: 369,
          column: 30
        },
        end: {
          line: 369,
          column: 49
        }
      },
      "160": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 370,
          column: 85
        }
      },
      "161": {
        start: {
          line: 370,
          column: 53
        },
        end: {
          line: 370,
          column: 83
        }
      },
      "162": {
        start: {
          line: 371,
          column: 29
        },
        end: {
          line: 371,
          column: 64
        }
      },
      "163": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 378,
          column: 11
        }
      },
      "164": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 380,
          column: 68
        }
      },
      "165": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 385,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "performHealthCheck",
        decl: {
          start: {
            line: 33,
            column: 15
          },
          end: {
            line: 33,
            column: 33
          }
        },
        loc: {
          start: {
            line: 33,
            column: 36
          },
          end: {
            line: 54,
            column: 1
          }
        },
        line: 33
      },
      "6": {
        name: "checkDatabase",
        decl: {
          start: {
            line: 56,
            column: 15
          },
          end: {
            line: 56,
            column: 28
          }
        },
        loc: {
          start: {
            line: 56,
            column: 31
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 56
      },
      "7": {
        name: "checkMemory",
        decl: {
          start: {
            line: 66,
            column: 15
          },
          end: {
            line: 66,
            column: 26
          }
        },
        loc: {
          start: {
            line: 66,
            column: 29
          },
          end: {
            line: 78,
            column: 1
          }
        },
        line: 66
      },
      "8": {
        name: "checkPerformance",
        decl: {
          start: {
            line: 80,
            column: 15
          },
          end: {
            line: 80,
            column: 31
          }
        },
        loc: {
          start: {
            line: 80,
            column: 34
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 80
      },
      "9": {
        name: "formatTimeWindow",
        decl: {
          start: {
            line: 91,
            column: 9
          },
          end: {
            line: 91,
            column: 25
          }
        },
        loc: {
          start: {
            line: 91,
            column: 30
          },
          end: {
            line: 102,
            column: 1
          }
        },
        line: 91
      },
      "10": {
        name: "GET",
        decl: {
          start: {
            line: 103,
            column: 15
          },
          end: {
            line: 103,
            column: 18
          }
        },
        loc: {
          start: {
            line: 103,
            column: 28
          },
          end: {
            line: 196,
            column: 1
          }
        },
        line: 103
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 141,
            column: 52
          },
          end: {
            line: 141,
            column: 53
          }
        },
        loc: {
          start: {
            line: 141,
            column: 62
          },
          end: {
            line: 141,
            column: 91
          }
        },
        line: 141
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 144,
            column: 32
          },
          end: {
            line: 144,
            column: 33
          }
        },
        loc: {
          start: {
            line: 144,
            column: 42
          },
          end: {
            line: 152,
            column: 9
          }
        },
        line: 144
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 153,
            column: 73
          },
          end: {
            line: 153,
            column: 74
          }
        },
        loc: {
          start: {
            line: 153,
            column: 91
          },
          end: {
            line: 156,
            column: 13
          }
        },
        line: 153
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 155,
            column: 38
          },
          end: {
            line: 155,
            column: 39
          }
        },
        loc: {
          start: {
            line: 155,
            column: 46
          },
          end: {
            line: 155,
            column: 51
          }
        },
        line: 155
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 156,
            column: 21
          },
          end: {
            line: 156,
            column: 22
          }
        },
        loc: {
          start: {
            line: 156,
            column: 29
          },
          end: {
            line: 156,
            column: 50
          }
        },
        line: 156
      },
      "16": {
        name: "POST",
        decl: {
          start: {
            line: 197,
            column: 15
          },
          end: {
            line: 197,
            column: 19
          }
        },
        loc: {
          start: {
            line: 197,
            column: 29
          },
          end: {
            line: 268,
            column: 1
          }
        },
        line: 197
      },
      "17": {
        name: "calculateAggregatedStats",
        decl: {
          start: {
            line: 269,
            column: 9
          },
          end: {
            line: 269,
            column: 33
          }
        },
        loc: {
          start: {
            line: 269,
            column: 43
          },
          end: {
            line: 326,
            column: 1
          }
        },
        line: 269
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 304,
            column: 33
          },
          end: {
            line: 304,
            column: 34
          }
        },
        loc: {
          start: {
            line: 304,
            column: 43
          },
          end: {
            line: 313,
            column: 5
          }
        },
        line: 304
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 305,
            column: 35
          },
          end: {
            line: 305,
            column: 36
          }
        },
        loc: {
          start: {
            line: 305,
            column: 43
          },
          end: {
            line: 305,
            column: 48
          }
        },
        line: 305
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 308,
            column: 31
          },
          end: {
            line: 308,
            column: 32
          }
        },
        loc: {
          start: {
            line: 308,
            column: 43
          },
          end: {
            line: 308,
            column: 52
          }
        },
        line: 308
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 314,
            column: 34
          },
          end: {
            line: 314,
            column: 35
          }
        },
        loc: {
          start: {
            line: 314,
            column: 39
          },
          end: {
            line: 314,
            column: 52
          }
        },
        line: 314
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 314,
            column: 61
          },
          end: {
            line: 314,
            column: 62
          }
        },
        loc: {
          start: {
            line: 314,
            column: 66
          },
          end: {
            line: 314,
            column: 81
          }
        },
        line: 314
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 315,
            column: 34
          },
          end: {
            line: 315,
            column: 35
          }
        },
        loc: {
          start: {
            line: 315,
            column: 39
          },
          end: {
            line: 315,
            column: 52
          }
        },
        line: 315
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 315,
            column: 61
          },
          end: {
            line: 315,
            column: 62
          }
        },
        loc: {
          start: {
            line: 315,
            column: 66
          },
          end: {
            line: 315,
            column: 81
          }
        },
        line: 315
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 316,
            column: 34
          },
          end: {
            line: 316,
            column: 35
          }
        },
        loc: {
          start: {
            line: 316,
            column: 39
          },
          end: {
            line: 316,
            column: 52
          }
        },
        line: 316
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 316,
            column: 61
          },
          end: {
            line: 316,
            column: 62
          }
        },
        loc: {
          start: {
            line: 316,
            column: 66
          },
          end: {
            line: 316,
            column: 81
          }
        },
        line: 316
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 317,
            column: 34
          },
          end: {
            line: 317,
            column: 35
          }
        },
        loc: {
          start: {
            line: 317,
            column: 39
          },
          end: {
            line: 317,
            column: 52
          }
        },
        line: 317
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 317,
            column: 61
          },
          end: {
            line: 317,
            column: 62
          }
        },
        loc: {
          start: {
            line: 317,
            column: 66
          },
          end: {
            line: 317,
            column: 81
          }
        },
        line: 317
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 318,
            column: 37
          },
          end: {
            line: 318,
            column: 38
          }
        },
        loc: {
          start: {
            line: 318,
            column: 42
          },
          end: {
            line: 318,
            column: 62
          }
        },
        line: 318
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 318,
            column: 71
          },
          end: {
            line: 318,
            column: 72
          }
        },
        loc: {
          start: {
            line: 318,
            column: 76
          },
          end: {
            line: 318,
            column: 91
          }
        },
        line: 318
      },
      "31": {
        name: "checkBudgetViolations",
        decl: {
          start: {
            line: 327,
            column: 9
          },
          end: {
            line: 327,
            column: 30
          }
        },
        loc: {
          start: {
            line: 327,
            column: 39
          },
          end: {
            line: 343,
            column: 1
          }
        },
        line: 327
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 336,
            column: 36
          },
          end: {
            line: 336,
            column: 37
          }
        },
        loc: {
          start: {
            line: 336,
            column: 53
          },
          end: {
            line: 341,
            column: 5
          }
        },
        line: 336
      },
      "33": {
        name: "DELETE",
        decl: {
          start: {
            line: 344,
            column: 15
          },
          end: {
            line: 344,
            column: 21
          }
        },
        loc: {
          start: {
            line: 344,
            column: 31
          },
          end: {
            line: 387,
            column: 1
          }
        },
        line: 344
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 370,
            column: 43
          },
          end: {
            line: 370,
            column: 44
          }
        },
        loc: {
          start: {
            line: 370,
            column: 53
          },
          end: {
            line: 370,
            column: 83
          }
        },
        line: 370
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        }, {
          start: {
            line: 44,
            column: 11
          },
          end: {
            line: 48,
            column: 5
          }
        }],
        line: 42
      },
      "1": {
        loc: {
          start: {
            line: 44,
            column: 11
          },
          end: {
            line: 48,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 11
          },
          end: {
            line: 48,
            column: 5
          }
        }, {
          start: {
            line: 46,
            column: 11
          },
          end: {
            line: 48,
            column: 5
          }
        }],
        line: 44
      },
      "2": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "3": {
        loc: {
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 68,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 68,
            column: 42
          }
        }, {
          start: {
            line: 68,
            column: 46
          },
          end: {
            line: 68,
            column: 65
          }
        }],
        line: 68
      },
      "4": {
        loc: {
          start: {
            line: 85,
            column: 15
          },
          end: {
            line: 85,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 15
          },
          end: {
            line: 85,
            column: 48
          }
        }, {
          start: {
            line: 85,
            column: 52
          },
          end: {
            line: 85,
            column: 74
          }
        }],
        line: 85
      },
      "5": {
        loc: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "6": {
        loc: {
          start: {
            line: 96,
            column: 41
          },
          end: {
            line: 96,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 96,
            column: 54
          },
          end: {
            line: 96,
            column: 57
          }
        }, {
          start: {
            line: 96,
            column: 60
          },
          end: {
            line: 96,
            column: 62
          }
        }],
        line: 96
      },
      "7": {
        loc: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "8": {
        loc: {
          start: {
            line: 99,
            column: 43
          },
          end: {
            line: 99,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 99,
            column: 57
          },
          end: {
            line: 99,
            column: 60
          }
        }, {
          start: {
            line: 99,
            column: 63
          },
          end: {
            line: 99,
            column: 65
          }
        }],
        line: 99
      },
      "9": {
        loc: {
          start: {
            line: 101,
            column: 43
          },
          end: {
            line: 101,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 101,
            column: 59
          },
          end: {
            line: 101,
            column: 62
          }
        }, {
          start: {
            line: 101,
            column: 65
          },
          end: {
            line: 101,
            column: 67
          }
        }],
        line: 101
      },
      "10": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "11": {
        loc: {
          start: {
            line: 116,
            column: 26
          },
          end: {
            line: 116,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 26
          },
          end: {
            line: 116,
            column: 55
          }
        }, {
          start: {
            line: 116,
            column: 59
          },
          end: {
            line: 116,
            column: 63
          }
        }],
        line: 116
      },
      "12": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 125,
            column: 22
          }
        }, {
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 128,
            column: 22
          }
        }, {
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 131,
            column: 22
          }
        }, {
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 134,
            column: 22
          }
        }],
        line: 122
      },
      "13": {
        loc: {
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "14": {
        loc: {
          start: {
            line: 150,
            column: 33
          },
          end: {
            line: 150,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 33
          },
          end: {
            line: 150,
            column: 58
          }
        }, {
          start: {
            line: 150,
            column: 62
          },
          end: {
            line: 150,
            column: 80
          }
        }, {
          start: {
            line: 150,
            column: 84
          },
          end: {
            line: 150,
            column: 85
          }
        }],
        line: 150
      },
      "15": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "16": {
        loc: {
          start: {
            line: 184,
            column: 29
          },
          end: {
            line: 184,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 29
          },
          end: {
            line: 184,
            column: 49
          }
        }, {
          start: {
            line: 184,
            column: 53
          },
          end: {
            line: 184,
            column: 66
          }
        }],
        line: 184
      },
      "17": {
        loc: {
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 210,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 210,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "18": {
        loc: {
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 209,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 209,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "19": {
        loc: {
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "20": {
        loc: {
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 214,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 214,
            column: 20
          }
        }, {
          start: {
            line: 214,
            column: 24
          },
          end: {
            line: 214,
            column: 47
          }
        }],
        line: 214
      },
      "21": {
        loc: {
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "22": {
        loc: {
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 222,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 222,
            column: 16
          }
        }, {
          start: {
            line: 222,
            column: 20
          },
          end: {
            line: 222,
            column: 43
          }
        }],
        line: 222
      },
      "23": {
        loc: {
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 234,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 234,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "24": {
        loc: {
          start: {
            line: 232,
            column: 16
          },
          end: {
            line: 232,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 232,
            column: 16
          },
          end: {
            line: 232,
            column: 23
          }
        }, {
          start: {
            line: 232,
            column: 27
          },
          end: {
            line: 232,
            column: 53
          }
        }],
        line: 232
      },
      "25": {
        loc: {
          start: {
            line: 236,
            column: 27
          },
          end: {
            line: 236,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 27
          },
          end: {
            line: 236,
            column: 36
          }
        }, {
          start: {
            line: 236,
            column: 40
          },
          end: {
            line: 236,
            column: 50
          }
        }],
        line: 236
      },
      "26": {
        loc: {
          start: {
            line: 239,
            column: 27
          },
          end: {
            line: 239,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 239,
            column: 27
          },
          end: {
            line: 239,
            column: 36
          }
        }, {
          start: {
            line: 239,
            column: 40
          },
          end: {
            line: 239,
            column: 49
          }
        }],
        line: 239
      },
      "27": {
        loc: {
          start: {
            line: 240,
            column: 28
          },
          end: {
            line: 240,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 240,
            column: 28
          },
          end: {
            line: 240,
            column: 38
          }
        }, {
          start: {
            line: 240,
            column: 42
          },
          end: {
            line: 240,
            column: 51
          }
        }],
        line: 240
      },
      "28": {
        loc: {
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 248,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 248,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "29": {
        loc: {
          start: {
            line: 250,
            column: 27
          },
          end: {
            line: 250,
            column: 130
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 250,
            column: 57
          },
          end: {
            line: 250,
            column: 125
          }
        }, {
          start: {
            line: 250,
            column: 128
          },
          end: {
            line: 250,
            column: 130
          }
        }],
        line: 250
      },
      "30": {
        loc: {
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "31": {
        loc: {
          start: {
            line: 270,
            column: 4
          },
          end: {
            line: 303,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 4
          },
          end: {
            line: 303,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "32": {
        loc: {
          start: {
            line: 338,
            column: 8
          },
          end: {
            line: 340,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 338,
            column: 8
          },
          end: {
            line: 340,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 338
      },
      "33": {
        loc: {
          start: {
            line: 338,
            column: 12
          },
          end: {
            line: 338,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 338,
            column: 12
          },
          end: {
            line: 338,
            column: 31
          }
        }, {
          start: {
            line: 338,
            column: 35
          },
          end: {
            line: 338,
            column: 49
          }
        }],
        line: 338
      },
      "34": {
        loc: {
          start: {
            line: 348,
            column: 8
          },
          end: {
            line: 354,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 348,
            column: 8
          },
          end: {
            line: 354,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 348
      },
      "35": {
        loc: {
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 348,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 348,
            column: 23
          }
        }, {
          start: {
            line: 348,
            column: 27
          },
          end: {
            line: 348,
            column: 64
          }
        }],
        line: 348
      },
      "36": {
        loc: {
          start: {
            line: 356,
            column: 26
          },
          end: {
            line: 356,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 356,
            column: 26
          },
          end: {
            line: 356,
            column: 55
          }
        }, {
          start: {
            line: 356,
            column: 59
          },
          end: {
            line: 356,
            column: 64
          }
        }],
        line: 356
      },
      "37": {
        loc: {
          start: {
            line: 358,
            column: 8
          },
          end: {
            line: 368,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 359,
            column: 12
          },
          end: {
            line: 361,
            column: 22
          }
        }, {
          start: {
            line: 362,
            column: 12
          },
          end: {
            line: 364,
            column: 22
          }
        }, {
          start: {
            line: 365,
            column: 12
          },
          end: {
            line: 367,
            column: 22
          }
        }],
        line: 358
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0, 0],
      "13": [0, 0],
      "14": [0, 0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\performance\\metrics\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// API: Performance Metrics\r\n// Endpoint para recopilar y servir m\xE9tricas de performance\r\n// Integrado con sistema de monitoring de producci\xF3n\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { APIAnalytics } from '@/middleware/performance-monitoring';\r\nimport { productionMonitor } from '@/config/production-monitoring';\r\n\r\ninterface PerformanceMetric {\r\n  timestamp: number;\r\n  url: string;\r\n  metrics: {\r\n    LCP?: number;\r\n    FID?: number;\r\n    CLS?: number;\r\n    FCP?: number;\r\n    TTI?: number;\r\n    bundleSize?: number;\r\n    renderTime?: number;\r\n  };\r\n  userAgent: string;\r\n  connection?: string;\r\n}\r\n\r\n// Interfaz para health check\r\ninterface HealthCheck {\r\n  status: 'healthy' | 'degraded' | 'unhealthy';\r\n  checks: {\r\n    api: boolean;\r\n    database: boolean;\r\n    memory: boolean;\r\n    performance: boolean;\r\n  };\r\n  timestamp: number;\r\n}\r\n\r\n// Almacenamiento temporal de m\xE9tricas (en producci\xF3n usar base de datos)\r\nlet metricsStore: PerformanceMetric[] = [];\r\n\r\n// Funci\xF3n para realizar health check\r\nasync function performHealthCheck(): Promise<HealthCheck> {\r\n  const checks = {\r\n    api: true, // Siempre true si llegamos aqu\xED\r\n    database: await checkDatabase(),\r\n    memory: await checkMemory(),\r\n    performance: await checkPerformance()\r\n  };\r\n\r\n  const healthyCount = Object.values(checks).filter(Boolean).length;\r\n  let status: 'healthy' | 'degraded' | 'unhealthy';\r\n  \r\n  if (healthyCount === 4) {status = 'healthy';}\r\n  else if (healthyCount >= 2) {status = 'degraded';}\r\n  else {status = 'unhealthy';}\r\n\r\n  return {\r\n    status,\r\n    checks,\r\n    timestamp: Date.now()\r\n  };\r\n}\r\n\r\n// Verificar estado de la base de datos\r\nasync function checkDatabase(): Promise<boolean> {\r\n  try {\r\n    // Aqu\xED ir\xEDa la verificaci\xF3n real de la DB\r\n    // Por ahora simulamos una verificaci\xF3n exitosa\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\n// Verificar uso de memoria\r\nasync function checkMemory(): Promise<boolean> {\r\n  try {\r\n    if (typeof process !== 'undefined' && process.memoryUsage) {\r\n      const usage = process.memoryUsage();\r\n      const usedMB = usage.heapUsed / 1024 / 1024;\r\n      // Considerar unhealthy si usa m\xE1s de 512MB\r\n      return usedMB < 512;\r\n    }\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\n// Verificar rendimiento general\r\nasync function checkPerformance(): Promise<boolean> {\r\n  try {\r\n    const analytics = new APIAnalytics();\r\n    const report = analytics.generateReport();\r\n    // Considerar unhealthy si el tiempo promedio es > 2s o error rate > 10%\r\n    return report.averageResponseTime < 2000 && report.errorRate < 0.1;\r\n  } catch {\r\n    return true; // Default a healthy si no podemos verificar\r\n  }\r\n}\r\n\r\n// Funci\xF3n para formatear tiempo legible\r\nfunction formatTimeWindow(ms: number): string {\r\n  const minutes = ms / (1000 * 60);\r\n  const hours = minutes / 60;\r\n  const days = hours / 24;\r\n  \r\n  if (days >= 1) {return `${Math.round(days)} d\xEDa${days !== 1 ? 's' : ''}`;}\r\n  if (hours >= 1) {return `${Math.round(hours)} hora${hours !== 1 ? 's' : ''}`;}\r\n  return `${Math.round(minutes)} minuto${minutes !== 1 ? 's' : ''}`;\r\n}\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n de admin\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { error: 'Unauthorized', message: 'Authentication required' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const { searchParams } = new URL(request.url);\r\n    const timeframe = searchParams.get('timeframe') || '1h';\r\n    const url = searchParams.get('url');\r\n    const includeHealth = searchParams.get('health') === 'true';\r\n\r\n    // Calcular timestamp de inicio basado en timeframe\r\n    const now = Date.now();\r\n    let timeWindow = 60 * 60 * 1000; // Default 1h\r\n    \r\n    switch (timeframe) {\r\n      case '15m':\r\n        timeWindow = 15 * 60 * 1000;\r\n        break;\r\n      case '1h':\r\n        timeWindow = 60 * 60 * 1000;\r\n        break;\r\n      case '24h':\r\n        timeWindow = 24 * 60 * 60 * 1000;\r\n        break;\r\n      case '7d':\r\n        timeWindow = 7 * 24 * 60 * 60 * 1000;\r\n        break;\r\n    }\r\n    \r\n    const startTime = now - timeWindow;\r\n    \r\n    // Obtener m\xE9tricas del sistema de monitoring\r\n    const analytics = new APIAnalytics();\r\n    const report = analytics.generateReport();\r\n    \r\n    // Filtrar m\xE9tricas por ventana de tiempo\r\n    const filteredMetrics = metricsStore.filter(\r\n      metric => metric.timestamp >= startTime\r\n    );\r\n    \r\n    // Calcular endpoints m\xE1s lentos\r\n    const endpointTimes = new Map<string, number[]>();\r\n    filteredMetrics.forEach(metric => {\r\n      const path = metric.url;\r\n      if (!endpointTimes.has(path)) {\r\n        endpointTimes.set(path, []);\r\n      }\r\n      // Usar renderTime como tiempo de respuesta si est\xE1 disponible\r\n      const responseTime = metric.metrics.renderTime || metric.metrics.TTI || 0;\r\n      endpointTimes.get(path)!.push(responseTime);\r\n    });\r\n    \r\n    const slowestEndpoints = Array.from(endpointTimes.entries())\r\n      .map(([path, times]) => ({\r\n        path,\r\n        avgTime: times.reduce((a, b) => a + b, 0) / times.length\r\n      }))\r\n      .sort((a, b) => b.avgTime - a.avgTime)\r\n      .slice(0, 10);\r\n    \r\n    // Calcular errores por c\xF3digo de estado (simulado)\r\n    const errorsByStatus: Record<number, number> = {\r\n      404: Math.floor(Math.random() * 10),\r\n      500: Math.floor(Math.random() * 5),\r\n      503: Math.floor(Math.random() * 3)\r\n    };\r\n    \r\n    // Incluir health check si se solicita\r\n    let healthCheck = null;\r\n    if (includeHealth) {\r\n      healthCheck = await performHealthCheck();\r\n    }\r\n    \r\n    // Preparar respuesta en el formato esperado por el componente\r\n    const response = {\r\n      timestamp: new Date().toISOString(),\r\n      timeWindow,\r\n      timeWindowHuman: formatTimeWindow(timeWindow),\r\n      metrics: {\r\n        totalRequests: filteredMetrics.length,\r\n        averageResponseTime: report.averageResponseTime,\r\n        errorRate: report.errorRate,\r\n        slowestEndpoints,\r\n        errorsByStatus\r\n      },\r\n      healthCheck,\r\n      meta: {\r\n        generatedAt: Date.now(),\r\n        version: '1.0.0',\r\n        environment: process.env.NODE_ENV || 'development'\r\n      }\r\n    };\r\n\r\n    return NextResponse.json(response);\r\n\r\n  } catch (error) {\r\n    console.error('Error fetching performance metrics:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n de admin (bypass para desarrollo)\r\n    const isDevelopment = process.env.NODE_ENV === 'development';\r\n    \r\n    if (!isDevelopment) {\r\n      const authHeader = request.headers.get('authorization');\r\n      if (!authHeader) {\r\n        return NextResponse.json(\r\n          { error: 'Unauthorized - Admin access required' },\r\n          { status: 401 }\r\n        );\r\n      }\r\n    }\r\n\r\n    const body = await request.json();\r\n    const { metrics, url, userAgent, connection, timestamp, batchSize } = body;\r\n\r\n    // Validar que las m\xE9tricas sean v\xE1lidas\r\n    if (!metrics || !Array.isArray(metrics)) {\r\n      return NextResponse.json(\r\n        { error: 'Invalid metrics data - expected array' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Validar URL\r\n    if (!url || typeof url !== 'string') {\r\n      return NextResponse.json(\r\n        { error: 'Invalid URL' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Procesar cada m\xE9trica del batch\r\n    const processedMetrics: PerformanceMetric[] = [];\r\n    \r\n    for (const metric of metrics) {\r\n      if (!metric || typeof metric !== 'object') {continue;}\r\n      \r\n      const newMetric: PerformanceMetric = {\r\n        timestamp: timestamp || Date.now(),\r\n        url,\r\n        metrics: metric,\r\n        userAgent: userAgent || 'Unknown',\r\n        connection: connection || 'Unknown'\r\n      };\r\n      \r\n      processedMetrics.push(newMetric);\r\n    }\r\n\r\n    // Almacenar en memoria (limitado a 1000 m\xE9tricas)\r\n    metricsStore.push(...processedMetrics);\r\n    if (metricsStore.length > 1000) {\r\n      metricsStore.splice(0, metricsStore.length - 1000); // Mantener solo las \xFAltimas 1000\r\n    }\r\n\r\n    // Verificar violaciones de presupuesto para la \xFAltima m\xE9trica\r\n    const violations = processedMetrics.length > 0 ? \r\n      checkBudgetViolations(processedMetrics[processedMetrics.length - 1]) : [];\r\n    \r\n    if (violations.length > 0) {\r\n      console.warn('Performance budget violations detected:', violations);\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      processedCount: processedMetrics.length,\r\n      totalStored: metricsStore.length,\r\n      violations,\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error processing performance metrics:', error);\r\n    return NextResponse.json(\r\n      { error: 'Internal server error' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateAggregatedStats(metrics: PerformanceMetric[]) {\r\n  if (metrics.length === 0) {\r\n    return {\r\n      LCP: { avg: 0, p50: 0, p95: 0, p99: 0 },\r\n      FID: { avg: 0, p50: 0, p95: 0, p99: 0 },\r\n      CLS: { avg: 0, p50: 0, p95: 0, p99: 0 },\r\n      FCP: { avg: 0, p50: 0, p95: 0, p99: 0 },\r\n      renderTime: { avg: 0, p50: 0, p95: 0, p99: 0 }\r\n    };\r\n  }\r\n\r\n  const calculatePercentiles = (values: number[]) => {\r\n    const sorted = values.sort((a, b) => a - b);\r\n    const len = sorted.length;\r\n    \r\n    return {\r\n      avg: values.reduce((sum, val) => sum + val, 0) / len,\r\n      p50: sorted[Math.floor(len * 0.5)],\r\n      p95: sorted[Math.floor(len * 0.95)],\r\n      p99: sorted[Math.floor(len * 0.99)]\r\n    };\r\n  };\r\n\r\n  const lcpValues = metrics.map(m => m.metrics.LCP).filter(v => v !== undefined) as number[];\r\n  const fidValues = metrics.map(m => m.metrics.FID).filter(v => v !== undefined) as number[];\r\n  const clsValues = metrics.map(m => m.metrics.CLS).filter(v => v !== undefined) as number[];\r\n  const fcpValues = metrics.map(m => m.metrics.FCP).filter(v => v !== undefined) as number[];\r\n  const renderValues = metrics.map(m => m.metrics.renderTime).filter(v => v !== undefined) as number[];\r\n\r\n  return {\r\n    LCP: calculatePercentiles(lcpValues),\r\n    FID: calculatePercentiles(fidValues),\r\n    CLS: calculatePercentiles(clsValues),\r\n    FCP: calculatePercentiles(fcpValues),\r\n    renderTime: calculatePercentiles(renderValues)\r\n  };\r\n}\r\n\r\nfunction checkBudgetViolations(metric: PerformanceMetric): string[] {\r\n  const violations: string[] = [];\r\n  const budgets = {\r\n    LCP: 2500,\r\n    FID: 100,\r\n    CLS: 0.1,\r\n    FCP: 1800,\r\n    TTI: 3800\r\n  };\r\n\r\n  Object.entries(budgets).forEach(([key, budget]) => {\r\n    const value = metric.metrics[key as keyof typeof budgets];\r\n    if (value !== undefined && value > budget) {\r\n      violations.push(`${key}: ${value} exceeds budget of ${budget}`);\r\n    }\r\n  });\r\n\r\n  return violations;\r\n}\r\n\r\n// Endpoint para limpiar m\xE9tricas antiguas\r\nexport async function DELETE(request: NextRequest) {\r\n  try {\r\n    // Verificaci\xF3n b\xE1sica de autenticaci\xF3n (simplificada para demo)\r\n    const authHeader = request.headers.get('authorization');\r\n    if (!authHeader && process.env.NODE_ENV === 'production') {\r\n      return NextResponse.json(\r\n        { error: 'Acceso no autorizado' },\r\n        { status: 403 }\r\n      );\r\n    }\r\n\r\n    const { searchParams } = new URL(request.url);\r\n    const olderThan = searchParams.get('olderThan') || '24h';\r\n\r\n    let cutoffTime = Date.now();\r\n    switch (olderThan) {\r\n      case '1h':\r\n        cutoffTime -= (60 * 60 * 1000);\r\n        break;\r\n      case '24h':\r\n        cutoffTime -= (24 * 60 * 60 * 1000);\r\n        break;\r\n      case '7d':\r\n        cutoffTime -= (7 * 24 * 60 * 60 * 1000);\r\n        break;\r\n    }\r\n\r\n    const originalCount = metricsStore.length;\r\n    metricsStore = metricsStore.filter(metric => metric.timestamp >= cutoffTime);\r\n    const deletedCount = originalCount - metricsStore.length;\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        deletedCount,\r\n        remainingCount: metricsStore.length\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error cleaning performance metrics:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["DELETE", "GET", "POST", "runtime", "metricsStore", "performHealthCheck", "checks", "api", "database", "checkDatabase", "memory", "checkMemory", "performance", "checkPerformance", "healthyCount", "Object", "values", "filter", "Boolean", "length", "status", "timestamp", "Date", "now", "process", "memoryUsage", "usage", "usedMB", "heapUsed", "analytics", "APIAnalytics", "report", "generateReport", "averageResponseTime", "errorRate", "formatTimeWindow", "ms", "minutes", "hours", "days", "Math", "round", "request", "session", "auth", "user", "NextResponse", "json", "error", "message", "searchParams", "URL", "url", "timeframe", "get", "includeHealth", "timeWindow", "startTime", "filteredMetrics", "metric", "endpointTimes", "Map", "forEach", "path", "has", "set", "responseTime", "metrics", "renderTime", "TTI", "push", "slowestEndpoints", "Array", "from", "entries", "map", "times", "avgTime", "reduce", "a", "b", "sort", "slice", "errorsByStatus", "floor", "random", "healthCheck", "response", "toISOString", "timeWindowHuman", "totalRequests", "meta", "generatedAt", "version", "environment", "env", "NODE_ENV", "console", "isDevelopment", "authHeader", "headers", "body", "userAgent", "connection", "batchSize", "isArray", "processedMetrics", "newMetric", "splice", "violations", "checkBudgetViolations", "warn", "success", "processedCount", "totalStored", "calculateAggregatedStats", "LCP", "avg", "p50", "p95", "p99", "FID", "CLS", "FCP", "calculatePercentiles", "sorted", "len", "sum", "val", "lcpValues", "m", "v", "undefined", "fidValues", "clsValues", "fcpValues", "renderValues", "budgets", "key", "budget", "value", "olderThan", "cutoffTime", "originalCount", "deletedCount", "data", "remainingCount"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "32a911c25e8df6ba786a8ad1977d6d5eeef3bc15"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ah28xr4wa = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ah28xr4wa();
cov_ah28xr4wa().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_ah28xr4wa().f[0]++;
  cov_ah28xr4wa().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_ah28xr4wa().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_ah28xr4wa().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_ah28xr4wa().f[1]++;
    cov_ah28xr4wa().s[4]++;
    return DELETE;
  },
  get GET() {
    /* istanbul ignore next */
    cov_ah28xr4wa().f[2]++;
    cov_ah28xr4wa().s[5]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_ah28xr4wa().f[3]++;
    cov_ah28xr4wa().s[6]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_ah28xr4wa().f[4]++;
    cov_ah28xr4wa().s[7]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_ah28xr4wa().s[8]++, require("next/server"));
const _config =
/* istanbul ignore next */
(cov_ah28xr4wa().s[9]++, require("../../../../../lib/auth/config"));
const _performancemonitoring =
/* istanbul ignore next */
(cov_ah28xr4wa().s[10]++, require("../../../../../middleware/performance-monitoring"));
const runtime =
/* istanbul ignore next */
(cov_ah28xr4wa().s[11]++, 'nodejs');
// Almacenamiento temporal de mÃ©tricas (en producciÃ³n usar base de datos)
let metricsStore =
/* istanbul ignore next */
(cov_ah28xr4wa().s[12]++, []);
// FunciÃ³n para realizar health check
async function performHealthCheck() {
  /* istanbul ignore next */
  cov_ah28xr4wa().f[5]++;
  const checks =
  /* istanbul ignore next */
  (cov_ah28xr4wa().s[13]++, {
    api: true,
    database: await checkDatabase(),
    memory: await checkMemory(),
    performance: await checkPerformance()
  });
  const healthyCount =
  /* istanbul ignore next */
  (cov_ah28xr4wa().s[14]++, Object.values(checks).filter(Boolean).length);
  let status;
  /* istanbul ignore next */
  cov_ah28xr4wa().s[15]++;
  if (healthyCount === 4) {
    /* istanbul ignore next */
    cov_ah28xr4wa().b[0][0]++;
    cov_ah28xr4wa().s[16]++;
    status = 'healthy';
  } else {
    /* istanbul ignore next */
    cov_ah28xr4wa().b[0][1]++;
    cov_ah28xr4wa().s[17]++;
    if (healthyCount >= 2) {
      /* istanbul ignore next */
      cov_ah28xr4wa().b[1][0]++;
      cov_ah28xr4wa().s[18]++;
      status = 'degraded';
    } else {
      /* istanbul ignore next */
      cov_ah28xr4wa().b[1][1]++;
      cov_ah28xr4wa().s[19]++;
      status = 'unhealthy';
    }
  }
  /* istanbul ignore next */
  cov_ah28xr4wa().s[20]++;
  return {
    status,
    checks,
    timestamp: Date.now()
  };
}
// Verificar estado de la base de datos
async function checkDatabase() {
  /* istanbul ignore next */
  cov_ah28xr4wa().f[6]++;
  cov_ah28xr4wa().s[21]++;
  try {
    /* istanbul ignore next */
    cov_ah28xr4wa().s[22]++;
    // AquÃ­ irÃ­a la verificaciÃ³n real de la DB
    // Por ahora simulamos una verificaciÃ³n exitosa
    return true;
  } catch {
    /* istanbul ignore next */
    cov_ah28xr4wa().s[23]++;
    return false;
  }
}
// Verificar uso de memoria
async function checkMemory() {
  /* istanbul ignore next */
  cov_ah28xr4wa().f[7]++;
  cov_ah28xr4wa().s[24]++;
  try {
    /* istanbul ignore next */
    cov_ah28xr4wa().s[25]++;
    if (
    /* istanbul ignore next */
    (cov_ah28xr4wa().b[3][0]++, typeof process !== 'undefined') &&
    /* istanbul ignore next */
    (cov_ah28xr4wa().b[3][1]++, process.memoryUsage)) {
      /* istanbul ignore next */
      cov_ah28xr4wa().b[2][0]++;
      const usage =
      /* istanbul ignore next */
      (cov_ah28xr4wa().s[26]++, process.memoryUsage());
      const usedMB =
      /* istanbul ignore next */
      (cov_ah28xr4wa().s[27]++, usage.heapUsed / 1024 / 1024);
      // Considerar unhealthy si usa mÃ¡s de 512MB
      /* istanbul ignore next */
      cov_ah28xr4wa().s[28]++;
      return usedMB < 512;
    } else
    /* istanbul ignore next */
    {
      cov_ah28xr4wa().b[2][1]++;
    }
    cov_ah28xr4wa().s[29]++;
    return true;
  } catch {
    /* istanbul ignore next */
    cov_ah28xr4wa().s[30]++;
    return false;
  }
}
// Verificar rendimiento general
async function checkPerformance() {
  /* istanbul ignore next */
  cov_ah28xr4wa().f[8]++;
  cov_ah28xr4wa().s[31]++;
  try {
    const analytics =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[32]++, new _performancemonitoring.APIAnalytics());
    const report =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[33]++, analytics.generateReport());
    // Considerar unhealthy si el tiempo promedio es > 2s o error rate > 10%
    /* istanbul ignore next */
    cov_ah28xr4wa().s[34]++;
    return /* istanbul ignore next */(cov_ah28xr4wa().b[4][0]++, report.averageResponseTime < 2000) &&
    /* istanbul ignore next */
    (cov_ah28xr4wa().b[4][1]++, report.errorRate < 0.1);
  } catch {
    /* istanbul ignore next */
    cov_ah28xr4wa().s[35]++;
    return true; // Default a healthy si no podemos verificar
  }
}
// FunciÃ³n para formatear tiempo legible
function formatTimeWindow(ms) {
  /* istanbul ignore next */
  cov_ah28xr4wa().f[9]++;
  const minutes =
  /* istanbul ignore next */
  (cov_ah28xr4wa().s[36]++, ms / (1000 * 60));
  const hours =
  /* istanbul ignore next */
  (cov_ah28xr4wa().s[37]++, minutes / 60);
  const days =
  /* istanbul ignore next */
  (cov_ah28xr4wa().s[38]++, hours / 24);
  /* istanbul ignore next */
  cov_ah28xr4wa().s[39]++;
  if (days >= 1) {
    /* istanbul ignore next */
    cov_ah28xr4wa().b[5][0]++;
    cov_ah28xr4wa().s[40]++;
    return `${Math.round(days)} dÃ­a${days !== 1 ?
    /* istanbul ignore next */
    (cov_ah28xr4wa().b[6][0]++, 's') :
    /* istanbul ignore next */
    (cov_ah28xr4wa().b[6][1]++, '')}`;
  } else
  /* istanbul ignore next */
  {
    cov_ah28xr4wa().b[5][1]++;
  }
  cov_ah28xr4wa().s[41]++;
  if (hours >= 1) {
    /* istanbul ignore next */
    cov_ah28xr4wa().b[7][0]++;
    cov_ah28xr4wa().s[42]++;
    return `${Math.round(hours)} hora${hours !== 1 ?
    /* istanbul ignore next */
    (cov_ah28xr4wa().b[8][0]++, 's') :
    /* istanbul ignore next */
    (cov_ah28xr4wa().b[8][1]++, '')}`;
  } else
  /* istanbul ignore next */
  {
    cov_ah28xr4wa().b[7][1]++;
  }
  cov_ah28xr4wa().s[43]++;
  return `${Math.round(minutes)} minuto${minutes !== 1 ?
  /* istanbul ignore next */
  (cov_ah28xr4wa().b[9][0]++, 's') :
  /* istanbul ignore next */
  (cov_ah28xr4wa().b[9][1]++, '')}`;
}
async function GET(request) {
  /* istanbul ignore next */
  cov_ah28xr4wa().f[10]++;
  cov_ah28xr4wa().s[44]++;
  try {
    // Verificar autenticaciÃ³n de admin
    const session =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[45]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_ah28xr4wa().s[46]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_ah28xr4wa().b[10][0]++;
      cov_ah28xr4wa().s[47]++;
      return _server.NextResponse.json({
        error: 'Unauthorized',
        message: 'Authentication required'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_ah28xr4wa().b[10][1]++;
    }
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[48]++, new URL(request.url));
    const timeframe =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[49]++,
    /* istanbul ignore next */
    (cov_ah28xr4wa().b[11][0]++, searchParams.get('timeframe')) ||
    /* istanbul ignore next */
    (cov_ah28xr4wa().b[11][1]++, '1h'));
    const url =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[50]++, searchParams.get('url'));
    const includeHealth =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[51]++, searchParams.get('health') === 'true');
    // Calcular timestamp de inicio basado en timeframe
    const now =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[52]++, Date.now());
    let timeWindow =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[53]++, 60 * 60 * 1000); // Default 1h
    /* istanbul ignore next */
    cov_ah28xr4wa().s[54]++;
    switch (timeframe) {
      case '15m':
        /* istanbul ignore next */
        cov_ah28xr4wa().b[12][0]++;
        cov_ah28xr4wa().s[55]++;
        timeWindow = 15 * 60 * 1000;
        /* istanbul ignore next */
        cov_ah28xr4wa().s[56]++;
        break;
      case '1h':
        /* istanbul ignore next */
        cov_ah28xr4wa().b[12][1]++;
        cov_ah28xr4wa().s[57]++;
        timeWindow = 60 * 60 * 1000;
        /* istanbul ignore next */
        cov_ah28xr4wa().s[58]++;
        break;
      case '24h':
        /* istanbul ignore next */
        cov_ah28xr4wa().b[12][2]++;
        cov_ah28xr4wa().s[59]++;
        timeWindow = 24 * 60 * 60 * 1000;
        /* istanbul ignore next */
        cov_ah28xr4wa().s[60]++;
        break;
      case '7d':
        /* istanbul ignore next */
        cov_ah28xr4wa().b[12][3]++;
        cov_ah28xr4wa().s[61]++;
        timeWindow = 7 * 24 * 60 * 60 * 1000;
        /* istanbul ignore next */
        cov_ah28xr4wa().s[62]++;
        break;
    }
    const startTime =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[63]++, now - timeWindow);
    // Obtener mÃ©tricas del sistema de monitoring
    const analytics =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[64]++, new _performancemonitoring.APIAnalytics());
    const report =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[65]++, analytics.generateReport());
    // Filtrar mÃ©tricas por ventana de tiempo
    const filteredMetrics =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[66]++, metricsStore.filter(metric => {
      /* istanbul ignore next */
      cov_ah28xr4wa().f[11]++;
      cov_ah28xr4wa().s[67]++;
      return metric.timestamp >= startTime;
    }));
    // Calcular endpoints mÃ¡s lentos
    const endpointTimes =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[68]++, new Map());
    /* istanbul ignore next */
    cov_ah28xr4wa().s[69]++;
    filteredMetrics.forEach(metric => {
      /* istanbul ignore next */
      cov_ah28xr4wa().f[12]++;
      const path =
      /* istanbul ignore next */
      (cov_ah28xr4wa().s[70]++, metric.url);
      /* istanbul ignore next */
      cov_ah28xr4wa().s[71]++;
      if (!endpointTimes.has(path)) {
        /* istanbul ignore next */
        cov_ah28xr4wa().b[13][0]++;
        cov_ah28xr4wa().s[72]++;
        endpointTimes.set(path, []);
      } else
      /* istanbul ignore next */
      {
        cov_ah28xr4wa().b[13][1]++;
      }
      // Usar renderTime como tiempo de respuesta si estÃ¡ disponible
      const responseTime =
      /* istanbul ignore next */
      (cov_ah28xr4wa().s[73]++,
      /* istanbul ignore next */
      (cov_ah28xr4wa().b[14][0]++, metric.metrics.renderTime) ||
      /* istanbul ignore next */
      (cov_ah28xr4wa().b[14][1]++, metric.metrics.TTI) ||
      /* istanbul ignore next */
      (cov_ah28xr4wa().b[14][2]++, 0));
      /* istanbul ignore next */
      cov_ah28xr4wa().s[74]++;
      endpointTimes.get(path).push(responseTime);
    });
    const slowestEndpoints =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[75]++, Array.from(endpointTimes.entries()).map(([path, times]) => {
      /* istanbul ignore next */
      cov_ah28xr4wa().f[13]++;
      cov_ah28xr4wa().s[76]++;
      return {
        path,
        avgTime: times.reduce((a, b) => {
          /* istanbul ignore next */
          cov_ah28xr4wa().f[14]++;
          cov_ah28xr4wa().s[77]++;
          return a + b;
        }, 0) / times.length
      };
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_ah28xr4wa().f[15]++;
      cov_ah28xr4wa().s[78]++;
      return b.avgTime - a.avgTime;
    }).slice(0, 10));
    // Calcular errores por cÃ³digo de estado (simulado)
    const errorsByStatus =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[79]++, {
      404: Math.floor(Math.random() * 10),
      500: Math.floor(Math.random() * 5),
      503: Math.floor(Math.random() * 3)
    });
    // Incluir health check si se solicita
    let healthCheck =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[80]++, null);
    /* istanbul ignore next */
    cov_ah28xr4wa().s[81]++;
    if (includeHealth) {
      /* istanbul ignore next */
      cov_ah28xr4wa().b[15][0]++;
      cov_ah28xr4wa().s[82]++;
      healthCheck = await performHealthCheck();
    } else
    /* istanbul ignore next */
    {
      cov_ah28xr4wa().b[15][1]++;
    }
    // Preparar respuesta en el formato esperado por el componente
    const response =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[83]++, {
      timestamp: new Date().toISOString(),
      timeWindow,
      timeWindowHuman: formatTimeWindow(timeWindow),
      metrics: {
        totalRequests: filteredMetrics.length,
        averageResponseTime: report.averageResponseTime,
        errorRate: report.errorRate,
        slowestEndpoints,
        errorsByStatus
      },
      healthCheck,
      meta: {
        generatedAt: Date.now(),
        version: '1.0.0',
        environment:
        /* istanbul ignore next */
        (cov_ah28xr4wa().b[16][0]++, process.env.NODE_ENV) ||
        /* istanbul ignore next */
        (cov_ah28xr4wa().b[16][1]++, 'development')
      }
    });
    /* istanbul ignore next */
    cov_ah28xr4wa().s[84]++;
    return _server.NextResponse.json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_ah28xr4wa().s[85]++;
    console.error('Error fetching performance metrics:', error);
    /* istanbul ignore next */
    cov_ah28xr4wa().s[86]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_ah28xr4wa().f[16]++;
  cov_ah28xr4wa().s[87]++;
  try {
    // Verificar autenticaciÃ³n de admin (bypass para desarrollo)
    const isDevelopment =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[88]++, process.env.NODE_ENV === 'development');
    /* istanbul ignore next */
    cov_ah28xr4wa().s[89]++;
    if (!isDevelopment) {
      /* istanbul ignore next */
      cov_ah28xr4wa().b[17][0]++;
      const authHeader =
      /* istanbul ignore next */
      (cov_ah28xr4wa().s[90]++, request.headers.get('authorization'));
      /* istanbul ignore next */
      cov_ah28xr4wa().s[91]++;
      if (!authHeader) {
        /* istanbul ignore next */
        cov_ah28xr4wa().b[18][0]++;
        cov_ah28xr4wa().s[92]++;
        return _server.NextResponse.json({
          error: 'Unauthorized - Admin access required'
        }, {
          status: 401
        });
      } else
      /* istanbul ignore next */
      {
        cov_ah28xr4wa().b[18][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_ah28xr4wa().b[17][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[93]++, await request.json());
    const {
      metrics,
      url,
      userAgent,
      connection,
      timestamp,
      batchSize
    } =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[94]++, body);
    // Validar que las mÃ©tricas sean vÃ¡lidas
    /* istanbul ignore next */
    cov_ah28xr4wa().s[95]++;
    if (
    /* istanbul ignore next */
    (cov_ah28xr4wa().b[20][0]++, !metrics) ||
    /* istanbul ignore next */
    (cov_ah28xr4wa().b[20][1]++, !Array.isArray(metrics))) {
      /* istanbul ignore next */
      cov_ah28xr4wa().b[19][0]++;
      cov_ah28xr4wa().s[96]++;
      return _server.NextResponse.json({
        error: 'Invalid metrics data - expected array'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_ah28xr4wa().b[19][1]++;
    }
    // Validar URL
    cov_ah28xr4wa().s[97]++;
    if (
    /* istanbul ignore next */
    (cov_ah28xr4wa().b[22][0]++, !url) ||
    /* istanbul ignore next */
    (cov_ah28xr4wa().b[22][1]++, typeof url !== 'string')) {
      /* istanbul ignore next */
      cov_ah28xr4wa().b[21][0]++;
      cov_ah28xr4wa().s[98]++;
      return _server.NextResponse.json({
        error: 'Invalid URL'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_ah28xr4wa().b[21][1]++;
    }
    // Procesar cada mÃ©trica del batch
    const processedMetrics =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[99]++, []);
    /* istanbul ignore next */
    cov_ah28xr4wa().s[100]++;
    for (const metric of metrics) {
      /* istanbul ignore next */
      cov_ah28xr4wa().s[101]++;
      if (
      /* istanbul ignore next */
      (cov_ah28xr4wa().b[24][0]++, !metric) ||
      /* istanbul ignore next */
      (cov_ah28xr4wa().b[24][1]++, typeof metric !== 'object')) {
        /* istanbul ignore next */
        cov_ah28xr4wa().b[23][0]++;
        cov_ah28xr4wa().s[102]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_ah28xr4wa().b[23][1]++;
      }
      const newMetric =
      /* istanbul ignore next */
      (cov_ah28xr4wa().s[103]++, {
        timestamp:
        /* istanbul ignore next */
        (cov_ah28xr4wa().b[25][0]++, timestamp) ||
        /* istanbul ignore next */
        (cov_ah28xr4wa().b[25][1]++, Date.now()),
        url,
        metrics: metric,
        userAgent:
        /* istanbul ignore next */
        (cov_ah28xr4wa().b[26][0]++, userAgent) ||
        /* istanbul ignore next */
        (cov_ah28xr4wa().b[26][1]++, 'Unknown'),
        connection:
        /* istanbul ignore next */
        (cov_ah28xr4wa().b[27][0]++, connection) ||
        /* istanbul ignore next */
        (cov_ah28xr4wa().b[27][1]++, 'Unknown')
      });
      /* istanbul ignore next */
      cov_ah28xr4wa().s[104]++;
      processedMetrics.push(newMetric);
    }
    // Almacenar en memoria (limitado a 1000 mÃ©tricas)
    /* istanbul ignore next */
    cov_ah28xr4wa().s[105]++;
    metricsStore.push(...processedMetrics);
    /* istanbul ignore next */
    cov_ah28xr4wa().s[106]++;
    if (metricsStore.length > 1000) {
      /* istanbul ignore next */
      cov_ah28xr4wa().b[28][0]++;
      cov_ah28xr4wa().s[107]++;
      metricsStore.splice(0, metricsStore.length - 1000); // Mantener solo las Ãºltimas 1000
    } else
    /* istanbul ignore next */
    {
      cov_ah28xr4wa().b[28][1]++;
    }
    // Verificar violaciones de presupuesto para la Ãºltima mÃ©trica
    const violations =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[108]++, processedMetrics.length > 0 ?
    /* istanbul ignore next */
    (cov_ah28xr4wa().b[29][0]++, checkBudgetViolations(processedMetrics[processedMetrics.length - 1])) :
    /* istanbul ignore next */
    (cov_ah28xr4wa().b[29][1]++, []));
    /* istanbul ignore next */
    cov_ah28xr4wa().s[109]++;
    if (violations.length > 0) {
      /* istanbul ignore next */
      cov_ah28xr4wa().b[30][0]++;
      cov_ah28xr4wa().s[110]++;
      console.warn('Performance budget violations detected:', violations);
    } else
    /* istanbul ignore next */
    {
      cov_ah28xr4wa().b[30][1]++;
    }
    cov_ah28xr4wa().s[111]++;
    return _server.NextResponse.json({
      success: true,
      processedCount: processedMetrics.length,
      totalStored: metricsStore.length,
      violations
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_ah28xr4wa().s[112]++;
    console.error('Error processing performance metrics:', error);
    /* istanbul ignore next */
    cov_ah28xr4wa().s[113]++;
    return _server.NextResponse.json({
      error: 'Internal server error'
    }, {
      status: 500
    });
  }
}
function calculateAggregatedStats(metrics) {
  /* istanbul ignore next */
  cov_ah28xr4wa().f[17]++;
  cov_ah28xr4wa().s[114]++;
  if (metrics.length === 0) {
    /* istanbul ignore next */
    cov_ah28xr4wa().b[31][0]++;
    cov_ah28xr4wa().s[115]++;
    return {
      LCP: {
        avg: 0,
        p50: 0,
        p95: 0,
        p99: 0
      },
      FID: {
        avg: 0,
        p50: 0,
        p95: 0,
        p99: 0
      },
      CLS: {
        avg: 0,
        p50: 0,
        p95: 0,
        p99: 0
      },
      FCP: {
        avg: 0,
        p50: 0,
        p95: 0,
        p99: 0
      },
      renderTime: {
        avg: 0,
        p50: 0,
        p95: 0,
        p99: 0
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_ah28xr4wa().b[31][1]++;
  }
  cov_ah28xr4wa().s[116]++;
  const calculatePercentiles = values => {
    /* istanbul ignore next */
    cov_ah28xr4wa().f[18]++;
    const sorted =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[117]++, values.sort((a, b) => {
      /* istanbul ignore next */
      cov_ah28xr4wa().f[19]++;
      cov_ah28xr4wa().s[118]++;
      return a - b;
    }));
    const len =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[119]++, sorted.length);
    /* istanbul ignore next */
    cov_ah28xr4wa().s[120]++;
    return {
      avg: values.reduce((sum, val) => {
        /* istanbul ignore next */
        cov_ah28xr4wa().f[20]++;
        cov_ah28xr4wa().s[121]++;
        return sum + val;
      }, 0) / len,
      p50: sorted[Math.floor(len * 0.5)],
      p95: sorted[Math.floor(len * 0.95)],
      p99: sorted[Math.floor(len * 0.99)]
    };
  };
  const lcpValues =
  /* istanbul ignore next */
  (cov_ah28xr4wa().s[122]++, metrics.map(m => {
    /* istanbul ignore next */
    cov_ah28xr4wa().f[21]++;
    cov_ah28xr4wa().s[123]++;
    return m.metrics.LCP;
  }).filter(v => {
    /* istanbul ignore next */
    cov_ah28xr4wa().f[22]++;
    cov_ah28xr4wa().s[124]++;
    return v !== undefined;
  }));
  const fidValues =
  /* istanbul ignore next */
  (cov_ah28xr4wa().s[125]++, metrics.map(m => {
    /* istanbul ignore next */
    cov_ah28xr4wa().f[23]++;
    cov_ah28xr4wa().s[126]++;
    return m.metrics.FID;
  }).filter(v => {
    /* istanbul ignore next */
    cov_ah28xr4wa().f[24]++;
    cov_ah28xr4wa().s[127]++;
    return v !== undefined;
  }));
  const clsValues =
  /* istanbul ignore next */
  (cov_ah28xr4wa().s[128]++, metrics.map(m => {
    /* istanbul ignore next */
    cov_ah28xr4wa().f[25]++;
    cov_ah28xr4wa().s[129]++;
    return m.metrics.CLS;
  }).filter(v => {
    /* istanbul ignore next */
    cov_ah28xr4wa().f[26]++;
    cov_ah28xr4wa().s[130]++;
    return v !== undefined;
  }));
  const fcpValues =
  /* istanbul ignore next */
  (cov_ah28xr4wa().s[131]++, metrics.map(m => {
    /* istanbul ignore next */
    cov_ah28xr4wa().f[27]++;
    cov_ah28xr4wa().s[132]++;
    return m.metrics.FCP;
  }).filter(v => {
    /* istanbul ignore next */
    cov_ah28xr4wa().f[28]++;
    cov_ah28xr4wa().s[133]++;
    return v !== undefined;
  }));
  const renderValues =
  /* istanbul ignore next */
  (cov_ah28xr4wa().s[134]++, metrics.map(m => {
    /* istanbul ignore next */
    cov_ah28xr4wa().f[29]++;
    cov_ah28xr4wa().s[135]++;
    return m.metrics.renderTime;
  }).filter(v => {
    /* istanbul ignore next */
    cov_ah28xr4wa().f[30]++;
    cov_ah28xr4wa().s[136]++;
    return v !== undefined;
  }));
  /* istanbul ignore next */
  cov_ah28xr4wa().s[137]++;
  return {
    LCP: calculatePercentiles(lcpValues),
    FID: calculatePercentiles(fidValues),
    CLS: calculatePercentiles(clsValues),
    FCP: calculatePercentiles(fcpValues),
    renderTime: calculatePercentiles(renderValues)
  };
}
function checkBudgetViolations(metric) {
  /* istanbul ignore next */
  cov_ah28xr4wa().f[31]++;
  const violations =
  /* istanbul ignore next */
  (cov_ah28xr4wa().s[138]++, []);
  const budgets =
  /* istanbul ignore next */
  (cov_ah28xr4wa().s[139]++, {
    LCP: 2500,
    FID: 100,
    CLS: 0.1,
    FCP: 1800,
    TTI: 3800
  });
  /* istanbul ignore next */
  cov_ah28xr4wa().s[140]++;
  Object.entries(budgets).forEach(([key, budget]) => {
    /* istanbul ignore next */
    cov_ah28xr4wa().f[32]++;
    const value =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[141]++, metric.metrics[key]);
    /* istanbul ignore next */
    cov_ah28xr4wa().s[142]++;
    if (
    /* istanbul ignore next */
    (cov_ah28xr4wa().b[33][0]++, value !== undefined) &&
    /* istanbul ignore next */
    (cov_ah28xr4wa().b[33][1]++, value > budget)) {
      /* istanbul ignore next */
      cov_ah28xr4wa().b[32][0]++;
      cov_ah28xr4wa().s[143]++;
      violations.push(`${key}: ${value} exceeds budget of ${budget}`);
    } else
    /* istanbul ignore next */
    {
      cov_ah28xr4wa().b[32][1]++;
    }
  });
  /* istanbul ignore next */
  cov_ah28xr4wa().s[144]++;
  return violations;
}
async function DELETE(request) {
  /* istanbul ignore next */
  cov_ah28xr4wa().f[33]++;
  cov_ah28xr4wa().s[145]++;
  try {
    // VerificaciÃ³n bÃ¡sica de autenticaciÃ³n (simplificada para demo)
    const authHeader =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[146]++, request.headers.get('authorization'));
    /* istanbul ignore next */
    cov_ah28xr4wa().s[147]++;
    if (
    /* istanbul ignore next */
    (cov_ah28xr4wa().b[35][0]++, !authHeader) &&
    /* istanbul ignore next */
    (cov_ah28xr4wa().b[35][1]++, process.env.NODE_ENV === 'production')) {
      /* istanbul ignore next */
      cov_ah28xr4wa().b[34][0]++;
      cov_ah28xr4wa().s[148]++;
      return _server.NextResponse.json({
        error: 'Acceso no autorizado'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_ah28xr4wa().b[34][1]++;
    }
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[149]++, new URL(request.url));
    const olderThan =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[150]++,
    /* istanbul ignore next */
    (cov_ah28xr4wa().b[36][0]++, searchParams.get('olderThan')) ||
    /* istanbul ignore next */
    (cov_ah28xr4wa().b[36][1]++, '24h'));
    let cutoffTime =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[151]++, Date.now());
    /* istanbul ignore next */
    cov_ah28xr4wa().s[152]++;
    switch (olderThan) {
      case '1h':
        /* istanbul ignore next */
        cov_ah28xr4wa().b[37][0]++;
        cov_ah28xr4wa().s[153]++;
        cutoffTime -= 60 * 60 * 1000;
        /* istanbul ignore next */
        cov_ah28xr4wa().s[154]++;
        break;
      case '24h':
        /* istanbul ignore next */
        cov_ah28xr4wa().b[37][1]++;
        cov_ah28xr4wa().s[155]++;
        cutoffTime -= 24 * 60 * 60 * 1000;
        /* istanbul ignore next */
        cov_ah28xr4wa().s[156]++;
        break;
      case '7d':
        /* istanbul ignore next */
        cov_ah28xr4wa().b[37][2]++;
        cov_ah28xr4wa().s[157]++;
        cutoffTime -= 7 * 24 * 60 * 60 * 1000;
        /* istanbul ignore next */
        cov_ah28xr4wa().s[158]++;
        break;
    }
    const originalCount =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[159]++, metricsStore.length);
    /* istanbul ignore next */
    cov_ah28xr4wa().s[160]++;
    metricsStore = metricsStore.filter(metric => {
      /* istanbul ignore next */
      cov_ah28xr4wa().f[34]++;
      cov_ah28xr4wa().s[161]++;
      return metric.timestamp >= cutoffTime;
    });
    const deletedCount =
    /* istanbul ignore next */
    (cov_ah28xr4wa().s[162]++, originalCount - metricsStore.length);
    /* istanbul ignore next */
    cov_ah28xr4wa().s[163]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        deletedCount,
        remainingCount: metricsStore.length
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_ah28xr4wa().s[164]++;
    console.error('Error cleaning performance metrics:', error);
    /* istanbul ignore next */
    cov_ah28xr4wa().s[165]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,