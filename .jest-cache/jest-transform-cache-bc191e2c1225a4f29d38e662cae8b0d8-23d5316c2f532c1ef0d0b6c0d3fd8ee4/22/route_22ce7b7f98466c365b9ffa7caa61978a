bbade93d0287b6b930a39d15e689ae2d
// Configuración para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_2gixo77l71() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\orders\\route.ts";
  var hash = "07be611b3333ff7e6f774a36cf88f38d8121ce8a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\orders\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 24
        }
      },
      "8": {
        start: {
          line: 23,
          column: 19
        },
        end: {
          line: 66,
          column: 1
        }
      },
      "9": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 82,
          column: 5
        }
      },
      "10": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 75,
          column: 11
        }
      },
      "11": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 81,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 67,
            column: 15
          },
          end: {
            line: 67,
            column: 18
          }
        },
        loc: {
          start: {
            line: 67,
            column: 28
          },
          end: {
            line: 83,
            column: 1
          }
        },
        line: 67
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\orders\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\n\r\n// Datos simulados b\xE1sicos para \xF3rdenes\r\nconst mockOrders = [\r\n  {\r\n    id: 'ORD-1757119001-abc123',\r\n    status: 'confirmed',\r\n    createdAt: '2024-01-15T10:30:00Z',\r\n    customerInfo: {\r\n      firstName: 'Juan',\r\n      lastName: 'P\xE9rez',\r\n      email: 'juan.perez@email.com'\r\n    },\r\n    items: [\r\n      {\r\n        id: 'prod-001',\r\n        name: 'Pintura L\xE1tex Interior Blanco 20L',\r\n        price: 15000,\r\n        quantity: 2\r\n      }\r\n    ],\r\n    totals: {\r\n      total: 37500\r\n    }\r\n  },\r\n  {\r\n    id: 'ORD-1757119002-def456',\r\n    status: 'pending',\r\n    createdAt: '2024-01-15T14:20:00Z',\r\n    customerInfo: {\r\n      firstName: 'Mar\xEDa',\r\n      lastName: 'Gonz\xE1lez',\r\n      email: 'maria.gonzalez@email.com'\r\n    },\r\n    items: [\r\n      {\r\n        id: 'prod-003',\r\n        name: 'Esmalte Sint\xE9tico Azul 1L',\r\n        price: 8500,\r\n        quantity: 3\r\n      }\r\n    ],\r\n    totals: {\r\n      total: 25450\r\n    }\r\n  }\r\n];\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        orders: mockOrders,\r\n        total: mockOrders.length\r\n      }\r\n    });\r\n  } catch (error) {\r\n    return NextResponse.json(\r\n      { error: 'Internal server error' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "runtime", "mockOrders", "id", "status", "createdAt", "customerInfo", "firstName", "lastName", "email", "items", "name", "price", "quantity", "totals", "total", "request", "NextResponse", "json", "success", "data", "orders", "length", "error"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QAmDfA;eAAAA;;QAlDTC;eAAAA;;;wBAE6B;AAFnC,MAAMA,UAAU;AAIvB,uCAAuC;AACvC,MAAMC,aAAa;IACjB;QACEC,IAAI;QACJC,QAAQ;QACRC,WAAW;QACXC,cAAc;YACZC,WAAW;YACXC,UAAU;YACVC,OAAO;QACT;QACAC,OAAO;YACL;gBACEP,IAAI;gBACJQ,MAAM;gBACNC,OAAO;gBACPC,UAAU;YACZ;SACD;QACDC,QAAQ;YACNC,OAAO;QACT;IACF;IACA;QACEZ,IAAI;QACJC,QAAQ;QACRC,WAAW;QACXC,cAAc;YACZC,WAAW;YACXC,UAAU;YACVC,OAAO;QACT;QACAC,OAAO;YACL;gBACEP,IAAI;gBACJQ,MAAM;gBACNC,OAAO;gBACPC,UAAU;YACZ;SACD;QACDC,QAAQ;YACNC,OAAO;QACT;IACF;CACD;AAEM,eAAef,IAAIgB,OAAoB;IAC5C,IAAI;QACF,OAAOC,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTC,MAAM;gBACJC,QAAQnB;gBACRa,OAAOb,WAAWoB,MAAM;YAC1B;QACF;IACF,EAAE,OAAOC,OAAO;QACd,OAAON,oBAAY,CAACC,IAAI,CACtB;YAAEK,OAAO;QAAwB,GACjC;YAAEnB,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "07be611b3333ff7e6f774a36cf88f38d8121ce8a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2gixo77l71 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2gixo77l71();
cov_2gixo77l71().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2gixo77l71().f[0]++;
  cov_2gixo77l71().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2gixo77l71().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2gixo77l71().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_2gixo77l71().f[1]++;
    cov_2gixo77l71().s[4]++;
    return GET;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_2gixo77l71().f[2]++;
    cov_2gixo77l71().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_2gixo77l71().s[6]++, require("next/server"));
const runtime =
/* istanbul ignore next */
(cov_2gixo77l71().s[7]++, 'nodejs');
// Datos simulados básicos para órdenes
const mockOrders =
/* istanbul ignore next */
(cov_2gixo77l71().s[8]++, [{
  id: 'ORD-1757119001-abc123',
  status: 'confirmed',
  createdAt: '2024-01-15T10:30:00Z',
  customerInfo: {
    firstName: 'Juan',
    lastName: 'Pérez',
    email: 'juan.perez@email.com'
  },
  items: [{
    id: 'prod-001',
    name: 'Pintura Látex Interior Blanco 20L',
    price: 15000,
    quantity: 2
  }],
  totals: {
    total: 37500
  }
}, {
  id: 'ORD-1757119002-def456',
  status: 'pending',
  createdAt: '2024-01-15T14:20:00Z',
  customerInfo: {
    firstName: 'María',
    lastName: 'González',
    email: 'maria.gonzalez@email.com'
  },
  items: [{
    id: 'prod-003',
    name: 'Esmalte Sintético Azul 1L',
    price: 8500,
    quantity: 3
  }],
  totals: {
    total: 25450
  }
}]);
async function GET(request) {
  /* istanbul ignore next */
  cov_2gixo77l71().f[3]++;
  cov_2gixo77l71().s[9]++;
  try {
    /* istanbul ignore next */
    cov_2gixo77l71().s[10]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        orders: mockOrders,
        total: mockOrders.length
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2gixo77l71().s[11]++;
    return _server.NextResponse.json({
      error: 'Internal server error'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmdpeG83N2w3MSIsImFjdHVhbENvdmVyYWdlIiwicyIsIkdFVCIsImYiLCJydW50aW1lIiwibW9ja09yZGVycyIsImlkIiwic3RhdHVzIiwiY3JlYXRlZEF0IiwiY3VzdG9tZXJJbmZvIiwiZmlyc3ROYW1lIiwibGFzdE5hbWUiLCJlbWFpbCIsIml0ZW1zIiwibmFtZSIsInByaWNlIiwicXVhbnRpdHkiLCJ0b3RhbHMiLCJ0b3RhbCIsInJlcXVlc3QiLCJfc2VydmVyIiwiTmV4dFJlc3BvbnNlIiwianNvbiIsInN1Y2Nlc3MiLCJkYXRhIiwib3JkZXJzIiwibGVuZ3RoIiwiZXJyb3IiXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXG1hcnRpXFxEZXNrdG9wXFxERVNBUlJPTExPU1dcXEJPSUxFUlBMQVRURSBFLUNPTU1FUkNFXFxzcmNcXGFwcFxcYXBpXFxvcmRlcnNcXHJvdXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvbmZpZ3VyYWNpw7NuIHBhcmEgTm9kZS5qcyBSdW50aW1lXHJcbmV4cG9ydCBjb25zdCBydW50aW1lID0gJ25vZGVqcyc7XHJcblxyXG5pbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xyXG5cclxuLy8gRGF0b3Mgc2ltdWxhZG9zIGLDoXNpY29zIHBhcmEgw7NyZGVuZXNcclxuY29uc3QgbW9ja09yZGVycyA9IFtcclxuICB7XHJcbiAgICBpZDogJ09SRC0xNzU3MTE5MDAxLWFiYzEyMycsXHJcbiAgICBzdGF0dXM6ICdjb25maXJtZWQnLFxyXG4gICAgY3JlYXRlZEF0OiAnMjAyNC0wMS0xNVQxMDozMDowMFonLFxyXG4gICAgY3VzdG9tZXJJbmZvOiB7XHJcbiAgICAgIGZpcnN0TmFtZTogJ0p1YW4nLFxyXG4gICAgICBsYXN0TmFtZTogJ1DDqXJleicsXHJcbiAgICAgIGVtYWlsOiAnanVhbi5wZXJlekBlbWFpbC5jb20nXHJcbiAgICB9LFxyXG4gICAgaXRlbXM6IFtcclxuICAgICAge1xyXG4gICAgICAgIGlkOiAncHJvZC0wMDEnLFxyXG4gICAgICAgIG5hbWU6ICdQaW50dXJhIEzDoXRleCBJbnRlcmlvciBCbGFuY28gMjBMJyxcclxuICAgICAgICBwcmljZTogMTUwMDAsXHJcbiAgICAgICAgcXVhbnRpdHk6IDJcclxuICAgICAgfVxyXG4gICAgXSxcclxuICAgIHRvdGFsczoge1xyXG4gICAgICB0b3RhbDogMzc1MDBcclxuICAgIH1cclxuICB9LFxyXG4gIHtcclxuICAgIGlkOiAnT1JELTE3NTcxMTkwMDItZGVmNDU2JyxcclxuICAgIHN0YXR1czogJ3BlbmRpbmcnLFxyXG4gICAgY3JlYXRlZEF0OiAnMjAyNC0wMS0xNVQxNDoyMDowMFonLFxyXG4gICAgY3VzdG9tZXJJbmZvOiB7XHJcbiAgICAgIGZpcnN0TmFtZTogJ01hcsOtYScsXHJcbiAgICAgIGxhc3ROYW1lOiAnR29uesOhbGV6JyxcclxuICAgICAgZW1haWw6ICdtYXJpYS5nb256YWxlekBlbWFpbC5jb20nXHJcbiAgICB9LFxyXG4gICAgaXRlbXM6IFtcclxuICAgICAge1xyXG4gICAgICAgIGlkOiAncHJvZC0wMDMnLFxyXG4gICAgICAgIG5hbWU6ICdFc21hbHRlIFNpbnTDqXRpY28gQXp1bCAxTCcsXHJcbiAgICAgICAgcHJpY2U6IDg1MDAsXHJcbiAgICAgICAgcXVhbnRpdHk6IDNcclxuICAgICAgfVxyXG4gICAgXSxcclxuICAgIHRvdGFsczoge1xyXG4gICAgICB0b3RhbDogMjU0NTBcclxuICAgIH1cclxuICB9XHJcbl07XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XHJcbiAgdHJ5IHtcclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XHJcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgIGRhdGE6IHtcclxuICAgICAgICBvcmRlcnM6IG1vY2tPcmRlcnMsXHJcbiAgICAgICAgdG90YWw6IG1vY2tPcmRlcnMubGVuZ3RoXHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgIHsgZXJyb3I6ICdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InIH0sXHJcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBQ2E7SUFBQUEsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsY0FBQTtBQUFBQSxjQUFBLEdBQUFFLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O01Ba0RTQyxJQUFBO0lBQUE7SUFBQUgsY0FBQSxHQUFBSSxDQUFBO0lBQUFKLGNBQUEsR0FBQUUsQ0FBQTtXQUFBQyxHQUFBOztNQWxEVEUsUUFBQTtJQUFBO0lBQUFMLGNBQUEsR0FBQUksQ0FBQTtJQUFBSixjQUFBLEdBQUFFLENBQUE7V0FBQUcsT0FBQTs7Ozs7a0NBRTZCO0FBRm5DLE1BQU1BLE9BQUE7QUFBQTtBQUFBLENBQUFMLGNBQUEsR0FBQUUsQ0FBQSxPQUFVO0FBSXZCO0FBQ0EsTUFBTUksVUFBQTtBQUFBO0FBQUEsQ0FBQU4sY0FBQSxHQUFBRSxDQUFBLE9BQWEsQ0FDakI7RUFDRUssRUFBQSxFQUFJO0VBQ0pDLE1BQUEsRUFBUTtFQUNSQyxTQUFBLEVBQVc7RUFDWEMsWUFBQSxFQUFjO0lBQ1pDLFNBQUEsRUFBVztJQUNYQyxRQUFBLEVBQVU7SUFDVkMsS0FBQSxFQUFPO0VBQ1Q7RUFDQUMsS0FBQSxFQUFPLENBQ0w7SUFDRVAsRUFBQSxFQUFJO0lBQ0pRLElBQUEsRUFBTTtJQUNOQyxLQUFBLEVBQU87SUFDUEMsUUFBQSxFQUFVO0VBQ1osRUFDRDtFQUNEQyxNQUFBLEVBQVE7SUFDTkMsS0FBQSxFQUFPO0VBQ1Q7QUFDRixHQUNBO0VBQ0VaLEVBQUEsRUFBSTtFQUNKQyxNQUFBLEVBQVE7RUFDUkMsU0FBQSxFQUFXO0VBQ1hDLFlBQUEsRUFBYztJQUNaQyxTQUFBLEVBQVc7SUFDWEMsUUFBQSxFQUFVO0lBQ1ZDLEtBQUEsRUFBTztFQUNUO0VBQ0FDLEtBQUEsRUFBTyxDQUNMO0lBQ0VQLEVBQUEsRUFBSTtJQUNKUSxJQUFBLEVBQU07SUFDTkMsS0FBQSxFQUFPO0lBQ1BDLFFBQUEsRUFBVTtFQUNaLEVBQ0Q7RUFDREMsTUFBQSxFQUFRO0lBQ05DLEtBQUEsRUFBTztFQUNUO0FBQ0YsRUFDRDtBQUVNLGVBQWVoQixJQUFJaUIsT0FBb0I7RUFBQTtFQUFBcEIsY0FBQSxHQUFBSSxDQUFBO0VBQUFKLGNBQUEsR0FBQUUsQ0FBQTtFQUM1QyxJQUFJO0lBQUE7SUFBQUYsY0FBQSxHQUFBRSxDQUFBO0lBQ0YsT0FBT21CLE9BQUEsQ0FBQUMsWUFBWSxDQUFDQyxJQUFJLENBQUM7TUFDdkJDLE9BQUEsRUFBUztNQUNUQyxJQUFBLEVBQU07UUFDSkMsTUFBQSxFQUFRcEIsVUFBQTtRQUNSYSxLQUFBLEVBQU9iLFVBQUEsQ0FBV3FCO01BQ3BCO0lBQ0Y7RUFDRixFQUFFLE9BQU9DLEtBQUEsRUFBTztJQUFBO0lBQUE1QixjQUFBLEdBQUFFLENBQUE7SUFDZCxPQUFPbUIsT0FBQSxDQUFBQyxZQUFZLENBQUNDLElBQUksQ0FDdEI7TUFBRUssS0FBQSxFQUFPO0lBQXdCLEdBQ2pDO01BQUVwQixNQUFBLEVBQVE7SUFBSTtFQUVsQjtBQUNGIiwiaWdub3JlTGlzdCI6W119