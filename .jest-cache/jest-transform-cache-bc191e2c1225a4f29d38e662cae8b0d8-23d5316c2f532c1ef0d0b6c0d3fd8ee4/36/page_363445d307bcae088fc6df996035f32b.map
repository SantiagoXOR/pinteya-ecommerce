{"version":3,"names":["OrdersPage","cov_1bacgyjda2","f","notifications","s","_useOrderNotifications","useOrderNotifications","isNewOrderModalOpen","setIsNewOrderModalOpen","_react","useState","isExportModalOpen","setIsExportModalOpen","isDetailsModalOpen","setIsDetailsModalOpen","isEditModalOpen","setIsEditModalOpen","selectedOrderId","setSelectedOrderId","refreshKey","setRefreshKey","breadcrumbs","label","href","handleNewOrder","handleExport","handleRefresh","prev","showProcessingInfo","handleOrderCreated","order","handleViewOrder","orderId","handleEditOrder","handleOrderUpdated","actions","_jsxruntime","jsxs","className","_button","Button","onClick","variant","size","jsx","_lucidereact","RefreshCw","Download","Plus","Fragment","_AdminLayout","AdminLayout","title","_OrderListSimple","OrderListSimple","onViewOrder","onEditOrder","_NewOrderModal","NewOrderModal","isOpen","onClose","onOrderCreated","_ExportOrdersModal","ExportOrdersModal","totalOrders","_OrderDetailsModal","OrderDetailsModal","_EditOrderModal","EditOrderModal","onOrderUpdated"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\admin\\orders\\page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport { AdminLayout } from '@/components/admin/layout/AdminLayout';\r\nimport { OrderListSimple } from '@/components/admin/orders/OrderListSimple';\r\nimport { NewOrderModal } from '@/components/admin/orders/NewOrderModal';\r\nimport { ExportOrdersModal } from '@/components/admin/orders/ExportOrdersModal';\r\nimport { OrderDetailsModal } from '@/components/admin/orders/OrderDetailsModal';\r\nimport { EditOrderModal } from '@/components/admin/orders/EditOrderModal';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Plus, Download, RefreshCw } from 'lucide-react';\r\nimport { useOrderNotifications } from '@/hooks/admin/useOrderNotifications';\r\n\r\nexport default function OrdersPage() {\r\n  const notifications = useOrderNotifications();\r\n\r\n  // Estados de modales\r\n  const [isNewOrderModalOpen, setIsNewOrderModalOpen] = useState(false);\r\n  const [isExportModalOpen, setIsExportModalOpen] = useState(false);\r\n  const [isDetailsModalOpen, setIsDetailsModalOpen] = useState(false);\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [selectedOrderId, setSelectedOrderId] = useState<number | null>(null);\r\n\r\n  // Estado para refrescar la lista\r\n  const [refreshKey, setRefreshKey] = useState(0);\r\n\r\n  const breadcrumbs = [\r\n    { label: 'Admin', href: '/admin' },\r\n    { label: 'Órdenes' }\r\n  ];\r\n\r\n  // Funciones de manejo de modales\r\n  const handleNewOrder = () => {\r\n    setIsNewOrderModalOpen(true);\r\n  };\r\n\r\n  const handleExport = () => {\r\n    setIsExportModalOpen(true);\r\n  };\r\n\r\n  const handleRefresh = () => {\r\n    setRefreshKey(prev => prev + 1);\r\n    notifications.showProcessingInfo('Actualizando lista de órdenes');\r\n  };\r\n\r\n  const handleOrderCreated = (order: any) => {\r\n    setRefreshKey(prev => prev + 1);\r\n    // El modal ya muestra la notificación de éxito\r\n  };\r\n\r\n  const handleViewOrder = (orderId: number) => {\r\n    setSelectedOrderId(orderId);\r\n    setIsDetailsModalOpen(true);\r\n  };\r\n\r\n  const handleEditOrder = (orderId: number) => {\r\n    setSelectedOrderId(orderId);\r\n    setIsEditModalOpen(true);\r\n  };\r\n\r\n  const handleOrderUpdated = (order: any) => {\r\n    setRefreshKey(prev => prev + 1);\r\n    // El modal ya muestra la notificación de éxito\r\n  };\r\n\r\n  const actions = (\r\n    <div className=\"flex items-center gap-3\">\r\n      <Button\r\n        onClick={handleRefresh}\r\n        variant=\"outline\"\r\n        size=\"sm\"\r\n        className=\"flex items-center gap-2\"\r\n      >\r\n        <RefreshCw className=\"h-4 w-4\" />\r\n        Actualizar\r\n      </Button>\r\n      <Button\r\n        onClick={handleExport}\r\n        variant=\"outline\"\r\n        size=\"sm\"\r\n        className=\"flex items-center gap-2\"\r\n      >\r\n        <Download className=\"h-4 w-4\" />\r\n        Exportar\r\n      </Button>\r\n      <Button\r\n        onClick={handleNewOrder}\r\n        size=\"sm\"\r\n        className=\"flex items-center gap-2 bg-blaze-orange-600 hover:bg-blaze-orange-700\"\r\n      >\r\n        <Plus className=\"h-4 w-4\" />\r\n        Nueva Orden\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <AdminLayout\r\n        title=\"Gestión de Órdenes\"\r\n        breadcrumbs={breadcrumbs}\r\n        actions={actions}\r\n      >\r\n        <div className=\"space-y-6\">\r\n          {/* Orders List - Componente simplificado completamente funcional */}\r\n          <OrderListSimple\r\n            key={refreshKey}\r\n            onViewOrder={handleViewOrder}\r\n            onEditOrder={handleEditOrder}\r\n          />\r\n        </div>\r\n      </AdminLayout>\r\n\r\n      {/* Modales */}\r\n      <NewOrderModal\r\n        isOpen={isNewOrderModalOpen}\r\n        onClose={() => setIsNewOrderModalOpen(false)}\r\n        onOrderCreated={handleOrderCreated}\r\n      />\r\n\r\n      <ExportOrdersModal\r\n        isOpen={isExportModalOpen}\r\n        onClose={() => setIsExportModalOpen(false)}\r\n        totalOrders={72} // Este valor debería venir del estado real\r\n      />\r\n\r\n      <OrderDetailsModal\r\n        isOpen={isDetailsModalOpen}\r\n        onClose={() => setIsDetailsModalOpen(false)}\r\n        orderId={selectedOrderId}\r\n      />\r\n\r\n      <EditOrderModal\r\n        isOpen={isEditModalOpen}\r\n        onClose={() => setIsEditModalOpen(false)}\r\n        orderId={selectedOrderId}\r\n        onOrderUpdated={handleOrderUpdated}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}