{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\utils\\helpers.ts"],"sourcesContent":["// ===================================\n// PINTEYA E-COMMERCE - UTILITY HELPERS\n// ===================================\n\n/**\n * Formats a price in Argentine peso format\n */\nexport function formatPrice(price: number | null | undefined): string {\n  if (price === null || price === undefined || isNaN(price)) {\n    return '$0'\n  }\n\n  const roundedPrice = Math.round(price)\n  // Simple format without spaces for consistency\n  const formatted = roundedPrice.toLocaleString('es-AR')\n  return `$${formatted}`\n}\n\n/**\n * Calculates discount percentage\n */\nexport function calculateDiscount(\n  originalPrice: number | null,\n  discountedPrice: number | null\n): number {\n  // Handle null/undefined cases\n  if (originalPrice === null || originalPrice === undefined || originalPrice <= 0) {\n    return 0\n  }\n\n  if (discountedPrice === null || discountedPrice === undefined) {\n    return 0\n  }\n\n  if (discountedPrice >= originalPrice) {\n    return 0\n  }\n\n  // Special case: if discounted price is 0, it's 100% discount\n  if (discountedPrice === 0 && originalPrice > 0) {\n    return 100\n  }\n\n  const discount = ((originalPrice - discountedPrice) / originalPrice) * 100\n  return Math.round(discount)\n}\n\n/**\n * Validates email format\n */\nexport function validateEmail(email: string | null | undefined): boolean {\n  if (!email || typeof email !== 'string') {\n    return false\n  }\n\n  // More strict email validation\n  const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9][a-zA-Z0-9.-]*[a-zA-Z0-9]\\.[a-zA-Z]{2,}$/\n\n  // Additional checks\n  if (email.includes('..') || email.startsWith('.') || email.endsWith('.')) {\n    return false\n  }\n\n  if (email.includes('@.') || email.includes('.@')) {\n    return false\n  }\n\n  return emailRegex.test(email)\n}\n\n/**\n * Generates a URL-friendly slug from a string\n */\nexport function generateSlug(text: string | null | undefined): string {\n  if (!text) {\n    return ''\n  }\n\n  return String(text)\n    .toLowerCase()\n    .trim()\n    .replace(/[áàäâ]/g, 'a')\n    .replace(/[éèëê]/g, 'e')\n    .replace(/[íìïî]/g, 'i')\n    .replace(/[óòöô]/g, 'o')\n    .replace(/[úùüû]/g, 'u')\n    .replace(/ñ/g, 'n')\n    .replace(/[^a-z0-9\\s-]/g, '')\n    .replace(/\\s+/g, '-')\n    .replace(/-+/g, '-')\n    .replace(/^-|-$/g, '')\n}\n\n/**\n * Formats phone number for display\n */\nexport function formatPhoneNumber(phone: string): string {\n  if (!phone) {\n    return ''\n  }\n\n  // If already formatted, return as is\n  if (phone.includes('(') && phone.includes(')') && phone.includes('-')) {\n    return phone\n  }\n\n  // Remove all non-numeric characters\n  const cleaned = phone.replace(/\\D/g, '')\n\n  // Format based on length\n  if (cleaned.length === 10) {\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6)}`\n  }\n\n  if (cleaned.length === 11) {\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 7)}-${cleaned.slice(7)}`\n  }\n\n  // Return original if doesn't match expected format\n  return phone\n}\n\n/**\n * Calculates shipping cost based on weight, location, and order total\n */\nexport function calculateShipping(\n  weight: number,\n  location: string,\n  orderTotal: number = 0,\n  express: boolean = false\n): number {\n  // Free shipping threshold\n  const freeShippingThreshold = 15000\n\n  if (orderTotal >= freeShippingThreshold) {\n    return 0\n  }\n\n  // Base rates by location\n  const locationRates: { [key: string]: number } = {\n    CABA: 500,\n    'Buenos Aires': 800,\n    Córdoba: 1200,\n    'Santa Fe': 1100,\n    Mendoza: 1400,\n  }\n\n  const baseRate = locationRates[location] || 1500\n\n  // Weight multiplier (every 5kg adds 50% to base rate)\n  const weightMultiplier = 1 + Math.floor(weight / 5) * 0.5\n\n  // Express shipping doubles the cost\n  const expressMultiplier = express ? 2 : 1\n\n  return Math.round(baseRate * weightMultiplier * expressMultiplier)\n}\n\n/**\n * Validates cart item structure\n */\nexport function validateCartItem(item: unknown): boolean {\n  if (!item || typeof item !== 'object') {\n    return false\n  }\n\n  const cartItem = item as Record<string, unknown>\n\n  // Required fields\n  if (!cartItem.id || !cartItem.name || !cartItem.price || !cartItem.quantity) {\n    return false\n  }\n\n  // Validate types\n  if (typeof cartItem.price !== 'number' || cartItem.price <= 0) {\n    return false\n  }\n\n  if (typeof cartItem.quantity !== 'number' || cartItem.quantity <= 0) {\n    return false\n  }\n\n  // Validate stock if provided\n  if (\n    cartItem.stock !== undefined &&\n    typeof cartItem.stock === 'number' &&\n    cartItem.quantity > cartItem.stock\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Sanitizes user input to prevent XSS\n */\nexport function sanitizeInput(input: string | null | undefined): string {\n  if (!input) {\n    return ''\n  }\n\n  return String(input)\n    .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '')\n    .replace(/<[^>]*>/g, '')\n    .trim()\n}\n\n/**\n * Debounce function for search inputs\n */\nexport function debounce<T extends (...args: unknown[]) => unknown>(\n  func: T,\n  wait: number\n): (...args: Parameters<T>) => void {\n  let timeout: NodeJS.Timeout\n\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeout)\n    timeout = setTimeout(() => func(...args), wait)\n  }\n}\n\n/**\n * Formats date for display\n */\nexport function formatDate(date: string | Date): string {\n  const dateObj = typeof date === 'string' ? new Date(date) : date\n\n  return new Intl.DateTimeFormat('es-AR', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  }).format(dateObj)\n}\n\n/**\n * Calculates estimated delivery date\n */\nexport function calculateDeliveryDate(location: string, express: boolean = false): Date {\n  const now = new Date()\n  let daysToAdd = 3 // Default delivery time\n\n  // Location-based delivery times\n  const deliveryTimes: { [key: string]: number } = {\n    CABA: 1,\n    'Buenos Aires': 2,\n    Córdoba: 4,\n    'Santa Fe': 3,\n    Mendoza: 5,\n  }\n\n  daysToAdd = deliveryTimes[location] || 7\n\n  // Express shipping halves delivery time (minimum 1 day)\n  if (express) {\n    daysToAdd = Math.max(1, Math.floor(daysToAdd / 2))\n  }\n\n  const deliveryDate = new Date(now)\n  deliveryDate.setDate(now.getDate() + daysToAdd)\n\n  return deliveryDate\n}\n\n/**\n * Validates Argentine DNI format\n */\nexport function validateDNI(dni: string): boolean {\n  if (!dni) {\n    return false\n  }\n\n  // Remove dots and spaces\n  const cleaned = dni.replace(/[.\\s]/g, '')\n\n  // Check if it's 7-8 digits\n  return /^\\d{7,8}$/.test(cleaned)\n}\n\n/**\n * Formats DNI for display\n */\nexport function formatDNI(dni: string): string {\n  if (!dni) {\n    return ''\n  }\n\n  const cleaned = dni.replace(/[.\\s]/g, '')\n\n  if (cleaned.length === 8) {\n    return `${cleaned.slice(0, 2)}.${cleaned.slice(2, 5)}.${cleaned.slice(5)}`\n  }\n\n  if (cleaned.length === 7) {\n    return `${cleaned.slice(0, 1)}.${cleaned.slice(1, 4)}.${cleaned.slice(4)}`\n  }\n\n  return dni\n}\n\n/**\n * Generates a random order reference\n */\nexport function generateOrderReference(): string {\n  const timestamp = Date.now()\n  const random = Math.random().toString(36).substring(2, 8)\n  return `PINTEYA-${timestamp}-${random.toUpperCase()}`\n}\n\n/**\n * Checks if a string contains only numbers\n */\nexport function isNumeric(str: string): boolean {\n  return /^\\d+$/.test(str)\n}\n\n/**\n * Capitalizes first letter of each word\n */\nexport function capitalizeWords(str: string): string {\n  return str.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase())\n}\n"],"names":["calculateDeliveryDate","calculateDiscount","calculateShipping","capitalizeWords","debounce","formatDNI","formatDate","formatPhoneNumber","formatPrice","generateOrderReference","generateSlug","isNumeric","sanitizeInput","validateCartItem","validateDNI","validateEmail","price","undefined","isNaN","roundedPrice","Math","round","formatted","toLocaleString","originalPrice","discountedPrice","discount","email","emailRegex","includes","startsWith","endsWith","test","text","String","toLowerCase","trim","replace","phone","cleaned","length","slice","weight","location","orderTotal","express","freeShippingThreshold","locationRates","CABA","Córdoba","Mendoza","baseRate","weightMultiplier","floor","expressMultiplier","item","cartItem","id","name","quantity","stock","input","func","wait","timeout","args","clearTimeout","setTimeout","date","dateObj","Date","Intl","DateTimeFormat","year","month","day","format","now","daysToAdd","deliveryTimes","max","deliveryDate","setDate","getDate","dni","timestamp","random","toString","substring","toUpperCase","str","txt","charAt","substr"],"mappings":"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"}