{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\checkout\\validate\\route.ts"],"sourcesContent":["// Configuración para Node.js Runtime\nexport const runtime = 'nodejs'\n\nimport { NextRequest, NextResponse } from 'next/server'\nimport { z } from 'zod'\n\n// ===================================\n// MEJORAS DE SEGURIDAD - ALTA PRIORIDAD\n// ===================================\nimport { withRateLimit, RATE_LIMIT_CONFIGS } from '@/lib/rate-limiting/rate-limiter'\nimport { API_TIMEOUTS, withDatabaseTimeout, getEndpointTimeouts } from '@/lib/config/api-timeouts'\nimport { createSecurityLogger } from '@/lib/logging/security-logger'\n\n// Schema de validación para checkout\nconst checkoutValidationSchema = z.object({\n  customerInfo: z.object({\n    firstName: z.string().min(1, 'Nombre es requerido'),\n    lastName: z.string().min(1, 'Apellido es requerido'),\n    email: z.string().email('Email inválido'),\n    phone: z.string().min(8, 'Teléfono debe tener al menos 8 dígitos'),\n  }),\n  shippingAddress: z.object({\n    streetAddress: z.string().min(5, 'Dirección debe tener al menos 5 caracteres'),\n    apartment: z.string().optional(),\n    city: z.string().min(2, 'Ciudad es requerida'),\n    state: z.string().min(2, 'Provincia es requerida'),\n    zipCode: z.string().min(4, 'Código postal inválido'),\n    country: z.string().default('Argentina'),\n    observations: z.string().optional(),\n  }),\n  items: z\n    .array(\n      z.object({\n        id: z.string(),\n        name: z.string(),\n        price: z.number().positive('Precio debe ser positivo'),\n        quantity: z.number().int().positive('Cantidad debe ser positiva'),\n        stock: z.number().int().nonnegative().optional(),\n      })\n    )\n    .min(1, 'Debe haber al menos un producto'),\n  paymentMethod: z.enum(['mercadopago', 'bank', 'cash']),\n  shippingMethod: z.enum(['free', 'express', 'pickup']),\n  totals: z.object({\n    subtotal: z.number().nonnegative(),\n    shipping: z.number().nonnegative(),\n    discount: z.number().nonnegative().default(0),\n    total: z.number().positive('Total debe ser mayor a 0'),\n  }),\n})\n\nexport async function POST(request: NextRequest) {\n  // Crear logger de seguridad con contexto\n  const securityLogger = createSecurityLogger(request)\n\n  // Aplicar rate limiting para APIs de checkout\n  const rateLimitResult = await withRateLimit(request, RATE_LIMIT_CONFIGS.checkout, async () => {\n    // Log de acceso a la API\n    securityLogger.log({\n      type: 'api_access',\n      endpoint: '/api/checkout/validate',\n      method: 'POST',\n      userAgent: request.headers.get('user-agent'),\n      timestamp: new Date().toISOString(),\n    })\n\n    try {\n      const body = await request.json()\n\n      // Validar estructura básica\n      const validatedData = checkoutValidationSchema.parse(body)\n\n      const validationResults = {\n        isValid: true,\n        errors: [] as string[],\n        warnings: [] as string[],\n        suggestions: [] as string[],\n      }\n\n      // Validaciones adicionales de negocio\n\n      // 1. Validar stock de productos (simulado)\n      for (const item of validatedData.items) {\n        const simulatedStock = Math.floor(Math.random() * 100) + 10 // Stock simulado\n        if (item.quantity > simulatedStock) {\n          validationResults.errors.push(\n            `Producto \"${item.name}\": Stock insuficiente (disponible: ${simulatedStock}, solicitado: ${item.quantity})`\n          )\n          validationResults.isValid = false\n        }\n      }\n\n      // 2. Validar totales\n      const calculatedSubtotal = validatedData.items.reduce(\n        (sum, item) => sum + item.price * item.quantity,\n        0\n      )\n\n      if (Math.abs(calculatedSubtotal - validatedData.totals.subtotal) > 0.01) {\n        validationResults.errors.push(\n          `Subtotal incorrecto. Calculado: $${calculatedSubtotal}, Recibido: $${validatedData.totals.subtotal}`\n        )\n        validationResults.isValid = false\n      }\n\n      // 3. Validar costo de envío\n      const expectedShipping = calculateShippingCost(\n        validatedData.shippingMethod,\n        validatedData.totals.subtotal,\n        validatedData.shippingAddress.state\n      )\n\n      if (Math.abs(expectedShipping - validatedData.totals.shipping) > 0.01) {\n        validationResults.errors.push(\n          `Costo de envío incorrecto. Esperado: $${expectedShipping}, Recibido: $${validatedData.totals.shipping}`\n        )\n        validationResults.isValid = false\n      }\n\n      // 4. Validar total final\n      const expectedTotal = calculatedSubtotal + expectedShipping - validatedData.totals.discount\n      if (Math.abs(expectedTotal - validatedData.totals.total) > 0.01) {\n        validationResults.errors.push(\n          `Total incorrecto. Esperado: $${expectedTotal}, Recibido: $${validatedData.totals.total}`\n        )\n        validationResults.isValid = false\n      }\n\n      // 5. Validaciones de dirección\n      if (\n        validatedData.shippingAddress.state === 'CABA' &&\n        !validatedData.shippingAddress.zipCode.startsWith('C')\n      ) {\n        validationResults.warnings.push('El código postal no parece corresponder a CABA')\n      }\n\n      // 6. Sugerencias basadas en observaciones\n      if (validatedData.shippingAddress.observations) {\n        const obs = validatedData.shippingAddress.observations.toLowerCase()\n        if (obs.includes('barrio') || obs.includes('zona')) {\n          validationResults.suggestions.push(\n            'Excelente! Las observaciones sobre el barrio ayudarán al delivery'\n          )\n        }\n        if (obs.includes('horario') || obs.includes('hora')) {\n          validationResults.suggestions.push(\n            'Perfecto! Los horarios especificados facilitarán la entrega'\n          )\n        }\n      } else {\n        validationResults.suggestions.push(\n          'Considera agregar observaciones sobre el barrio o horarios preferidos para mejorar la entrega'\n        )\n      }\n\n      // 7. Validar método de pago\n      if (validatedData.paymentMethod === 'bank' && validatedData.totals.total < 10000) {\n        validationResults.warnings.push(\n          'Para montos menores a $10.000, recomendamos MercadoPago para mayor comodidad'\n        )\n      }\n\n      // Log de validación\n      console.log('✅ Validación de checkout:', {\n        customer: `${validatedData.customerInfo.firstName} ${validatedData.customerInfo.lastName}`,\n        items: validatedData.items.length,\n        total: validatedData.totals.total,\n        isValid: validationResults.isValid,\n        errors: validationResults.errors.length,\n        warnings: validationResults.warnings.length,\n        observations: validatedData.shippingAddress.observations ? 'Sí' : 'No',\n      })\n\n      const response = {\n        success: true,\n        data: {\n          validation: validationResults,\n          estimatedDelivery: calculateEstimatedDelivery(validatedData.shippingMethod),\n          recommendedActions: generateRecommendations(validatedData, validationResults),\n        },\n        message: validationResults.isValid ? 'Checkout válido' : 'Checkout con errores',\n      }\n\n      // Log de validación exitosa\n      securityLogger.log({\n        type: 'checkout_validation',\n        isValid: validationResults.isValid,\n        errorsCount: validationResults.errors.length,\n        warningsCount: validationResults.warnings.length,\n        total: validatedData.totals.total,\n        paymentMethod: validatedData.paymentMethod,\n      })\n\n      return NextResponse.json(response, {\n        status: validationResults.isValid ? 200 : 400,\n      })\n    } catch (error) {\n      console.error('❌ Error validando checkout:', error)\n\n      // Log de error de seguridad\n      securityLogger.logApiError(\n        error instanceof Error ? error.message : 'Unknown error',\n        '/api/checkout/validate'\n      )\n\n      if (error instanceof z.ZodError) {\n        return NextResponse.json(\n          {\n            success: false,\n            error: 'Datos de entrada inválidos',\n            details: error.errors.map(err => ({\n              field: err.path.join('.'),\n              message: err.message,\n            })),\n          },\n          { status: 400 }\n        )\n      }\n\n      return NextResponse.json(\n        {\n          success: false,\n          error: 'Error interno del servidor',\n        },\n        { status: 500 }\n      )\n    }\n  })\n\n  // Manejar rate limit excedido\n  if (rateLimitResult instanceof NextResponse) {\n    securityLogger.logRateLimitExceeded(securityLogger.context, {\n      endpoint: '/api/checkout/validate',\n      method: 'POST',\n    })\n    return rateLimitResult\n  }\n\n  return rateLimitResult\n}\n\n// Función auxiliar para calcular costo de envío\nfunction calculateShippingCost(method: string, subtotal: number, state: string): number {\n  if (method === 'pickup') {\n    return 0\n  }\n  if (method === 'free' && subtotal >= 25000) {\n    return 0\n  }\n\n  const baseCost = method === 'express' ? 5000 : 2500\n\n  // Costo adicional por provincia\n  const stateSurcharge = state === 'CABA' ? 0 : 500\n\n  return baseCost + stateSurcharge\n}\n\n// Función auxiliar para calcular fecha estimada de entrega\nfunction calculateEstimatedDelivery(shippingMethod: string): string {\n  const now = new Date()\n  let daysToAdd = 7\n\n  switch (shippingMethod) {\n    case 'express':\n      daysToAdd = 2\n      break\n    case 'free':\n      daysToAdd = 7\n      break\n    case 'pickup':\n      daysToAdd = 1\n      break\n  }\n\n  const estimatedDate = new Date(now.getTime() + daysToAdd * 24 * 60 * 60 * 1000)\n  return estimatedDate.toISOString().split('T')[0] // Solo fecha\n}\n\n// Función auxiliar para generar recomendaciones\nfunction generateRecommendations(data: any, validation: any): string[] {\n  const recommendations = []\n\n  if (!validation.isValid) {\n    recommendations.push('Corrige los errores antes de continuar')\n  }\n\n  if (data.totals.total > 50000) {\n    recommendations.push('Considera dividir la compra en múltiples órdenes para mayor seguridad')\n  }\n\n  if (data.paymentMethod === 'cash' && data.totals.total > 30000) {\n    recommendations.push('Para montos altos, recomendamos pago digital por seguridad')\n  }\n\n  if (!data.shippingAddress.observations) {\n    recommendations.push('Agrega observaciones para facilitar la entrega')\n  }\n\n  return recommendations\n}\n\n// Método OPTIONS para CORS\nexport async function OPTIONS() {\n  return new NextResponse(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'POST, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  })\n}\n"],"names":["OPTIONS","POST","runtime","checkoutValidationSchema","z","object","customerInfo","firstName","string","min","lastName","email","phone","shippingAddress","streetAddress","apartment","optional","city","state","zipCode","country","default","observations","items","array","id","name","price","number","positive","quantity","int","stock","nonnegative","paymentMethod","enum","shippingMethod","totals","subtotal","shipping","discount","total","request","securityLogger","createSecurityLogger","rateLimitResult","withRateLimit","RATE_LIMIT_CONFIGS","checkout","log","type","endpoint","method","userAgent","headers","get","timestamp","Date","toISOString","body","json","validatedData","parse","validationResults","isValid","errors","warnings","suggestions","item","simulatedStock","Math","floor","random","push","calculatedSubtotal","reduce","sum","abs","expectedShipping","calculateShippingCost","expectedTotal","startsWith","obs","toLowerCase","includes","console","customer","length","response","success","data","validation","estimatedDelivery","calculateEstimatedDelivery","recommendedActions","generateRecommendations","message","errorsCount","warningsCount","NextResponse","status","error","logApiError","Error","ZodError","details","map","err","field","path","join","logRateLimitExceeded","context","baseCost","stateSurcharge","now","daysToAdd","estimatedDate","getTime","split","recommendations"],"mappings":"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"}