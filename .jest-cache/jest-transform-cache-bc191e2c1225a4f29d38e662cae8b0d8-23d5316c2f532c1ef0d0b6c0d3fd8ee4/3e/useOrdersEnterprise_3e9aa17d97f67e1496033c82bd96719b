d4b92af6f7109a514a0435cedfcb3a23
// ===================================
// PINTEYA E-COMMERCE - ORDERS ENTERPRISE HOOK
// ===================================
'use client';
"use strict";

/* istanbul ignore next */
function cov_1h7v02x77t() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useOrdersEnterprise.ts";
  var hash = "27f764a52ff52b245b67877dec6e1bfe9b6a15ec";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useOrdersEnterprise.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "2": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "3": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 30
        }
      },
      "5": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 35
        }
      },
      "6": {
        start: {
          line: 23,
          column: 15
        },
        end: {
          line: 23,
          column: 31
        }
      },
      "7": {
        start: {
          line: 26,
          column: 30
        },
        end: {
          line: 45,
          column: 6
        }
      },
      "8": {
        start: {
          line: 49,
          column: 24
        },
        end: {
          line: 82,
          column: 10
        }
      },
      "9": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 54,
          column: 16
        }
      },
      "10": {
        start: {
          line: 50,
          column: 26
        },
        end: {
          line: 54,
          column: 13
        }
      },
      "11": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "12": {
        start: {
          line: 56,
          column: 32
        },
        end: {
          line: 56,
          column: 53
        }
      },
      "13": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 62,
          column: 15
        }
      },
      "14": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 61,
          column: 17
        }
      },
      "15": {
        start: {
          line: 60,
          column: 20
        },
        end: {
          line: 60,
          column: 62
        }
      },
      "16": {
        start: {
          line: 63,
          column: 29
        },
        end: {
          line: 63,
          column: 76
        }
      },
      "17": {
        start: {
          line: 64,
          column: 25
        },
        end: {
          line: 64,
          column: 46
        }
      },
      "18": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 67,
          column: 13
        }
      },
      "19": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 84
        }
      },
      "20": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 74,
          column: 20
        }
      },
      "21": {
        start: {
          line: 68,
          column: 30
        },
        end: {
          line: 74,
          column: 17
        }
      },
      "22": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 80,
          column: 20
        }
      },
      "23": {
        start: {
          line: 76,
          column: 30
        },
        end: {
          line: 80,
          column: 17
        }
      },
      "24": {
        start: {
          line: 83,
          column: 24
        },
        end: {
          line: 101,
          column: 6
        }
      },
      "25": {
        start: {
          line: 84,
          column: 25
        },
        end: {
          line: 90,
          column: 10
        }
      },
      "26": {
        start: {
          line: 91,
          column: 21
        },
        end: {
          line: 91,
          column: 42
        }
      },
      "27": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "28": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 66
        }
      },
      "29": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 41
        }
      },
      "30": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 25
        }
      },
      "31": {
        start: {
          line: 102,
          column: 24
        },
        end: {
          line: 123,
          column: 10
        }
      },
      "32": {
        start: {
          line: 103,
          column: 25
        },
        end: {
          line: 109,
          column: 10
        }
      },
      "33": {
        start: {
          line: 110,
          column: 21
        },
        end: {
          line: 110,
          column: 42
        }
      },
      "34": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "35": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 71
        }
      },
      "36": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 121,
          column: 16
        }
      },
      "37": {
        start: {
          line: 115,
          column: 26
        },
        end: {
          line: 121,
          column: 13
        }
      },
      "38": {
        start: {
          line: 117,
          column: 49
        },
        end: {
          line: 120,
          column: 29
        }
      },
      "39": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 25
        }
      },
      "40": {
        start: {
          line: 124,
          column: 30
        },
        end: {
          line: 148,
          column: 10
        }
      },
      "41": {
        start: {
          line: 125,
          column: 25
        },
        end: {
          line: 135,
          column: 10
        }
      },
      "42": {
        start: {
          line: 136,
          column: 21
        },
        end: {
          line: 136,
          column: 42
        }
      },
      "43": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "44": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 69
        }
      },
      "45": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 147,
          column: 16
        }
      },
      "46": {
        start: {
          line: 141,
          column: 26
        },
        end: {
          line: 147,
          column: 13
        }
      },
      "47": {
        start: {
          line: 143,
          column: 49
        },
        end: {
          line: 146,
          column: 29
        }
      },
      "48": {
        start: {
          line: 149,
          column: 29
        },
        end: {
          line: 167,
          column: 6
        }
      },
      "49": {
        start: {
          line: 150,
          column: 25
        },
        end: {
          line: 156,
          column: 10
        }
      },
      "50": {
        start: {
          line: 157,
          column: 21
        },
        end: {
          line: 157,
          column: 42
        }
      },
      "51": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 160,
          column: 9
        }
      },
      "52": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 71
        }
      },
      "53": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 41
        }
      },
      "54": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 25
        }
      },
      "55": {
        start: {
          line: 168,
          column: 25
        },
        end: {
          line: 187,
          column: 6
        }
      },
      "56": {
        start: {
          line: 169,
          column: 25
        },
        end: {
          line: 179,
          column: 10
        }
      },
      "57": {
        start: {
          line: 180,
          column: 21
        },
        end: {
          line: 180,
          column: 42
        }
      },
      "58": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "59": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 71
        }
      },
      "60": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 25
        }
      },
      "61": {
        start: {
          line: 191,
          column: 26
        },
        end: {
          line: 205,
          column: 6
        }
      },
      "62": {
        start: {
          line: 192,
          column: 31
        },
        end: {
          line: 196,
          column: 9
        }
      },
      "63": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 200,
          column: 16
        }
      },
      "64": {
        start: {
          line: 197,
          column: 26
        },
        end: {
          line: 200,
          column: 13
        }
      },
      "65": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 36
        }
      },
      "66": {
        start: {
          line: 206,
          column: 20
        },
        end: {
          line: 212,
          column: 6
        }
      },
      "67": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 209,
          column: 11
        }
      },
      "68": {
        start: {
          line: 213,
          column: 22
        },
        end: {
          line: 220,
          column: 6
        }
      },
      "69": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 217,
          column: 11
        }
      },
      "70": {
        start: {
          line: 221,
          column: 22
        },
        end: {
          line: 228,
          column: 6
        }
      },
      "71": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 225,
          column: 11
        }
      },
      "72": {
        start: {
          line: 229,
          column: 29
        },
        end: {
          line: 236,
          column: 6
        }
      },
      "73": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 233,
          column: 11
        }
      },
      "74": {
        start: {
          line: 237,
          column: 23
        },
        end: {
          line: 244,
          column: 6
        }
      },
      "75": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 241,
          column: 11
        }
      },
      "76": {
        start: {
          line: 245,
          column: 25
        },
        end: {
          line: 253,
          column: 6
        }
      },
      "77": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 250,
          column: 11
        }
      },
      "78": {
        start: {
          line: 254,
          column: 25
        },
        end: {
          line: 268,
          column: 6
        }
      },
      "79": {
        start: {
          line: 255,
          column: 31
        },
        end: {
          line: 260,
          column: 9
        }
      },
      "80": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 264,
          column: 16
        }
      },
      "81": {
        start: {
          line: 261,
          column: 26
        },
        end: {
          line: 264,
          column: 13
        }
      },
      "82": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 265,
          column: 36
        }
      },
      "83": {
        start: {
          line: 272,
          column: 20
        },
        end: {
          line: 277,
          column: 6
        }
      },
      "84": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 273,
          column: 35
        }
      },
      "85": {
        start: {
          line: 278,
          column: 25
        },
        end: {
          line: 282,
          column: 6
        }
      },
      "86": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 64
        }
      },
      "87": {
        start: {
          line: 279,
          column: 42
        },
        end: {
          line: 279,
          column: 62
        }
      },
      "88": {
        start: {
          line: 283,
          column: 30
        },
        end: {
          line: 287,
          column: 6
        }
      },
      "89": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 284,
          column: 69
        }
      },
      "90": {
        start: {
          line: 284,
          column: 44
        },
        end: {
          line: 284,
          column: 67
        }
      },
      "91": {
        start: {
          line: 291,
          column: 31
        },
        end: {
          line: 297,
          column: 10
        }
      },
      "92": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 294,
          column: 9
        }
      },
      "93": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 25
        }
      },
      "94": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 83
        }
      },
      "95": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 296,
          column: 17
        }
      },
      "96": {
        start: {
          line: 298,
          column: 26
        },
        end: {
          line: 304,
          column: 6
        }
      },
      "97": {
        start: {
          line: 300,
          column: 22
        },
        end: {
          line: 300,
          column: 55
        }
      },
      "98": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 301,
          column: 41
        }
      },
      "99": {
        start: {
          line: 305,
          column: 28
        },
        end: {
          line: 313,
          column: 6
        }
      },
      "100": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 309,
          column: 14
        }
      },
      "101": {
        start: {
          line: 307,
          column: 31
        },
        end: {
          line: 307,
          column: 51
        }
      },
      "102": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 308,
          column: 77
        }
      },
      "103": {
        start: {
          line: 314,
          column: 33
        },
        end: {
          line: 327,
          column: 6
        }
      },
      "104": {
        start: {
          line: 315,
          column: 28
        },
        end: {
          line: 318,
          column: 10
        }
      },
      "105": {
        start: {
          line: 316,
          column: 26
        },
        end: {
          line: 316,
          column: 46
        }
      },
      "106": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 61
        }
      },
      "107": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 321,
          column: 9
        }
      },
      "108": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 320,
          column: 21
        }
      },
      "109": {
        start: {
          line: 322,
          column: 22
        },
        end: {
          line: 322,
          column: 85
        }
      },
      "110": {
        start: {
          line: 322,
          column: 55
        },
        end: {
          line: 322,
          column: 81
        }
      },
      "111": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 323,
          column: 66
        }
      },
      "112": {
        start: {
          line: 331,
          column: 4
        },
        end: {
          line: 333,
          column: 11
        }
      },
      "113": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 332,
          column: 35
        }
      },
      "114": {
        start: {
          line: 337,
          column: 4
        },
        end: {
          line: 371,
          column: 6
        }
      },
      "115": {
        start: {
          line: 374,
          column: 30
        },
        end: {
          line: 374,
          column: 56
        }
      },
      "116": {
        start: {
          line: 375,
          column: 34
        },
        end: {
          line: 375,
          column: 60
        }
      },
      "117": {
        start: {
          line: 376,
          column: 30
        },
        end: {
          line: 376,
          column: 56
        }
      },
      "118": {
        start: {
          line: 377,
          column: 23
        },
        end: {
          line: 397,
          column: 6
        }
      },
      "119": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 380,
          column: 9
        }
      },
      "120": {
        start: {
          line: 379,
          column: 12
        },
        end: {
          line: 379,
          column: 19
        }
      },
      "121": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 381,
          column: 25
        }
      },
      "122": {
        start: {
          line: 382,
          column: 8
        },
        end: {
          line: 382,
          column: 23
        }
      },
      "123": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 394,
          column: 9
        }
      },
      "124": {
        start: {
          line: 384,
          column: 29
        },
        end: {
          line: 384,
          column: 72
        }
      },
      "125": {
        start: {
          line: 385,
          column: 25
        },
        end: {
          line: 385,
          column: 46
        }
      },
      "126": {
        start: {
          line: 386,
          column: 12
        },
        end: {
          line: 388,
          column: 13
        }
      },
      "127": {
        start: {
          line: 387,
          column: 16
        },
        end: {
          line: 387,
          column: 71
        }
      },
      "128": {
        start: {
          line: 389,
          column: 12
        },
        end: {
          line: 389,
          column: 38
        }
      },
      "129": {
        start: {
          line: 391,
          column: 12
        },
        end: {
          line: 391,
          column: 83
        }
      },
      "130": {
        start: {
          line: 393,
          column: 12
        },
        end: {
          line: 393,
          column: 30
        }
      },
      "131": {
        start: {
          line: 398,
          column: 4
        },
        end: {
          line: 402,
          column: 7
        }
      },
      "132": {
        start: {
          line: 399,
          column: 8
        },
        end: {
          line: 399,
          column: 21
        }
      },
      "133": {
        start: {
          line: 403,
          column: 4
        },
        end: {
          line: 408,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 16
          }
        },
        loc: {
          start: {
            line: 9,
            column: 30
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 31
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "useOrdersEnterprise",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 28
          }
        },
        loc: {
          start: {
            line: 24,
            column: 45
          },
          end: {
            line: 372,
            column: 1
          }
        },
        line: 24
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 49,
            column: 48
          },
          end: {
            line: 49,
            column: 49
          }
        },
        loc: {
          start: {
            line: 49,
            column: 65
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 49
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 50,
            column: 17
          },
          end: {
            line: 50,
            column: 18
          }
        },
        loc: {
          start: {
            line: 50,
            column: 26
          },
          end: {
            line: 54,
            column: 13
          }
        },
        line: 50
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 57,
            column: 44
          },
          end: {
            line: 57,
            column: 45
          }
        },
        loc: {
          start: {
            line: 57,
            column: 60
          },
          end: {
            line: 62,
            column: 13
          }
        },
        line: 57
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 68,
            column: 21
          },
          end: {
            line: 68,
            column: 22
          }
        },
        loc: {
          start: {
            line: 68,
            column: 30
          },
          end: {
            line: 74,
            column: 17
          }
        },
        line: 68
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 76,
            column: 21
          },
          end: {
            line: 76,
            column: 22
          }
        },
        loc: {
          start: {
            line: 76,
            column: 30
          },
          end: {
            line: 80,
            column: 17
          }
        },
        line: 76
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 83,
            column: 48
          },
          end: {
            line: 83,
            column: 49
          }
        },
        loc: {
          start: {
            line: 83,
            column: 67
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 83
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 102,
            column: 48
          },
          end: {
            line: 102,
            column: 49
          }
        },
        loc: {
          start: {
            line: 102,
            column: 76
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 102
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 115,
            column: 17
          },
          end: {
            line: 115,
            column: 18
          }
        },
        loc: {
          start: {
            line: 115,
            column: 26
          },
          end: {
            line: 121,
            column: 13
          }
        },
        line: 115
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 117,
            column: 40
          },
          end: {
            line: 117,
            column: 41
          }
        },
        loc: {
          start: {
            line: 117,
            column: 49
          },
          end: {
            line: 120,
            column: 29
          }
        },
        line: 117
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 124,
            column: 54
          },
          end: {
            line: 124,
            column: 55
          }
        },
        loc: {
          start: {
            line: 124,
            column: 106
          },
          end: {
            line: 148,
            column: 5
          }
        },
        line: 124
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 141,
            column: 17
          },
          end: {
            line: 141,
            column: 18
          }
        },
        loc: {
          start: {
            line: 141,
            column: 26
          },
          end: {
            line: 147,
            column: 13
          }
        },
        line: 141
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 143,
            column: 40
          },
          end: {
            line: 143,
            column: 41
          }
        },
        loc: {
          start: {
            line: 143,
            column: 49
          },
          end: {
            line: 146,
            column: 29
          }
        },
        line: 143
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 149,
            column: 53
          },
          end: {
            line: 149,
            column: 54
          }
        },
        loc: {
          start: {
            line: 149,
            column: 71
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 149
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 168,
            column: 49
          },
          end: {
            line: 168,
            column: 50
          }
        },
        loc: {
          start: {
            line: 168,
            column: 82
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 168
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 191,
            column: 50
          },
          end: {
            line: 191,
            column: 51
          }
        },
        loc: {
          start: {
            line: 191,
            column: 64
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 191
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 197,
            column: 17
          },
          end: {
            line: 197,
            column: 18
          }
        },
        loc: {
          start: {
            line: 197,
            column: 26
          },
          end: {
            line: 200,
            column: 13
          }
        },
        line: 197
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 206,
            column: 44
          },
          end: {
            line: 206,
            column: 45
          }
        },
        loc: {
          start: {
            line: 206,
            column: 52
          },
          end: {
            line: 210,
            column: 5
          }
        },
        line: 206
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 213,
            column: 46
          },
          end: {
            line: 213,
            column: 47
          }
        },
        loc: {
          start: {
            line: 213,
            column: 56
          },
          end: {
            line: 218,
            column: 5
          }
        },
        line: 213
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 221,
            column: 46
          },
          end: {
            line: 221,
            column: 47
          }
        },
        loc: {
          start: {
            line: 221,
            column: 56
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 221
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 229,
            column: 53
          },
          end: {
            line: 229,
            column: 54
          }
        },
        loc: {
          start: {
            line: 229,
            column: 71
          },
          end: {
            line: 234,
            column: 5
          }
        },
        line: 229
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 237,
            column: 47
          },
          end: {
            line: 237,
            column: 48
          }
        },
        loc: {
          start: {
            line: 237,
            column: 70
          },
          end: {
            line: 242,
            column: 5
          }
        },
        line: 237
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 245,
            column: 49
          },
          end: {
            line: 245,
            column: 50
          }
        },
        loc: {
          start: {
            line: 245,
            column: 71
          },
          end: {
            line: 251,
            column: 5
          }
        },
        line: 245
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 254,
            column: 49
          },
          end: {
            line: 254,
            column: 50
          }
        },
        loc: {
          start: {
            line: 254,
            column: 53
          },
          end: {
            line: 266,
            column: 5
          }
        },
        line: 254
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 261,
            column: 17
          },
          end: {
            line: 261,
            column: 18
          }
        },
        loc: {
          start: {
            line: 261,
            column: 26
          },
          end: {
            line: 264,
            column: 13
          }
        },
        line: 261
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 272,
            column: 44
          },
          end: {
            line: 272,
            column: 45
          }
        },
        loc: {
          start: {
            line: 272,
            column: 48
          },
          end: {
            line: 274,
            column: 5
          }
        },
        line: 272
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 278,
            column: 49
          },
          end: {
            line: 278,
            column: 50
          }
        },
        loc: {
          start: {
            line: 278,
            column: 60
          },
          end: {
            line: 280,
            column: 5
          }
        },
        line: 278
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 279,
            column: 33
          },
          end: {
            line: 279,
            column: 34
          }
        },
        loc: {
          start: {
            line: 279,
            column: 42
          },
          end: {
            line: 279,
            column: 62
          }
        },
        line: 279
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 283,
            column: 54
          },
          end: {
            line: 283,
            column: 55
          }
        },
        loc: {
          start: {
            line: 283,
            column: 64
          },
          end: {
            line: 285,
            column: 5
          }
        },
        line: 283
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 284,
            column: 35
          },
          end: {
            line: 284,
            column: 36
          }
        },
        loc: {
          start: {
            line: 284,
            column: 44
          },
          end: {
            line: 284,
            column: 67
          }
        },
        line: 284
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 291,
            column: 55
          },
          end: {
            line: 291,
            column: 56
          }
        },
        loc: {
          start: {
            line: 291,
            column: 64
          },
          end: {
            line: 297,
            column: 5
          }
        },
        line: 291
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 298,
            column: 50
          },
          end: {
            line: 298,
            column: 51
          }
        },
        loc: {
          start: {
            line: 298,
            column: 59
          },
          end: {
            line: 302,
            column: 5
          }
        },
        line: 298
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 305,
            column: 52
          },
          end: {
            line: 305,
            column: 53
          }
        },
        loc: {
          start: {
            line: 305,
            column: 56
          },
          end: {
            line: 310,
            column: 5
          }
        },
        line: 305
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 306,
            column: 35
          },
          end: {
            line: 306,
            column: 36
          }
        },
        loc: {
          start: {
            line: 306,
            column: 51
          },
          end: {
            line: 309,
            column: 9
          }
        },
        line: 306
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 314,
            column: 57
          },
          end: {
            line: 314,
            column: 58
          }
        },
        loc: {
          start: {
            line: 314,
            column: 61
          },
          end: {
            line: 324,
            column: 5
          }
        },
        line: 314
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 315,
            column: 48
          },
          end: {
            line: 315,
            column: 49
          }
        },
        loc: {
          start: {
            line: 315,
            column: 57
          },
          end: {
            line: 318,
            column: 9
          }
        },
        line: 315
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 322,
            column: 41
          },
          end: {
            line: 322,
            column: 42
          }
        },
        loc: {
          start: {
            line: 322,
            column: 55
          },
          end: {
            line: 322,
            column: 81
          }
        },
        line: 322
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 331,
            column: 26
          },
          end: {
            line: 331,
            column: 27
          }
        },
        loc: {
          start: {
            line: 331,
            column: 30
          },
          end: {
            line: 333,
            column: 5
          }
        },
        line: 331
      },
      "41": {
        name: "useOrderDetail",
        decl: {
          start: {
            line: 373,
            column: 9
          },
          end: {
            line: 373,
            column: 23
          }
        },
        loc: {
          start: {
            line: 373,
            column: 33
          },
          end: {
            line: 409,
            column: 1
          }
        },
        line: 373
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 377,
            column: 47
          },
          end: {
            line: 377,
            column: 48
          }
        },
        loc: {
          start: {
            line: 377,
            column: 57
          },
          end: {
            line: 395,
            column: 5
          }
        },
        line: 377
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 398,
            column: 26
          },
          end: {
            line: 398,
            column: 27
          }
        },
        loc: {
          start: {
            line: 398,
            column: 30
          },
          end: {
            line: 400,
            column: 5
          }
        },
        line: 398
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 59,
            column: 16
          },
          end: {
            line: 61,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 16
          },
          end: {
            line: 61,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "1": {
        loc: {
          start: {
            line: 59,
            column: 20
          },
          end: {
            line: 59,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 20
          },
          end: {
            line: 59,
            column: 39
          }
        }, {
          start: {
            line: 59,
            column: 43
          },
          end: {
            line: 59,
            column: 57
          }
        }, {
          start: {
            line: 59,
            column: 61
          },
          end: {
            line: 59,
            column: 73
          }
        }, {
          start: {
            line: 59,
            column: 77
          },
          end: {
            line: 59,
            column: 102
          }
        }],
        line: 59
      },
      "2": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "3": {
        loc: {
          start: {
            line: 66,
            column: 32
          },
          end: {
            line: 66,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 32
          },
          end: {
            line: 66,
            column: 53
          }
        }, {
          start: {
            line: 66,
            column: 57
          },
          end: {
            line: 66,
            column: 82
          }
        }],
        line: 66
      },
      "4": {
        loc: {
          start: {
            line: 78,
            column: 27
          },
          end: {
            line: 78,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 78,
            column: 52
          },
          end: {
            line: 78,
            column: 65
          }
        }, {
          start: {
            line: 78,
            column: 68
          },
          end: {
            line: 78,
            column: 87
          }
        }],
        line: 78
      },
      "5": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "6": {
        loc: {
          start: {
            line: 93,
            column: 28
          },
          end: {
            line: 93,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 28
          },
          end: {
            line: 93,
            column: 38
          }
        }, {
          start: {
            line: 93,
            column: 42
          },
          end: {
            line: 93,
            column: 64
          }
        }],
        line: 93
      },
      "7": {
        loc: {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "8": {
        loc: {
          start: {
            line: 112,
            column: 28
          },
          end: {
            line: 112,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 28
          },
          end: {
            line: 112,
            column: 38
          }
        }, {
          start: {
            line: 112,
            column: 42
          },
          end: {
            line: 112,
            column: 69
          }
        }],
        line: 112
      },
      "9": {
        loc: {
          start: {
            line: 117,
            column: 49
          },
          end: {
            line: 120,
            column: 29
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 117,
            column: 72
          },
          end: {
            line: 120,
            column: 21
          }
        }, {
          start: {
            line: 120,
            column: 24
          },
          end: {
            line: 120,
            column: 29
          }
        }],
        line: 117
      },
      "10": {
        loc: {
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "11": {
        loc: {
          start: {
            line: 138,
            column: 28
          },
          end: {
            line: 138,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 28
          },
          end: {
            line: 138,
            column: 38
          }
        }, {
          start: {
            line: 138,
            column: 42
          },
          end: {
            line: 138,
            column: 67
          }
        }],
        line: 138
      },
      "12": {
        loc: {
          start: {
            line: 143,
            column: 49
          },
          end: {
            line: 146,
            column: 29
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 143,
            column: 72
          },
          end: {
            line: 146,
            column: 21
          }
        }, {
          start: {
            line: 146,
            column: 24
          },
          end: {
            line: 146,
            column: 29
          }
        }],
        line: 143
      },
      "13": {
        loc: {
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "14": {
        loc: {
          start: {
            line: 159,
            column: 28
          },
          end: {
            line: 159,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 28
          },
          end: {
            line: 159,
            column: 38
          }
        }, {
          start: {
            line: 159,
            column: 42
          },
          end: {
            line: 159,
            column: 69
          }
        }],
        line: 159
      },
      "15": {
        loc: {
          start: {
            line: 168,
            column: 56
          },
          end: {
            line: 168,
            column: 70
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 168,
            column: 65
          },
          end: {
            line: 168,
            column: 70
          }
        }],
        line: 168
      },
      "16": {
        loc: {
          start: {
            line: 176,
            column: 25
          },
          end: {
            line: 176,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 25
          },
          end: {
            line: 176,
            column: 32
          }
        }, {
          start: {
            line: 176,
            column: 36
          },
          end: {
            line: 176,
            column: 49
          }
        }],
        line: 176
      },
      "17": {
        loc: {
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "18": {
        loc: {
          start: {
            line: 182,
            column: 28
          },
          end: {
            line: 182,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 182,
            column: 28
          },
          end: {
            line: 182,
            column: 38
          }
        }, {
          start: {
            line: 182,
            column: 42
          },
          end: {
            line: 182,
            column: 69
          }
        }],
        line: 182
      },
      "19": {
        loc: {
          start: {
            line: 195,
            column: 18
          },
          end: {
            line: 195,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 18
          },
          end: {
            line: 195,
            column: 33
          }
        }, {
          start: {
            line: 195,
            column: 37
          },
          end: {
            line: 195,
            column: 38
          }
        }],
        line: 195
      },
      "20": {
        loc: {
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 294,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 294,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "21": {
        loc: {
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 292,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 292,
            column: 37
          }
        }, {
          start: {
            line: 292,
            column: 41
          },
          end: {
            line: 292,
            column: 54
          }
        }, {
          start: {
            line: 292,
            column: 58
          },
          end: {
            line: 292,
            column: 68
          }
        }],
        line: 292
      },
      "22": {
        loc: {
          start: {
            line: 300,
            column: 22
          },
          end: {
            line: 300,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 300,
            column: 22
          },
          end: {
            line: 300,
            column: 33
          }
        }, {
          start: {
            line: 300,
            column: 37
          },
          end: {
            line: 300,
            column: 55
          }
        }],
        line: 300
      },
      "23": {
        loc: {
          start: {
            line: 308,
            column: 19
          },
          end: {
            line: 308,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 308,
            column: 50
          },
          end: {
            line: 308,
            column: 68
          }
        }, {
          start: {
            line: 308,
            column: 71
          },
          end: {
            line: 308,
            column: 76
          }
        }],
        line: 308
      },
      "24": {
        loc: {
          start: {
            line: 317,
            column: 19
          },
          end: {
            line: 317,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 317,
            column: 19
          },
          end: {
            line: 317,
            column: 47
          }
        }, {
          start: {
            line: 317,
            column: 51
          },
          end: {
            line: 317,
            column: 60
          }
        }],
        line: 317
      },
      "25": {
        loc: {
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 321,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 321,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 319
      },
      "26": {
        loc: {
          start: {
            line: 378,
            column: 8
          },
          end: {
            line: 380,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 378,
            column: 8
          },
          end: {
            line: 380,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 378
      },
      "27": {
        loc: {
          start: {
            line: 386,
            column: 12
          },
          end: {
            line: 388,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 386,
            column: 12
          },
          end: {
            line: 388,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 386
      },
      "28": {
        loc: {
          start: {
            line: 387,
            column: 32
          },
          end: {
            line: 387,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 387,
            column: 32
          },
          end: {
            line: 387,
            column: 42
          }
        }, {
          start: {
            line: 387,
            column: 46
          },
          end: {
            line: 387,
            column: 69
          }
        }],
        line: 387
      },
      "29": {
        loc: {
          start: {
            line: 391,
            column: 21
          },
          end: {
            line: 391,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 391,
            column: 46
          },
          end: {
            line: 391,
            column: 59
          }
        }, {
          start: {
            line: 391,
            column: 62
          },
          end: {
            line: 391,
            column: 81
          }
        }],
        line: 391
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useOrdersEnterprise.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - ORDERS ENTERPRISE HOOK\r\n// ===================================\r\n\r\n'use client';\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { \r\n  OrderEnterprise, \r\n  OrderFilters, \r\n  OrderListResponse,\r\n  UseOrdersState,\r\n  BulkStatusUpdate,\r\n  BulkStatusUpdateResult\r\n} from '@/types/orders-enterprise';\r\n\r\n// ===================================\r\n// HOOK PRINCIPAL\r\n// ===================================\r\n\r\nexport function useOrdersEnterprise(initialFilters?: OrderFilters) {\r\n  // Hook legacy - usar /hooks/admin/useOrdersEnterprise.ts en su lugar\r\n\r\n  const [state, setState] = useState<UseOrdersState>({\r\n    orders: [],\r\n    loading: true,\r\n    error: null,\r\n    filters: {\r\n      page: 1,\r\n      limit: 20,\r\n      sort_by: 'created_at',\r\n      sort_order: 'desc',\r\n      ...initialFilters,\r\n    },\r\n    pagination: {\r\n      page: 1,\r\n      limit: 20,\r\n      total: 0,\r\n      totalPages: 0,\r\n      hasNextPage: false,\r\n      hasPreviousPage: false,\r\n    },\r\n  });\r\n\r\n  // ===================================\r\n  // FUNCIONES DE API\r\n  // ===================================\r\n\r\n  const fetchOrders = useCallback(async (filters: OrderFilters) => {\r\n    setState(prev => ({ ...prev, loading: true, error: null }));\r\n    \r\n    try {\r\n      const queryParams = new URLSearchParams();\r\n      Object.entries(filters).forEach(([key, value]) => {\r\n        // FILTRAR OBJETOS: Solo agregar valores primitivos (string, number, boolean)\r\n        if (value !== undefined && value !== null && value !== '' && typeof value !== 'object') {\r\n          queryParams.append(key, value.toString());\r\n        }\r\n      });\r\n\r\n      const response = await fetch(`/api/admin/orders?${queryParams}`);\r\n      const data: { data: OrderListResponse } = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.data?.toString() || 'Error al cargar \xF3rdenes');\r\n      }\r\n\r\n      setState(prev => ({\r\n        ...prev,\r\n        orders: data.data.orders,\r\n        pagination: data.data.pagination,\r\n        filters: data.data.filters,\r\n        loading: false,\r\n      }));\r\n    } catch (error) {\r\n      setState(prev => ({\r\n        ...prev,\r\n        error: error instanceof Error ? error.message : 'Error desconocido',\r\n        loading: false,\r\n      }));\r\n    }\r\n  }, []);\r\n\r\n  const createOrder = useCallback(async (orderData: any): Promise<OrderEnterprise> => {\r\n    const response = await fetch('/api/admin/orders', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(orderData),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      throw new Error(data.error || 'Error al crear orden');\r\n    }\r\n\r\n    // Refrescar lista despu\xE9s de crear\r\n    await fetchOrders(state.filters);\r\n\r\n    return data.data;\r\n  }, [state.filters, fetchOrders]);\r\n\r\n  const updateOrder = useCallback(async (orderId: string, orderData: any): Promise<OrderEnterprise> => {\r\n    const response = await fetch(`/api/admin/orders/${orderId}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(orderData),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      throw new Error(data.error || 'Error al actualizar orden');\r\n    }\r\n\r\n    // Actualizar orden en el estado local\r\n    setState(prev => ({\r\n      ...prev,\r\n      orders: prev.orders.map(order => \r\n        order.id === orderId ? { ...order, ...data.data } : order\r\n      ),\r\n    }));\r\n\r\n    return data.data;\r\n  }, []);\r\n\r\n  const changeOrderStatus = useCallback(async (\r\n    orderId: string, \r\n    newStatus: string, \r\n    reason: string,\r\n    additionalData?: any\r\n  ): Promise<void> => {\r\n    const response = await fetch(`/api/admin/orders/${orderId}/status`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        status: newStatus,\r\n        reason,\r\n        ...additionalData,\r\n      }),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      throw new Error(data.error || 'Error al cambiar estado');\r\n    }\r\n\r\n    // Actualizar orden en el estado local\r\n    setState(prev => ({\r\n      ...prev,\r\n      orders: prev.orders.map(order => \r\n        order.id === orderId ? { ...order, status: newStatus } : order\r\n      ),\r\n    }));\r\n  }, []);\r\n\r\n  const bulkUpdateStatus = useCallback(async (\r\n    bulkData: BulkStatusUpdate\r\n  ): Promise<BulkStatusUpdateResult> => {\r\n    const response = await fetch('/api/admin/orders/bulk?operation=status_update', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(bulkData),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      throw new Error(data.error || 'Error en operaci\xF3n masiva');\r\n    }\r\n\r\n    // Refrescar lista despu\xE9s de operaci\xF3n masiva\r\n    await fetchOrders(state.filters);\r\n\r\n    return data.data;\r\n  }, [state.filters, fetchOrders]);\r\n\r\n  const exportOrders = useCallback(async (\r\n    format: 'csv' | 'json' = 'csv',\r\n    filters?: OrderFilters\r\n  ): Promise<any> => {\r\n    const response = await fetch('/api/admin/orders/bulk?operation=export', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        format,\r\n        filters: filters || state.filters,\r\n        include_items: true,\r\n      }),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      throw new Error(data.error || 'Error al exportar \xF3rdenes');\r\n    }\r\n\r\n    return data.data;\r\n  }, [state.filters]);\r\n\r\n  // ===================================\r\n  // FUNCIONES DE FILTRADO Y PAGINACI\xD3N\r\n  // ===================================\r\n\r\n  const updateFilters = useCallback((newFilters: Partial<OrderFilters>) => {\r\n    const updatedFilters = {\r\n      ...state.filters,\r\n      ...newFilters,\r\n      page: newFilters.page || 1, // Reset page unless explicitly set\r\n    };\r\n\r\n    setState(prev => ({\r\n      ...prev,\r\n      filters: updatedFilters,\r\n    }));\r\n\r\n    fetchOrders(updatedFilters);\r\n  }, [state.filters, fetchOrders]);\r\n\r\n  const setPage = useCallback((page: number) => {\r\n    updateFilters({ page });\r\n  }, [updateFilters]);\r\n\r\n  const setSearch = useCallback((search: string) => {\r\n    updateFilters({ search, page: 1 });\r\n  }, [updateFilters]);\r\n\r\n  const setStatus = useCallback((status: string | undefined) => {\r\n    updateFilters({ status, page: 1 });\r\n  }, [updateFilters]);\r\n\r\n  const setPaymentStatus = useCallback((payment_status: string | undefined) => {\r\n    updateFilters({ payment_status, page: 1 });\r\n  }, [updateFilters]);\r\n\r\n  const setSorting = useCallback((sort_by: string, sort_order: 'asc' | 'desc') => {\r\n    updateFilters({ sort_by, sort_order });\r\n  }, [updateFilters]);\r\n\r\n  const setDateRange = useCallback((date_from?: string, date_to?: string) => {\r\n    updateFilters({ date_from, date_to, page: 1 });\r\n  }, [updateFilters]);\r\n\r\n  const clearFilters = useCallback(() => {\r\n    const defaultFilters: OrderFilters = {\r\n      page: 1,\r\n      limit: 20,\r\n      sort_by: 'created_at',\r\n      sort_order: 'desc',\r\n    };\r\n\r\n    setState(prev => ({\r\n      ...prev,\r\n      filters: defaultFilters,\r\n    }));\r\n\r\n    fetchOrders(defaultFilters);\r\n  }, [fetchOrders]);\r\n\r\n  // ===================================\r\n  // FUNCIONES DE UTILIDAD\r\n  // ===================================\r\n\r\n  const refresh = useCallback(() => {\r\n    fetchOrders(state.filters);\r\n  }, [state.filters, fetchOrders]);\r\n\r\n  const getOrderById = useCallback((orderId: string): OrderEnterprise | undefined => {\r\n    return state.orders.find(order => order.id === orderId);\r\n  }, [state.orders]);\r\n\r\n  const getOrdersByStatus = useCallback((status: string): OrderEnterprise[] => {\r\n    return state.orders.filter(order => order.status === status);\r\n  }, [state.orders]);\r\n\r\n  // ===================================\r\n  // FUNCI\xD3N DE VALIDACI\xD3N DE DATOS\r\n  // ===================================\r\n\r\n  const validateOrderTotal = useCallback((total: unknown): number => {\r\n    if (typeof total === 'number' && !isNaN(total) && total >= 0) {\r\n      return total;\r\n    }\r\n    console.warn('[useOrdersEnterprise] Invalid order total detected:', total);\r\n    return 0;\r\n  }, []);\r\n\r\n  const getOrderTotal = useCallback((order: any): number => {\r\n    // Manejar tanto 'total' como 'total_amount' para compatibilidad con mocks\r\n    const total = order.total ?? order.total_amount;\r\n    return validateOrderTotal(total);\r\n  }, [validateOrderTotal]);\r\n\r\n  const getTotalRevenue = useCallback((): number => {\r\n    return state.orders.reduce((total, order) => {\r\n      const orderTotal = getOrderTotal(order);\r\n      return order.status !== 'cancelled' ? total + orderTotal : total;\r\n    }, 0);\r\n  }, [state.orders, getOrderTotal]);\r\n\r\n  const getAverageOrderValue = useCallback((): number => {\r\n    const validOrders = state.orders.filter(order => {\r\n      const total = getOrderTotal(order);\r\n      return order.status !== 'cancelled' && total > 0;\r\n    });\r\n\r\n    if (validOrders.length === 0) {return 0;}\r\n\r\n    const total = validOrders.reduce((sum, order) =>\r\n      sum + getOrderTotal(order), 0\r\n    );\r\n    return Math.round((total / validOrders.length) * 100) / 100;\r\n  }, [state.orders, getOrderTotal]);\r\n\r\n  // ===================================\r\n  // EFECTOS\r\n  // ===================================\r\n\r\n  useEffect(() => {\r\n    fetchOrders(state.filters);\r\n  }, []); // Solo ejecutar una vez al montar\r\n\r\n  // ===================================\r\n  // RETURN DEL HOOK\r\n  // ===================================\r\n\r\n  return {\r\n    // Estado\r\n    orders: state.orders,\r\n    loading: state.loading,\r\n    error: state.error,\r\n    filters: state.filters,\r\n    pagination: state.pagination,\r\n\r\n    // Operaciones CRUD\r\n    createOrder,\r\n    updateOrder,\r\n    changeOrderStatus,\r\n    bulkUpdateStatus,\r\n    exportOrders,\r\n\r\n    // Filtrado y paginaci\xF3n\r\n    updateFilters,\r\n    setPage,\r\n    setSearch,\r\n    setStatus,\r\n    setPaymentStatus,\r\n    setSorting,\r\n    setDateRange,\r\n    clearFilters,\r\n\r\n    // Utilidades\r\n    refresh,\r\n    getOrderById,\r\n    getOrdersByStatus,\r\n    getTotalRevenue,\r\n    getAverageOrderValue,\r\n\r\n    // Funciones de conveniencia\r\n    hasNextPage: state.pagination.hasNextPage,\r\n    hasPreviousPage: state.pagination.hasPreviousPage,\r\n    totalOrders: state.pagination.total,\r\n    currentPage: state.pagination.page,\r\n    totalPages: state.pagination.totalPages,\r\n  };\r\n}\r\n\r\n// ===================================\r\n// HOOK PARA ORDEN INDIVIDUAL\r\n// ===================================\r\n\r\nexport function useOrderDetail(orderId: string) {\r\n  const [order, setOrder] = useState<OrderEnterprise | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const fetchOrder = useCallback(async () => {\r\n    if (!orderId) {return;}\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch(`/api/admin/orders/${orderId}`);\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Error al cargar orden');\r\n      }\r\n\r\n      setOrder(data.data.order);\r\n    } catch (error) {\r\n      setError(error instanceof Error ? error.message : 'Error desconocido');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [orderId]);\r\n\r\n  useEffect(() => {\r\n    fetchOrder();\r\n  }, [fetchOrder]);\r\n\r\n  return {\r\n    order,\r\n    loading,\r\n    error,\r\n    refresh: fetchOrder,\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useOrderDetail", "useOrdersEnterprise", "initialFilters", "state", "setState", "useState", "orders", "loading", "error", "filters", "page", "limit", "sort_by", "sort_order", "pagination", "total", "totalPages", "hasNextPage", "hasPreviousPage", "fetchOrders", "useCallback", "prev", "queryParams", "URLSearchParams", "Object", "entries", "forEach", "key", "value", "undefined", "append", "toString", "response", "fetch", "data", "json", "ok", "Error", "message", "createOrder", "orderData", "method", "headers", "body", "JSON", "stringify", "updateOrder", "orderId", "map", "order", "id", "changeOrderStatus", "newStatus", "reason", "additionalData", "status", "bulkUpdateStatus", "bulkData", "exportOrders", "format", "include_items", "updateFilters", "newFilters", "updatedFilters", "setPage", "setSearch", "search", "setStatus", "setPaymentStatus", "payment_status", "setSorting", "setDateRange", "date_from", "date_to", "clearFilters", "defaultFilters", "refresh", "getOrderById", "find", "getOrdersByStatus", "filter", "validateOrderTotal", "isNaN", "console", "warn", "getOrderTotal", "total_amount", "getTotalRevenue", "reduce", "orderTotal", "getAverageOrderValue", "validOrders", "length", "sum", "Math", "round", "useEffect", "totalOrders", "currentPage", "setOrder", "setLoading", "setError", "fetchOrder"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "27f764a52ff52b245b67877dec6e1bfe9b6a15ec"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1h7v02x77t = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1h7v02x77t();
cov_1h7v02x77t().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1h7v02x77t().f[0]++;
  cov_1h7v02x77t().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1h7v02x77t().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1h7v02x77t().s[3]++;
_export(exports, {
  get useOrderDetail() {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[1]++;
    cov_1h7v02x77t().s[4]++;
    return useOrderDetail;
  },
  get useOrdersEnterprise() {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[2]++;
    cov_1h7v02x77t().s[5]++;
    return useOrdersEnterprise;
  }
});
const _react =
/* istanbul ignore next */
(cov_1h7v02x77t().s[6]++, require("react"));
function useOrdersEnterprise(initialFilters) {
  /* istanbul ignore next */
  cov_1h7v02x77t().f[3]++;
  // Hook legacy - usar /hooks/admin/useOrdersEnterprise.ts en su lugar
  const [state, setState] =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[7]++, (0, _react.useState)({
    orders: [],
    loading: true,
    error: null,
    filters: {
      page: 1,
      limit: 20,
      sort_by: 'created_at',
      sort_order: 'desc',
      ...initialFilters
    },
    pagination: {
      page: 1,
      limit: 20,
      total: 0,
      totalPages: 0,
      hasNextPage: false,
      hasPreviousPage: false
    }
  }));
  // ===================================
  // FUNCIONES DE API
  // ===================================
  const fetchOrders =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[8]++, (0, _react.useCallback)(async filters => {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[4]++;
    cov_1h7v02x77t().s[9]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_1h7v02x77t().f[5]++;
      cov_1h7v02x77t().s[10]++;
      return {
        ...prev,
        loading: true,
        error: null
      };
    });
    /* istanbul ignore next */
    cov_1h7v02x77t().s[11]++;
    try {
      const queryParams =
      /* istanbul ignore next */
      (cov_1h7v02x77t().s[12]++, new URLSearchParams());
      /* istanbul ignore next */
      cov_1h7v02x77t().s[13]++;
      Object.entries(filters).forEach(([key, value]) => {
        /* istanbul ignore next */
        cov_1h7v02x77t().f[6]++;
        cov_1h7v02x77t().s[14]++;
        // FILTRAR OBJETOS: Solo agregar valores primitivos (string, number, boolean)
        if (
        /* istanbul ignore next */
        (cov_1h7v02x77t().b[1][0]++, value !== undefined) &&
        /* istanbul ignore next */
        (cov_1h7v02x77t().b[1][1]++, value !== null) &&
        /* istanbul ignore next */
        (cov_1h7v02x77t().b[1][2]++, value !== '') &&
        /* istanbul ignore next */
        (cov_1h7v02x77t().b[1][3]++, typeof value !== 'object')) {
          /* istanbul ignore next */
          cov_1h7v02x77t().b[0][0]++;
          cov_1h7v02x77t().s[15]++;
          queryParams.append(key, value.toString());
        } else
        /* istanbul ignore next */
        {
          cov_1h7v02x77t().b[0][1]++;
        }
      });
      const response =
      /* istanbul ignore next */
      (cov_1h7v02x77t().s[16]++, await fetch(`/api/admin/orders?${queryParams}`));
      const data =
      /* istanbul ignore next */
      (cov_1h7v02x77t().s[17]++, await response.json());
      /* istanbul ignore next */
      cov_1h7v02x77t().s[18]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1h7v02x77t().b[2][0]++;
        cov_1h7v02x77t().s[19]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_1h7v02x77t().b[3][0]++, data.data?.toString()) ||
        /* istanbul ignore next */
        (cov_1h7v02x77t().b[3][1]++, 'Error al cargar órdenes'));
      } else
      /* istanbul ignore next */
      {
        cov_1h7v02x77t().b[2][1]++;
      }
      cov_1h7v02x77t().s[20]++;
      setState(prev => {
        /* istanbul ignore next */
        cov_1h7v02x77t().f[7]++;
        cov_1h7v02x77t().s[21]++;
        return {
          ...prev,
          orders: data.data.orders,
          pagination: data.data.pagination,
          filters: data.data.filters,
          loading: false
        };
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1h7v02x77t().s[22]++;
      setState(prev => {
        /* istanbul ignore next */
        cov_1h7v02x77t().f[8]++;
        cov_1h7v02x77t().s[23]++;
        return {
          ...prev,
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_1h7v02x77t().b[4][0]++, error.message) :
          /* istanbul ignore next */
          (cov_1h7v02x77t().b[4][1]++, 'Error desconocido'),
          loading: false
        };
      });
    }
  }, []));
  const createOrder =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[24]++, (0, _react.useCallback)(async orderData => {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[9]++;
    const response =
    /* istanbul ignore next */
    (cov_1h7v02x77t().s[25]++, await fetch('/api/admin/orders', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(orderData)
    }));
    const data =
    /* istanbul ignore next */
    (cov_1h7v02x77t().s[26]++, await response.json());
    /* istanbul ignore next */
    cov_1h7v02x77t().s[27]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1h7v02x77t().b[5][0]++;
      cov_1h7v02x77t().s[28]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_1h7v02x77t().b[6][0]++, data.error) ||
      /* istanbul ignore next */
      (cov_1h7v02x77t().b[6][1]++, 'Error al crear orden'));
    } else
    /* istanbul ignore next */
    {
      cov_1h7v02x77t().b[5][1]++;
    }
    // Refrescar lista después de crear
    cov_1h7v02x77t().s[29]++;
    await fetchOrders(state.filters);
    /* istanbul ignore next */
    cov_1h7v02x77t().s[30]++;
    return data.data;
  }, [state.filters, fetchOrders]));
  const updateOrder =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[31]++, (0, _react.useCallback)(async (orderId, orderData) => {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[10]++;
    const response =
    /* istanbul ignore next */
    (cov_1h7v02x77t().s[32]++, await fetch(`/api/admin/orders/${orderId}`, {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(orderData)
    }));
    const data =
    /* istanbul ignore next */
    (cov_1h7v02x77t().s[33]++, await response.json());
    /* istanbul ignore next */
    cov_1h7v02x77t().s[34]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1h7v02x77t().b[7][0]++;
      cov_1h7v02x77t().s[35]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_1h7v02x77t().b[8][0]++, data.error) ||
      /* istanbul ignore next */
      (cov_1h7v02x77t().b[8][1]++, 'Error al actualizar orden'));
    } else
    /* istanbul ignore next */
    {
      cov_1h7v02x77t().b[7][1]++;
    }
    // Actualizar orden en el estado local
    cov_1h7v02x77t().s[36]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_1h7v02x77t().f[11]++;
      cov_1h7v02x77t().s[37]++;
      return {
        ...prev,
        orders: prev.orders.map(order => {
          /* istanbul ignore next */
          cov_1h7v02x77t().f[12]++;
          cov_1h7v02x77t().s[38]++;
          return order.id === orderId ?
          /* istanbul ignore next */
          (cov_1h7v02x77t().b[9][0]++, {
            ...order,
            ...data.data
          }) :
          /* istanbul ignore next */
          (cov_1h7v02x77t().b[9][1]++, order);
        })
      };
    });
    /* istanbul ignore next */
    cov_1h7v02x77t().s[39]++;
    return data.data;
  }, []));
  const changeOrderStatus =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[40]++, (0, _react.useCallback)(async (orderId, newStatus, reason, additionalData) => {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[13]++;
    const response =
    /* istanbul ignore next */
    (cov_1h7v02x77t().s[41]++, await fetch(`/api/admin/orders/${orderId}/status`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        status: newStatus,
        reason,
        ...additionalData
      })
    }));
    const data =
    /* istanbul ignore next */
    (cov_1h7v02x77t().s[42]++, await response.json());
    /* istanbul ignore next */
    cov_1h7v02x77t().s[43]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1h7v02x77t().b[10][0]++;
      cov_1h7v02x77t().s[44]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_1h7v02x77t().b[11][0]++, data.error) ||
      /* istanbul ignore next */
      (cov_1h7v02x77t().b[11][1]++, 'Error al cambiar estado'));
    } else
    /* istanbul ignore next */
    {
      cov_1h7v02x77t().b[10][1]++;
    }
    // Actualizar orden en el estado local
    cov_1h7v02x77t().s[45]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_1h7v02x77t().f[14]++;
      cov_1h7v02x77t().s[46]++;
      return {
        ...prev,
        orders: prev.orders.map(order => {
          /* istanbul ignore next */
          cov_1h7v02x77t().f[15]++;
          cov_1h7v02x77t().s[47]++;
          return order.id === orderId ?
          /* istanbul ignore next */
          (cov_1h7v02x77t().b[12][0]++, {
            ...order,
            status: newStatus
          }) :
          /* istanbul ignore next */
          (cov_1h7v02x77t().b[12][1]++, order);
        })
      };
    });
  }, []));
  const bulkUpdateStatus =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[48]++, (0, _react.useCallback)(async bulkData => {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[16]++;
    const response =
    /* istanbul ignore next */
    (cov_1h7v02x77t().s[49]++, await fetch('/api/admin/orders/bulk?operation=status_update', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(bulkData)
    }));
    const data =
    /* istanbul ignore next */
    (cov_1h7v02x77t().s[50]++, await response.json());
    /* istanbul ignore next */
    cov_1h7v02x77t().s[51]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1h7v02x77t().b[13][0]++;
      cov_1h7v02x77t().s[52]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_1h7v02x77t().b[14][0]++, data.error) ||
      /* istanbul ignore next */
      (cov_1h7v02x77t().b[14][1]++, 'Error en operación masiva'));
    } else
    /* istanbul ignore next */
    {
      cov_1h7v02x77t().b[13][1]++;
    }
    // Refrescar lista después de operación masiva
    cov_1h7v02x77t().s[53]++;
    await fetchOrders(state.filters);
    /* istanbul ignore next */
    cov_1h7v02x77t().s[54]++;
    return data.data;
  }, [state.filters, fetchOrders]));
  const exportOrders =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[55]++, (0, _react.useCallback)(async (format =
  /* istanbul ignore next */
  (cov_1h7v02x77t().b[15][0]++, 'csv'), filters) => {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[17]++;
    const response =
    /* istanbul ignore next */
    (cov_1h7v02x77t().s[56]++, await fetch('/api/admin/orders/bulk?operation=export', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        format,
        filters:
        /* istanbul ignore next */
        (cov_1h7v02x77t().b[16][0]++, filters) ||
        /* istanbul ignore next */
        (cov_1h7v02x77t().b[16][1]++, state.filters),
        include_items: true
      })
    }));
    const data =
    /* istanbul ignore next */
    (cov_1h7v02x77t().s[57]++, await response.json());
    /* istanbul ignore next */
    cov_1h7v02x77t().s[58]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1h7v02x77t().b[17][0]++;
      cov_1h7v02x77t().s[59]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_1h7v02x77t().b[18][0]++, data.error) ||
      /* istanbul ignore next */
      (cov_1h7v02x77t().b[18][1]++, 'Error al exportar órdenes'));
    } else
    /* istanbul ignore next */
    {
      cov_1h7v02x77t().b[17][1]++;
    }
    cov_1h7v02x77t().s[60]++;
    return data.data;
  }, [state.filters]));
  // ===================================
  // FUNCIONES DE FILTRADO Y PAGINACIÓN
  // ===================================
  const updateFilters =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[61]++, (0, _react.useCallback)(newFilters => {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[18]++;
    const updatedFilters =
    /* istanbul ignore next */
    (cov_1h7v02x77t().s[62]++, {
      ...state.filters,
      ...newFilters,
      page:
      /* istanbul ignore next */
      (cov_1h7v02x77t().b[19][0]++, newFilters.page) ||
      /* istanbul ignore next */
      (cov_1h7v02x77t().b[19][1]++, 1)
    });
    /* istanbul ignore next */
    cov_1h7v02x77t().s[63]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_1h7v02x77t().f[19]++;
      cov_1h7v02x77t().s[64]++;
      return {
        ...prev,
        filters: updatedFilters
      };
    });
    /* istanbul ignore next */
    cov_1h7v02x77t().s[65]++;
    fetchOrders(updatedFilters);
  }, [state.filters, fetchOrders]));
  const setPage =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[66]++, (0, _react.useCallback)(page => {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[20]++;
    cov_1h7v02x77t().s[67]++;
    updateFilters({
      page
    });
  }, [updateFilters]));
  const setSearch =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[68]++, (0, _react.useCallback)(search => {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[21]++;
    cov_1h7v02x77t().s[69]++;
    updateFilters({
      search,
      page: 1
    });
  }, [updateFilters]));
  const setStatus =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[70]++, (0, _react.useCallback)(status => {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[22]++;
    cov_1h7v02x77t().s[71]++;
    updateFilters({
      status,
      page: 1
    });
  }, [updateFilters]));
  const setPaymentStatus =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[72]++, (0, _react.useCallback)(payment_status => {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[23]++;
    cov_1h7v02x77t().s[73]++;
    updateFilters({
      payment_status,
      page: 1
    });
  }, [updateFilters]));
  const setSorting =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[74]++, (0, _react.useCallback)((sort_by, sort_order) => {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[24]++;
    cov_1h7v02x77t().s[75]++;
    updateFilters({
      sort_by,
      sort_order
    });
  }, [updateFilters]));
  const setDateRange =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[76]++, (0, _react.useCallback)((date_from, date_to) => {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[25]++;
    cov_1h7v02x77t().s[77]++;
    updateFilters({
      date_from,
      date_to,
      page: 1
    });
  }, [updateFilters]));
  const clearFilters =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[78]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[26]++;
    const defaultFilters =
    /* istanbul ignore next */
    (cov_1h7v02x77t().s[79]++, {
      page: 1,
      limit: 20,
      sort_by: 'created_at',
      sort_order: 'desc'
    });
    /* istanbul ignore next */
    cov_1h7v02x77t().s[80]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_1h7v02x77t().f[27]++;
      cov_1h7v02x77t().s[81]++;
      return {
        ...prev,
        filters: defaultFilters
      };
    });
    /* istanbul ignore next */
    cov_1h7v02x77t().s[82]++;
    fetchOrders(defaultFilters);
  }, [fetchOrders]));
  // ===================================
  // FUNCIONES DE UTILIDAD
  // ===================================
  const refresh =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[83]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[28]++;
    cov_1h7v02x77t().s[84]++;
    fetchOrders(state.filters);
  }, [state.filters, fetchOrders]));
  const getOrderById =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[85]++, (0, _react.useCallback)(orderId => {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[29]++;
    cov_1h7v02x77t().s[86]++;
    return state.orders.find(order => {
      /* istanbul ignore next */
      cov_1h7v02x77t().f[30]++;
      cov_1h7v02x77t().s[87]++;
      return order.id === orderId;
    });
  }, [state.orders]));
  const getOrdersByStatus =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[88]++, (0, _react.useCallback)(status => {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[31]++;
    cov_1h7v02x77t().s[89]++;
    return state.orders.filter(order => {
      /* istanbul ignore next */
      cov_1h7v02x77t().f[32]++;
      cov_1h7v02x77t().s[90]++;
      return order.status === status;
    });
  }, [state.orders]));
  // ===================================
  // FUNCIÓN DE VALIDACIÓN DE DATOS
  // ===================================
  const validateOrderTotal =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[91]++, (0, _react.useCallback)(total => {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[33]++;
    cov_1h7v02x77t().s[92]++;
    if (
    /* istanbul ignore next */
    (cov_1h7v02x77t().b[21][0]++, typeof total === 'number') &&
    /* istanbul ignore next */
    (cov_1h7v02x77t().b[21][1]++, !isNaN(total)) &&
    /* istanbul ignore next */
    (cov_1h7v02x77t().b[21][2]++, total >= 0)) {
      /* istanbul ignore next */
      cov_1h7v02x77t().b[20][0]++;
      cov_1h7v02x77t().s[93]++;
      return total;
    } else
    /* istanbul ignore next */
    {
      cov_1h7v02x77t().b[20][1]++;
    }
    cov_1h7v02x77t().s[94]++;
    console.warn('[useOrdersEnterprise] Invalid order total detected:', total);
    /* istanbul ignore next */
    cov_1h7v02x77t().s[95]++;
    return 0;
  }, []));
  const getOrderTotal =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[96]++, (0, _react.useCallback)(order => {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[34]++;
    // Manejar tanto 'total' como 'total_amount' para compatibilidad con mocks
    const total =
    /* istanbul ignore next */
    (cov_1h7v02x77t().s[97]++,
    /* istanbul ignore next */
    (cov_1h7v02x77t().b[22][0]++, order.total) ??
    /* istanbul ignore next */
    (cov_1h7v02x77t().b[22][1]++, order.total_amount));
    /* istanbul ignore next */
    cov_1h7v02x77t().s[98]++;
    return validateOrderTotal(total);
  }, [validateOrderTotal]));
  const getTotalRevenue =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[99]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[35]++;
    cov_1h7v02x77t().s[100]++;
    return state.orders.reduce((total, order) => {
      /* istanbul ignore next */
      cov_1h7v02x77t().f[36]++;
      const orderTotal =
      /* istanbul ignore next */
      (cov_1h7v02x77t().s[101]++, getOrderTotal(order));
      /* istanbul ignore next */
      cov_1h7v02x77t().s[102]++;
      return order.status !== 'cancelled' ?
      /* istanbul ignore next */
      (cov_1h7v02x77t().b[23][0]++, total + orderTotal) :
      /* istanbul ignore next */
      (cov_1h7v02x77t().b[23][1]++, total);
    }, 0);
  }, [state.orders, getOrderTotal]));
  const getAverageOrderValue =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[103]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[37]++;
    const validOrders =
    /* istanbul ignore next */
    (cov_1h7v02x77t().s[104]++, state.orders.filter(order => {
      /* istanbul ignore next */
      cov_1h7v02x77t().f[38]++;
      const total =
      /* istanbul ignore next */
      (cov_1h7v02x77t().s[105]++, getOrderTotal(order));
      /* istanbul ignore next */
      cov_1h7v02x77t().s[106]++;
      return /* istanbul ignore next */(cov_1h7v02x77t().b[24][0]++, order.status !== 'cancelled') &&
      /* istanbul ignore next */
      (cov_1h7v02x77t().b[24][1]++, total > 0);
    }));
    /* istanbul ignore next */
    cov_1h7v02x77t().s[107]++;
    if (validOrders.length === 0) {
      /* istanbul ignore next */
      cov_1h7v02x77t().b[25][0]++;
      cov_1h7v02x77t().s[108]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_1h7v02x77t().b[25][1]++;
    }
    const total =
    /* istanbul ignore next */
    (cov_1h7v02x77t().s[109]++, validOrders.reduce((sum, order) => {
      /* istanbul ignore next */
      cov_1h7v02x77t().f[39]++;
      cov_1h7v02x77t().s[110]++;
      return sum + getOrderTotal(order);
    }, 0));
    /* istanbul ignore next */
    cov_1h7v02x77t().s[111]++;
    return Math.round(total / validOrders.length * 100) / 100;
  }, [state.orders, getOrderTotal]));
  // ===================================
  // EFECTOS
  // ===================================
  /* istanbul ignore next */
  cov_1h7v02x77t().s[112]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[40]++;
    cov_1h7v02x77t().s[113]++;
    fetchOrders(state.filters);
  }, []); // Solo ejecutar una vez al montar
  // ===================================
  // RETURN DEL HOOK
  // ===================================
  /* istanbul ignore next */
  cov_1h7v02x77t().s[114]++;
  return {
    // Estado
    orders: state.orders,
    loading: state.loading,
    error: state.error,
    filters: state.filters,
    pagination: state.pagination,
    // Operaciones CRUD
    createOrder,
    updateOrder,
    changeOrderStatus,
    bulkUpdateStatus,
    exportOrders,
    // Filtrado y paginación
    updateFilters,
    setPage,
    setSearch,
    setStatus,
    setPaymentStatus,
    setSorting,
    setDateRange,
    clearFilters,
    // Utilidades
    refresh,
    getOrderById,
    getOrdersByStatus,
    getTotalRevenue,
    getAverageOrderValue,
    // Funciones de conveniencia
    hasNextPage: state.pagination.hasNextPage,
    hasPreviousPage: state.pagination.hasPreviousPage,
    totalOrders: state.pagination.total,
    currentPage: state.pagination.page,
    totalPages: state.pagination.totalPages
  };
}
function useOrderDetail(orderId) {
  /* istanbul ignore next */
  cov_1h7v02x77t().f[41]++;
  const [order, setOrder] =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[115]++, (0, _react.useState)(null));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[116]++, (0, _react.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[117]++, (0, _react.useState)(null));
  const fetchOrder =
  /* istanbul ignore next */
  (cov_1h7v02x77t().s[118]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[42]++;
    cov_1h7v02x77t().s[119]++;
    if (!orderId) {
      /* istanbul ignore next */
      cov_1h7v02x77t().b[26][0]++;
      cov_1h7v02x77t().s[120]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1h7v02x77t().b[26][1]++;
    }
    cov_1h7v02x77t().s[121]++;
    setLoading(true);
    /* istanbul ignore next */
    cov_1h7v02x77t().s[122]++;
    setError(null);
    /* istanbul ignore next */
    cov_1h7v02x77t().s[123]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1h7v02x77t().s[124]++, await fetch(`/api/admin/orders/${orderId}`));
      const data =
      /* istanbul ignore next */
      (cov_1h7v02x77t().s[125]++, await response.json());
      /* istanbul ignore next */
      cov_1h7v02x77t().s[126]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1h7v02x77t().b[27][0]++;
        cov_1h7v02x77t().s[127]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_1h7v02x77t().b[28][0]++, data.error) ||
        /* istanbul ignore next */
        (cov_1h7v02x77t().b[28][1]++, 'Error al cargar orden'));
      } else
      /* istanbul ignore next */
      {
        cov_1h7v02x77t().b[27][1]++;
      }
      cov_1h7v02x77t().s[128]++;
      setOrder(data.data.order);
    } catch (error) {
      /* istanbul ignore next */
      cov_1h7v02x77t().s[129]++;
      setError(error instanceof Error ?
      /* istanbul ignore next */
      (cov_1h7v02x77t().b[29][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1h7v02x77t().b[29][1]++, 'Error desconocido'));
    } finally {
      /* istanbul ignore next */
      cov_1h7v02x77t().s[130]++;
      setLoading(false);
    }
  }, [orderId]));
  /* istanbul ignore next */
  cov_1h7v02x77t().s[131]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1h7v02x77t().f[43]++;
    cov_1h7v02x77t().s[132]++;
    fetchOrder();
  }, [fetchOrder]);
  /* istanbul ignore next */
  cov_1h7v02x77t().s[133]++;
  return {
    order,
    loading,
    error,
    refresh: fetchOrder
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,