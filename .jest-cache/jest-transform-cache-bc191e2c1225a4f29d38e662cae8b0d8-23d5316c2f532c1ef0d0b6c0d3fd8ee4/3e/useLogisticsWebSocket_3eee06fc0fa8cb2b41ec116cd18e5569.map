{"version":3,"names":["useLogisticsAlerts","cov_1cq9tka7i9","f","s","useLogisticsWebSocket","useShipmentTracking","options","b","enabled","autoConnect","showNotifications","simulateInDevelopment","isConnected","setIsConnected","_react","useState","connectionState","setConnectionState","lastTrackingUpdate","setLastTrackingUpdate","lastAlert","setLastAlert","lastGeofenceEvent","setLastGeofenceEvent","alerts","setAlerts","wsRef","useRef","_logisticswebsocket","getLogisticsWebSocket","simulatorRef","queryClient","_reactquery","useQueryClient","useEffect","ws","current","handleConnected","_sonner","toast","success","handleDisconnected","warning","handleError","error","console","handleTrackingUpdate","update","invalidateQueries","queryKey","shipment_id","info","description","status","handleAlert","alert","prev","slice","toastFn","severity","type","message","handleGeofenceEvent","event","zone_name","event_type","on","off","process","env","NODE_ENV","LogisticsWebSocketSimulator","start","stop","connect","useCallback","disconnect","subscribeToShipment","shipmentId","log","unsubscribeFromShipment","subscribeToGeofence","zoneId","subscribeToAlerts","clearAlerts","trackingHistory","setTrackingHistory","currentLocation","filter","criticalAlerts","highAlerts","unreadAlerts","auto_resolve","totalAlerts","length","criticalCount","highCount","unreadCount"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useLogisticsWebSocket.ts"],"sourcesContent":["// =====================================================\r\n// HOOK: LOGISTICS WEBSOCKET ENTERPRISE\r\n// Descripción: Hook React para WebSocket tiempo real\r\n// Basado en: React Hooks + WebSocket + Context\r\n// =====================================================\r\n\r\n'use client';\r\n\r\nimport { useEffect, useState, useCallback, useRef } from 'react';\r\nimport { useQueryClient } from '@tanstack/react-query';\r\nimport { toast } from 'sonner';\r\nimport { \r\n  getLogisticsWebSocket, \r\n  LogisticsWebSocketSimulator,\r\n  TrackingUpdate,\r\n  GeofenceEvent,\r\n  LogisticsAlert \r\n} from '@/lib/websockets/logistics-websocket';\r\n\r\n// =====================================================\r\n// INTERFACES\r\n// =====================================================\r\n\r\nexport interface UseLogisticsWebSocketOptions {\r\n  enabled?: boolean;\r\n  autoConnect?: boolean;\r\n  showNotifications?: boolean;\r\n  simulateInDevelopment?: boolean;\r\n}\r\n\r\nexport interface UseLogisticsWebSocketReturn {\r\n  isConnected: boolean;\r\n  connectionState: 'connecting' | 'connected' | 'disconnected' | 'error';\r\n  connect: () => Promise<void>;\r\n  disconnect: () => void;\r\n  subscribeToShipment: (shipmentId: number) => void;\r\n  unsubscribeFromShipment: (shipmentId: number) => void;\r\n  subscribeToGeofence: (zoneId: string) => void;\r\n  subscribeToAlerts: () => void;\r\n  lastTrackingUpdate: TrackingUpdate | null;\r\n  lastAlert: LogisticsAlert | null;\r\n  lastGeofenceEvent: GeofenceEvent | null;\r\n  alerts: LogisticsAlert[];\r\n  clearAlerts: () => void;\r\n}\r\n\r\n// =====================================================\r\n// HOOK PRINCIPAL\r\n// =====================================================\r\n\r\nexport function useLogisticsWebSocket(\r\n  options: UseLogisticsWebSocketOptions = {}\r\n): UseLogisticsWebSocketReturn {\r\n  \r\n  const {\r\n    enabled = true,\r\n    autoConnect = true,\r\n    showNotifications = true,\r\n    simulateInDevelopment = true\r\n  } = options;\r\n  \r\n  // Estados\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [connectionState, setConnectionState] = useState<'connecting' | 'connected' | 'disconnected' | 'error'>('disconnected');\r\n  const [lastTrackingUpdate, setLastTrackingUpdate] = useState<TrackingUpdate | null>(null);\r\n  const [lastAlert, setLastAlert] = useState<LogisticsAlert | null>(null);\r\n  const [lastGeofenceEvent, setLastGeofenceEvent] = useState<GeofenceEvent | null>(null);\r\n  const [alerts, setAlerts] = useState<LogisticsAlert[]>([]);\r\n  \r\n  // Referencias\r\n  const wsRef = useRef(getLogisticsWebSocket());\r\n  const simulatorRef = useRef<LogisticsWebSocketSimulator | null>(null);\r\n  const queryClient = useQueryClient();\r\n  \r\n  // =====================================================\r\n  // CONFIGURACIÓN DE EVENTOS\r\n  // =====================================================\r\n  \r\n  useEffect(() => {\r\n    if (!enabled) {return;}\r\n    \r\n    const ws = wsRef.current;\r\n    \r\n    // Eventos de conexión\r\n    const handleConnected = () => {\r\n      setIsConnected(true);\r\n      setConnectionState('connected');\r\n      if (showNotifications) {\r\n        toast.success('Conectado al sistema de tracking en tiempo real');\r\n      }\r\n    };\r\n    \r\n    const handleDisconnected = () => {\r\n      setIsConnected(false);\r\n      setConnectionState('disconnected');\r\n      if (showNotifications) {\r\n        toast.warning('Desconectado del sistema de tracking');\r\n      }\r\n    };\r\n    \r\n    const handleError = (error: any) => {\r\n      setConnectionState('error');\r\n      console.error('WebSocket error:', error);\r\n      if (showNotifications) {\r\n        toast.error('Error en la conexión de tiempo real');\r\n      }\r\n    };\r\n    \r\n    // Eventos de datos\r\n    const handleTrackingUpdate = (update: TrackingUpdate) => {\r\n      setLastTrackingUpdate(update);\r\n      \r\n      // Invalidar cache de tracking para el shipment\r\n      queryClient.invalidateQueries({ \r\n        queryKey: ['admin', 'logistics', 'tracking', update.shipment_id] \r\n      });\r\n      \r\n      // Invalidar dashboard si es necesario\r\n      queryClient.invalidateQueries({ \r\n        queryKey: ['admin', 'logistics', 'dashboard'] \r\n      });\r\n      \r\n      if (showNotifications) {\r\n        toast.info(`Actualización de envío #${update.shipment_id}`, {\r\n          description: `Estado: ${update.status}`\r\n        });\r\n      }\r\n    };\r\n    \r\n    const handleAlert = (alert: LogisticsAlert) => {\r\n      setLastAlert(alert);\r\n      setAlerts(prev => [alert, ...prev.slice(0, 49)]); // Mantener últimas 50\r\n      \r\n      if (showNotifications) {\r\n        const toastFn = alert.severity === 'critical' ? toast.error :\r\n                       alert.severity === 'high' ? toast.warning :\r\n                       toast.info;\r\n        \r\n        toastFn(`Alerta: ${alert.type}`, {\r\n          description: alert.message\r\n        });\r\n      }\r\n    };\r\n    \r\n    const handleGeofenceEvent = (event: GeofenceEvent) => {\r\n      setLastGeofenceEvent(event);\r\n      \r\n      // Invalidar cache relacionado\r\n      queryClient.invalidateQueries({ \r\n        queryKey: ['admin', 'logistics', 'tracking', event.shipment_id] \r\n      });\r\n      \r\n      if (showNotifications) {\r\n        toast.info(`Evento de zona: ${event.zone_name}`, {\r\n          description: `Envío #${event.shipment_id} ${event.event_type === 'enter' ? 'entró' : 'salió'}`\r\n        });\r\n      }\r\n    };\r\n    \r\n    // Registrar eventos\r\n    ws.on('connected', handleConnected);\r\n    ws.on('disconnected', handleDisconnected);\r\n    ws.on('error', handleError);\r\n    ws.on('tracking_update', handleTrackingUpdate);\r\n    ws.on('alert', handleAlert);\r\n    ws.on('geofence_event', handleGeofenceEvent);\r\n    \r\n    // Cleanup\r\n    return () => {\r\n      ws.off('connected', handleConnected);\r\n      ws.off('disconnected', handleDisconnected);\r\n      ws.off('error', handleError);\r\n      ws.off('tracking_update', handleTrackingUpdate);\r\n      ws.off('alert', handleAlert);\r\n      ws.off('geofence_event', handleGeofenceEvent);\r\n    };\r\n  }, [enabled, showNotifications, queryClient]);\r\n  \r\n  // =====================================================\r\n  // SIMULADOR PARA DESARROLLO\r\n  // =====================================================\r\n  \r\n  useEffect(() => {\r\n    if (!enabled || !simulateInDevelopment || process.env.NODE_ENV !== 'development') {\r\n      return;\r\n    }\r\n    \r\n    // Crear simulador si no existe\r\n    if (!simulatorRef.current) {\r\n      simulatorRef.current = new LogisticsWebSocketSimulator();\r\n      \r\n      // Conectar eventos del simulador a los handlers\r\n      simulatorRef.current.on('tracking_update', (update: TrackingUpdate) => {\r\n        setLastTrackingUpdate(update);\r\n        queryClient.invalidateQueries({ \r\n          queryKey: ['admin', 'logistics', 'tracking', update.shipment_id] \r\n        });\r\n      });\r\n      \r\n      simulatorRef.current.on('alert', (alert: LogisticsAlert) => {\r\n        setLastAlert(alert);\r\n        setAlerts(prev => [alert, ...prev.slice(0, 49)]);\r\n        \r\n        if (showNotifications) {\r\n          toast.info(`🎭 Simulación - ${alert.type}`, {\r\n            description: alert.message\r\n          });\r\n        }\r\n      });\r\n      \r\n      simulatorRef.current.on('geofence_event', (event: GeofenceEvent) => {\r\n        setLastGeofenceEvent(event);\r\n        queryClient.invalidateQueries({ \r\n          queryKey: ['admin', 'logistics', 'tracking', event.shipment_id] \r\n        });\r\n      });\r\n    }\r\n    \r\n    // Iniciar simulador\r\n    simulatorRef.current.start();\r\n    setIsConnected(true);\r\n    setConnectionState('connected');\r\n    \r\n    if (showNotifications) {\r\n      toast.success('🎭 Simulador de WebSocket iniciado');\r\n    }\r\n    \r\n    return () => {\r\n      if (simulatorRef.current) {\r\n        simulatorRef.current.stop();\r\n      }\r\n    };\r\n  }, [enabled, simulateInDevelopment, showNotifications, queryClient]);\r\n  \r\n  // =====================================================\r\n  // AUTO-CONEXIÓN\r\n  // =====================================================\r\n  \r\n  useEffect(() => {\r\n    if (enabled && autoConnect && process.env.NODE_ENV !== 'development') {\r\n      connect();\r\n    }\r\n  }, [enabled, autoConnect]);\r\n  \r\n  // =====================================================\r\n  // FUNCIONES PÚBLICAS\r\n  // =====================================================\r\n  \r\n  const connect = useCallback(async () => {\r\n    if (process.env.NODE_ENV === 'development' && simulateInDevelopment) {\r\n      // En desarrollo usar simulador\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setConnectionState('connecting');\r\n      await wsRef.current.connect();\r\n    } catch (error) {\r\n      setConnectionState('error');\r\n      throw error;\r\n    }\r\n  }, [simulateInDevelopment]);\r\n  \r\n  const disconnect = useCallback(() => {\r\n    if (process.env.NODE_ENV === 'development' && simulatorRef.current) {\r\n      simulatorRef.current.stop();\r\n      setIsConnected(false);\r\n      setConnectionState('disconnected');\r\n      return;\r\n    }\r\n    \r\n    wsRef.current.disconnect();\r\n    setIsConnected(false);\r\n    setConnectionState('disconnected');\r\n  }, []);\r\n  \r\n  const subscribeToShipment = useCallback((shipmentId: number) => {\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log(`🎭 Simulando suscripción a envío ${shipmentId}`);\r\n      return;\r\n    }\r\n    \r\n    wsRef.current.subscribeToShipment(shipmentId);\r\n  }, []);\r\n  \r\n  const unsubscribeFromShipment = useCallback((shipmentId: number) => {\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log(`🎭 Simulando desuscripción de envío ${shipmentId}`);\r\n      return;\r\n    }\r\n    \r\n    wsRef.current.unsubscribeFromShipment(shipmentId);\r\n  }, []);\r\n  \r\n  const subscribeToGeofence = useCallback((zoneId: string) => {\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log(`🎭 Simulando suscripción a zona ${zoneId}`);\r\n      return;\r\n    }\r\n    \r\n    wsRef.current.subscribeToGeofence(zoneId);\r\n  }, []);\r\n  \r\n  const subscribeToAlerts = useCallback(() => {\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log('🎭 Simulando suscripción a alertas');\r\n      return;\r\n    }\r\n    \r\n    wsRef.current.subscribeToAlerts();\r\n  }, []);\r\n  \r\n  const clearAlerts = useCallback(() => {\r\n    setAlerts([]);\r\n  }, []);\r\n  \r\n  return {\r\n    isConnected,\r\n    connectionState,\r\n    connect,\r\n    disconnect,\r\n    subscribeToShipment,\r\n    unsubscribeFromShipment,\r\n    subscribeToGeofence,\r\n    subscribeToAlerts,\r\n    lastTrackingUpdate,\r\n    lastAlert,\r\n    lastGeofenceEvent,\r\n    alerts,\r\n    clearAlerts\r\n  };\r\n}\r\n\r\n// =====================================================\r\n// HOOK PARA TRACKING ESPECÍFICO\r\n// =====================================================\r\n\r\nexport function useShipmentTracking(shipmentId: number) {\r\n  const {\r\n    isConnected,\r\n    subscribeToShipment,\r\n    unsubscribeFromShipment,\r\n    lastTrackingUpdate\r\n  } = useLogisticsWebSocket({\r\n    simulateInDevelopment: false // Deshabilitado para evitar notificaciones persistentes\r\n  });\r\n  \r\n  const [trackingHistory, setTrackingHistory] = useState<TrackingUpdate[]>([]);\r\n  \r\n  // Suscribirse al envío específico\r\n  useEffect(() => {\r\n    if (isConnected && shipmentId) {\r\n      subscribeToShipment(shipmentId);\r\n      \r\n      return () => {\r\n        unsubscribeFromShipment(shipmentId);\r\n      };\r\n    }\r\n  }, [isConnected, shipmentId, subscribeToShipment, unsubscribeFromShipment]);\r\n  \r\n  // Actualizar historial cuando llegan nuevas actualizaciones\r\n  useEffect(() => {\r\n    if (lastTrackingUpdate && lastTrackingUpdate.shipment_id === shipmentId) {\r\n      setTrackingHistory(prev => [lastTrackingUpdate, ...prev.slice(0, 99)]); // Últimas 100\r\n    }\r\n  }, [lastTrackingUpdate, shipmentId]);\r\n  \r\n  return {\r\n    isConnected,\r\n    shipmentId,\r\n    currentLocation: lastTrackingUpdate?.shipment_id === shipmentId ? lastTrackingUpdate : null,\r\n    trackingHistory: trackingHistory.filter(update => update.shipment_id === shipmentId)\r\n  };\r\n}\r\n\r\n// =====================================================\r\n// HOOK PARA ALERTAS\r\n// =====================================================\r\n\r\nexport function useLogisticsAlerts() {\r\n  const {\r\n    isConnected,\r\n    subscribeToAlerts,\r\n    alerts,\r\n    clearAlerts,\r\n    lastAlert\r\n  } = useLogisticsWebSocket({\r\n    simulateInDevelopment: false // Deshabilitado para evitar notificaciones persistentes\r\n  });\r\n  \r\n  // Auto-suscribirse a alertas\r\n  useEffect(() => {\r\n    if (isConnected) {\r\n      subscribeToAlerts();\r\n    }\r\n  }, [isConnected, subscribeToAlerts]);\r\n  \r\n  // Filtrar alertas por severidad\r\n  const criticalAlerts = alerts.filter(alert => alert.severity === 'critical');\r\n  const highAlerts = alerts.filter(alert => alert.severity === 'high');\r\n  const unreadAlerts = alerts.filter(alert => !alert.auto_resolve);\r\n  \r\n  return {\r\n    isConnected,\r\n    alerts,\r\n    criticalAlerts,\r\n    highAlerts,\r\n    unreadAlerts,\r\n    lastAlert,\r\n    clearAlerts,\r\n    totalAlerts: alerts.length,\r\n    criticalCount: criticalAlerts.length,\r\n    highCount: highAlerts.length,\r\n    unreadCount: unreadAlerts.length\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}