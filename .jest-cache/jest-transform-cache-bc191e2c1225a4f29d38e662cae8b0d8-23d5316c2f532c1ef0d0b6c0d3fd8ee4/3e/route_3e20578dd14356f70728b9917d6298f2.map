{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\routes\\[id]\\route.ts"],"sourcesContent":["/**\n * API para obtener detalles específicos de una ruta asignada al driver\n * GET /api/driver/routes/[id]\n */\n\nimport { NextRequest, NextResponse } from 'next/server'\nimport { auth } from '@/auth'\nimport { createClient } from '@/lib/integrations/supabase/server'\n\nexport async function GET(request: NextRequest, { params }: { params: { id: string } }) {\n  try {\n    const routeId = params.id\n\n    // Para pruebas, devolver datos de ejemplo\n    const routeData = {\n      id: routeId,\n      name: `Ruta de Entrega #${routeId}`,\n      total_distance: 35.6,\n      estimated_time: 2640, // 44 minutos en segundos\n      status: 'active',\n      shipments: [\n        {\n          id: routeId,\n          orderNumber: `#${routeId}`,\n          tracking_number: `TRK-${routeId}`,\n          customer_name: 'Cliente de Prueba',\n          customer_phone: '+54 351 123-4567',\n          destination: {\n            address: 'Av. Colón 1234, Piso 2, Depto A, Córdoba, Córdoba 5000',\n            city: 'Córdoba',\n            postal_code: '5000',\n            coordinates: {\n              lat: -31.4084841,\n              lng: -64.1917654,\n            },\n          },\n          items: [\n            {\n              name: 'Producto de Prueba',\n              quantity: 1,\n              weight: 1,\n            },\n          ],\n          status: 'confirmed',\n          estimated_delivery_time: '14:00 - 18:00',\n          requires_signature: false,\n        },\n      ],\n      waypoints: [\n        {\n          lat: -31.4084841,\n          lng: -64.1917654,\n        },\n      ],\n      driver: {\n        id: 'driver-1',\n        name: 'Santiago Martinez',\n      },\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString(),\n    }\n\n    return NextResponse.json(routeData)\n  } catch (error) {\n    console.error('Error in driver route API:', error)\n    return NextResponse.json({ error: 'Error interno del servidor' }, { status: 500 })\n  }\n}\n\nexport async function PUT(request: NextRequest, { params }: { params: { id: string } }) {\n  try {\n    // Verificar autenticación\n    const session = await auth()\n\n    if (!session?.user?.email) {\n      return NextResponse.json({ error: 'No autorizado' }, { status: 401 })\n    }\n\n    const routeId = params.id\n    const body = await request.json()\n    const { status, shipments, current_shipment_index } = body\n\n    const supabase = await createClient()\n\n    // Obtener información del driver\n    const { data: driver, error: driverError } = await supabase\n      .from('drivers')\n      .select('id')\n      .eq('email', session.user.email)\n      .single()\n\n    if (driverError || !driver) {\n      return NextResponse.json({ error: 'Driver no encontrado' }, { status: 404 })\n    }\n\n    // Actualizar la ruta\n    const updateData: any = {\n      updated_at: new Date().toISOString(),\n    }\n\n    if (status) updateData.status = status\n    if (shipments) updateData.shipments = shipments\n\n    const { data: updatedRoute, error: updateError } = await supabase\n      .from('optimized_routes')\n      .update(updateData)\n      .eq('id', routeId)\n      .eq('driver_id', driver.id)\n      .select()\n      .single()\n\n    if (updateError) {\n      console.error('Error updating route:', updateError)\n      return NextResponse.json({ error: 'Error actualizando ruta' }, { status: 500 })\n    }\n\n    return NextResponse.json(updatedRoute)\n  } catch (error) {\n    console.error('Error in driver route update API:', error)\n    return NextResponse.json({ error: 'Error interno del servidor' }, { status: 500 })\n  }\n}\n"],"names":["GET","PUT","request","params","routeId","id","routeData","name","total_distance","estimated_time","status","shipments","orderNumber","tracking_number","customer_name","customer_phone","destination","address","city","postal_code","coordinates","lat","lng","items","quantity","weight","estimated_delivery_time","requires_signature","waypoints","driver","created_at","Date","toISOString","updated_at","NextResponse","json","error","console","session","auth","user","email","body","current_shipment_index","supabase","createClient","data","driverError","from","select","eq","single","updateData","updatedRoute","updateError","update"],"mappings":"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"}