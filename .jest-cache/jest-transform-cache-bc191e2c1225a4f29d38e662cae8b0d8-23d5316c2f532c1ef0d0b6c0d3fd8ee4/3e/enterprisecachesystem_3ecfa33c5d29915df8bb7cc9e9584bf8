b2d34db5ebe4daf93ca55d112686937b
/**
 * Sistema Enterprise de CachÃ© Inteligente
 * Extiende el cache manager existente con funcionalidades enterprise avanzadas
 */"use strict";

/* istanbul ignore next */
function cov_26itzol5jn() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\optimization\\enterprise-cache-system.ts";
  var hash = "b6246bd3655729f45a02113207426f8258461c53";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\optimization\\enterprise-cache-system.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 27,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 40
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 37
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 37
        }
      },
      "8": {
        start: {
          line: 28,
          column: 22
        },
        end: {
          line: 28,
          column: 49
        }
      },
      "9": {
        start: {
          line: 29,
          column: 15
        },
        end: {
          line: 29,
          column: 47
        }
      },
      "10": {
        start: {
          line: 30,
          column: 31
        },
        end: {
          line: 30,
          column: 77
        }
      },
      "11": {
        start: {
          line: 31,
          column: 33
        },
        end: {
          line: 114,
          column: 1
        }
      },
      "12": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 33
        }
      },
      "13": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 42
        }
      },
      "14": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 36
        }
      },
      "15": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 35
        }
      },
      "16": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "17": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 73
        }
      },
      "18": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 46
        }
      },
      "19": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "20": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 19
        }
      },
      "21": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "22": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 46
        }
      },
      "23": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 41
        }
      },
      "24": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 41
        }
      },
      "25": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 38
        }
      },
      "26": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 81
        }
      },
      "27": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 84
        }
      },
      "28": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 24
        }
      },
      "29": {
        start: {
          line: 151,
          column: 26
        },
        end: {
          line: 151,
          column: 36
        }
      },
      "30": {
        start: {
          line: 152,
          column: 24
        },
        end: {
          line: 152,
          column: 53
        }
      },
      "31": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "32": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 157,
          column: 13
        }
      },
      "33": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 58
        }
      },
      "34": {
        start: {
          line: 159,
          column: 27
        },
        end: {
          line: 159,
          column: 76
        }
      },
      "35": {
        start: {
          line: 160,
          column: 33
        },
        end: {
          line: 160,
          column: 55
        }
      },
      "36": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 164,
          column: 13
        }
      },
      "37": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 163,
          column: 75
        }
      },
      "38": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 168,
          column: 13
        }
      },
      "39": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 167,
          column: 84
        }
      },
      "40": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 26
        }
      },
      "41": {
        start: {
          line: 171,
          column: 33
        },
        end: {
          line: 171,
          column: 55
        }
      },
      "42": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 175,
          column: 13
        }
      },
      "43": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 174,
          column: 63
        }
      },
      "44": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 69
        }
      },
      "45": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 24
        }
      },
      "46": {
        start: {
          line: 183,
          column: 26
        },
        end: {
          line: 183,
          column: 36
        }
      },
      "47": {
        start: {
          line: 184,
          column: 24
        },
        end: {
          line: 184,
          column: 53
        }
      },
      "48": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 219,
          column: 9
        }
      },
      "49": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 189,
          column: 13
        }
      },
      "50": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 188,
          column: 63
        }
      },
      "51": {
        start: {
          line: 191,
          column: 33
        },
        end: {
          line: 191,
          column: 38
        }
      },
      "52": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 194,
          column: 13
        }
      },
      "53": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 193,
          column: 63
        }
      },
      "54": {
        start: {
          line: 196,
          column: 28
        },
        end: {
          line: 196,
          column: 93
        }
      },
      "55": {
        start: {
          line: 197,
          column: 33
        },
        end: {
          line: 197,
          column: 55
        }
      },
      "56": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 201,
          column: 13
        }
      },
      "57": {
        start: {
          line: 200,
          column: 16
        },
        end: {
          line: 200,
          column: 70
        }
      },
      "58": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 205,
          column: 13
        }
      },
      "59": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 204,
          column: 76
        }
      },
      "60": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 209,
          column: 13
        }
      },
      "61": {
        start: {
          line: 208,
          column: 16
        },
        end: {
          line: 208,
          column: 89
        }
      },
      "62": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 27
        }
      },
      "63": {
        start: {
          line: 212,
          column: 33
        },
        end: {
          line: 212,
          column: 55
        }
      },
      "64": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 216,
          column: 13
        }
      },
      "65": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 215,
          column: 63
        }
      },
      "66": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 69
        }
      },
      "67": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 25
        }
      },
      "68": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 261,
          column: 9
        }
      },
      "69": {
        start: {
          line: 225,
          column: 33
        },
        end: {
          line: 225,
          column: 70
        }
      },
      "70": {
        start: {
          line: 227,
          column: 37
        },
        end: {
          line: 227,
          column: 88
        }
      },
      "71": {
        start: {
          line: 227,
          column: 61
        },
        end: {
          line: 227,
          column: 87
        }
      },
      "72": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 48
        }
      },
      "73": {
        start: {
          line: 230,
          column: 38
        },
        end: {
          line: 236,
          column: 13
        }
      },
      "74": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 121
        }
      },
      "75": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 255,
          column: 13
        }
      },
      "76": {
        start: {
          line: 240,
          column: 16
        },
        end: {
          line: 254,
          column: 28
        }
      },
      "77": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 110
        }
      },
      "78": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 257,
          column: 32
        }
      },
      "79": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 259,
          column: 78
        }
      },
      "80": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 260,
          column: 22
        }
      },
      "81": {
        start: {
          line: 266,
          column: 22
        },
        end: {
          line: 266,
          column: 87
        }
      },
      "82": {
        start: {
          line: 267,
          column: 26
        },
        end: {
          line: 274,
          column: 9
        }
      },
      "83": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 275,
          column: 46
        }
      },
      "84": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 299,
          column: 9
        }
      },
      "85": {
        start: {
          line: 277,
          column: 35
        },
        end: {
          line: 290,
          column: 14
        }
      },
      "86": {
        start: {
          line: 278,
          column: 16
        },
        end: {
          line: 289,
          column: 17
        }
      },
      "87": {
        start: {
          line: 280,
          column: 37
        },
        end: {
          line: 280,
          column: 64
        }
      },
      "88": {
        start: {
          line: 281,
          column: 20
        },
        end: {
          line: 283,
          column: 21
        }
      },
      "89": {
        start: {
          line: 282,
          column: 24
        },
        end: {
          line: 282,
          column: 31
        }
      },
      "90": {
        start: {
          line: 285,
          column: 33
        },
        end: {
          line: 285,
          column: 55
        }
      },
      "91": {
        start: {
          line: 286,
          column: 20
        },
        end: {
          line: 286,
          column: 54
        }
      },
      "92": {
        start: {
          line: 288,
          column: 20
        },
        end: {
          line: 288,
          column: 91
        }
      },
      "93": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 46
        }
      },
      "94": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 43
        }
      },
      "95": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 294,
          column: 134
        }
      },
      "96": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 295,
          column: 87
        }
      },
      "97": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 40
        }
      },
      "98": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 72
        }
      },
      "99": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 304,
          column: 48
        }
      },
      "100": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 309,
          column: 58
        }
      },
      "101": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 314,
          column: 52
        }
      },
      "102": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 320,
          column: 41
        }
      },
      "103": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 326,
          column: 9
        }
      },
      "104": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 325,
          column: 73
        }
      },
      "105": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 332,
          column: 9
        }
      },
      "106": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 331,
          column: 72
        }
      },
      "107": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 347,
          column: 9
        }
      },
      "108": {
        start: {
          line: 338,
          column: 31
        },
        end: {
          line: 338,
          column: 51
        }
      },
      "109": {
        start: {
          line: 339,
          column: 28
        },
        end: {
          line: 339,
          column: 70
        }
      },
      "110": {
        start: {
          line: 340,
          column: 12
        },
        end: {
          line: 343,
          column: 14
        }
      },
      "111": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 345,
          column: 79
        }
      },
      "112": {
        start: {
          line: 346,
          column: 12
        },
        end: {
          line: 346,
          column: 24
        }
      },
      "113": {
        start: {
          line: 350,
          column: 25
        },
        end: {
          line: 359,
          column: 9
        }
      },
      "114": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 364,
          column: 9
        }
      },
      "115": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 361,
          column: 28
        }
      },
      "116": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 363,
          column: 30
        }
      },
      "117": {
        start: {
          line: 365,
          column: 30
        },
        end: {
          line: 365,
          column: 61
        }
      },
      "118": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 366,
          column: 81
        }
      },
      "119": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 367,
          column: 81
        }
      },
      "120": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 368,
          column: 55
        }
      },
      "121": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 369,
          column: 40
        }
      },
      "122": {
        start: {
          line: 372,
          column: 25
        },
        end: {
          line: 381,
          column: 9
        }
      },
      "123": {
        start: {
          line: 382,
          column: 8
        },
        end: {
          line: 382,
          column: 81
        }
      },
      "124": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 383,
          column: 55
        }
      },
      "125": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 386,
          column: 9
        }
      },
      "126": {
        start: {
          line: 385,
          column: 12
        },
        end: {
          line: 385,
          column: 30
        }
      },
      "127": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 387,
          column: 40
        }
      },
      "128": {
        start: {
          line: 390,
          column: 25
        },
        end: {
          line: 399,
          column: 9
        }
      },
      "129": {
        start: {
          line: 400,
          column: 8
        },
        end: {
          line: 400,
          column: 26
        }
      },
      "130": {
        start: {
          line: 401,
          column: 8
        },
        end: {
          line: 401,
          column: 81
        }
      },
      "131": {
        start: {
          line: 402,
          column: 8
        },
        end: {
          line: 402,
          column: 55
        }
      },
      "132": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 403,
          column: 40
        }
      },
      "133": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 424,
          column: 9
        }
      },
      "134": {
        start: {
          line: 407,
          column: 12
        },
        end: {
          line: 421,
          column: 24
        }
      },
      "135": {
        start: {
          line: 423,
          column: 12
        },
        end: {
          line: 423,
          column: 82
        }
      },
      "136": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 452,
          column: 9
        }
      },
      "137": {
        start: {
          line: 429,
          column: 25
        },
        end: {
          line: 429,
          column: 27
        }
      },
      "138": {
        start: {
          line: 430,
          column: 27
        },
        end: {
          line: 430,
          column: 54
        }
      },
      "139": {
        start: {
          line: 431,
          column: 12
        },
        end: {
          line: 447,
          column: 13
        }
      },
      "140": {
        start: {
          line: 432,
          column: 31
        },
        end: {
          line: 435,
          column: 18
        }
      },
      "141": {
        start: {
          line: 436,
          column: 16
        },
        end: {
          line: 446,
          column: 19
        }
      },
      "142": {
        start: {
          line: 437,
          column: 20
        },
        end: {
          line: 439,
          column: 23
        }
      },
      "143": {
        start: {
          line: 438,
          column: 24
        },
        end: {
          line: 438,
          column: 49
        }
      },
      "144": {
        start: {
          line: 440,
          column: 20
        },
        end: {
          line: 442,
          column: 23
        }
      },
      "145": {
        start: {
          line: 441,
          column: 24
        },
        end: {
          line: 441,
          column: 38
        }
      },
      "146": {
        start: {
          line: 443,
          column: 20
        },
        end: {
          line: 445,
          column: 23
        }
      },
      "147": {
        start: {
          line: 444,
          column: 24
        },
        end: {
          line: 444,
          column: 38
        }
      },
      "148": {
        start: {
          line: 448,
          column: 12
        },
        end: {
          line: 448,
          column: 24
        }
      },
      "149": {
        start: {
          line: 450,
          column: 12
        },
        end: {
          line: 450,
          column: 86
        }
      },
      "150": {
        start: {
          line: 451,
          column: 12
        },
        end: {
          line: 451,
          column: 22
        }
      },
      "151": {
        start: {
          line: 457,
          column: 8
        },
        end: {
          line: 461,
          column: 17
        }
      },
      "152": {
        start: {
          line: 458,
          column: 12
        },
        end: {
          line: 460,
          column: 13
        }
      },
      "153": {
        start: {
          line: 459,
          column: 16
        },
        end: {
          line: 459,
          column: 68
        }
      },
      "154": {
        start: {
          line: 466,
          column: 8
        },
        end: {
          line: 466,
          column: 66
        }
      },
      "155": {
        start: {
          line: 470,
          column: 8
        },
        end: {
          line: 478,
          column: 27
        }
      },
      "156": {
        start: {
          line: 471,
          column: 31
        },
        end: {
          line: 471,
          column: 58
        }
      },
      "157": {
        start: {
          line: 472,
          column: 12
        },
        end: {
          line: 477,
          column: 13
        }
      },
      "158": {
        start: {
          line: 473,
          column: 39
        },
        end: {
          line: 473,
          column: 77
        }
      },
      "159": {
        start: {
          line: 474,
          column: 16
        },
        end: {
          line: 476,
          column: 17
        }
      },
      "160": {
        start: {
          line: 475,
          column: 20
        },
        end: {
          line: 475,
          column: 45
        }
      },
      "161": {
        start: {
          line: 482,
          column: 8
        },
        end: {
          line: 488,
          column: 26
        }
      },
      "162": {
        start: {
          line: 483,
          column: 32
        },
        end: {
          line: 483,
          column: 53
        }
      },
      "163": {
        start: {
          line: 484,
          column: 12
        },
        end: {
          line: 487,
          column: 13
        }
      },
      "164": {
        start: {
          line: 485,
          column: 16
        },
        end: {
          line: 485,
          column: 92
        }
      },
      "165": {
        start: {
          line: 491,
          column: 30
        },
        end: {
          line: 491,
          column: 65
        }
      },
      "166": {
        start: {
          line: 492,
          column: 29
        },
        end: {
          line: 532,
          column: 1
        }
      },
      "167": {
        start: {
          line: 496,
          column: 23
        },
        end: {
          line: 496,
          column: 108
        }
      },
      "168": {
        start: {
          line: 497,
          column: 8
        },
        end: {
          line: 499,
          column: 9
        }
      },
      "169": {
        start: {
          line: 498,
          column: 12
        },
        end: {
          line: 498,
          column: 26
        }
      },
      "170": {
        start: {
          line: 500,
          column: 21
        },
        end: {
          line: 500,
          column: 36
        }
      },
      "171": {
        start: {
          line: 501,
          column: 8
        },
        end: {
          line: 501,
          column: 100
        }
      },
      "172": {
        start: {
          line: 502,
          column: 8
        },
        end: {
          line: 502,
          column: 20
        }
      },
      "173": {
        start: {
          line: 507,
          column: 23
        },
        end: {
          line: 507,
          column: 100
        }
      },
      "174": {
        start: {
          line: 508,
          column: 8
        },
        end: {
          line: 510,
          column: 9
        }
      },
      "175": {
        start: {
          line: 509,
          column: 12
        },
        end: {
          line: 509,
          column: 26
        }
      },
      "176": {
        start: {
          line: 511,
          column: 21
        },
        end: {
          line: 511,
          column: 36
        }
      },
      "177": {
        start: {
          line: 512,
          column: 8
        },
        end: {
          line: 512,
          column: 92
        }
      },
      "178": {
        start: {
          line: 513,
          column: 8
        },
        end: {
          line: 513,
          column: 20
        }
      },
      "179": {
        start: {
          line: 518,
          column: 23
        },
        end: {
          line: 518,
          column: 104
        }
      },
      "180": {
        start: {
          line: 519,
          column: 8
        },
        end: {
          line: 521,
          column: 9
        }
      },
      "181": {
        start: {
          line: 520,
          column: 12
        },
        end: {
          line: 520,
          column: 26
        }
      },
      "182": {
        start: {
          line: 522,
          column: 21
        },
        end: {
          line: 522,
          column: 36
        }
      },
      "183": {
        start: {
          line: 523,
          column: 8
        },
        end: {
          line: 523,
          column: 96
        }
      },
      "184": {
        start: {
          line: 524,
          column: 8
        },
        end: {
          line: 524,
          column: 20
        }
      },
      "185": {
        start: {
          line: 529,
          column: 37
        },
        end: {
          line: 529,
          column: 122
        }
      },
      "186": {
        start: {
          line: 529,
          column: 61
        },
        end: {
          line: 529,
          column: 121
        }
      },
      "187": {
        start: {
          line: 530,
          column: 8
        },
        end: {
          line: 530,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 36
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 33
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 32
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 33
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        loc: {
          start: {
            line: 116,
            column: 17
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 116
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        },
        loc: {
          start: {
            line: 122,
            column: 25
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 122
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 130,
            column: 6
          },
          end: {
            line: 130,
            column: 7
          }
        },
        loc: {
          start: {
            line: 130,
            column: 25
          },
          end: {
            line: 147,
            column: 5
          }
        },
        line: 130
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 150,
            column: 6
          },
          end: {
            line: 150,
            column: 7
          }
        },
        loc: {
          start: {
            line: 150,
            column: 38
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 150
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 182,
            column: 6
          },
          end: {
            line: 182,
            column: 7
          }
        },
        loc: {
          start: {
            line: 182,
            column: 45
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 182
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 223,
            column: 6
          },
          end: {
            line: 223,
            column: 7
          }
        },
        loc: {
          start: {
            line: 223,
            column: 60
          },
          end: {
            line: 262,
            column: 5
          }
        },
        line: 223
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 227,
            column: 54
          },
          end: {
            line: 227,
            column: 55
          }
        },
        loc: {
          start: {
            line: 227,
            column: 61
          },
          end: {
            line: 227,
            column: 87
          }
        },
        line: 227
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 265,
            column: 6
          },
          end: {
            line: 265,
            column: 7
          }
        },
        loc: {
          start: {
            line: 265,
            column: 46
          },
          end: {
            line: 300,
            column: 5
          }
        },
        line: 265
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 277,
            column: 44
          },
          end: {
            line: 277,
            column: 45
          }
        },
        loc: {
          start: {
            line: 277,
            column: 57
          },
          end: {
            line: 290,
            column: 13
          }
        },
        line: 277
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 303,
            column: 6
          },
          end: {
            line: 303,
            column: 7
          }
        },
        loc: {
          start: {
            line: 303,
            column: 19
          },
          end: {
            line: 305,
            column: 5
          }
        },
        line: 303
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 308,
            column: 6
          },
          end: {
            line: 308,
            column: 7
          }
        },
        loc: {
          start: {
            line: 308,
            column: 29
          },
          end: {
            line: 310,
            column: 5
          }
        },
        line: 308
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 313,
            column: 6
          },
          end: {
            line: 313,
            column: 7
          }
        },
        loc: {
          start: {
            line: 313,
            column: 23
          },
          end: {
            line: 315,
            column: 5
          }
        },
        line: 313
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 319,
            column: 4
          },
          end: {
            line: 319,
            column: 5
          }
        },
        loc: {
          start: {
            line: 319,
            column: 29
          },
          end: {
            line: 321,
            column: 5
          }
        },
        line: 319
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 322,
            column: 4
          },
          end: {
            line: 322,
            column: 5
          }
        },
        loc: {
          start: {
            line: 322,
            column: 37
          },
          end: {
            line: 327,
            column: 5
          }
        },
        line: 322
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        },
        loc: {
          start: {
            line: 328,
            column: 42
          },
          end: {
            line: 333,
            column: 5
          }
        },
        line: 328
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 334,
            column: 4
          },
          end: {
            line: 334,
            column: 5
          }
        },
        loc: {
          start: {
            line: 334,
            column: 28
          },
          end: {
            line: 348,
            column: 5
          }
        },
        line: 334
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 349,
            column: 4
          },
          end: {
            line: 349,
            column: 5
          }
        },
        loc: {
          start: {
            line: 349,
            column: 42
          },
          end: {
            line: 370,
            column: 5
          }
        },
        line: 349
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 371,
            column: 4
          },
          end: {
            line: 371,
            column: 5
          }
        },
        loc: {
          start: {
            line: 371,
            column: 49
          },
          end: {
            line: 388,
            column: 5
          }
        },
        line: 371
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 389,
            column: 4
          },
          end: {
            line: 389,
            column: 5
          }
        },
        loc: {
          start: {
            line: 389,
            column: 42
          },
          end: {
            line: 404,
            column: 5
          }
        },
        line: 389
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 405,
            column: 4
          },
          end: {
            line: 405,
            column: 5
          }
        },
        loc: {
          start: {
            line: 405,
            column: 59
          },
          end: {
            line: 425,
            column: 5
          }
        },
        line: 405
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 426,
            column: 4
          },
          end: {
            line: 426,
            column: 5
          }
        },
        loc: {
          start: {
            line: 426,
            column: 37
          },
          end: {
            line: 453,
            column: 5
          }
        },
        line: 426
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 436,
            column: 35
          },
          end: {
            line: 436,
            column: 36
          }
        },
        loc: {
          start: {
            line: 436,
            column: 54
          },
          end: {
            line: 446,
            column: 17
          }
        },
        line: 436
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 437,
            column: 38
          },
          end: {
            line: 437,
            column: 39
          }
        },
        loc: {
          start: {
            line: 437,
            column: 52
          },
          end: {
            line: 439,
            column: 21
          }
        },
        line: 437
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 440,
            column: 37
          },
          end: {
            line: 440,
            column: 38
          }
        },
        loc: {
          start: {
            line: 440,
            column: 41
          },
          end: {
            line: 442,
            column: 21
          }
        },
        line: 440
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 443,
            column: 39
          },
          end: {
            line: 443,
            column: 40
          }
        },
        loc: {
          start: {
            line: 443,
            column: 48
          },
          end: {
            line: 445,
            column: 21
          }
        },
        line: 443
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 454,
            column: 4
          },
          end: {
            line: 454,
            column: 5
          }
        },
        loc: {
          start: {
            line: 454,
            column: 61
          },
          end: {
            line: 462,
            column: 5
          }
        },
        line: 454
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 457,
            column: 19
          },
          end: {
            line: 457,
            column: 20
          }
        },
        loc: {
          start: {
            line: 457,
            column: 29
          },
          end: {
            line: 461,
            column: 9
          }
        },
        line: 457
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 463,
            column: 4
          },
          end: {
            line: 463,
            column: 5
          }
        },
        loc: {
          start: {
            line: 463,
            column: 33
          },
          end: {
            line: 467,
            column: 5
          }
        },
        line: 463
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 468,
            column: 4
          },
          end: {
            line: 468,
            column: 5
          }
        },
        loc: {
          start: {
            line: 468,
            column: 28
          },
          end: {
            line: 479,
            column: 5
          }
        },
        line: 468
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 470,
            column: 20
          },
          end: {
            line: 470,
            column: 21
          }
        },
        loc: {
          start: {
            line: 470,
            column: 24
          },
          end: {
            line: 478,
            column: 9
          }
        },
        line: 470
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 480,
            column: 4
          },
          end: {
            line: 480,
            column: 5
          }
        },
        loc: {
          start: {
            line: 480,
            column: 28
          },
          end: {
            line: 489,
            column: 5
          }
        },
        line: 480
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 482,
            column: 20
          },
          end: {
            line: 482,
            column: 21
          }
        },
        loc: {
          start: {
            line: 482,
            column: 24
          },
          end: {
            line: 488,
            column: 9
          }
        },
        line: 482
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 495,
            column: 6
          },
          end: {
            line: 495,
            column: 7
          }
        },
        loc: {
          start: {
            line: 495,
            column: 50
          },
          end: {
            line: 503,
            column: 5
          }
        },
        line: 495
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 506,
            column: 6
          },
          end: {
            line: 506,
            column: 7
          }
        },
        loc: {
          start: {
            line: 506,
            column: 44
          },
          end: {
            line: 514,
            column: 5
          }
        },
        line: 506
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 517,
            column: 6
          },
          end: {
            line: 517,
            column: 7
          }
        },
        loc: {
          start: {
            line: 517,
            column: 43
          },
          end: {
            line: 525,
            column: 5
          }
        },
        line: 517
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 528,
            column: 6
          },
          end: {
            line: 528,
            column: 7
          }
        },
        loc: {
          start: {
            line: 528,
            column: 53
          },
          end: {
            line: 531,
            column: 5
          }
        },
        line: 528
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 529,
            column: 50
          },
          end: {
            line: 529,
            column: 51
          }
        },
        loc: {
          start: {
            line: 529,
            column: 61
          },
          end: {
            line: 529,
            column: 121
          }
        },
        line: 529
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "1": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "2": {
        loc: {
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 157,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 157,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "3": {
        loc: {
          start: {
            line: 155,
            column: 16
          },
          end: {
            line: 155,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 16
          },
          end: {
            line: 155,
            column: 51
          }
        }, {
          start: {
            line: 155,
            column: 55
          },
          end: {
            line: 155,
            column: 62
          }
        }],
        line: 155
      },
      "4": {
        loc: {
          start: {
            line: 162,
            column: 12
          },
          end: {
            line: 164,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 12
          },
          end: {
            line: 164,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "5": {
        loc: {
          start: {
            line: 166,
            column: 12
          },
          end: {
            line: 168,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 12
          },
          end: {
            line: 168,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "6": {
        loc: {
          start: {
            line: 166,
            column: 16
          },
          end: {
            line: 166,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 16
          },
          end: {
            line: 166,
            column: 41
          }
        }, {
          start: {
            line: 166,
            column: 45
          },
          end: {
            line: 166,
            column: 52
          }
        }],
        line: 166
      },
      "7": {
        loc: {
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "8": {
        loc: {
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 189,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 189,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "9": {
        loc: {
          start: {
            line: 187,
            column: 16
          },
          end: {
            line: 187,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 16
          },
          end: {
            line: 187,
            column: 51
          }
        }, {
          start: {
            line: 187,
            column: 55
          },
          end: {
            line: 187,
            column: 62
          }
        }],
        line: 187
      },
      "10": {
        loc: {
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 194,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 194,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "11": {
        loc: {
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 201,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 201,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "12": {
        loc: {
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 205,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 205,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "13": {
        loc: {
          start: {
            line: 203,
            column: 16
          },
          end: {
            line: 203,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 203,
            column: 16
          },
          end: {
            line: 203,
            column: 41
          }
        }, {
          start: {
            line: 203,
            column: 45
          },
          end: {
            line: 203,
            column: 52
          }
        }],
        line: 203
      },
      "14": {
        loc: {
          start: {
            line: 207,
            column: 12
          },
          end: {
            line: 209,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 12
          },
          end: {
            line: 209,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "15": {
        loc: {
          start: {
            line: 207,
            column: 16
          },
          end: {
            line: 207,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 207,
            column: 16
          },
          end: {
            line: 207,
            column: 41
          }
        }, {
          start: {
            line: 207,
            column: 45
          },
          end: {
            line: 207,
            column: 65
          }
        }],
        line: 207
      },
      "16": {
        loc: {
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 216,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 216,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "17": {
        loc: {
          start: {
            line: 223,
            column: 32
          },
          end: {
            line: 223,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 223,
            column: 41
          },
          end: {
            line: 223,
            column: 49
          }
        }],
        line: 223
      },
      "18": {
        loc: {
          start: {
            line: 239,
            column: 12
          },
          end: {
            line: 255,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 12
          },
          end: {
            line: 255,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "19": {
        loc: {
          start: {
            line: 270,
            column: 22
          },
          end: {
            line: 270,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 270,
            column: 22
          },
          end: {
            line: 270,
            column: 43
          }
        }, {
          start: {
            line: 270,
            column: 47
          },
          end: {
            line: 270,
            column: 53
          }
        }],
        line: 270
      },
      "20": {
        loc: {
          start: {
            line: 281,
            column: 20
          },
          end: {
            line: 283,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 20
          },
          end: {
            line: 283,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 281
      },
      "21": {
        loc: {
          start: {
            line: 294,
            column: 32
          },
          end: {
            line: 294,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 294,
            column: 56
          },
          end: {
            line: 294,
            column: 121
          }
        }, {
          start: {
            line: 294,
            column: 124
          },
          end: {
            line: 294,
            column: 133
          }
        }],
        line: 294
      },
      "22": {
        loc: {
          start: {
            line: 324,
            column: 8
          },
          end: {
            line: 326,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 324,
            column: 8
          },
          end: {
            line: 326,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 324
      },
      "23": {
        loc: {
          start: {
            line: 324,
            column: 12
          },
          end: {
            line: 324,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 324,
            column: 12
          },
          end: {
            line: 324,
            column: 57
          }
        }, {
          start: {
            line: 324,
            column: 61
          },
          end: {
            line: 324,
            column: 106
          }
        }],
        line: 324
      },
      "24": {
        loc: {
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 332,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 332,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 330
      },
      "25": {
        loc: {
          start: {
            line: 330,
            column: 12
          },
          end: {
            line: 330,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 330,
            column: 12
          },
          end: {
            line: 330,
            column: 56
          }
        }, {
          start: {
            line: 330,
            column: 60
          },
          end: {
            line: 330,
            column: 105
          }
        }],
        line: 330
      },
      "26": {
        loc: {
          start: {
            line: 350,
            column: 25
          },
          end: {
            line: 359,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 350,
            column: 25
          },
          end: {
            line: 350,
            column: 46
          }
        }, {
          start: {
            line: 350,
            column: 50
          },
          end: {
            line: 359,
            column: 9
          }
        }],
        line: 350
      },
      "27": {
        loc: {
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 364,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 364,
            column: 9
          }
        }, {
          start: {
            line: 362,
            column: 15
          },
          end: {
            line: 364,
            column: 9
          }
        }],
        line: 360
      },
      "28": {
        loc: {
          start: {
            line: 366,
            column: 27
          },
          end: {
            line: 366,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 366,
            column: 47
          },
          end: {
            line: 366,
            column: 76
          }
        }, {
          start: {
            line: 366,
            column: 79
          },
          end: {
            line: 366,
            column: 80
          }
        }],
        line: 366
      },
      "29": {
        loc: {
          start: {
            line: 372,
            column: 25
          },
          end: {
            line: 381,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 372,
            column: 25
          },
          end: {
            line: 372,
            column: 46
          }
        }, {
          start: {
            line: 372,
            column: 50
          },
          end: {
            line: 381,
            column: 9
          }
        }],
        line: 372
      },
      "30": {
        loc: {
          start: {
            line: 384,
            column: 8
          },
          end: {
            line: 386,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 384,
            column: 8
          },
          end: {
            line: 386,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 384
      },
      "31": {
        loc: {
          start: {
            line: 390,
            column: 25
          },
          end: {
            line: 399,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 390,
            column: 25
          },
          end: {
            line: 390,
            column: 46
          }
        }, {
          start: {
            line: 390,
            column: 50
          },
          end: {
            line: 399,
            column: 9
          }
        }],
        line: 390
      },
      "32": {
        loc: {
          start: {
            line: 431,
            column: 12
          },
          end: {
            line: 447,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 431,
            column: 12
          },
          end: {
            line: 447,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 431
      },
      "33": {
        loc: {
          start: {
            line: 431,
            column: 16
          },
          end: {
            line: 431,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 431,
            column: 16
          },
          end: {
            line: 431,
            column: 22
          }
        }, {
          start: {
            line: 431,
            column: 26
          },
          end: {
            line: 431,
            column: 65
          }
        }],
        line: 431
      },
      "34": {
        loc: {
          start: {
            line: 474,
            column: 16
          },
          end: {
            line: 476,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 474,
            column: 16
          },
          end: {
            line: 476,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 474
      },
      "35": {
        loc: {
          start: {
            line: 484,
            column: 12
          },
          end: {
            line: 487,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 484,
            column: 12
          },
          end: {
            line: 487,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 484
      },
      "36": {
        loc: {
          start: {
            line: 497,
            column: 8
          },
          end: {
            line: 499,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 497,
            column: 8
          },
          end: {
            line: 499,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 497
      },
      "37": {
        loc: {
          start: {
            line: 508,
            column: 8
          },
          end: {
            line: 510,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 508,
            column: 8
          },
          end: {
            line: 510,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 508
      },
      "38": {
        loc: {
          start: {
            line: 519,
            column: 8
          },
          end: {
            line: 521,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 519,
            column: 8
          },
          end: {
            line: 521,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 519
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\optimization\\enterprise-cache-system.ts"],
      sourcesContent: ["/**\r\n * Sistema Enterprise de Cach\xE9 Inteligente\r\n * Extiende el cache manager existente con funcionalidades enterprise avanzadas\r\n */\r\n\r\nimport { cacheManager, CACHE_CONFIGS, type CacheConfig } from '@/lib/cache-manager';\r\nimport { redisCache } from '@/lib/integrations/redis';\r\nimport { enterpriseAuditSystem } from '@/lib/security/enterprise-audit-system';\r\nimport { metricsCollector } from '@/lib/rate-limiting/enterprise-rate-limiter';\r\nimport type { EnterpriseAuthContext } from '@/lib/auth/enterprise-auth-utils';\r\n\r\n// =====================================================\r\n// TIPOS Y INTERFACES ENTERPRISE\r\n// =====================================================\r\n\r\nexport interface EnterpriseCacheConfig extends CacheConfig {\r\n  // Configuraciones enterprise\r\n  enableAuditLogging?: boolean;\r\n  enableMetrics?: boolean;\r\n  enableInvalidation?: boolean;\r\n  enableWarmup?: boolean;\r\n  \r\n  // Configuraciones de invalidaci\xF3n\r\n  invalidationPatterns?: string[];\r\n  dependentKeys?: string[];\r\n  \r\n  // Configuraciones de warmup\r\n  warmupStrategy?: 'eager' | 'lazy' | 'scheduled';\r\n  warmupInterval?: number;\r\n  \r\n  // Configuraciones de seguridad\r\n  securityLevel?: 'basic' | 'standard' | 'high' | 'critical';\r\n  encryptData?: boolean;\r\n  \r\n  // Configuraciones de performance\r\n  compressionLevel?: number;\r\n  maxMemoryUsage?: number;\r\n  evictionPolicy?: 'lru' | 'lfu' | 'ttl' | 'random';\r\n}\r\n\r\nexport interface CacheMetrics {\r\n  hits: number;\r\n  misses: number;\r\n  hitRate: number;\r\n  avgResponseTime: number;\r\n  memoryUsage: number;\r\n  evictions: number;\r\n  errors: number;\r\n  lastAccess: string;\r\n}\r\n\r\nexport interface CacheInvalidationEvent {\r\n  pattern: string;\r\n  reason: 'manual' | 'ttl_expired' | 'dependency_changed' | 'memory_pressure';\r\n  affectedKeys: string[];\r\n  timestamp: string;\r\n  triggeredBy?: string;\r\n}\r\n\r\nexport interface CacheWarmupJob {\r\n  id: string;\r\n  pattern: string;\r\n  strategy: 'eager' | 'lazy' | 'scheduled';\r\n  interval?: number;\r\n  lastRun?: string;\r\n  nextRun?: string;\r\n  status: 'pending' | 'running' | 'completed' | 'failed';\r\n}\r\n\r\n// =====================================================\r\n// CONFIGURACIONES ENTERPRISE PREDEFINIDAS\r\n// =====================================================\r\n\r\nexport const ENTERPRISE_CACHE_CONFIGS: Record<string, EnterpriseCacheConfig> = {\r\n  // Cache cr\xEDtico para datos de autenticaci\xF3n\r\n  AUTH_CRITICAL: {\r\n    ...CACHE_CONFIGS.SYSTEM_CONFIG,\r\n    ttl: 300, // 5 minutos\r\n    prefix: 'auth_critical',\r\n    enableAuditLogging: true,\r\n    enableMetrics: true,\r\n    enableInvalidation: true,\r\n    securityLevel: 'critical',\r\n    encryptData: true,\r\n    compressionLevel: 9,\r\n    evictionPolicy: 'ttl'\r\n  },\r\n\r\n  // Cache para datos de productos con invalidaci\xF3n inteligente\r\n  PRODUCTS_SMART: {\r\n    ...CACHE_CONFIGS.PRODUCT_DATA,\r\n    ttl: 1800, // 30 minutos\r\n    prefix: 'products_smart',\r\n    enableAuditLogging: false,\r\n    enableMetrics: true,\r\n    enableInvalidation: true,\r\n    enableWarmup: true,\r\n    invalidationPatterns: ['product:*', 'category:*', 'inventory:*'],\r\n    dependentKeys: ['categories', 'brands', 'pricing'],\r\n    warmupStrategy: 'scheduled',\r\n    warmupInterval: 3600, // 1 hora\r\n    securityLevel: 'standard',\r\n    compressionLevel: 6,\r\n    evictionPolicy: 'lru'\r\n  },\r\n\r\n  // Cache para APIs p\xFAblicas con alta performance\r\n  PUBLIC_PERFORMANCE: {\r\n    ttl: 600, // 10 minutos\r\n    prefix: 'public_perf',\r\n    compress: true,\r\n    serialize: true,\r\n    enableAuditLogging: false,\r\n    enableMetrics: true,\r\n    enableInvalidation: true,\r\n    enableWarmup: true,\r\n    warmupStrategy: 'eager',\r\n    securityLevel: 'basic',\r\n    compressionLevel: 3,\r\n    maxMemoryUsage: 100 * 1024 * 1024, // 100MB\r\n    evictionPolicy: 'lfu'\r\n  },\r\n\r\n  // Cache para sesiones de usuario\r\n  USER_SESSIONS: {\r\n    ttl: 7200, // 2 horas\r\n    prefix: 'user_sessions',\r\n    compress: false,\r\n    serialize: true,\r\n    enableAuditLogging: true,\r\n    enableMetrics: true,\r\n    enableInvalidation: true,\r\n    securityLevel: 'high',\r\n    encryptData: true,\r\n    evictionPolicy: 'ttl'\r\n  },\r\n\r\n  // Cache para m\xE9tricas y analytics\r\n  ANALYTICS_DATA: {\r\n    ttl: 900, // 15 minutos\r\n    prefix: 'analytics',\r\n    compress: true,\r\n    serialize: true,\r\n    enableAuditLogging: false,\r\n    enableMetrics: true,\r\n    enableInvalidation: true,\r\n    enableWarmup: true,\r\n    warmupStrategy: 'lazy',\r\n    securityLevel: 'standard',\r\n    compressionLevel: 8,\r\n    evictionPolicy: 'lru'\r\n  }\r\n};\r\n\r\n// =====================================================\r\n// SISTEMA ENTERPRISE DE CACH\xC9\r\n// =====================================================\r\n\r\nexport class EnterpriseCacheSystem {\r\n  private static instance: EnterpriseCacheSystem;\r\n  private metrics: Map<string, CacheMetrics> = new Map();\r\n  private invalidationJobs: Map<string, CacheInvalidationEvent> = new Map();\r\n  private warmupJobs: Map<string, CacheWarmupJob> = new Map();\r\n  private isInitialized = false;\r\n\r\n  private constructor() {}\r\n\r\n  public static getInstance(): EnterpriseCacheSystem {\r\n    if (!EnterpriseCacheSystem.instance) {\r\n      EnterpriseCacheSystem.instance = new EnterpriseCacheSystem();\r\n    }\r\n    return EnterpriseCacheSystem.instance;\r\n  }\r\n\r\n  /**\r\n   * Inicializa el sistema enterprise de cach\xE9\r\n   */\r\n  async initialize(): Promise<void> {\r\n    if (this.isInitialized) {return;}\r\n\r\n    try {\r\n      // Inicializar jobs de warmup programados\r\n      await this.initializeWarmupJobs();\r\n      \r\n      // Inicializar limpieza autom\xE1tica\r\n      this.startCleanupScheduler();\r\n      \r\n      // Inicializar monitoreo de memoria\r\n      this.startMemoryMonitoring();\r\n      \r\n      this.isInitialized = true;\r\n      console.log('[ENTERPRISE_CACHE] Sistema inicializado correctamente');\r\n    } catch (error) {\r\n      console.error('[ENTERPRISE_CACHE] Error inicializando sistema:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtiene datos del cach\xE9 con funcionalidades enterprise\r\n   */\r\n  async get<T>(\r\n    key: string, \r\n    config: EnterpriseCacheConfig,\r\n    context?: EnterpriseAuthContext\r\n  ): Promise<T | null> {\r\n    const startTime = Date.now();\r\n    const fullKey = this.generateKey(config, key);\r\n\r\n    try {\r\n      // Verificar permisos de acceso si es necesario\r\n      if (config.securityLevel === 'critical' && context) {\r\n        await this.verifyAccess(fullKey, context);\r\n      }\r\n\r\n      // Intentar obtener del cach\xE9\r\n      const result = await cacheManager.get<T>(key, config);\r\n      const responseTime = Date.now() - startTime;\r\n\r\n      // Actualizar m\xE9tricas\r\n      if (config.enableMetrics) {\r\n        this.updateMetrics(fullKey, result !== null, responseTime);\r\n      }\r\n\r\n      // Registrar acceso si est\xE1 habilitado\r\n      if (config.enableAuditLogging && context) {\r\n        await this.logCacheAccess('GET', fullKey, result !== null, context);\r\n      }\r\n\r\n      return result;\r\n    } catch (error) {\r\n      const responseTime = Date.now() - startTime;\r\n      \r\n      // Actualizar m\xE9tricas de error\r\n      if (config.enableMetrics) {\r\n        this.updateErrorMetrics(fullKey, responseTime);\r\n      }\r\n\r\n      console.error('[ENTERPRISE_CACHE] Error en get:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Establece datos en el cach\xE9 con funcionalidades enterprise\r\n   */\r\n  async set<T>(\r\n    key: string, \r\n    value: T, \r\n    config: EnterpriseCacheConfig,\r\n    context?: EnterpriseAuthContext\r\n  ): Promise<boolean> {\r\n    const startTime = Date.now();\r\n    const fullKey = this.generateKey(config, key);\r\n\r\n    try {\r\n      // Verificar permisos de escritura si es necesario\r\n      if (config.securityLevel === 'critical' && context) {\r\n        await this.verifyWriteAccess(fullKey, context);\r\n      }\r\n\r\n      // Encriptar datos si est\xE1 configurado\r\n      let processedValue = value;\r\n      if (config.encryptData) {\r\n        processedValue = await this.encryptData(value) as T;\r\n      }\r\n\r\n      // Establecer en cach\xE9\r\n      const success = await cacheManager.set(key, processedValue, config);\r\n      const responseTime = Date.now() - startTime;\r\n\r\n      // Actualizar m\xE9tricas\r\n      if (config.enableMetrics) {\r\n        this.updateSetMetrics(fullKey, success, responseTime);\r\n      }\r\n\r\n      // Registrar escritura si est\xE1 habilitado\r\n      if (config.enableAuditLogging && context) {\r\n        await this.logCacheAccess('SET', fullKey, success, context);\r\n      }\r\n\r\n      // Programar invalidaci\xF3n de dependencias si es necesario\r\n      if (config.enableInvalidation && config.dependentKeys) {\r\n        await this.scheduleDependencyInvalidation(fullKey, config.dependentKeys);\r\n      }\r\n\r\n      return success;\r\n    } catch (error) {\r\n      const responseTime = Date.now() - startTime;\r\n      \r\n      // Actualizar m\xE9tricas de error\r\n      if (config.enableMetrics) {\r\n        this.updateErrorMetrics(fullKey, responseTime);\r\n      }\r\n\r\n      console.error('[ENTERPRISE_CACHE] Error en set:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Invalidaci\xF3n inteligente de cach\xE9\r\n   */\r\n  async invalidate(\r\n    pattern: string, \r\n    reason: CacheInvalidationEvent['reason'] = 'manual',\r\n    context?: EnterpriseAuthContext\r\n  ): Promise<string[]> {\r\n    try {\r\n      const affectedKeys = await this.findKeysByPattern(pattern);\r\n      \r\n      // Eliminar claves del cach\xE9\r\n      const deletionPromises = affectedKeys.map(key => redisCache.del(key));\r\n      await Promise.all(deletionPromises);\r\n\r\n      // Registrar evento de invalidaci\xF3n\r\n      const invalidationEvent: CacheInvalidationEvent = {\r\n        pattern,\r\n        reason,\r\n        affectedKeys,\r\n        timestamp: new Date().toISOString(),\r\n        triggeredBy: context?.userId\r\n      };\r\n\r\n      this.invalidationJobs.set(\r\n        `inv_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n        invalidationEvent\r\n      );\r\n\r\n      // Registrar en auditor\xEDa si hay contexto\r\n      if (context) {\r\n        await enterpriseAuditSystem.logEnterpriseEvent({\r\n          user_id: context.userId,\r\n          event_type: 'CACHE_INVALIDATION' as any,\r\n          event_category: 'system_operation',\r\n          severity: 'medium' as any,\r\n          description: `Cache invalidation: ${pattern}`,\r\n          metadata: {\r\n            pattern,\r\n            reason,\r\n            affected_keys_count: affectedKeys.length,\r\n            affected_keys: affectedKeys.slice(0, 10) // Primeras 10 para no saturar\r\n          },\r\n          ip_address: context.ipAddress,\r\n          user_agent: context.userAgent\r\n        }, context);\r\n      }\r\n\r\n      console.log(`[ENTERPRISE_CACHE] Invalidated ${affectedKeys.length} keys for pattern: ${pattern}`);\r\n      return affectedKeys;\r\n    } catch (error) {\r\n      console.error('[ENTERPRISE_CACHE] Error en invalidaci\xF3n:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Warmup inteligente de cach\xE9\r\n   */\r\n  async warmup(\r\n    keys: string[], \r\n    config: EnterpriseCacheConfig,\r\n    dataFetcher: (key: string) => Promise<any>\r\n  ): Promise<void> {\r\n    const jobId = `warmup_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n    \r\n    const warmupJob: CacheWarmupJob = {\r\n      id: jobId,\r\n      pattern: keys.join(','),\r\n      strategy: config.warmupStrategy || 'lazy',\r\n      interval: config.warmupInterval,\r\n      lastRun: new Date().toISOString(),\r\n      status: 'running'\r\n    };\r\n\r\n    this.warmupJobs.set(jobId, warmupJob);\r\n\r\n    try {\r\n      const warmupPromises = keys.map(async (key) => {\r\n        try {\r\n          // Verificar si ya existe en cach\xE9\r\n          const existing = await this.get(key, config);\r\n          if (existing !== null) {\r\n            return; // Ya est\xE1 en cach\xE9\r\n          }\r\n\r\n          // Obtener datos y cachear\r\n          const data = await dataFetcher(key);\r\n          await this.set(key, data, config);\r\n        } catch (error) {\r\n          console.warn(`[ENTERPRISE_CACHE] Error warming up key ${key}:`, error);\r\n        }\r\n      });\r\n\r\n      await Promise.all(warmupPromises);\r\n      \r\n      // Actualizar estado del job\r\n      warmupJob.status = 'completed';\r\n      warmupJob.nextRun = config.warmupInterval ? \r\n        new Date(Date.now() + config.warmupInterval * 1000).toISOString() : \r\n        undefined;\r\n\r\n      console.log(`[ENTERPRISE_CACHE] Warmup completed for ${keys.length} keys`);\r\n    } catch (error) {\r\n      warmupJob.status = 'failed';\r\n      console.error('[ENTERPRISE_CACHE] Error en warmup:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtiene m\xE9tricas del sistema de cach\xE9\r\n   */\r\n  getMetrics(): Record<string, CacheMetrics> {\r\n    return Object.fromEntries(this.metrics);\r\n  }\r\n\r\n  /**\r\n   * Obtiene estad\xEDsticas de invalidaci\xF3n\r\n   */\r\n  getInvalidationStats(): CacheInvalidationEvent[] {\r\n    return Array.from(this.invalidationJobs.values());\r\n  }\r\n\r\n  /**\r\n   * Obtiene estad\xEDsticas de warmup\r\n   */\r\n  getWarmupStats(): CacheWarmupJob[] {\r\n    return Array.from(this.warmupJobs.values());\r\n  }\r\n\r\n  // =====================================================\r\n  // M\xC9TODOS PRIVADOS\r\n  // =====================================================\r\n\r\n  private generateKey(config: EnterpriseCacheConfig, key: string): string {\r\n    return `${config.prefix}:${key}`;\r\n  }\r\n\r\n  private async verifyAccess(key: string, context: EnterpriseAuthContext): Promise<void> {\r\n    // Verificar permisos de acceso para datos cr\xEDticos\r\n    if (!context.permissions.includes('cache_access') && \r\n        !context.permissions.includes('admin_access')) {\r\n      throw new Error('Insufficient permissions for cache access');\r\n    }\r\n  }\r\n\r\n  private async verifyWriteAccess(key: string, context: EnterpriseAuthContext): Promise<void> {\r\n    // Verificar permisos de escritura para datos cr\xEDticos\r\n    if (!context.permissions.includes('cache_write') && \r\n        !context.permissions.includes('admin_access')) {\r\n      throw new Error('Insufficient permissions for cache write');\r\n    }\r\n  }\r\n\r\n  private async encryptData(data: any): Promise<any> {\r\n    // Implementaci\xF3n b\xE1sica de encriptaci\xF3n\r\n    // En producci\xF3n, usar una librer\xEDa de encriptaci\xF3n robusta\r\n    try {\r\n      const jsonString = JSON.stringify(data);\r\n      const encoded = Buffer.from(jsonString).toString('base64');\r\n      return { encrypted: true, data: encoded };\r\n    } catch (error) {\r\n      console.warn('[ENTERPRISE_CACHE] Error encriptando datos:', error);\r\n      return data;\r\n    }\r\n  }\r\n\r\n  private updateMetrics(key: string, hit: boolean, responseTime: number): void {\r\n    const existing = this.metrics.get(key) || {\r\n      hits: 0,\r\n      misses: 0,\r\n      hitRate: 0,\r\n      avgResponseTime: 0,\r\n      memoryUsage: 0,\r\n      evictions: 0,\r\n      errors: 0,\r\n      lastAccess: new Date().toISOString()\r\n    };\r\n\r\n    if (hit) {\r\n      existing.hits++;\r\n    } else {\r\n      existing.misses++;\r\n    }\r\n\r\n    const totalRequests = existing.hits + existing.misses;\r\n    existing.hitRate = totalRequests > 0 ? existing.hits / totalRequests : 0;\r\n    existing.avgResponseTime = (existing.avgResponseTime + responseTime) / 2;\r\n    existing.lastAccess = new Date().toISOString();\r\n\r\n    this.metrics.set(key, existing);\r\n  }\r\n\r\n  private updateSetMetrics(key: string, success: boolean, responseTime: number): void {\r\n    const existing = this.metrics.get(key) || {\r\n      hits: 0,\r\n      misses: 0,\r\n      hitRate: 0,\r\n      avgResponseTime: 0,\r\n      memoryUsage: 0,\r\n      evictions: 0,\r\n      errors: 0,\r\n      lastAccess: new Date().toISOString()\r\n    };\r\n\r\n    existing.avgResponseTime = (existing.avgResponseTime + responseTime) / 2;\r\n    existing.lastAccess = new Date().toISOString();\r\n\r\n    if (!success) {\r\n      existing.errors++;\r\n    }\r\n\r\n    this.metrics.set(key, existing);\r\n  }\r\n\r\n  private updateErrorMetrics(key: string, responseTime: number): void {\r\n    const existing = this.metrics.get(key) || {\r\n      hits: 0,\r\n      misses: 0,\r\n      hitRate: 0,\r\n      avgResponseTime: 0,\r\n      memoryUsage: 0,\r\n      evictions: 0,\r\n      errors: 0,\r\n      lastAccess: new Date().toISOString()\r\n    };\r\n\r\n    existing.errors++;\r\n    existing.avgResponseTime = (existing.avgResponseTime + responseTime) / 2;\r\n    existing.lastAccess = new Date().toISOString();\r\n\r\n    this.metrics.set(key, existing);\r\n  }\r\n\r\n  private async logCacheAccess(\r\n    operation: 'GET' | 'SET',\r\n    key: string,\r\n    success: boolean,\r\n    context: EnterpriseAuthContext\r\n  ): Promise<void> {\r\n    try {\r\n      await enterpriseAuditSystem.logEnterpriseEvent({\r\n        user_id: context.userId,\r\n        event_type: 'CACHE_ACCESS' as any,\r\n        event_category: 'system_operation',\r\n        severity: 'low' as any,\r\n        description: `Cache ${operation}: ${key}`,\r\n        metadata: {\r\n          operation,\r\n          key,\r\n          success,\r\n          cache_system: 'enterprise'\r\n        },\r\n        ip_address: context.ipAddress,\r\n        user_agent: context.userAgent\r\n      }, context);\r\n    } catch (error) {\r\n      console.warn('[ENTERPRISE_CACHE] Error logging cache access:', error);\r\n    }\r\n  }\r\n\r\n  private async findKeysByPattern(pattern: string): Promise<string[]> {\r\n    try {\r\n      // Usar Redis SCAN para encontrar claves por patr\xF3n\r\n      const keys: string[] = [];\r\n      const client = redisCache['client']; // Acceder al cliente Redis interno\r\n      \r\n      if (client && typeof client.scanStream === 'function') {\r\n        const stream = client.scanStream({\r\n          match: pattern,\r\n          count: 100\r\n        });\r\n\r\n        return new Promise((resolve, reject) => {\r\n          stream.on('data', (resultKeys: string[]) => {\r\n            keys.push(...resultKeys);\r\n          });\r\n\r\n          stream.on('end', () => {\r\n            resolve(keys);\r\n          });\r\n\r\n          stream.on('error', (error: Error) => {\r\n            reject(error);\r\n          });\r\n        });\r\n      }\r\n\r\n      return keys;\r\n    } catch (error) {\r\n      console.error('[ENTERPRISE_CACHE] Error finding keys by pattern:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  private async scheduleDependencyInvalidation(key: string, dependentKeys: string[]): Promise<void> {\r\n    // Programar invalidaci\xF3n de claves dependientes\r\n    // Esto se podr\xEDa implementar con un job queue como Bull o Agenda\r\n    setTimeout(async () => {\r\n      for (const depKey of dependentKeys) {\r\n        await this.invalidate(depKey, 'dependency_changed');\r\n      }\r\n    }, 1000); // 1 segundo de delay\r\n  }\r\n\r\n  private async initializeWarmupJobs(): Promise<void> {\r\n    // Inicializar jobs de warmup programados\r\n    // En una implementaci\xF3n real, esto se cargar\xEDa desde una base de datos\r\n    console.log('[ENTERPRISE_CACHE] Warmup jobs initialized');\r\n  }\r\n\r\n  private startCleanupScheduler(): void {\r\n    // Limpiar m\xE9tricas antiguas cada hora\r\n    setInterval(() => {\r\n      const oneHourAgo = Date.now() - 60 * 60 * 1000;\r\n      \r\n      for (const [key, metrics] of this.metrics.entries()) {\r\n        const lastAccessTime = new Date(metrics.lastAccess).getTime();\r\n        if (lastAccessTime < oneHourAgo) {\r\n          this.metrics.delete(key);\r\n        }\r\n      }\r\n    }, 60 * 60 * 1000); // 1 hora\r\n  }\r\n\r\n  private startMemoryMonitoring(): void {\r\n    // Monitorear uso de memoria cada 5 minutos\r\n    setInterval(() => {\r\n      const memoryUsage = process.memoryUsage();\r\n      \r\n      if (memoryUsage.heapUsed > 500 * 1024 * 1024) { // 500MB\r\n        console.warn('[ENTERPRISE_CACHE] High memory usage detected:', memoryUsage);\r\n        // Aqu\xED se podr\xEDa implementar limpieza autom\xE1tica\r\n      }\r\n    }, 5 * 60 * 1000); // 5 minutos\r\n  }\r\n}\r\n\r\n// =====================================================\r\n// INSTANCIA SINGLETON Y UTILIDADES\r\n// =====================================================\r\n\r\nexport const enterpriseCacheSystem = EnterpriseCacheSystem.getInstance();\r\n\r\n/**\r\n * Funciones de utilidad para casos comunes\r\n */\r\nexport const EnterpriseCacheUtils = {\r\n  /**\r\n   * Cache para datos de autenticaci\xF3n cr\xEDticos\r\n   */\r\n  async cacheAuthData<T>(key: string, fetcher: () => Promise<T>, context: EnterpriseAuthContext): Promise<T> {\r\n    const cached = await enterpriseCacheSystem.get<T>(key, ENTERPRISE_CACHE_CONFIGS.AUTH_CRITICAL, context);\r\n    if (cached !== null) {return cached;}\r\n\r\n    const data = await fetcher();\r\n    await enterpriseCacheSystem.set(key, data, ENTERPRISE_CACHE_CONFIGS.AUTH_CRITICAL, context);\r\n    return data;\r\n  },\r\n\r\n  /**\r\n   * Cache inteligente para productos\r\n   */\r\n  async cacheProductData<T>(key: string, fetcher: () => Promise<T>): Promise<T> {\r\n    const cached = await enterpriseCacheSystem.get<T>(key, ENTERPRISE_CACHE_CONFIGS.PRODUCTS_SMART);\r\n    if (cached !== null) {return cached;}\r\n\r\n    const data = await fetcher();\r\n    await enterpriseCacheSystem.set(key, data, ENTERPRISE_CACHE_CONFIGS.PRODUCTS_SMART);\r\n    return data;\r\n  },\r\n\r\n  /**\r\n   * Cache de alta performance para APIs p\xFAblicas\r\n   */\r\n  async cachePublicData<T>(key: string, fetcher: () => Promise<T>): Promise<T> {\r\n    const cached = await enterpriseCacheSystem.get<T>(key, ENTERPRISE_CACHE_CONFIGS.PUBLIC_PERFORMANCE);\r\n    if (cached !== null) {return cached;}\r\n\r\n    const data = await fetcher();\r\n    await enterpriseCacheSystem.set(key, data, ENTERPRISE_CACHE_CONFIGS.PUBLIC_PERFORMANCE);\r\n    return data;\r\n  },\r\n\r\n  /**\r\n   * Invalidaci\xF3n masiva por patrones\r\n   */\r\n  async invalidateByPatterns(patterns: string[], context?: EnterpriseAuthContext): Promise<void> {\r\n    const invalidationPromises = patterns.map(pattern => \r\n      enterpriseCacheSystem.invalidate(pattern, 'manual', context)\r\n    );\r\n    await Promise.all(invalidationPromises);\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["ENTERPRISE_CACHE_CONFIGS", "EnterpriseCacheSystem", "EnterpriseCacheUtils", "enterpriseCacheSystem", "AUTH_CRITICAL", "CACHE_CONFIGS", "SYSTEM_CONFIG", "ttl", "prefix", "enableAuditLogging", "enableMetrics", "enableInvalidation", "securityLevel", "encryptData", "compressionLevel", "evictionPolicy", "PRODUCTS_SMART", "PRODUCT_DATA", "enableWarmup", "invalidationPatterns", "dependentKeys", "warmupStrategy", "warmupInterval", "PUBLIC_PERFORMANCE", "compress", "serialize", "maxMemoryUsage", "USER_SESSIONS", "ANALYTICS_DATA", "metrics", "Map", "invalidationJobs", "warmupJobs", "isInitialized", "getInstance", "instance", "initialize", "initializeWarmupJobs", "startCleanupScheduler", "startMemoryMonitoring", "console", "log", "error", "get", "key", "config", "context", "startTime", "Date", "now", "fullKey", "generateKey", "verifyAccess", "result", "cacheManager", "responseTime", "updateMetrics", "logCacheAccess", "updateErrorMetrics", "set", "value", "verifyWriteAccess", "processedValue", "success", "updateSetMetrics", "scheduleDependencyInvalidation", "invalidate", "pattern", "reason", "affectedKeys", "findKeysByPattern", "deletionPromises", "map", "redisCache", "del", "Promise", "all", "invalidationEvent", "timestamp", "toISOString", "triggeredBy", "userId", "Math", "random", "toString", "substr", "enterpriseAuditSystem", "logEnterpriseEvent", "user_id", "event_type", "event_category", "severity", "description", "metadata", "affected_keys_count", "length", "affected_keys", "slice", "ip_address", "ipAddress", "user_agent", "userAgent", "warmup", "keys", "dataFetcher", "jobId", "warmupJob", "id", "join", "strategy", "interval", "lastRun", "status", "warmupPromises", "existing", "data", "warn", "nextRun", "undefined", "getMetrics", "Object", "fromEntries", "getInvalidationStats", "Array", "from", "values", "getWarmupStats", "permissions", "includes", "Error", "jsonString", "JSON", "stringify", "encoded", "Buffer", "encrypted", "hit", "hits", "misses", "hitRate", "avgResponseTime", "memoryUsage", "evictions", "errors", "lastAccess", "totalRequests", "operation", "cache_system", "client", "scanStream", "stream", "match", "count", "resolve", "reject", "on", "resultKeys", "push", "setTimeout", "depKey", "setInterval", "oneHourAgo", "entries", "lastAccessTime", "getTime", "delete", "process", "heapUsed", "cacheAuthData", "fetcher", "cached", "cacheProductData", "cachePublicData", "invalidateByPatterns", "patterns", "invalidationPromises"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b6246bd3655729f45a02113207426f8258461c53"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_26itzol5jn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_26itzol5jn();
cov_26itzol5jn().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_26itzol5jn().f[0]++;
  cov_26itzol5jn().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_26itzol5jn().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_26itzol5jn().s[3]++;
_export(exports, {
  get ENTERPRISE_CACHE_CONFIGS() {
    /* istanbul ignore next */
    cov_26itzol5jn().f[1]++;
    cov_26itzol5jn().s[4]++;
    return ENTERPRISE_CACHE_CONFIGS;
  },
  get EnterpriseCacheSystem() {
    /* istanbul ignore next */
    cov_26itzol5jn().f[2]++;
    cov_26itzol5jn().s[5]++;
    return EnterpriseCacheSystem;
  },
  get EnterpriseCacheUtils() {
    /* istanbul ignore next */
    cov_26itzol5jn().f[3]++;
    cov_26itzol5jn().s[6]++;
    return EnterpriseCacheUtils;
  },
  get enterpriseCacheSystem() {
    /* istanbul ignore next */
    cov_26itzol5jn().f[4]++;
    cov_26itzol5jn().s[7]++;
    return enterpriseCacheSystem;
  }
});
const _cachemanager =
/* istanbul ignore next */
(cov_26itzol5jn().s[8]++, require("../cache-manager"));
const _redis =
/* istanbul ignore next */
(cov_26itzol5jn().s[9]++, require("../integrations/redis"));
const _enterpriseauditsystem =
/* istanbul ignore next */
(cov_26itzol5jn().s[10]++, require("../security/enterprise-audit-system"));
const ENTERPRISE_CACHE_CONFIGS =
/* istanbul ignore next */
(cov_26itzol5jn().s[11]++, {
  // Cache crÃ­tico para datos de autenticaciÃ³n
  AUTH_CRITICAL: {
    ..._cachemanager.CACHE_CONFIGS.SYSTEM_CONFIG,
    ttl: 300,
    prefix: 'auth_critical',
    enableAuditLogging: true,
    enableMetrics: true,
    enableInvalidation: true,
    securityLevel: 'critical',
    encryptData: true,
    compressionLevel: 9,
    evictionPolicy: 'ttl'
  },
  // Cache para datos de productos con invalidaciÃ³n inteligente
  PRODUCTS_SMART: {
    ..._cachemanager.CACHE_CONFIGS.PRODUCT_DATA,
    ttl: 1800,
    prefix: 'products_smart',
    enableAuditLogging: false,
    enableMetrics: true,
    enableInvalidation: true,
    enableWarmup: true,
    invalidationPatterns: ['product:*', 'category:*', 'inventory:*'],
    dependentKeys: ['categories', 'brands', 'pricing'],
    warmupStrategy: 'scheduled',
    warmupInterval: 3600,
    securityLevel: 'standard',
    compressionLevel: 6,
    evictionPolicy: 'lru'
  },
  // Cache para APIs pÃºblicas con alta performance
  PUBLIC_PERFORMANCE: {
    ttl: 600,
    prefix: 'public_perf',
    compress: true,
    serialize: true,
    enableAuditLogging: false,
    enableMetrics: true,
    enableInvalidation: true,
    enableWarmup: true,
    warmupStrategy: 'eager',
    securityLevel: 'basic',
    compressionLevel: 3,
    maxMemoryUsage: 100 * 1024 * 1024,
    evictionPolicy: 'lfu'
  },
  // Cache para sesiones de usuario
  USER_SESSIONS: {
    ttl: 7200,
    prefix: 'user_sessions',
    compress: false,
    serialize: true,
    enableAuditLogging: true,
    enableMetrics: true,
    enableInvalidation: true,
    securityLevel: 'high',
    encryptData: true,
    evictionPolicy: 'ttl'
  },
  // Cache para mÃ©tricas y analytics
  ANALYTICS_DATA: {
    ttl: 900,
    prefix: 'analytics',
    compress: true,
    serialize: true,
    enableAuditLogging: false,
    enableMetrics: true,
    enableInvalidation: true,
    enableWarmup: true,
    warmupStrategy: 'lazy',
    securityLevel: 'standard',
    compressionLevel: 8,
    evictionPolicy: 'lru'
  }
});
class EnterpriseCacheSystem {
  constructor() {
    /* istanbul ignore next */
    cov_26itzol5jn().f[5]++;
    cov_26itzol5jn().s[12]++;
    this.metrics = new Map();
    /* istanbul ignore next */
    cov_26itzol5jn().s[13]++;
    this.invalidationJobs = new Map();
    /* istanbul ignore next */
    cov_26itzol5jn().s[14]++;
    this.warmupJobs = new Map();
    /* istanbul ignore next */
    cov_26itzol5jn().s[15]++;
    this.isInitialized = false;
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_26itzol5jn().f[6]++;
    cov_26itzol5jn().s[16]++;
    if (!EnterpriseCacheSystem.instance) {
      /* istanbul ignore next */
      cov_26itzol5jn().b[0][0]++;
      cov_26itzol5jn().s[17]++;
      EnterpriseCacheSystem.instance = new EnterpriseCacheSystem();
    } else
    /* istanbul ignore next */
    {
      cov_26itzol5jn().b[0][1]++;
    }
    cov_26itzol5jn().s[18]++;
    return EnterpriseCacheSystem.instance;
  }
  /**
  * Inicializa el sistema enterprise de cachÃ©
  */
  async initialize() {
    /* istanbul ignore next */
    cov_26itzol5jn().f[7]++;
    cov_26itzol5jn().s[19]++;
    if (this.isInitialized) {
      /* istanbul ignore next */
      cov_26itzol5jn().b[1][0]++;
      cov_26itzol5jn().s[20]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_26itzol5jn().b[1][1]++;
    }
    cov_26itzol5jn().s[21]++;
    try {
      /* istanbul ignore next */
      cov_26itzol5jn().s[22]++;
      // Inicializar jobs de warmup programados
      await this.initializeWarmupJobs();
      // Inicializar limpieza automÃ¡tica
      /* istanbul ignore next */
      cov_26itzol5jn().s[23]++;
      this.startCleanupScheduler();
      // Inicializar monitoreo de memoria
      /* istanbul ignore next */
      cov_26itzol5jn().s[24]++;
      this.startMemoryMonitoring();
      /* istanbul ignore next */
      cov_26itzol5jn().s[25]++;
      this.isInitialized = true;
      /* istanbul ignore next */
      cov_26itzol5jn().s[26]++;
      console.log('[ENTERPRISE_CACHE] Sistema inicializado correctamente');
    } catch (error) {
      /* istanbul ignore next */
      cov_26itzol5jn().s[27]++;
      console.error('[ENTERPRISE_CACHE] Error inicializando sistema:', error);
      /* istanbul ignore next */
      cov_26itzol5jn().s[28]++;
      throw error;
    }
  }
  /**
  * Obtiene datos del cachÃ© con funcionalidades enterprise
  */
  async get(key, config, context) {
    /* istanbul ignore next */
    cov_26itzol5jn().f[8]++;
    const startTime =
    /* istanbul ignore next */
    (cov_26itzol5jn().s[29]++, Date.now());
    const fullKey =
    /* istanbul ignore next */
    (cov_26itzol5jn().s[30]++, this.generateKey(config, key));
    /* istanbul ignore next */
    cov_26itzol5jn().s[31]++;
    try {
      /* istanbul ignore next */
      cov_26itzol5jn().s[32]++;
      // Verificar permisos de acceso si es necesario
      if (
      /* istanbul ignore next */
      (cov_26itzol5jn().b[3][0]++, config.securityLevel === 'critical') &&
      /* istanbul ignore next */
      (cov_26itzol5jn().b[3][1]++, context)) {
        /* istanbul ignore next */
        cov_26itzol5jn().b[2][0]++;
        cov_26itzol5jn().s[33]++;
        await this.verifyAccess(fullKey, context);
      } else
      /* istanbul ignore next */
      {
        cov_26itzol5jn().b[2][1]++;
      }
      // Intentar obtener del cachÃ©
      const result =
      /* istanbul ignore next */
      (cov_26itzol5jn().s[34]++, await _cachemanager.cacheManager.get(key, config));
      const responseTime =
      /* istanbul ignore next */
      (cov_26itzol5jn().s[35]++, Date.now() - startTime);
      // Actualizar mÃ©tricas
      /* istanbul ignore next */
      cov_26itzol5jn().s[36]++;
      if (config.enableMetrics) {
        /* istanbul ignore next */
        cov_26itzol5jn().b[4][0]++;
        cov_26itzol5jn().s[37]++;
        this.updateMetrics(fullKey, result !== null, responseTime);
      } else
      /* istanbul ignore next */
      {
        cov_26itzol5jn().b[4][1]++;
      }
      // Registrar acceso si estÃ¡ habilitado
      cov_26itzol5jn().s[38]++;
      if (
      /* istanbul ignore next */
      (cov_26itzol5jn().b[6][0]++, config.enableAuditLogging) &&
      /* istanbul ignore next */
      (cov_26itzol5jn().b[6][1]++, context)) {
        /* istanbul ignore next */
        cov_26itzol5jn().b[5][0]++;
        cov_26itzol5jn().s[39]++;
        await this.logCacheAccess('GET', fullKey, result !== null, context);
      } else
      /* istanbul ignore next */
      {
        cov_26itzol5jn().b[5][1]++;
      }
      cov_26itzol5jn().s[40]++;
      return result;
    } catch (error) {
      const responseTime =
      /* istanbul ignore next */
      (cov_26itzol5jn().s[41]++, Date.now() - startTime);
      // Actualizar mÃ©tricas de error
      /* istanbul ignore next */
      cov_26itzol5jn().s[42]++;
      if (config.enableMetrics) {
        /* istanbul ignore next */
        cov_26itzol5jn().b[7][0]++;
        cov_26itzol5jn().s[43]++;
        this.updateErrorMetrics(fullKey, responseTime);
      } else
      /* istanbul ignore next */
      {
        cov_26itzol5jn().b[7][1]++;
      }
      cov_26itzol5jn().s[44]++;
      console.error('[ENTERPRISE_CACHE] Error en get:', error);
      /* istanbul ignore next */
      cov_26itzol5jn().s[45]++;
      return null;
    }
  }
  /**
  * Establece datos en el cachÃ© con funcionalidades enterprise
  */
  async set(key, value, config, context) {
    /* istanbul ignore next */
    cov_26itzol5jn().f[9]++;
    const startTime =
    /* istanbul ignore next */
    (cov_26itzol5jn().s[46]++, Date.now());
    const fullKey =
    /* istanbul ignore next */
    (cov_26itzol5jn().s[47]++, this.generateKey(config, key));
    /* istanbul ignore next */
    cov_26itzol5jn().s[48]++;
    try {
      /* istanbul ignore next */
      cov_26itzol5jn().s[49]++;
      // Verificar permisos de escritura si es necesario
      if (
      /* istanbul ignore next */
      (cov_26itzol5jn().b[9][0]++, config.securityLevel === 'critical') &&
      /* istanbul ignore next */
      (cov_26itzol5jn().b[9][1]++, context)) {
        /* istanbul ignore next */
        cov_26itzol5jn().b[8][0]++;
        cov_26itzol5jn().s[50]++;
        await this.verifyWriteAccess(fullKey, context);
      } else
      /* istanbul ignore next */
      {
        cov_26itzol5jn().b[8][1]++;
      }
      // Encriptar datos si estÃ¡ configurado
      let processedValue =
      /* istanbul ignore next */
      (cov_26itzol5jn().s[51]++, value);
      /* istanbul ignore next */
      cov_26itzol5jn().s[52]++;
      if (config.encryptData) {
        /* istanbul ignore next */
        cov_26itzol5jn().b[10][0]++;
        cov_26itzol5jn().s[53]++;
        processedValue = await this.encryptData(value);
      } else
      /* istanbul ignore next */
      {
        cov_26itzol5jn().b[10][1]++;
      }
      // Establecer en cachÃ©
      const success =
      /* istanbul ignore next */
      (cov_26itzol5jn().s[54]++, await _cachemanager.cacheManager.set(key, processedValue, config));
      const responseTime =
      /* istanbul ignore next */
      (cov_26itzol5jn().s[55]++, Date.now() - startTime);
      // Actualizar mÃ©tricas
      /* istanbul ignore next */
      cov_26itzol5jn().s[56]++;
      if (config.enableMetrics) {
        /* istanbul ignore next */
        cov_26itzol5jn().b[11][0]++;
        cov_26itzol5jn().s[57]++;
        this.updateSetMetrics(fullKey, success, responseTime);
      } else
      /* istanbul ignore next */
      {
        cov_26itzol5jn().b[11][1]++;
      }
      // Registrar escritura si estÃ¡ habilitado
      cov_26itzol5jn().s[58]++;
      if (
      /* istanbul ignore next */
      (cov_26itzol5jn().b[13][0]++, config.enableAuditLogging) &&
      /* istanbul ignore next */
      (cov_26itzol5jn().b[13][1]++, context)) {
        /* istanbul ignore next */
        cov_26itzol5jn().b[12][0]++;
        cov_26itzol5jn().s[59]++;
        await this.logCacheAccess('SET', fullKey, success, context);
      } else
      /* istanbul ignore next */
      {
        cov_26itzol5jn().b[12][1]++;
      }
      // Programar invalidaciÃ³n de dependencias si es necesario
      cov_26itzol5jn().s[60]++;
      if (
      /* istanbul ignore next */
      (cov_26itzol5jn().b[15][0]++, config.enableInvalidation) &&
      /* istanbul ignore next */
      (cov_26itzol5jn().b[15][1]++, config.dependentKeys)) {
        /* istanbul ignore next */
        cov_26itzol5jn().b[14][0]++;
        cov_26itzol5jn().s[61]++;
        await this.scheduleDependencyInvalidation(fullKey, config.dependentKeys);
      } else
      /* istanbul ignore next */
      {
        cov_26itzol5jn().b[14][1]++;
      }
      cov_26itzol5jn().s[62]++;
      return success;
    } catch (error) {
      const responseTime =
      /* istanbul ignore next */
      (cov_26itzol5jn().s[63]++, Date.now() - startTime);
      // Actualizar mÃ©tricas de error
      /* istanbul ignore next */
      cov_26itzol5jn().s[64]++;
      if (config.enableMetrics) {
        /* istanbul ignore next */
        cov_26itzol5jn().b[16][0]++;
        cov_26itzol5jn().s[65]++;
        this.updateErrorMetrics(fullKey, responseTime);
      } else
      /* istanbul ignore next */
      {
        cov_26itzol5jn().b[16][1]++;
      }
      cov_26itzol5jn().s[66]++;
      console.error('[ENTERPRISE_CACHE] Error en set:', error);
      /* istanbul ignore next */
      cov_26itzol5jn().s[67]++;
      return false;
    }
  }
  /**
  * InvalidaciÃ³n inteligente de cachÃ©
  */
  async invalidate(pattern, reason =
  /* istanbul ignore next */
  (cov_26itzol5jn().b[17][0]++, 'manual'), context) {
    /* istanbul ignore next */
    cov_26itzol5jn().f[10]++;
    cov_26itzol5jn().s[68]++;
    try {
      const affectedKeys =
      /* istanbul ignore next */
      (cov_26itzol5jn().s[69]++, await this.findKeysByPattern(pattern));
      // Eliminar claves del cachÃ©
      const deletionPromises =
      /* istanbul ignore next */
      (cov_26itzol5jn().s[70]++, affectedKeys.map(key => {
        /* istanbul ignore next */
        cov_26itzol5jn().f[11]++;
        cov_26itzol5jn().s[71]++;
        return _redis.redisCache.del(key);
      }));
      /* istanbul ignore next */
      cov_26itzol5jn().s[72]++;
      await Promise.all(deletionPromises);
      // Registrar evento de invalidaciÃ³n
      const invalidationEvent =
      /* istanbul ignore next */
      (cov_26itzol5jn().s[73]++, {
        pattern,
        reason,
        affectedKeys,
        timestamp: new Date().toISOString(),
        triggeredBy: context?.userId
      });
      /* istanbul ignore next */
      cov_26itzol5jn().s[74]++;
      this.invalidationJobs.set(`inv_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`, invalidationEvent);
      // Registrar en auditorÃ­a si hay contexto
      /* istanbul ignore next */
      cov_26itzol5jn().s[75]++;
      if (context) {
        /* istanbul ignore next */
        cov_26itzol5jn().b[18][0]++;
        cov_26itzol5jn().s[76]++;
        await _enterpriseauditsystem.enterpriseAuditSystem.logEnterpriseEvent({
          user_id: context.userId,
          event_type: 'CACHE_INVALIDATION',
          event_category: 'system_operation',
          severity: 'medium',
          description: `Cache invalidation: ${pattern}`,
          metadata: {
            pattern,
            reason,
            affected_keys_count: affectedKeys.length,
            affected_keys: affectedKeys.slice(0, 10) // Primeras 10 para no saturar
          },
          ip_address: context.ipAddress,
          user_agent: context.userAgent
        }, context);
      } else
      /* istanbul ignore next */
      {
        cov_26itzol5jn().b[18][1]++;
      }
      cov_26itzol5jn().s[77]++;
      console.log(`[ENTERPRISE_CACHE] Invalidated ${affectedKeys.length} keys for pattern: ${pattern}`);
      /* istanbul ignore next */
      cov_26itzol5jn().s[78]++;
      return affectedKeys;
    } catch (error) {
      /* istanbul ignore next */
      cov_26itzol5jn().s[79]++;
      console.error('[ENTERPRISE_CACHE] Error en invalidaciÃ³n:', error);
      /* istanbul ignore next */
      cov_26itzol5jn().s[80]++;
      return [];
    }
  }
  /**
  * Warmup inteligente de cachÃ©
  */
  async warmup(keys, config, dataFetcher) {
    /* istanbul ignore next */
    cov_26itzol5jn().f[12]++;
    const jobId =
    /* istanbul ignore next */
    (cov_26itzol5jn().s[81]++, `warmup_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);
    const warmupJob =
    /* istanbul ignore next */
    (cov_26itzol5jn().s[82]++, {
      id: jobId,
      pattern: keys.join(','),
      strategy:
      /* istanbul ignore next */
      (cov_26itzol5jn().b[19][0]++, config.warmupStrategy) ||
      /* istanbul ignore next */
      (cov_26itzol5jn().b[19][1]++, 'lazy'),
      interval: config.warmupInterval,
      lastRun: new Date().toISOString(),
      status: 'running'
    });
    /* istanbul ignore next */
    cov_26itzol5jn().s[83]++;
    this.warmupJobs.set(jobId, warmupJob);
    /* istanbul ignore next */
    cov_26itzol5jn().s[84]++;
    try {
      const warmupPromises =
      /* istanbul ignore next */
      (cov_26itzol5jn().s[85]++, keys.map(async key => {
        /* istanbul ignore next */
        cov_26itzol5jn().f[13]++;
        cov_26itzol5jn().s[86]++;
        try {
          // Verificar si ya existe en cachÃ©
          const existing =
          /* istanbul ignore next */
          (cov_26itzol5jn().s[87]++, await this.get(key, config));
          /* istanbul ignore next */
          cov_26itzol5jn().s[88]++;
          if (existing !== null) {
            /* istanbul ignore next */
            cov_26itzol5jn().b[20][0]++;
            cov_26itzol5jn().s[89]++;
            return; // Ya estÃ¡ en cachÃ©
          } else
          /* istanbul ignore next */
          {
            cov_26itzol5jn().b[20][1]++;
          }
          // Obtener datos y cachear
          const data =
          /* istanbul ignore next */
          (cov_26itzol5jn().s[90]++, await dataFetcher(key));
          /* istanbul ignore next */
          cov_26itzol5jn().s[91]++;
          await this.set(key, data, config);
        } catch (error) {
          /* istanbul ignore next */
          cov_26itzol5jn().s[92]++;
          console.warn(`[ENTERPRISE_CACHE] Error warming up key ${key}:`, error);
        }
      }));
      /* istanbul ignore next */
      cov_26itzol5jn().s[93]++;
      await Promise.all(warmupPromises);
      // Actualizar estado del job
      /* istanbul ignore next */
      cov_26itzol5jn().s[94]++;
      warmupJob.status = 'completed';
      /* istanbul ignore next */
      cov_26itzol5jn().s[95]++;
      warmupJob.nextRun = config.warmupInterval ?
      /* istanbul ignore next */
      (cov_26itzol5jn().b[21][0]++, new Date(Date.now() + config.warmupInterval * 1000).toISOString()) :
      /* istanbul ignore next */
      (cov_26itzol5jn().b[21][1]++, undefined);
      /* istanbul ignore next */
      cov_26itzol5jn().s[96]++;
      console.log(`[ENTERPRISE_CACHE] Warmup completed for ${keys.length} keys`);
    } catch (error) {
      /* istanbul ignore next */
      cov_26itzol5jn().s[97]++;
      warmupJob.status = 'failed';
      /* istanbul ignore next */
      cov_26itzol5jn().s[98]++;
      console.error('[ENTERPRISE_CACHE] Error en warmup:', error);
    }
  }
  /**
  * Obtiene mÃ©tricas del sistema de cachÃ©
  */
  getMetrics() {
    /* istanbul ignore next */
    cov_26itzol5jn().f[14]++;
    cov_26itzol5jn().s[99]++;
    return Object.fromEntries(this.metrics);
  }
  /**
  * Obtiene estadÃ­sticas de invalidaciÃ³n
  */
  getInvalidationStats() {
    /* istanbul ignore next */
    cov_26itzol5jn().f[15]++;
    cov_26itzol5jn().s[100]++;
    return Array.from(this.invalidationJobs.values());
  }
  /**
  * Obtiene estadÃ­sticas de warmup
  */
  getWarmupStats() {
    /* istanbul ignore next */
    cov_26itzol5jn().f[16]++;
    cov_26itzol5jn().s[101]++;
    return Array.from(this.warmupJobs.values());
  }
  // =====================================================
  // MÃTODOS PRIVADOS
  // =====================================================
  generateKey(config, key) {
    /* istanbul ignore next */
    cov_26itzol5jn().f[17]++;
    cov_26itzol5jn().s[102]++;
    return `${config.prefix}:${key}`;
  }
  async verifyAccess(key, context) {
    /* istanbul ignore next */
    cov_26itzol5jn().f[18]++;
    cov_26itzol5jn().s[103]++;
    // Verificar permisos de acceso para datos crÃ­ticos
    if (
    /* istanbul ignore next */
    (cov_26itzol5jn().b[23][0]++, !context.permissions.includes('cache_access')) &&
    /* istanbul ignore next */
    (cov_26itzol5jn().b[23][1]++, !context.permissions.includes('admin_access'))) {
      /* istanbul ignore next */
      cov_26itzol5jn().b[22][0]++;
      cov_26itzol5jn().s[104]++;
      throw new Error('Insufficient permissions for cache access');
    } else
    /* istanbul ignore next */
    {
      cov_26itzol5jn().b[22][1]++;
    }
  }
  async verifyWriteAccess(key, context) {
    /* istanbul ignore next */
    cov_26itzol5jn().f[19]++;
    cov_26itzol5jn().s[105]++;
    // Verificar permisos de escritura para datos crÃ­ticos
    if (
    /* istanbul ignore next */
    (cov_26itzol5jn().b[25][0]++, !context.permissions.includes('cache_write')) &&
    /* istanbul ignore next */
    (cov_26itzol5jn().b[25][1]++, !context.permissions.includes('admin_access'))) {
      /* istanbul ignore next */
      cov_26itzol5jn().b[24][0]++;
      cov_26itzol5jn().s[106]++;
      throw new Error('Insufficient permissions for cache write');
    } else
    /* istanbul ignore next */
    {
      cov_26itzol5jn().b[24][1]++;
    }
  }
  async encryptData(data) {
    /* istanbul ignore next */
    cov_26itzol5jn().f[20]++;
    cov_26itzol5jn().s[107]++;
    // ImplementaciÃ³n bÃ¡sica de encriptaciÃ³n
    // En producciÃ³n, usar una librerÃ­a de encriptaciÃ³n robusta
    try {
      const jsonString =
      /* istanbul ignore next */
      (cov_26itzol5jn().s[108]++, JSON.stringify(data));
      const encoded =
      /* istanbul ignore next */
      (cov_26itzol5jn().s[109]++, Buffer.from(jsonString).toString('base64'));
      /* istanbul ignore next */
      cov_26itzol5jn().s[110]++;
      return {
        encrypted: true,
        data: encoded
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_26itzol5jn().s[111]++;
      console.warn('[ENTERPRISE_CACHE] Error encriptando datos:', error);
      /* istanbul ignore next */
      cov_26itzol5jn().s[112]++;
      return data;
    }
  }
  updateMetrics(key, hit, responseTime) {
    /* istanbul ignore next */
    cov_26itzol5jn().f[21]++;
    const existing =
    /* istanbul ignore next */
    (cov_26itzol5jn().s[113]++,
    /* istanbul ignore next */
    (cov_26itzol5jn().b[26][0]++, this.metrics.get(key)) ||
    /* istanbul ignore next */
    (cov_26itzol5jn().b[26][1]++, {
      hits: 0,
      misses: 0,
      hitRate: 0,
      avgResponseTime: 0,
      memoryUsage: 0,
      evictions: 0,
      errors: 0,
      lastAccess: new Date().toISOString()
    }));
    /* istanbul ignore next */
    cov_26itzol5jn().s[114]++;
    if (hit) {
      /* istanbul ignore next */
      cov_26itzol5jn().b[27][0]++;
      cov_26itzol5jn().s[115]++;
      existing.hits++;
    } else {
      /* istanbul ignore next */
      cov_26itzol5jn().b[27][1]++;
      cov_26itzol5jn().s[116]++;
      existing.misses++;
    }
    const totalRequests =
    /* istanbul ignore next */
    (cov_26itzol5jn().s[117]++, existing.hits + existing.misses);
    /* istanbul ignore next */
    cov_26itzol5jn().s[118]++;
    existing.hitRate = totalRequests > 0 ?
    /* istanbul ignore next */
    (cov_26itzol5jn().b[28][0]++, existing.hits / totalRequests) :
    /* istanbul ignore next */
    (cov_26itzol5jn().b[28][1]++, 0);
    /* istanbul ignore next */
    cov_26itzol5jn().s[119]++;
    existing.avgResponseTime = (existing.avgResponseTime + responseTime) / 2;
    /* istanbul ignore next */
    cov_26itzol5jn().s[120]++;
    existing.lastAccess = new Date().toISOString();
    /* istanbul ignore next */
    cov_26itzol5jn().s[121]++;
    this.metrics.set(key, existing);
  }
  updateSetMetrics(key, success, responseTime) {
    /* istanbul ignore next */
    cov_26itzol5jn().f[22]++;
    const existing =
    /* istanbul ignore next */
    (cov_26itzol5jn().s[122]++,
    /* istanbul ignore next */
    (cov_26itzol5jn().b[29][0]++, this.metrics.get(key)) ||
    /* istanbul ignore next */
    (cov_26itzol5jn().b[29][1]++, {
      hits: 0,
      misses: 0,
      hitRate: 0,
      avgResponseTime: 0,
      memoryUsage: 0,
      evictions: 0,
      errors: 0,
      lastAccess: new Date().toISOString()
    }));
    /* istanbul ignore next */
    cov_26itzol5jn().s[123]++;
    existing.avgResponseTime = (existing.avgResponseTime + responseTime) / 2;
    /* istanbul ignore next */
    cov_26itzol5jn().s[124]++;
    existing.lastAccess = new Date().toISOString();
    /* istanbul ignore next */
    cov_26itzol5jn().s[125]++;
    if (!success) {
      /* istanbul ignore next */
      cov_26itzol5jn().b[30][0]++;
      cov_26itzol5jn().s[126]++;
      existing.errors++;
    } else
    /* istanbul ignore next */
    {
      cov_26itzol5jn().b[30][1]++;
    }
    cov_26itzol5jn().s[127]++;
    this.metrics.set(key, existing);
  }
  updateErrorMetrics(key, responseTime) {
    /* istanbul ignore next */
    cov_26itzol5jn().f[23]++;
    const existing =
    /* istanbul ignore next */
    (cov_26itzol5jn().s[128]++,
    /* istanbul ignore next */
    (cov_26itzol5jn().b[31][0]++, this.metrics.get(key)) ||
    /* istanbul ignore next */
    (cov_26itzol5jn().b[31][1]++, {
      hits: 0,
      misses: 0,
      hitRate: 0,
      avgResponseTime: 0,
      memoryUsage: 0,
      evictions: 0,
      errors: 0,
      lastAccess: new Date().toISOString()
    }));
    /* istanbul ignore next */
    cov_26itzol5jn().s[129]++;
    existing.errors++;
    /* istanbul ignore next */
    cov_26itzol5jn().s[130]++;
    existing.avgResponseTime = (existing.avgResponseTime + responseTime) / 2;
    /* istanbul ignore next */
    cov_26itzol5jn().s[131]++;
    existing.lastAccess = new Date().toISOString();
    /* istanbul ignore next */
    cov_26itzol5jn().s[132]++;
    this.metrics.set(key, existing);
  }
  async logCacheAccess(operation, key, success, context) {
    /* istanbul ignore next */
    cov_26itzol5jn().f[24]++;
    cov_26itzol5jn().s[133]++;
    try {
      /* istanbul ignore next */
      cov_26itzol5jn().s[134]++;
      await _enterpriseauditsystem.enterpriseAuditSystem.logEnterpriseEvent({
        user_id: context.userId,
        event_type: 'CACHE_ACCESS',
        event_category: 'system_operation',
        severity: 'low',
        description: `Cache ${operation}: ${key}`,
        metadata: {
          operation,
          key,
          success,
          cache_system: 'enterprise'
        },
        ip_address: context.ipAddress,
        user_agent: context.userAgent
      }, context);
    } catch (error) {
      /* istanbul ignore next */
      cov_26itzol5jn().s[135]++;
      console.warn('[ENTERPRISE_CACHE] Error logging cache access:', error);
    }
  }
  async findKeysByPattern(pattern) {
    /* istanbul ignore next */
    cov_26itzol5jn().f[25]++;
    cov_26itzol5jn().s[136]++;
    try {
      // Usar Redis SCAN para encontrar claves por patrÃ³n
      const keys =
      /* istanbul ignore next */
      (cov_26itzol5jn().s[137]++, []);
      const client =
      /* istanbul ignore next */
      (cov_26itzol5jn().s[138]++, _redis.redisCache['client']); // Acceder al cliente Redis interno
      /* istanbul ignore next */
      cov_26itzol5jn().s[139]++;
      if (
      /* istanbul ignore next */
      (cov_26itzol5jn().b[33][0]++, client) &&
      /* istanbul ignore next */
      (cov_26itzol5jn().b[33][1]++, typeof client.scanStream === 'function')) {
        /* istanbul ignore next */
        cov_26itzol5jn().b[32][0]++;
        const stream =
        /* istanbul ignore next */
        (cov_26itzol5jn().s[140]++, client.scanStream({
          match: pattern,
          count: 100
        }));
        /* istanbul ignore next */
        cov_26itzol5jn().s[141]++;
        return new Promise((resolve, reject) => {
          /* istanbul ignore next */
          cov_26itzol5jn().f[26]++;
          cov_26itzol5jn().s[142]++;
          stream.on('data', resultKeys => {
            /* istanbul ignore next */
            cov_26itzol5jn().f[27]++;
            cov_26itzol5jn().s[143]++;
            keys.push(...resultKeys);
          });
          /* istanbul ignore next */
          cov_26itzol5jn().s[144]++;
          stream.on('end', () => {
            /* istanbul ignore next */
            cov_26itzol5jn().f[28]++;
            cov_26itzol5jn().s[145]++;
            resolve(keys);
          });
          /* istanbul ignore next */
          cov_26itzol5jn().s[146]++;
          stream.on('error', error => {
            /* istanbul ignore next */
            cov_26itzol5jn().f[29]++;
            cov_26itzol5jn().s[147]++;
            reject(error);
          });
        });
      } else
      /* istanbul ignore next */
      {
        cov_26itzol5jn().b[32][1]++;
      }
      cov_26itzol5jn().s[148]++;
      return keys;
    } catch (error) {
      /* istanbul ignore next */
      cov_26itzol5jn().s[149]++;
      console.error('[ENTERPRISE_CACHE] Error finding keys by pattern:', error);
      /* istanbul ignore next */
      cov_26itzol5jn().s[150]++;
      return [];
    }
  }
  async scheduleDependencyInvalidation(key, dependentKeys) {
    /* istanbul ignore next */
    cov_26itzol5jn().f[30]++;
    cov_26itzol5jn().s[151]++;
    // Programar invalidaciÃ³n de claves dependientes
    // Esto se podrÃ­a implementar con un job queue como Bull o Agenda
    setTimeout(async () => {
      /* istanbul ignore next */
      cov_26itzol5jn().f[31]++;
      cov_26itzol5jn().s[152]++;
      for (const depKey of dependentKeys) {
        /* istanbul ignore next */
        cov_26itzol5jn().s[153]++;
        await this.invalidate(depKey, 'dependency_changed');
      }
    }, 1000); // 1 segundo de delay
  }
  async initializeWarmupJobs() {
    /* istanbul ignore next */
    cov_26itzol5jn().f[32]++;
    cov_26itzol5jn().s[154]++;
    // Inicializar jobs de warmup programados
    // En una implementaciÃ³n real, esto se cargarÃ­a desde una base de datos
    console.log('[ENTERPRISE_CACHE] Warmup jobs initialized');
  }
  startCleanupScheduler() {
    /* istanbul ignore next */
    cov_26itzol5jn().f[33]++;
    cov_26itzol5jn().s[155]++;
    // Limpiar mÃ©tricas antiguas cada hora
    setInterval(() => {
      /* istanbul ignore next */
      cov_26itzol5jn().f[34]++;
      const oneHourAgo =
      /* istanbul ignore next */
      (cov_26itzol5jn().s[156]++, Date.now() - 60 * 60 * 1000);
      /* istanbul ignore next */
      cov_26itzol5jn().s[157]++;
      for (const [key, metrics] of this.metrics.entries()) {
        const lastAccessTime =
        /* istanbul ignore next */
        (cov_26itzol5jn().s[158]++, new Date(metrics.lastAccess).getTime());
        /* istanbul ignore next */
        cov_26itzol5jn().s[159]++;
        if (lastAccessTime < oneHourAgo) {
          /* istanbul ignore next */
          cov_26itzol5jn().b[34][0]++;
          cov_26itzol5jn().s[160]++;
          this.metrics.delete(key);
        } else
        /* istanbul ignore next */
        {
          cov_26itzol5jn().b[34][1]++;
        }
      }
    }, 60 * 60 * 1000); // 1 hora
  }
  startMemoryMonitoring() {
    /* istanbul ignore next */
    cov_26itzol5jn().f[35]++;
    cov_26itzol5jn().s[161]++;
    // Monitorear uso de memoria cada 5 minutos
    setInterval(() => {
      /* istanbul ignore next */
      cov_26itzol5jn().f[36]++;
      const memoryUsage =
      /* istanbul ignore next */
      (cov_26itzol5jn().s[162]++, process.memoryUsage());
      /* istanbul ignore next */
      cov_26itzol5jn().s[163]++;
      if (memoryUsage.heapUsed > 500 * 1024 * 1024) {
        /* istanbul ignore next */
        cov_26itzol5jn().b[35][0]++;
        cov_26itzol5jn().s[164]++;
        console.warn('[ENTERPRISE_CACHE] High memory usage detected:', memoryUsage);
        // AquÃ­ se podrÃ­a implementar limpieza automÃ¡tica
      } else
      /* istanbul ignore next */
      {
        cov_26itzol5jn().b[35][1]++;
      }
    }, 5 * 60 * 1000); // 5 minutos
  }
}
const enterpriseCacheSystem =
/* istanbul ignore next */
(cov_26itzol5jn().s[165]++, EnterpriseCacheSystem.getInstance());
const EnterpriseCacheUtils =
/* istanbul ignore next */
(cov_26itzol5jn().s[166]++, {
  /**
  * Cache para datos de autenticaciÃ³n crÃ­ticos
  */
  async cacheAuthData(key, fetcher, context) {
    /* istanbul ignore next */
    cov_26itzol5jn().f[37]++;
    const cached =
    /* istanbul ignore next */
    (cov_26itzol5jn().s[167]++, await enterpriseCacheSystem.get(key, ENTERPRISE_CACHE_CONFIGS.AUTH_CRITICAL, context));
    /* istanbul ignore next */
    cov_26itzol5jn().s[168]++;
    if (cached !== null) {
      /* istanbul ignore next */
      cov_26itzol5jn().b[36][0]++;
      cov_26itzol5jn().s[169]++;
      return cached;
    } else
    /* istanbul ignore next */
    {
      cov_26itzol5jn().b[36][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_26itzol5jn().s[170]++, await fetcher());
    /* istanbul ignore next */
    cov_26itzol5jn().s[171]++;
    await enterpriseCacheSystem.set(key, data, ENTERPRISE_CACHE_CONFIGS.AUTH_CRITICAL, context);
    /* istanbul ignore next */
    cov_26itzol5jn().s[172]++;
    return data;
  },
  /**
  * Cache inteligente para productos
  */
  async cacheProductData(key, fetcher) {
    /* istanbul ignore next */
    cov_26itzol5jn().f[38]++;
    const cached =
    /* istanbul ignore next */
    (cov_26itzol5jn().s[173]++, await enterpriseCacheSystem.get(key, ENTERPRISE_CACHE_CONFIGS.PRODUCTS_SMART));
    /* istanbul ignore next */
    cov_26itzol5jn().s[174]++;
    if (cached !== null) {
      /* istanbul ignore next */
      cov_26itzol5jn().b[37][0]++;
      cov_26itzol5jn().s[175]++;
      return cached;
    } else
    /* istanbul ignore next */
    {
      cov_26itzol5jn().b[37][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_26itzol5jn().s[176]++, await fetcher());
    /* istanbul ignore next */
    cov_26itzol5jn().s[177]++;
    await enterpriseCacheSystem.set(key, data, ENTERPRISE_CACHE_CONFIGS.PRODUCTS_SMART);
    /* istanbul ignore next */
    cov_26itzol5jn().s[178]++;
    return data;
  },
  /**
  * Cache de alta performance para APIs pÃºblicas
  */
  async cachePublicData(key, fetcher) {
    /* istanbul ignore next */
    cov_26itzol5jn().f[39]++;
    const cached =
    /* istanbul ignore next */
    (cov_26itzol5jn().s[179]++, await enterpriseCacheSystem.get(key, ENTERPRISE_CACHE_CONFIGS.PUBLIC_PERFORMANCE));
    /* istanbul ignore next */
    cov_26itzol5jn().s[180]++;
    if (cached !== null) {
      /* istanbul ignore next */
      cov_26itzol5jn().b[38][0]++;
      cov_26itzol5jn().s[181]++;
      return cached;
    } else
    /* istanbul ignore next */
    {
      cov_26itzol5jn().b[38][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_26itzol5jn().s[182]++, await fetcher());
    /* istanbul ignore next */
    cov_26itzol5jn().s[183]++;
    await enterpriseCacheSystem.set(key, data, ENTERPRISE_CACHE_CONFIGS.PUBLIC_PERFORMANCE);
    /* istanbul ignore next */
    cov_26itzol5jn().s[184]++;
    return data;
  },
  /**
  * InvalidaciÃ³n masiva por patrones
  */
  async invalidateByPatterns(patterns, context) {
    /* istanbul ignore next */
    cov_26itzol5jn().f[40]++;
    const invalidationPromises =
    /* istanbul ignore next */
    (cov_26itzol5jn().s[185]++, patterns.map(pattern => {
      /* istanbul ignore next */
      cov_26itzol5jn().f[41]++;
      cov_26itzol5jn().s[186]++;
      return enterpriseCacheSystem.invalidate(pattern, 'manual', context);
    }));
    /* istanbul ignore next */
    cov_26itzol5jn().s[187]++;
    await Promise.all(invalidationPromises);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,