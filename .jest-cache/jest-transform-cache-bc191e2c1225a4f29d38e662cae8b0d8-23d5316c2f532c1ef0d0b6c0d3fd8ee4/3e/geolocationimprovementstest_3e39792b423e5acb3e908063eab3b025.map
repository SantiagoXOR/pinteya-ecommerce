{"version":3,"names":["cov_tf0u1f5mk","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","mockGeolocation","getCurrentPosition","_vitest","vi","fn","watchPosition","clearWatch","mockPermissions","query","beforeEach","clearAllMocks","Object","defineProperty","navigator","value","writable","spyOn","console","mockImplementation","afterEach","restoreAllMocks","describe","it","expect","_geolocation","isGeolocationSupported","toBe","geolocation","mockPosition","coords","latitude","longitude","accuracy","timestamp","Date","now","success","result","HIGH_ACCURACY_OPTIONS","toEqual","lat","lng","attemptCount","error","options","code","message","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","rejects","toMatchObject","retryable","tracker","onUpdate","onError","GeolocationTracker","stop","mockResolvedValue","state","mockReturnValue","getIsTracking","toHaveBeenCalled","toHaveBeenCalledWith","objectContaining","watchCallCount","setTimeout","Promise","resolve","toBeGreaterThan","stats","getStats","consecutiveErrors","toHaveProperty","geoError","toContain"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\tests\\geolocation-improvements.test.ts"],"sourcesContent":["/**\r\n * Tests para las mejoras del sistema de geolocalizaciÃ³n\r\n * Verifica el manejo de errores, retry logic y fallback mechanisms\r\n */\r\n\r\nimport { describe, it, expect, beforeEach, afterEach, vi, Mock } from 'vitest';\r\nimport {\r\n  GeolocationTracker,\r\n  getCurrentPosition,\r\n  isGeolocationSupported,\r\n  HIGH_ACCURACY_OPTIONS,\r\n  FALLBACK_OPTIONS,\r\n  BATTERY_SAVING_OPTIONS,\r\n  GeolocationError,\r\n  GeolocationPosition\r\n} from '@/lib/utils/geolocation';\r\n\r\n// Mock del navigator.geolocation\r\nconst mockGeolocation = {\r\n  getCurrentPosition: vi.fn(),\r\n  watchPosition: vi.fn(),\r\n  clearWatch: vi.fn()\r\n};\r\n\r\nconst mockPermissions = {\r\n  query: vi.fn()\r\n};\r\n\r\n// Setup global mocks\r\nbeforeEach(() => {\r\n  // Reset all mocks\r\n  vi.clearAllMocks();\r\n  \r\n  // Mock navigator.geolocation\r\n  Object.defineProperty(global.navigator, 'geolocation', {\r\n    value: mockGeolocation,\r\n    writable: true\r\n  });\r\n\r\n  // Mock navigator.permissions\r\n  Object.defineProperty(global.navigator, 'permissions', {\r\n    value: mockPermissions,\r\n    writable: true\r\n  });\r\n\r\n  // Mock console methods to avoid noise in tests\r\n  vi.spyOn(console, 'error').mockImplementation(() => {});\r\n  vi.spyOn(console, 'warn').mockImplementation(() => {});\r\n  vi.spyOn(console, 'log').mockImplementation(() => {});\r\n});\r\n\r\nafterEach(() => {\r\n  vi.restoreAllMocks();\r\n});\r\n\r\ndescribe('Geolocation Improvements', () => {\r\n  describe('isGeolocationSupported', () => {\r\n    it('should return true when geolocation is supported', () => {\r\n      expect(isGeolocationSupported()).toBe(true);\r\n    });\r\n\r\n    it('should return false when geolocation is not supported', () => {\r\n      // @ts-ignore\r\n      delete global.navigator.geolocation;\r\n      expect(isGeolocationSupported()).toBe(false);\r\n    });\r\n  });\r\n\r\n  describe('getCurrentPosition with retry logic', () => {\r\n    it('should succeed on first attempt', async () => {\r\n      const mockPosition = {\r\n        coords: {\r\n          latitude: 40.7128,\r\n          longitude: -74.0060,\r\n          accuracy: 10\r\n        },\r\n        timestamp: Date.now()\r\n      };\r\n\r\n      mockGeolocation.getCurrentPosition.mockImplementation((success) => {\r\n        success(mockPosition);\r\n      });\r\n\r\n      const result = await getCurrentPosition(HIGH_ACCURACY_OPTIONS);\r\n      \r\n      expect(result).toEqual({\r\n        lat: 40.7128,\r\n        lng: -74.0060,\r\n        accuracy: 10,\r\n        timestamp: mockPosition.timestamp\r\n      });\r\n    });\r\n\r\n    it('should retry with fallback options on timeout', async () => {\r\n      let attemptCount = 0;\r\n      \r\n      mockGeolocation.getCurrentPosition.mockImplementation((success, error, options) => {\r\n        attemptCount++;\r\n        \r\n        if (attemptCount === 1) {\r\n          // First attempt fails with timeout\r\n          error({\r\n            code: 3, // TIMEOUT\r\n            message: 'Timeout',\r\n            PERMISSION_DENIED: 1,\r\n            POSITION_UNAVAILABLE: 2,\r\n            TIMEOUT: 3\r\n          });\r\n        } else {\r\n          // Second attempt succeeds\r\n          success({\r\n            coords: {\r\n              latitude: 40.7128,\r\n              longitude: -74.0060,\r\n              accuracy: 50\r\n            },\r\n            timestamp: Date.now()\r\n          });\r\n        }\r\n      });\r\n\r\n      const result = await getCurrentPosition(HIGH_ACCURACY_OPTIONS, 2);\r\n      \r\n      expect(attemptCount).toBe(2);\r\n      expect(result.lat).toBe(40.7128);\r\n      expect(result.lng).toBe(-74.0060);\r\n    });\r\n\r\n    it('should throw error after max retries', async () => {\r\n      mockGeolocation.getCurrentPosition.mockImplementation((success, error) => {\r\n        error({\r\n          code: 3, // TIMEOUT\r\n          message: 'Timeout',\r\n          PERMISSION_DENIED: 1,\r\n          POSITION_UNAVAILABLE: 2,\r\n          TIMEOUT: 3\r\n        });\r\n      });\r\n\r\n      await expect(getCurrentPosition(HIGH_ACCURACY_OPTIONS, 1)).rejects.toMatchObject({\r\n        code: 3,\r\n        type: 'TIMEOUT',\r\n        retryable: true\r\n      });\r\n    });\r\n\r\n    it('should not retry on permission denied', async () => {\r\n      mockGeolocation.getCurrentPosition.mockImplementation((success, error) => {\r\n        error({\r\n          code: 1, // PERMISSION_DENIED\r\n          message: 'Permission denied',\r\n          PERMISSION_DENIED: 1,\r\n          POSITION_UNAVAILABLE: 2,\r\n          TIMEOUT: 3\r\n        });\r\n      });\r\n\r\n      await expect(getCurrentPosition(HIGH_ACCURACY_OPTIONS, 2)).rejects.toMatchObject({\r\n        code: 1,\r\n        type: 'PERMISSION_DENIED',\r\n        retryable: false\r\n      });\r\n    });\r\n  });\r\n\r\n  describe('GeolocationTracker', () => {\r\n    let tracker: GeolocationTracker;\r\n    let onUpdate: Mock;\r\n    let onError: Mock;\r\n\r\n    beforeEach(() => {\r\n      onUpdate = vi.fn();\r\n      onError = vi.fn();\r\n      tracker = new GeolocationTracker(HIGH_ACCURACY_OPTIONS, onUpdate, onError);\r\n    });\r\n\r\n    afterEach(() => {\r\n      tracker.stop();\r\n    });\r\n\r\n    it('should start tracking successfully', async () => {\r\n      mockPermissions.query.mockResolvedValue({ state: 'granted' });\r\n      mockGeolocation.watchPosition.mockReturnValue(123);\r\n\r\n      await tracker.start();\r\n\r\n      expect(tracker.getIsTracking()).toBe(true);\r\n      expect(mockGeolocation.watchPosition).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should handle permission denied', async () => {\r\n      mockPermissions.query.mockResolvedValue({ state: 'denied' });\r\n\r\n      await tracker.start();\r\n\r\n      expect(tracker.getIsTracking()).toBe(false);\r\n      expect(onError).toHaveBeenCalledWith(\r\n        expect.objectContaining({\r\n          type: 'PERMISSION_DENIED',\r\n          retryable: false\r\n        })\r\n      );\r\n    });\r\n\r\n    it('should retry on timeout errors', async () => {\r\n      mockPermissions.query.mockResolvedValue({ state: 'granted' });\r\n      \r\n      let watchCallCount = 0;\r\n      mockGeolocation.watchPosition.mockImplementation((success, error) => {\r\n        watchCallCount++;\r\n        \r\n        if (watchCallCount === 1) {\r\n          // Simulate timeout error\r\n          setTimeout(() => {\r\n            error({\r\n              code: 3,\r\n              message: 'Timeout',\r\n              PERMISSION_DENIED: 1,\r\n              POSITION_UNAVAILABLE: 2,\r\n              TIMEOUT: 3\r\n            });\r\n          }, 10);\r\n        }\r\n        \r\n        return 123;\r\n      });\r\n\r\n      await tracker.start();\r\n\r\n      // Wait for error handling\r\n      await new Promise(resolve => setTimeout(resolve, 50));\r\n\r\n      expect(watchCallCount).toBeGreaterThan(1);\r\n    });\r\n\r\n    it('should switch to fallback mode after consecutive errors', async () => {\r\n      mockPermissions.query.mockResolvedValue({ state: 'granted' });\r\n      \r\n      mockGeolocation.watchPosition.mockImplementation((success, error) => {\r\n        // Always fail to trigger fallback mode\r\n        setTimeout(() => {\r\n          error({\r\n            code: 2,\r\n            message: 'Position unavailable',\r\n            PERMISSION_DENIED: 1,\r\n            POSITION_UNAVAILABLE: 2,\r\n            TIMEOUT: 3\r\n          });\r\n        }, 10);\r\n        return 123;\r\n      });\r\n\r\n      await tracker.start();\r\n\r\n      // Wait for multiple errors to trigger fallback\r\n      await new Promise(resolve => setTimeout(resolve, 200));\r\n\r\n      const stats = tracker.getStats();\r\n      expect(stats.consecutiveErrors).toBeGreaterThan(0);\r\n    });\r\n\r\n    it('should provide accurate stats', () => {\r\n      const stats = tracker.getStats();\r\n      \r\n      expect(stats).toHaveProperty('isTracking');\r\n      expect(stats).toHaveProperty('consecutiveErrors');\r\n      expect(stats).toHaveProperty('retryCount');\r\n      expect(stats).toHaveProperty('fallbackMode');\r\n      expect(stats).toHaveProperty('lastSuccessfulPosition');\r\n    });\r\n\r\n    it('should stop tracking properly', async () => {\r\n      mockPermissions.query.mockResolvedValue({ state: 'granted' });\r\n      mockGeolocation.watchPosition.mockReturnValue(123);\r\n\r\n      await tracker.start();\r\n      tracker.stop();\r\n\r\n      expect(tracker.getIsTracking()).toBe(false);\r\n      expect(mockGeolocation.clearWatch).toHaveBeenCalledWith(123);\r\n    });\r\n  });\r\n\r\n  describe('Error handling improvements', () => {\r\n    it('should provide detailed error information', async () => {\r\n      mockGeolocation.getCurrentPosition.mockImplementation((success, error) => {\r\n        error({\r\n          code: 3,\r\n          message: 'Timeout',\r\n          PERMISSION_DENIED: 1,\r\n          POSITION_UNAVAILABLE: 2,\r\n          TIMEOUT: 3\r\n        });\r\n      });\r\n\r\n      try {\r\n        await getCurrentPosition(HIGH_ACCURACY_OPTIONS, 0);\r\n      } catch (error) {\r\n        const geoError = error as GeolocationError;\r\n        \r\n        expect(geoError).toHaveProperty('code', 3);\r\n        expect(geoError).toHaveProperty('type', 'TIMEOUT');\r\n        expect(geoError).toHaveProperty('retryable', true);\r\n        expect(geoError).toHaveProperty('timestamp');\r\n        expect(geoError).toHaveProperty('originalError');\r\n        expect(geoError.message).toContain('Timeout al obtener ubicaciÃ³n');\r\n      }\r\n    });\r\n  });\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]}