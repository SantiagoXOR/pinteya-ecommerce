cb56e912b6e621f5ea1aff77520946a3
'use client';
"use strict";

/* istanbul ignore next */
function cov_1t7wpicbm2() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useUserActivity.ts";
  var hash = "8c5446c533ab3aa29012f4d6b75e1954eb743fed";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useUserActivity.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 37
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 36
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "7": {
        start: {
          line: 23,
          column: 15
        },
        end: {
          line: 23,
          column: 31
        }
      },
      "8": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 33
        }
      },
      "9": {
        start: {
          line: 26,
          column: 40
        },
        end: {
          line: 26,
          column: 64
        }
      },
      "10": {
        start: {
          line: 27,
          column: 38
        },
        end: {
          line: 27,
          column: 65
        }
      },
      "11": {
        start: {
          line: 28,
          column: 30
        },
        end: {
          line: 28,
          column: 56
        }
      },
      "12": {
        start: {
          line: 29,
          column: 34
        },
        end: {
          line: 32,
          column: 6
        }
      },
      "13": {
        start: {
          line: 33,
          column: 40
        },
        end: {
          line: 38,
          column: 6
        }
      },
      "14": {
        start: {
          line: 39,
          column: 30
        },
        end: {
          line: 43,
          column: 6
        }
      },
      "15": {
        start: {
          line: 45,
          column: 28
        },
        end: {
          line: 92,
          column: 6
        }
      },
      "16": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 27
        }
      },
      "17": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 23
        }
      },
      "18": {
        start: {
          line: 48,
          column: 31
        },
        end: {
          line: 48,
          column: 52
        }
      },
      "19": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "20": {
        start: {
          line: 50,
          column: 33
        },
        end: {
          line: 50,
          column: 54
        }
      },
      "21": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 95
        }
      },
      "22": {
        start: {
          line: 51,
          column: 41
        },
        end: {
          line: 51,
          column: 95
        }
      },
      "23": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 89
        }
      },
      "24": {
        start: {
          line: 52,
          column: 39
        },
        end: {
          line: 52,
          column: 89
        }
      },
      "25": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 98
        }
      },
      "26": {
        start: {
          line: 53,
          column: 42
        },
        end: {
          line: 53,
          column: 98
        }
      },
      "27": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 92
        }
      },
      "28": {
        start: {
          line: 54,
          column: 40
        },
        end: {
          line: 54,
          column: 92
        }
      },
      "29": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 97
        }
      },
      "30": {
        start: {
          line: 55,
          column: 38
        },
        end: {
          line: 55,
          column: 97
        }
      },
      "31": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 100
        }
      },
      "32": {
        start: {
          line: 56,
          column: 39
        },
        end: {
          line: 56,
          column: 100
        }
      },
      "33": {
        start: {
          line: 57,
          column: 29
        },
        end: {
          line: 62,
          column: 14
        }
      },
      "34": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 65,
          column: 13
        }
      },
      "35": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 64,
          column: 64
        }
      },
      "36": {
        start: {
          line: 66,
          column: 25
        },
        end: {
          line: 66,
          column: 46
        }
      },
      "37": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 82,
          column: 13
        }
      },
      "38": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 77,
          column: 17
        }
      },
      "39": {
        start: {
          line: 71,
          column: 20
        },
        end: {
          line: 71,
          column: 51
        }
      },
      "40": {
        start: {
          line: 73,
          column: 20
        },
        end: {
          line: 76,
          column: 27
        }
      },
      "41": {
        start: {
          line: 73,
          column: 42
        },
        end: {
          line: 76,
          column: 25
        }
      },
      "42": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 78,
          column: 47
        }
      },
      "43": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 37
        }
      },
      "44": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 70
        }
      },
      "45": {
        start: {
          line: 84,
          column: 33
        },
        end: {
          line: 84,
          column: 89
        }
      },
      "46": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 35
        }
      },
      "47": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 80
        }
      },
      "48": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 32
        }
      },
      "49": {
        start: {
          line: 94,
          column: 21
        },
        end: {
          line: 106,
          column: 6
        }
      },
      "50": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 53
        }
      },
      "51": {
        start: {
          line: 95,
          column: 46
        },
        end: {
          line: 95,
          column: 53
        }
      },
      "52": {
        start: {
          line: 96,
          column: 27
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "53": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 42
        }
      },
      "54": {
        start: {
          line: 108,
          column: 24
        },
        end: {
          line: 142,
          column: 10
        }
      },
      "55": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "56": {
        start: {
          line: 110,
          column: 29
        },
        end: {
          line: 121,
          column: 14
        }
      },
      "57": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 125,
          column: 13
        }
      },
      "58": {
        start: {
          line: 123,
          column: 34
        },
        end: {
          line: 123,
          column: 55
        }
      },
      "59": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 83
        }
      },
      "60": {
        start: {
          line: 126,
          column: 25
        },
        end: {
          line: 126,
          column: 46
        }
      },
      "61": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 136,
          column: 13
        }
      },
      "62": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 132,
          column: 23
        }
      },
      "63": {
        start: {
          line: 129,
          column: 38
        },
        end: {
          line: 132,
          column: 21
        }
      },
      "64": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 28
        }
      },
      "65": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 78
        }
      },
      "66": {
        start: {
          line: 138,
          column: 33
        },
        end: {
          line: 138,
          column: 89
        }
      },
      "67": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 73
        }
      },
      "68": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 25
        }
      },
      "69": {
        start: {
          line: 144,
          column: 30
        },
        end: {
          line: 153,
          column: 6
        }
      },
      "70": {
        start: {
          line: 145,
          column: 31
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "71": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 46
        }
      },
      "72": {
        start: {
          line: 155,
          column: 26
        },
        end: {
          line: 164,
          column: 6
        }
      },
      "73": {
        start: {
          line: 156,
          column: 31
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "74": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 35
        }
      },
      "75": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 40
        }
      },
      "76": {
        start: {
          line: 166,
          column: 4
        },
        end: {
          line: 168,
          column: 11
        }
      },
      "77": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 26
        }
      },
      "78": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 186,
          column: 6
        }
      },
      "79": {
        start: {
          line: 189,
          column: 23
        },
        end: {
          line: 220,
          column: 5
        }
      },
      "80": {
        start: {
          line: 221,
          column: 28
        },
        end: {
          line: 227,
          column: 10
        }
      },
      "81": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 226,
          column: 10
        }
      },
      "82": {
        start: {
          line: 222,
          column: 38
        },
        end: {
          line: 222,
          column: 60
        }
      },
      "83": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 231,
          column: 6
        }
      },
      "84": {
        start: {
          line: 234,
          column: 25
        },
        end: {
          line: 249,
          column: 10
        }
      },
      "85": {
        start: {
          line: 235,
          column: 26
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "86": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 43
        }
      },
      "87": {
        start: {
          line: 250,
          column: 26
        },
        end: {
          line: 266,
          column: 10
        }
      },
      "88": {
        start: {
          line: 251,
          column: 21
        },
        end: {
          line: 251,
          column: 41
        }
      },
      "89": {
        start: {
          line: 252,
          column: 20
        },
        end: {
          line: 252,
          column: 30
        }
      },
      "90": {
        start: {
          line: 253,
          column: 30
        },
        end: {
          line: 253,
          column: 81
        }
      },
      "91": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "92": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 40
        }
      },
      "93": {
        start: {
          line: 256,
          column: 15
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "94": {
        start: {
          line: 257,
          column: 28
        },
        end: {
          line: 257,
          column: 58
        }
      },
      "95": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 258,
          column: 69
        }
      },
      "96": {
        start: {
          line: 259,
          column: 15
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "97": {
        start: {
          line: 260,
          column: 26
        },
        end: {
          line: 260,
          column: 58
        }
      },
      "98": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 63
        }
      },
      "99": {
        start: {
          line: 263,
          column: 25
        },
        end: {
          line: 263,
          column: 58
        }
      },
      "100": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 60
        }
      },
      "101": {
        start: {
          line: 267,
          column: 4
        },
        end: {
          line: 270,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 33
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 32
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 27
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "useUserActivity",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 24
          }
        },
        loc: {
          start: {
            line: 25,
            column: 27
          },
          end: {
            line: 187,
            column: 1
          }
        },
        line: 25
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 45,
            column: 52
          },
          end: {
            line: 45,
            column: 53
          }
        },
        loc: {
          start: {
            line: 45,
            column: 72
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 45
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 73,
            column: 34
          },
          end: {
            line: 73,
            column: 35
          }
        },
        loc: {
          start: {
            line: 73,
            column: 42
          },
          end: {
            line: 76,
            column: 25
          }
        },
        line: 73
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 94,
            column: 45
          },
          end: {
            line: 94,
            column: 46
          }
        },
        loc: {
          start: {
            line: 94,
            column: 55
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 94
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 108,
            column: 48
          },
          end: {
            line: 108,
            column: 49
          }
        },
        loc: {
          start: {
            line: 108,
            column: 97
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 108
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 129,
            column: 30
          },
          end: {
            line: 129,
            column: 31
          }
        },
        loc: {
          start: {
            line: 129,
            column: 38
          },
          end: {
            line: 132,
            column: 21
          }
        },
        line: 129
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 144,
            column: 54
          },
          end: {
            line: 144,
            column: 55
          }
        },
        loc: {
          start: {
            line: 144,
            column: 64
          },
          end: {
            line: 150,
            column: 5
          }
        },
        line: 144
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 155,
            column: 50
          },
          end: {
            line: 155,
            column: 51
          }
        },
        loc: {
          start: {
            line: 155,
            column: 64
          },
          end: {
            line: 162,
            column: 5
          }
        },
        line: 155
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 166,
            column: 26
          },
          end: {
            line: 166,
            column: 27
          }
        },
        loc: {
          start: {
            line: 166,
            column: 30
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 166
      },
      "13": {
        name: "useActivityCategories",
        decl: {
          start: {
            line: 188,
            column: 9
          },
          end: {
            line: 188,
            column: 30
          }
        },
        loc: {
          start: {
            line: 188,
            column: 33
          },
          end: {
            line: 232,
            column: 1
          }
        },
        line: 188
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 221,
            column: 52
          },
          end: {
            line: 221,
            column: 53
          }
        },
        loc: {
          start: {
            line: 221,
            column: 64
          },
          end: {
            line: 227,
            column: 5
          }
        },
        line: 221
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 222,
            column: 31
          },
          end: {
            line: 222,
            column: 32
          }
        },
        loc: {
          start: {
            line: 222,
            column: 38
          },
          end: {
            line: 222,
            column: 60
          }
        },
        line: 222
      },
      "16": {
        name: "useActivityFormatter",
        decl: {
          start: {
            line: 233,
            column: 9
          },
          end: {
            line: 233,
            column: 29
          }
        },
        loc: {
          start: {
            line: 233,
            column: 32
          },
          end: {
            line: 271,
            column: 1
          }
        },
        line: 233
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 234,
            column: 49
          },
          end: {
            line: 234,
            column: 50
          }
        },
        loc: {
          start: {
            line: 234,
            column: 59
          },
          end: {
            line: 249,
            column: 5
          }
        },
        line: 234
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 250,
            column: 50
          },
          end: {
            line: 250,
            column: 51
          }
        },
        loc: {
          start: {
            line: 250,
            column: 64
          },
          end: {
            line: 266,
            column: 5
          }
        },
        line: 250
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 48,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 48,
            column: 41
          }
        }, {
          start: {
            line: 48,
            column: 45
          },
          end: {
            line: 48,
            column: 52
          }
        }],
        line: 48
      },
      "1": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "2": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 52,
            column: 89
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 52,
            column: 89
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "3": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 98
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 98
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "4": {
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 54,
            column: 92
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 54,
            column: 92
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "5": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 55,
            column: 97
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 55,
            column: 97
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "6": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 100
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 100
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "7": {
        loc: {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 65,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 65,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "8": {
        loc: {
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        }, {
          start: {
            line: 80,
            column: 19
          },
          end: {
            line: 82,
            column: 13
          }
        }],
        line: 67
      },
      "9": {
        loc: {
          start: {
            line: 70,
            column: 16
          },
          end: {
            line: 77,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 16
          },
          end: {
            line: 77,
            column: 17
          }
        }, {
          start: {
            line: 72,
            column: 23
          },
          end: {
            line: 77,
            column: 17
          }
        }],
        line: 70
      },
      "10": {
        loc: {
          start: {
            line: 84,
            column: 33
          },
          end: {
            line: 84,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 56
          },
          end: {
            line: 84,
            column: 67
          }
        }, {
          start: {
            line: 84,
            column: 70
          },
          end: {
            line: 84,
            column: 89
          }
        }],
        line: 84
      },
      "11": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 95,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 95,
            column: 53
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "12": {
        loc: {
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 95,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 95,
            column: 31
          }
        }, {
          start: {
            line: 95,
            column: 35
          },
          end: {
            line: 95,
            column: 44
          }
        }],
        line: 95
      },
      "13": {
        loc: {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 125,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 125,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "14": {
        loc: {
          start: {
            line: 124,
            column: 32
          },
          end: {
            line: 124,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 32
          },
          end: {
            line: 124,
            column: 47
          }
        }, {
          start: {
            line: 124,
            column: 51
          },
          end: {
            line: 124,
            column: 81
          }
        }],
        line: 124
      },
      "15": {
        loc: {
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 136,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 136,
            column: 13
          }
        }, {
          start: {
            line: 134,
            column: 19
          },
          end: {
            line: 136,
            column: 13
          }
        }],
        line: 127
      },
      "16": {
        loc: {
          start: {
            line: 135,
            column: 32
          },
          end: {
            line: 135,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 32
          },
          end: {
            line: 135,
            column: 42
          }
        }, {
          start: {
            line: 135,
            column: 46
          },
          end: {
            line: 135,
            column: 76
          }
        }],
        line: 135
      },
      "17": {
        loc: {
          start: {
            line: 138,
            column: 33
          },
          end: {
            line: 138,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 56
          },
          end: {
            line: 138,
            column: 67
          }
        }, {
          start: {
            line: 138,
            column: 70
          },
          end: {
            line: 138,
            column: 89
          }
        }],
        line: 138
      },
      "18": {
        loc: {
          start: {
            line: 222,
            column: 15
          },
          end: {
            line: 226,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 222,
            column: 15
          },
          end: {
            line: 222,
            column: 61
          }
        }, {
          start: {
            line: 222,
            column: 65
          },
          end: {
            line: 226,
            column: 9
          }
        }],
        line: 222
      },
      "19": {
        loc: {
          start: {
            line: 248,
            column: 15
          },
          end: {
            line: 248,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 15
          },
          end: {
            line: 248,
            column: 32
          }
        }, {
          start: {
            line: 248,
            column: 36
          },
          end: {
            line: 248,
            column: 42
          }
        }],
        line: 248
      },
      "20": {
        loc: {
          start: {
            line: 254,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 254,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        }, {
          start: {
            line: 256,
            column: 15
          },
          end: {
            line: 265,
            column: 9
          }
        }],
        line: 254
      },
      "21": {
        loc: {
          start: {
            line: 256,
            column: 15
          },
          end: {
            line: 265,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 15
          },
          end: {
            line: 265,
            column: 9
          }
        }, {
          start: {
            line: 259,
            column: 15
          },
          end: {
            line: 265,
            column: 9
          }
        }],
        line: 256
      },
      "22": {
        loc: {
          start: {
            line: 258,
            column: 44
          },
          end: {
            line: 258,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 258,
            column: 58
          },
          end: {
            line: 258,
            column: 61
          }
        }, {
          start: {
            line: 258,
            column: 64
          },
          end: {
            line: 258,
            column: 66
          }
        }],
        line: 258
      },
      "23": {
        loc: {
          start: {
            line: 259,
            column: 15
          },
          end: {
            line: 265,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 15
          },
          end: {
            line: 265,
            column: 9
          }
        }, {
          start: {
            line: 262,
            column: 15
          },
          end: {
            line: 265,
            column: 9
          }
        }],
        line: 259
      },
      "24": {
        loc: {
          start: {
            line: 261,
            column: 40
          },
          end: {
            line: 261,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 261,
            column: 52
          },
          end: {
            line: 261,
            column: 55
          }
        }, {
          start: {
            line: 261,
            column: 58
          },
          end: {
            line: 261,
            column: 60
          }
        }],
        line: 261
      },
      "25": {
        loc: {
          start: {
            line: 264,
            column: 38
          },
          end: {
            line: 264,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 264,
            column: 49
          },
          end: {
            line: 264,
            column: 52
          }
        }, {
          start: {
            line: 264,
            column: 55
          },
          end: {
            line: 264,
            column: 57
          }
        }],
        line: 264
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useUserActivity.ts"],
      sourcesContent: ["'use client';\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { toast } from 'sonner';\r\n\r\n// Tipos para actividad\r\nexport interface UserActivity {\r\n  id: string;\r\n  user_id: string;\r\n  action: string;\r\n  category: 'auth' | 'profile' | 'order' | 'security' | 'session' | 'preference';\r\n  description?: string;\r\n  metadata?: Record<string, any>;\r\n  ip_address?: string;\r\n  user_agent?: string;\r\n  created_at: string;\r\n}\r\n\r\ninterface ActivityFilters {\r\n  category?: string;\r\n  action?: string;\r\n  startDate?: string;\r\n  endDate?: string;\r\n  limit?: number;\r\n  offset?: number;\r\n}\r\n\r\ninterface ActivityResponse {\r\n  success: boolean;\r\n  activities: UserActivity[];\r\n  pagination: {\r\n    total: number;\r\n    limit: number;\r\n    offset: number;\r\n    hasMore: boolean;\r\n  };\r\n  stats: {\r\n    byCategory: Record<string, number>;\r\n    byDay: Record<string, number>;\r\n    totalActivities: number;\r\n  };\r\n}\r\n\r\ninterface UseUserActivityReturn {\r\n  // Estado\r\n  activities: UserActivity[];\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  \r\n  // Paginaci\xF3n\r\n  pagination: {\r\n    total: number;\r\n    limit: number;\r\n    offset: number;\r\n    hasMore: boolean;\r\n  };\r\n  \r\n  // Estad\xEDsticas\r\n  stats: {\r\n    byCategory: Record<string, number>;\r\n    byDay: Record<string, number>;\r\n    totalActivities: number;\r\n  };\r\n  \r\n  // Funciones\r\n  fetchActivities: (filters?: ActivityFilters) => Promise<void>;\r\n  loadMore: () => Promise<void>;\r\n  logActivity: (action: string, category: UserActivity['category'], description?: string, metadata?: Record<string, any>) => Promise<boolean>;\r\n  refreshActivities: () => Promise<void>;\r\n  \r\n  // Filtros\r\n  filters: ActivityFilters;\r\n  setFilters: (filters: ActivityFilters) => void;\r\n}\r\n\r\nexport function useUserActivity(): UseUserActivityReturn {\r\n  const [activities, setActivities] = useState<UserActivity[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [filters, setFilters] = useState<ActivityFilters>({\r\n    limit: 20,\r\n    offset: 0,\r\n  });\r\n  const [pagination, setPagination] = useState({\r\n    total: 0,\r\n    limit: 20,\r\n    offset: 0,\r\n    hasMore: false,\r\n  });\r\n  const [stats, setStats] = useState({\r\n    byCategory: {},\r\n    byDay: {},\r\n    totalActivities: 0,\r\n  });\r\n\r\n  // Funci\xF3n para obtener actividades\r\n  const fetchActivities = useCallback(async (newFilters?: ActivityFilters) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    const currentFilters = newFilters || filters;\r\n\r\n    try {\r\n      const searchParams = new URLSearchParams();\r\n      \r\n      if (currentFilters.category) searchParams.set('category', currentFilters.category);\r\n      if (currentFilters.action) searchParams.set('action', currentFilters.action);\r\n      if (currentFilters.startDate) searchParams.set('startDate', currentFilters.startDate);\r\n      if (currentFilters.endDate) searchParams.set('endDate', currentFilters.endDate);\r\n      if (currentFilters.limit) searchParams.set('limit', currentFilters.limit.toString());\r\n      if (currentFilters.offset) searchParams.set('offset', currentFilters.offset.toString());\r\n\r\n      const response = await fetch(`/api/user/activity?${searchParams.toString()}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al obtener actividades');\r\n      }\r\n\r\n      const data: ActivityResponse = await response.json();\r\n      \r\n      if (data.success) {\r\n        // Si es una nueva b\xFAsqueda (offset 0), reemplazar actividades\r\n        // Si es cargar m\xE1s (offset > 0), agregar a las existentes\r\n        if (currentFilters.offset === 0) {\r\n          setActivities(data.activities);\r\n        } else {\r\n          setActivities(prev => [...prev, ...data.activities]);\r\n        }\r\n        \r\n        setPagination(data.pagination);\r\n        setStats(data.stats);\r\n      } else {\r\n        throw new Error('Error en la respuesta del servidor');\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      setError(errorMessage);\r\n      toast.error('Error al cargar actividades: ' + errorMessage);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [filters]);\r\n\r\n  // Funci\xF3n para cargar m\xE1s actividades\r\n  const loadMore = useCallback(async () => {\r\n    if (!pagination.hasMore || isLoading) return;\r\n\r\n    const newFilters = {\r\n      ...filters,\r\n      offset: pagination.offset + pagination.limit,\r\n    };\r\n\r\n    await fetchActivities(newFilters);\r\n  }, [filters, pagination, isLoading, fetchActivities]);\r\n\r\n  // Funci\xF3n para registrar nueva actividad\r\n  const logActivity = useCallback(async (\r\n    action: string,\r\n    category: UserActivity['category'],\r\n    description?: string,\r\n    metadata?: Record<string, any>\r\n  ): Promise<boolean> => {\r\n    try {\r\n      const response = await fetch('/api/user/activity', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          action,\r\n          category,\r\n          description,\r\n          metadata,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Error al registrar actividad');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        // Agregar la nueva actividad al inicio de la lista\r\n        setActivities(prev => [data.activity, ...prev]);\r\n        return true;\r\n      } else {\r\n        throw new Error(data.error || 'Error al registrar actividad');\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      console.error('Error al registrar actividad:', errorMessage);\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  // Funci\xF3n para refrescar actividades\r\n  const refreshActivities = useCallback(async () => {\r\n    const refreshFilters = { ...filters, offset: 0 };\r\n    await fetchActivities(refreshFilters);\r\n  }, [filters, fetchActivities]);\r\n\r\n  // Actualizar filtros y recargar\r\n  const updateFilters = useCallback((newFilters: ActivityFilters) => {\r\n    const updatedFilters = { ...newFilters, offset: 0 };\r\n    setFilters(updatedFilters);\r\n    fetchActivities(updatedFilters);\r\n  }, [fetchActivities]);\r\n\r\n  // Cargar actividades al montar el componente\r\n  useEffect(() => {\r\n    fetchActivities();\r\n  }, []);\r\n\r\n  return {\r\n    // Estado\r\n    activities,\r\n    isLoading,\r\n    error,\r\n    \r\n    // Paginaci\xF3n\r\n    pagination,\r\n    \r\n    // Estad\xEDsticas\r\n    stats,\r\n    \r\n    // Funciones\r\n    fetchActivities,\r\n    loadMore,\r\n    logActivity,\r\n    refreshActivities,\r\n    \r\n    // Filtros\r\n    filters,\r\n    setFilters: updateFilters,\r\n  };\r\n}\r\n\r\n// Hook auxiliar para categor\xEDas de actividad\r\nexport function useActivityCategories() {\r\n  const categories = [\r\n    { value: 'auth', label: 'Autenticaci\xF3n', color: 'blue' },\r\n    { value: 'profile', label: 'Perfil', color: 'green' },\r\n    { value: 'order', label: '\xD3rdenes', color: 'purple' },\r\n    { value: 'security', label: 'Seguridad', color: 'red' },\r\n    { value: 'session', label: 'Sesiones', color: 'orange' },\r\n    { value: 'preference', label: 'Preferencias', color: 'gray' },\r\n  ];\r\n\r\n  const getCategoryInfo = useCallback((category: string) => {\r\n    return categories.find(cat => cat.value === category) || {\r\n      value: category,\r\n      label: category,\r\n      color: 'gray'\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    categories,\r\n    getCategoryInfo,\r\n  };\r\n}\r\n\r\n// Hook para formatear actividades\r\nexport function useActivityFormatter() {\r\n  const formatAction = useCallback((action: string) => {\r\n    const actionMap: Record<string, string> = {\r\n      'login': 'Inicio de sesi\xF3n',\r\n      'logout': 'Cierre de sesi\xF3n',\r\n      'profile_updated': 'Perfil actualizado',\r\n      'avatar_changed': 'Avatar cambiado',\r\n      'password_changed': 'Contrase\xF1a cambiada',\r\n      'session_created': 'Nueva sesi\xF3n iniciada',\r\n      'session_terminated': 'Sesi\xF3n terminada',\r\n      'security_settings_updated': 'Configuraci\xF3n de seguridad actualizada',\r\n      'order_created': 'Orden creada',\r\n      'order_updated': 'Orden actualizada',\r\n      'preferences_updated': 'Preferencias actualizadas',\r\n    };\r\n\r\n    return actionMap[action] || action;\r\n  }, []);\r\n\r\n  const formatTimeAgo = useCallback((dateString: string) => {\r\n    const date = new Date(dateString);\r\n    const now = new Date();\r\n    const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\r\n\r\n    if (diffInSeconds < 60) {\r\n      return 'Hace unos segundos';\r\n    } else if (diffInSeconds < 3600) {\r\n      const minutes = Math.floor(diffInSeconds / 60);\r\n      return `Hace ${minutes} minuto${minutes > 1 ? 's' : ''}`;\r\n    } else if (diffInSeconds < 86400) {\r\n      const hours = Math.floor(diffInSeconds / 3600);\r\n      return `Hace ${hours} hora${hours > 1 ? 's' : ''}`;\r\n    } else {\r\n      const days = Math.floor(diffInSeconds / 86400);\r\n      return `Hace ${days} d\xEDa${days > 1 ? 's' : ''}`;\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    formatAction,\r\n    formatTimeAgo,\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useActivityCategories", "useActivityFormatter", "useUserActivity", "activities", "setActivities", "useState", "isLoading", "setIsLoading", "error", "setError", "filters", "setFilters", "limit", "offset", "pagination", "setPagination", "total", "hasMore", "stats", "setStats", "byCategory", "byDay", "totalActivities", "fetchActivities", "useCallback", "newFilters", "currentFilters", "searchParams", "URLSearchParams", "category", "set", "action", "startDate", "endDate", "toString", "response", "fetch", "method", "headers", "ok", "Error", "data", "json", "success", "prev", "err", "errorMessage", "message", "toast", "loadMore", "logActivity", "description", "metadata", "body", "JSON", "stringify", "errorData", "activity", "console", "refreshActivities", "refreshFilters", "updateFilters", "updatedFilters", "useEffect", "categories", "value", "label", "color", "getCategoryInfo", "find", "cat", "formatAction", "actionMap", "formatTimeAgo", "dateString", "date", "Date", "now", "diffInSeconds", "Math", "floor", "getTime", "minutes", "hours", "days"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8c5446c533ab3aa29012f4d6b75e1954eb743fed"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1t7wpicbm2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1t7wpicbm2();
cov_1t7wpicbm2().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1t7wpicbm2().f[0]++;
  cov_1t7wpicbm2().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1t7wpicbm2().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1t7wpicbm2().s[3]++;
_export(exports, {
  get useActivityCategories() {
    /* istanbul ignore next */
    cov_1t7wpicbm2().f[1]++;
    cov_1t7wpicbm2().s[4]++;
    return useActivityCategories;
  },
  get useActivityFormatter() {
    /* istanbul ignore next */
    cov_1t7wpicbm2().f[2]++;
    cov_1t7wpicbm2().s[5]++;
    return useActivityFormatter;
  },
  get useUserActivity() {
    /* istanbul ignore next */
    cov_1t7wpicbm2().f[3]++;
    cov_1t7wpicbm2().s[6]++;
    return useUserActivity;
  }
});
const _react =
/* istanbul ignore next */
(cov_1t7wpicbm2().s[7]++, require("react"));
const _sonner =
/* istanbul ignore next */
(cov_1t7wpicbm2().s[8]++, require("sonner"));
function useUserActivity() {
  /* istanbul ignore next */
  cov_1t7wpicbm2().f[4]++;
  const [activities, setActivities] =
  /* istanbul ignore next */
  (cov_1t7wpicbm2().s[9]++, (0, _react.useState)([]));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_1t7wpicbm2().s[10]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1t7wpicbm2().s[11]++, (0, _react.useState)(null));
  const [filters, setFilters] =
  /* istanbul ignore next */
  (cov_1t7wpicbm2().s[12]++, (0, _react.useState)({
    limit: 20,
    offset: 0
  }));
  const [pagination, setPagination] =
  /* istanbul ignore next */
  (cov_1t7wpicbm2().s[13]++, (0, _react.useState)({
    total: 0,
    limit: 20,
    offset: 0,
    hasMore: false
  }));
  const [stats, setStats] =
  /* istanbul ignore next */
  (cov_1t7wpicbm2().s[14]++, (0, _react.useState)({
    byCategory: {},
    byDay: {},
    totalActivities: 0
  }));
  // Función para obtener actividades
  const fetchActivities =
  /* istanbul ignore next */
  (cov_1t7wpicbm2().s[15]++, (0, _react.useCallback)(async newFilters => {
    /* istanbul ignore next */
    cov_1t7wpicbm2().f[5]++;
    cov_1t7wpicbm2().s[16]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_1t7wpicbm2().s[17]++;
    setError(null);
    const currentFilters =
    /* istanbul ignore next */
    (cov_1t7wpicbm2().s[18]++,
    /* istanbul ignore next */
    (cov_1t7wpicbm2().b[0][0]++, newFilters) ||
    /* istanbul ignore next */
    (cov_1t7wpicbm2().b[0][1]++, filters));
    /* istanbul ignore next */
    cov_1t7wpicbm2().s[19]++;
    try {
      const searchParams =
      /* istanbul ignore next */
      (cov_1t7wpicbm2().s[20]++, new URLSearchParams());
      /* istanbul ignore next */
      cov_1t7wpicbm2().s[21]++;
      if (currentFilters.category) {
        /* istanbul ignore next */
        cov_1t7wpicbm2().b[1][0]++;
        cov_1t7wpicbm2().s[22]++;
        searchParams.set('category', currentFilters.category);
      } else
      /* istanbul ignore next */
      {
        cov_1t7wpicbm2().b[1][1]++;
      }
      cov_1t7wpicbm2().s[23]++;
      if (currentFilters.action) {
        /* istanbul ignore next */
        cov_1t7wpicbm2().b[2][0]++;
        cov_1t7wpicbm2().s[24]++;
        searchParams.set('action', currentFilters.action);
      } else
      /* istanbul ignore next */
      {
        cov_1t7wpicbm2().b[2][1]++;
      }
      cov_1t7wpicbm2().s[25]++;
      if (currentFilters.startDate) {
        /* istanbul ignore next */
        cov_1t7wpicbm2().b[3][0]++;
        cov_1t7wpicbm2().s[26]++;
        searchParams.set('startDate', currentFilters.startDate);
      } else
      /* istanbul ignore next */
      {
        cov_1t7wpicbm2().b[3][1]++;
      }
      cov_1t7wpicbm2().s[27]++;
      if (currentFilters.endDate) {
        /* istanbul ignore next */
        cov_1t7wpicbm2().b[4][0]++;
        cov_1t7wpicbm2().s[28]++;
        searchParams.set('endDate', currentFilters.endDate);
      } else
      /* istanbul ignore next */
      {
        cov_1t7wpicbm2().b[4][1]++;
      }
      cov_1t7wpicbm2().s[29]++;
      if (currentFilters.limit) {
        /* istanbul ignore next */
        cov_1t7wpicbm2().b[5][0]++;
        cov_1t7wpicbm2().s[30]++;
        searchParams.set('limit', currentFilters.limit.toString());
      } else
      /* istanbul ignore next */
      {
        cov_1t7wpicbm2().b[5][1]++;
      }
      cov_1t7wpicbm2().s[31]++;
      if (currentFilters.offset) {
        /* istanbul ignore next */
        cov_1t7wpicbm2().b[6][0]++;
        cov_1t7wpicbm2().s[32]++;
        searchParams.set('offset', currentFilters.offset.toString());
      } else
      /* istanbul ignore next */
      {
        cov_1t7wpicbm2().b[6][1]++;
      }
      const response =
      /* istanbul ignore next */
      (cov_1t7wpicbm2().s[33]++, await fetch(`/api/user/activity?${searchParams.toString()}`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json'
        }
      }));
      /* istanbul ignore next */
      cov_1t7wpicbm2().s[34]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1t7wpicbm2().b[7][0]++;
        cov_1t7wpicbm2().s[35]++;
        throw new Error('Error al obtener actividades');
      } else
      /* istanbul ignore next */
      {
        cov_1t7wpicbm2().b[7][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_1t7wpicbm2().s[36]++, await response.json());
      /* istanbul ignore next */
      cov_1t7wpicbm2().s[37]++;
      if (data.success) {
        /* istanbul ignore next */
        cov_1t7wpicbm2().b[8][0]++;
        cov_1t7wpicbm2().s[38]++;
        // Si es una nueva búsqueda (offset 0), reemplazar actividades
        // Si es cargar más (offset > 0), agregar a las existentes
        if (currentFilters.offset === 0) {
          /* istanbul ignore next */
          cov_1t7wpicbm2().b[9][0]++;
          cov_1t7wpicbm2().s[39]++;
          setActivities(data.activities);
        } else {
          /* istanbul ignore next */
          cov_1t7wpicbm2().b[9][1]++;
          cov_1t7wpicbm2().s[40]++;
          setActivities(prev => {
            /* istanbul ignore next */
            cov_1t7wpicbm2().f[6]++;
            cov_1t7wpicbm2().s[41]++;
            return [...prev, ...data.activities];
          });
        }
        /* istanbul ignore next */
        cov_1t7wpicbm2().s[42]++;
        setPagination(data.pagination);
        /* istanbul ignore next */
        cov_1t7wpicbm2().s[43]++;
        setStats(data.stats);
      } else {
        /* istanbul ignore next */
        cov_1t7wpicbm2().b[8][1]++;
        cov_1t7wpicbm2().s[44]++;
        throw new Error('Error en la respuesta del servidor');
      }
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1t7wpicbm2().s[45]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1t7wpicbm2().b[10][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1t7wpicbm2().b[10][1]++, 'Error desconocido'));
      /* istanbul ignore next */
      cov_1t7wpicbm2().s[46]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_1t7wpicbm2().s[47]++;
      _sonner.toast.error('Error al cargar actividades: ' + errorMessage);
    } finally {
      /* istanbul ignore next */
      cov_1t7wpicbm2().s[48]++;
      setIsLoading(false);
    }
  }, [filters]));
  // Función para cargar más actividades
  const loadMore =
  /* istanbul ignore next */
  (cov_1t7wpicbm2().s[49]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1t7wpicbm2().f[7]++;
    cov_1t7wpicbm2().s[50]++;
    if (
    /* istanbul ignore next */
    (cov_1t7wpicbm2().b[12][0]++, !pagination.hasMore) ||
    /* istanbul ignore next */
    (cov_1t7wpicbm2().b[12][1]++, isLoading)) {
      /* istanbul ignore next */
      cov_1t7wpicbm2().b[11][0]++;
      cov_1t7wpicbm2().s[51]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1t7wpicbm2().b[11][1]++;
    }
    const newFilters =
    /* istanbul ignore next */
    (cov_1t7wpicbm2().s[52]++, {
      ...filters,
      offset: pagination.offset + pagination.limit
    });
    /* istanbul ignore next */
    cov_1t7wpicbm2().s[53]++;
    await fetchActivities(newFilters);
  }, [filters, pagination, isLoading, fetchActivities]));
  // Función para registrar nueva actividad
  const logActivity =
  /* istanbul ignore next */
  (cov_1t7wpicbm2().s[54]++, (0, _react.useCallback)(async (action, category, description, metadata) => {
    /* istanbul ignore next */
    cov_1t7wpicbm2().f[8]++;
    cov_1t7wpicbm2().s[55]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1t7wpicbm2().s[56]++, await fetch('/api/user/activity', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          action,
          category,
          description,
          metadata
        })
      }));
      /* istanbul ignore next */
      cov_1t7wpicbm2().s[57]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1t7wpicbm2().b[13][0]++;
        const errorData =
        /* istanbul ignore next */
        (cov_1t7wpicbm2().s[58]++, await response.json());
        /* istanbul ignore next */
        cov_1t7wpicbm2().s[59]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_1t7wpicbm2().b[14][0]++, errorData.error) ||
        /* istanbul ignore next */
        (cov_1t7wpicbm2().b[14][1]++, 'Error al registrar actividad'));
      } else
      /* istanbul ignore next */
      {
        cov_1t7wpicbm2().b[13][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_1t7wpicbm2().s[60]++, await response.json());
      /* istanbul ignore next */
      cov_1t7wpicbm2().s[61]++;
      if (data.success) {
        /* istanbul ignore next */
        cov_1t7wpicbm2().b[15][0]++;
        cov_1t7wpicbm2().s[62]++;
        // Agregar la nueva actividad al inicio de la lista
        setActivities(prev => {
          /* istanbul ignore next */
          cov_1t7wpicbm2().f[9]++;
          cov_1t7wpicbm2().s[63]++;
          return [data.activity, ...prev];
        });
        /* istanbul ignore next */
        cov_1t7wpicbm2().s[64]++;
        return true;
      } else {
        /* istanbul ignore next */
        cov_1t7wpicbm2().b[15][1]++;
        cov_1t7wpicbm2().s[65]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_1t7wpicbm2().b[16][0]++, data.error) ||
        /* istanbul ignore next */
        (cov_1t7wpicbm2().b[16][1]++, 'Error al registrar actividad'));
      }
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1t7wpicbm2().s[66]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1t7wpicbm2().b[17][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1t7wpicbm2().b[17][1]++, 'Error desconocido'));
      /* istanbul ignore next */
      cov_1t7wpicbm2().s[67]++;
      console.error('Error al registrar actividad:', errorMessage);
      /* istanbul ignore next */
      cov_1t7wpicbm2().s[68]++;
      return false;
    }
  }, []));
  // Función para refrescar actividades
  const refreshActivities =
  /* istanbul ignore next */
  (cov_1t7wpicbm2().s[69]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1t7wpicbm2().f[10]++;
    const refreshFilters =
    /* istanbul ignore next */
    (cov_1t7wpicbm2().s[70]++, {
      ...filters,
      offset: 0
    });
    /* istanbul ignore next */
    cov_1t7wpicbm2().s[71]++;
    await fetchActivities(refreshFilters);
  }, [filters, fetchActivities]));
  // Actualizar filtros y recargar
  const updateFilters =
  /* istanbul ignore next */
  (cov_1t7wpicbm2().s[72]++, (0, _react.useCallback)(newFilters => {
    /* istanbul ignore next */
    cov_1t7wpicbm2().f[11]++;
    const updatedFilters =
    /* istanbul ignore next */
    (cov_1t7wpicbm2().s[73]++, {
      ...newFilters,
      offset: 0
    });
    /* istanbul ignore next */
    cov_1t7wpicbm2().s[74]++;
    setFilters(updatedFilters);
    /* istanbul ignore next */
    cov_1t7wpicbm2().s[75]++;
    fetchActivities(updatedFilters);
  }, [fetchActivities]));
  // Cargar actividades al montar el componente
  /* istanbul ignore next */
  cov_1t7wpicbm2().s[76]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1t7wpicbm2().f[12]++;
    cov_1t7wpicbm2().s[77]++;
    fetchActivities();
  }, []);
  /* istanbul ignore next */
  cov_1t7wpicbm2().s[78]++;
  return {
    // Estado
    activities,
    isLoading,
    error,
    // Paginación
    pagination,
    // Estadísticas
    stats,
    // Funciones
    fetchActivities,
    loadMore,
    logActivity,
    refreshActivities,
    // Filtros
    filters,
    setFilters: updateFilters
  };
}
function useActivityCategories() {
  /* istanbul ignore next */
  cov_1t7wpicbm2().f[13]++;
  const categories =
  /* istanbul ignore next */
  (cov_1t7wpicbm2().s[79]++, [{
    value: 'auth',
    label: 'Autenticación',
    color: 'blue'
  }, {
    value: 'profile',
    label: 'Perfil',
    color: 'green'
  }, {
    value: 'order',
    label: 'Órdenes',
    color: 'purple'
  }, {
    value: 'security',
    label: 'Seguridad',
    color: 'red'
  }, {
    value: 'session',
    label: 'Sesiones',
    color: 'orange'
  }, {
    value: 'preference',
    label: 'Preferencias',
    color: 'gray'
  }]);
  const getCategoryInfo =
  /* istanbul ignore next */
  (cov_1t7wpicbm2().s[80]++, (0, _react.useCallback)(category => {
    /* istanbul ignore next */
    cov_1t7wpicbm2().f[14]++;
    cov_1t7wpicbm2().s[81]++;
    return /* istanbul ignore next */(cov_1t7wpicbm2().b[18][0]++, categories.find(cat => {
      /* istanbul ignore next */
      cov_1t7wpicbm2().f[15]++;
      cov_1t7wpicbm2().s[82]++;
      return cat.value === category;
    })) ||
    /* istanbul ignore next */
    (cov_1t7wpicbm2().b[18][1]++, {
      value: category,
      label: category,
      color: 'gray'
    });
  }, []));
  /* istanbul ignore next */
  cov_1t7wpicbm2().s[83]++;
  return {
    categories,
    getCategoryInfo
  };
}
function useActivityFormatter() {
  /* istanbul ignore next */
  cov_1t7wpicbm2().f[16]++;
  const formatAction =
  /* istanbul ignore next */
  (cov_1t7wpicbm2().s[84]++, (0, _react.useCallback)(action => {
    /* istanbul ignore next */
    cov_1t7wpicbm2().f[17]++;
    const actionMap =
    /* istanbul ignore next */
    (cov_1t7wpicbm2().s[85]++, {
      'login': 'Inicio de sesión',
      'logout': 'Cierre de sesión',
      'profile_updated': 'Perfil actualizado',
      'avatar_changed': 'Avatar cambiado',
      'password_changed': 'Contraseña cambiada',
      'session_created': 'Nueva sesión iniciada',
      'session_terminated': 'Sesión terminada',
      'security_settings_updated': 'Configuración de seguridad actualizada',
      'order_created': 'Orden creada',
      'order_updated': 'Orden actualizada',
      'preferences_updated': 'Preferencias actualizadas'
    });
    /* istanbul ignore next */
    cov_1t7wpicbm2().s[86]++;
    return /* istanbul ignore next */(cov_1t7wpicbm2().b[19][0]++, actionMap[action]) ||
    /* istanbul ignore next */
    (cov_1t7wpicbm2().b[19][1]++, action);
  }, []));
  const formatTimeAgo =
  /* istanbul ignore next */
  (cov_1t7wpicbm2().s[87]++, (0, _react.useCallback)(dateString => {
    /* istanbul ignore next */
    cov_1t7wpicbm2().f[18]++;
    const date =
    /* istanbul ignore next */
    (cov_1t7wpicbm2().s[88]++, new Date(dateString));
    const now =
    /* istanbul ignore next */
    (cov_1t7wpicbm2().s[89]++, new Date());
    const diffInSeconds =
    /* istanbul ignore next */
    (cov_1t7wpicbm2().s[90]++, Math.floor((now.getTime() - date.getTime()) / 1000));
    /* istanbul ignore next */
    cov_1t7wpicbm2().s[91]++;
    if (diffInSeconds < 60) {
      /* istanbul ignore next */
      cov_1t7wpicbm2().b[20][0]++;
      cov_1t7wpicbm2().s[92]++;
      return 'Hace unos segundos';
    } else {
      /* istanbul ignore next */
      cov_1t7wpicbm2().b[20][1]++;
      cov_1t7wpicbm2().s[93]++;
      if (diffInSeconds < 3600) {
        /* istanbul ignore next */
        cov_1t7wpicbm2().b[21][0]++;
        const minutes =
        /* istanbul ignore next */
        (cov_1t7wpicbm2().s[94]++, Math.floor(diffInSeconds / 60));
        /* istanbul ignore next */
        cov_1t7wpicbm2().s[95]++;
        return `Hace ${minutes} minuto${minutes > 1 ?
        /* istanbul ignore next */
        (cov_1t7wpicbm2().b[22][0]++, 's') :
        /* istanbul ignore next */
        (cov_1t7wpicbm2().b[22][1]++, '')}`;
      } else {
        /* istanbul ignore next */
        cov_1t7wpicbm2().b[21][1]++;
        cov_1t7wpicbm2().s[96]++;
        if (diffInSeconds < 86400) {
          /* istanbul ignore next */
          cov_1t7wpicbm2().b[23][0]++;
          const hours =
          /* istanbul ignore next */
          (cov_1t7wpicbm2().s[97]++, Math.floor(diffInSeconds / 3600));
          /* istanbul ignore next */
          cov_1t7wpicbm2().s[98]++;
          return `Hace ${hours} hora${hours > 1 ?
          /* istanbul ignore next */
          (cov_1t7wpicbm2().b[24][0]++, 's') :
          /* istanbul ignore next */
          (cov_1t7wpicbm2().b[24][1]++, '')}`;
        } else {
          /* istanbul ignore next */
          cov_1t7wpicbm2().b[23][1]++;
          const days =
          /* istanbul ignore next */
          (cov_1t7wpicbm2().s[99]++, Math.floor(diffInSeconds / 86400));
          /* istanbul ignore next */
          cov_1t7wpicbm2().s[100]++;
          return `Hace ${days} día${days > 1 ?
          /* istanbul ignore next */
          (cov_1t7wpicbm2().b[25][0]++, 's') :
          /* istanbul ignore next */
          (cov_1t7wpicbm2().b[25][1]++, '')}`;
        }
      }
    }
  }, []));
  /* istanbul ignore next */
  cov_1t7wpicbm2().s[101]++;
  return {
    formatAction,
    formatTimeAgo
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,