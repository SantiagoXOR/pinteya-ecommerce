7930a3c30f56bbae4aff3a6cf3c2492f
"use strict";

/* istanbul ignore next */
function cov_tf3h5krad() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useProductList.ts";
  var hash = "e50019e887c9607e0a8bb0ce9c720a97c28bac2a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useProductList.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 30
        }
      },
      "3": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 31
        }
      },
      "4": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 52
        }
      },
      "5": {
        start: {
          line: 14,
          column: 36
        },
        end: {
          line: 14,
          column: 60
        }
      },
      "6": {
        start: {
          line: 15,
          column: 38
        },
        end: {
          line: 15,
          column: 64
        }
      },
      "7": {
        start: {
          line: 16,
          column: 30
        },
        end: {
          line: 16,
          column: 56
        }
      },
      "8": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 51,
          column: 11
        }
      },
      "9": {
        start: {
          line: 18,
          column: 30
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "10": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 48,
          column: 13
        }
      },
      "11": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 69
        }
      },
      "12": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 35
        }
      },
      "13": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 31
        }
      },
      "14": {
        start: {
          line: 23,
          column: 33
        },
        end: {
          line: 28,
          column: 18
        }
      },
      "15": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 84
        }
      },
      "16": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 32,
          column: 17
        }
      },
      "17": {
        start: {
          line: 31,
          column: 20
        },
        end: {
          line: 31,
          column: 88
        }
      },
      "18": {
        start: {
          line: 33,
          column: 29
        },
        end: {
          line: 33,
          column: 50
        }
      },
      "19": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 76
        }
      },
      "20": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 72
        }
      },
      "21": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 41,
          column: 17
        }
      },
      "22": {
        start: {
          line: 37,
          column: 20
        },
        end: {
          line: 37,
          column: 43
        }
      },
      "23": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 38,
          column: 94
        }
      },
      "24": {
        start: {
          line: 40,
          column: 20
        },
        end: {
          line: 40,
          column: 94
        }
      },
      "25": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 66
        }
      },
      "26": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 83
        }
      },
      "27": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 32
        }
      },
      "28": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 36
        }
      },
      "29": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 24
        }
      },
      "30": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 56,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "useProductList",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 23
          }
        },
        loc: {
          start: {
            line: 12,
            column: 26
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 26
          },
          end: {
            line: 17,
            column: 27
          }
        },
        loc: {
          start: {
            line: 17,
            column: 30
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 30
          },
          end: {
            line: 18,
            column: 31
          }
        },
        loc: {
          start: {
            line: 18,
            column: 40
          },
          end: {
            line: 49,
            column: 9
          }
        },
        line: 18
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 32,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 32,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 36,
            column: 16
          },
          end: {
            line: 41,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 16
          },
          end: {
            line: 41,
            column: 17
          }
        }, {
          start: {
            line: 39,
            column: 23
          },
          end: {
            line: 41,
            column: 17
          }
        }],
        line: 36
      },
      "2": {
        loc: {
          start: {
            line: 44,
            column: 25
          },
          end: {
            line: 44,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 44,
            column: 48
          },
          end: {
            line: 44,
            column: 59
          }
        }, {
          start: {
            line: 44,
            column: 62
          },
          end: {
            line: 44,
            column: 81
          }
        }],
        line: 44
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useProductList.ts"],
      sourcesContent: ["import { useState, useEffect } from 'react';\r\n\r\ninterface Product {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  price: number;\r\n  stock: number;\r\n  category_id: number;\r\n  images: {\r\n    main: string;\r\n    gallery: string[];\r\n    previews: string[];\r\n    thumbnails: string[];\r\n  };\r\n  created_at: string;\r\n  updated_at: string;\r\n  category_name: string;\r\n}\r\n\r\ninterface ProductListResponse {\r\n  data: Product[];\r\n  total: number;\r\n  page: number;\r\n  pageSize: number;\r\n  totalPages: number;\r\n}\r\n\r\n/**\r\n * Hook est\xE1ndar para gesti\xF3n de productos en el panel administrativo\r\n *\r\n * Funcionalidades:\r\n * - Consulta real a la API /api/admin/products\r\n * - Carga de 25 productos reales de Supabase por p\xE1gina\r\n * - Informaci\xF3n de paginaci\xF3n completa\r\n * - Datos completos (nombres, precios, stock, categor\xEDas, im\xE1genes)\r\n *\r\n * @returns {Object} Estado del hook con productos, loading y error\r\n */\r\nexport function useProductList() {\r\n  console.log('\uD83D\uDD27 useProductList: Hook iniciado');\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        console.log('\uD83D\uDD27 useProductList: Iniciando fetch...');\r\n        setIsLoading(true);\r\n        setError(null);\r\n\r\n        const response = await fetch('/api/admin/products?limit=25', {\r\n          credentials: 'include',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n        console.log('\uD83D\uDD27 useProductList: Response status:', response.status);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n        }\r\n\r\n        const data: ProductListResponse = await response.json();\r\n        console.log('\uD83D\uDD27 useProductList: Respuesta completa:', data);\r\n        console.log('\uD83D\uDD27 useProductList: data.data:', data.data);\r\n\r\n        if (Array.isArray(data.data)) {\r\n          setProducts(data.data);\r\n          console.log('\uD83D\uDD27 useProductList: \u2705 Productos cargados:', data.data.length);\r\n        } else {\r\n          throw new Error('Estructura de respuesta inv\xE1lida - data no es un array');\r\n        }\r\n      } catch (err) {\r\n        console.error('\uD83D\uDD27 useProductList: \u274C Error:', err);\r\n        setError(err instanceof Error ? err.message : 'Error desconocido');\r\n        setProducts([]);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  return {\r\n    products,\r\n    isLoading,\r\n    error\r\n  };\r\n}\r\n\r\nexport type { Product, ProductListResponse };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useProductList", "console", "log", "products", "setProducts", "useState", "isLoading", "setIsLoading", "error", "setError", "useEffect", "fetchProducts", "response", "fetch", "credentials", "headers", "status", "ok", "Error", "statusText", "data", "json", "Array", "isArray", "length", "err", "message"],
      mappings: ";;;;+BAuCgBA;;;eAAAA;;;uBAvCoB;AAuC7B,SAASA;IACdC,QAAQC,GAAG,CAAC;IACZ,MAAM,CAACC,UAAUC,YAAY,GAAGC,IAAAA,eAAQ,EAAY,EAAE;IACtD,MAAM,CAACC,WAAWC,aAAa,GAAGF,IAAAA,eAAQ,EAAC;IAC3C,MAAM,CAACG,OAAOC,SAAS,GAAGJ,IAAAA,eAAQ,EAAgB;IAElDK,IAAAA,gBAAS,EAAC;QACR,MAAMC,gBAAgB;YACpB,IAAI;gBACFV,QAAQC,GAAG,CAAC;gBACZK,aAAa;gBACbE,SAAS;gBAET,MAAMG,WAAW,MAAMC,MAAM,gCAAgC;oBAC3DC,aAAa;oBACbC,SAAS;wBACP,gBAAgB;oBAClB;gBACF;gBACAd,QAAQC,GAAG,CAAC,uCAAuCU,SAASI,MAAM;gBAElE,IAAI,CAACJ,SAASK,EAAE,EAAE;oBAChB,MAAM,IAAIC,MAAM,CAAC,MAAM,EAAEN,SAASI,MAAM,CAAC,EAAE,EAAEJ,SAASO,UAAU,EAAE;gBACpE;gBAEA,MAAMC,OAA4B,MAAMR,SAASS,IAAI;gBACrDpB,QAAQC,GAAG,CAAC,0CAA0CkB;gBACtDnB,QAAQC,GAAG,CAAC,iCAAiCkB,KAAKA,IAAI;gBAEtD,IAAIE,MAAMC,OAAO,CAACH,KAAKA,IAAI,GAAG;oBAC5BhB,YAAYgB,KAAKA,IAAI;oBACrBnB,QAAQC,GAAG,CAAC,4CAA4CkB,KAAKA,IAAI,CAACI,MAAM;gBAC1E,OAAO;oBACL,MAAM,IAAIN,MAAM;gBAClB;YACF,EAAE,OAAOO,KAAK;gBACZxB,QAAQO,KAAK,CAAC,+BAA+BiB;gBAC7ChB,SAASgB,eAAeP,QAAQO,IAAIC,OAAO,GAAG;gBAC9CtB,YAAY,EAAE;YAChB,SAAU;gBACRG,aAAa;YACf;QACF;QAEAI;IACF,GAAG,EAAE;IAEL,OAAO;QACLR;QACAG;QACAE;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e50019e887c9607e0a8bb0ce9c720a97c28bac2a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_tf3h5krad = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_tf3h5krad();
cov_tf3h5krad().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_tf3h5krad().s[1]++;
Object.defineProperty(exports, "useProductList", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_tf3h5krad().f[0]++;
    cov_tf3h5krad().s[2]++;
    return useProductList;
  }
});
const _react =
/* istanbul ignore next */
(cov_tf3h5krad().s[3]++, require("react"));
function useProductList() {
  /* istanbul ignore next */
  cov_tf3h5krad().f[1]++;
  cov_tf3h5krad().s[4]++;
  console.log('🔧 useProductList: Hook iniciado');
  const [products, setProducts] =
  /* istanbul ignore next */
  (cov_tf3h5krad().s[5]++, (0, _react.useState)([]));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_tf3h5krad().s[6]++, (0, _react.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_tf3h5krad().s[7]++, (0, _react.useState)(null));
  /* istanbul ignore next */
  cov_tf3h5krad().s[8]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_tf3h5krad().f[2]++;
    cov_tf3h5krad().s[9]++;
    const fetchProducts = async () => {
      /* istanbul ignore next */
      cov_tf3h5krad().f[3]++;
      cov_tf3h5krad().s[10]++;
      try {
        /* istanbul ignore next */
        cov_tf3h5krad().s[11]++;
        console.log('🔧 useProductList: Iniciando fetch...');
        /* istanbul ignore next */
        cov_tf3h5krad().s[12]++;
        setIsLoading(true);
        /* istanbul ignore next */
        cov_tf3h5krad().s[13]++;
        setError(null);
        const response =
        /* istanbul ignore next */
        (cov_tf3h5krad().s[14]++, await fetch('/api/admin/products?limit=25', {
          credentials: 'include',
          headers: {
            'Content-Type': 'application/json'
          }
        }));
        /* istanbul ignore next */
        cov_tf3h5krad().s[15]++;
        console.log('🔧 useProductList: Response status:', response.status);
        /* istanbul ignore next */
        cov_tf3h5krad().s[16]++;
        if (!response.ok) {
          /* istanbul ignore next */
          cov_tf3h5krad().b[0][0]++;
          cov_tf3h5krad().s[17]++;
          throw new Error(`Error ${response.status}: ${response.statusText}`);
        } else
        /* istanbul ignore next */
        {
          cov_tf3h5krad().b[0][1]++;
        }
        const data =
        /* istanbul ignore next */
        (cov_tf3h5krad().s[18]++, await response.json());
        /* istanbul ignore next */
        cov_tf3h5krad().s[19]++;
        console.log('🔧 useProductList: Respuesta completa:', data);
        /* istanbul ignore next */
        cov_tf3h5krad().s[20]++;
        console.log('🔧 useProductList: data.data:', data.data);
        /* istanbul ignore next */
        cov_tf3h5krad().s[21]++;
        if (Array.isArray(data.data)) {
          /* istanbul ignore next */
          cov_tf3h5krad().b[1][0]++;
          cov_tf3h5krad().s[22]++;
          setProducts(data.data);
          /* istanbul ignore next */
          cov_tf3h5krad().s[23]++;
          console.log('🔧 useProductList: ✅ Productos cargados:', data.data.length);
        } else {
          /* istanbul ignore next */
          cov_tf3h5krad().b[1][1]++;
          cov_tf3h5krad().s[24]++;
          throw new Error('Estructura de respuesta inválida - data no es un array');
        }
      } catch (err) {
        /* istanbul ignore next */
        cov_tf3h5krad().s[25]++;
        console.error('🔧 useProductList: ❌ Error:', err);
        /* istanbul ignore next */
        cov_tf3h5krad().s[26]++;
        setError(err instanceof Error ?
        /* istanbul ignore next */
        (cov_tf3h5krad().b[2][0]++, err.message) :
        /* istanbul ignore next */
        (cov_tf3h5krad().b[2][1]++, 'Error desconocido'));
        /* istanbul ignore next */
        cov_tf3h5krad().s[27]++;
        setProducts([]);
      } finally {
        /* istanbul ignore next */
        cov_tf3h5krad().s[28]++;
        setIsLoading(false);
      }
    };
    /* istanbul ignore next */
    cov_tf3h5krad().s[29]++;
    fetchProducts();
  }, []);
  /* istanbul ignore next */
  cov_tf3h5krad().s[30]++;
  return {
    products,
    isLoading,
    error
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,