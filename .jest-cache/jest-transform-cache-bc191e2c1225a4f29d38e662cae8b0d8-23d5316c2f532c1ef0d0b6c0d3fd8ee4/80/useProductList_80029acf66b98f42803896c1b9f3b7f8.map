{"version":3,"names":["cov_tf3h5krad","actualCoverage","s","useProductList","f","console","log","products","setProducts","_react","useState","isLoading","setIsLoading","error","setError","useEffect","fetchProducts","response","fetch","credentials","headers","status","ok","b","Error","statusText","data","json","Array","isArray","length","err","message"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useProductList.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\ninterface Product {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  price: number;\r\n  stock: number;\r\n  category_id: number;\r\n  images: {\r\n    main: string;\r\n    gallery: string[];\r\n    previews: string[];\r\n    thumbnails: string[];\r\n  };\r\n  created_at: string;\r\n  updated_at: string;\r\n  category_name: string;\r\n}\r\n\r\ninterface ProductListResponse {\r\n  data: Product[];\r\n  total: number;\r\n  page: number;\r\n  pageSize: number;\r\n  totalPages: number;\r\n}\r\n\r\n/**\r\n * Hook est√°ndar para gesti√≥n de productos en el panel administrativo\r\n *\r\n * Funcionalidades:\r\n * - Consulta real a la API /api/admin/products\r\n * - Carga de 25 productos reales de Supabase por p√°gina\r\n * - Informaci√≥n de paginaci√≥n completa\r\n * - Datos completos (nombres, precios, stock, categor√≠as, im√°genes)\r\n *\r\n * @returns {Object} Estado del hook con productos, loading y error\r\n */\r\nexport function useProductList() {\r\n  console.log('üîß useProductList: Hook iniciado');\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        console.log('üîß useProductList: Iniciando fetch...');\r\n        setIsLoading(true);\r\n        setError(null);\r\n\r\n        const response = await fetch('/api/admin/products?limit=25', {\r\n          credentials: 'include',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n        console.log('üîß useProductList: Response status:', response.status);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n        }\r\n\r\n        const data: ProductListResponse = await response.json();\r\n        console.log('üîß useProductList: Respuesta completa:', data);\r\n        console.log('üîß useProductList: data.data:', data.data);\r\n\r\n        if (Array.isArray(data.data)) {\r\n          setProducts(data.data);\r\n          console.log('üîß useProductList: ‚úÖ Productos cargados:', data.data.length);\r\n        } else {\r\n          throw new Error('Estructura de respuesta inv√°lida - data no es un array');\r\n        }\r\n      } catch (err) {\r\n        console.error('üîß useProductList: ‚ùå Error:', err);\r\n        setError(err instanceof Error ? err.message : 'Error desconocido');\r\n        setProducts([]);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  return {\r\n    products,\r\n    isLoading,\r\n    error\r\n  };\r\n}\r\n\r\nexport type { Product, ProductListResponse };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}