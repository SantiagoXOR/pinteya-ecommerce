6869f6fb82dd089b0d5acba5709050c3
"use client";
"use strict";

/* istanbul ignore next */
function cov_1db5yjjmrq() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\checkbox.tsx";
  var hash = "d3d3bca776854fae511e5ac7e088297ad96247a6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\checkbox.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 24
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 29
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 30
        }
      },
      "7": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 48
        }
      },
      "8": {
        start: {
          line: 24,
          column: 29
        },
        end: {
          line: 24,
          column: 72
        }
      },
      "9": {
        start: {
          line: 25,
          column: 37
        },
        end: {
          line: 25,
          column: 99
        }
      },
      "10": {
        start: {
          line: 26,
          column: 26
        },
        end: {
          line: 26,
          column: 64
        }
      },
      "11": {
        start: {
          line: 27,
          column: 32
        },
        end: {
          line: 27,
          column: 67
        }
      },
      "12": {
        start: {
          line: 28,
          column: 15
        },
        end: {
          line: 28,
          column: 41
        }
      },
      "13": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 51
        }
      },
      "14": {
        start: {
          line: 30,
          column: 39
        },
        end: {
          line: 30,
          column: 51
        }
      },
      "15": {
        start: {
          line: 31,
          column: 28
        },
        end: {
          line: 31,
          column: 41
        }
      },
      "16": {
        start: {
          line: 32,
          column: 27
        },
        end: {
          line: 32,
          column: 40
        }
      },
      "17": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 20
        }
      },
      "18": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 66
        }
      },
      "19": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "20": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 19
        }
      },
      "21": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "22": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 44,
          column: 10
        }
      },
      "23": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 53
        }
      },
      "24": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "25": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 30
        }
      },
      "26": {
        start: {
          line: 50,
          column: 17
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "27": {
        start: {
          line: 53,
          column: 32
        },
        end: {
          line: 53,
          column: 88
        }
      },
      "28": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "29": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "30": {
        start: {
          line: 56,
          column: 23
        },
        end: {
          line: 56,
          column: 95
        }
      },
      "31": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 61,
          column: 13
        }
      },
      "32": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 57
        }
      },
      "33": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 39
        }
      },
      "34": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 25
        }
      },
      "35": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "36": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 31
        }
      },
      "37": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 18
        }
      },
      "38": {
        start: {
          line: 70,
          column: 25
        },
        end: {
          line: 88,
          column: 2
        }
      },
      "39": {
        start: {
          line: 89,
          column: 31
        },
        end: {
          line: 144,
          column: 2
        }
      },
      "40": {
        start: {
          line: 90,
          column: 24
        },
        end: {
          line: 90,
          column: 38
        }
      },
      "41": {
        start: {
          line: 91,
          column: 23
        },
        end: {
          line: 91,
          column: 40
        }
      },
      "42": {
        start: {
          line: 92,
          column: 21
        },
        end: {
          line: 92,
          column: 28
        }
      },
      "43": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 143,
          column: 7
        }
      },
      "44": {
        start: {
          line: 145,
          column: 0
        },
        end: {
          line: 145,
          column: 55
        }
      },
      "45": {
        start: {
          line: 147,
          column: 21
        },
        end: {
          line: 147,
          column: 28
        }
      },
      "46": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 173,
          column: 7
        }
      },
      "47": {
        start: {
          line: 175,
          column: 37
        },
        end: {
          line: 202,
          column: 2
        }
      },
      "48": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 183,
          column: 5
        }
      },
      "49": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 182,
          column: 11
        }
      },
      "50": {
        start: {
          line: 184,
          column: 24
        },
        end: {
          line: 188,
          column: 5
        }
      },
      "51": {
        start: {
          line: 189,
          column: 29
        },
        end: {
          line: 193,
          column: 5
        }
      },
      "52": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 201,
          column: 7
        }
      },
      "53": {
        start: {
          line: 203,
          column: 0
        },
        end: {
          line: 203,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 20
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 25
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 26
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 33
          }
        },
        loc: {
          start: {
            line: 29,
            column: 47
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 33,
            column: 39
          },
          end: {
            line: 33,
            column: 40
          }
        },
        loc: {
          start: {
            line: 33,
            column: 61
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "6": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 37,
            column: 9
          },
          end: {
            line: 37,
            column: 34
          }
        },
        loc: {
          start: {
            line: 37,
            column: 53
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 37
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 89,
            column: 49
          },
          end: {
            line: 89,
            column: 50
          }
        },
        loc: {
          start: {
            line: 89,
            column: 142
          },
          end: {
            line: 144,
            column: 1
          }
        },
        line: 89
      },
      "8": {
        name: "CheckboxGroup",
        decl: {
          start: {
            line: 146,
            column: 9
          },
          end: {
            line: 146,
            column: 22
          }
        },
        loc: {
          start: {
            line: 146,
            column: 101
          },
          end: {
            line: 174,
            column: 1
          }
        },
        line: 146
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 175,
            column: 55
          },
          end: {
            line: 175,
            column: 56
          }
        },
        loc: {
          start: {
            line: 175,
            column: 120
          },
          end: {
            line: 202,
            column: 1
          }
        },
        line: 175
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 15
          },
          end: {
            line: 34,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 29
          },
          end: {
            line: 34,
            column: 45
          }
        }, {
          start: {
            line: 34,
            column: 48
          },
          end: {
            line: 34,
            column: 65
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "3": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 20
          }
        }, {
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 38,
            column: 27
          }
        }, {
          start: {
            line: 38,
            column: 31
          },
          end: {
            line: 38,
            column: 45
          }
        }],
        line: 38
      },
      "4": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "5": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 20
          }
        }, {
          start: {
            line: 41,
            column: 24
          },
          end: {
            line: 41,
            column: 47
          }
        }, {
          start: {
            line: 41,
            column: 51
          },
          end: {
            line: 41,
            column: 76
          }
        }],
        line: 41
      },
      "6": {
        loc: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "7": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 13
          }
        }, {
          start: {
            line: 47,
            column: 17
          },
          end: {
            line: 47,
            column: 31
          }
        }],
        line: 47
      },
      "8": {
        loc: {
          start: {
            line: 53,
            column: 32
          },
          end: {
            line: 53,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 32
          },
          end: {
            line: 53,
            column: 53
          }
        }, {
          start: {
            line: 53,
            column: 57
          },
          end: {
            line: 53,
            column: 88
          }
        }],
        line: 53
      },
      "9": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "10": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 55,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 55,
            column: 29
          }
        }, {
          start: {
            line: 55,
            column: 33
          },
          end: {
            line: 55,
            column: 79
          }
        }],
        line: 55
      },
      "11": {
        loc: {
          start: {
            line: 56,
            column: 23
          },
          end: {
            line: 56,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 47
          },
          end: {
            line: 56,
            column: 88
          }
        }, {
          start: {
            line: 56,
            column: 91
          },
          end: {
            line: 56,
            column: 95
          }
        }],
        line: 56
      },
      "12": {
        loc: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        }, {
          start: {
            line: 59,
            column: 19
          },
          end: {
            line: 61,
            column: 13
          }
        }],
        line: 57
      },
      "13": {
        loc: {
          start: {
            line: 57,
            column: 16
          },
          end: {
            line: 57,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 16
          },
          end: {
            line: 57,
            column: 20
          }
        }, {
          start: {
            line: 57,
            column: 25
          },
          end: {
            line: 57,
            column: 33
          }
        }, {
          start: {
            line: 57,
            column: 37
          },
          end: {
            line: 57,
            column: 45
          }
        }],
        line: 57
      },
      "14": {
        loc: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "15": {
        loc: {
          start: {
            line: 91,
            column: 23
          },
          end: {
            line: 91,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 23
          },
          end: {
            line: 91,
            column: 25
          }
        }, {
          start: {
            line: 91,
            column: 29
          },
          end: {
            line: 91,
            column: 40
          }
        }],
        line: 91
      },
      "16": {
        loc: {
          start: {
            line: 103,
            column: 37
          },
          end: {
            line: 103,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 103,
            column: 48
          },
          end: {
            line: 103,
            column: 61
          }
        }, {
          start: {
            line: 103,
            column: 64
          },
          end: {
            line: 103,
            column: 71
          }
        }],
        line: 103
      },
      "17": {
        loc: {
          start: {
            line: 105,
            column: 28
          },
          end: {
            line: 105,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 28
          },
          end: {
            line: 105,
            column: 36
          }
        }, {
          start: {
            line: 105,
            column: 40
          },
          end: {
            line: 105,
            column: 56
          }
        }],
        line: 105
      },
      "18": {
        loc: {
          start: {
            line: 109,
            column: 38
          },
          end: {
            line: 113,
            column: 30
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 109,
            column: 68
          },
          end: {
            line: 111,
            column: 30
          }
        }, {
          start: {
            line: 111,
            column: 47
          },
          end: {
            line: 113,
            column: 30
          }
        }],
        line: 109
      },
      "19": {
        loc: {
          start: {
            line: 116,
            column: 20
          },
          end: {
            line: 135,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 21
          },
          end: {
            line: 116,
            column: 26
          }
        }, {
          start: {
            line: 116,
            column: 30
          },
          end: {
            line: 116,
            column: 41
          }
        }, {
          start: {
            line: 116,
            column: 60
          },
          end: {
            line: 135,
            column: 22
          }
        }],
        line: 116
      },
      "20": {
        loc: {
          start: {
            line: 119,
            column: 28
          },
          end: {
            line: 129,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 28
          },
          end: {
            line: 119,
            column: 33
          }
        }, {
          start: {
            line: 119,
            column: 51
          },
          end: {
            line: 129,
            column: 30
          }
        }],
        line: 119
      },
      "21": {
        loc: {
          start: {
            line: 121,
            column: 167
          },
          end: {
            line: 121,
            column: 193
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 167
          },
          end: {
            line: 121,
            column: 175
          }
        }, {
          start: {
            line: 121,
            column: 179
          },
          end: {
            line: 121,
            column: 193
          }
        }],
        line: 121
      },
      "22": {
        loc: {
          start: {
            line: 124,
            column: 36
          },
          end: {
            line: 127,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 36
          },
          end: {
            line: 124,
            column: 50
          }
        }, {
          start: {
            line: 124,
            column: 68
          },
          end: {
            line: 127,
            column: 38
          }
        }],
        line: 124
      },
      "23": {
        loc: {
          start: {
            line: 130,
            column: 28
          },
          end: {
            line: 133,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 28
          },
          end: {
            line: 130,
            column: 39
          }
        }, {
          start: {
            line: 130,
            column: 57
          },
          end: {
            line: 133,
            column: 30
          }
        }],
        line: 130
      },
      "24": {
        loc: {
          start: {
            line: 131,
            column: 83
          },
          end: {
            line: 131,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 83
          },
          end: {
            line: 131,
            column: 91
          }
        }, {
          start: {
            line: 131,
            column: 95
          },
          end: {
            line: 131,
            column: 109
          }
        }],
        line: 131
      },
      "25": {
        loc: {
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 141,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 138,
            column: 17
          }
        }, {
          start: {
            line: 138,
            column: 35
          },
          end: {
            line: 141,
            column: 14
          }
        }],
        line: 138
      },
      "26": {
        loc: {
          start: {
            line: 140,
            column: 26
          },
          end: {
            line: 140,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 140,
            column: 51
          },
          end: {
            line: 140,
            column: 64
          }
        }, {
          start: {
            line: 140,
            column: 67
          },
          end: {
            line: 140,
            column: 107
          }
        }],
        line: 140
      },
      "27": {
        loc: {
          start: {
            line: 140,
            column: 67
          },
          end: {
            line: 140,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 67
          },
          end: {
            line: 140,
            column: 84
          }
        }, {
          start: {
            line: 140,
            column: 88
          },
          end: {
            line: 140,
            column: 107
          }
        }],
        line: 140
      },
      "28": {
        loc: {
          start: {
            line: 146,
            column: 62
          },
          end: {
            line: 146,
            column: 86
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 146,
            column: 76
          },
          end: {
            line: 146,
            column: 86
          }
        }],
        line: 146
      },
      "29": {
        loc: {
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 163,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 13
          },
          end: {
            line: 151,
            column: 18
          }
        }, {
          start: {
            line: 151,
            column: 22
          },
          end: {
            line: 151,
            column: 33
          }
        }, {
          start: {
            line: 151,
            column: 52
          },
          end: {
            line: 163,
            column: 14
          }
        }],
        line: 151
      },
      "30": {
        loc: {
          start: {
            line: 154,
            column: 20
          },
          end: {
            line: 157,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 20
          },
          end: {
            line: 154,
            column: 25
          }
        }, {
          start: {
            line: 154,
            column: 43
          },
          end: {
            line: 157,
            column: 22
          }
        }],
        line: 154
      },
      "31": {
        loc: {
          start: {
            line: 155,
            column: 87
          },
          end: {
            line: 155,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 87
          },
          end: {
            line: 155,
            column: 95
          }
        }, {
          start: {
            line: 155,
            column: 99
          },
          end: {
            line: 155,
            column: 113
          }
        }],
        line: 155
      },
      "32": {
        loc: {
          start: {
            line: 158,
            column: 20
          },
          end: {
            line: 161,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 20
          },
          end: {
            line: 158,
            column: 31
          }
        }, {
          start: {
            line: 158,
            column: 49
          },
          end: {
            line: 161,
            column: 22
          }
        }],
        line: 158
      },
      "33": {
        loc: {
          start: {
            line: 159,
            column: 75
          },
          end: {
            line: 159,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 75
          },
          end: {
            line: 159,
            column: 83
          }
        }, {
          start: {
            line: 159,
            column: 87
          },
          end: {
            line: 159,
            column: 101
          }
        }],
        line: 159
      },
      "34": {
        loc: {
          start: {
            line: 165,
            column: 55
          },
          end: {
            line: 165,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 55
          },
          end: {
            line: 165,
            column: 83
          }
        }, {
          start: {
            line: 165,
            column: 87
          },
          end: {
            line: 165,
            column: 119
          }
        }],
        line: 165
      },
      "35": {
        loc: {
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 171,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 168,
            column: 17
          }
        }, {
          start: {
            line: 168,
            column: 35
          },
          end: {
            line: 171,
            column: 14
          }
        }],
        line: 168
      },
      "36": {
        loc: {
          start: {
            line: 170,
            column: 26
          },
          end: {
            line: 170,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 170,
            column: 51
          },
          end: {
            line: 170,
            column: 64
          }
        }, {
          start: {
            line: 170,
            column: 67
          },
          end: {
            line: 170,
            column: 107
          }
        }],
        line: 170
      },
      "37": {
        loc: {
          start: {
            line: 170,
            column: 67
          },
          end: {
            line: 170,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 170,
            column: 67
          },
          end: {
            line: 170,
            column: 84
          }
        }, {
          start: {
            line: 170,
            column: 88
          },
          end: {
            line: 170,
            column: 107
          }
        }],
        line: 170
      },
      "38": {
        loc: {
          start: {
            line: 175,
            column: 69
          },
          end: {
            line: 175,
            column: 87
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 175,
            column: 83
          },
          end: {
            line: 175,
            column: 87
          }
        }],
        line: 175
      },
      "39": {
        loc: {
          start: {
            line: 175,
            column: 89
          },
          end: {
            line: 175,
            column: 100
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 175,
            column: 96
          },
          end: {
            line: 175,
            column: 100
          }
        }],
        line: 175
      },
      "40": {
        loc: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "41": {
        loc: {
          start: {
            line: 196,
            column: 412
          },
          end: {
            line: 196,
            column: 424
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 412
          },
          end: {
            line: 196,
            column: 416
          }
        }, {
          start: {
            line: 196,
            column: 420
          },
          end: {
            line: 196,
            column: 424
          }
        }],
        line: 196
      },
      "42": {
        loc: {
          start: {
            line: 199,
            column: 181
          },
          end: {
            line: 199,
            column: 193
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 181
          },
          end: {
            line: 199,
            column: 185
          }
        }, {
          start: {
            line: 199,
            column: 189
          },
          end: {
            line: 199,
            column: 193
          }
        }],
        line: 199
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0],
      "29": [0, 0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0],
      "39": [0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\checkbox.tsx"],
      sourcesContent: ["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\r\nimport { Check, Minus } from \"@/lib/optimized-imports\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst checkboxVariants = cva(\r\n  \"peer h-4 w-4 shrink-0 rounded-sm border border-gray-300 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 transition-all duration-200\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"data-[state=checked]:bg-primary data-[state=checked]:text-white data-[state=checked]:border-primary\",\r\n        destructive: \"data-[state=checked]:bg-red-600 data-[state=checked]:text-white data-[state=checked]:border-red-600\",\r\n        success: \"data-[state=checked]:bg-green-600 data-[state=checked]:text-white data-[state=checked]:border-green-600\",\r\n        warning: \"data-[state=checked]:bg-yellow-600 data-[state=checked]:text-white data-[state=checked]:border-yellow-600\",\r\n      },\r\n      size: {\r\n        sm: \"h-3 w-3\",\r\n        md: \"h-4 w-4\",\r\n        lg: \"h-5 w-5\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"md\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface CheckboxProps\r\n  extends React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>,\r\n    VariantProps<typeof checkboxVariants> {\r\n  label?: string\r\n  description?: string\r\n  error?: string\r\n  indeterminate?: boolean\r\n}\r\n\r\nconst Checkbox = React.forwardRef<\r\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\r\n  CheckboxProps\r\n>(({ className, variant, size, label, description, error, indeterminate, id, ...props }, ref) => {\r\n  const generatedId = React.useId()\r\n  const checkboxId = id || generatedId\r\n  const hasError = !!error\r\n\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      <div className=\"flex items-start space-x-2\">\r\n        <CheckboxPrimitive.Root\r\n          ref={ref}\r\n          id={checkboxId}\r\n          className={cn(\r\n            checkboxVariants({ variant: hasError ? \"destructive\" : variant, size }),\r\n            hasError && \"border-red-500\",\r\n            className\r\n          )}\r\n          {...props}\r\n        >\r\n          <CheckboxPrimitive.Indicator className={cn(\"flex items-center justify-center text-current\")}>\r\n            {indeterminate ? (\r\n              <Minus className=\"h-3 w-3\" />\r\n            ) : (\r\n              <Check className=\"h-3 w-3\" />\r\n            )}\r\n          </CheckboxPrimitive.Indicator>\r\n        </CheckboxPrimitive.Root>\r\n        \r\n        {(label || description) && (\r\n          <div className=\"grid gap-1.5 leading-none\">\r\n            {label && (\r\n              <label\r\n                htmlFor={checkboxId}\r\n                className={cn(\r\n                  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 cursor-pointer\",\r\n                  hasError && \"text-red-600\"\r\n                )}\r\n              >\r\n                {label}\r\n                {props.required && <span className=\"text-red-500 ml-1\">*</span>}\r\n              </label>\r\n            )}\r\n            {description && (\r\n              <p className={cn(\r\n                \"text-xs text-gray-600\",\r\n                hasError && \"text-red-500\"\r\n              )}>\r\n                {description}\r\n              </p>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {error && (\r\n        <p className=\"text-xs text-red-600 mt-1\">{error instanceof Error ? error.message : error?.toString() || 'Error desconocido'}</p>\r\n      )}\r\n    </div>\r\n  )\r\n})\r\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\r\n\r\n// Checkbox Group para m\xFAltiples opciones\r\nexport interface CheckboxGroupProps {\r\n  children: React.ReactNode\r\n  label?: string\r\n  description?: string\r\n  error?: string\r\n  orientation?: \"horizontal\" | \"vertical\"\r\n  className?: string\r\n}\r\n\r\nexport function CheckboxGroup({\r\n  children,\r\n  label,\r\n  description,\r\n  error,\r\n  orientation = \"vertical\",\r\n  className,\r\n}: CheckboxGroupProps) {\r\n  const hasError = !!error\r\n\r\n  return (\r\n    <div className={cn(\"space-y-3\", className)}>\r\n      {(label || description) && (\r\n        <div className=\"space-y-1\">\r\n          {label && (\r\n            <label className={cn(\r\n              \"text-sm font-medium text-gray-900\",\r\n              hasError && \"text-red-600\"\r\n            )}>\r\n              {label}\r\n            </label>\r\n          )}\r\n          {description && (\r\n            <p className={cn(\r\n              \"text-xs text-gray-600\",\r\n              hasError && \"text-red-500\"\r\n            )}>\r\n              {description}\r\n            </p>\r\n          )}\r\n        </div>\r\n      )}\r\n      \r\n      <div className={cn(\r\n        \"space-y-2\",\r\n        orientation === \"horizontal\" && \"flex flex-wrap gap-4 space-y-0\"\r\n      )}>\r\n        {children}\r\n      </div>\r\n      \r\n      {error && (\r\n        <p className=\"text-xs text-red-600\">{error instanceof Error ? error.message : error?.toString() || 'Error desconocido'}</p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\n// Checkbox con switch style\r\nexport interface SwitchCheckboxProps extends CheckboxProps {\r\n  switchStyle?: boolean\r\n}\r\n\r\nexport const SwitchCheckbox = React.forwardRef<\r\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\r\n  SwitchCheckboxProps\r\n>(({ className, switchStyle = true, size = \"md\", ...props }, ref) => {\r\n  if (!switchStyle) {\r\n    return <Checkbox ref={ref} className={className} size={size} {...props} />\r\n  }\r\n\r\n  const sizeClasses = {\r\n    sm: \"h-4 w-7\",\r\n    md: \"h-5 w-9\", \r\n    lg: \"h-6 w-11\",\r\n  }\r\n\r\n  const thumbSizeClasses = {\r\n    sm: \"h-3 w-3 data-[state=checked]:translate-x-3\",\r\n    md: \"h-4 w-4 data-[state=checked]:translate-x-4\",\r\n    lg: \"h-5 w-5 data-[state=checked]:translate-x-5\",\r\n  }\r\n\r\n  return (\r\n    <CheckboxPrimitive.Root\r\n      ref={ref}\r\n      className={cn(\r\n        \"peer inline-flex shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 focus-visible:ring-offset-white disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-gray-200\",\r\n        sizeClasses[size || \"md\"],\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <CheckboxPrimitive.Indicator\r\n        className={cn(\r\n          \"pointer-events-none block rounded-full bg-white shadow-lg ring-0 transition-transform data-[state=unchecked]:translate-x-0\",\r\n          thumbSizeClasses[size || \"md\"]\r\n        )}\r\n      />\r\n    </CheckboxPrimitive.Root>\r\n  )\r\n})\r\nSwitchCheckbox.displayName = \"SwitchCheckbox\"\r\n\r\nexport { Checkbox }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["Checkbox", "CheckboxGroup", "SwitchCheckbox", "checkboxVariants", "cva", "variants", "variant", "default", "destructive", "success", "warning", "size", "sm", "md", "lg", "defaultVariants", "React", "forwardRef", "className", "label", "description", "error", "indeterminate", "id", "props", "ref", "generatedId", "useId", "checkboxId", "hasError", "div", "CheckboxPrimitive", "Root", "cn", "Indicator", "Minus", "Check", "htmlFor", "required", "span", "p", "Error", "message", "toString", "displayName", "children", "orientation", "switchStyle", "sizeClasses", "thumbSizeClasses"],
      mappings: "AAAA;;;;;;;;;;;;QA+MSA;eAAAA;;QA7FOC;eAAAA;;QAoDHC;eAAAA;;;;+DApKU;uEACY;kCACN;wCACU;uBACpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEnB,MAAMC,mBAAmBC,IAAAA,2BAAG,EAC1B,gQACA;IACEC,UAAU;QACRC,SAAS;YACPC,SAAS;YACTC,aAAa;YACbC,SAAS;YACTC,SAAS;QACX;QACAC,MAAM;YACJC,IAAI;YACJC,IAAI;YACJC,IAAI;QACN;IACF;IACAC,iBAAiB;QACfT,SAAS;QACTK,MAAM;IACR;AACF;AAYF,MAAMX,yBAAWgB,OAAMC,UAAU,CAG/B,CAAC,EAAEC,SAAS,EAAEZ,OAAO,EAAEK,IAAI,EAAEQ,KAAK,EAAEC,WAAW,EAAEC,KAAK,EAAEC,aAAa,EAAEC,EAAE,EAAE,GAAGC,OAAO,EAAEC;IACvF,MAAMC,cAAcV,OAAMW,KAAK;IAC/B,MAAMC,aAAaL,MAAMG;IACzB,MAAMG,WAAW,CAAC,CAACR;IAEnB,qBACE,sBAACS;QAAIZ,WAAU;;0BACb,sBAACY;gBAAIZ,WAAU;;kCACb,qBAACa,eAAkBC,IAAI;wBACrBP,KAAKA;wBACLF,IAAIK;wBACJV,WAAWe,IAAAA,SAAE,EACX9B,iBAAiB;4BAAEG,SAASuB,WAAW,gBAAgBvB;4BAASK;wBAAK,IACrEkB,YAAY,kBACZX;wBAED,GAAGM,KAAK;kCAET,cAAA,qBAACO,eAAkBG,SAAS;4BAAChB,WAAWe,IAAAA,SAAE,EAAC;sCACxCX,8BACC,qBAACa,uBAAK;gCAACjB,WAAU;+CAEjB,qBAACkB,uBAAK;gCAAClB,WAAU;;;;oBAKrBC,CAAAA,SAASC,WAAU,mBACnB,sBAACU;wBAAIZ,WAAU;;4BACZC,uBACC,sBAACA;gCACCkB,SAAST;gCACTV,WAAWe,IAAAA,SAAE,EACX,6GACAJ,YAAY;;oCAGbV;oCACAK,MAAMc,QAAQ,kBAAI,qBAACC;wCAAKrB,WAAU;kDAAoB;;;;4BAG1DE,6BACC,qBAACoB;gCAAEtB,WAAWe,IAAAA,SAAE,EACd,yBACAJ,YAAY;0CAEXT;;;;;;YAOVC,uBACC,qBAACmB;gBAAEtB,WAAU;0BAA6BG,iBAAiBoB,QAAQpB,MAAMqB,OAAO,GAAGrB,OAAOsB,cAAc;;;;AAIhH;AACA3C,SAAS4C,WAAW,GAAGb,eAAkBC,IAAI,CAACY,WAAW;AAYlD,SAAS3C,cAAc,EAC5B4C,QAAQ,EACR1B,KAAK,EACLC,WAAW,EACXC,KAAK,EACLyB,cAAc,UAAU,EACxB5B,SAAS,EACU;IACnB,MAAMW,WAAW,CAAC,CAACR;IAEnB,qBACE,sBAACS;QAAIZ,WAAWe,IAAAA,SAAE,EAAC,aAAaf;;YAC5BC,CAAAA,SAASC,WAAU,mBACnB,sBAACU;gBAAIZ,WAAU;;oBACZC,uBACC,qBAACA;wBAAMD,WAAWe,IAAAA,SAAE,EAClB,qCACAJ,YAAY;kCAEXV;;oBAGJC,6BACC,qBAACoB;wBAAEtB,WAAWe,IAAAA,SAAE,EACd,yBACAJ,YAAY;kCAEXT;;;;0BAMT,qBAACU;gBAAIZ,WAAWe,IAAAA,SAAE,EAChB,aACAa,gBAAgB,gBAAgB;0BAE/BD;;YAGFxB,uBACC,qBAACmB;gBAAEtB,WAAU;0BAAwBG,iBAAiBoB,QAAQpB,MAAMqB,OAAO,GAAGrB,OAAOsB,cAAc;;;;AAI3G;AAOO,MAAMzC,+BAAiBc,OAAMC,UAAU,CAG5C,CAAC,EAAEC,SAAS,EAAE6B,cAAc,IAAI,EAAEpC,OAAO,IAAI,EAAE,GAAGa,OAAO,EAAEC;IAC3D,IAAI,CAACsB,aAAa;QAChB,qBAAO,qBAAC/C;YAASyB,KAAKA;YAAKP,WAAWA;YAAWP,MAAMA;YAAO,GAAGa,KAAK;;IACxE;IAEA,MAAMwB,cAAc;QAClBpC,IAAI;QACJC,IAAI;QACJC,IAAI;IACN;IAEA,MAAMmC,mBAAmB;QACvBrC,IAAI;QACJC,IAAI;QACJC,IAAI;IACN;IAEA,qBACE,qBAACiB,eAAkBC,IAAI;QACrBP,KAAKA;QACLP,WAAWe,IAAAA,SAAE,EACX,8WACAe,WAAW,CAACrC,QAAQ,KAAK,EACzBO;QAED,GAAGM,KAAK;kBAET,cAAA,qBAACO,eAAkBG,SAAS;YAC1BhB,WAAWe,IAAAA,SAAE,EACX,8HACAgB,gBAAgB,CAACtC,QAAQ,KAAK;;;AAKxC;AACAT,eAAe0C,WAAW,GAAG"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d3d3bca776854fae511e5ac7e088297ad96247a6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1db5yjjmrq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1db5yjjmrq();
cov_1db5yjjmrq().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1db5yjjmrq().f[0]++;
  cov_1db5yjjmrq().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1db5yjjmrq().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1db5yjjmrq().s[3]++;
_export(exports, {
  get Checkbox() {
    /* istanbul ignore next */
    cov_1db5yjjmrq().f[1]++;
    cov_1db5yjjmrq().s[4]++;
    return Checkbox;
  },
  get CheckboxGroup() {
    /* istanbul ignore next */
    cov_1db5yjjmrq().f[2]++;
    cov_1db5yjjmrq().s[5]++;
    return CheckboxGroup;
  },
  get SwitchCheckbox() {
    /* istanbul ignore next */
    cov_1db5yjjmrq().f[3]++;
    cov_1db5yjjmrq().s[6]++;
    return SwitchCheckbox;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1db5yjjmrq().s[7]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1db5yjjmrq().s[8]++, _interop_require_wildcard(require("react")));
const _reactcheckbox =
/* istanbul ignore next */
(/*#__PURE__*/cov_1db5yjjmrq().s[9]++, _interop_require_wildcard(require("@radix-ui/react-checkbox")));
const _optimizedimports =
/* istanbul ignore next */
(cov_1db5yjjmrq().s[10]++, require("../../lib/optimized-imports"));
const _classvarianceauthority =
/* istanbul ignore next */
(cov_1db5yjjmrq().s[11]++, require("class-variance-authority"));
const _utils =
/* istanbul ignore next */
(cov_1db5yjjmrq().s[12]++, require("../../lib/utils"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1db5yjjmrq().f[4]++;
  cov_1db5yjjmrq().s[13]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1db5yjjmrq().b[0][0]++;
    cov_1db5yjjmrq().s[14]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1db5yjjmrq().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1db5yjjmrq().s[15]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1db5yjjmrq().s[16]++, new WeakMap());
  /* istanbul ignore next */
  cov_1db5yjjmrq().s[17]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1db5yjjmrq().f[5]++;
    cov_1db5yjjmrq().s[18]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1db5yjjmrq().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1db5yjjmrq().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1db5yjjmrq().f[6]++;
  cov_1db5yjjmrq().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_1db5yjjmrq().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1db5yjjmrq().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1db5yjjmrq().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1db5yjjmrq().b[2][0]++;
    cov_1db5yjjmrq().s[20]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1db5yjjmrq().b[2][1]++;
  }
  cov_1db5yjjmrq().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_1db5yjjmrq().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1db5yjjmrq().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1db5yjjmrq().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1db5yjjmrq().b[4][0]++;
    cov_1db5yjjmrq().s[22]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1db5yjjmrq().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1db5yjjmrq().s[23]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1db5yjjmrq().s[24]++;
  if (
  /* istanbul ignore next */
  (cov_1db5yjjmrq().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1db5yjjmrq().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1db5yjjmrq().b[6][0]++;
    cov_1db5yjjmrq().s[25]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1db5yjjmrq().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1db5yjjmrq().s[26]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1db5yjjmrq().s[27]++,
  /* istanbul ignore next */
  (cov_1db5yjjmrq().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1db5yjjmrq().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1db5yjjmrq().s[28]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1db5yjjmrq().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_1db5yjjmrq().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1db5yjjmrq().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1db5yjjmrq().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1db5yjjmrq().s[30]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1db5yjjmrq().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1db5yjjmrq().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1db5yjjmrq().s[31]++;
      if (
      /* istanbul ignore next */
      (cov_1db5yjjmrq().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1db5yjjmrq().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1db5yjjmrq().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1db5yjjmrq().b[12][0]++;
        cov_1db5yjjmrq().s[32]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1db5yjjmrq().b[12][1]++;
        cov_1db5yjjmrq().s[33]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1db5yjjmrq().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1db5yjjmrq().s[34]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1db5yjjmrq().s[35]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1db5yjjmrq().b[14][0]++;
    cov_1db5yjjmrq().s[36]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1db5yjjmrq().b[14][1]++;
  }
  cov_1db5yjjmrq().s[37]++;
  return newObj;
}
const checkboxVariants =
/* istanbul ignore next */
(cov_1db5yjjmrq().s[38]++, (0, _classvarianceauthority.cva)("peer h-4 w-4 shrink-0 rounded-sm border border-gray-300 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 transition-all duration-200", {
  variants: {
    variant: {
      default: "data-[state=checked]:bg-primary data-[state=checked]:text-white data-[state=checked]:border-primary",
      destructive: "data-[state=checked]:bg-red-600 data-[state=checked]:text-white data-[state=checked]:border-red-600",
      success: "data-[state=checked]:bg-green-600 data-[state=checked]:text-white data-[state=checked]:border-green-600",
      warning: "data-[state=checked]:bg-yellow-600 data-[state=checked]:text-white data-[state=checked]:border-yellow-600"
    },
    size: {
      sm: "h-3 w-3",
      md: "h-4 w-4",
      lg: "h-5 w-5"
    }
  },
  defaultVariants: {
    variant: "default",
    size: "md"
  }
}));
const Checkbox =
/* istanbul ignore next */
(/*#__PURE__*/cov_1db5yjjmrq().s[39]++, _react.forwardRef(({
  className,
  variant,
  size,
  label,
  description,
  error,
  indeterminate,
  id,
  ...props
}, ref) => {
  /* istanbul ignore next */
  cov_1db5yjjmrq().f[7]++;
  const generatedId =
  /* istanbul ignore next */
  (cov_1db5yjjmrq().s[40]++, _react.useId());
  const checkboxId =
  /* istanbul ignore next */
  (cov_1db5yjjmrq().s[41]++,
  /* istanbul ignore next */
  (cov_1db5yjjmrq().b[15][0]++, id) ||
  /* istanbul ignore next */
  (cov_1db5yjjmrq().b[15][1]++, generatedId));
  const hasError =
  /* istanbul ignore next */
  (cov_1db5yjjmrq().s[42]++, !!error);
  /* istanbul ignore next */
  cov_1db5yjjmrq().s[43]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "space-y-2",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex items-start space-x-2",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_reactcheckbox.Root, {
        ref: ref,
        id: checkboxId,
        className: (0, _utils.cn)(checkboxVariants({
          variant: hasError ?
          /* istanbul ignore next */
          (cov_1db5yjjmrq().b[16][0]++, "destructive") :
          /* istanbul ignore next */
          (cov_1db5yjjmrq().b[16][1]++, variant),
          size
        }),
        /* istanbul ignore next */
        (cov_1db5yjjmrq().b[17][0]++, hasError) &&
        /* istanbul ignore next */
        (cov_1db5yjjmrq().b[17][1]++, "border-red-500"), className),
        ...props,
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_reactcheckbox.Indicator, {
          className: (0, _utils.cn)("flex items-center justify-center text-current"),
          children: indeterminate ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_1db5yjjmrq().b[18][0]++, (0, _jsxruntime.jsx)(_optimizedimports.Minus, {
            className: "h-3 w-3"
          })) :
          /* istanbul ignore next */
          (/*#__PURE__*/cov_1db5yjjmrq().b[18][1]++, (0, _jsxruntime.jsx)(_optimizedimports.Check, {
            className: "h-3 w-3"
          }))
        })
      }), (
      /* istanbul ignore next */
      (cov_1db5yjjmrq().b[19][0]++, label) ||
      /* istanbul ignore next */
      (cov_1db5yjjmrq().b[19][1]++, description)) &&
      /* istanbul ignore next */
      (cov_1db5yjjmrq().b[19][2]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "grid gap-1.5 leading-none",
        children: [
        /* istanbul ignore next */
        (cov_1db5yjjmrq().b[20][0]++, label) &&
        /* istanbul ignore next */
        (cov_1db5yjjmrq().b[20][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
          htmlFor: checkboxId,
          className: (0, _utils.cn)("text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 cursor-pointer",
          /* istanbul ignore next */
          (cov_1db5yjjmrq().b[21][0]++, hasError) &&
          /* istanbul ignore next */
          (cov_1db5yjjmrq().b[21][1]++, "text-red-600")),
          children: [label,
          /* istanbul ignore next */
          (cov_1db5yjjmrq().b[22][0]++, props.required) &&
          /* istanbul ignore next */
          (cov_1db5yjjmrq().b[22][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "text-red-500 ml-1",
            children: "*"
          }))]
        })),
        /* istanbul ignore next */
        (cov_1db5yjjmrq().b[23][0]++, description) &&
        /* istanbul ignore next */
        (cov_1db5yjjmrq().b[23][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: (0, _utils.cn)("text-xs text-gray-600",
          /* istanbul ignore next */
          (cov_1db5yjjmrq().b[24][0]++, hasError) &&
          /* istanbul ignore next */
          (cov_1db5yjjmrq().b[24][1]++, "text-red-500")),
          children: description
        }))]
      }))]
    }),
    /* istanbul ignore next */
    (cov_1db5yjjmrq().b[25][0]++, error) &&
    /* istanbul ignore next */
    (cov_1db5yjjmrq().b[25][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
      className: "text-xs text-red-600 mt-1",
      children: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1db5yjjmrq().b[26][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1db5yjjmrq().b[26][1]++,
      /* istanbul ignore next */
      (cov_1db5yjjmrq().b[27][0]++, error?.toString()) ||
      /* istanbul ignore next */
      (cov_1db5yjjmrq().b[27][1]++, 'Error desconocido'))
    }))]
  });
}));
/* istanbul ignore next */
cov_1db5yjjmrq().s[44]++;
Checkbox.displayName = _reactcheckbox.Root.displayName;
function CheckboxGroup({
  children,
  label,
  description,
  error,
  orientation =
  /* istanbul ignore next */
  (cov_1db5yjjmrq().b[28][0]++, "vertical"),
  className
}) {
  /* istanbul ignore next */
  cov_1db5yjjmrq().f[8]++;
  const hasError =
  /* istanbul ignore next */
  (cov_1db5yjjmrq().s[45]++, !!error);
  /* istanbul ignore next */
  cov_1db5yjjmrq().s[46]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: (0, _utils.cn)("space-y-3", className),
    children: [(
    /* istanbul ignore next */
    (cov_1db5yjjmrq().b[29][0]++, label) ||
    /* istanbul ignore next */
    (cov_1db5yjjmrq().b[29][1]++, description)) &&
    /* istanbul ignore next */
    (cov_1db5yjjmrq().b[29][2]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "space-y-1",
      children: [
      /* istanbul ignore next */
      (cov_1db5yjjmrq().b[30][0]++, label) &&
      /* istanbul ignore next */
      (cov_1db5yjjmrq().b[30][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("label", {
        className: (0, _utils.cn)("text-sm font-medium text-gray-900",
        /* istanbul ignore next */
        (cov_1db5yjjmrq().b[31][0]++, hasError) &&
        /* istanbul ignore next */
        (cov_1db5yjjmrq().b[31][1]++, "text-red-600")),
        children: label
      })),
      /* istanbul ignore next */
      (cov_1db5yjjmrq().b[32][0]++, description) &&
      /* istanbul ignore next */
      (cov_1db5yjjmrq().b[32][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: (0, _utils.cn)("text-xs text-gray-600",
        /* istanbul ignore next */
        (cov_1db5yjjmrq().b[33][0]++, hasError) &&
        /* istanbul ignore next */
        (cov_1db5yjjmrq().b[33][1]++, "text-red-500")),
        children: description
      }))]
    })), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: (0, _utils.cn)("space-y-2",
      /* istanbul ignore next */
      (cov_1db5yjjmrq().b[34][0]++, orientation === "horizontal") &&
      /* istanbul ignore next */
      (cov_1db5yjjmrq().b[34][1]++, "flex flex-wrap gap-4 space-y-0")),
      children: children
    }),
    /* istanbul ignore next */
    (cov_1db5yjjmrq().b[35][0]++, error) &&
    /* istanbul ignore next */
    (cov_1db5yjjmrq().b[35][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
      className: "text-xs text-red-600",
      children: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1db5yjjmrq().b[36][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1db5yjjmrq().b[36][1]++,
      /* istanbul ignore next */
      (cov_1db5yjjmrq().b[37][0]++, error?.toString()) ||
      /* istanbul ignore next */
      (cov_1db5yjjmrq().b[37][1]++, 'Error desconocido'))
    }))]
  });
}
const SwitchCheckbox =
/* istanbul ignore next */
(/*#__PURE__*/cov_1db5yjjmrq().s[47]++, _react.forwardRef(({
  className,
  switchStyle =
  /* istanbul ignore next */
  (cov_1db5yjjmrq().b[38][0]++, true),
  size =
  /* istanbul ignore next */
  (cov_1db5yjjmrq().b[39][0]++, "md"),
  ...props
}, ref) => {
  /* istanbul ignore next */
  cov_1db5yjjmrq().f[9]++;
  cov_1db5yjjmrq().s[48]++;
  if (!switchStyle) {
    /* istanbul ignore next */
    cov_1db5yjjmrq().b[40][0]++;
    cov_1db5yjjmrq().s[49]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(Checkbox, {
      ref: ref,
      className: className,
      size: size,
      ...props
    });
  } else
  /* istanbul ignore next */
  {
    cov_1db5yjjmrq().b[40][1]++;
  }
  const sizeClasses =
  /* istanbul ignore next */
  (cov_1db5yjjmrq().s[50]++, {
    sm: "h-4 w-7",
    md: "h-5 w-9",
    lg: "h-6 w-11"
  });
  const thumbSizeClasses =
  /* istanbul ignore next */
  (cov_1db5yjjmrq().s[51]++, {
    sm: "h-3 w-3 data-[state=checked]:translate-x-3",
    md: "h-4 w-4 data-[state=checked]:translate-x-4",
    lg: "h-5 w-5 data-[state=checked]:translate-x-5"
  });
  /* istanbul ignore next */
  cov_1db5yjjmrq().s[52]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_reactcheckbox.Root, {
    ref: ref,
    className: (0, _utils.cn)("peer inline-flex shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 focus-visible:ring-offset-white disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-gray-200", sizeClasses[
    /* istanbul ignore next */
    (cov_1db5yjjmrq().b[41][0]++, size) ||
    /* istanbul ignore next */
    (cov_1db5yjjmrq().b[41][1]++, "md")], className),
    ...props,
    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_reactcheckbox.Indicator, {
      className: (0, _utils.cn)("pointer-events-none block rounded-full bg-white shadow-lg ring-0 transition-transform data-[state=unchecked]:translate-x-0", thumbSizeClasses[
      /* istanbul ignore next */
      (cov_1db5yjjmrq().b[42][0]++, size) ||
      /* istanbul ignore next */
      (cov_1db5yjjmrq().b[42][1]++, "md")])
    })
  });
}));
/* istanbul ignore next */
cov_1db5yjjmrq().s[53]++;
SwitchCheckbox.displayName = "SwitchCheckbox";
//# sourceMappingURL=data:application/json;charset=utf-8;base64,