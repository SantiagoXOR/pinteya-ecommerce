d6b48e6757ad52d465aa880693e5cdb2
// ===================================
// PINTEYA E-COMMERCE - STRICT API TYPES
// Tipos TypeScript estrictos para prevenir errores de API
// ===================================
"use strict";

/* istanbul ignore next */
function cov_1fou906fvb() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\types\\api-strict.ts";
  var hash = "537b985814fb571993e8315dbb30af9bc852186e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\types\\api-strict.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "2": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "3": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 37,
          column: 3
        }
      },
      "4": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 36
        }
      },
      "5": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 39
        }
      },
      "6": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 32
        }
      },
      "7": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 35
        }
      },
      "8": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 33
        }
      },
      "9": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 34
        }
      },
      "10": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 38
        }
      },
      "11": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 171
        }
      },
      "12": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 206
        }
      },
      "13": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "14": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 21
        }
      },
      "15": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 302
        }
      },
      "16": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "17": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 21
        }
      },
      "18": {
        start: {
          line: 55,
          column: 18
        },
        end: {
          line: 55,
          column: 86
        }
      },
      "19": {
        start: {
          line: 56,
          column: 21
        },
        end: {
          line: 56,
          column: 68
        }
      },
      "20": {
        start: {
          line: 57,
          column: 25
        },
        end: {
          line: 57,
          column: 77
        }
      },
      "21": {
        start: {
          line: 58,
          column: 22
        },
        end: {
          line: 58,
          column: 66
        }
      },
      "22": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 58
        }
      },
      "23": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 145,
          column: 5
        }
      },
      "24": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "25": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 71,
          column: 14
        }
      },
      "26": {
        start: {
          line: 73,
          column: 25
        },
        end: {
          line: 73,
          column: 28
        }
      },
      "27": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "28": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 82,
          column: 14
        }
      },
      "29": {
        start: {
          line: 85,
          column: 23
        },
        end: {
          line: 85,
          column: 49
        }
      },
      "30": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "31": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 93,
          column: 14
        }
      },
      "32": {
        start: {
          line: 96,
          column: 27
        },
        end: {
          line: 96,
          column: 51
        }
      },
      "33": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "34": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 104,
          column: 14
        }
      },
      "35": {
        start: {
          line: 108,
          column: 34
        },
        end: {
          line: 116,
          column: 15
        }
      },
      "36": {
        start: {
          line: 108,
          column: 55
        },
        end: {
          line: 116,
          column: 13
        }
      },
      "37": {
        start: {
          line: 117,
          column: 28
        },
        end: {
          line: 117,
          column: 72
        }
      },
      "38": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 136,
          column: 10
        }
      },
      "39": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 144,
          column: 10
        }
      },
      "40": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 155,
          column: 6
        }
      },
      "41": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 163,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 16
          }
        },
        loc: {
          start: {
            line: 9,
            column: 30
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 32
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 35
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 28
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 31
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 29
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 30
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 34
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "8": {
        name: "isStrictApiResponse",
        decl: {
          start: {
            line: 38,
            column: 9
          },
          end: {
            line: 38,
            column: 28
          }
        },
        loc: {
          start: {
            line: 38,
            column: 34
          },
          end: {
            line: 40,
            column: 1
          }
        },
        line: 38
      },
      "9": {
        name: "isStrictApiError",
        decl: {
          start: {
            line: 41,
            column: 9
          },
          end: {
            line: 41,
            column: 25
          }
        },
        loc: {
          start: {
            line: 41,
            column: 31
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 41
      },
      "10": {
        name: "isValidPagination",
        decl: {
          start: {
            line: 44,
            column: 9
          },
          end: {
            line: 44,
            column: 26
          }
        },
        loc: {
          start: {
            line: 44,
            column: 32
          },
          end: {
            line: 49,
            column: 1
          }
        },
        line: 44
      },
      "11": {
        name: "isValidStrictOrder",
        decl: {
          start: {
            line: 50,
            column: 9
          },
          end: {
            line: 50,
            column: 27
          }
        },
        loc: {
          start: {
            line: 50,
            column: 33
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 50
      },
      "12": {
        name: "toStrictOrdersResponse",
        decl: {
          start: {
            line: 62,
            column: 9
          },
          end: {
            line: 62,
            column: 31
          }
        },
        loc: {
          start: {
            line: 62,
            column: 37
          },
          end: {
            line: 146,
            column: 1
          }
        },
        line: 62
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 108,
            column: 45
          },
          end: {
            line: 108,
            column: 46
          }
        },
        loc: {
          start: {
            line: 108,
            column: 55
          },
          end: {
            line: 116,
            column: 13
          }
        },
        line: 108
      },
      "14": {
        name: "createStrictApiError",
        decl: {
          start: {
            line: 147,
            column: 9
          },
          end: {
            line: 147,
            column: 29
          }
        },
        loc: {
          start: {
            line: 147,
            column: 58
          },
          end: {
            line: 156,
            column: 1
          }
        },
        line: 147
      },
      "15": {
        name: "createStrictApiResponse",
        decl: {
          start: {
            line: 157,
            column: 9
          },
          end: {
            line: 157,
            column: 32
          }
        },
        loc: {
          start: {
            line: 157,
            column: 48
          },
          end: {
            line: 164,
            column: 1
          }
        },
        line: 157
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 39,
            column: 11
          },
          end: {
            line: 39,
            column: 170
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 11
          },
          end: {
            line: 39,
            column: 34
          }
        }, {
          start: {
            line: 39,
            column: 38
          },
          end: {
            line: 39,
            column: 50
          }
        }, {
          start: {
            line: 39,
            column: 54
          },
          end: {
            line: 39,
            column: 70
          }
        }, {
          start: {
            line: 39,
            column: 74
          },
          end: {
            line: 39,
            column: 94
          }
        }, {
          start: {
            line: 39,
            column: 98
          },
          end: {
            line: 39,
            column: 111
          }
        }, {
          start: {
            line: 39,
            column: 115
          },
          end: {
            line: 39,
            column: 133
          }
        }, {
          start: {
            line: 39,
            column: 137
          },
          end: {
            line: 39,
            column: 170
          }
        }],
        line: 39
      },
      "1": {
        loc: {
          start: {
            line: 42,
            column: 11
          },
          end: {
            line: 42,
            column: 205
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 11
          },
          end: {
            line: 42,
            column: 34
          }
        }, {
          start: {
            line: 42,
            column: 38
          },
          end: {
            line: 42,
            column: 50
          }
        }, {
          start: {
            line: 42,
            column: 54
          },
          end: {
            line: 42,
            column: 70
          }
        }, {
          start: {
            line: 42,
            column: 74
          },
          end: {
            line: 42,
            column: 95
          }
        }, {
          start: {
            line: 42,
            column: 99
          },
          end: {
            line: 42,
            column: 113
          }
        }, {
          start: {
            line: 42,
            column: 117
          },
          end: {
            line: 42,
            column: 146
          }
        }, {
          start: {
            line: 42,
            column: 150
          },
          end: {
            line: 42,
            column: 168
          }
        }, {
          start: {
            line: 42,
            column: 172
          },
          end: {
            line: 42,
            column: 205
          }
        }],
        line: 42
      },
      "2": {
        loc: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "3": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 45,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 45,
            column: 31
          }
        }, {
          start: {
            line: 45,
            column: 35
          },
          end: {
            line: 45,
            column: 47
          }
        }],
        line: 45
      },
      "4": {
        loc: {
          start: {
            line: 48,
            column: 11
          },
          end: {
            line: 48,
            column: 301
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 11
          },
          end: {
            line: 48,
            column: 39
          }
        }, {
          start: {
            line: 48,
            column: 43
          },
          end: {
            line: 48,
            column: 72
          }
        }, {
          start: {
            line: 48,
            column: 76
          },
          end: {
            line: 48,
            column: 105
          }
        }, {
          start: {
            line: 48,
            column: 109
          },
          end: {
            line: 48,
            column: 143
          }
        }, {
          start: {
            line: 48,
            column: 147
          },
          end: {
            line: 48,
            column: 183
          }
        }, {
          start: {
            line: 48,
            column: 187
          },
          end: {
            line: 48,
            column: 227
          }
        }, {
          start: {
            line: 48,
            column: 231
          },
          end: {
            line: 48,
            column: 243
          }
        }, {
          start: {
            line: 48,
            column: 247
          },
          end: {
            line: 48,
            column: 260
          }
        }, {
          start: {
            line: 48,
            column: 264
          },
          end: {
            line: 48,
            column: 278
          }
        }, {
          start: {
            line: 48,
            column: 282
          },
          end: {
            line: 48,
            column: 301
          }
        }],
        line: 48
      },
      "5": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "6": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 51,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 51,
            column: 31
          }
        }, {
          start: {
            line: 51,
            column: 35
          },
          end: {
            line: 51,
            column: 47
          }
        }],
        line: 51
      },
      "7": {
        loc: {
          start: {
            line: 55,
            column: 18
          },
          end: {
            line: 55,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 18
          },
          end: {
            line: 55,
            column: 24
          }
        }, {
          start: {
            line: 55,
            column: 29
          },
          end: {
            line: 55,
            column: 55
          }
        }, {
          start: {
            line: 55,
            column: 59
          },
          end: {
            line: 55,
            column: 85
          }
        }],
        line: 55
      },
      "8": {
        loc: {
          start: {
            line: 56,
            column: 21
          },
          end: {
            line: 56,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 21
          },
          end: {
            line: 56,
            column: 50
          }
        }, {
          start: {
            line: 56,
            column: 54
          },
          end: {
            line: 56,
            column: 68
          }
        }],
        line: 56
      },
      "9": {
        loc: {
          start: {
            line: 57,
            column: 25
          },
          end: {
            line: 57,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 25
          },
          end: {
            line: 57,
            column: 39
          }
        }, {
          start: {
            line: 57,
            column: 43
          },
          end: {
            line: 57,
            column: 77
          }
        }],
        line: 57
      },
      "10": {
        loc: {
          start: {
            line: 58,
            column: 22
          },
          end: {
            line: 58,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 22
          },
          end: {
            line: 58,
            column: 32
          }
        }, {
          start: {
            line: 58,
            column: 36
          },
          end: {
            line: 58,
            column: 66
          }
        }],
        line: 58
      },
      "11": {
        loc: {
          start: {
            line: 60,
            column: 11
          },
          end: {
            line: 60,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 11
          },
          end: {
            line: 60,
            column: 16
          }
        }, {
          start: {
            line: 60,
            column: 20
          },
          end: {
            line: 60,
            column: 28
          }
        }, {
          start: {
            line: 60,
            column: 32
          },
          end: {
            line: 60,
            column: 44
          }
        }, {
          start: {
            line: 60,
            column: 48
          },
          end: {
            line: 60,
            column: 57
          }
        }],
        line: 60
      },
      "12": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "13": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "14": {
        loc: {
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 75,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 75,
            column: 26
          }
        }, {
          start: {
            line: 75,
            column: 30
          },
          end: {
            line: 75,
            column: 63
          }
        }],
        line: 75
      },
      "15": {
        loc: {
          start: {
            line: 85,
            column: 23
          },
          end: {
            line: 85,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 23
          },
          end: {
            line: 85,
            column: 43
          }
        }, {
          start: {
            line: 85,
            column: 47
          },
          end: {
            line: 85,
            column: 49
          }
        }],
        line: 85
      },
      "16": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "17": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "18": {
        loc: {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 97,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 97,
            column: 22
          }
        }, {
          start: {
            line: 97,
            column: 26
          },
          end: {
            line: 97,
            column: 56
          }
        }],
        line: 97
      },
      "19": {
        loc: {
          start: {
            line: 111,
            column: 25
          },
          end: {
            line: 111,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 111,
            column: 41
          },
          end: {
            line: 111,
            column: 62
          }
        }, {
          start: {
            line: 111,
            column: 65
          },
          end: {
            line: 111,
            column: 78
          }
        }],
        line: 111
      },
      "20": {
        loc: {
          start: {
            line: 112,
            column: 23
          },
          end: {
            line: 112,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 23
          },
          end: {
            line: 112,
            column: 42
          }
        }, {
          start: {
            line: 112,
            column: 46
          },
          end: {
            line: 112,
            column: 47
          }
        }],
        line: 112
      },
      "21": {
        loc: {
          start: {
            line: 113,
            column: 28
          },
          end: {
            line: 113,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 28
          },
          end: {
            line: 113,
            column: 44
          }
        }, {
          start: {
            line: 113,
            column: 48
          },
          end: {
            line: 113,
            column: 72
          }
        }],
        line: 113
      },
      "22": {
        loc: {
          start: {
            line: 114,
            column: 24
          },
          end: {
            line: 114,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 24
          },
          end: {
            line: 114,
            column: 36
          }
        }, {
          start: {
            line: 114,
            column: 40
          },
          end: {
            line: 114,
            column: 49
          }
        }],
        line: 114
      },
      "23": {
        loc: {
          start: {
            line: 115,
            column: 26
          },
          end: {
            line: 115,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 26
          },
          end: {
            line: 115,
            column: 40
          }
        }, {
          start: {
            line: 115,
            column: 44
          },
          end: {
            line: 115,
            column: 46
          }
        }],
        line: 115
      },
      "24": {
        loc: {
          start: {
            line: 123,
            column: 28
          },
          end: {
            line: 130,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 28
          },
          end: {
            line: 123,
            column: 38
          }
        }, {
          start: {
            line: 123,
            column: 42
          },
          end: {
            line: 130,
            column: 17
          }
        }],
        line: 123
      },
      "25": {
        loc: {
          start: {
            line: 131,
            column: 25
          },
          end: {
            line: 131,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 25
          },
          end: {
            line: 131,
            column: 46
          }
        }, {
          start: {
            line: 131,
            column: 50
          },
          end: {
            line: 131,
            column: 52
          }
        }],
        line: 131
      },
      "26": {
        loc: {
          start: {
            line: 135,
            column: 23
          },
          end: {
            line: 135,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 23
          },
          end: {
            line: 135,
            column: 41
          }
        }, {
          start: {
            line: 135,
            column: 45
          },
          end: {
            line: 135,
            column: 69
          }
        }],
        line: 135
      },
      "27": {
        loc: {
          start: {
            line: 140,
            column: 52
          },
          end: {
            line: 140,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 140,
            column: 77
          },
          end: {
            line: 140,
            column: 90
          }
        }, {
          start: {
            line: 140,
            column: 93
          },
          end: {
            line: 140,
            column: 108
          }
        }],
        line: 140
      },
      "28": {
        loc: {
          start: {
            line: 154,
            column: 14
          },
          end: {
            line: 154,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 14
          },
          end: {
            line: 154,
            column: 18
          }
        }, {
          start: {
            line: 154,
            column: 22
          },
          end: {
            line: 154,
            column: 36
          }
        }],
        line: 154
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0, 0, 0, 0, 0, 0],
      "1": [0, 0, 0, 0, 0, 0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\types\\api-strict.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - STRICT API TYPES\r\n// Tipos TypeScript estrictos para prevenir errores de API\r\n// ===================================\r\n\r\nimport { OrderEnterprise, OrderStatus, PaymentStatus, FulfillmentStatus } from './orders-enterprise';\r\n\r\n// ===================================\r\n// TIPOS BASE ESTRICTOS\r\n// ===================================\r\n\r\n/**\r\n * Tipo base para respuestas de API con validaci\xF3n estricta\r\n */\r\nexport interface StrictApiResponse<T> {\r\n  readonly success: true;\r\n  readonly data: T;\r\n  readonly message?: string;\r\n  readonly timestamp: string;\r\n}\r\n\r\nexport interface StrictApiError {\r\n  readonly success: false;\r\n  readonly error: string;\r\n  readonly code?: string;\r\n  readonly details?: Record<string, unknown>;\r\n  readonly timestamp: string;\r\n  readonly path: string;\r\n}\r\n\r\n/**\r\n * Union type para respuestas de API que garantiza type safety\r\n */\r\nexport type ApiResult<T> = StrictApiResponse<T> | StrictApiError;\r\n\r\n// ===================================\r\n// TIPOS DE PAGINACI\xD3N ESTRICTOS\r\n// ===================================\r\n\r\n/**\r\n * Paginaci\xF3n con validaci\xF3n estricta de tipos\r\n */\r\nexport interface StrictPagination {\r\n  readonly page: number & { __brand: 'PositiveInteger' };\r\n  readonly limit: number & { __brand: 'PositiveInteger' };\r\n  readonly total: number & { __brand: 'NonNegativeInteger' };\r\n  readonly totalPages: number & { __brand: 'NonNegativeInteger' };\r\n  readonly hasNextPage: boolean;\r\n  readonly hasPreviousPage: boolean;\r\n}\r\n\r\n/**\r\n * Respuesta paginada con tipos estrictos\r\n */\r\nexport interface StrictPaginatedResponse<T> {\r\n  readonly success: true;\r\n  readonly data: {\r\n    readonly items: readonly T[];\r\n    readonly pagination: StrictPagination;\r\n    readonly filters?: Record<string, unknown>;\r\n  };\r\n  readonly message?: string;\r\n  readonly timestamp: string;\r\n}\r\n\r\n// ===================================\r\n// TIPOS ESPEC\xCDFICOS PARA \xD3RDENES\r\n// ===================================\r\n\r\n/**\r\n * Orden con validaci\xF3n estricta de campos requeridos\r\n */\r\nexport interface StrictOrderEnterprise {\r\n  readonly id: string | number; // Flexible para string o number\r\n  readonly order_number?: string & { __brand: 'OrderNumber' }; // Opcional\r\n  readonly user_id?: string | number; // Opcional y flexible\r\n  readonly status: OrderStatus;\r\n  readonly payment_status?: PaymentStatus; // Opcional\r\n  readonly fulfillment_status?: FulfillmentStatus; // Opcional\r\n  readonly total: number & { __brand: 'PositiveAmount' };\r\n  readonly currency?: string & { __brand: 'CurrencyCode' }; // Opcional\r\n  readonly created_at: string & { __brand: 'ISODateString' };\r\n  readonly updated_at?: string & { __brand: 'ISODateString' }; // Opcional\r\n  \r\n  // Campos opcionales con tipos estrictos\r\n  readonly shipping_address?: StrictAddress;\r\n  readonly billing_address?: StrictAddress;\r\n  readonly notes?: string & { __brand: 'NonEmptyString' };\r\n  readonly admin_notes?: string & { __brand: 'NonEmptyString' };\r\n  readonly tracking_number?: string & { __brand: 'TrackingNumber' };\r\n  readonly carrier?: string & { __brand: 'CarrierName' };\r\n  readonly estimated_delivery?: string & { __brand: 'ISODateString' };\r\n  readonly metadata: Record<string, unknown>;\r\n  \r\n  // Relaciones con tipos estrictos\r\n  readonly user_profiles?: StrictUserProfile | null;\r\n  readonly order_items?: readonly StrictOrderItem[];\r\n  readonly status_history?: readonly StrictOrderStatusHistory[];\r\n  readonly order_notes?: readonly StrictOrderNote[];\r\n}\r\n\r\n/**\r\n * Perfil de usuario con validaci\xF3n estricta\r\n */\r\nexport interface StrictUserProfile {\r\n  readonly id: string & { __brand: 'UserId' };\r\n  readonly name: string & { __brand: 'NonEmptyString' };\r\n  readonly email: string & { __brand: 'EmailAddress' };\r\n  readonly phone?: string & { __brand: 'PhoneNumber' };\r\n  readonly avatar_url?: string & { __brand: 'URL' };\r\n}\r\n\r\n/**\r\n * Item de orden con validaci\xF3n estricta\r\n */\r\nexport interface StrictOrderItem {\r\n  readonly id: string & { __brand: 'OrderItemId' };\r\n  readonly order_id: string & { __brand: 'OrderId' };\r\n  readonly product_id: number & { __brand: 'ProductId' };\r\n  readonly quantity: number & { __brand: 'PositiveInteger' };\r\n  readonly unit_price: number & { __brand: 'PositiveAmount' };\r\n  readonly total_price: number & { __brand: 'PositiveAmount' };\r\n  readonly product_name: string & { __brand: 'NonEmptyString' };\r\n  readonly product_sku?: string & { __brand: 'SKU' };\r\n}\r\n\r\n/**\r\n * Direcci\xF3n con validaci\xF3n estricta\r\n */\r\nexport interface StrictAddress {\r\n  readonly street: string & { __brand: 'NonEmptyString' };\r\n  readonly city: string & { __brand: 'NonEmptyString' };\r\n  readonly state: string & { __brand: 'NonEmptyString' };\r\n  readonly postal_code: string & { __brand: 'PostalCode' };\r\n  readonly country: string & { __brand: 'CountryCode' };\r\n  readonly phone?: string & { __brand: 'PhoneNumber' };\r\n}\r\n\r\n/**\r\n * Historial de estado con validaci\xF3n estricta\r\n */\r\nexport interface StrictOrderStatusHistory {\r\n  readonly id: string & { __brand: 'StatusHistoryId' };\r\n  readonly order_id: string & { __brand: 'OrderId' };\r\n  readonly from_status: OrderStatus | null;\r\n  readonly to_status: OrderStatus;\r\n  readonly reason?: string & { __brand: 'NonEmptyString' };\r\n  readonly admin_id?: string & { __brand: 'AdminId' };\r\n  readonly created_at: string & { __brand: 'ISODateString' };\r\n}\r\n\r\n/**\r\n * Nota de orden con validaci\xF3n estricta\r\n */\r\nexport interface StrictOrderNote {\r\n  readonly id: string & { __brand: 'OrderNoteId' };\r\n  readonly order_id: string & { __brand: 'OrderId' };\r\n  readonly content: string & { __brand: 'NonEmptyString' };\r\n  readonly is_admin_note: boolean;\r\n  readonly admin_id?: string & { __brand: 'AdminId' };\r\n  readonly created_at: string & { __brand: 'ISODateString' };\r\n}\r\n\r\n// ===================================\r\n// RESPUESTAS ESPEC\xCDFICAS DE API\r\n// ===================================\r\n\r\n/**\r\n * Respuesta de lista de \xF3rdenes con tipos estrictos\r\n */\r\nexport interface StrictOrdersListResponse {\r\n  readonly success: true;\r\n  readonly data: {\r\n    readonly orders: readonly StrictOrderEnterprise[];\r\n    readonly pagination: StrictPagination;\r\n    readonly filters: {\r\n      readonly search?: string;\r\n      readonly status?: OrderStatus;\r\n      readonly payment_status?: PaymentStatus;\r\n      readonly fulfillment_status?: FulfillmentStatus;\r\n      readonly date_from?: string & { __brand: 'ISODateString' };\r\n      readonly date_to?: string & { __brand: 'ISODateString' };\r\n    };\r\n    readonly analytics?: {\r\n      readonly total_orders: number & { __brand: 'NonNegativeInteger' };\r\n      readonly total_revenue: number & { __brand: 'NonNegativeAmount' };\r\n      readonly pending_orders: number & { __brand: 'NonNegativeInteger' };\r\n      readonly completed_orders: number & { __brand: 'NonNegativeInteger' };\r\n      readonly today_revenue: number & { __brand: 'NonNegativeAmount' };\r\n    };\r\n  };\r\n  readonly message?: string;\r\n  readonly timestamp: string;\r\n}\r\n\r\n/**\r\n * Respuesta de orden individual con tipos estrictos\r\n */\r\nexport interface StrictOrderDetailResponse {\r\n  readonly success: true;\r\n  readonly data: {\r\n    readonly order: StrictOrderEnterprise;\r\n    readonly timeline?: readonly StrictOrderStatusHistory[];\r\n    readonly related_orders?: readonly Pick<StrictOrderEnterprise, 'id' | 'order_number' | 'status' | 'total'>[];\r\n  };\r\n  readonly message?: string;\r\n  readonly timestamp: string;\r\n}\r\n\r\n// ===================================\r\n// TIPOS GEN\xC9RICOS PARA VALIDACI\xD3N\r\n// ===================================\r\n\r\n/**\r\n * Tipo gen\xE9rico para objetos que pueden ser validados\r\n */\r\ntype ValidatableObject = Record<string, any> | null;\r\n\r\n/**\r\n * Tipo gen\xE9rico para respuestas de API no tipadas\r\n */\r\ntype UntypedApiResponse = Record<string, any> | null;\r\n\r\n// ===================================\r\n// VALIDADORES DE TIPOS\r\n// ===================================\r\n\r\n/**\r\n * Validador para verificar si un objeto es una respuesta de API v\xE1lida\r\n */\r\nexport function isStrictApiResponse<T>(obj: ValidatableObject): obj is StrictApiResponse<T> {\r\n  return (\r\n    typeof obj === 'object' &&\r\n    obj !== null &&\r\n    'success' in obj &&\r\n    obj.success === true &&\r\n    'data' in obj &&\r\n    'timestamp' in obj &&\r\n    typeof obj.timestamp === 'string'\r\n  );\r\n}\r\n\r\n/**\r\n * Validador para verificar si un objeto es un error de API v\xE1lido\r\n */\r\nexport function isStrictApiError(obj: ValidatableObject): obj is StrictApiError {\r\n  return (\r\n    typeof obj === 'object' &&\r\n    obj !== null &&\r\n    'success' in obj &&\r\n    obj.success === false &&\r\n    'error' in obj &&\r\n    typeof obj.error === 'string' &&\r\n    'timestamp' in obj &&\r\n    typeof obj.timestamp === 'string'\r\n  );\r\n}\r\n\r\n/**\r\n * Validador para verificar si una paginaci\xF3n es v\xE1lida\r\n */\r\nexport function isValidPagination(obj: ValidatableObject): obj is StrictPagination {\r\n  if (typeof obj !== 'object' || obj === null) {return false;}\r\n  \r\n  return (\r\n    typeof obj.page === 'number' &&\r\n    typeof obj.limit === 'number' &&\r\n    typeof obj.total === 'number' &&\r\n    typeof obj.totalPages === 'number' &&\r\n    typeof obj.hasNextPage === 'boolean' &&\r\n    typeof obj.hasPreviousPage === 'boolean' &&\r\n    obj.page > 0 &&\r\n    obj.limit > 0 &&\r\n    obj.total >= 0 &&\r\n    obj.totalPages >= 0\r\n  );\r\n}\r\n\r\n/**\r\n * Validador para verificar si una orden es v\xE1lida (versi\xF3n m\xE1s flexible)\r\n */\r\nexport function isValidStrictOrder(obj: ValidatableObject): obj is StrictOrderEnterprise {\r\n  if (typeof obj !== 'object' || obj === null) {\r\n    return false;\r\n  }\r\n  \r\n  // Validaciones m\xEDnimas - solo campos absolutamente esenciales\r\n  const hasId = obj.id && (typeof obj.id === 'string' || typeof obj.id === 'number');\r\n  const hasTotal = typeof obj.total === 'number' && obj.total >= 0;\r\n  const hasCreatedAt = obj.created_at && typeof obj.created_at === 'string';\r\n  const hasStatus = obj.status && typeof obj.status === 'string';\r\n  \r\n  // Solo requerir los campos absolutamente esenciales\r\n  return hasId && hasTotal && hasCreatedAt && hasStatus;\r\n}\r\n\r\n// ===================================\r\n// UTILIDADES DE TRANSFORMACI\xD3N\r\n// ===================================\r\n\r\n/**\r\n * Transforma una respuesta de API no tipada a una respuesta estricta\r\n */\r\nexport function toStrictOrdersResponse(obj: UntypedApiResponse): StrictOrdersListResponse | StrictApiError {\r\n  try {\r\n    if (!isStrictApiResponse(obj)) {\r\n      return {\r\n        success: false,\r\n        error: 'Invalid API response format',\r\n        code: 'INVALID_RESPONSE_FORMAT',\r\n        timestamp: new Date().toISOString(),\r\n        path: '/api/admin/orders'\r\n      };\r\n    }\r\n\r\n    const response = obj as any;\r\n    \r\n    // Validar estructura de datos\r\n    if (!response.data || typeof response.data !== 'object') {\r\n      return {\r\n        success: false,\r\n        error: 'Missing or invalid data field',\r\n        code: 'INVALID_DATA_FIELD',\r\n        timestamp: new Date().toISOString(),\r\n        path: '/api/admin/orders'\r\n      };\r\n    }\r\n\r\n    // Validar \xF3rdenes\r\n    const orders = response.data.orders || [];\r\n    if (!Array.isArray(orders)) {\r\n      return {\r\n        success: false,\r\n        error: 'Orders field must be an array',\r\n        code: 'INVALID_ORDERS_FIELD',\r\n        timestamp: new Date().toISOString(),\r\n        path: '/api/admin/orders'\r\n      };\r\n    }\r\n\r\n    // Validar paginaci\xF3n\r\n    const pagination = response.data.pagination;\r\n    if (pagination && !isValidPagination(pagination)) {\r\n      return {\r\n        success: false,\r\n        error: 'Invalid pagination format',\r\n        code: 'INVALID_PAGINATION',\r\n        timestamp: new Date().toISOString(),\r\n        path: '/api/admin/orders'\r\n      };\r\n    }\r\n\r\n    // Transformar \xF3rdenes para asegurar compatibilidad\r\n    \r\n    // Transformar \xF3rdenes para normalizar tipos\r\n    const transformedOrders = orders.map((order: any) => ({\r\n      ...order,\r\n      id: String(order.id), // Convertir ID a string para compatibilidad frontend\r\n      user_id: order.user_id ? String(order.user_id) : order.user_id,\r\n      total: Number(order.total) || 0,\r\n      created_at: order.created_at || new Date().toISOString(),\r\n      status: order.status || 'pending',\r\n      metadata: order.metadata || {}\r\n    }));\r\n    \r\n    const validOrders = transformedOrders.filter(isValidStrictOrder);\r\n    \r\n    // Crear respuesta estricta con valores por defecto seguros\r\n    return {\r\n      success: true,\r\n      data: {\r\n        orders: validOrders,\r\n        pagination: pagination || {\r\n          page: 1 as any,\r\n          limit: 20 as any,\r\n          total: orders.length as any,\r\n          totalPages: Math.ceil(orders.length / 20) as any,\r\n          hasNextPage: false,\r\n          hasPreviousPage: false\r\n        },\r\n        filters: response.data.filters || {},\r\n        analytics: response.data.analytics\r\n      },\r\n      message: response.message,\r\n      timestamp: response.timestamp || new Date().toISOString()\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      error: `Failed to parse API response: ${error instanceof Error ? error.message : 'Unknown error'}`,\r\n      code: 'PARSE_ERROR',\r\n      timestamp: new Date().toISOString(),\r\n      path: '/api/admin/orders'\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Crea una respuesta de error estricta\r\n */\r\nexport function createStrictApiError(\r\n  error: string,\r\n  code?: string,\r\n  details?: Record<string, unknown>,\r\n  path?: string\r\n): StrictApiError {\r\n  return {\r\n    success: false,\r\n    error,\r\n    code,\r\n    details,\r\n    timestamp: new Date().toISOString(),\r\n    path: path || '/api/unknown'\r\n  };\r\n}\r\n\r\n/**\r\n * Crea una respuesta exitosa estricta\r\n */\r\nexport function createStrictApiResponse<T>(\r\n  data: T,\r\n  message?: string\r\n): StrictApiResponse<T> {\r\n  return {\r\n    success: true,\r\n    data,\r\n    message,\r\n    timestamp: new Date().toISOString()\r\n  };\r\n}\r\n\r\n// ===================================\r\n// TIPOS DE UTILIDAD\r\n// ===================================\r\n\r\n/**\r\n * Extrae el tipo de datos de una respuesta de API\r\n */\r\nexport type ExtractApiData<T> = T extends StrictApiResponse<infer U> ? U : never;\r\n\r\n/**\r\n * Hace que todos los campos de un tipo sean de solo lectura recursivamente\r\n */\r\nexport type DeepReadonly<T> = {\r\n  readonly [P in keyof T]: T[P] extends object ? DeepReadonly<T[P]> : T[P];\r\n};\r\n\r\n/**\r\n * Tipo para funciones que manejan respuestas de API\r\n */\r\nexport type ApiHandler<T, R = void> = (response: ApiResult<T>) => R | Promise<R>;\r\n\r\n/**\r\n * Tipo para opciones de configuraci\xF3n de API\r\n */\r\nexport interface StrictApiOptions {\r\n  readonly timeout?: number;\r\n  readonly retries?: number;\r\n  readonly validateResponse?: boolean;\r\n  readonly throwOnError?: boolean;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["createStrictApiError", "createStrictApiResponse", "isStrictApiError", "isStrictApiResponse", "isValidPagination", "isValidStrictOrder", "toStrictOrdersResponse", "obj", "success", "timestamp", "error", "page", "limit", "total", "totalPages", "hasNextPage", "hasPreviousPage", "hasId", "id", "hasTotal", "hasCreatedAt", "created_at", "hasStatus", "status", "code", "Date", "toISOString", "path", "response", "data", "orders", "Array", "isArray", "pagination", "transformedOrders", "map", "order", "String", "user_id", "Number", "metadata", "validOrders", "filter", "length", "Math", "ceil", "filters", "analytics", "message", "Error", "details"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "537b985814fb571993e8315dbb30af9bc852186e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1fou906fvb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1fou906fvb();
cov_1fou906fvb().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1fou906fvb().f[0]++;
  cov_1fou906fvb().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1fou906fvb().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1fou906fvb().s[3]++;
_export(exports, {
  get createStrictApiError() {
    /* istanbul ignore next */
    cov_1fou906fvb().f[1]++;
    cov_1fou906fvb().s[4]++;
    return createStrictApiError;
  },
  get createStrictApiResponse() {
    /* istanbul ignore next */
    cov_1fou906fvb().f[2]++;
    cov_1fou906fvb().s[5]++;
    return createStrictApiResponse;
  },
  get isStrictApiError() {
    /* istanbul ignore next */
    cov_1fou906fvb().f[3]++;
    cov_1fou906fvb().s[6]++;
    return isStrictApiError;
  },
  get isStrictApiResponse() {
    /* istanbul ignore next */
    cov_1fou906fvb().f[4]++;
    cov_1fou906fvb().s[7]++;
    return isStrictApiResponse;
  },
  get isValidPagination() {
    /* istanbul ignore next */
    cov_1fou906fvb().f[5]++;
    cov_1fou906fvb().s[8]++;
    return isValidPagination;
  },
  get isValidStrictOrder() {
    /* istanbul ignore next */
    cov_1fou906fvb().f[6]++;
    cov_1fou906fvb().s[9]++;
    return isValidStrictOrder;
  },
  get toStrictOrdersResponse() {
    /* istanbul ignore next */
    cov_1fou906fvb().f[7]++;
    cov_1fou906fvb().s[10]++;
    return toStrictOrdersResponse;
  }
});
function isStrictApiResponse(obj) {
  /* istanbul ignore next */
  cov_1fou906fvb().f[8]++;
  cov_1fou906fvb().s[11]++;
  return /* istanbul ignore next */(cov_1fou906fvb().b[0][0]++, typeof obj === 'object') &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[0][1]++, obj !== null) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[0][2]++, 'success' in obj) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[0][3]++, obj.success === true) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[0][4]++, 'data' in obj) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[0][5]++, 'timestamp' in obj) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[0][6]++, typeof obj.timestamp === 'string');
}
function isStrictApiError(obj) {
  /* istanbul ignore next */
  cov_1fou906fvb().f[9]++;
  cov_1fou906fvb().s[12]++;
  return /* istanbul ignore next */(cov_1fou906fvb().b[1][0]++, typeof obj === 'object') &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[1][1]++, obj !== null) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[1][2]++, 'success' in obj) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[1][3]++, obj.success === false) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[1][4]++, 'error' in obj) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[1][5]++, typeof obj.error === 'string') &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[1][6]++, 'timestamp' in obj) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[1][7]++, typeof obj.timestamp === 'string');
}
function isValidPagination(obj) {
  /* istanbul ignore next */
  cov_1fou906fvb().f[10]++;
  cov_1fou906fvb().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_1fou906fvb().b[3][0]++, typeof obj !== 'object') ||
  /* istanbul ignore next */
  (cov_1fou906fvb().b[3][1]++, obj === null)) {
    /* istanbul ignore next */
    cov_1fou906fvb().b[2][0]++;
    cov_1fou906fvb().s[14]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_1fou906fvb().b[2][1]++;
  }
  cov_1fou906fvb().s[15]++;
  return /* istanbul ignore next */(cov_1fou906fvb().b[4][0]++, typeof obj.page === 'number') &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[4][1]++, typeof obj.limit === 'number') &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[4][2]++, typeof obj.total === 'number') &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[4][3]++, typeof obj.totalPages === 'number') &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[4][4]++, typeof obj.hasNextPage === 'boolean') &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[4][5]++, typeof obj.hasPreviousPage === 'boolean') &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[4][6]++, obj.page > 0) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[4][7]++, obj.limit > 0) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[4][8]++, obj.total >= 0) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[4][9]++, obj.totalPages >= 0);
}
function isValidStrictOrder(obj) {
  /* istanbul ignore next */
  cov_1fou906fvb().f[11]++;
  cov_1fou906fvb().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_1fou906fvb().b[6][0]++, typeof obj !== 'object') ||
  /* istanbul ignore next */
  (cov_1fou906fvb().b[6][1]++, obj === null)) {
    /* istanbul ignore next */
    cov_1fou906fvb().b[5][0]++;
    cov_1fou906fvb().s[17]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_1fou906fvb().b[5][1]++;
  }
  // Validaciones mínimas - solo campos absolutamente esenciales
  const hasId =
  /* istanbul ignore next */
  (cov_1fou906fvb().s[18]++,
  /* istanbul ignore next */
  (cov_1fou906fvb().b[7][0]++, obj.id) && (
  /* istanbul ignore next */
  (cov_1fou906fvb().b[7][1]++, typeof obj.id === 'string') ||
  /* istanbul ignore next */
  (cov_1fou906fvb().b[7][2]++, typeof obj.id === 'number')));
  const hasTotal =
  /* istanbul ignore next */
  (cov_1fou906fvb().s[19]++,
  /* istanbul ignore next */
  (cov_1fou906fvb().b[8][0]++, typeof obj.total === 'number') &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[8][1]++, obj.total >= 0));
  const hasCreatedAt =
  /* istanbul ignore next */
  (cov_1fou906fvb().s[20]++,
  /* istanbul ignore next */
  (cov_1fou906fvb().b[9][0]++, obj.created_at) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[9][1]++, typeof obj.created_at === 'string'));
  const hasStatus =
  /* istanbul ignore next */
  (cov_1fou906fvb().s[21]++,
  /* istanbul ignore next */
  (cov_1fou906fvb().b[10][0]++, obj.status) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[10][1]++, typeof obj.status === 'string'));
  // Solo requerir los campos absolutamente esenciales
  /* istanbul ignore next */
  cov_1fou906fvb().s[22]++;
  return /* istanbul ignore next */(cov_1fou906fvb().b[11][0]++, hasId) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[11][1]++, hasTotal) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[11][2]++, hasCreatedAt) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[11][3]++, hasStatus);
}
function toStrictOrdersResponse(obj) {
  /* istanbul ignore next */
  cov_1fou906fvb().f[12]++;
  cov_1fou906fvb().s[23]++;
  try {
    /* istanbul ignore next */
    cov_1fou906fvb().s[24]++;
    if (!isStrictApiResponse(obj)) {
      /* istanbul ignore next */
      cov_1fou906fvb().b[12][0]++;
      cov_1fou906fvb().s[25]++;
      return {
        success: false,
        error: 'Invalid API response format',
        code: 'INVALID_RESPONSE_FORMAT',
        timestamp: new Date().toISOString(),
        path: '/api/admin/orders'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1fou906fvb().b[12][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_1fou906fvb().s[26]++, obj);
    // Validar estructura de datos
    /* istanbul ignore next */
    cov_1fou906fvb().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_1fou906fvb().b[14][0]++, !response.data) ||
    /* istanbul ignore next */
    (cov_1fou906fvb().b[14][1]++, typeof response.data !== 'object')) {
      /* istanbul ignore next */
      cov_1fou906fvb().b[13][0]++;
      cov_1fou906fvb().s[28]++;
      return {
        success: false,
        error: 'Missing or invalid data field',
        code: 'INVALID_DATA_FIELD',
        timestamp: new Date().toISOString(),
        path: '/api/admin/orders'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1fou906fvb().b[13][1]++;
    }
    // Validar órdenes
    const orders =
    /* istanbul ignore next */
    (cov_1fou906fvb().s[29]++,
    /* istanbul ignore next */
    (cov_1fou906fvb().b[15][0]++, response.data.orders) ||
    /* istanbul ignore next */
    (cov_1fou906fvb().b[15][1]++, []));
    /* istanbul ignore next */
    cov_1fou906fvb().s[30]++;
    if (!Array.isArray(orders)) {
      /* istanbul ignore next */
      cov_1fou906fvb().b[16][0]++;
      cov_1fou906fvb().s[31]++;
      return {
        success: false,
        error: 'Orders field must be an array',
        code: 'INVALID_ORDERS_FIELD',
        timestamp: new Date().toISOString(),
        path: '/api/admin/orders'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1fou906fvb().b[16][1]++;
    }
    // Validar paginación
    const pagination =
    /* istanbul ignore next */
    (cov_1fou906fvb().s[32]++, response.data.pagination);
    /* istanbul ignore next */
    cov_1fou906fvb().s[33]++;
    if (
    /* istanbul ignore next */
    (cov_1fou906fvb().b[18][0]++, pagination) &&
    /* istanbul ignore next */
    (cov_1fou906fvb().b[18][1]++, !isValidPagination(pagination))) {
      /* istanbul ignore next */
      cov_1fou906fvb().b[17][0]++;
      cov_1fou906fvb().s[34]++;
      return {
        success: false,
        error: 'Invalid pagination format',
        code: 'INVALID_PAGINATION',
        timestamp: new Date().toISOString(),
        path: '/api/admin/orders'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1fou906fvb().b[17][1]++;
    }
    // Transformar órdenes para asegurar compatibilidad
    // Transformar órdenes para normalizar tipos
    const transformedOrders =
    /* istanbul ignore next */
    (cov_1fou906fvb().s[35]++, orders.map(order => {
      /* istanbul ignore next */
      cov_1fou906fvb().f[13]++;
      cov_1fou906fvb().s[36]++;
      return {
        ...order,
        id: String(order.id),
        user_id: order.user_id ?
        /* istanbul ignore next */
        (cov_1fou906fvb().b[19][0]++, String(order.user_id)) :
        /* istanbul ignore next */
        (cov_1fou906fvb().b[19][1]++, order.user_id),
        total:
        /* istanbul ignore next */
        (cov_1fou906fvb().b[20][0]++, Number(order.total)) ||
        /* istanbul ignore next */
        (cov_1fou906fvb().b[20][1]++, 0),
        created_at:
        /* istanbul ignore next */
        (cov_1fou906fvb().b[21][0]++, order.created_at) ||
        /* istanbul ignore next */
        (cov_1fou906fvb().b[21][1]++, new Date().toISOString()),
        status:
        /* istanbul ignore next */
        (cov_1fou906fvb().b[22][0]++, order.status) ||
        /* istanbul ignore next */
        (cov_1fou906fvb().b[22][1]++, 'pending'),
        metadata:
        /* istanbul ignore next */
        (cov_1fou906fvb().b[23][0]++, order.metadata) ||
        /* istanbul ignore next */
        (cov_1fou906fvb().b[23][1]++, {})
      };
    }));
    const validOrders =
    /* istanbul ignore next */
    (cov_1fou906fvb().s[37]++, transformedOrders.filter(isValidStrictOrder));
    // Crear respuesta estricta con valores por defecto seguros
    /* istanbul ignore next */
    cov_1fou906fvb().s[38]++;
    return {
      success: true,
      data: {
        orders: validOrders,
        pagination:
        /* istanbul ignore next */
        (cov_1fou906fvb().b[24][0]++, pagination) ||
        /* istanbul ignore next */
        (cov_1fou906fvb().b[24][1]++, {
          page: 1,
          limit: 20,
          total: orders.length,
          totalPages: Math.ceil(orders.length / 20),
          hasNextPage: false,
          hasPreviousPage: false
        }),
        filters:
        /* istanbul ignore next */
        (cov_1fou906fvb().b[25][0]++, response.data.filters) ||
        /* istanbul ignore next */
        (cov_1fou906fvb().b[25][1]++, {}),
        analytics: response.data.analytics
      },
      message: response.message,
      timestamp:
      /* istanbul ignore next */
      (cov_1fou906fvb().b[26][0]++, response.timestamp) ||
      /* istanbul ignore next */
      (cov_1fou906fvb().b[26][1]++, new Date().toISOString())
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1fou906fvb().s[39]++;
    return {
      success: false,
      error: `Failed to parse API response: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_1fou906fvb().b[27][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1fou906fvb().b[27][1]++, 'Unknown error')}`,
      code: 'PARSE_ERROR',
      timestamp: new Date().toISOString(),
      path: '/api/admin/orders'
    };
  }
}
function createStrictApiError(error, code, details, path) {
  /* istanbul ignore next */
  cov_1fou906fvb().f[14]++;
  cov_1fou906fvb().s[40]++;
  return {
    success: false,
    error,
    code,
    details,
    timestamp: new Date().toISOString(),
    path:
    /* istanbul ignore next */
    (cov_1fou906fvb().b[28][0]++, path) ||
    /* istanbul ignore next */
    (cov_1fou906fvb().b[28][1]++, '/api/unknown')
  };
}
function createStrictApiResponse(data, message) {
  /* istanbul ignore next */
  cov_1fou906fvb().f[15]++;
  cov_1fou906fvb().s[41]++;
  return {
    success: true,
    data,
    message,
    timestamp: new Date().toISOString()
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWZvdTkwNmZ2YiIsImFjdHVhbENvdmVyYWdlIiwicyIsImNyZWF0ZVN0cmljdEFwaUVycm9yIiwiZiIsImNyZWF0ZVN0cmljdEFwaVJlc3BvbnNlIiwiaXNTdHJpY3RBcGlFcnJvciIsImlzU3RyaWN0QXBpUmVzcG9uc2UiLCJpc1ZhbGlkUGFnaW5hdGlvbiIsImlzVmFsaWRTdHJpY3RPcmRlciIsInRvU3RyaWN0T3JkZXJzUmVzcG9uc2UiLCJvYmoiLCJiIiwic3VjY2VzcyIsInRpbWVzdGFtcCIsImVycm9yIiwicGFnZSIsImxpbWl0IiwidG90YWwiLCJ0b3RhbFBhZ2VzIiwiaGFzTmV4dFBhZ2UiLCJoYXNQcmV2aW91c1BhZ2UiLCJoYXNJZCIsImlkIiwiaGFzVG90YWwiLCJoYXNDcmVhdGVkQXQiLCJjcmVhdGVkX2F0IiwiaGFzU3RhdHVzIiwic3RhdHVzIiwiY29kZSIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsInBhdGgiLCJyZXNwb25zZSIsImRhdGEiLCJvcmRlcnMiLCJBcnJheSIsImlzQXJyYXkiLCJwYWdpbmF0aW9uIiwidHJhbnNmb3JtZWRPcmRlcnMiLCJtYXAiLCJvcmRlciIsIlN0cmluZyIsInVzZXJfaWQiLCJOdW1iZXIiLCJtZXRhZGF0YSIsInZhbGlkT3JkZXJzIiwiZmlsdGVyIiwibGVuZ3RoIiwiTWF0aCIsImNlaWwiLCJmaWx0ZXJzIiwiYW5hbHl0aWNzIiwibWVzc2FnZSIsIkVycm9yIiwiZGV0YWlscyJdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXHNyY1xcdHlwZXNcXGFwaS1zdHJpY3QudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gUElOVEVZQSBFLUNPTU1FUkNFIC0gU1RSSUNUIEFQSSBUWVBFU1xyXG4vLyBUaXBvcyBUeXBlU2NyaXB0IGVzdHJpY3RvcyBwYXJhIHByZXZlbmlyIGVycm9yZXMgZGUgQVBJXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG5pbXBvcnQgeyBPcmRlckVudGVycHJpc2UsIE9yZGVyU3RhdHVzLCBQYXltZW50U3RhdHVzLCBGdWxmaWxsbWVudFN0YXR1cyB9IGZyb20gJy4vb3JkZXJzLWVudGVycHJpc2UnO1xyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gVElQT1MgQkFTRSBFU1RSSUNUT1NcclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbi8qKlxyXG4gKiBUaXBvIGJhc2UgcGFyYSByZXNwdWVzdGFzIGRlIEFQSSBjb24gdmFsaWRhY2nDs24gZXN0cmljdGFcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RyaWN0QXBpUmVzcG9uc2U8VD4ge1xyXG4gIHJlYWRvbmx5IHN1Y2Nlc3M6IHRydWU7XHJcbiAgcmVhZG9ubHkgZGF0YTogVDtcclxuICByZWFkb25seSBtZXNzYWdlPzogc3RyaW5nO1xyXG4gIHJlYWRvbmx5IHRpbWVzdGFtcDogc3RyaW5nO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFN0cmljdEFwaUVycm9yIHtcclxuICByZWFkb25seSBzdWNjZXNzOiBmYWxzZTtcclxuICByZWFkb25seSBlcnJvcjogc3RyaW5nO1xyXG4gIHJlYWRvbmx5IGNvZGU/OiBzdHJpbmc7XHJcbiAgcmVhZG9ubHkgZGV0YWlscz86IFJlY29yZDxzdHJpbmcsIHVua25vd24+O1xyXG4gIHJlYWRvbmx5IHRpbWVzdGFtcDogc3RyaW5nO1xyXG4gIHJlYWRvbmx5IHBhdGg6IHN0cmluZztcclxufVxyXG5cclxuLyoqXHJcbiAqIFVuaW9uIHR5cGUgcGFyYSByZXNwdWVzdGFzIGRlIEFQSSBxdWUgZ2FyYW50aXphIHR5cGUgc2FmZXR5XHJcbiAqL1xyXG5leHBvcnQgdHlwZSBBcGlSZXN1bHQ8VD4gPSBTdHJpY3RBcGlSZXNwb25zZTxUPiB8IFN0cmljdEFwaUVycm9yO1xyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gVElQT1MgREUgUEFHSU5BQ0nDk04gRVNUUklDVE9TXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG4vKipcclxuICogUGFnaW5hY2nDs24gY29uIHZhbGlkYWNpw7NuIGVzdHJpY3RhIGRlIHRpcG9zXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFN0cmljdFBhZ2luYXRpb24ge1xyXG4gIHJlYWRvbmx5IHBhZ2U6IG51bWJlciAmIHsgX19icmFuZDogJ1Bvc2l0aXZlSW50ZWdlcicgfTtcclxuICByZWFkb25seSBsaW1pdDogbnVtYmVyICYgeyBfX2JyYW5kOiAnUG9zaXRpdmVJbnRlZ2VyJyB9O1xyXG4gIHJlYWRvbmx5IHRvdGFsOiBudW1iZXIgJiB7IF9fYnJhbmQ6ICdOb25OZWdhdGl2ZUludGVnZXInIH07XHJcbiAgcmVhZG9ubHkgdG90YWxQYWdlczogbnVtYmVyICYgeyBfX2JyYW5kOiAnTm9uTmVnYXRpdmVJbnRlZ2VyJyB9O1xyXG4gIHJlYWRvbmx5IGhhc05leHRQYWdlOiBib29sZWFuO1xyXG4gIHJlYWRvbmx5IGhhc1ByZXZpb3VzUGFnZTogYm9vbGVhbjtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlc3B1ZXN0YSBwYWdpbmFkYSBjb24gdGlwb3MgZXN0cmljdG9zXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFN0cmljdFBhZ2luYXRlZFJlc3BvbnNlPFQ+IHtcclxuICByZWFkb25seSBzdWNjZXNzOiB0cnVlO1xyXG4gIHJlYWRvbmx5IGRhdGE6IHtcclxuICAgIHJlYWRvbmx5IGl0ZW1zOiByZWFkb25seSBUW107XHJcbiAgICByZWFkb25seSBwYWdpbmF0aW9uOiBTdHJpY3RQYWdpbmF0aW9uO1xyXG4gICAgcmVhZG9ubHkgZmlsdGVycz86IFJlY29yZDxzdHJpbmcsIHVua25vd24+O1xyXG4gIH07XHJcbiAgcmVhZG9ubHkgbWVzc2FnZT86IHN0cmluZztcclxuICByZWFkb25seSB0aW1lc3RhbXA6IHN0cmluZztcclxufVxyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gVElQT1MgRVNQRUPDjUZJQ09TIFBBUkEgw5NSREVORVNcclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbi8qKlxyXG4gKiBPcmRlbiBjb24gdmFsaWRhY2nDs24gZXN0cmljdGEgZGUgY2FtcG9zIHJlcXVlcmlkb3NcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RyaWN0T3JkZXJFbnRlcnByaXNlIHtcclxuICByZWFkb25seSBpZDogc3RyaW5nIHwgbnVtYmVyOyAvLyBGbGV4aWJsZSBwYXJhIHN0cmluZyBvIG51bWJlclxyXG4gIHJlYWRvbmx5IG9yZGVyX251bWJlcj86IHN0cmluZyAmIHsgX19icmFuZDogJ09yZGVyTnVtYmVyJyB9OyAvLyBPcGNpb25hbFxyXG4gIHJlYWRvbmx5IHVzZXJfaWQ/OiBzdHJpbmcgfCBudW1iZXI7IC8vIE9wY2lvbmFsIHkgZmxleGlibGVcclxuICByZWFkb25seSBzdGF0dXM6IE9yZGVyU3RhdHVzO1xyXG4gIHJlYWRvbmx5IHBheW1lbnRfc3RhdHVzPzogUGF5bWVudFN0YXR1czsgLy8gT3BjaW9uYWxcclxuICByZWFkb25seSBmdWxmaWxsbWVudF9zdGF0dXM/OiBGdWxmaWxsbWVudFN0YXR1czsgLy8gT3BjaW9uYWxcclxuICByZWFkb25seSB0b3RhbDogbnVtYmVyICYgeyBfX2JyYW5kOiAnUG9zaXRpdmVBbW91bnQnIH07XHJcbiAgcmVhZG9ubHkgY3VycmVuY3k/OiBzdHJpbmcgJiB7IF9fYnJhbmQ6ICdDdXJyZW5jeUNvZGUnIH07IC8vIE9wY2lvbmFsXHJcbiAgcmVhZG9ubHkgY3JlYXRlZF9hdDogc3RyaW5nICYgeyBfX2JyYW5kOiAnSVNPRGF0ZVN0cmluZycgfTtcclxuICByZWFkb25seSB1cGRhdGVkX2F0Pzogc3RyaW5nICYgeyBfX2JyYW5kOiAnSVNPRGF0ZVN0cmluZycgfTsgLy8gT3BjaW9uYWxcclxuICBcclxuICAvLyBDYW1wb3Mgb3BjaW9uYWxlcyBjb24gdGlwb3MgZXN0cmljdG9zXHJcbiAgcmVhZG9ubHkgc2hpcHBpbmdfYWRkcmVzcz86IFN0cmljdEFkZHJlc3M7XHJcbiAgcmVhZG9ubHkgYmlsbGluZ19hZGRyZXNzPzogU3RyaWN0QWRkcmVzcztcclxuICByZWFkb25seSBub3Rlcz86IHN0cmluZyAmIHsgX19icmFuZDogJ05vbkVtcHR5U3RyaW5nJyB9O1xyXG4gIHJlYWRvbmx5IGFkbWluX25vdGVzPzogc3RyaW5nICYgeyBfX2JyYW5kOiAnTm9uRW1wdHlTdHJpbmcnIH07XHJcbiAgcmVhZG9ubHkgdHJhY2tpbmdfbnVtYmVyPzogc3RyaW5nICYgeyBfX2JyYW5kOiAnVHJhY2tpbmdOdW1iZXInIH07XHJcbiAgcmVhZG9ubHkgY2Fycmllcj86IHN0cmluZyAmIHsgX19icmFuZDogJ0NhcnJpZXJOYW1lJyB9O1xyXG4gIHJlYWRvbmx5IGVzdGltYXRlZF9kZWxpdmVyeT86IHN0cmluZyAmIHsgX19icmFuZDogJ0lTT0RhdGVTdHJpbmcnIH07XHJcbiAgcmVhZG9ubHkgbWV0YWRhdGE6IFJlY29yZDxzdHJpbmcsIHVua25vd24+O1xyXG4gIFxyXG4gIC8vIFJlbGFjaW9uZXMgY29uIHRpcG9zIGVzdHJpY3Rvc1xyXG4gIHJlYWRvbmx5IHVzZXJfcHJvZmlsZXM/OiBTdHJpY3RVc2VyUHJvZmlsZSB8IG51bGw7XHJcbiAgcmVhZG9ubHkgb3JkZXJfaXRlbXM/OiByZWFkb25seSBTdHJpY3RPcmRlckl0ZW1bXTtcclxuICByZWFkb25seSBzdGF0dXNfaGlzdG9yeT86IHJlYWRvbmx5IFN0cmljdE9yZGVyU3RhdHVzSGlzdG9yeVtdO1xyXG4gIHJlYWRvbmx5IG9yZGVyX25vdGVzPzogcmVhZG9ubHkgU3RyaWN0T3JkZXJOb3RlW107XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBQZXJmaWwgZGUgdXN1YXJpbyBjb24gdmFsaWRhY2nDs24gZXN0cmljdGFcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RyaWN0VXNlclByb2ZpbGUge1xyXG4gIHJlYWRvbmx5IGlkOiBzdHJpbmcgJiB7IF9fYnJhbmQ6ICdVc2VySWQnIH07XHJcbiAgcmVhZG9ubHkgbmFtZTogc3RyaW5nICYgeyBfX2JyYW5kOiAnTm9uRW1wdHlTdHJpbmcnIH07XHJcbiAgcmVhZG9ubHkgZW1haWw6IHN0cmluZyAmIHsgX19icmFuZDogJ0VtYWlsQWRkcmVzcycgfTtcclxuICByZWFkb25seSBwaG9uZT86IHN0cmluZyAmIHsgX19icmFuZDogJ1Bob25lTnVtYmVyJyB9O1xyXG4gIHJlYWRvbmx5IGF2YXRhcl91cmw/OiBzdHJpbmcgJiB7IF9fYnJhbmQ6ICdVUkwnIH07XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBJdGVtIGRlIG9yZGVuIGNvbiB2YWxpZGFjacOzbiBlc3RyaWN0YVxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBTdHJpY3RPcmRlckl0ZW0ge1xyXG4gIHJlYWRvbmx5IGlkOiBzdHJpbmcgJiB7IF9fYnJhbmQ6ICdPcmRlckl0ZW1JZCcgfTtcclxuICByZWFkb25seSBvcmRlcl9pZDogc3RyaW5nICYgeyBfX2JyYW5kOiAnT3JkZXJJZCcgfTtcclxuICByZWFkb25seSBwcm9kdWN0X2lkOiBudW1iZXIgJiB7IF9fYnJhbmQ6ICdQcm9kdWN0SWQnIH07XHJcbiAgcmVhZG9ubHkgcXVhbnRpdHk6IG51bWJlciAmIHsgX19icmFuZDogJ1Bvc2l0aXZlSW50ZWdlcicgfTtcclxuICByZWFkb25seSB1bml0X3ByaWNlOiBudW1iZXIgJiB7IF9fYnJhbmQ6ICdQb3NpdGl2ZUFtb3VudCcgfTtcclxuICByZWFkb25seSB0b3RhbF9wcmljZTogbnVtYmVyICYgeyBfX2JyYW5kOiAnUG9zaXRpdmVBbW91bnQnIH07XHJcbiAgcmVhZG9ubHkgcHJvZHVjdF9uYW1lOiBzdHJpbmcgJiB7IF9fYnJhbmQ6ICdOb25FbXB0eVN0cmluZycgfTtcclxuICByZWFkb25seSBwcm9kdWN0X3NrdT86IHN0cmluZyAmIHsgX19icmFuZDogJ1NLVScgfTtcclxufVxyXG5cclxuLyoqXHJcbiAqIERpcmVjY2nDs24gY29uIHZhbGlkYWNpw7NuIGVzdHJpY3RhXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFN0cmljdEFkZHJlc3Mge1xyXG4gIHJlYWRvbmx5IHN0cmVldDogc3RyaW5nICYgeyBfX2JyYW5kOiAnTm9uRW1wdHlTdHJpbmcnIH07XHJcbiAgcmVhZG9ubHkgY2l0eTogc3RyaW5nICYgeyBfX2JyYW5kOiAnTm9uRW1wdHlTdHJpbmcnIH07XHJcbiAgcmVhZG9ubHkgc3RhdGU6IHN0cmluZyAmIHsgX19icmFuZDogJ05vbkVtcHR5U3RyaW5nJyB9O1xyXG4gIHJlYWRvbmx5IHBvc3RhbF9jb2RlOiBzdHJpbmcgJiB7IF9fYnJhbmQ6ICdQb3N0YWxDb2RlJyB9O1xyXG4gIHJlYWRvbmx5IGNvdW50cnk6IHN0cmluZyAmIHsgX19icmFuZDogJ0NvdW50cnlDb2RlJyB9O1xyXG4gIHJlYWRvbmx5IHBob25lPzogc3RyaW5nICYgeyBfX2JyYW5kOiAnUGhvbmVOdW1iZXInIH07XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBIaXN0b3JpYWwgZGUgZXN0YWRvIGNvbiB2YWxpZGFjacOzbiBlc3RyaWN0YVxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBTdHJpY3RPcmRlclN0YXR1c0hpc3Rvcnkge1xyXG4gIHJlYWRvbmx5IGlkOiBzdHJpbmcgJiB7IF9fYnJhbmQ6ICdTdGF0dXNIaXN0b3J5SWQnIH07XHJcbiAgcmVhZG9ubHkgb3JkZXJfaWQ6IHN0cmluZyAmIHsgX19icmFuZDogJ09yZGVySWQnIH07XHJcbiAgcmVhZG9ubHkgZnJvbV9zdGF0dXM6IE9yZGVyU3RhdHVzIHwgbnVsbDtcclxuICByZWFkb25seSB0b19zdGF0dXM6IE9yZGVyU3RhdHVzO1xyXG4gIHJlYWRvbmx5IHJlYXNvbj86IHN0cmluZyAmIHsgX19icmFuZDogJ05vbkVtcHR5U3RyaW5nJyB9O1xyXG4gIHJlYWRvbmx5IGFkbWluX2lkPzogc3RyaW5nICYgeyBfX2JyYW5kOiAnQWRtaW5JZCcgfTtcclxuICByZWFkb25seSBjcmVhdGVkX2F0OiBzdHJpbmcgJiB7IF9fYnJhbmQ6ICdJU09EYXRlU3RyaW5nJyB9O1xyXG59XHJcblxyXG4vKipcclxuICogTm90YSBkZSBvcmRlbiBjb24gdmFsaWRhY2nDs24gZXN0cmljdGFcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RyaWN0T3JkZXJOb3RlIHtcclxuICByZWFkb25seSBpZDogc3RyaW5nICYgeyBfX2JyYW5kOiAnT3JkZXJOb3RlSWQnIH07XHJcbiAgcmVhZG9ubHkgb3JkZXJfaWQ6IHN0cmluZyAmIHsgX19icmFuZDogJ09yZGVySWQnIH07XHJcbiAgcmVhZG9ubHkgY29udGVudDogc3RyaW5nICYgeyBfX2JyYW5kOiAnTm9uRW1wdHlTdHJpbmcnIH07XHJcbiAgcmVhZG9ubHkgaXNfYWRtaW5fbm90ZTogYm9vbGVhbjtcclxuICByZWFkb25seSBhZG1pbl9pZD86IHN0cmluZyAmIHsgX19icmFuZDogJ0FkbWluSWQnIH07XHJcbiAgcmVhZG9ubHkgY3JlYXRlZF9hdDogc3RyaW5nICYgeyBfX2JyYW5kOiAnSVNPRGF0ZVN0cmluZycgfTtcclxufVxyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gUkVTUFVFU1RBUyBFU1BFQ8ONRklDQVMgREUgQVBJXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG4vKipcclxuICogUmVzcHVlc3RhIGRlIGxpc3RhIGRlIMOzcmRlbmVzIGNvbiB0aXBvcyBlc3RyaWN0b3NcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RyaWN0T3JkZXJzTGlzdFJlc3BvbnNlIHtcclxuICByZWFkb25seSBzdWNjZXNzOiB0cnVlO1xyXG4gIHJlYWRvbmx5IGRhdGE6IHtcclxuICAgIHJlYWRvbmx5IG9yZGVyczogcmVhZG9ubHkgU3RyaWN0T3JkZXJFbnRlcnByaXNlW107XHJcbiAgICByZWFkb25seSBwYWdpbmF0aW9uOiBTdHJpY3RQYWdpbmF0aW9uO1xyXG4gICAgcmVhZG9ubHkgZmlsdGVyczoge1xyXG4gICAgICByZWFkb25seSBzZWFyY2g/OiBzdHJpbmc7XHJcbiAgICAgIHJlYWRvbmx5IHN0YXR1cz86IE9yZGVyU3RhdHVzO1xyXG4gICAgICByZWFkb25seSBwYXltZW50X3N0YXR1cz86IFBheW1lbnRTdGF0dXM7XHJcbiAgICAgIHJlYWRvbmx5IGZ1bGZpbGxtZW50X3N0YXR1cz86IEZ1bGZpbGxtZW50U3RhdHVzO1xyXG4gICAgICByZWFkb25seSBkYXRlX2Zyb20/OiBzdHJpbmcgJiB7IF9fYnJhbmQ6ICdJU09EYXRlU3RyaW5nJyB9O1xyXG4gICAgICByZWFkb25seSBkYXRlX3RvPzogc3RyaW5nICYgeyBfX2JyYW5kOiAnSVNPRGF0ZVN0cmluZycgfTtcclxuICAgIH07XHJcbiAgICByZWFkb25seSBhbmFseXRpY3M/OiB7XHJcbiAgICAgIHJlYWRvbmx5IHRvdGFsX29yZGVyczogbnVtYmVyICYgeyBfX2JyYW5kOiAnTm9uTmVnYXRpdmVJbnRlZ2VyJyB9O1xyXG4gICAgICByZWFkb25seSB0b3RhbF9yZXZlbnVlOiBudW1iZXIgJiB7IF9fYnJhbmQ6ICdOb25OZWdhdGl2ZUFtb3VudCcgfTtcclxuICAgICAgcmVhZG9ubHkgcGVuZGluZ19vcmRlcnM6IG51bWJlciAmIHsgX19icmFuZDogJ05vbk5lZ2F0aXZlSW50ZWdlcicgfTtcclxuICAgICAgcmVhZG9ubHkgY29tcGxldGVkX29yZGVyczogbnVtYmVyICYgeyBfX2JyYW5kOiAnTm9uTmVnYXRpdmVJbnRlZ2VyJyB9O1xyXG4gICAgICByZWFkb25seSB0b2RheV9yZXZlbnVlOiBudW1iZXIgJiB7IF9fYnJhbmQ6ICdOb25OZWdhdGl2ZUFtb3VudCcgfTtcclxuICAgIH07XHJcbiAgfTtcclxuICByZWFkb25seSBtZXNzYWdlPzogc3RyaW5nO1xyXG4gIHJlYWRvbmx5IHRpbWVzdGFtcDogc3RyaW5nO1xyXG59XHJcblxyXG4vKipcclxuICogUmVzcHVlc3RhIGRlIG9yZGVuIGluZGl2aWR1YWwgY29uIHRpcG9zIGVzdHJpY3Rvc1xyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBTdHJpY3RPcmRlckRldGFpbFJlc3BvbnNlIHtcclxuICByZWFkb25seSBzdWNjZXNzOiB0cnVlO1xyXG4gIHJlYWRvbmx5IGRhdGE6IHtcclxuICAgIHJlYWRvbmx5IG9yZGVyOiBTdHJpY3RPcmRlckVudGVycHJpc2U7XHJcbiAgICByZWFkb25seSB0aW1lbGluZT86IHJlYWRvbmx5IFN0cmljdE9yZGVyU3RhdHVzSGlzdG9yeVtdO1xyXG4gICAgcmVhZG9ubHkgcmVsYXRlZF9vcmRlcnM/OiByZWFkb25seSBQaWNrPFN0cmljdE9yZGVyRW50ZXJwcmlzZSwgJ2lkJyB8ICdvcmRlcl9udW1iZXInIHwgJ3N0YXR1cycgfCAndG90YWwnPltdO1xyXG4gIH07XHJcbiAgcmVhZG9ubHkgbWVzc2FnZT86IHN0cmluZztcclxuICByZWFkb25seSB0aW1lc3RhbXA6IHN0cmluZztcclxufVxyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gVElQT1MgR0VOw4lSSUNPUyBQQVJBIFZBTElEQUNJw5NOXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG4vKipcclxuICogVGlwbyBnZW7DqXJpY28gcGFyYSBvYmpldG9zIHF1ZSBwdWVkZW4gc2VyIHZhbGlkYWRvc1xyXG4gKi9cclxudHlwZSBWYWxpZGF0YWJsZU9iamVjdCA9IFJlY29yZDxzdHJpbmcsIGFueT4gfCBudWxsO1xyXG5cclxuLyoqXHJcbiAqIFRpcG8gZ2Vuw6lyaWNvIHBhcmEgcmVzcHVlc3RhcyBkZSBBUEkgbm8gdGlwYWRhc1xyXG4gKi9cclxudHlwZSBVbnR5cGVkQXBpUmVzcG9uc2UgPSBSZWNvcmQ8c3RyaW5nLCBhbnk+IHwgbnVsbDtcclxuXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vIFZBTElEQURPUkVTIERFIFRJUE9TXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG4vKipcclxuICogVmFsaWRhZG9yIHBhcmEgdmVyaWZpY2FyIHNpIHVuIG9iamV0byBlcyB1bmEgcmVzcHVlc3RhIGRlIEFQSSB2w6FsaWRhXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gaXNTdHJpY3RBcGlSZXNwb25zZTxUPihvYmo6IFZhbGlkYXRhYmxlT2JqZWN0KTogb2JqIGlzIFN0cmljdEFwaVJlc3BvbnNlPFQ+IHtcclxuICByZXR1cm4gKFxyXG4gICAgdHlwZW9mIG9iaiA9PT0gJ29iamVjdCcgJiZcclxuICAgIG9iaiAhPT0gbnVsbCAmJlxyXG4gICAgJ3N1Y2Nlc3MnIGluIG9iaiAmJlxyXG4gICAgb2JqLnN1Y2Nlc3MgPT09IHRydWUgJiZcclxuICAgICdkYXRhJyBpbiBvYmogJiZcclxuICAgICd0aW1lc3RhbXAnIGluIG9iaiAmJlxyXG4gICAgdHlwZW9mIG9iai50aW1lc3RhbXAgPT09ICdzdHJpbmcnXHJcbiAgKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFZhbGlkYWRvciBwYXJhIHZlcmlmaWNhciBzaSB1biBvYmpldG8gZXMgdW4gZXJyb3IgZGUgQVBJIHbDoWxpZG9cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBpc1N0cmljdEFwaUVycm9yKG9iajogVmFsaWRhdGFibGVPYmplY3QpOiBvYmogaXMgU3RyaWN0QXBpRXJyb3Ige1xyXG4gIHJldHVybiAoXHJcbiAgICB0eXBlb2Ygb2JqID09PSAnb2JqZWN0JyAmJlxyXG4gICAgb2JqICE9PSBudWxsICYmXHJcbiAgICAnc3VjY2VzcycgaW4gb2JqICYmXHJcbiAgICBvYmouc3VjY2VzcyA9PT0gZmFsc2UgJiZcclxuICAgICdlcnJvcicgaW4gb2JqICYmXHJcbiAgICB0eXBlb2Ygb2JqLmVycm9yID09PSAnc3RyaW5nJyAmJlxyXG4gICAgJ3RpbWVzdGFtcCcgaW4gb2JqICYmXHJcbiAgICB0eXBlb2Ygb2JqLnRpbWVzdGFtcCA9PT0gJ3N0cmluZydcclxuICApO1xyXG59XHJcblxyXG4vKipcclxuICogVmFsaWRhZG9yIHBhcmEgdmVyaWZpY2FyIHNpIHVuYSBwYWdpbmFjacOzbiBlcyB2w6FsaWRhXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gaXNWYWxpZFBhZ2luYXRpb24ob2JqOiBWYWxpZGF0YWJsZU9iamVjdCk6IG9iaiBpcyBTdHJpY3RQYWdpbmF0aW9uIHtcclxuICBpZiAodHlwZW9mIG9iaiAhPT0gJ29iamVjdCcgfHwgb2JqID09PSBudWxsKSB7cmV0dXJuIGZhbHNlO31cclxuICBcclxuICByZXR1cm4gKFxyXG4gICAgdHlwZW9mIG9iai5wYWdlID09PSAnbnVtYmVyJyAmJlxyXG4gICAgdHlwZW9mIG9iai5saW1pdCA9PT0gJ251bWJlcicgJiZcclxuICAgIHR5cGVvZiBvYmoudG90YWwgPT09ICdudW1iZXInICYmXHJcbiAgICB0eXBlb2Ygb2JqLnRvdGFsUGFnZXMgPT09ICdudW1iZXInICYmXHJcbiAgICB0eXBlb2Ygb2JqLmhhc05leHRQYWdlID09PSAnYm9vbGVhbicgJiZcclxuICAgIHR5cGVvZiBvYmouaGFzUHJldmlvdXNQYWdlID09PSAnYm9vbGVhbicgJiZcclxuICAgIG9iai5wYWdlID4gMCAmJlxyXG4gICAgb2JqLmxpbWl0ID4gMCAmJlxyXG4gICAgb2JqLnRvdGFsID49IDAgJiZcclxuICAgIG9iai50b3RhbFBhZ2VzID49IDBcclxuICApO1xyXG59XHJcblxyXG4vKipcclxuICogVmFsaWRhZG9yIHBhcmEgdmVyaWZpY2FyIHNpIHVuYSBvcmRlbiBlcyB2w6FsaWRhICh2ZXJzacOzbiBtw6FzIGZsZXhpYmxlKVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRTdHJpY3RPcmRlcihvYmo6IFZhbGlkYXRhYmxlT2JqZWN0KTogb2JqIGlzIFN0cmljdE9yZGVyRW50ZXJwcmlzZSB7XHJcbiAgaWYgKHR5cGVvZiBvYmogIT09ICdvYmplY3QnIHx8IG9iaiA9PT0gbnVsbCkge1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxuICBcclxuICAvLyBWYWxpZGFjaW9uZXMgbcOtbmltYXMgLSBzb2xvIGNhbXBvcyBhYnNvbHV0YW1lbnRlIGVzZW5jaWFsZXNcclxuICBjb25zdCBoYXNJZCA9IG9iai5pZCAmJiAodHlwZW9mIG9iai5pZCA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIG9iai5pZCA9PT0gJ251bWJlcicpO1xyXG4gIGNvbnN0IGhhc1RvdGFsID0gdHlwZW9mIG9iai50b3RhbCA9PT0gJ251bWJlcicgJiYgb2JqLnRvdGFsID49IDA7XHJcbiAgY29uc3QgaGFzQ3JlYXRlZEF0ID0gb2JqLmNyZWF0ZWRfYXQgJiYgdHlwZW9mIG9iai5jcmVhdGVkX2F0ID09PSAnc3RyaW5nJztcclxuICBjb25zdCBoYXNTdGF0dXMgPSBvYmouc3RhdHVzICYmIHR5cGVvZiBvYmouc3RhdHVzID09PSAnc3RyaW5nJztcclxuICBcclxuICAvLyBTb2xvIHJlcXVlcmlyIGxvcyBjYW1wb3MgYWJzb2x1dGFtZW50ZSBlc2VuY2lhbGVzXHJcbiAgcmV0dXJuIGhhc0lkICYmIGhhc1RvdGFsICYmIGhhc0NyZWF0ZWRBdCAmJiBoYXNTdGF0dXM7XHJcbn1cclxuXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vIFVUSUxJREFERVMgREUgVFJBTlNGT1JNQUNJw5NOXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG4vKipcclxuICogVHJhbnNmb3JtYSB1bmEgcmVzcHVlc3RhIGRlIEFQSSBubyB0aXBhZGEgYSB1bmEgcmVzcHVlc3RhIGVzdHJpY3RhXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gdG9TdHJpY3RPcmRlcnNSZXNwb25zZShvYmo6IFVudHlwZWRBcGlSZXNwb25zZSk6IFN0cmljdE9yZGVyc0xpc3RSZXNwb25zZSB8IFN0cmljdEFwaUVycm9yIHtcclxuICB0cnkge1xyXG4gICAgaWYgKCFpc1N0cmljdEFwaVJlc3BvbnNlKG9iaikpIHtcclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgICBlcnJvcjogJ0ludmFsaWQgQVBJIHJlc3BvbnNlIGZvcm1hdCcsXHJcbiAgICAgICAgY29kZTogJ0lOVkFMSURfUkVTUE9OU0VfRk9STUFUJyxcclxuICAgICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcclxuICAgICAgICBwYXRoOiAnL2FwaS9hZG1pbi9vcmRlcnMnXHJcbiAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBvYmogYXMgYW55O1xyXG4gICAgXHJcbiAgICAvLyBWYWxpZGFyIGVzdHJ1Y3R1cmEgZGUgZGF0b3NcclxuICAgIGlmICghcmVzcG9uc2UuZGF0YSB8fCB0eXBlb2YgcmVzcG9uc2UuZGF0YSAhPT0gJ29iamVjdCcpIHtcclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgICBlcnJvcjogJ01pc3Npbmcgb3IgaW52YWxpZCBkYXRhIGZpZWxkJyxcclxuICAgICAgICBjb2RlOiAnSU5WQUxJRF9EQVRBX0ZJRUxEJyxcclxuICAgICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcclxuICAgICAgICBwYXRoOiAnL2FwaS9hZG1pbi9vcmRlcnMnXHJcbiAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgLy8gVmFsaWRhciDDs3JkZW5lc1xyXG4gICAgY29uc3Qgb3JkZXJzID0gcmVzcG9uc2UuZGF0YS5vcmRlcnMgfHwgW107XHJcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkob3JkZXJzKSkge1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgIGVycm9yOiAnT3JkZXJzIGZpZWxkIG11c3QgYmUgYW4gYXJyYXknLFxyXG4gICAgICAgIGNvZGU6ICdJTlZBTElEX09SREVSU19GSUVMRCcsXHJcbiAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXHJcbiAgICAgICAgcGF0aDogJy9hcGkvYWRtaW4vb3JkZXJzJ1xyXG4gICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFZhbGlkYXIgcGFnaW5hY2nDs25cclxuICAgIGNvbnN0IHBhZ2luYXRpb24gPSByZXNwb25zZS5kYXRhLnBhZ2luYXRpb247XHJcbiAgICBpZiAocGFnaW5hdGlvbiAmJiAhaXNWYWxpZFBhZ2luYXRpb24ocGFnaW5hdGlvbikpIHtcclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgICBlcnJvcjogJ0ludmFsaWQgcGFnaW5hdGlvbiBmb3JtYXQnLFxyXG4gICAgICAgIGNvZGU6ICdJTlZBTElEX1BBR0lOQVRJT04nLFxyXG4gICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxyXG4gICAgICAgIHBhdGg6ICcvYXBpL2FkbWluL29yZGVycydcclxuICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBUcmFuc2Zvcm1hciDDs3JkZW5lcyBwYXJhIGFzZWd1cmFyIGNvbXBhdGliaWxpZGFkXHJcbiAgICBcclxuICAgIC8vIFRyYW5zZm9ybWFyIMOzcmRlbmVzIHBhcmEgbm9ybWFsaXphciB0aXBvc1xyXG4gICAgY29uc3QgdHJhbnNmb3JtZWRPcmRlcnMgPSBvcmRlcnMubWFwKChvcmRlcjogYW55KSA9PiAoe1xyXG4gICAgICAuLi5vcmRlcixcclxuICAgICAgaWQ6IFN0cmluZyhvcmRlci5pZCksIC8vIENvbnZlcnRpciBJRCBhIHN0cmluZyBwYXJhIGNvbXBhdGliaWxpZGFkIGZyb250ZW5kXHJcbiAgICAgIHVzZXJfaWQ6IG9yZGVyLnVzZXJfaWQgPyBTdHJpbmcob3JkZXIudXNlcl9pZCkgOiBvcmRlci51c2VyX2lkLFxyXG4gICAgICB0b3RhbDogTnVtYmVyKG9yZGVyLnRvdGFsKSB8fCAwLFxyXG4gICAgICBjcmVhdGVkX2F0OiBvcmRlci5jcmVhdGVkX2F0IHx8IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcclxuICAgICAgc3RhdHVzOiBvcmRlci5zdGF0dXMgfHwgJ3BlbmRpbmcnLFxyXG4gICAgICBtZXRhZGF0YTogb3JkZXIubWV0YWRhdGEgfHwge31cclxuICAgIH0pKTtcclxuICAgIFxyXG4gICAgY29uc3QgdmFsaWRPcmRlcnMgPSB0cmFuc2Zvcm1lZE9yZGVycy5maWx0ZXIoaXNWYWxpZFN0cmljdE9yZGVyKTtcclxuICAgIFxyXG4gICAgLy8gQ3JlYXIgcmVzcHVlc3RhIGVzdHJpY3RhIGNvbiB2YWxvcmVzIHBvciBkZWZlY3RvIHNlZ3Vyb3NcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgIGRhdGE6IHtcclxuICAgICAgICBvcmRlcnM6IHZhbGlkT3JkZXJzLFxyXG4gICAgICAgIHBhZ2luYXRpb246IHBhZ2luYXRpb24gfHwge1xyXG4gICAgICAgICAgcGFnZTogMSBhcyBhbnksXHJcbiAgICAgICAgICBsaW1pdDogMjAgYXMgYW55LFxyXG4gICAgICAgICAgdG90YWw6IG9yZGVycy5sZW5ndGggYXMgYW55LFxyXG4gICAgICAgICAgdG90YWxQYWdlczogTWF0aC5jZWlsKG9yZGVycy5sZW5ndGggLyAyMCkgYXMgYW55LFxyXG4gICAgICAgICAgaGFzTmV4dFBhZ2U6IGZhbHNlLFxyXG4gICAgICAgICAgaGFzUHJldmlvdXNQYWdlOiBmYWxzZVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZmlsdGVyczogcmVzcG9uc2UuZGF0YS5maWx0ZXJzIHx8IHt9LFxyXG4gICAgICAgIGFuYWx5dGljczogcmVzcG9uc2UuZGF0YS5hbmFseXRpY3NcclxuICAgICAgfSxcclxuICAgICAgbWVzc2FnZTogcmVzcG9uc2UubWVzc2FnZSxcclxuICAgICAgdGltZXN0YW1wOiByZXNwb25zZS50aW1lc3RhbXAgfHwgbmV3IERhdGUoKS50b0lTT1N0cmluZygpXHJcbiAgICB9O1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgZXJyb3I6IGBGYWlsZWQgdG8gcGFyc2UgQVBJIHJlc3BvbnNlOiAke2Vycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3InfWAsXHJcbiAgICAgIGNvZGU6ICdQQVJTRV9FUlJPUicsXHJcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxyXG4gICAgICBwYXRoOiAnL2FwaS9hZG1pbi9vcmRlcnMnXHJcbiAgICB9O1xyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIENyZWEgdW5hIHJlc3B1ZXN0YSBkZSBlcnJvciBlc3RyaWN0YVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN0cmljdEFwaUVycm9yKFxyXG4gIGVycm9yOiBzdHJpbmcsXHJcbiAgY29kZT86IHN0cmluZyxcclxuICBkZXRhaWxzPzogUmVjb3JkPHN0cmluZywgdW5rbm93bj4sXHJcbiAgcGF0aD86IHN0cmluZ1xyXG4pOiBTdHJpY3RBcGlFcnJvciB7XHJcbiAgcmV0dXJuIHtcclxuICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgZXJyb3IsXHJcbiAgICBjb2RlLFxyXG4gICAgZGV0YWlscyxcclxuICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxyXG4gICAgcGF0aDogcGF0aCB8fCAnL2FwaS91bmtub3duJ1xyXG4gIH07XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDcmVhIHVuYSByZXNwdWVzdGEgZXhpdG9zYSBlc3RyaWN0YVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN0cmljdEFwaVJlc3BvbnNlPFQ+KFxyXG4gIGRhdGE6IFQsXHJcbiAgbWVzc2FnZT86IHN0cmluZ1xyXG4pOiBTdHJpY3RBcGlSZXNwb25zZTxUPiB7XHJcbiAgcmV0dXJuIHtcclxuICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICBkYXRhLFxyXG4gICAgbWVzc2FnZSxcclxuICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXHJcbiAgfTtcclxufVxyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gVElQT1MgREUgVVRJTElEQURcclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbi8qKlxyXG4gKiBFeHRyYWUgZWwgdGlwbyBkZSBkYXRvcyBkZSB1bmEgcmVzcHVlc3RhIGRlIEFQSVxyXG4gKi9cclxuZXhwb3J0IHR5cGUgRXh0cmFjdEFwaURhdGE8VD4gPSBUIGV4dGVuZHMgU3RyaWN0QXBpUmVzcG9uc2U8aW5mZXIgVT4gPyBVIDogbmV2ZXI7XHJcblxyXG4vKipcclxuICogSGFjZSBxdWUgdG9kb3MgbG9zIGNhbXBvcyBkZSB1biB0aXBvIHNlYW4gZGUgc29sbyBsZWN0dXJhIHJlY3Vyc2l2YW1lbnRlXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBEZWVwUmVhZG9ubHk8VD4gPSB7XHJcbiAgcmVhZG9ubHkgW1AgaW4ga2V5b2YgVF06IFRbUF0gZXh0ZW5kcyBvYmplY3QgPyBEZWVwUmVhZG9ubHk8VFtQXT4gOiBUW1BdO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIFRpcG8gcGFyYSBmdW5jaW9uZXMgcXVlIG1hbmVqYW4gcmVzcHVlc3RhcyBkZSBBUElcclxuICovXHJcbmV4cG9ydCB0eXBlIEFwaUhhbmRsZXI8VCwgUiA9IHZvaWQ+ID0gKHJlc3BvbnNlOiBBcGlSZXN1bHQ8VD4pID0+IFIgfCBQcm9taXNlPFI+O1xyXG5cclxuLyoqXHJcbiAqIFRpcG8gcGFyYSBvcGNpb25lcyBkZSBjb25maWd1cmFjacOzbiBkZSBBUElcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3RyaWN0QXBpT3B0aW9ucyB7XHJcbiAgcmVhZG9ubHkgdGltZW91dD86IG51bWJlcjtcclxuICByZWFkb25seSByZXRyaWVzPzogbnVtYmVyO1xyXG4gIHJlYWRvbmx5IHZhbGlkYXRlUmVzcG9uc2U/OiBib29sZWFuO1xyXG4gIHJlYWRvbmx5IHRocm93T25FcnJvcj86IGJvb2xlYW47XHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBNllnQjtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBQUFBLGNBQUEsR0FBQUUsQ0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7TUFBQUMscUJBQUE7SUFBQTtJQUFBSCxjQUFBLEdBQUFJLENBQUE7SUFBQUosY0FBQSxHQUFBRSxDQUFBO1dBQUFDLG9CQUFBOztNQW1CQUUsd0JBQUE7SUFBQTtJQUFBTCxjQUFBLEdBQUFJLENBQUE7SUFBQUosY0FBQSxHQUFBRSxDQUFBO1dBQUFHLHVCQUFBOztNQTlLQUMsaUJBQUE7SUFBQTtJQUFBTixjQUFBLEdB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