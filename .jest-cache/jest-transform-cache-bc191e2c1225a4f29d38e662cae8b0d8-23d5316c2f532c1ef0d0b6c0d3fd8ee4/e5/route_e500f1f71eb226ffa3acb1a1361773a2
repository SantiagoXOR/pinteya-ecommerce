55590d8b998f7f69af29dac31563a96d
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_2gernf09q() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\cart\\update\\route.ts";
  var hash = "1e76543b81a9f2a57066094047cda089eca7bf0c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\cart\\update\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 28,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 21
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 20
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 19
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 23
        }
      },
      "9": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 38
        }
      },
      "10": {
        start: {
          line: 30,
          column: 18
        },
        end: {
          line: 30,
          column: 66
        }
      },
      "11": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 54
        }
      },
      "12": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 24
        }
      },
      "13": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 201,
          column: 5
        }
      },
      "14": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 79
        }
      },
      "15": {
        start: {
          line: 37,
          column: 24
        },
        end: {
          line: 37,
          column: 49
        }
      },
      "16": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "17": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 69
        }
      },
      "18": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 46,
          column: 15
        }
      },
      "19": {
        start: {
          line: 48,
          column: 23
        },
        end: {
          line: 48,
          column: 38
        }
      },
      "20": {
        start: {
          line: 50,
          column: 21
        },
        end: {
          line: 50,
          column: 41
        }
      },
      "21": {
        start: {
          line: 51,
          column: 40
        },
        end: {
          line: 51,
          column: 44
        }
      },
      "22": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "23": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 60,
          column: 15
        }
      },
      "24": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "25": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 69,
          column: 15
        }
      },
      "26": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 124
        }
      },
      "27": {
        start: {
          line: 73,
          column: 25
        },
        end: {
          line: 73,
          column: 63
        }
      },
      "28": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "29": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 82
        }
      },
      "30": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 81,
          column: 15
        }
      },
      "31": {
        start: {
          line: 84,
          column: 55
        },
        end: {
          line: 84,
          column: 166
        }
      },
      "32": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "33": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 82
        }
      },
      "34": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 93,
          column: 15
        }
      },
      "35": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "36": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 142
        }
      },
      "37": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 106,
          column: 15
        }
      },
      "38": {
        start: {
          line: 109,
          column: 61
        },
        end: {
          line: 109,
          column: 176
        }
      },
      "39": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "40": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 90
        }
      },
      "41": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 118,
          column: 15
        }
      },
      "42": {
        start: {
          line: 120,
          column: 24
        },
        end: {
          line: 120,
          column: 26
        }
      },
      "43": {
        start: {
          line: 121,
          column: 30
        },
        end: {
          line: 121,
          column: 32
        }
      },
      "44": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 191,
          column: 9
        }
      },
      "45": {
        start: {
          line: 124,
          column: 43
        },
        end: {
          line: 124,
          column: 111
        }
      },
      "46": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 134,
          column: 13
        }
      },
      "47": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 126,
          column: 95
        }
      },
      "48": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 133,
          column: 19
        }
      },
      "49": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 34
        }
      },
      "50": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 69
        }
      },
      "51": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 85
        }
      },
      "52": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 148,
          column: 15
        }
      },
      "53": {
        start: {
          line: 151,
          column: 62
        },
        end: {
          line: 159,
          column: 19
        }
      },
      "54": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 169,
          column: 13
        }
      },
      "55": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 94
        }
      },
      "56": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 168,
          column: 19
        }
      },
      "57": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 176,
          column: 13
        }
      },
      "58": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 171,
          column: 40
        }
      },
      "59": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 88
        }
      },
      "60": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 174,
          column: 40
        }
      },
      "61": {
        start: {
          line: 175,
          column: 16
        },
        end: {
          line: 175,
          column: 87
        }
      },
      "62": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 88
        }
      },
      "63": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 190,
          column: 15
        }
      },
      "64": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 69
        }
      },
      "65": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 200,
          column: 11
        }
      },
      "66": {
        start: {
          line: 204,
          column: 4
        },
        end: {
          line: 204,
          column: 24
        }
      },
      "67": {
        start: {
          line: 207,
          column: 4
        },
        end: {
          line: 207,
          column: 24
        }
      },
      "68": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 240,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 17
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 15
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 19
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "PUT",
        decl: {
          start: {
            line: 33,
            column: 15
          },
          end: {
            line: 33,
            column: 18
          }
        },
        loc: {
          start: {
            line: 33,
            column: 28
          },
          end: {
            line: 202,
            column: 1
          }
        },
        line: 33
      },
      "7": {
        name: "PATCH",
        decl: {
          start: {
            line: 203,
            column: 15
          },
          end: {
            line: 203,
            column: 20
          }
        },
        loc: {
          start: {
            line: 203,
            column: 30
          },
          end: {
            line: 205,
            column: 1
          }
        },
        line: 203
      },
      "8": {
        name: "POST",
        decl: {
          start: {
            line: 206,
            column: 15
          },
          end: {
            line: 206,
            column: 19
          }
        },
        loc: {
          start: {
            line: 206,
            column: 29
          },
          end: {
            line: 208,
            column: 1
          }
        },
        line: 206
      },
      "9": {
        name: "GET",
        decl: {
          start: {
            line: 209,
            column: 15
          },
          end: {
            line: 209,
            column: 18
          }
        },
        loc: {
          start: {
            line: 209,
            column: 21
          },
          end: {
            line: 241,
            column: 1
          }
        },
        line: 209
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "2": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "3": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 39
          }
        }, {
          start: {
            line: 62,
            column: 43
          },
          end: {
            line: 62,
            column: 55
          }
        }, {
          start: {
            line: 62,
            column: 59
          },
          end: {
            line: 62,
            column: 72
          }
        }],
        line: 62
      },
      "4": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "5": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "6": {
        loc: {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 85,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 85,
            column: 24
          }
        }, {
          start: {
            line: 85,
            column: 28
          },
          end: {
            line: 85,
            column: 36
          }
        }],
        line: 85
      },
      "7": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "8": {
        loc: {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "9": {
        loc: {
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 110,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 110,
            column: 25
          }
        }, {
          start: {
            line: 110,
            column: 29
          },
          end: {
            line: 110,
            column: 42
          }
        }],
        line: 110
      },
      "10": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        }, {
          start: {
            line: 149,
            column: 15
          },
          end: {
            line: 191,
            column: 9
          }
        }],
        line: 122
      },
      "11": {
        loc: {
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "12": {
        loc: {
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 169,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 169,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "13": {
        loc: {
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 176,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 176,
            column: 13
          }
        }, {
          start: {
            line: 173,
            column: 19
          },
          end: {
            line: 176,
            column: 13
          }
        }],
        line: 170
      },
      "14": {
        loc: {
          start: {
            line: 188,
            column: 27
          },
          end: {
            line: 188,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 27
          },
          end: {
            line: 188,
            column: 51
          }
        }, {
          start: {
            line: 188,
            column: 55
          },
          end: {
            line: 188,
            column: 68
          }
        }],
        line: 188
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\cart\\update\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API ACTUALIZAR CARRITO\r\n// ===================================\r\n// Endpoint para actualizar cantidades en el carrito\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getSupabaseClient } from '@/lib/integrations/supabase';\r\nimport { auth } from '@/lib/auth/config';\r\n\r\n/**\r\n * PUT /api/cart/update\r\n * Actualizar cantidad de un producto en el carrito\r\n */\r\nexport async function PUT(request: NextRequest) {\r\n  try {\r\n    console.log('\uD83D\uDED2 Cart Update API: Iniciando actualizaci\xF3n de cantidad');\r\n\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user?.id) {\r\n      console.log('\u274C Cart Update API: Usuario no autenticado');\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'Usuario no autenticado',\r\n          requiresAuth: true\r\n        }, \r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n\r\n    // Obtener datos del request\r\n    const body = await request.json();\r\n    const { productId, quantity } = body;\r\n\r\n    // Validaciones\r\n    if (!productId) {\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'ID del producto es requerido',\r\n          field: 'productId'\r\n        }, \r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    if (!Number.isInteger(quantity) || quantity < 0 || quantity > 99) {\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'La cantidad debe ser un n\xFAmero entero entre 0 y 99',\r\n          field: 'quantity'\r\n        }, \r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    console.log(`\uD83D\uDD0D Cart Update API: Actualizando producto ${productId} a cantidad ${quantity} para usuario ${userId}`);\r\n\r\n    // Obtener cliente de Supabase\r\n    const supabase = getSupabaseClient(true);\r\n    if (!supabase) {\r\n      console.error('\u274C Cart Update API: Cliente de Supabase no disponible');\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'Servicio de base de datos no disponible'\r\n        }, \r\n        { status: 503 }\r\n      );\r\n    }\r\n\r\n    // Verificar que el producto existe y obtener stock\r\n    const { data: product, error: productError } = await supabase\r\n      .from('products')\r\n      .select('id, name, stock, price, discounted_price')\r\n      .eq('id', productId)\r\n      .single();\r\n\r\n    if (productError || !product) {\r\n      console.log(`\u274C Cart Update API: Producto ${productId} no encontrado`);\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'Producto no encontrado',\r\n          productId\r\n        }, \r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Verificar stock disponible\r\n    if (quantity > product.stock) {\r\n      console.log(`\u274C Cart Update API: Stock insuficiente para producto ${productId}. Stock: ${product.stock}, Solicitado: ${quantity}`);\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: `Stock insuficiente. Solo hay ${product.stock} unidades disponibles`,\r\n          availableStock: product.stock,\r\n          requestedQuantity: quantity,\r\n          productName: product.name\r\n        }, \r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Verificar que el item existe en el carrito\r\n    const { data: existingItem, error: existingError } = await supabase\r\n      .from('cart_items')\r\n      .select('id, quantity')\r\n      .eq('user_id', userId)\r\n      .eq('product_id', productId)\r\n      .single();\r\n\r\n    if (existingError || !existingItem) {\r\n      console.log(`\u274C Cart Update API: Producto ${productId} no est\xE1 en el carrito`);\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'El producto no est\xE1 en tu carrito',\r\n          productId\r\n        }, \r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    let operation = '';\r\n    let responseMessage = '';\r\n\r\n    if (quantity === 0) {\r\n      // Remover completamente del carrito\r\n      const { error: deleteError } = await supabase\r\n        .from('cart_items')\r\n        .delete()\r\n        .eq('id', existingItem.id);\r\n\r\n      if (deleteError) {\r\n        console.error('\u274C Cart Update API: Error removiendo del carrito:', deleteError);\r\n        return NextResponse.json(\r\n          { \r\n            success: false, \r\n            error: 'Error removiendo producto del carrito',\r\n            details: deleteError.message\r\n          }, \r\n          { status: 500 }\r\n        );\r\n      }\r\n\r\n      operation = 'removed';\r\n      responseMessage = `${product.name} removido del carrito`;\r\n      \r\n      console.log(`\u2705 Cart Update API: Producto removido - ${responseMessage}`);\r\n\r\n      return NextResponse.json({\r\n        success: true,\r\n        message: responseMessage,\r\n        operation,\r\n        item: {\r\n          productId: productId,\r\n          productName: product.name,\r\n          previousQuantity: existingItem.quantity,\r\n          newQuantity: 0\r\n        }\r\n      });\r\n\r\n    } else {\r\n      // Actualizar cantidad\r\n      const { data: updatedItem, error: updateError } = await supabase\r\n        .from('cart_items')\r\n        .update({ quantity: quantity })\r\n        .eq('id', existingItem.id)\r\n        .select(`\r\n          id,\r\n          user_id,\r\n          product_id,\r\n          quantity,\r\n          updated_at\r\n        `)\r\n        .single();\r\n\r\n      if (updateError) {\r\n        console.error('\u274C Cart Update API: Error actualizando cantidad:', updateError);\r\n        return NextResponse.json(\r\n          { \r\n            success: false, \r\n            error: 'Error actualizando cantidad en el carrito',\r\n            details: updateError.message\r\n          }, \r\n          { status: 500 }\r\n        );\r\n      }\r\n\r\n      if (quantity > existingItem.quantity) {\r\n        operation = 'increased';\r\n        responseMessage = `Cantidad de ${product.name} aumentada a ${quantity}`;\r\n      } else {\r\n        operation = 'decreased';\r\n        responseMessage = `Cantidad de ${product.name} reducida a ${quantity}`;\r\n      }\r\n      \r\n      console.log(`\u2705 Cart Update API: Cantidad actualizada - ${responseMessage}`);\r\n\r\n      return NextResponse.json({\r\n        success: true,\r\n        message: responseMessage,\r\n        operation,\r\n        item: {\r\n          id: updatedItem.id,\r\n          productId: productId,\r\n          productName: product.name,\r\n          previousQuantity: existingItem.quantity,\r\n          newQuantity: quantity,\r\n          price: product.discounted_price || product.price\r\n        }\r\n      });\r\n    }\r\n\r\n  } catch (error: any) {\r\n    console.error('\u274C Cart Update API: Error inesperado:', error);\r\n    return NextResponse.json(\r\n      { \r\n        success: false, \r\n        error: 'Error interno del servidor',\r\n        details: error.message\r\n      }, \r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * PATCH /api/cart/update\r\n * Alias para PUT (para compatibilidad)\r\n */\r\nexport async function PATCH(request: NextRequest) {\r\n  return PUT(request);\r\n}\r\n\r\n/**\r\n * POST /api/cart/update\r\n * Alias para PUT (para compatibilidad)\r\n */\r\nexport async function POST(request: NextRequest) {\r\n  return PUT(request);\r\n}\r\n\r\n/**\r\n * GET /api/cart/update\r\n * Informaci\xF3n sobre c\xF3mo usar este endpoint\r\n */\r\nexport async function GET() {\r\n  return NextResponse.json({\r\n    endpoint: '/api/cart/update',\r\n    methods: ['PUT', 'PATCH', 'POST'],\r\n    description: 'Actualizar cantidad de productos en el carrito',\r\n    parameters: {\r\n      productId: 'number - ID del producto a actualizar (requerido)',\r\n      quantity: 'number - Nueva cantidad (0-99). Si es 0, se remueve del carrito (requerido)'\r\n    },\r\n    examples: {\r\n      updateQuantity: {\r\n        productId: 123,\r\n        quantity: 3\r\n      },\r\n      removeProduct: {\r\n        productId: 123,\r\n        quantity: 0\r\n      }\r\n    },\r\n    authentication: 'Requerida - Usuario debe estar autenticado',\r\n    responses: {\r\n      200: 'Cantidad actualizada exitosamente',\r\n      400: 'Datos inv\xE1lidos o stock insuficiente',\r\n      401: 'Usuario no autenticado',\r\n      404: 'Producto no encontrado o no est\xE1 en el carrito',\r\n      500: 'Error interno del servidor'\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "PATCH", "POST", "PUT", "runtime", "request", "console", "log", "session", "auth", "user", "id", "NextResponse", "json", "success", "error", "requiresAuth", "status", "userId", "body", "productId", "quantity", "field", "Number", "isInteger", "supabase", "getSupabaseClient", "data", "product", "productError", "from", "select", "eq", "single", "stock", "availableStock", "requestedQuantity", "productName", "name", "existingItem", "existingError", "operation", "responseMessage", "deleteError", "delete", "details", "message", "item", "previousQuantity", "newQuantity", "updatedItem", "updateError", "update", "price", "discounted_price", "endpoint", "methods", "description", "parameters", "examples", "updateQuantity", "removeProduct", "authentication", "responses"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1e76543b81a9f2a57066094047cda089eca7bf0c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2gernf09q = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2gernf09q();
cov_2gernf09q().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2gernf09q().f[0]++;
  cov_2gernf09q().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2gernf09q().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2gernf09q().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_2gernf09q().f[1]++;
    cov_2gernf09q().s[4]++;
    return GET;
  },
  get PATCH() {
    /* istanbul ignore next */
    cov_2gernf09q().f[2]++;
    cov_2gernf09q().s[5]++;
    return PATCH;
  },
  get POST() {
    /* istanbul ignore next */
    cov_2gernf09q().f[3]++;
    cov_2gernf09q().s[6]++;
    return POST;
  },
  get PUT() {
    /* istanbul ignore next */
    cov_2gernf09q().f[4]++;
    cov_2gernf09q().s[7]++;
    return PUT;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_2gernf09q().f[5]++;
    cov_2gernf09q().s[8]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_2gernf09q().s[9]++, require("next/server"));
const _supabase =
/* istanbul ignore next */
(cov_2gernf09q().s[10]++, require("../../../../lib/integrations/supabase"));
const _config =
/* istanbul ignore next */
(cov_2gernf09q().s[11]++, require("../../../../lib/auth/config"));
const runtime =
/* istanbul ignore next */
(cov_2gernf09q().s[12]++, 'nodejs');
async function PUT(request) {
  /* istanbul ignore next */
  cov_2gernf09q().f[6]++;
  cov_2gernf09q().s[13]++;
  try {
    /* istanbul ignore next */
    cov_2gernf09q().s[14]++;
    console.log('ğ Cart Update API: Iniciando actualizaciÃ³n de cantidad');
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_2gernf09q().s[15]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_2gernf09q().s[16]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_2gernf09q().b[0][0]++;
      cov_2gernf09q().s[17]++;
      console.log('â Cart Update API: Usuario no autenticado');
      /* istanbul ignore next */
      cov_2gernf09q().s[18]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Usuario no autenticado',
        requiresAuth: true
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2gernf09q().b[0][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_2gernf09q().s[19]++, session.user.id);
    // Obtener datos del request
    const body =
    /* istanbul ignore next */
    (cov_2gernf09q().s[20]++, await request.json());
    const {
      productId,
      quantity
    } =
    /* istanbul ignore next */
    (cov_2gernf09q().s[21]++, body);
    // Validaciones
    /* istanbul ignore next */
    cov_2gernf09q().s[22]++;
    if (!productId) {
      /* istanbul ignore next */
      cov_2gernf09q().b[1][0]++;
      cov_2gernf09q().s[23]++;
      return _server.NextResponse.json({
        success: false,
        error: 'ID del producto es requerido',
        field: 'productId'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2gernf09q().b[1][1]++;
    }
    cov_2gernf09q().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_2gernf09q().b[3][0]++, !Number.isInteger(quantity)) ||
    /* istanbul ignore next */
    (cov_2gernf09q().b[3][1]++, quantity < 0) ||
    /* istanbul ignore next */
    (cov_2gernf09q().b[3][2]++, quantity > 99)) {
      /* istanbul ignore next */
      cov_2gernf09q().b[2][0]++;
      cov_2gernf09q().s[25]++;
      return _server.NextResponse.json({
        success: false,
        error: 'La cantidad debe ser un nÃºmero entero entre 0 y 99',
        field: 'quantity'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2gernf09q().b[2][1]++;
    }
    cov_2gernf09q().s[26]++;
    console.log(`ğ Cart Update API: Actualizando producto ${productId} a cantidad ${quantity} para usuario ${userId}`);
    // Obtener cliente de Supabase
    const supabase =
    /* istanbul ignore next */
    (cov_2gernf09q().s[27]++, (0, _supabase.getSupabaseClient)(true));
    /* istanbul ignore next */
    cov_2gernf09q().s[28]++;
    if (!supabase) {
      /* istanbul ignore next */
      cov_2gernf09q().b[4][0]++;
      cov_2gernf09q().s[29]++;
      console.error('â Cart Update API: Cliente de Supabase no disponible');
      /* istanbul ignore next */
      cov_2gernf09q().s[30]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Servicio de base de datos no disponible'
      }, {
        status: 503
      });
    } else
    /* istanbul ignore next */
    {
      cov_2gernf09q().b[4][1]++;
    }
    // Verificar que el producto existe y obtener stock
    const {
      data: product,
      error: productError
    } =
    /* istanbul ignore next */
    (cov_2gernf09q().s[31]++, await supabase.from('products').select('id, name, stock, price, discounted_price').eq('id', productId).single());
    /* istanbul ignore next */
    cov_2gernf09q().s[32]++;
    if (
    /* istanbul ignore next */
    (cov_2gernf09q().b[6][0]++, productError) ||
    /* istanbul ignore next */
    (cov_2gernf09q().b[6][1]++, !product)) {
      /* istanbul ignore next */
      cov_2gernf09q().b[5][0]++;
      cov_2gernf09q().s[33]++;
      console.log(`â Cart Update API: Producto ${productId} no encontrado`);
      /* istanbul ignore next */
      cov_2gernf09q().s[34]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Producto no encontrado',
        productId
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_2gernf09q().b[5][1]++;
    }
    // Verificar stock disponible
    cov_2gernf09q().s[35]++;
    if (quantity > product.stock) {
      /* istanbul ignore next */
      cov_2gernf09q().b[7][0]++;
      cov_2gernf09q().s[36]++;
      console.log(`â Cart Update API: Stock insuficiente para producto ${productId}. Stock: ${product.stock}, Solicitado: ${quantity}`);
      /* istanbul ignore next */
      cov_2gernf09q().s[37]++;
      return _server.NextResponse.json({
        success: false,
        error: `Stock insuficiente. Solo hay ${product.stock} unidades disponibles`,
        availableStock: product.stock,
        requestedQuantity: quantity,
        productName: product.name
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2gernf09q().b[7][1]++;
    }
    // Verificar que el item existe en el carrito
    const {
      data: existingItem,
      error: existingError
    } =
    /* istanbul ignore next */
    (cov_2gernf09q().s[38]++, await supabase.from('cart_items').select('id, quantity').eq('user_id', userId).eq('product_id', productId).single());
    /* istanbul ignore next */
    cov_2gernf09q().s[39]++;
    if (
    /* istanbul ignore next */
    (cov_2gernf09q().b[9][0]++, existingError) ||
    /* istanbul ignore next */
    (cov_2gernf09q().b[9][1]++, !existingItem)) {
      /* istanbul ignore next */
      cov_2gernf09q().b[8][0]++;
      cov_2gernf09q().s[40]++;
      console.log(`â Cart Update API: Producto ${productId} no estÃ¡ en el carrito`);
      /* istanbul ignore next */
      cov_2gernf09q().s[41]++;
      return _server.NextResponse.json({
        success: false,
        error: 'El producto no estÃ¡ en tu carrito',
        productId
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_2gernf09q().b[8][1]++;
    }
    let operation =
    /* istanbul ignore next */
    (cov_2gernf09q().s[42]++, '');
    let responseMessage =
    /* istanbul ignore next */
    (cov_2gernf09q().s[43]++, '');
    /* istanbul ignore next */
    cov_2gernf09q().s[44]++;
    if (quantity === 0) {
      /* istanbul ignore next */
      cov_2gernf09q().b[10][0]++;
      // Remover completamente del carrito
      const {
        error: deleteError
      } =
      /* istanbul ignore next */
      (cov_2gernf09q().s[45]++, await supabase.from('cart_items').delete().eq('id', existingItem.id));
      /* istanbul ignore next */
      cov_2gernf09q().s[46]++;
      if (deleteError) {
        /* istanbul ignore next */
        cov_2gernf09q().b[11][0]++;
        cov_2gernf09q().s[47]++;
        console.error('â Cart Update API: Error removiendo del carrito:', deleteError);
        /* istanbul ignore next */
        cov_2gernf09q().s[48]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Error removiendo producto del carrito',
          details: deleteError.message
        }, {
          status: 500
        });
      } else
      /* istanbul ignore next */
      {
        cov_2gernf09q().b[11][1]++;
      }
      cov_2gernf09q().s[49]++;
      operation = 'removed';
      /* istanbul ignore next */
      cov_2gernf09q().s[50]++;
      responseMessage = `${product.name} removido del carrito`;
      /* istanbul ignore next */
      cov_2gernf09q().s[51]++;
      console.log(`â Cart Update API: Producto removido - ${responseMessage}`);
      /* istanbul ignore next */
      cov_2gernf09q().s[52]++;
      return _server.NextResponse.json({
        success: true,
        message: responseMessage,
        operation,
        item: {
          productId: productId,
          productName: product.name,
          previousQuantity: existingItem.quantity,
          newQuantity: 0
        }
      });
    } else {
      /* istanbul ignore next */
      cov_2gernf09q().b[10][1]++;
      // Actualizar cantidad
      const {
        data: updatedItem,
        error: updateError
      } =
      /* istanbul ignore next */
      (cov_2gernf09q().s[53]++, await supabase.from('cart_items').update({
        quantity: quantity
      }).eq('id', existingItem.id).select(`
          id,
          user_id,
          product_id,
          quantity,
          updated_at
        `).single());
      /* istanbul ignore next */
      cov_2gernf09q().s[54]++;
      if (updateError) {
        /* istanbul ignore next */
        cov_2gernf09q().b[12][0]++;
        cov_2gernf09q().s[55]++;
        console.error('â Cart Update API: Error actualizando cantidad:', updateError);
        /* istanbul ignore next */
        cov_2gernf09q().s[56]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Error actualizando cantidad en el carrito',
          details: updateError.message
        }, {
          status: 500
        });
      } else
      /* istanbul ignore next */
      {
        cov_2gernf09q().b[12][1]++;
      }
      cov_2gernf09q().s[57]++;
      if (quantity > existingItem.quantity) {
        /* istanbul ignore next */
        cov_2gernf09q().b[13][0]++;
        cov_2gernf09q().s[58]++;
        operation = 'increased';
        /* istanbul ignore next */
        cov_2gernf09q().s[59]++;
        responseMessage = `Cantidad de ${product.name} aumentada a ${quantity}`;
      } else {
        /* istanbul ignore next */
        cov_2gernf09q().b[13][1]++;
        cov_2gernf09q().s[60]++;
        operation = 'decreased';
        /* istanbul ignore next */
        cov_2gernf09q().s[61]++;
        responseMessage = `Cantidad de ${product.name} reducida a ${quantity}`;
      }
      /* istanbul ignore next */
      cov_2gernf09q().s[62]++;
      console.log(`â Cart Update API: Cantidad actualizada - ${responseMessage}`);
      /* istanbul ignore next */
      cov_2gernf09q().s[63]++;
      return _server.NextResponse.json({
        success: true,
        message: responseMessage,
        operation,
        item: {
          id: updatedItem.id,
          productId: productId,
          productName: product.name,
          previousQuantity: existingItem.quantity,
          newQuantity: quantity,
          price:
          /* istanbul ignore next */
          (cov_2gernf09q().b[14][0]++, product.discounted_price) ||
          /* istanbul ignore next */
          (cov_2gernf09q().b[14][1]++, product.price)
        }
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_2gernf09q().s[64]++;
    console.error('â Cart Update API: Error inesperado:', error);
    /* istanbul ignore next */
    cov_2gernf09q().s[65]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor',
      details: error.message
    }, {
      status: 500
    });
  }
}
async function PATCH(request) {
  /* istanbul ignore next */
  cov_2gernf09q().f[7]++;
  cov_2gernf09q().s[66]++;
  return PUT(request);
}
async function POST(request) {
  /* istanbul ignore next */
  cov_2gernf09q().f[8]++;
  cov_2gernf09q().s[67]++;
  return PUT(request);
}
async function GET() {
  /* istanbul ignore next */
  cov_2gernf09q().f[9]++;
  cov_2gernf09q().s[68]++;
  return _server.NextResponse.json({
    endpoint: '/api/cart/update',
    methods: ['PUT', 'PATCH', 'POST'],
    description: 'Actualizar cantidad de productos en el carrito',
    parameters: {
      productId: 'number - ID del producto a actualizar (requerido)',
      quantity: 'number - Nueva cantidad (0-99). Si es 0, se remueve del carrito (requerido)'
    },
    examples: {
      updateQuantity: {
        productId: 123,
        quantity: 3
      },
      removeProduct: {
        productId: 123,
        quantity: 0
      }
    },
    authentication: 'Requerida - Usuario debe estar autenticado',
    responses: {
      200: 'Cantidad actualizada exitosamente',
      400: 'Datos invÃ¡lidos o stock insuficiente',
      401: 'Usuario no autenticado',
      404: 'Producto no encontrado o no estÃ¡ en el carrito',
      500: 'Error interno del servidor'
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,