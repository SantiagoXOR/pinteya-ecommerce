{"version":3,"names":["cov_1s3tw8b8bc","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","SECURITY_PRESETS","withAdminSecurity","withAuthSecurity","withCustomSecurity","withEnhancedSecurity","withGeneralSecurity","withPaymentSecurity","withProductSecurity","auth","enableJWTValidation","enableCSRFProtection","enableRateLimit","enableSecurityValidation","rateLimitType","strictMode","admin","jwtRequiredRole","jwtRequiredPermissions","securityPermissions","securityOperation","products","payments","general","config","handler","request","args","validationSummary","jwtValid","csrfValid","rateLimitPassed","securityValid","overallValid","errors","warnings","jwtHandler","_jwtvalidation","withJWTValidation","req","success","error","push","createErrorResponse","csrfHandler","_csrfprotection","withAdminCSRFProtection","withCSRFProtection","rateLimitHandler","_ratelimiting","withRateLimit","securityHandler","_securityvalidations","withSecurityValidation","length","securityValidation","console","message","status","errorResponse","timestamp","Date","toISOString","security","res","json","Response","JSON","stringify","headers"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\auth\\enhanced-security-middleware.ts"],"sourcesContent":["/**\r\n * Middleware de Seguridad Mejorado\r\n * Combina todas las validaciones de seguridad en un middleware unificado\r\n */\r\n\r\nimport { NextRequest } from 'next/server';\r\nimport type { NextApiRequest } from 'next';\r\nimport { withJWTValidation } from './jwt-validation';\r\nimport { withCSRFProtection, withAdminCSRFProtection } from './csrf-protection';\r\nimport { withRateLimit, withAdminRateLimit, withAuthRateLimit } from './rate-limiting';\r\nimport { withSecurityValidation } from './security-validations';\r\n\r\n// =====================================================\r\n// TIPOS Y INTERFACES\r\n// =====================================================\r\n\r\nexport interface SecurityMiddlewareConfig {\r\n  enableJWTValidation?: boolean;\r\n  enableCSRFProtection?: boolean;\r\n  enableRateLimit?: boolean;\r\n  enableSecurityValidation?: boolean;\r\n  jwtRequiredRole?: string;\r\n  jwtRequiredPermissions?: string[];\r\n  rateLimitType?: 'auth' | 'admin' | 'products' | 'payments' | 'general';\r\n  securityPermissions?: string[];\r\n  securityOperation?: string;\r\n  strictMode?: boolean;\r\n}\r\n\r\nexport interface SecurityValidationSummary {\r\n  jwtValid: boolean;\r\n  csrfValid: boolean;\r\n  rateLimitPassed: boolean;\r\n  securityValid: boolean;\r\n  overallValid: boolean;\r\n  errors: string[];\r\n  warnings: string[];\r\n}\r\n\r\n// =====================================================\r\n// CONFIGURACIONES PREDEFINIDAS\r\n// =====================================================\r\n\r\nexport const SECURITY_PRESETS = {\r\n  // Para APIs de autenticación - máxima seguridad\r\n  auth: {\r\n    enableJWTValidation: true,\r\n    enableCSRFProtection: true,\r\n    enableRateLimit: true,\r\n    enableSecurityValidation: true,\r\n    rateLimitType: 'auth' as const,\r\n    strictMode: true\r\n  },\r\n\r\n  // Para APIs admin - alta seguridad\r\n  admin: {\r\n    enableJWTValidation: true,\r\n    enableCSRFProtection: true,\r\n    enableRateLimit: true,\r\n    enableSecurityValidation: true,\r\n    jwtRequiredRole: 'admin',\r\n    jwtRequiredPermissions: ['admin_access'],\r\n    rateLimitType: 'admin' as const,\r\n    securityPermissions: ['canAccessAdmin'],\r\n    securityOperation: 'ADMIN_ACCESS',\r\n    strictMode: true\r\n  },\r\n\r\n  // Para APIs de productos - seguridad moderada\r\n  products: {\r\n    enableJWTValidation: false,\r\n    enableCSRFProtection: true,\r\n    enableRateLimit: true,\r\n    enableSecurityValidation: false,\r\n    rateLimitType: 'products' as const,\r\n    strictMode: false\r\n  },\r\n\r\n  // Para APIs de pagos - alta seguridad\r\n  payments: {\r\n    enableJWTValidation: true,\r\n    enableCSRFProtection: true,\r\n    enableRateLimit: true,\r\n    enableSecurityValidation: true,\r\n    rateLimitType: 'payments' as const,\r\n    securityOperation: 'PAYMENT_PROCESSING',\r\n    strictMode: true\r\n  },\r\n\r\n  // Para APIs generales - seguridad básica\r\n  general: {\r\n    enableJWTValidation: false,\r\n    enableCSRFProtection: false,\r\n    enableRateLimit: true,\r\n    enableSecurityValidation: false,\r\n    rateLimitType: 'general' as const,\r\n    strictMode: false\r\n  }\r\n};\r\n\r\n// =====================================================\r\n// MIDDLEWARE PRINCIPAL\r\n// =====================================================\r\n\r\n/**\r\n * Middleware de seguridad mejorado que combina todas las validaciones\r\n */\r\nexport function withEnhancedSecurity(\r\n  config: SecurityMiddlewareConfig = {}\r\n) {\r\n  return function (handler: Function) {\r\n    return async (request: NextRequest | NextApiRequest, ...args: any[]) => {\r\n      const validationSummary: SecurityValidationSummary = {\r\n        jwtValid: true,\r\n        csrfValid: true,\r\n        rateLimitPassed: true,\r\n        securityValid: true,\r\n        overallValid: true,\r\n        errors: [],\r\n        warnings: []\r\n      };\r\n\r\n      try {\r\n        // 1. Validación JWT si está habilitada\r\n        if (config.enableJWTValidation) {\r\n          const jwtHandler = withJWTValidation(\r\n            config.jwtRequiredRole,\r\n            config.jwtRequiredPermissions\r\n          )(async (req: any) => ({ success: true }));\r\n\r\n          try {\r\n            await jwtHandler(request, ...args);\r\n            validationSummary.jwtValid = true;\r\n          } catch (error) {\r\n            validationSummary.jwtValid = false;\r\n            validationSummary.errors.push('JWT validation failed');\r\n            \r\n            if (config.strictMode) {\r\n              return createErrorResponse(\r\n                'JWT validation failed',\r\n                401,\r\n                request,\r\n                args\r\n              );\r\n            }\r\n          }\r\n        }\r\n\r\n        // 2. Protección CSRF si está habilitada\r\n        if (config.enableCSRFProtection) {\r\n          const csrfHandler = (config.jwtRequiredRole === 'admin' \r\n            ? withAdminCSRFProtection() \r\n            : withCSRFProtection()\r\n          )(async (req: any) => ({ success: true }));\r\n\r\n          try {\r\n            await csrfHandler(request, ...args);\r\n            validationSummary.csrfValid = true;\r\n          } catch (error) {\r\n            validationSummary.csrfValid = false;\r\n            validationSummary.errors.push('CSRF validation failed');\r\n            \r\n            if (config.strictMode) {\r\n              return createErrorResponse(\r\n                'CSRF validation failed',\r\n                403,\r\n                request,\r\n                args\r\n              );\r\n            }\r\n          }\r\n        }\r\n\r\n        // 3. Rate Limiting si está habilitado\r\n        if (config.enableRateLimit && config.rateLimitType) {\r\n          const rateLimitHandler = withRateLimit(config.rateLimitType)(\r\n            async (req: any) => ({ success: true })\r\n          );\r\n\r\n          try {\r\n            await rateLimitHandler(request, ...args);\r\n            validationSummary.rateLimitPassed = true;\r\n          } catch (error) {\r\n            validationSummary.rateLimitPassed = false;\r\n            validationSummary.errors.push('Rate limit exceeded');\r\n            \r\n            return createErrorResponse(\r\n              'Rate limit exceeded',\r\n              429,\r\n              request,\r\n              args\r\n            );\r\n          }\r\n        }\r\n\r\n        // 4. Validación de seguridad específica si está habilitada\r\n        if (config.enableSecurityValidation && \r\n            config.securityPermissions && \r\n            config.securityOperation) {\r\n          const securityHandler = withSecurityValidation(\r\n            config.securityPermissions as any,\r\n            config.securityOperation\r\n          )(async (req: any) => ({ success: true }));\r\n\r\n          try {\r\n            await securityHandler(request, ...args);\r\n            validationSummary.securityValid = true;\r\n          } catch (error) {\r\n            validationSummary.securityValid = false;\r\n            validationSummary.errors.push('Security validation failed');\r\n            \r\n            if (config.strictMode) {\r\n              return createErrorResponse(\r\n                'Security validation failed',\r\n                403,\r\n                request,\r\n                args\r\n              );\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determinar validez general\r\n        validationSummary.overallValid = config.strictMode \r\n          ? validationSummary.errors.length === 0\r\n          : validationSummary.rateLimitPassed; // Rate limit es siempre crítico\r\n\r\n        // Añadir resumen de validación al request\r\n        (request as any).securityValidation = validationSummary;\r\n\r\n        // Ejecutar handler original si todas las validaciones pasaron\r\n        if (validationSummary.overallValid) {\r\n          return handler(request, ...args);\r\n        } else {\r\n          return createErrorResponse(\r\n            'Security validation failed',\r\n            403,\r\n            request,\r\n            args\r\n          );\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('[ENHANCED_SECURITY] Error en middleware:', error);\r\n        \r\n        return createErrorResponse(\r\n          'Internal security error',\r\n          500,\r\n          request,\r\n          args\r\n        );\r\n      }\r\n    };\r\n  };\r\n}\r\n\r\n/**\r\n * Crea una respuesta de error compatible con ambos tipos de router\r\n */\r\nfunction createErrorResponse(\r\n  message: string,\r\n  status: number,\r\n  request: NextRequest | NextApiRequest,\r\n  args: any[]\r\n) {\r\n  const errorResponse = {\r\n    success: false,\r\n    error: message,\r\n    timestamp: new Date().toISOString(),\r\n    security: true\r\n  };\r\n\r\n  if ('query' in request) {\r\n    // Pages Router\r\n    const res = args[0] as any;\r\n    return res.status(status).json(errorResponse);\r\n  } else {\r\n    // App Router\r\n    return new Response(JSON.stringify(errorResponse), {\r\n      status,\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n  }\r\n}\r\n\r\n// =====================================================\r\n// MIDDLEWARES PREDEFINIDOS\r\n// =====================================================\r\n\r\n/**\r\n * Middleware de seguridad para APIs de autenticación\r\n */\r\nexport function withAuthSecurity() {\r\n  return withEnhancedSecurity(SECURITY_PRESETS.auth);\r\n}\r\n\r\n/**\r\n * Middleware de seguridad para APIs admin\r\n */\r\nexport function withAdminSecurity() {\r\n  return withEnhancedSecurity(SECURITY_PRESETS.admin);\r\n}\r\n\r\n/**\r\n * Middleware de seguridad para APIs de productos\r\n */\r\nexport function withProductSecurity() {\r\n  return withEnhancedSecurity(SECURITY_PRESETS.products);\r\n}\r\n\r\n/**\r\n * Middleware de seguridad para APIs de pagos\r\n */\r\nexport function withPaymentSecurity() {\r\n  return withEnhancedSecurity(SECURITY_PRESETS.payments);\r\n}\r\n\r\n/**\r\n * Middleware de seguridad para APIs generales\r\n */\r\nexport function withGeneralSecurity() {\r\n  return withEnhancedSecurity(SECURITY_PRESETS.general);\r\n}\r\n\r\n/**\r\n * Middleware de seguridad personalizado\r\n */\r\nexport function withCustomSecurity(config: SecurityMiddlewareConfig) {\r\n  return withEnhancedSecurity(config);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]}