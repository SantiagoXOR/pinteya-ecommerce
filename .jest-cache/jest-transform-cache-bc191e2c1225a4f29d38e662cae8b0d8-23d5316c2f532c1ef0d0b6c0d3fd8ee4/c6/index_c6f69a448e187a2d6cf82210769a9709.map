{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\integrations\\analytics\\index.ts"],"sourcesContent":["/**\n * Sistema de Analytics para Pinteya E-commerce\n * Tracking de eventos, métricas de conversión y análisis de comportamiento\n */\n\nexport interface AnalyticsEvent {\n  event: string\n  category: string\n  action: string\n  label?: string\n  value?: number\n  userId?: string\n  sessionId: string\n  timestamp: number\n  page: string\n  userAgent: string\n  metadata?: Record<string, any>\n}\n\nexport interface ConversionMetrics {\n  cartAdditions: number\n  cartRemovals: number\n  checkoutStarts: number\n  checkoutCompletions: number\n  productViews: number\n  categoryViews: number\n  searchQueries: number\n  conversionRate: number\n  averageOrderValue: number\n  cartAbandonmentRate: number\n}\n\nexport interface UserInteraction {\n  type: 'click' | 'hover' | 'scroll' | 'focus' | 'input'\n  element: string\n  x: number\n  y: number\n  timestamp: number\n  page: string\n  sessionId: string\n}\n\nclass AnalyticsManager {\n  private events: AnalyticsEvent[] = []\n  private interactions: UserInteraction[] = []\n  private sessionId: string\n  private isEnabled: boolean = true\n  private isInitialized: boolean = false\n  private initializationPromise: Promise<void> | null = null\n\n  constructor() {\n    this.sessionId = this.generateSessionId()\n    // No inicializar automáticamente - usar lazy initialization\n  }\n\n  private generateSessionId(): string {\n    return `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n  }\n\n  private async ensureInitialized(): Promise<void> {\n    // Si ya está inicializado, no hacer nada\n    if (this.isInitialized) {\n      return\n    }\n\n    // Si ya hay una inicialización en progreso, esperar a que termine\n    if (this.initializationPromise) {\n      return this.initializationPromise\n    }\n\n    // Crear la promesa de inicialización\n    this.initializationPromise = this.initializeTracking()\n\n    try {\n      await this.initializationPromise\n    } catch (error) {\n      // En caso de error, limpiar la promesa para permitir reintentos\n      this.initializationPromise = null\n      throw error\n    }\n  }\n\n  private async initializeTracking(): Promise<void> {\n    if (typeof window === 'undefined') {\n      return\n    }\n    if (this.isInitialized) {\n      return\n    }\n\n    try {\n      // Esperar a que el DOM esté listo\n      if (document.readyState === 'loading') {\n        await new Promise(resolve => {\n          document.addEventListener('DOMContentLoaded', resolve, { once: true })\n        })\n      }\n\n      // Marcar como inicializado ANTES de hacer cualquier tracking\n      // para evitar recursión infinita\n      this.isInitialized = true\n\n      // Track page views automáticamente (ahora que ya está inicializado)\n      this.trackPageView()\n\n      // Track clicks globalmente\n      document.addEventListener('click', this.handleClick.bind(this))\n\n      // Track scroll events\n      let scrollTimeout: NodeJS.Timeout\n      document.addEventListener('scroll', () => {\n        clearTimeout(scrollTimeout)\n        scrollTimeout = setTimeout(() => {\n          this.trackInteraction('scroll', 'page', window.scrollX, window.scrollY)\n        }, 100)\n      })\n\n      // Track form interactions\n      document.addEventListener('input', this.handleInput.bind(this))\n      document.addEventListener('focus', this.handleFocus.bind(this))\n    } catch (error) {\n      console.warn('Error initializing analytics tracking:', error)\n      // En caso de error, resetear el estado de inicialización\n      this.isInitialized = false\n    }\n  }\n\n  private handleClick(event: MouseEvent): void {\n    const target = event.target as HTMLElement\n    const elementInfo = this.getElementInfo(target)\n\n    this.trackInteraction('click', elementInfo, event.clientX, event.clientY)\n\n    // Track specific e-commerce events\n    if (target.closest('[data-analytics=\"add-to-cart\"]')) {\n      this.trackEcommerceEvent('add_to_cart', {\n        productId: target.getAttribute('data-product-id'),\n        productName: target.getAttribute('data-product-name'),\n        price: target.getAttribute('data-product-price'),\n      })\n    }\n\n    if (target.closest('[data-analytics=\"remove-from-cart\"]')) {\n      this.trackEcommerceEvent('remove_from_cart', {\n        productId: target.getAttribute('data-product-id'),\n      })\n    }\n\n    if (target.closest('[data-analytics=\"checkout-start\"]')) {\n      this.trackEcommerceEvent('begin_checkout', {\n        cartValue: target.getAttribute('data-cart-value'),\n        itemCount: target.getAttribute('data-item-count'),\n      })\n    }\n  }\n\n  private handleInput(event: Event): void {\n    const target = event.target as HTMLElement\n    const elementInfo = this.getElementInfo(target)\n    this.trackInteraction('input', elementInfo, 0, 0)\n  }\n\n  private handleFocus(event: FocusEvent): void {\n    const target = event.target as HTMLElement\n    const elementInfo = this.getElementInfo(target)\n    this.trackInteraction('focus', elementInfo, 0, 0)\n  }\n\n  private getElementInfo(element: HTMLElement): string {\n    const id = element.id ? `#${element.id}` : ''\n\n    // Manejar className que puede ser string o DOMTokenList\n    let className = ''\n    if (element.className) {\n      // Si className es un DOMTokenList, convertir a string\n      const classNameValue = element.className as string | DOMTokenList\n      const classNameStr =\n        typeof classNameValue === 'string' ? classNameValue : classNameValue.toString()\n\n      // Solo procesar si hay clases\n      if (classNameStr.trim()) {\n        className = `.${classNameStr\n          .split(' ')\n          .filter(cls => cls.trim())\n          .join('.')}`\n      }\n    }\n\n    const tagName = element.tagName.toLowerCase()\n    const dataAnalytics = element.getAttribute('data-analytics') || ''\n\n    return `${tagName}${id}${className}${dataAnalytics ? `[${dataAnalytics}]` : ''}`\n  }\n\n  public async trackEvent(\n    event: string,\n    category: string,\n    action: string,\n    label?: string,\n    value?: number,\n    metadata?: Record<string, any>\n  ): Promise<void> {\n    if (!this.isEnabled) {\n      return\n    }\n\n    // Solo inicializar si no está ya inicializado para evitar recursión\n    if (!this.isInitialized) {\n      await this.ensureInitialized()\n    }\n\n    const analyticsEvent: AnalyticsEvent = {\n      event,\n      category,\n      action,\n      label,\n      value,\n      sessionId: this.sessionId,\n      timestamp: Date.now(),\n      page: typeof window !== 'undefined' ? window.location.pathname : '',\n      userAgent: typeof window !== 'undefined' ? window.navigator.userAgent : '',\n      metadata,\n    }\n\n    this.events.push(analyticsEvent)\n    this.sendToAnalytics(analyticsEvent)\n  }\n\n  public async trackEcommerceEvent(action: string, data: Record<string, any>): Promise<void> {\n    await this.trackEvent('ecommerce', 'shop', action, undefined, undefined, data)\n  }\n\n  public async trackPageView(page?: string): Promise<void> {\n    const currentPage = page || (typeof window !== 'undefined' ? window.location.pathname : '')\n    await this.trackEvent('page_view', 'navigation', 'view', currentPage)\n  }\n\n  public async trackInteraction(\n    type: UserInteraction['type'],\n    element: string,\n    x: number,\n    y: number\n  ): Promise<void> {\n    if (!this.isEnabled) {\n      return\n    }\n\n    // Solo inicializar si no está ya inicializado para evitar recursión\n    if (!this.isInitialized) {\n      await this.ensureInitialized()\n    }\n\n    const interaction: UserInteraction = {\n      type,\n      element,\n      x,\n      y,\n      timestamp: Date.now(),\n      page: typeof window !== 'undefined' ? window.location.pathname : '',\n      sessionId: this.sessionId,\n    }\n\n    this.interactions.push(interaction)\n  }\n\n  public async trackConversion(\n    type: string,\n    value?: number,\n    metadata?: Record<string, any>\n  ): Promise<void> {\n    await this.trackEvent('conversion', 'ecommerce', type, undefined, value, metadata)\n  }\n\n  private sendToAnalytics(event: AnalyticsEvent): void {\n    // Solo ejecutar en el cliente\n    if (typeof window === 'undefined') {\n      return\n    }\n\n    // Enviar a Google Analytics 4\n    if ((window as any).gtag) {\n      try {\n        ;(window as any).gtag('event', event.action, {\n          event_category: event.category,\n          event_label: event.label,\n          value: event.value,\n          custom_parameter_session_id: event.sessionId,\n          ...event.metadata,\n        })\n      } catch (error) {\n        console.warn('Error sending event to GA:', error)\n      }\n    }\n\n    // Enviar a nuestro endpoint interno con mejor manejo de errores\n    this.sendToInternalAPI(event)\n  }\n\n  private eventQueue: AnalyticsEvent[] = []\n  private isProcessingQueue: boolean = false\n  private queueTimeout: NodeJS.Timeout | null = null\n\n  private async sendToInternalAPI(event: AnalyticsEvent): Promise<void> {\n    // Agregar evento a la cola en lugar de enviarlo inmediatamente\n    this.eventQueue.push(event)\n\n    // Procesar la cola con debounce\n    this.debouncedProcessQueue()\n  }\n\n  private debouncedProcessQueue(): void {\n    if (this.queueTimeout) {\n      clearTimeout(this.queueTimeout)\n    }\n\n    this.queueTimeout = setTimeout(() => {\n      this.processEventQueue()\n    }, 100) // Debounce de 100ms\n  }\n\n  private async processEventQueue(): Promise<void> {\n    if (this.isProcessingQueue || this.eventQueue.length === 0) {\n      return\n    }\n    if (typeof window === 'undefined') {\n      return\n    }\n\n    this.isProcessingQueue = true\n\n    try {\n      // Verificar que el documento está listo\n      if (document.readyState === 'loading') {\n        await new Promise(resolve => {\n          document.addEventListener('DOMContentLoaded', resolve, { once: true })\n        })\n      }\n\n      // Procesar eventos en lotes\n      const eventsToProcess = [...this.eventQueue]\n      this.eventQueue = []\n\n      // Enviar eventos en lotes de 5 para evitar rate limiting\n      const batchSize = 5\n      for (let i = 0; i < eventsToProcess.length; i += batchSize) {\n        const batch = eventsToProcess.slice(i, i + batchSize)\n\n        for (const event of batch) {\n          try {\n            const response = await fetch('/api/analytics/events', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify(event),\n            })\n\n            if (!response.ok) {\n              throw new Error(`HTTP error! status: ${response.status}`)\n            }\n          } catch (error) {\n            // En caso de error, almacenar el evento para reintento\n            this.storeEventForRetry(event)\n          }\n        }\n\n        // Pausa entre lotes para evitar rate limiting\n        if (i + batchSize < eventsToProcess.length) {\n          await new Promise(resolve => setTimeout(resolve, 50))\n        }\n      }\n    } catch (error) {\n      if (process.env.NODE_ENV === 'development') {\n        console.warn('Analytics queue processing error (non-critical):', error)\n      }\n    } finally {\n      this.isProcessingQueue = false\n    }\n  }\n\n  private storeEventForRetry(event: AnalyticsEvent): void {\n    try {\n      if (typeof window !== 'undefined' && window.localStorage) {\n        // Usar parsing seguro para evitar errores JSON\n        const stored = localStorage.getItem('analytics_failed_events') || '[]'\n        let failedEvents: AnalyticsEvent[] = []\n\n        try {\n          failedEvents = JSON.parse(stored)\n          // Verificar que sea un array válido\n          if (!Array.isArray(failedEvents)) {\n            failedEvents = []\n          }\n        } catch (parseError) {\n          console.warn('Error parsing analytics failed events, resetting:', parseError)\n          failedEvents = []\n        }\n\n        failedEvents.push(event)\n\n        // Limitar a los últimos 50 eventos fallidos\n        if (failedEvents.length > 50) {\n          failedEvents.splice(0, failedEvents.length - 50)\n        }\n\n        localStorage.setItem('analytics_failed_events', JSON.stringify(failedEvents))\n      }\n    } catch (error) {\n      // Ignorar errores de localStorage\n      console.warn('Error storing analytics event for retry:', error)\n    }\n  }\n\n  public getEvents(): AnalyticsEvent[] {\n    return [...this.events]\n  }\n\n  public getInteractions(): UserInteraction[] {\n    return [...this.interactions]\n  }\n\n  public getSessionId(): string {\n    return this.sessionId\n  }\n\n  public clearData(): void {\n    this.events = []\n    this.interactions = []\n    this.eventQueue = []\n\n    // Limpiar timeouts\n    if (this.queueTimeout) {\n      clearTimeout(this.queueTimeout)\n      this.queueTimeout = null\n    }\n  }\n\n  public disable(): void {\n    this.isEnabled = false\n  }\n\n  public enable(): void {\n    this.isEnabled = true\n  }\n\n  public async initialize(): Promise<void> {\n    await this.ensureInitialized()\n  }\n\n  public getConversionMetrics(): ConversionMetrics {\n    const ecommerceEvents = this.events.filter(e => e.category === 'shop')\n\n    const cartAdditions = ecommerceEvents.filter(e => e.action === 'add_to_cart').length\n    const cartRemovals = ecommerceEvents.filter(e => e.action === 'remove_from_cart').length\n    const checkoutStarts = ecommerceEvents.filter(e => e.action === 'begin_checkout').length\n    const checkoutCompletions = ecommerceEvents.filter(e => e.action === 'purchase').length\n    const productViews = this.events.filter(\n      e => e.category === 'navigation' && e.label?.includes('/product/')\n    ).length\n    const categoryViews = this.events.filter(\n      e => e.category === 'navigation' && e.label?.includes('/category/')\n    ).length\n    const searchQueries = ecommerceEvents.filter(e => e.action === 'search').length\n\n    const conversionRate = checkoutStarts > 0 ? (checkoutCompletions / checkoutStarts) * 100 : 0\n    const cartAbandonmentRate =\n      cartAdditions > 0 ? ((cartAdditions - checkoutCompletions) / cartAdditions) * 100 : 0\n\n    // Calcular AOV desde los eventos de compra\n    const purchaseEvents = ecommerceEvents.filter(e => e.action === 'purchase')\n    const totalValue = purchaseEvents.reduce((sum, event) => sum + (event.value || 0), 0)\n    const averageOrderValue = purchaseEvents.length > 0 ? totalValue / purchaseEvents.length : 0\n\n    return {\n      cartAdditions,\n      cartRemovals,\n      checkoutStarts,\n      checkoutCompletions,\n      productViews,\n      categoryViews,\n      searchQueries,\n      conversionRate,\n      averageOrderValue,\n      cartAbandonmentRate,\n    }\n  }\n}\n\n// Singleton instance\nexport const analytics = new AnalyticsManager()\n\n// Utility functions con manejo de errores\nexport const trackEvent = async (\n  event: string,\n  category: string,\n  action: string,\n  label?: string,\n  value?: number,\n  metadata?: Record<string, any>\n): Promise<void> => {\n  try {\n    await optimizedAnalytics.trackEvent(event, category, action, label, value, metadata)\n  } catch (error) {\n    if (process.env.NODE_ENV === 'development') {\n      console.warn('Analytics trackEvent error:', error)\n    }\n  }\n}\n\nexport const trackEcommerceEvent = async (\n  action: string,\n  data: Record<string, any>\n): Promise<void> => {\n  try {\n    await analytics.trackEcommerceEvent(action, data)\n  } catch (error) {\n    if (process.env.NODE_ENV === 'development') {\n      console.warn('Analytics trackEcommerceEvent error:', error)\n    }\n  }\n}\n\nexport const trackPageView = async (page?: string): Promise<void> => {\n  try {\n    await analytics.trackPageView(page)\n  } catch (error) {\n    if (process.env.NODE_ENV === 'development') {\n      console.warn('Analytics trackPageView error:', error)\n    }\n  }\n}\n\nexport const trackConversion = async (\n  type: string,\n  value?: number,\n  metadata?: Record<string, any>\n): Promise<void> => {\n  try {\n    await analytics.trackConversion(type, value, metadata)\n  } catch (error) {\n    if (process.env.NODE_ENV === 'development') {\n      console.warn('Analytics trackConversion error:', error)\n    }\n  }\n}\n\nexport const initializeAnalytics = async (): Promise<void> => {\n  try {\n    await analytics.initialize()\n  } catch (error) {\n    if (process.env.NODE_ENV === 'development') {\n      console.warn('Analytics initialization error:', error)\n    }\n  }\n}\n"],"names":["analytics","initializeAnalytics","trackConversion","trackEcommerceEvent","trackEvent","trackPageView","AnalyticsManager","events","interactions","isEnabled","isInitialized","initializationPromise","eventQueue","isProcessingQueue","queueTimeout","sessionId","generateSessionId","Date","now","Math","random","toString","substr","ensureInitialized","initializeTracking","error","window","document","readyState","Promise","resolve","addEventListener","once","handleClick","bind","scrollTimeout","clearTimeout","setTimeout","trackInteraction","scrollX","scrollY","handleInput","handleFocus","console","warn","event","target","elementInfo","getElementInfo","clientX","clientY","closest","productId","getAttribute","productName","price","cartValue","itemCount","element","id","className","classNameValue","classNameStr","trim","split","filter","cls","join","tagName","toLowerCase","dataAnalytics","category","action","label","value","metadata","analyticsEvent","timestamp","page","location","pathname","userAgent","navigator","push","sendToAnalytics","data","undefined","currentPage","type","x","y","interaction","gtag","event_category","event_label","custom_parameter_session_id","sendToInternalAPI","debouncedProcessQueue","processEventQueue","length","eventsToProcess","batchSize","i","batch","slice","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","storeEventForRetry","process","env","NODE_ENV","localStorage","stored","getItem","failedEvents","parse","Array","isArray","parseError","splice","setItem","getEvents","getInteractions","getSessionId","clearData","disable","enable","initialize","getConversionMetrics","ecommerceEvents","e","cartAdditions","cartRemovals","checkoutStarts","checkoutCompletions","productViews","includes","categoryViews","searchQueries","conversionRate","cartAbandonmentRate","purchaseEvents","totalValue","reduce","sum","averageOrderValue","optimizedAnalytics"],"mappings":"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"}