{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useAnalytics.ts"],"sourcesContent":["/**\n * Hook personalizado para Analytics en Pinteya E-commerce\n * Proporciona funciones de tracking y métricas fáciles de usar\n */\n\nimport { useEffect, useCallback, useState } from 'react'\nimport { useAuth } from './useAuth'\nimport { usePathname } from 'next/navigation'\nimport {\n  analytics,\n  AnalyticsEvent,\n  ConversionMetrics,\n  UserInteraction,\n} from '@/lib/integrations/analytics'\n\nexport interface UseAnalyticsReturn {\n  // Tracking functions\n  trackEvent: (\n    event: string,\n    category: string,\n    action: string,\n    label?: string,\n    value?: number,\n    metadata?: Record<string, any>\n  ) => void\n  trackEcommerceEvent: (action: string, data: Record<string, any>) => void\n  trackPageView: (page?: string) => void\n  trackConversion: (type: string, value?: number, metadata?: Record<string, any>) => void\n  trackProductView: (\n    productId: string,\n    productName: string,\n    category: string,\n    price: number\n  ) => void\n  trackAddToCart: (productId: string, productName: string, price: number, quantity: number) => void\n  trackRemoveFromCart: (productId: string, productName: string) => void\n  trackCheckoutStart: (cartValue: number, itemCount: number) => void\n  trackPurchase: (orderId: string, value: number, items: any[]) => void\n  trackSearch: (query: string, resultsCount: number) => void\n\n  // Data retrieval\n  getEvents: () => AnalyticsEvent[]\n  getInteractions: () => UserInteraction[]\n  getConversionMetrics: () => ConversionMetrics\n  getSessionId: () => string\n\n  // State\n  isEnabled: boolean\n  setEnabled: (enabled: boolean) => void\n\n  // Real-time metrics\n  sessionMetrics: ConversionMetrics\n  refreshMetrics: () => void\n}\n\nexport const useAnalytics = (): UseAnalyticsReturn => {\n  const { user } = useAuth()\n  const pathname = usePathname()\n  const [isEnabled, setIsEnabled] = useState(true)\n  const [sessionMetrics, setSessionMetrics] = useState<ConversionMetrics>({\n    cartAdditions: 0,\n    cartRemovals: 0,\n    checkoutStarts: 0,\n    checkoutCompletions: 0,\n    productViews: 0,\n    categoryViews: 0,\n    searchQueries: 0,\n    conversionRate: 0,\n    averageOrderValue: 0,\n    cartAbandonmentRate: 0,\n  })\n\n  // Track page views automáticamente cuando cambia la ruta\n  useEffect(() => {\n    if (isEnabled) {\n      analytics.trackPageView(pathname)\n    }\n  }, [pathname, isEnabled])\n\n  // Actualizar métricas periódicamente\n  useEffect(() => {\n    const updateMetrics = () => {\n      setSessionMetrics(analytics.getConversionMetrics())\n    }\n\n    updateMetrics()\n    const interval = setInterval(updateMetrics, 5000) // Actualizar cada 5 segundos\n\n    return () => clearInterval(interval)\n  }, [])\n\n  // Habilitar/deshabilitar analytics\n  useEffect(() => {\n    if (isEnabled) {\n      analytics.enable()\n    } else {\n      analytics.disable()\n    }\n  }, [isEnabled])\n\n  const trackEvent = useCallback(\n    (\n      event: string,\n      category: string,\n      action: string,\n      label?: string,\n      value?: number,\n      metadata?: Record<string, any>\n    ) => {\n      if (!isEnabled) {\n        return\n      }\n\n      const enrichedMetadata = {\n        ...metadata,\n        userId: user?.id,\n        userEmail: user?.emailAddresses?.[0]?.emailAddress,\n      }\n\n      analytics.trackEvent(event, category, action, label, value, enrichedMetadata)\n    },\n    [isEnabled, user]\n  )\n\n  const trackEcommerceEvent = useCallback(\n    (action: string, data: Record<string, any>) => {\n      if (!isEnabled) {\n        return\n      }\n\n      const enrichedData = {\n        ...data,\n        userId: user?.id,\n        userEmail: user?.emailAddresses?.[0]?.emailAddress,\n      }\n\n      analytics.trackEcommerceEvent(action, enrichedData)\n    },\n    [isEnabled, user]\n  )\n\n  const trackPageView = useCallback(\n    (page?: string) => {\n      if (!isEnabled) {\n        return\n      }\n      analytics.trackPageView(page)\n    },\n    [isEnabled]\n  )\n\n  const trackConversion = useCallback(\n    (type: string, value?: number, metadata?: Record<string, any>) => {\n      if (!isEnabled) {\n        return\n      }\n\n      const enrichedMetadata = {\n        ...metadata,\n        userId: user?.id,\n      }\n\n      analytics.trackConversion(type, value, enrichedMetadata)\n    },\n    [isEnabled, user]\n  )\n\n  // Funciones específicas para e-commerce\n  const trackProductView = useCallback(\n    (productId: string, productName: string, category: string, price: number) => {\n      trackEcommerceEvent('view_item', {\n        item_id: productId,\n        item_name: productName,\n        item_category: category,\n        price: price,\n        currency: 'ARS',\n      })\n    },\n    [trackEcommerceEvent]\n  )\n\n  const trackAddToCart = useCallback(\n    (productId: string, productName: string, price: number, quantity: number) => {\n      trackEcommerceEvent('add_to_cart', {\n        item_id: productId,\n        item_name: productName,\n        price: price,\n        quantity: quantity,\n        currency: 'ARS',\n        value: price * quantity,\n      })\n    },\n    [trackEcommerceEvent]\n  )\n\n  const trackRemoveFromCart = useCallback(\n    (productId: string, productName: string) => {\n      trackEcommerceEvent('remove_from_cart', {\n        item_id: productId,\n        item_name: productName,\n      })\n    },\n    [trackEcommerceEvent]\n  )\n\n  const trackCheckoutStart = useCallback(\n    (cartValue: number, itemCount: number) => {\n      trackEcommerceEvent('begin_checkout', {\n        value: cartValue,\n        currency: 'ARS',\n        num_items: itemCount,\n      })\n    },\n    [trackEcommerceEvent]\n  )\n\n  const trackPurchase = useCallback(\n    (orderId: string, value: number, items: any[]) => {\n      trackEcommerceEvent('purchase', {\n        transaction_id: orderId,\n        value: value,\n        currency: 'ARS',\n        items: items,\n      })\n\n      // También trackear como conversión\n      trackConversion('purchase', value, {\n        orderId,\n        itemCount: items.length,\n      })\n    },\n    [trackEcommerceEvent, trackConversion]\n  )\n\n  const trackSearch = useCallback(\n    (query: string, resultsCount: number) => {\n      trackEcommerceEvent('search', {\n        search_term: query,\n        results_count: resultsCount,\n      })\n    },\n    [trackEcommerceEvent]\n  )\n\n  const getEvents = useCallback(() => {\n    return analytics.getEvents()\n  }, [])\n\n  const getInteractions = useCallback(() => {\n    return analytics.getInteractions()\n  }, [])\n\n  const getConversionMetrics = useCallback(() => {\n    return analytics.getConversionMetrics()\n  }, [])\n\n  const getSessionId = useCallback(() => {\n    return analytics.getSessionId()\n  }, [])\n\n  const refreshMetrics = useCallback(() => {\n    setSessionMetrics(analytics.getConversionMetrics())\n  }, [])\n\n  const setEnabled = useCallback((enabled: boolean) => {\n    setIsEnabled(enabled)\n  }, [])\n\n  return {\n    // Tracking functions\n    trackEvent,\n    trackEcommerceEvent,\n    trackPageView,\n    trackConversion,\n    trackProductView,\n    trackAddToCart,\n    trackRemoveFromCart,\n    trackCheckoutStart,\n    trackPurchase,\n    trackSearch,\n\n    // Data retrieval\n    getEvents,\n    getInteractions,\n    getConversionMetrics,\n    getSessionId,\n\n    // State\n    isEnabled,\n    setEnabled,\n\n    // Real-time metrics\n    sessionMetrics,\n    refreshMetrics,\n  }\n}\n\n// Hook específico para métricas en tiempo real\nexport const useRealTimeMetrics = (refreshInterval: number = 5000) => {\n  const [metrics, setMetrics] = useState<ConversionMetrics>({\n    cartAdditions: 0,\n    cartRemovals: 0,\n    checkoutStarts: 0,\n    checkoutCompletions: 0,\n    productViews: 0,\n    categoryViews: 0,\n    searchQueries: 0,\n    conversionRate: 0,\n    averageOrderValue: 0,\n    cartAbandonmentRate: 0,\n  })\n\n  useEffect(() => {\n    const updateMetrics = () => {\n      setMetrics(analytics.getConversionMetrics())\n    }\n\n    updateMetrics()\n    const interval = setInterval(updateMetrics, refreshInterval)\n\n    return () => clearInterval(interval)\n  }, [refreshInterval])\n\n  return metrics\n}\n\n// Hook para tracking automático de componentes\nexport const useComponentTracking = (componentName: string, trackMount: boolean = true) => {\n  const { trackEvent } = useOptimizedAnalytics()\n\n  useEffect(() => {\n    if (trackMount) {\n      trackEvent('component_mount', 'ui', 'mount', componentName)\n    }\n\n    return () => {\n      trackEvent('component_unmount', 'ui', 'unmount', componentName)\n    }\n  }, [componentName, trackMount, trackEvent])\n\n  const trackComponentEvent = useCallback(\n    (action: string, metadata?: Record<string, any>) => {\n      trackEvent('component_interaction', 'ui', action, componentName, undefined, metadata)\n    },\n    [componentName, trackEvent]\n  )\n\n  return { trackComponentEvent }\n}\n"],"names":["useAnalytics","useComponentTracking","useRealTimeMetrics","user","useAuth","pathname","usePathname","isEnabled","setIsEnabled","useState","sessionMetrics","setSessionMetrics","cartAdditions","cartRemovals","checkoutStarts","checkoutCompletions","productViews","categoryViews","searchQueries","conversionRate","averageOrderValue","cartAbandonmentRate","useEffect","analytics","trackPageView","updateMetrics","getConversionMetrics","interval","setInterval","clearInterval","enable","disable","trackEvent","useCallback","event","category","action","label","value","metadata","enrichedMetadata","userId","id","userEmail","emailAddresses","emailAddress","trackEcommerceEvent","data","enrichedData","page","trackConversion","type","trackProductView","productId","productName","price","item_id","item_name","item_category","currency","trackAddToCart","quantity","trackRemoveFromCart","trackCheckoutStart","cartValue","itemCount","num_items","trackPurchase","orderId","items","transaction_id","length","trackSearch","query","resultsCount","search_term","results_count","getEvents","getInteractions","getSessionId","refreshMetrics","setEnabled","enabled","refreshInterval","metrics","setMetrics","componentName","trackMount","useOptimizedAnalytics","trackComponentEvent","undefined"],"mappings":"AAAA;;;CAGC;;;;;;;;;;;QAoDYA;eAAAA;;QAgRAC;eAAAA;;QA7BAC;eAAAA;;;uBArSoC;yBACzB;4BACI;2BAMrB;AA0CA,MAAMF,eAAe;IAC1B,MAAM,EAAEG,IAAI,EAAE,GAAGC,IAAAA,gBAAO;IACxB,MAAMC,WAAWC,IAAAA,uBAAW;IAC5B,MAAM,CAACC,WAAWC,aAAa,GAAGC,IAAAA,eAAQ,EAAC;IAC3C,MAAM,CAACC,gBAAgBC,kBAAkB,GAAGF,IAAAA,eAAQ,EAAoB;QACtEG,eAAe;QACfC,cAAc;QACdC,gBAAgB;QAChBC,qBAAqB;QACrBC,cAAc;QACdC,eAAe;QACfC,eAAe;QACfC,gBAAgB;QAChBC,mBAAmB;QACnBC,qBAAqB;IACvB;IAEA,yDAAyD;IACzDC,IAAAA,gBAAS,EAAC;QACR,IAAIf,WAAW;YACbgB,oBAAS,CAACC,aAAa,CAACnB;QAC1B;IACF,GAAG;QAACA;QAAUE;KAAU;IAExB,qCAAqC;IACrCe,IAAAA,gBAAS,EAAC;QACR,MAAMG,gBAAgB;YACpBd,kBAAkBY,oBAAS,CAACG,oBAAoB;QAClD;QAEAD;QACA,MAAME,WAAWC,YAAYH,eAAe,MAAM,6BAA6B;;QAE/E,OAAO,IAAMI,cAAcF;IAC7B,GAAG,EAAE;IAEL,mCAAmC;IACnCL,IAAAA,gBAAS,EAAC;QACR,IAAIf,WAAW;YACbgB,oBAAS,CAACO,MAAM;QAClB,OAAO;YACLP,oBAAS,CAACQ,OAAO;QACnB;IACF,GAAG;QAACxB;KAAU;IAEd,MAAMyB,aAAaC,IAAAA,kBAAW,EAC5B,CACEC,OACAC,UACAC,QACAC,OACAC,OACAC;QAEA,IAAI,CAAChC,WAAW;YACd;QACF;QAEA,MAAMiC,mBAAmB;YACvB,GAAGD,QAAQ;YACXE,QAAQtC,MAAMuC;YACdC,WAAWxC,MAAMyC,gBAAgB,CAAC,EAAE,EAAEC;QACxC;QAEAtB,oBAAS,CAACS,UAAU,CAACE,OAAOC,UAAUC,QAAQC,OAAOC,OAAOE;IAC9D,GACA;QAACjC;QAAWJ;KAAK;IAGnB,MAAM2C,sBAAsBb,IAAAA,kBAAW,EACrC,CAACG,QAAgBW;QACf,IAAI,CAACxC,WAAW;YACd;QACF;QAEA,MAAMyC,eAAe;YACnB,GAAGD,IAAI;YACPN,QAAQtC,MAAMuC;YACdC,WAAWxC,MAAMyC,gBAAgB,CAAC,EAAE,EAAEC;QACxC;QAEAtB,oBAAS,CAACuB,mBAAmB,CAACV,QAAQY;IACxC,GACA;QAACzC;QAAWJ;KAAK;IAGnB,MAAMqB,gBAAgBS,IAAAA,kBAAW,EAC/B,CAACgB;QACC,IAAI,CAAC1C,WAAW;YACd;QACF;QACAgB,oBAAS,CAACC,aAAa,CAACyB;IAC1B,GACA;QAAC1C;KAAU;IAGb,MAAM2C,kBAAkBjB,IAAAA,kBAAW,EACjC,CAACkB,MAAcb,OAAgBC;QAC7B,IAAI,CAAChC,WAAW;YACd;QACF;QAEA,MAAMiC,mBAAmB;YACvB,GAAGD,QAAQ;YACXE,QAAQtC,MAAMuC;QAChB;QAEAnB,oBAAS,CAAC2B,eAAe,CAACC,MAAMb,OAAOE;IACzC,GACA;QAACjC;QAAWJ;KAAK;IAGnB,wCAAwC;IACxC,MAAMiD,mBAAmBnB,IAAAA,kBAAW,EAClC,CAACoB,WAAmBC,aAAqBnB,UAAkBoB;QACzDT,oBAAoB,aAAa;YAC/BU,SAASH;YACTI,WAAWH;YACXI,eAAevB;YACfoB,OAAOA;YACPI,UAAU;QACZ;IACF,GACA;QAACb;KAAoB;IAGvB,MAAMc,iBAAiB3B,IAAAA,kBAAW,EAChC,CAACoB,WAAmBC,aAAqBC,OAAeM;QACtDf,oBAAoB,eAAe;YACjCU,SAASH;YACTI,WAAWH;YACXC,OAAOA;YACPM,UAAUA;YACVF,UAAU;YACVrB,OAAOiB,QAAQM;QACjB;IACF,GACA;QAACf;KAAoB;IAGvB,MAAMgB,sBAAsB7B,IAAAA,kBAAW,EACrC,CAACoB,WAAmBC;QAClBR,oBAAoB,oBAAoB;YACtCU,SAASH;YACTI,WAAWH;QACb;IACF,GACA;QAACR;KAAoB;IAGvB,MAAMiB,qBAAqB9B,IAAAA,kBAAW,EACpC,CAAC+B,WAAmBC;QAClBnB,oBAAoB,kBAAkB;YACpCR,OAAO0B;YACPL,UAAU;YACVO,WAAWD;QACb;IACF,GACA;QAACnB;KAAoB;IAGvB,MAAMqB,gBAAgBlC,IAAAA,kBAAW,EAC/B,CAACmC,SAAiB9B,OAAe+B;QAC/BvB,oBAAoB,YAAY;YAC9BwB,gBAAgBF;YAChB9B,OAAOA;YACPqB,UAAU;YACVU,OAAOA;QACT;QAEA,mCAAmC;QACnCnB,gBAAgB,YAAYZ,OAAO;YACjC8B;YACAH,WAAWI,MAAME,MAAM;QACzB;IACF,GACA;QAACzB;QAAqBI;KAAgB;IAGxC,MAAMsB,cAAcvC,IAAAA,kBAAW,EAC7B,CAACwC,OAAeC;QACd5B,oBAAoB,UAAU;YAC5B6B,aAAaF;YACbG,eAAeF;QACjB;IACF,GACA;QAAC5B;KAAoB;IAGvB,MAAM+B,YAAY5C,IAAAA,kBAAW,EAAC;QAC5B,OAAOV,oBAAS,CAACsD,SAAS;IAC5B,GAAG,EAAE;IAEL,MAAMC,kBAAkB7C,IAAAA,kBAAW,EAAC;QAClC,OAAOV,oBAAS,CAACuD,eAAe;IAClC,GAAG,EAAE;IAEL,MAAMpD,uBAAuBO,IAAAA,kBAAW,EAAC;QACvC,OAAOV,oBAAS,CAACG,oBAAoB;IACvC,GAAG,EAAE;IAEL,MAAMqD,eAAe9C,IAAAA,kBAAW,EAAC;QAC/B,OAAOV,oBAAS,CAACwD,YAAY;IAC/B,GAAG,EAAE;IAEL,MAAMC,iBAAiB/C,IAAAA,kBAAW,EAAC;QACjCtB,kBAAkBY,oBAAS,CAACG,oBAAoB;IAClD,GAAG,EAAE;IAEL,MAAMuD,aAAahD,IAAAA,kBAAW,EAAC,CAACiD;QAC9B1E,aAAa0E;IACf,GAAG,EAAE;IAEL,OAAO;QACL,qBAAqB;QACrBlD;QACAc;QACAtB;QACA0B;QACAE;QACAQ;QACAE;QACAC;QACAI;QACAK;QAEA,iBAAiB;QACjBK;QACAC;QACApD;QACAqD;QAEA,QAAQ;QACRxE;QACA0E;QAEA,oBAAoB;QACpBvE;QACAsE;IACF;AACF;AAGO,MAAM9E,qBAAqB,CAACiF,kBAA0B,IAAI;IAC/D,MAAM,CAACC,SAASC,WAAW,GAAG5E,IAAAA,eAAQ,EAAoB;QACxDG,eAAe;QACfC,cAAc;QACdC,gBAAgB;QAChBC,qBAAqB;QACrBC,cAAc;QACdC,eAAe;QACfC,eAAe;QACfC,gBAAgB;QAChBC,mBAAmB;QACnBC,qBAAqB;IACvB;IAEAC,IAAAA,gBAAS,EAAC;QACR,MAAMG,gBAAgB;YACpB4D,WAAW9D,oBAAS,CAACG,oBAAoB;QAC3C;QAEAD;QACA,MAAME,WAAWC,YAAYH,eAAe0D;QAE5C,OAAO,IAAMtD,cAAcF;IAC7B,GAAG;QAACwD;KAAgB;IAEpB,OAAOC;AACT;AAGO,MAAMnF,uBAAuB,CAACqF,eAAuBC,aAAsB,IAAI;IACpF,MAAM,EAAEvD,UAAU,EAAE,GAAGwD;IAEvBlE,IAAAA,gBAAS,EAAC;QACR,IAAIiE,YAAY;YACdvD,WAAW,mBAAmB,MAAM,SAASsD;QAC/C;QAEA,OAAO;YACLtD,WAAW,qBAAqB,MAAM,WAAWsD;QACnD;IACF,GAAG;QAACA;QAAeC;QAAYvD;KAAW;IAE1C,MAAMyD,sBAAsBxD,IAAAA,kBAAW,EACrC,CAACG,QAAgBG;QACfP,WAAW,yBAAyB,MAAMI,QAAQkD,eAAeI,WAAWnD;IAC9E,GACA;QAAC+C;QAAetD;KAAW;IAG7B,OAAO;QAAEyD;IAAoB;AAC/B"}