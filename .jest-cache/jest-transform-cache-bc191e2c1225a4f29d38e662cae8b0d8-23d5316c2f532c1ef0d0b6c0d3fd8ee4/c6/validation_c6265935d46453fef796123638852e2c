5c82af60009f6a7bedcb84cf458dbfc4
// =====================================================
// UTILIDADES: VALIDACIÓN DE DATOS
// Descripción: Funciones para validar datos de logística
// Basado en: Zod + patrones enterprise
// =====================================================
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get addressSchema () {
        return addressSchema;
    },
    get sanitizePhoneNumber () {
        return sanitizePhoneNumber;
    },
    get sanitizePostalCode () {
        return sanitizePostalCode;
    },
    get sanitizeString () {
        return sanitizeString;
    },
    get sanitizeTrackingNumber () {
        return sanitizeTrackingNumber;
    },
    get shipmentSchema () {
        return shipmentSchema;
    },
    get validateAddress () {
        return validateAddress;
    },
    get validateCoordinates () {
        return validateCoordinates;
    },
    get validateDNI () {
        return validateDNI;
    },
    get validateDeliveryDate () {
        return validateDeliveryDate;
    },
    get validateDimensions () {
        return validateDimensions;
    },
    get validateEmail () {
        return validateEmail;
    },
    get validatePackageValue () {
        return validatePackageValue;
    },
    get validatePhoneNumber () {
        return validatePhoneNumber;
    },
    get validatePostalCode () {
        return validatePostalCode;
    },
    get validateShipment () {
        return validateShipment;
    },
    get validateShippingCost () {
        return validateShippingCost;
    },
    get validateTrackingNumber () {
        return validateTrackingNumber;
    },
    get validateWeight () {
        return validateWeight;
    }
});
const _zod = require("zod");
const addressSchema = _zod.z.object({
    street: _zod.z.string().min(1, 'La calle es requerida'),
    number: _zod.z.string().min(1, 'El número es requerido'),
    apartment: _zod.z.string().optional(),
    neighborhood: _zod.z.string().min(1, 'El barrio es requerido'),
    city: _zod.z.string().min(1, 'La ciudad es requerida'),
    state: _zod.z.string().min(1, 'La provincia es requerida'),
    postal_code: _zod.z.string().min(4, 'El código postal debe tener al menos 4 dígitos'),
    country: _zod.z.string().default('AR'),
    latitude: _zod.z.number().optional(),
    longitude: _zod.z.number().optional(),
    reference: _zod.z.string().optional()
});
const shipmentSchema = _zod.z.object({
    tracking_number: _zod.z.string().min(1, 'El número de tracking es requerido'),
    courier_id: _zod.z.number().min(1, 'El courier es requerido'),
    service_type: _zod.z.enum([
        'standard',
        'express',
        'next_day',
        'same_day'
    ]),
    origin_address: addressSchema,
    destination_address: addressSchema,
    package_details: _zod.z.object({
        weight: _zod.z.number().min(0.1, 'El peso debe ser mayor a 0'),
        dimensions: _zod.z.object({
            length: _zod.z.number().min(1, 'El largo debe ser mayor a 0'),
            width: _zod.z.number().min(1, 'El ancho debe ser mayor a 0'),
            height: _zod.z.number().min(1, 'La altura debe ser mayor a 0')
        }),
        declared_value: _zod.z.number().min(0, 'El valor declarado debe ser mayor o igual a 0'),
        description: _zod.z.string().min(1, 'La descripción es requerida')
    }),
    estimated_delivery: _zod.z.string().optional(),
    special_instructions: _zod.z.string().optional()
});
function validateEmail(email) {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
}
function validatePhoneNumber(phone) {
    // Formato argentino: +54 9 351 123 4567, +54 351 123-4567, 351 123 4567, etc.
    // Limpiar el teléfono de espacios, guiones y paréntesis
    const cleanPhone = phone.replace(/[\s\-\(\)]/g, '');
    // Patrones aceptados:
    // +54351234567 (con código país)
    // +549351234567 (con código país y 9)
    // 351234567 (sin código país)
    const phoneRegex = /^(\+54(9)?)?\d{10}$|^\d{10}$/;
    return phoneRegex.test(cleanPhone) && cleanPhone.length >= 10;
}
function validateDNI(dni) {
    // Limpiar el DNI de espacios, guiones y puntos
    const cleanDNI = dni.replace(/[\s\-\.]/g, '');
    // Patrones aceptados:
    // DNI: 8 dígitos (12345678)
    // CUIT: 11 dígitos (20123456789)
    const dniRegex = /^\d{8}$/;
    const cuitRegex = /^\d{11}$/;
    if (dniRegex.test(cleanDNI)) {
        // Validar DNI (8 dígitos)
        return cleanDNI.length === 8 && parseInt(cleanDNI) > 0;
    } else if (cuitRegex.test(cleanDNI)) {
        // Validar CUIT (11 dígitos) - validación básica
        return cleanDNI.length === 11 && parseInt(cleanDNI) > 0;
    }
    return false;
}
function validatePostalCode(postalCode) {
    // Código postal argentino: 4 dígitos
    const postalCodeRegex = /^\d{4}$/;
    return postalCodeRegex.test(postalCode);
}
function validateTrackingNumber(trackingNumber) {
    // Formato general: al menos 6 caracteres alfanuméricos
    const trackingRegex = /^[A-Z0-9]{6,}$/i;
    return trackingRegex.test(trackingNumber);
}
function validateCoordinates(lat, lng) {
    return lat >= -90 && lat <= 90 && lng >= -180 && lng <= 180;
}
function validateWeight(weight) {
    return weight > 0 && weight <= 1000; // Máximo 1000kg
}
function validateDimensions(dimensions) {
    const { length, width, height } = dimensions;
    return length > 0 && length <= 200 && // Máximo 200cm
    width > 0 && width <= 200 && height > 0 && height <= 200;
}
function validateDeliveryDate(date) {
    const deliveryDate = new Date(date);
    const today = new Date();
    const maxDate = new Date();
    maxDate.setDate(today.getDate() + 30); // Máximo 30 días
    return deliveryDate >= today && deliveryDate <= maxDate;
}
function validateShippingCost(cost) {
    return cost >= 0 && cost <= 100000; // Máximo $100,000
}
function validatePackageValue(value) {
    return value >= 0 && value <= 1000000; // Máximo $1,000,000
}
function sanitizeString(input) {
    return input.trim().replace(/[<>]/g, '');
}
function sanitizePhoneNumber(phone) {
    return phone.replace(/\D/g, '');
}
function sanitizePostalCode(postalCode) {
    return postalCode.replace(/\D/g, '').substring(0, 4);
}
function sanitizeTrackingNumber(trackingNumber) {
    return trackingNumber.toUpperCase().replace(/[^A-Z0-9]/g, '');
}
function validateAddress(address) {
    try {
        addressSchema.parse(address);
        return {
            isValid: true,
            errors: []
        };
    } catch (error) {
        if (error instanceof _zod.z.ZodError) {
            return {
                isValid: false,
                errors: error.errors.map((err)=>err.message)
            };
        }
        return {
            isValid: false,
            errors: [
                'Error de validación desconocido'
            ]
        };
    }
}
function validateShipment(shipment) {
    try {
        shipmentSchema.parse(shipment);
        return {
            isValid: true,
            errors: []
        };
    } catch (error) {
        if (error instanceof _zod.z.ZodError) {
            return {
                isValid: false,
                errors: error.errors.map((err)=>err.message)
            };
        }
        return {
            isValid: false,
            errors: [
                'Error de validación desconocido'
            ]
        };
    }
}

//# sourceMappingURL=data:application/json;base64,