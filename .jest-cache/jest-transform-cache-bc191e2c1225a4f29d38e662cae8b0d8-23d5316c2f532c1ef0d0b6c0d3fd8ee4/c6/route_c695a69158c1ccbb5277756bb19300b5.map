{"version":3,"names":["cov_18oedmdfe","actualCoverage","s","GET","f","runtime","request","console","log","enterpriseResult","_enterpriseauthutils","requireAdminAuth","legacyResult","_adminauth","checkCRUDPermissions","enterprise","success","error","code","legacy","status","hasUser","user","hasSupabase","supabase","b","_server","NextResponse","json","step","debug","both_methods_failed","recommended_action","productsData","rlsFilters","cacheStats","context","_enterprisecache","getCacheStats","_enterpriserlsutils","createRLSFilters","userId","role","permissions","isActive","productsResult","executeWithRLS","client","rlsContext","query","from","select","limit","Object","entries","forEach","key","value","eq","data","Error","message","enforceRLS","auditLog","securityLevel","rls","filters_applied","products_found","length","sample_products","slice","cache","authResult","userEmail","email","userRole","user_roles","role_name","comparison","methods_agree","enterprise_advantages","recommendation","timestamp","Date","toISOString","request_info","method","url","errorMessage"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\admin-products\\route.ts"],"sourcesContent":["// Configuración para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { checkCRUDPermissions } from '@/lib/auth/admin-auth';\r\nimport {\r\n  requireAdminAuth\r\n} from '@/lib/auth/enterprise-auth-utils';\r\nimport {\r\n  executeWithRLS,\r\n  createRLSFilters\r\n} from '@/lib/auth/enterprise-rls-utils';\r\nimport {\r\n  getCacheStats\r\n} from '@/lib/auth/enterprise-cache';\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    console.log('🔍 Debug Admin Products Enterprise: Starting check...');\r\n\r\n    // ENTERPRISE: Usar nueva autenticación enterprise\r\n    const enterpriseResult = await requireAdminAuth(request, ['products_read']);\r\n\r\n    // LEGACY: Mantener método anterior para comparación\r\n    const legacyResult = await checkCRUDPermissions('read', 'products');\r\n\r\n    console.log('🔍 Debug Admin Products: Results comparison:', {\r\n      enterprise: {\r\n        success: enterpriseResult.success,\r\n        error: enterpriseResult.error,\r\n        code: enterpriseResult.code\r\n      },\r\n      legacy: {\r\n        success: legacyResult.success,\r\n        error: legacyResult.error,\r\n        status: legacyResult.status,\r\n        hasUser: !!legacyResult.user,\r\n        hasSupabase: !!legacyResult.supabase\r\n      }\r\n    });\r\n\r\n    if (!enterpriseResult.success && !legacyResult.success) {\r\n      return NextResponse.json({\r\n        error: 'Ambos métodos de autenticación fallaron',\r\n        enterprise: {\r\n          error: enterpriseResult.error,\r\n          code: enterpriseResult.code\r\n        },\r\n        legacy: {\r\n          error: legacyResult.error,\r\n          step: 'checkCRUDPermissions failed'\r\n        },\r\n        debug: {\r\n          both_methods_failed: true,\r\n          recommended_action: 'Check authentication setup'\r\n        }\r\n      }, { status: enterpriseResult.status || legacyResult.status || 401 });\r\n    }\r\n\r\n    // ENTERPRISE: Probar consulta de productos con RLS si enterprise auth es exitoso\r\n    let productsData = null;\r\n    let rlsFilters = null;\r\n    let cacheStats = null;\r\n\r\n    if (enterpriseResult.success) {\r\n      const context = enterpriseResult.context!;\r\n\r\n      // Obtener estadísticas de cache\r\n      cacheStats = getCacheStats();\r\n\r\n      // Crear filtros RLS para productos\r\n      rlsFilters = createRLSFilters({\r\n        userId: context.userId,\r\n        role: context.role,\r\n        permissions: context.permissions,\r\n        isActive: true\r\n      }, 'products');\r\n\r\n      // Ejecutar consulta con RLS\r\n      const productsResult = await executeWithRLS(\r\n        context,\r\n        async (client, rlsContext) => {\r\n          let query = client\r\n            .from('products')\r\n            .select('id, name, price, is_active, category_id')\r\n            .limit(5);\r\n\r\n          // Aplicar filtros RLS automáticos\r\n          Object.entries(rlsFilters || {}).forEach(([key, value]) => {\r\n            query = query.eq(key, value);\r\n          });\r\n\r\n          const { data, error } = await query;\r\n\r\n          if (error) {\r\n            throw new Error(`Error consultando productos: ${error.message}`);\r\n          }\r\n\r\n          return data;\r\n        },\r\n        { enforceRLS: true, auditLog: true }\r\n      );\r\n\r\n      if (productsResult.success) {\r\n        productsData = productsResult.data;\r\n      }\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: enterpriseResult.success || legacyResult.success,\r\n      message: 'Admin products access comparison completed',\r\n      enterprise: {\r\n        status: enterpriseResult.success ? 'SUCCESS' : 'FAILED',\r\n        context: enterpriseResult.success ? {\r\n          userId: enterpriseResult.context?.userId,\r\n          role: enterpriseResult.context?.role,\r\n          permissions: enterpriseResult.context?.permissions,\r\n          securityLevel: enterpriseResult.context?.securityLevel\r\n        } : null,\r\n        rls: {\r\n          filters_applied: rlsFilters,\r\n          products_found: productsData?.length || 0,\r\n          sample_products: productsData?.slice(0, 3)\r\n        },\r\n        cache: cacheStats,\r\n        error: enterpriseResult.error,\r\n        code: enterpriseResult.code\r\n      },\r\n      legacy: {\r\n        status: legacyResult.success ? 'SUCCESS' : 'FAILED',\r\n        authResult: {\r\n          success: legacyResult.success,\r\n          hasUser: !!legacyResult.user,\r\n          hasSupabase: !!legacyResult.supabase,\r\n          userEmail: legacyResult.user?.email,\r\n          userRole: legacyResult.user?.user_roles?.role_name\r\n        },\r\n        error: legacyResult.error\r\n      },\r\n      comparison: {\r\n        methods_agree: enterpriseResult.success === legacyResult.success,\r\n        enterprise_advantages: [\r\n          'RLS integration with automatic filters',\r\n          'Cache statistics and optimization',\r\n          'Granular permissions checking',\r\n          'Complete security context',\r\n          'Audit logging enabled'\r\n        ],\r\n        recommendation: enterpriseResult.success ? 'Use enterprise method' : 'Fix authentication issues'\r\n      },\r\n      debug: {\r\n        timestamp: new Date().toISOString(),\r\n        request_info: {\r\n          method: request.method,\r\n          url: request.url\r\n        }\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('🔍 Debug Admin Products: Error:', error);\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Unexpected error',\r\n      debug: {\r\n        errorMessage: error instanceof Error ? error.message : 'Unknown error'\r\n      }\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}