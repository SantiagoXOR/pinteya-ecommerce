{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\use-toast.ts"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\n\r\nimport type {\r\n  ToastActionElement,\r\n  ToastProps,\r\n} from \"@/components/ui/toast\"\r\n\r\nconst TOAST_LIMIT = 1\r\nconst TOAST_REMOVE_DELAY = 1000000\r\n\r\ntype ToasterToast = ToastProps & {\r\n  id: string\r\n  title?: React.ReactNode\r\n  description?: React.ReactNode\r\n  action?: ToastActionElement\r\n}\r\n\r\nconst actionTypes = {\r\n  ADD_TOAST: \"ADD_TOAST\",\r\n  UPDATE_TOAST: \"UPDATE_TOAST\",\r\n  DISMISS_TOAST: \"DISMISS_TOAST\",\r\n  REMOVE_TOAST: \"REMOVE_TOAST\",\r\n} as const\r\n\r\nlet count = 0\r\n\r\nfunction genId() {\r\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\r\n  return count.toString()\r\n}\r\n\r\ntype ActionType = typeof actionTypes\r\n\r\ntype Action =\r\n  | {\r\n      type: ActionType[\"ADD_TOAST\"]\r\n      toast: ToasterToast\r\n    }\r\n  | {\r\n      type: ActionType[\"UPDATE_TOAST\"]\r\n      toast: Partial<ToasterToast>\r\n    }\r\n  | {\r\n      type: ActionType[\"DISMISS_TOAST\"]\r\n      toastId?: ToasterToast[\"id\"]\r\n    }\r\n  | {\r\n      type: ActionType[\"REMOVE_TOAST\"]\r\n      toastId?: ToasterToast[\"id\"]\r\n    }\r\n\r\ninterface State {\r\n  toasts: ToasterToast[]\r\n}\r\n\r\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\r\n\r\nconst addToRemoveQueue = (toastId: string) => {\r\n  if (toastTimeouts.has(toastId)) {\r\n    return\r\n  }\r\n\r\n  const timeout = setTimeout(() => {\r\n    toastTimeouts.delete(toastId)\r\n    dispatch({\r\n      type: \"REMOVE_TOAST\",\r\n      toastId: toastId,\r\n    })\r\n  }, TOAST_REMOVE_DELAY)\r\n\r\n  toastTimeouts.set(toastId, timeout)\r\n}\r\n\r\nexport const reducer = (state: State, action: Action): State => {\r\n  switch (action.type) {\r\n    case \"ADD_TOAST\":\r\n      return {\r\n        ...state,\r\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\r\n      }\r\n\r\n    case \"UPDATE_TOAST\":\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\r\n        ),\r\n      }\r\n\r\n    case \"DISMISS_TOAST\": {\r\n      const { toastId } = action\r\n\r\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\r\n      // but I'll keep it here for simplicity\r\n      if (toastId) {\r\n        addToRemoveQueue(toastId)\r\n      } else {\r\n        state.toasts.forEach((toast) => {\r\n          addToRemoveQueue(toast.id)\r\n        })\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === toastId || toastId === undefined\r\n            ? {\r\n                ...t,\r\n                open: false,\r\n              }\r\n            : t\r\n        ),\r\n      }\r\n    }\r\n    case \"REMOVE_TOAST\":\r\n      if (action.toastId === undefined) {\r\n        return {\r\n          ...state,\r\n          toasts: [],\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\r\n      }\r\n  }\r\n}\r\n\r\nconst listeners: Array<(state: State) => void> = []\r\n\r\nlet memoryState: State = { toasts: [] }\r\n\r\nfunction dispatch(action: Action) {\r\n  memoryState = reducer(memoryState, action)\r\n  listeners.forEach((listener) => {\r\n    listener(memoryState)\r\n  })\r\n}\r\n\r\ntype Toast = Omit<ToasterToast, \"id\">\r\n\r\nfunction toast({ ...props }: Toast) {\r\n  const id = genId()\r\n\r\n  const update = (props: ToasterToast) =>\r\n    dispatch({\r\n      type: \"UPDATE_TOAST\",\r\n      toast: { ...props, id },\r\n    })\r\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\r\n\r\n  dispatch({\r\n    type: \"ADD_TOAST\",\r\n    toast: {\r\n      ...props,\r\n      id,\r\n      open: true,\r\n      onOpenChange: (open) => {\r\n        if (!open) {dismiss()}\r\n      },\r\n    },\r\n  })\r\n\r\n  return {\r\n    id: id,\r\n    dismiss,\r\n    update,\r\n  }\r\n}\r\n\r\nfunction useToast() {\r\n  const [state, setState] = React.useState<State>(memoryState)\r\n\r\n  React.useEffect(() => {\r\n    listeners.push(setState)\r\n    return () => {\r\n      const index = listeners.indexOf(setState)\r\n      if (index > -1) {\r\n        listeners.splice(index, 1)\r\n      }\r\n    }\r\n  }, [state])\r\n\r\n  return {\r\n    ...state,\r\n    toast,\r\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\r\n  }\r\n}\r\n\r\nexport { useToast, toast }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["reducer","toast","useToast","TOAST_LIMIT","TOAST_REMOVE_DELAY","actionTypes","ADD_TOAST","UPDATE_TOAST","DISMISS_TOAST","REMOVE_TOAST","count","genId","Number","MAX_SAFE_INTEGER","toString","toastTimeouts","Map","addToRemoveQueue","toastId","has","timeout","setTimeout","delete","dispatch","type","set","state","action","toasts","slice","map","t","id","forEach","undefined","open","filter","listeners","memoryState","listener","props","update","dismiss","onOpenChange","setState","React","useState","useEffect","push","index","indexOf","splice"],"mappings":"AAAA;;;;;;;;;;;;QA2EaA;eAAAA;;QAqHMC;eAAAA;;QAAVC;eAAAA;;;+DA9Lc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOvB,MAAMC,cAAc;AACpB,MAAMC,qBAAqB;AAS3B,MAAMC,cAAc;IAClBC,WAAW;IACXC,cAAc;IACdC,eAAe;IACfC,cAAc;AAChB;AAEA,IAAIC,QAAQ;AAEZ,SAASC;IACPD,QAAQ,AAACA,CAAAA,QAAQ,CAAA,IAAKE,OAAOC,gBAAgB;IAC7C,OAAOH,MAAMI,QAAQ;AACvB;AA0BA,MAAMC,gBAAgB,IAAIC;AAE1B,MAAMC,mBAAmB,CAACC;IACxB,IAAIH,cAAcI,GAAG,CAACD,UAAU;QAC9B;IACF;IAEA,MAAME,UAAUC,WAAW;QACzBN,cAAcO,MAAM,CAACJ;QACrBK,SAAS;YACPC,MAAM;YACNN,SAASA;QACX;IACF,GAAGd;IAEHW,cAAcU,GAAG,CAACP,SAASE;AAC7B;AAEO,MAAMpB,UAAU,CAAC0B,OAAcC;IACpC,OAAQA,OAAOH,IAAI;QACjB,KAAK;YACH,OAAO;gBACL,GAAGE,KAAK;gBACRE,QAAQ;oBAACD,OAAO1B,KAAK;uBAAKyB,MAAME,MAAM;iBAAC,CAACC,KAAK,CAAC,GAAG1B;YACnD;QAEF,KAAK;YACH,OAAO;gBACL,GAAGuB,KAAK;gBACRE,QAAQF,MAAME,MAAM,CAACE,GAAG,CAAC,CAACC,IACxBA,EAAEC,EAAE,KAAKL,OAAO1B,KAAK,CAAC+B,EAAE,GAAG;wBAAE,GAAGD,CAAC;wBAAE,GAAGJ,OAAO1B,KAAK;oBAAC,IAAI8B;YAE3D;QAEF,KAAK;YAAiB;gBACpB,MAAM,EAAEb,OAAO,EAAE,GAAGS;gBAEpB,2EAA2E;gBAC3E,uCAAuC;gBACvC,IAAIT,SAAS;oBACXD,iBAAiBC;gBACnB,OAAO;oBACLQ,MAAME,MAAM,CAACK,OAAO,CAAC,CAAChC;wBACpBgB,iBAAiBhB,MAAM+B,EAAE;oBAC3B;gBACF;gBAEA,OAAO;oBACL,GAAGN,KAAK;oBACRE,QAAQF,MAAME,MAAM,CAACE,GAAG,CAAC,CAACC,IACxBA,EAAEC,EAAE,KAAKd,WAAWA,YAAYgB,YAC5B;4BACE,GAAGH,CAAC;4BACJI,MAAM;wBACR,IACAJ;gBAER;YACF;QACA,KAAK;YACH,IAAIJ,OAAOT,OAAO,KAAKgB,WAAW;gBAChC,OAAO;oBACL,GAAGR,KAAK;oBACRE,QAAQ,EAAE;gBACZ;YACF;YACA,OAAO;gBACL,GAAGF,KAAK;gBACRE,QAAQF,MAAME,MAAM,CAACQ,MAAM,CAAC,CAACL,IAAMA,EAAEC,EAAE,KAAKL,OAAOT,OAAO;YAC5D;IACJ;AACF;AAEA,MAAMmB,YAA2C,EAAE;AAEnD,IAAIC,cAAqB;IAAEV,QAAQ,EAAE;AAAC;AAEtC,SAASL,SAASI,MAAc;IAC9BW,cAActC,QAAQsC,aAAaX;IACnCU,UAAUJ,OAAO,CAAC,CAACM;QACjBA,SAASD;IACX;AACF;AAIA,SAASrC,MAAM,EAAE,GAAGuC,OAAc;IAChC,MAAMR,KAAKrB;IAEX,MAAM8B,SAAS,CAACD,QACdjB,SAAS;YACPC,MAAM;YACNvB,OAAO;gBAAE,GAAGuC,KAAK;gBAAER;YAAG;QACxB;IACF,MAAMU,UAAU,IAAMnB,SAAS;YAAEC,MAAM;YAAiBN,SAASc;QAAG;IAEpET,SAAS;QACPC,MAAM;QACNvB,OAAO;YACL,GAAGuC,KAAK;YACRR;YACAG,MAAM;YACNQ,cAAc,CAACR;gBACb,IAAI,CAACA,MAAM;oBAACO;gBAAS;YACvB;QACF;IACF;IAEA,OAAO;QACLV,IAAIA;QACJU;QACAD;IACF;AACF;AAEA,SAASvC;IACP,MAAM,CAACwB,OAAOkB,SAAS,GAAGC,OAAMC,QAAQ,CAAQR;IAEhDO,OAAME,SAAS,CAAC;QACdV,UAAUW,IAAI,CAACJ;QACf,OAAO;YACL,MAAMK,QAAQZ,UAAUa,OAAO,CAACN;YAChC,IAAIK,QAAQ,CAAC,GAAG;gBACdZ,UAAUc,MAAM,CAACF,OAAO;YAC1B;QACF;IACF,GAAG;QAACvB;KAAM;IAEV,OAAO;QACL,GAAGA,KAAK;QACRzB;QACAyC,SAAS,CAACxB,UAAqBK,SAAS;gBAAEC,MAAM;gBAAiBN;YAAQ;IAC3E;AACF"}