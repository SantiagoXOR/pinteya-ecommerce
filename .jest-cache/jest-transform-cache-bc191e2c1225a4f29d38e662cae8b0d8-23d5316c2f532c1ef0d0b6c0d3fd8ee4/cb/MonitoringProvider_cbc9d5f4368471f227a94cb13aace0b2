3fc3955bd9f1c8406b3025294a86d333
'use client';
"use strict";

/* istanbul ignore next */
function cov_1wkjx0iwyp() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\providers\\MonitoringProvider.tsx";
  var hash = "1889de9a213df680b140b0dc6f979c9f13d4b055";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\providers\\MonitoringProvider.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 28,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 34
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 32
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 33
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 29
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 34
        }
      },
      "9": {
        start: {
          line: 29,
          column: 20
        },
        end: {
          line: 29,
          column: 48
        }
      },
      "10": {
        start: {
          line: 30,
          column: 29
        },
        end: {
          line: 30,
          column: 72
        }
      },
      "11": {
        start: {
          line: 31,
          column: 29
        },
        end: {
          line: 31,
          column: 78
        }
      },
      "12": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 51
        }
      },
      "13": {
        start: {
          line: 33,
          column: 23
        },
        end: {
          line: 33,
          column: 61
        }
      },
      "14": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 51
        }
      },
      "15": {
        start: {
          line: 35,
          column: 39
        },
        end: {
          line: 35,
          column: 51
        }
      },
      "16": {
        start: {
          line: 36,
          column: 28
        },
        end: {
          line: 36,
          column: 41
        }
      },
      "17": {
        start: {
          line: 37,
          column: 27
        },
        end: {
          line: 37,
          column: 40
        }
      },
      "18": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 40,
          column: 20
        }
      },
      "19": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 66
        }
      },
      "20": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "21": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 19
        }
      },
      "22": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "23": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 49,
          column: 10
        }
      },
      "24": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 53
        }
      },
      "25": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "26": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 30
        }
      },
      "27": {
        start: {
          line: 55,
          column: 17
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "28": {
        start: {
          line: 58,
          column: 32
        },
        end: {
          line: 58,
          column: 88
        }
      },
      "29": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "30": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "31": {
        start: {
          line: 61,
          column: 23
        },
        end: {
          line: 61,
          column: 95
        }
      },
      "32": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "33": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 57
        }
      },
      "34": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 39
        }
      },
      "35": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 25
        }
      },
      "36": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "37": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 31
        }
      },
      "38": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 18
        }
      },
      "39": {
        start: {
          line: 75,
          column: 40
        },
        end: {
          line: 79,
          column: 2
        }
      },
      "40": {
        start: {
          line: 80,
          column: 22
        },
        end: {
          line: 86,
          column: 1
        }
      },
      "41": {
        start: {
          line: 81,
          column: 20
        },
        end: {
          line: 81,
          column: 61
        }
      },
      "42": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 84,
          column: 5
        }
      },
      "43": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 82
        }
      },
      "44": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 85,
          column: 19
        }
      },
      "45": {
        start: {
          line: 88,
          column: 46
        },
        end: {
          line: 88,
          column: 73
        }
      },
      "46": {
        start: {
          line: 89,
          column: 44
        },
        end: {
          line: 89,
          column: 71
        }
      },
      "47": {
        start: {
          line: 90,
          column: 30
        },
        end: {
          line: 90,
          column: 56
        }
      },
      "48": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 149,
          column: 7
        }
      },
      "49": {
        start: {
          line: 92,
          column: 37
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "50": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 136,
          column: 13
        }
      },
      "51": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 135
        }
      },
      "52": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 108,
          column: 19
        }
      },
      "53": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 114,
          column: 17
        }
      },
      "54": {
        start: {
          line: 111,
          column: 20
        },
        end: {
          line: 111,
          column: 64
        }
      },
      "55": {
        start: {
          line: 112,
          column: 20
        },
        end: {
          line: 112,
          column: 42
        }
      },
      "56": {
        start: {
          line: 113,
          column: 20
        },
        end: {
          line: 113,
          column: 141
        }
      },
      "57": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 123,
          column: 17
        }
      },
      "58": {
        start: {
          line: 118,
          column: 20
        },
        end: {
          line: 118,
          column: 72
        }
      },
      "59": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 120,
          column: 92
        }
      },
      "60": {
        start: {
          line: 122,
          column: 20
        },
        end: {
          line: 122,
          column: 80
        }
      },
      "61": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 39
        }
      },
      "62": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 31
        }
      },
      "63": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 129,
          column: 47
        }
      },
      "64": {
        start: {
          line: 131,
          column: 37
        },
        end: {
          line: 131,
          column: 107
        }
      },
      "65": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 132,
          column: 39
        }
      },
      "66": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 135,
          column: 47
        }
      },
      "67": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 31
        }
      },
      "68": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 146,
          column: 10
        }
      },
      "69": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 145,
          column: 13
        }
      },
      "70": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 71
        }
      },
      "71": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 91
        }
      },
      "72": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 144,
          column: 79
        }
      },
      "73": {
        start: {
          line: 150,
          column: 30
        },
        end: {
          line: 167,
          column: 5
        }
      },
      "74": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "75": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 160,
          column: 15
        }
      },
      "76": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 165,
          column: 43
        }
      },
      "77": {
        start: {
          line: 168,
          column: 37
        },
        end: {
          line: 184,
          column: 5
        }
      },
      "78": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "79": {
        start: {
          line: 170,
          column: 26
        },
        end: {
          line: 170,
          column: 104
        }
      },
      "80": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 177,
          column: 15
        }
      },
      "81": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 182,
          column: 43
        }
      },
      "82": {
        start: {
          line: 185,
          column: 32
        },
        end: {
          line: 213,
          column: 5
        }
      },
      "83": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 212,
          column: 9
        }
      },
      "84": {
        start: {
          line: 187,
          column: 27
        },
        end: {
          line: 187,
          column: 39
        }
      },
      "85": {
        start: {
          line: 188,
          column: 28
        },
        end: {
          line: 188,
          column: 57
        }
      },
      "86": {
        start: {
          line: 189,
          column: 24
        },
        end: {
          line: 189,
          column: 49
        }
      },
      "87": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 211,
          column: 13
        }
      },
      "88": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 210,
          column: 17
        }
      },
      "89": {
        start: {
          line: 197,
          column: 20
        },
        end: {
          line: 203,
          column: 23
        }
      },
      "90": {
        start: {
          line: 205,
          column: 20
        },
        end: {
          line: 209,
          column: 51
        }
      },
      "91": {
        start: {
          line: 214,
          column: 25
        },
        end: {
          line: 218,
          column: 5
        }
      },
      "92": {
        start: {
          line: 219,
          column: 34
        },
        end: {
          line: 222,
          column: 6
        }
      },
      "93": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 230,
          column: 5
        }
      },
      "94": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 229,
          column: 11
        }
      },
      "95": {
        start: {
          line: 231,
          column: 4
        },
        end: {
          line: 231,
          column: 19
        }
      },
      "96": {
        start: {
          line: 234,
          column: 30
        },
        end: {
          line: 234,
          column: 45
        }
      },
      "97": {
        start: {
          line: 235,
          column: 24
        },
        end: {
          line: 257,
          column: 6
        }
      },
      "98": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 241,
          column: 9
        }
      },
      "99": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 239,
          column: 43
        }
      },
      "100": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 240,
          column: 19
        }
      },
      "101": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "102": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 248,
          column: 15
        }
      },
      "103": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 253,
          column: 43
        }
      },
      "104": {
        start: {
          line: 258,
          column: 4
        },
        end: {
          line: 261,
          column: 6
        }
      },
      "105": {
        start: {
          line: 264,
          column: 30
        },
        end: {
          line: 264,
          column: 45
        }
      },
      "106": {
        start: {
          line: 265,
          column: 30
        },
        end: {
          line: 265,
          column: 56
        }
      },
      "107": {
        start: {
          line: 266,
          column: 34
        },
        end: {
          line: 266,
          column: 61
        }
      },
      "108": {
        start: {
          line: 267,
          column: 25
        },
        end: {
          line: 284,
          column: 6
        }
      },
      "109": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 270,
          column: 9
        }
      },
      "110": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 269,
          column: 19
        }
      },
      "111": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 281,
          column: 9
        }
      },
      "112": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 29
        }
      },
      "113": {
        start: {
          line: 273,
          column: 29
        },
        end: {
          line: 273,
          column: 96
        }
      },
      "114": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 31
        }
      },
      "115": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 278,
          column: 43
        }
      },
      "116": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 280,
          column: 30
        }
      },
      "117": {
        start: {
          line: 285,
          column: 4
        },
        end: {
          line: 295,
          column: 7
        }
      },
      "118": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 291,
          column: 9
        }
      },
      "119": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 287,
          column: 27
        }
      },
      "120": {
        start: {
          line: 289,
          column: 29
        },
        end: {
          line: 289,
          column: 61
        }
      },
      "121": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 47
        }
      },
      "122": {
        start: {
          line: 290,
          column: 23
        },
        end: {
          line: 290,
          column: 46
        }
      },
      "123": {
        start: {
          line: 296,
          column: 4
        },
        end: {
          line: 300,
          column: 6
        }
      },
      "124": {
        start: {
          line: 303,
          column: 51
        },
        end: {
          line: 303,
          column: 66
        }
      },
      "125": {
        start: {
          line: 304,
          column: 4
        },
        end: {
          line: 306,
          column: 5
        }
      },
      "126": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 305,
          column: 20
        }
      },
      "127": {
        start: {
          line: 307,
          column: 4
        },
        end: {
          line: 330,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 30
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 28
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 29
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 25
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 30
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 34,
            column: 9
          },
          end: {
            line: 34,
            column: 33
          }
        },
        loc: {
          start: {
            line: 34,
            column: 47
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 34
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 38,
            column: 39
          },
          end: {
            line: 38,
            column: 40
          }
        },
        loc: {
          start: {
            line: 38,
            column: 61
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 38
      },
      "8": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 42,
            column: 9
          },
          end: {
            line: 42,
            column: 34
          }
        },
        loc: {
          start: {
            line: 42,
            column: 53
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 42
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 80,
            column: 22
          },
          end: {
            line: 80,
            column: 23
          }
        },
        loc: {
          start: {
            line: 80,
            column: 26
          },
          end: {
            line: 86,
            column: 1
          }
        },
        line: 80
      },
      "10": {
        name: "MonitoringProvider",
        decl: {
          start: {
            line: 87,
            column: 9
          },
          end: {
            line: 87,
            column: 27
          }
        },
        loc: {
          start: {
            line: 87,
            column: 88
          },
          end: {
            line: 232,
            column: 1
          }
        },
        line: 87
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 91,
            column: 26
          },
          end: {
            line: 91,
            column: 27
          }
        },
        loc: {
          start: {
            line: 91,
            column: 30
          },
          end: {
            line: 147,
            column: 5
          }
        },
        line: 91
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 92,
            column: 37
          },
          end: {
            line: 92,
            column: 38
          }
        },
        loc: {
          start: {
            line: 92,
            column: 47
          },
          end: {
            line: 137,
            column: 9
          }
        },
        line: 92
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 140,
            column: 15
          },
          end: {
            line: 140,
            column: 16
          }
        },
        loc: {
          start: {
            line: 140,
            column: 19
          },
          end: {
            line: 146,
            column: 9
          }
        },
        line: 140
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 150,
            column: 30
          },
          end: {
            line: 150,
            column: 31
          }
        },
        loc: {
          start: {
            line: 150,
            column: 45
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 150
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 168,
            column: 37
          },
          end: {
            line: 168,
            column: 38
          }
        },
        loc: {
          start: {
            line: 168,
            column: 52
          },
          end: {
            line: 184,
            column: 5
          }
        },
        line: 168
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 185,
            column: 32
          },
          end: {
            line: 185,
            column: 33
          }
        },
        loc: {
          start: {
            line: 185,
            column: 47
          },
          end: {
            line: 213,
            column: 5
          }
        },
        line: 185
      },
      "17": {
        name: "useErrorReporting",
        decl: {
          start: {
            line: 233,
            column: 9
          },
          end: {
            line: 233,
            column: 26
          }
        },
        loc: {
          start: {
            line: 233,
            column: 29
          },
          end: {
            line: 262,
            column: 1
          }
        },
        line: 233
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 235,
            column: 51
          },
          end: {
            line: 235,
            column: 52
          }
        },
        loc: {
          start: {
            line: 235,
            column: 75
          },
          end: {
            line: 255,
            column: 5
          }
        },
        line: 235
      },
      "19": {
        name: "useMonitoringStats",
        decl: {
          start: {
            line: 263,
            column: 9
          },
          end: {
            line: 263,
            column: 27
          }
        },
        loc: {
          start: {
            line: 263,
            column: 30
          },
          end: {
            line: 301,
            column: 1
          }
        },
        line: 263
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 267,
            column: 52
          },
          end: {
            line: 267,
            column: 53
          }
        },
        loc: {
          start: {
            line: 267,
            column: 62
          },
          end: {
            line: 282,
            column: 5
          }
        },
        line: 267
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 285,
            column: 29
          },
          end: {
            line: 285,
            column: 30
          }
        },
        loc: {
          start: {
            line: 285,
            column: 33
          },
          end: {
            line: 292,
            column: 5
          }
        },
        line: 285
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 290,
            column: 19
          },
          end: {
            line: 290,
            column: 20
          }
        },
        loc: {
          start: {
            line: 290,
            column: 23
          },
          end: {
            line: 290,
            column: 46
          }
        },
        line: 290
      },
      "23": {
        name: "MonitoringStatus",
        decl: {
          start: {
            line: 302,
            column: 9
          },
          end: {
            line: 302,
            column: 25
          }
        },
        loc: {
          start: {
            line: 302,
            column: 28
          },
          end: {
            line: 331,
            column: 1
          }
        },
        line: 302
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 39,
            column: 15
          },
          end: {
            line: 39,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 29
          },
          end: {
            line: 39,
            column: 45
          }
        }, {
          start: {
            line: 39,
            column: 48
          },
          end: {
            line: 39,
            column: 65
          }
        }],
        line: 39
      },
      "2": {
        loc: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "3": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 20
          }
        }, {
          start: {
            line: 43,
            column: 24
          },
          end: {
            line: 43,
            column: 27
          }
        }, {
          start: {
            line: 43,
            column: 31
          },
          end: {
            line: 43,
            column: 45
          }
        }],
        line: 43
      },
      "4": {
        loc: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "5": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 46,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 46,
            column: 20
          }
        }, {
          start: {
            line: 46,
            column: 24
          },
          end: {
            line: 46,
            column: 47
          }
        }, {
          start: {
            line: 46,
            column: 51
          },
          end: {
            line: 46,
            column: 76
          }
        }],
        line: 46
      },
      "6": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "7": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 52,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 52,
            column: 13
          }
        }, {
          start: {
            line: 52,
            column: 17
          },
          end: {
            line: 52,
            column: 31
          }
        }],
        line: 52
      },
      "8": {
        loc: {
          start: {
            line: 58,
            column: 32
          },
          end: {
            line: 58,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 32
          },
          end: {
            line: 58,
            column: 53
          }
        }, {
          start: {
            line: 58,
            column: 57
          },
          end: {
            line: 58,
            column: 88
          }
        }],
        line: 58
      },
      "9": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "10": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 60,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 60,
            column: 29
          }
        }, {
          start: {
            line: 60,
            column: 33
          },
          end: {
            line: 60,
            column: 79
          }
        }],
        line: 60
      },
      "11": {
        loc: {
          start: {
            line: 61,
            column: 23
          },
          end: {
            line: 61,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 61,
            column: 47
          },
          end: {
            line: 61,
            column: 88
          }
        }, {
          start: {
            line: 61,
            column: 91
          },
          end: {
            line: 61,
            column: 95
          }
        }],
        line: 61
      },
      "12": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        }, {
          start: {
            line: 64,
            column: 19
          },
          end: {
            line: 66,
            column: 13
          }
        }],
        line: 62
      },
      "13": {
        loc: {
          start: {
            line: 62,
            column: 16
          },
          end: {
            line: 62,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 16
          },
          end: {
            line: 62,
            column: 20
          }
        }, {
          start: {
            line: 62,
            column: 25
          },
          end: {
            line: 62,
            column: 33
          }
        }, {
          start: {
            line: 62,
            column: 37
          },
          end: {
            line: 62,
            column: 45
          }
        }],
        line: 62
      },
      "14": {
        loc: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "15": {
        loc: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "16": {
        loc: {
          start: {
            line: 87,
            column: 40
          },
          end: {
            line: 87,
            column: 56
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 87,
            column: 52
          },
          end: {
            line: 87,
            column: 56
          }
        }],
        line: 87
      },
      "17": {
        loc: {
          start: {
            line: 87,
            column: 58
          },
          end: {
            line: 87,
            column: 84
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 87,
            column: 80
          },
          end: {
            line: 87,
            column: 84
          }
        }],
        line: 87
      },
      "18": {
        loc: {
          start: {
            line: 110,
            column: 16
          },
          end: {
            line: 114,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 16
          },
          end: {
            line: 114,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "19": {
        loc: {
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 123,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 123,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "20": {
        loc: {
          start: {
            line: 131,
            column: 37
          },
          end: {
            line: 131,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 131,
            column: 60
          },
          end: {
            line: 131,
            column: 71
          }
        }, {
          start: {
            line: 131,
            column: 74
          },
          end: {
            line: 131,
            column: 107
          }
        }],
        line: 131
      },
      "21": {
        loc: {
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 145,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 145,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "22": {
        loc: {
          start: {
            line: 152,
            column: 71
          },
          end: {
            line: 152,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 71
          },
          end: {
            line: 152,
            column: 82
          }
        }, {
          start: {
            line: 152,
            column: 86
          },
          end: {
            line: 152,
            column: 110
          }
        }],
        line: 152
      },
      "23": {
        loc: {
          start: {
            line: 164,
            column: 32
          },
          end: {
            line: 164,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 164,
            column: 66
          },
          end: {
            line: 164,
            column: 88
          }
        }, {
          start: {
            line: 164,
            column: 91
          },
          end: {
            line: 164,
            column: 106
          }
        }],
        line: 164
      },
      "24": {
        loc: {
          start: {
            line: 170,
            column: 26
          },
          end: {
            line: 170,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 170,
            column: 58
          },
          end: {
            line: 170,
            column: 70
          }
        }, {
          start: {
            line: 170,
            column: 73
          },
          end: {
            line: 170,
            column: 104
          }
        }],
        line: 170
      },
      "25": {
        loc: {
          start: {
            line: 181,
            column: 32
          },
          end: {
            line: 181,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 181,
            column: 66
          },
          end: {
            line: 181,
            column: 88
          }
        }, {
          start: {
            line: 181,
            column: 91
          },
          end: {
            line: 181,
            column: 106
          }
        }],
        line: 181
      },
      "26": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 212,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 212,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "27": {
        loc: {
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 186,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 186,
            column: 24
          }
        }, {
          start: {
            line: 186,
            column: 28
          },
          end: {
            line: 186,
            column: 51
          }
        }],
        line: 186
      },
      "28": {
        loc: {
          start: {
            line: 189,
            column: 24
          },
          end: {
            line: 189,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 24
          },
          end: {
            line: 189,
            column: 34
          }
        }, {
          start: {
            line: 189,
            column: 38
          },
          end: {
            line: 189,
            column: 49
          }
        }],
        line: 189
      },
      "29": {
        loc: {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 211,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 211,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "30": {
        loc: {
          start: {
            line: 190,
            column: 16
          },
          end: {
            line: 195,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 16
          },
          end: {
            line: 190,
            column: 19
          }
        }, {
          start: {
            line: 190,
            column: 23
          },
          end: {
            line: 195,
            column: 31
          }
        }],
        line: 190
      },
      "31": {
        loc: {
          start: {
            line: 208,
            column: 40
          },
          end: {
            line: 208,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 208,
            column: 74
          },
          end: {
            line: 208,
            column: 96
          }
        }, {
          start: {
            line: 208,
            column: 99
          },
          end: {
            line: 208,
            column: 114
          }
        }],
        line: 208
      },
      "32": {
        loc: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 230,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 230,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "33": {
        loc: {
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "34": {
        loc: {
          start: {
            line: 238,
            column: 23
          },
          end: {
            line: 238,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 238,
            column: 48
          },
          end: {
            line: 238,
            column: 61
          }
        }, {
          start: {
            line: 238,
            column: 64
          },
          end: {
            line: 238,
            column: 69
          }
        }],
        line: 238
      },
      "35": {
        loc: {
          start: {
            line: 247,
            column: 21
          },
          end: {
            line: 247,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 247,
            column: 53
          },
          end: {
            line: 247,
            column: 73
          }
        }, {
          start: {
            line: 247,
            column: 76
          },
          end: {
            line: 247,
            column: 85
          }
        }],
        line: 247
      },
      "36": {
        loc: {
          start: {
            line: 251,
            column: 31
          },
          end: {
            line: 251,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 251,
            column: 56
          },
          end: {
            line: 251,
            column: 69
          }
        }, {
          start: {
            line: 251,
            column: 72
          },
          end: {
            line: 251,
            column: 77
          }
        }],
        line: 251
      },
      "37": {
        loc: {
          start: {
            line: 252,
            column: 32
          },
          end: {
            line: 252,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 252,
            column: 66
          },
          end: {
            line: 252,
            column: 88
          }
        }, {
          start: {
            line: 252,
            column: 91
          },
          end: {
            line: 252,
            column: 106
          }
        }],
        line: 252
      },
      "38": {
        loc: {
          start: {
            line: 268,
            column: 8
          },
          end: {
            line: 270,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 8
          },
          end: {
            line: 270,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 268
      },
      "39": {
        loc: {
          start: {
            line: 277,
            column: 23
          },
          end: {
            line: 277,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 277,
            column: 48
          },
          end: {
            line: 277,
            column: 61
          }
        }, {
          start: {
            line: 277,
            column: 64
          },
          end: {
            line: 277,
            column: 79
          }
        }],
        line: 277
      },
      "40": {
        loc: {
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 291,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 291,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "41": {
        loc: {
          start: {
            line: 304,
            column: 4
          },
          end: {
            line: 306,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 304,
            column: 4
          },
          end: {
            line: 306,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 304
      },
      "42": {
        loc: {
          start: {
            line: 313,
            column: 20
          },
          end: {
            line: 313,
            column: 45
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 313,
            column: 36
          },
          end: {
            line: 313,
            column: 39
          }
        }, {
          start: {
            line: 313,
            column: 42
          },
          end: {
            line: 313,
            column: 45
          }
        }],
        line: 313
      },
      "43": {
        loc: {
          start: {
            line: 319,
            column: 20
          },
          end: {
            line: 319,
            column: 44
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 319,
            column: 35
          },
          end: {
            line: 319,
            column: 38
          }
        }, {
          start: {
            line: 319,
            column: 41
          },
          end: {
            line: 319,
            column: 44
          }
        }],
        line: 319
      },
      "44": {
        loc: {
          start: {
            line: 322,
            column: 12
          },
          end: {
            line: 328,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 322,
            column: 12
          },
          end: {
            line: 322,
            column: 17
          }
        }, {
          start: {
            line: 322,
            column: 35
          },
          end: {
            line: 328,
            column: 14
          }
        }],
        line: 322
      },
      "45": {
        loc: {
          start: {
            line: 326,
            column: 20
          },
          end: {
            line: 326,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 326,
            column: 45
          },
          end: {
            line: 326,
            column: 58
          }
        }, {
          start: {
            line: 326,
            column: 61
          },
          end: {
            line: 326,
            column: 101
          }
        }],
        line: 326
      },
      "46": {
        loc: {
          start: {
            line: 326,
            column: 61
          },
          end: {
            line: 326,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 326,
            column: 61
          },
          end: {
            line: 326,
            column: 78
          }
        }, {
          start: {
            line: 326,
            column: 82
          },
          end: {
            line: 326,
            column: 101
          }
        }],
        line: 326
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\providers\\MonitoringProvider.tsx"],
      sourcesContent: ["'use client'\r\n\r\nimport React, { createContext, useContext, useEffect, useState, ReactNode } from 'react'\r\nimport { proactiveMonitoring, startMonitoring } from '../lib/monitoring/proactive-monitoring'\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger'\r\nimport { ErrorBoundaryWrapper } from '../components/ErrorBoundary'\r\n\r\ninterface MonitoringContextType {\r\n  isInitialized: boolean\r\n  isMonitoring: boolean\r\n  error: string | null\r\n}\r\n\r\nconst MonitoringContext = createContext<MonitoringContextType>({\r\n  isInitialized: false,\r\n  isMonitoring: false,\r\n  error: null\r\n})\r\n\r\nexport const useMonitoring = () => {\r\n  const context = useContext(MonitoringContext)\r\n  if (!context) {\r\n    throw new Error('useMonitoring must be used within a MonitoringProvider')\r\n  }\r\n  return context\r\n}\r\n\r\ninterface MonitoringProviderProps {\r\n  children: ReactNode\r\n  autoStart?: boolean\r\n  enableErrorBoundary?: boolean\r\n}\r\n\r\nexport function MonitoringProvider({\r\n  children,\r\n  autoStart = true,\r\n  enableErrorBoundary = true\r\n}: MonitoringProviderProps) {\r\n  const [isInitialized, setIsInitialized] = useState(false)\r\n  const [isMonitoring, setIsMonitoring] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  useEffect(() => {\r\n    const initializeMonitoring = async () => {\r\n      try {\r\n        logger.info(LogLevel.INFO, 'Initializing proactive monitoring system', {}, LogCategory.SYSTEM)\r\n        \r\n        // Configurar el sistema de monitoreo\r\n        proactiveMonitoring.updateConfig({\r\n          enabled: true,\r\n          checkInterval: 30, // 30 segundos\r\n          errorThreshold: 5, // 5% de errores\r\n          responseTimeThreshold: 2000, // 2 segundos\r\n          memoryThreshold: 80, // 80% de memoria\r\n          cpuThreshold: 80, // 80% de CPU\r\n          enableAutoRecovery: false, // Deshabilitado por seguridad\r\n          notificationChannels: ['email', 'slack']\r\n        })\r\n\r\n        // Iniciar monitoreo autom\xE1ticamente si est\xE1 habilitado\r\n        if (autoStart) {\r\n          startMonitoring()\r\n          setIsMonitoring(true)\r\n          logger.info(LogLevel.INFO, 'Proactive monitoring started automatically', {}, LogCategory.SYSTEM)\r\n        }\r\n\r\n        // Configurar listeners para errores no capturados\r\n        if (typeof window !== 'undefined') {\r\n          // Errores de JavaScript no capturados\r\n          window.addEventListener('error', handleGlobalError)\r\n          \r\n          // Promesas rechazadas no capturadas\r\n          window.addEventListener('unhandledrejection', handleUnhandledRejection)\r\n          \r\n          // Errores de recursos (im\xE1genes, scripts, etc.)\r\n          window.addEventListener('error', handleResourceError, true)\r\n        }\r\n\r\n        setIsInitialized(true)\r\n        setError(null)\r\n        \r\n        logger.info(LogLevel.INFO, 'Proactive monitoring system initialized successfully', {\r\n          autoStart,\r\n          enableErrorBoundary\r\n        }, LogCategory.SYSTEM)\r\n        \r\n      } catch (err) {\r\n        const errorMessage = err instanceof Error ? err.message : 'Failed to initialize monitoring'\r\n        setError(errorMessage)\r\n        logger.error(LogLevel.ERROR, 'Failed to initialize monitoring system', {\r\n          error: errorMessage\r\n        }, LogCategory.SYSTEM)\r\n      }\r\n    }\r\n\r\n    initializeMonitoring()\r\n\r\n    // Cleanup\r\n    return () => {\r\n      if (typeof window !== 'undefined') {\r\n        window.removeEventListener('error', handleGlobalError)\r\n        window.removeEventListener('unhandledrejection', handleUnhandledRejection)\r\n        window.removeEventListener('error', handleResourceError, true)\r\n      }\r\n    }\r\n  }, [autoStart])\r\n\r\n  const handleGlobalError = async (event: ErrorEvent) => {\r\n    try {\r\n      await proactiveMonitoring.reportError(event.error || new Error(event.message), {\r\n        source: 'global_error_handler',\r\n        filename: event.filename,\r\n        lineno: event.lineno,\r\n        colno: event.colno,\r\n        timestamp: new Date().toISOString(),\r\n        url: window.location.href,\r\n        userAgent: navigator.userAgent\r\n      })\r\n    } catch (reportingError) {\r\n      logger.error(LogLevel.ERROR, 'Failed to report global error', {\r\n        originalError: event.message,\r\n        reportingError: reportingError instanceof Error ? reportingError.message : 'Unknown error'\r\n      }, LogCategory.SYSTEM)\r\n    }\r\n  }\r\n\r\n  const handleUnhandledRejection = async (event: PromiseRejectionEvent) => {\r\n    try {\r\n      const error = event.reason instanceof Error ? event.reason : new Error(String(event.reason))\r\n      await proactiveMonitoring.reportError(error, {\r\n        source: 'unhandled_promise_rejection',\r\n        timestamp: new Date().toISOString(),\r\n        url: window.location.href,\r\n        userAgent: navigator.userAgent,\r\n        reason: String(event.reason)\r\n      })\r\n    } catch (reportingError) {\r\n      logger.error(LogLevel.ERROR, 'Failed to report unhandled promise rejection', {\r\n        originalReason: String(event.reason),\r\n        reportingError: reportingError instanceof Error ? reportingError.message : 'Unknown error'\r\n      }, LogCategory.SYSTEM)\r\n    }\r\n  }\r\n\r\n  const handleResourceError = async (event: Event) => {\r\n    if (event.target && event.target !== window) {\r\n      const target = event.target as HTMLElement\r\n      const tagName = target.tagName?.toLowerCase()\r\n      const src = (target as any).src || (target as any).href\r\n      \r\n      if (src && ['img', 'script', 'link', 'iframe'].includes(tagName)) {\r\n        try {\r\n          await proactiveMonitoring.reportError(\r\n            new Error(`Resource loading failed: ${tagName} - ${src}`),\r\n            {\r\n              source: 'resource_error',\r\n              resourceType: tagName,\r\n              resourceUrl: src,\r\n              timestamp: new Date().toISOString(),\r\n              url: window.location.href\r\n            }\r\n          )\r\n        } catch (reportingError) {\r\n          logger.error(LogLevel.ERROR, 'Failed to report resource error', {\r\n            resourceUrl: src,\r\n            resourceType: tagName,\r\n            reportingError: reportingError instanceof Error ? reportingError.message : 'Unknown error'\r\n          }, LogCategory.SYSTEM)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const contextValue: MonitoringContextType = {\r\n    isInitialized,\r\n    isMonitoring,\r\n    error\r\n  }\r\n\r\n  const content = (\r\n    <MonitoringContext.Provider value={contextValue}>\r\n      {children}\r\n    </MonitoringContext.Provider>\r\n  )\r\n\r\n  // Envolver con Error Boundary si est\xE1 habilitado\r\n  if (enableErrorBoundary) {\r\n    return (\r\n      <ErrorBoundaryWrapper\r\n        showDetails={process.env.NODE_ENV === 'development'}\r\n        enableReporting={true}\r\n      >\r\n        {content}\r\n      </ErrorBoundaryWrapper>\r\n    )\r\n  }\r\n\r\n  return content\r\n}\r\n\r\n/**\r\n * Hook para reportar errores manualmente desde componentes\r\n */\r\nexport function useErrorReporting() {\r\n  const { isInitialized } = useMonitoring()\r\n\r\n  const reportError = React.useCallback(async (error: Error | string, context?: Record<string, any>) => {\r\n    if (!isInitialized) {\r\n      logger.warn(LogLevel.WARN, 'Monitoring not initialized, error not reported', {\r\n        error: error instanceof Error ? error.message : error\r\n      }, LogCategory.SYSTEM)\r\n      return\r\n    }\r\n\r\n    try {\r\n      await proactiveMonitoring.reportError(error, {\r\n        ...context,\r\n        source: 'manual_report',\r\n        timestamp: new Date().toISOString(),\r\n        url: typeof window !== 'undefined' ? window.location.href : 'unknown'\r\n      })\r\n    } catch (reportingError) {\r\n      logger.error(LogLevel.ERROR, 'Failed to report error manually', {\r\n        originalError: error instanceof Error ? error.message : error,\r\n        reportingError: reportingError instanceof Error ? reportingError.message : 'Unknown error'\r\n      }, LogCategory.SYSTEM)\r\n    }\r\n  }, [isInitialized])\r\n\r\n  return { reportError, isInitialized }\r\n}\r\n\r\n/**\r\n * Hook para obtener estad\xEDsticas de monitoreo\r\n */\r\nexport function useMonitoringStats() {\r\n  const { isInitialized } = useMonitoring()\r\n  const [stats, setStats] = useState<any>(null)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const refreshStats = React.useCallback(async () => {\r\n    if (!isInitialized) {return}\r\n\r\n    try {\r\n      setLoading(true)\r\n      const newStats = await proactiveMonitoring.getMonitoringStats()\r\n      setStats(newStats)\r\n    } catch (error) {\r\n      logger.error(LogLevel.ERROR, 'Failed to fetch monitoring stats', {\r\n        error: error instanceof Error ? error.message : 'Unknown error'\r\n      }, LogCategory.SYSTEM)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }, [isInitialized])\r\n\r\n  React.useEffect(() => {\r\n    if (isInitialized) {\r\n      refreshStats()\r\n      \r\n      // Actualizar estad\xEDsticas cada 30 segundos\r\n      const interval = setInterval(refreshStats, 30000)\r\n      return () => clearInterval(interval)\r\n    }\r\n  }, [isInitialized, refreshStats])\r\n\r\n  return { stats, loading, refreshStats }\r\n}\r\n\r\n/**\r\n * Componente de estado del monitoreo (para debugging)\r\n */\r\nexport function MonitoringStatus() {\r\n  const { isInitialized, isMonitoring, error } = useMonitoring()\r\n\r\n  if (process.env.NODE_ENV !== 'development') {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed bottom-4 right-4 z-50 bg-black text-white text-xs p-2 rounded shadow-lg\">\r\n      <div>Monitoring: {isInitialized ? '\u2705' : '\u274C'}</div>\r\n      <div>Active: {isMonitoring ? '\u2705' : '\u274C'}</div>\r\n      {error && <div className=\"text-red-300\">Error: {error instanceof Error ? error.message : error?.toString() || 'Error desconocido'}</div>}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["MonitoringProvider", "MonitoringStatus", "useErrorReporting", "useMonitoring", "useMonitoringStats", "MonitoringContext", "createContext", "isInitialized", "isMonitoring", "error", "context", "useContext", "Error", "children", "autoStart", "enableErrorBoundary", "setIsInitialized", "useState", "setIsMonitoring", "setError", "useEffect", "initializeMonitoring", "logger", "info", "LogLevel", "INFO", "LogCategory", "SYSTEM", "proactiveMonitoring", "updateConfig", "enabled", "checkInterval", "errorThreshold", "responseTimeThreshold", "memoryThreshold", "cpuThreshold", "enableAutoRecovery", "notificationChannels", "startMonitoring", "window", "addEventListener", "handleGlobalError", "handleUnhandledRejection", "handleResourceError", "err", "errorMessage", "message", "ERROR", "removeEventListener", "event", "reportError", "source", "filename", "lineno", "colno", "timestamp", "Date", "toISOString", "url", "location", "href", "userAgent", "navigator", "reportingError", "originalError", "reason", "String", "originalReason", "target", "tagName", "toLowerCase", "src", "includes", "resourceType", "resourceUrl", "contextValue", "content", "Provider", "value", "ErrorBoundaryWrapper", "showDetails", "process", "env", "NODE_ENV", "enableReporting", "React", "useCallback", "warn", "WARN", "stats", "setStats", "loading", "setLoading", "refreshStats", "newStats", "getMonitoringStats", "interval", "setInterval", "clearInterval", "div", "className", "toString"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1889de9a213df680b140b0dc6f979c9f13d4b055"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1wkjx0iwyp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1wkjx0iwyp();
cov_1wkjx0iwyp().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1wkjx0iwyp().f[0]++;
  cov_1wkjx0iwyp().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1wkjx0iwyp().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1wkjx0iwyp().s[3]++;
_export(exports, {
  get MonitoringProvider() {
    /* istanbul ignore next */
    cov_1wkjx0iwyp().f[1]++;
    cov_1wkjx0iwyp().s[4]++;
    return MonitoringProvider;
  },
  get MonitoringStatus() {
    /* istanbul ignore next */
    cov_1wkjx0iwyp().f[2]++;
    cov_1wkjx0iwyp().s[5]++;
    return MonitoringStatus;
  },
  get useErrorReporting() {
    /* istanbul ignore next */
    cov_1wkjx0iwyp().f[3]++;
    cov_1wkjx0iwyp().s[6]++;
    return useErrorReporting;
  },
  get useMonitoring() {
    /* istanbul ignore next */
    cov_1wkjx0iwyp().f[4]++;
    cov_1wkjx0iwyp().s[7]++;
    return useMonitoring;
  },
  get useMonitoringStats() {
    /* istanbul ignore next */
    cov_1wkjx0iwyp().f[5]++;
    cov_1wkjx0iwyp().s[8]++;
    return useMonitoringStats;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1wkjx0iwyp().s[9]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1wkjx0iwyp().s[10]++, _interop_require_wildcard(require("react")));
const _proactivemonitoring =
/* istanbul ignore next */
(cov_1wkjx0iwyp().s[11]++, require("../lib/monitoring/proactive-monitoring"));
const _logger =
/* istanbul ignore next */
(cov_1wkjx0iwyp().s[12]++, require("../lib/enterprise/logger"));
const _ErrorBoundary =
/* istanbul ignore next */
(cov_1wkjx0iwyp().s[13]++, require("../components/ErrorBoundary"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1wkjx0iwyp().f[6]++;
  cov_1wkjx0iwyp().s[14]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1wkjx0iwyp().b[0][0]++;
    cov_1wkjx0iwyp().s[15]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1wkjx0iwyp().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().s[16]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().s[17]++, new WeakMap());
  /* istanbul ignore next */
  cov_1wkjx0iwyp().s[18]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1wkjx0iwyp().f[7]++;
    cov_1wkjx0iwyp().s[19]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1wkjx0iwyp().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1wkjx0iwyp().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1wkjx0iwyp().f[8]++;
  cov_1wkjx0iwyp().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1wkjx0iwyp().b[2][0]++;
    cov_1wkjx0iwyp().s[21]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1wkjx0iwyp().b[2][1]++;
  }
  cov_1wkjx0iwyp().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1wkjx0iwyp().b[4][0]++;
    cov_1wkjx0iwyp().s[23]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1wkjx0iwyp().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().s[24]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1wkjx0iwyp().s[25]++;
  if (
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1wkjx0iwyp().b[6][0]++;
    cov_1wkjx0iwyp().s[26]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1wkjx0iwyp().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().s[27]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().s[28]++,
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1wkjx0iwyp().s[29]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1wkjx0iwyp().s[30]++;
    if (
    /* istanbul ignore next */
    (cov_1wkjx0iwyp().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1wkjx0iwyp().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1wkjx0iwyp().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().s[31]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1wkjx0iwyp().s[32]++;
      if (
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1wkjx0iwyp().b[12][0]++;
        cov_1wkjx0iwyp().s[33]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1wkjx0iwyp().b[12][1]++;
        cov_1wkjx0iwyp().s[34]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1wkjx0iwyp().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1wkjx0iwyp().s[35]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1wkjx0iwyp().s[36]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1wkjx0iwyp().b[14][0]++;
    cov_1wkjx0iwyp().s[37]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1wkjx0iwyp().b[14][1]++;
  }
  cov_1wkjx0iwyp().s[38]++;
  return newObj;
}
const MonitoringContext =
/* istanbul ignore next */
(/*#__PURE__*/cov_1wkjx0iwyp().s[39]++, (0, _react.createContext)({
  isInitialized: false,
  isMonitoring: false,
  error: null
}));
/* istanbul ignore next */
cov_1wkjx0iwyp().s[40]++;
const useMonitoring = () => {
  /* istanbul ignore next */
  cov_1wkjx0iwyp().f[9]++;
  const context =
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().s[41]++, (0, _react.useContext)(MonitoringContext));
  /* istanbul ignore next */
  cov_1wkjx0iwyp().s[42]++;
  if (!context) {
    /* istanbul ignore next */
    cov_1wkjx0iwyp().b[15][0]++;
    cov_1wkjx0iwyp().s[43]++;
    throw new Error('useMonitoring must be used within a MonitoringProvider');
  } else
  /* istanbul ignore next */
  {
    cov_1wkjx0iwyp().b[15][1]++;
  }
  cov_1wkjx0iwyp().s[44]++;
  return context;
};
function MonitoringProvider({
  children,
  autoStart =
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().b[16][0]++, true),
  enableErrorBoundary =
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().b[17][0]++, true)
}) {
  /* istanbul ignore next */
  cov_1wkjx0iwyp().f[10]++;
  const [isInitialized, setIsInitialized] =
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().s[45]++, (0, _react.useState)(false));
  const [isMonitoring, setIsMonitoring] =
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().s[46]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().s[47]++, (0, _react.useState)(null));
  /* istanbul ignore next */
  cov_1wkjx0iwyp().s[48]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1wkjx0iwyp().f[11]++;
    cov_1wkjx0iwyp().s[49]++;
    const initializeMonitoring = async () => {
      /* istanbul ignore next */
      cov_1wkjx0iwyp().f[12]++;
      cov_1wkjx0iwyp().s[50]++;
      try {
        /* istanbul ignore next */
        cov_1wkjx0iwyp().s[51]++;
        _logger.logger.info(_logger.LogLevel.INFO, 'Initializing proactive monitoring system', {}, _logger.LogCategory.SYSTEM);
        // Configurar el sistema de monitoreo
        /* istanbul ignore next */
        cov_1wkjx0iwyp().s[52]++;
        _proactivemonitoring.proactiveMonitoring.updateConfig({
          enabled: true,
          checkInterval: 30,
          errorThreshold: 5,
          responseTimeThreshold: 2000,
          memoryThreshold: 80,
          cpuThreshold: 80,
          enableAutoRecovery: false,
          notificationChannels: ['email', 'slack']
        });
        // Iniciar monitoreo automáticamente si está habilitado
        /* istanbul ignore next */
        cov_1wkjx0iwyp().s[53]++;
        if (autoStart) {
          /* istanbul ignore next */
          cov_1wkjx0iwyp().b[18][0]++;
          cov_1wkjx0iwyp().s[54]++;
          (0, _proactivemonitoring.startMonitoring)();
          /* istanbul ignore next */
          cov_1wkjx0iwyp().s[55]++;
          setIsMonitoring(true);
          /* istanbul ignore next */
          cov_1wkjx0iwyp().s[56]++;
          _logger.logger.info(_logger.LogLevel.INFO, 'Proactive monitoring started automatically', {}, _logger.LogCategory.SYSTEM);
        } else
        /* istanbul ignore next */
        {
          cov_1wkjx0iwyp().b[18][1]++;
        }
        // Configurar listeners para errores no capturados
        cov_1wkjx0iwyp().s[57]++;
        if (typeof window !== 'undefined') {
          /* istanbul ignore next */
          cov_1wkjx0iwyp().b[19][0]++;
          cov_1wkjx0iwyp().s[58]++;
          // Errores de JavaScript no capturados
          window.addEventListener('error', handleGlobalError);
          // Promesas rechazadas no capturadas
          /* istanbul ignore next */
          cov_1wkjx0iwyp().s[59]++;
          window.addEventListener('unhandledrejection', handleUnhandledRejection);
          // Errores de recursos (imágenes, scripts, etc.)
          /* istanbul ignore next */
          cov_1wkjx0iwyp().s[60]++;
          window.addEventListener('error', handleResourceError, true);
        } else
        /* istanbul ignore next */
        {
          cov_1wkjx0iwyp().b[19][1]++;
        }
        cov_1wkjx0iwyp().s[61]++;
        setIsInitialized(true);
        /* istanbul ignore next */
        cov_1wkjx0iwyp().s[62]++;
        setError(null);
        /* istanbul ignore next */
        cov_1wkjx0iwyp().s[63]++;
        _logger.logger.info(_logger.LogLevel.INFO, 'Proactive monitoring system initialized successfully', {
          autoStart,
          enableErrorBoundary
        }, _logger.LogCategory.SYSTEM);
      } catch (err) {
        const errorMessage =
        /* istanbul ignore next */
        (cov_1wkjx0iwyp().s[64]++, err instanceof Error ?
        /* istanbul ignore next */
        (cov_1wkjx0iwyp().b[20][0]++, err.message) :
        /* istanbul ignore next */
        (cov_1wkjx0iwyp().b[20][1]++, 'Failed to initialize monitoring'));
        /* istanbul ignore next */
        cov_1wkjx0iwyp().s[65]++;
        setError(errorMessage);
        /* istanbul ignore next */
        cov_1wkjx0iwyp().s[66]++;
        _logger.logger.error(_logger.LogLevel.ERROR, 'Failed to initialize monitoring system', {
          error: errorMessage
        }, _logger.LogCategory.SYSTEM);
      }
    };
    /* istanbul ignore next */
    cov_1wkjx0iwyp().s[67]++;
    initializeMonitoring();
    // Cleanup
    /* istanbul ignore next */
    cov_1wkjx0iwyp().s[68]++;
    return () => {
      /* istanbul ignore next */
      cov_1wkjx0iwyp().f[13]++;
      cov_1wkjx0iwyp().s[69]++;
      if (typeof window !== 'undefined') {
        /* istanbul ignore next */
        cov_1wkjx0iwyp().b[21][0]++;
        cov_1wkjx0iwyp().s[70]++;
        window.removeEventListener('error', handleGlobalError);
        /* istanbul ignore next */
        cov_1wkjx0iwyp().s[71]++;
        window.removeEventListener('unhandledrejection', handleUnhandledRejection);
        /* istanbul ignore next */
        cov_1wkjx0iwyp().s[72]++;
        window.removeEventListener('error', handleResourceError, true);
      } else
      /* istanbul ignore next */
      {
        cov_1wkjx0iwyp().b[21][1]++;
      }
    };
  }, [autoStart]);
  /* istanbul ignore next */
  cov_1wkjx0iwyp().s[73]++;
  const handleGlobalError = async event => {
    /* istanbul ignore next */
    cov_1wkjx0iwyp().f[14]++;
    cov_1wkjx0iwyp().s[74]++;
    try {
      /* istanbul ignore next */
      cov_1wkjx0iwyp().s[75]++;
      await _proactivemonitoring.proactiveMonitoring.reportError(
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().b[22][0]++, event.error) ||
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().b[22][1]++, new Error(event.message)), {
        source: 'global_error_handler',
        filename: event.filename,
        lineno: event.lineno,
        colno: event.colno,
        timestamp: new Date().toISOString(),
        url: window.location.href,
        userAgent: navigator.userAgent
      });
    } catch (reportingError) {
      /* istanbul ignore next */
      cov_1wkjx0iwyp().s[76]++;
      _logger.logger.error(_logger.LogLevel.ERROR, 'Failed to report global error', {
        originalError: event.message,
        reportingError: reportingError instanceof Error ?
        /* istanbul ignore next */
        (cov_1wkjx0iwyp().b[23][0]++, reportingError.message) :
        /* istanbul ignore next */
        (cov_1wkjx0iwyp().b[23][1]++, 'Unknown error')
      }, _logger.LogCategory.SYSTEM);
    }
  };
  /* istanbul ignore next */
  cov_1wkjx0iwyp().s[77]++;
  const handleUnhandledRejection = async event => {
    /* istanbul ignore next */
    cov_1wkjx0iwyp().f[15]++;
    cov_1wkjx0iwyp().s[78]++;
    try {
      const error =
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().s[79]++, event.reason instanceof Error ?
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().b[24][0]++, event.reason) :
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().b[24][1]++, new Error(String(event.reason))));
      /* istanbul ignore next */
      cov_1wkjx0iwyp().s[80]++;
      await _proactivemonitoring.proactiveMonitoring.reportError(error, {
        source: 'unhandled_promise_rejection',
        timestamp: new Date().toISOString(),
        url: window.location.href,
        userAgent: navigator.userAgent,
        reason: String(event.reason)
      });
    } catch (reportingError) {
      /* istanbul ignore next */
      cov_1wkjx0iwyp().s[81]++;
      _logger.logger.error(_logger.LogLevel.ERROR, 'Failed to report unhandled promise rejection', {
        originalReason: String(event.reason),
        reportingError: reportingError instanceof Error ?
        /* istanbul ignore next */
        (cov_1wkjx0iwyp().b[25][0]++, reportingError.message) :
        /* istanbul ignore next */
        (cov_1wkjx0iwyp().b[25][1]++, 'Unknown error')
      }, _logger.LogCategory.SYSTEM);
    }
  };
  /* istanbul ignore next */
  cov_1wkjx0iwyp().s[82]++;
  const handleResourceError = async event => {
    /* istanbul ignore next */
    cov_1wkjx0iwyp().f[16]++;
    cov_1wkjx0iwyp().s[83]++;
    if (
    /* istanbul ignore next */
    (cov_1wkjx0iwyp().b[27][0]++, event.target) &&
    /* istanbul ignore next */
    (cov_1wkjx0iwyp().b[27][1]++, event.target !== window)) {
      /* istanbul ignore next */
      cov_1wkjx0iwyp().b[26][0]++;
      const target =
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().s[84]++, event.target);
      const tagName =
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().s[85]++, target.tagName?.toLowerCase());
      const src =
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().s[86]++,
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().b[28][0]++, target.src) ||
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().b[28][1]++, target.href));
      /* istanbul ignore next */
      cov_1wkjx0iwyp().s[87]++;
      if (
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().b[30][0]++, src) &&
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().b[30][1]++, ['img', 'script', 'link', 'iframe'].includes(tagName))) {
        /* istanbul ignore next */
        cov_1wkjx0iwyp().b[29][0]++;
        cov_1wkjx0iwyp().s[88]++;
        try {
          /* istanbul ignore next */
          cov_1wkjx0iwyp().s[89]++;
          await _proactivemonitoring.proactiveMonitoring.reportError(new Error(`Resource loading failed: ${tagName} - ${src}`), {
            source: 'resource_error',
            resourceType: tagName,
            resourceUrl: src,
            timestamp: new Date().toISOString(),
            url: window.location.href
          });
        } catch (reportingError) {
          /* istanbul ignore next */
          cov_1wkjx0iwyp().s[90]++;
          _logger.logger.error(_logger.LogLevel.ERROR, 'Failed to report resource error', {
            resourceUrl: src,
            resourceType: tagName,
            reportingError: reportingError instanceof Error ?
            /* istanbul ignore next */
            (cov_1wkjx0iwyp().b[31][0]++, reportingError.message) :
            /* istanbul ignore next */
            (cov_1wkjx0iwyp().b[31][1]++, 'Unknown error')
          }, _logger.LogCategory.SYSTEM);
        }
      } else
      /* istanbul ignore next */
      {
        cov_1wkjx0iwyp().b[29][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1wkjx0iwyp().b[26][1]++;
    }
  };
  const contextValue =
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().s[91]++, {
    isInitialized,
    isMonitoring,
    error
  });
  const content =
  /* istanbul ignore next */
  (/*#__PURE__*/cov_1wkjx0iwyp().s[92]++, (0, _jsxruntime.jsx)(MonitoringContext.Provider, {
    value: contextValue,
    children: children
  }));
  // Envolver con Error Boundary si está habilitado
  /* istanbul ignore next */
  cov_1wkjx0iwyp().s[93]++;
  if (enableErrorBoundary) {
    /* istanbul ignore next */
    cov_1wkjx0iwyp().b[32][0]++;
    cov_1wkjx0iwyp().s[94]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(_ErrorBoundary.ErrorBoundaryWrapper, {
      showDetails: process.env.NODE_ENV === 'development',
      enableReporting: true,
      children: content
    });
  } else
  /* istanbul ignore next */
  {
    cov_1wkjx0iwyp().b[32][1]++;
  }
  cov_1wkjx0iwyp().s[95]++;
  return content;
}
function useErrorReporting() {
  /* istanbul ignore next */
  cov_1wkjx0iwyp().f[17]++;
  const {
    isInitialized
  } =
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().s[96]++, useMonitoring());
  const reportError =
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().s[97]++, _react.default.useCallback(async (error, context) => {
    /* istanbul ignore next */
    cov_1wkjx0iwyp().f[18]++;
    cov_1wkjx0iwyp().s[98]++;
    if (!isInitialized) {
      /* istanbul ignore next */
      cov_1wkjx0iwyp().b[33][0]++;
      cov_1wkjx0iwyp().s[99]++;
      _logger.logger.warn(_logger.LogLevel.WARN, 'Monitoring not initialized, error not reported', {
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1wkjx0iwyp().b[34][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1wkjx0iwyp().b[34][1]++, error)
      }, _logger.LogCategory.SYSTEM);
      /* istanbul ignore next */
      cov_1wkjx0iwyp().s[100]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1wkjx0iwyp().b[33][1]++;
    }
    cov_1wkjx0iwyp().s[101]++;
    try {
      /* istanbul ignore next */
      cov_1wkjx0iwyp().s[102]++;
      await _proactivemonitoring.proactiveMonitoring.reportError(error, {
        ...context,
        source: 'manual_report',
        timestamp: new Date().toISOString(),
        url: typeof window !== 'undefined' ?
        /* istanbul ignore next */
        (cov_1wkjx0iwyp().b[35][0]++, window.location.href) :
        /* istanbul ignore next */
        (cov_1wkjx0iwyp().b[35][1]++, 'unknown')
      });
    } catch (reportingError) {
      /* istanbul ignore next */
      cov_1wkjx0iwyp().s[103]++;
      _logger.logger.error(_logger.LogLevel.ERROR, 'Failed to report error manually', {
        originalError: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1wkjx0iwyp().b[36][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1wkjx0iwyp().b[36][1]++, error),
        reportingError: reportingError instanceof Error ?
        /* istanbul ignore next */
        (cov_1wkjx0iwyp().b[37][0]++, reportingError.message) :
        /* istanbul ignore next */
        (cov_1wkjx0iwyp().b[37][1]++, 'Unknown error')
      }, _logger.LogCategory.SYSTEM);
    }
  }, [isInitialized]));
  /* istanbul ignore next */
  cov_1wkjx0iwyp().s[104]++;
  return {
    reportError,
    isInitialized
  };
}
function useMonitoringStats() {
  /* istanbul ignore next */
  cov_1wkjx0iwyp().f[19]++;
  const {
    isInitialized
  } =
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().s[105]++, useMonitoring());
  const [stats, setStats] =
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().s[106]++, (0, _react.useState)(null));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().s[107]++, (0, _react.useState)(false));
  const refreshStats =
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().s[108]++, _react.default.useCallback(async () => {
    /* istanbul ignore next */
    cov_1wkjx0iwyp().f[20]++;
    cov_1wkjx0iwyp().s[109]++;
    if (!isInitialized) {
      /* istanbul ignore next */
      cov_1wkjx0iwyp().b[38][0]++;
      cov_1wkjx0iwyp().s[110]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1wkjx0iwyp().b[38][1]++;
    }
    cov_1wkjx0iwyp().s[111]++;
    try {
      /* istanbul ignore next */
      cov_1wkjx0iwyp().s[112]++;
      setLoading(true);
      const newStats =
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().s[113]++, await _proactivemonitoring.proactiveMonitoring.getMonitoringStats());
      /* istanbul ignore next */
      cov_1wkjx0iwyp().s[114]++;
      setStats(newStats);
    } catch (error) {
      /* istanbul ignore next */
      cov_1wkjx0iwyp().s[115]++;
      _logger.logger.error(_logger.LogLevel.ERROR, 'Failed to fetch monitoring stats', {
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1wkjx0iwyp().b[39][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1wkjx0iwyp().b[39][1]++, 'Unknown error')
      }, _logger.LogCategory.SYSTEM);
    } finally {
      /* istanbul ignore next */
      cov_1wkjx0iwyp().s[116]++;
      setLoading(false);
    }
  }, [isInitialized]));
  /* istanbul ignore next */
  cov_1wkjx0iwyp().s[117]++;
  _react.default.useEffect(() => {
    /* istanbul ignore next */
    cov_1wkjx0iwyp().f[21]++;
    cov_1wkjx0iwyp().s[118]++;
    if (isInitialized) {
      /* istanbul ignore next */
      cov_1wkjx0iwyp().b[40][0]++;
      cov_1wkjx0iwyp().s[119]++;
      refreshStats();
      // Actualizar estadísticas cada 30 segundos
      const interval =
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().s[120]++, setInterval(refreshStats, 30000));
      /* istanbul ignore next */
      cov_1wkjx0iwyp().s[121]++;
      return () => {
        /* istanbul ignore next */
        cov_1wkjx0iwyp().f[22]++;
        cov_1wkjx0iwyp().s[122]++;
        return clearInterval(interval);
      };
    } else
    /* istanbul ignore next */
    {
      cov_1wkjx0iwyp().b[40][1]++;
    }
  }, [isInitialized, refreshStats]);
  /* istanbul ignore next */
  cov_1wkjx0iwyp().s[123]++;
  return {
    stats,
    loading,
    refreshStats
  };
}
function MonitoringStatus() {
  /* istanbul ignore next */
  cov_1wkjx0iwyp().f[23]++;
  const {
    isInitialized,
    isMonitoring,
    error
  } =
  /* istanbul ignore next */
  (cov_1wkjx0iwyp().s[124]++, useMonitoring());
  /* istanbul ignore next */
  cov_1wkjx0iwyp().s[125]++;
  if (process.env.NODE_ENV !== 'development') {
    /* istanbul ignore next */
    cov_1wkjx0iwyp().b[41][0]++;
    cov_1wkjx0iwyp().s[126]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1wkjx0iwyp().b[41][1]++;
  }
  cov_1wkjx0iwyp().s[127]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "fixed bottom-4 right-4 z-50 bg-black text-white text-xs p-2 rounded shadow-lg",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: ["Monitoring: ", isInitialized ?
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().b[42][0]++, '✅') :
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().b[42][1]++, '❌')]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: ["Active: ", isMonitoring ?
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().b[43][0]++, '✅') :
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().b[43][1]++, '❌')]
    }),
    /* istanbul ignore next */
    (cov_1wkjx0iwyp().b[44][0]++, error) &&
    /* istanbul ignore next */
    (cov_1wkjx0iwyp().b[44][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "text-red-300",
      children: ["Error: ", error instanceof Error ?
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().b[45][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().b[45][1]++,
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().b[46][0]++, error?.toString()) ||
      /* istanbul ignore next */
      (cov_1wkjx0iwyp().b[46][1]++, 'Error desconocido'))]
    }))]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,