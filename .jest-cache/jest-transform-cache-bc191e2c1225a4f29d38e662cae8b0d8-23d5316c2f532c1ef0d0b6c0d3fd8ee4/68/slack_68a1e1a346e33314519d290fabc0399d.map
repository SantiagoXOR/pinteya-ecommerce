{"version":3,"names":["cov_padv20ya3","actualCoverage","s","SlackNotificationService","f","sendErrorAlert","sendLowStockAlert","sendOrderAlert","sendSalesReport","sendSystemAlert","slackService","getInstance","instance","b","configure","config","webhookUrl","botToken","sendNotification","response","fetch","apiEndpoint","method","headers","body","JSON","stringify","ok","Error","result","json","success","error","console","_usetoast","toast","title","description","variant","orderData","attachment","color","orderId","fields","value","customerName","short","total","toFixed","status","items","map","item","name","quantity","join","footer","ts","Math","floor","Date","now","channel","message","attachments","priority","productData","productName","currentStock","toString","minimumStock","productId","errorData","colorMap","low","medium","high","critical","severity","toUpperCase","context","userId","timestamp","getTime","reportData","period","totalSales","totalOrders","averageOrderValue","topProducts","p","sales","alertData","info","warning","emojiMap","text","details","Object","entries","key","String","undefined","testConnection"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\notifications\\slack.ts"],"sourcesContent":["'use client'\r\n\r\nimport { toast } from '@/components/ui/use-toast'\r\n\r\nexport interface SlackNotificationConfig {\r\n  channel: string\r\n  message: string\r\n  username?: string\r\n  iconEmoji?: string\r\n  attachments?: SlackAttachment[]\r\n  blocks?: SlackBlock[]\r\n  threadTs?: string\r\n  priority?: 'low' | 'normal' | 'high' | 'critical'\r\n}\r\n\r\nexport interface SlackAttachment {\r\n  color?: 'good' | 'warning' | 'danger' | string\r\n  title?: string\r\n  titleLink?: string\r\n  text?: string\r\n  fields?: Array<{\r\n    title: string\r\n    value: string\r\n    short?: boolean\r\n  }>\r\n  footer?: string\r\n  ts?: number\r\n}\r\n\r\nexport interface SlackBlock {\r\n  type: string\r\n  text?: {\r\n    type: string\r\n    text: string\r\n  }\r\n  elements?: any[]\r\n  accessory?: any\r\n}\r\n\r\nexport class SlackNotificationService {\r\n  private static instance: SlackNotificationService\r\n  private webhookUrl: string | null = null\r\n  private botToken: string | null = null\r\n  private apiEndpoint = '/api/notifications/slack'\r\n\r\n  static getInstance(): SlackNotificationService {\r\n    if (!SlackNotificationService.instance) {\r\n      SlackNotificationService.instance = new SlackNotificationService()\r\n    }\r\n    return SlackNotificationService.instance\r\n  }\r\n\r\n  configure(config: { webhookUrl?: string; botToken?: string }) {\r\n    this.webhookUrl = config.webhookUrl || null\r\n    this.botToken = config.botToken || null\r\n  }\r\n\r\n  async sendNotification(config: SlackNotificationConfig): Promise<boolean> {\r\n    try {\r\n      const response = await fetch(this.apiEndpoint, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(config)\r\n      })\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al enviar notificaci√≥n a Slack')\r\n      }\r\n\r\n      const result = await response.json()\r\n      return result.success\r\n    } catch (error) {\r\n      console.error('Error sending Slack notification:', error)\r\n      toast({\r\n        title: 'Error',\r\n        description: 'No se pudo enviar la notificaci√≥n a Slack',\r\n        variant: 'destructive'\r\n      })\r\n      return false\r\n    }\r\n  }\r\n\r\n  async sendOrderAlert(orderData: {\r\n    orderId: string\r\n    customerName: string\r\n    total: number\r\n    items: Array<{ name: string; quantity: number }>\r\n    status: string\r\n  }): Promise<boolean> {\r\n    const attachment: SlackAttachment = {\r\n      color: 'good',\r\n      title: `Nueva orden #${orderData.orderId}`,\r\n      fields: [\r\n        {\r\n          title: 'Cliente',\r\n          value: orderData.customerName,\r\n          short: true\r\n        },\r\n        {\r\n          title: 'Total',\r\n          value: `$${orderData.total.toFixed(2)}`,\r\n          short: true\r\n        },\r\n        {\r\n          title: 'Estado',\r\n          value: orderData.status,\r\n          short: true\r\n        },\r\n        {\r\n          title: 'Productos',\r\n          value: orderData.items.map(item => `${item.name} (x${item.quantity})`).join('\\n'),\r\n          short: false\r\n        }\r\n      ],\r\n      footer: 'Sistema E-commerce',\r\n      ts: Math.floor(Date.now() / 1000)\r\n    }\r\n\r\n    return this.sendNotification({\r\n      channel: '#orders',\r\n      message: `Nueva orden recibida: #${orderData.orderId}`,\r\n      attachments: [attachment],\r\n      priority: 'normal'\r\n    })\r\n  }\r\n\r\n  async sendLowStockAlert(productData: {\r\n    productName: string\r\n    currentStock: number\r\n    minimumStock: number\r\n    productId: string\r\n  }): Promise<boolean> {\r\n    const attachment: SlackAttachment = {\r\n      color: 'warning',\r\n      title: '‚ö†Ô∏è Alerta de Stock Bajo',\r\n      fields: [\r\n        {\r\n          title: 'Producto',\r\n          value: productData.productName,\r\n          short: true\r\n        },\r\n        {\r\n          title: 'Stock Actual',\r\n          value: productData.currentStock.toString(),\r\n          short: true\r\n        },\r\n        {\r\n          title: 'Stock M√≠nimo',\r\n          value: productData.minimumStock.toString(),\r\n          short: true\r\n        },\r\n        {\r\n          title: 'ID Producto',\r\n          value: productData.productId,\r\n          short: true\r\n        }\r\n      ],\r\n      footer: 'Sistema de Inventario',\r\n      ts: Math.floor(Date.now() / 1000)\r\n    }\r\n\r\n    return this.sendNotification({\r\n      channel: '#inventory',\r\n      message: `üö® Stock bajo detectado para: ${productData.productName}`,\r\n      attachments: [attachment],\r\n      priority: 'high'\r\n    })\r\n  }\r\n\r\n  async sendErrorAlert(errorData: {\r\n    error: string\r\n    context: string\r\n    userId?: string\r\n    timestamp: Date\r\n    severity: 'low' | 'medium' | 'high' | 'critical'\r\n  }): Promise<boolean> {\r\n    const colorMap = {\r\n      low: 'good',\r\n      medium: 'warning',\r\n      high: 'danger',\r\n      critical: 'danger'\r\n    }\r\n\r\n    const attachment: SlackAttachment = {\r\n      color: colorMap[errorData.severity],\r\n      title: `üö® Error ${errorData.severity.toUpperCase()}`,\r\n      fields: [\r\n        {\r\n          title: 'Error',\r\n          value: errorData.error,\r\n          short: false\r\n        },\r\n        {\r\n          title: 'Contexto',\r\n          value: errorData.context,\r\n          short: false\r\n        },\r\n        {\r\n          title: 'Usuario',\r\n          value: errorData.userId || 'N/A',\r\n          short: true\r\n        },\r\n        {\r\n          title: 'Severidad',\r\n          value: errorData.severity.toUpperCase(),\r\n          short: true\r\n        }\r\n      ],\r\n      footer: 'Sistema de Monitoreo',\r\n      ts: Math.floor(errorData.timestamp.getTime() / 1000)\r\n    }\r\n\r\n    return this.sendNotification({\r\n      channel: '#errors',\r\n      message: `Error detectado en el sistema`,\r\n      attachments: [attachment],\r\n      priority: errorData.severity === 'critical' ? 'critical' : 'high'\r\n    })\r\n  }\r\n\r\n  async sendSalesReport(reportData: {\r\n    period: string\r\n    totalSales: number\r\n    totalOrders: number\r\n    averageOrderValue: number\r\n    topProducts: Array<{ name: string; sales: number }>\r\n  }): Promise<boolean> {\r\n    const attachment: SlackAttachment = {\r\n      color: 'good',\r\n      title: `üìä Reporte de Ventas - ${reportData.period}`,\r\n      fields: [\r\n        {\r\n          title: 'Ventas Totales',\r\n          value: `$${reportData.totalSales.toFixed(2)}`,\r\n          short: true\r\n        },\r\n        {\r\n          title: '√ìrdenes Totales',\r\n          value: reportData.totalOrders.toString(),\r\n          short: true\r\n        },\r\n        {\r\n          title: 'Valor Promedio por Orden',\r\n          value: `$${reportData.averageOrderValue.toFixed(2)}`,\r\n          short: true\r\n        },\r\n        {\r\n          title: 'Top Productos',\r\n          value: reportData.topProducts.map(p => `${p.name}: ${p.sales} ventas`).join('\\n'),\r\n          short: false\r\n        }\r\n      ],\r\n      footer: 'Reporte Autom√°tico',\r\n      ts: Math.floor(Date.now() / 1000)\r\n    }\r\n\r\n    return this.sendNotification({\r\n      channel: '#sales',\r\n      message: `Reporte de ventas generado para ${reportData.period}`,\r\n      attachments: [attachment],\r\n      priority: 'low'\r\n    })\r\n  }\r\n\r\n  async sendSystemAlert(alertData: {\r\n    title: string\r\n    message: string\r\n    severity: 'info' | 'warning' | 'error'\r\n    details?: Record<string, any>\r\n  }): Promise<boolean> {\r\n    const colorMap = {\r\n      info: 'good',\r\n      warning: 'warning',\r\n      error: 'danger'\r\n    }\r\n\r\n    const emojiMap = {\r\n      info: '‚ÑπÔ∏è',\r\n      warning: '‚ö†Ô∏è',\r\n      error: 'üö®'\r\n    }\r\n\r\n    const attachment: SlackAttachment = {\r\n      color: colorMap[alertData.severity],\r\n      title: `${emojiMap[alertData.severity]} ${alertData.title}`,\r\n      text: alertData.message,\r\n      fields: alertData.details ? Object.entries(alertData.details).map(([key, value]) => ({\r\n        title: key,\r\n        value: String(value),\r\n        short: true\r\n      })) : undefined,\r\n      footer: 'Sistema de Alertas',\r\n      ts: Math.floor(Date.now() / 1000)\r\n    }\r\n\r\n    return this.sendNotification({\r\n      channel: '#system',\r\n      message: alertData.message,\r\n      attachments: [attachment],\r\n      priority: alertData.severity === 'error' ? 'high' : 'normal'\r\n    })\r\n  }\r\n\r\n  async testConnection(): Promise<boolean> {\r\n    try {\r\n      const response = await fetch('/api/notifications/slack/test', {\r\n        method: 'POST'\r\n      })\r\n      return response.ok\r\n    } catch (error) {\r\n      console.error('Error testing Slack connection:', error)\r\n      return false\r\n    }\r\n  }\r\n}\r\n\r\n// Instancia singleton para uso global\r\nexport const slackService = SlackNotificationService.getInstance()\r\n\r\n// Funciones de conveniencia\r\nexport const sendOrderAlert = (orderData: Parameters<SlackNotificationService['sendOrderAlert']>[0]) => \r\n  slackService.sendOrderAlert(orderData)\r\n\r\nexport const sendLowStockAlert = (productData: Parameters<SlackNotificationService['sendLowStockAlert']>[0]) => \r\n  slackService.sendLowStockAlert(productData)\r\n\r\nexport const sendErrorAlert = (errorData: Parameters<SlackNotificationService['sendErrorAlert']>[0]) => \r\n  slackService.sendErrorAlert(errorData)\r\n\r\nexport const sendSalesReport = (reportData: Parameters<SlackNotificationService['sendSalesReport']>[0]) => \r\n  slackService.sendSalesReport(reportData)\r\n\r\nexport const sendSystemAlert = (alertData: Parameters<SlackNotificationService['sendSystemAlert']>[0]) => \r\n  slackService.sendSystemAlert(alertData)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappingswUa;IAAAA,aAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;AAAAA,aAAA,GAAAE,CAAA;;;;;;;;;;;;;;;;;;;;MAjSAC,yBAAA;IAAA;IAAAH,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAAC,wBAAA;;MAiSAE,eAAA;IAAA;IAAAL,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAAG,cAAA;;MAHAC,kBAAA;IAAA;IAAAN,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAAI,iBAAA;;MAHAC,eAAA;IAAA;IAAAP,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAAK,cAAA;;MASAC,gBAAA;IAAA;IAAAR,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAAM,eAAA;;MAGAC,gBAAA;IAAA;IAAAT,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAAO,eAAA;;MAfAC,aAAA;IAAA;IAAAV,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAAQ,YAAA;;;;;kCA7TS;AAqCf,MAAMP,wBAAA;EAMX,OAAOQ,YAAA,EAAwC;IAAA;IAAAX,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;IAC7C,IAAI,CAACC,wBAAA,CAAyBS,QAAQ,EAAE;MAAA;MAAAZ,aAAA,GAAAa,CAAA;MAAAb,aAAA,GAAAE,CAAA;MACtCC,wBAAA,CAAyBS,QAAQ,GAAG,IAAIT,wBAAA;IAC1C;IAAA;IAAA;MAAAH,aAAA,GAAAa,CAAA;IAAA;IAAAb,aAAA,GAAAE,CAAA;IACA,OAAOC,wBAAA,CAAyBS,QAAQ;EAC1C;EAEAE,UAAUC,MAAkD,EAAE;IAAA;IAAAf,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;IAC5D,IAAI,CAACc,UAAU;IAAG;IAAA,CAAAhB,aAAA,GAAAa,CAAA,UAAAE,MAAA,CAAOC,UAAU;IAAA;IAAA,CAAAhB,aAAA,GAAAa,CAAA,UAAI;IAAA;IAAAb,aAAA,GAAAE,CAAA;IACvC,IAAI,CAACe,QAAQ;IAAG;IAAA,CAAAjB,aAAA,GAAAa,CAAA,UAAAE,MAAA,CAAOE,QAAQ;IAAA;IAAA,CAAAjB,aAAA,GAAAa,CAAA,UAAI;EACrC;EAEA,MAAMK,iBAAiBH,MAA+B,EAAoB;IAAA;IAAAf,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;IACxE,IAAI;MACF,MAAMiB,QAAA;MAAA;MAAA,CAAAnB,aAAA,GAAAE,CAAA,QAAW,MAAMkB,KAAA,CAAM,IAAI,CAACC,WAAW,EAAE;QAC7CC,MAAA,EAAQ;QACRC,OAAA,EAAS;UACP,gBAAgB;QAClB;QACAC,IAAA,EAAMC,IAAA,CAAKC,SAAS,CAACX,MAAA;MACvB;MAAA;MAAAf,aAAA,GAAAE,CAAA;MAEA,IAAI,CAACiB,QAAA,CAASQ,EAAE,EAAE;QAAA;QAAA3B,aAAA,GAAAa,CAAA;QAAAb,aAAA,GAAAE,CAAA;QAChB,MAAM,IAAI0B,KAAA,CAAM;MAClB;MAAA;MAAA;QAAA5B,aAAA,GAAAa,CAAA;MAAA;MAEA,MAAMgB,MAAA;MAAA;MAAA,CAAA7B,aAAA,GAAAE,CAAA,QAAS,MAAMiB,QAAA,CAASW,IAAI;MAAA;MAAA9B,aAAA,GAAAE,CAAA;MAClC,OAAO2B,MAAA,CAAOE,OAAO;IACvB,EAAE,OAAOC,KAAA,EAAO;MAAA;MAAAhC,aAAA,GAAAE,CAAA;MACd+B,OAAA,CAAQD,KAAK,CAAC,qCAAqCA,KAAA;MAAA;MAAAhC,aAAA,GAAAE,CAAA;MACnD,IAAAgC,SAAA,CAAAC,KAAK,EAAC;QACJC,KAAA,EAAO;QACPC,WAAA,EAAa;QACbC,OAAA,EAAS;MACX;MAAA;MAAAtC,aAAA,GAAAE,CAAA;MACA,OAAO;IACT;EACF;EAEA,MAAMK,eAAegC,SAMpB,EAAoB;IAAA;IAAAvC,aAAA,GAAAI,CAAA;IACnB,MAAMoC,UAAA;IAAA;IAAA,CAAAxC,aAAA,GAAAE,CAAA,QAA8B;MAClCuC,KAAA,EAAO;MACPL,KAAA,EAAO,gBAAgBG,SAAA,CAAUG,OAAO,EAAE;MAC1CC,MAAA,EAAQ,CACN;QACEP,KAAA,EAAO;QACPQ,KAAA,EAAOL,SAAA,CAAUM,YAAY;QAC7BC,KAAA,EAAO;MACT,GACA;QACEV,KAAA,EAAO;QACPQ,KAAA,EAAO,IAAIL,SAAA,CAAUQ,KAAK,CAACC,OAAO,CAAC,IAAI;QACvCF,KAAA,EAAO;MACT,GACA;QACEV,KAAA,EAAO;QACPQ,KAAA,EAAOL,SAAA,CAAUU,MAAM;QACvBH,KAAA,EAAO;MACT,GACA;QACEV,KAAA,EAAO;QACPQ,KAAA,EAAOL,SAAA,CAAUW,KAAK,CAACC,GAAG,CAACC,IAAA,IAAQ;UAAA;UAAApD,aAAA,GAAAI,CAAA;UAAAJ,aAAA,GAAAE,CAAA;UAAA,UAAGkD,IAAA,CAAKC,IAAI,MAAMD,IAAA,CAAKE,QAAQ,GAAG;QAAD,CAAC,EAAEC,IAAI,CAAC;QAC5ET,KAAA,EAAO;MACT,EACD;MACDU,MAAA,EAAQ;MACRC,EAAA,EAAIC,IAAA,CAAKC,KAAK,CAACC,IAAA,CAAKC,GAAG,KAAK;IAC9B;IAAA;IAAA7D,aAAA,GAAAE,CAAA;IAEA,OAAO,IAAI,CAACgB,gBAAgB,CAAC;MAC3B4C,OAAA,EAAS;MACTC,OAAA,EAAS,0BAA0BxB,SAAA,CAAUG,OAAO,EAAE;MACtDsB,WAAA,EAAa,CAACxB,UAAA,CAAW;MACzByB,QAAA,EAAU;IACZ;EACF;EAEA,MAAM3D,kBAAkB4D,WAKvB,EAAoB;IAAA;IAAAlE,aAAA,GAAAI,CAAA;IACnB,MAAMoC,UAAA;IAAA;IAAA,CAAAxC,aAAA,GAAAE,CAAA,QAA8B;MAClCuC,KAAA,EAAO;MACPL,KAAA,EAAO;MACPO,MAAA,EAAQ,CACN;QACEP,KAAA,EAAO;QACPQ,KAAA,EAAOsB,WAAA,CAAYC,WAAW;QAC9BrB,KAAA,EAAO;MACT,GACA;QACEV,KAAA,EAAO;QACPQ,KAAA,EAAOsB,WAAA,CAAYE,YAAY,CAACC,QAAQ;QACxCvB,KAAA,EAAO;MACT,GACA;QACEV,KAAA,EAAO;QACPQ,KAAA,EAAOsB,WAAA,CAAYI,YAAY,CAACD,QAAQ;QACxCvB,KAAA,EAAO;MACT,GACA;QACEV,KAAA,EAAO;QACPQ,KAAA,EAAOsB,WAAA,CAAYK,SAAS;QAC5BzB,KAAA,EAAO;MACT,EACD;MACDU,MAAA,EAAQ;MACRC,EAAA,EAAIC,IAAA,CAAKC,KAAK,CAACC,IAAA,CAAKC,GAAG,KAAK;IAC9B;IAAA;IAAA7D,aAAA,GAAAE,CAAA;IAEA,OAAO,IAAI,CAACgB,gBAAgB,CAAC;MAC3B4C,OAAA,EAAS;MACTC,OAAA,EAAS,iCAAiCG,WAAA,CAAYC,WAAW,EAAE;MACnEH,WAAA,EAAa,CAACxB,UAAA,CAAW;MACzByB,QAAA,EAAU;IACZ;EACF;EAEA,MAAM5D,eAAemE,SAMpB,EAAoB;IAAA;IAAAxE,aAAA,GAAAI,CAAA;IACnB,MAAMqE,QAAA;IAAA;IAAA,CAAAzE,aAAA,GAAAE,CAAA,QAAW;MACfwE,GAAA,EAAK;MACLC,MAAA,EAAQ;MACRC,IAAA,EAAM;MACNC,QAAA,EAAU;IACZ;IAEA,MAAMrC,UAAA;IAAA;IAAA,CAAAxC,aAAA,GAAAE,CAAA,QAA8B;MAClCuC,KAAA,EAAOgC,QAAQ,CAACD,SAAA,CAAUM,QAAQ,CAAC;MACnC1C,KAAA,EAAO,YAAYoC,SAAA,CAAUM,QAAQ,CAACC,WAAW,IAAI;MACrDpC,MAAA,EAAQ,CACN;QACEP,KAAA,EAAO;QACPQ,KAAA,EAAO4B,SAAA,CAAUxC,KAAK;QACtBc,KAAA,EAAO;MACT,GACA;QACEV,KAAA,EAAO;QACPQ,KAAA,EAAO4B,SAAA,CAAUQ,OAAO;QACxBlC,KAAA,EAAO;MACT,GACA;QACEV,KAAA,EAAO;QACPQ,KAAA;QAAO;QAAA,CAAA5C,aAAA,GAAAa,CAAA,UAAA2D,SAAA,CAAUS,MAAM;QAAA;QAAA,CAAAjF,aAAA,GAAAa,CAAA,UAAI;QAC3BiC,KAAA,EAAO;MACT,GACA;QACEV,KAAA,EAAO;QACPQ,KAAA,EAAO4B,SAAA,CAAUM,QAAQ,CAACC,WAAW;QACrCjC,KAAA,EAAO;MACT,EACD;MACDU,MAAA,EAAQ;MACRC,EAAA,EAAIC,IAAA,CAAKC,KAAK,CAACa,SAAA,CAAUU,SAAS,CAACC,OAAO,KAAK;IACjD;IAAA;IAAAnF,aAAA,GAAAE,CAAA;IAEA,OAAO,IAAI,CAACgB,gBAAgB,CAAC;MAC3B4C,OAAA,EAAS;MACTC,OAAA,EAAS,+BAA+B;MACxCC,WAAA,EAAa,CAACxB,UAAA,CAAW;MACzByB,QAAA,EAAUO,SAAA,CAAUM,QAAQ,KAAK;MAAA;MAAA,CAAA9E,aAAA,GAAAa,CAAA,UAAa;MAAA;MAAA,CAAAb,aAAA,GAAAa,CAAA,UAAa;IAC7D;EACF;EAEA,MAAML,gBAAgB4E,UAMrB,EAAoB;IAAA;IAAApF,aAAA,GAAAI,CAAA;IACnB,MAAMoC,UAAA;IAAA;IAAA,CAAAxC,aAAA,GAAAE,CAAA,QAA8B;MAClCuC,KAAA,EAAO;MACPL,KAAA,EAAO,0BAA0BgD,UAAA,CAAWC,MAAM,EAAE;MACpD1C,MAAA,EAAQ,CACN;QACEP,KAAA,EAAO;QACPQ,KAAA,EAAO,IAAIwC,UAAA,CAAWE,UAAU,CAACtC,OAAO,CAAC,IAAI;QAC7CF,KAAA,EAAO;MACT,GACA;QACEV,KAAA,EAAO;QACPQ,KAAA,EAAOwC,UAAA,CAAWG,WAAW,CAAClB,QAAQ;QACtCvB,KAAA,EAAO;MACT,GACA;QACEV,KAAA,EAAO;QACPQ,KAAA,EAAO,IAAIwC,UAAA,CAAWI,iBAAiB,CAACxC,OAAO,CAAC,IAAI;QACpDF,KAAA,EAAO;MACT,GACA;QACEV,KAAA,EAAO;QACPQ,KAAA,EAAOwC,UAAA,CAAWK,WAAW,CAACtC,GAAG,CAACuC,CAAA,IAAK;UAAA;UAAA1F,aAAA,GAAAI,CAAA;UAAAJ,aAAA,GAAAE,CAAA;UAAA,UAAGwF,CAAA,CAAErC,IAAI,KAAKqC,CAAA,CAAEC,KAAK,SAAS;QAAD,CAAC,EAAEpC,IAAI,CAAC;QAC5ET,KAAA,EAAO;MACT,EACD;MACDU,MAAA,EAAQ;MACRC,EAAA,EAAIC,IAAA,CAAKC,KAAK,CAACC,IAAA,CAAKC,GAAG,KAAK;IAC9B;IAAA;IAAA7D,aAAA,GAAAE,CAAA;IAEA,OAAO,IAAI,CAACgB,gBAAgB,CAAC;MAC3B4C,OAAA,EAAS;MACTC,OAAA,EAAS,mCAAmCqB,UAAA,CAAWC,MAAM,EAAE;MAC/DrB,WAAA,EAAa,CAACxB,UAAA,CAAW;MACzByB,QAAA,EAAU;IACZ;EACF;EAEA,MAAMxD,gBAAgBmF,SAKrB,EAAoB;IAAA;IAAA5F,aAAA,GAAAI,CAAA;IACnB,MAAMqE,QAAA;IAAA;IAAA,CAAAzE,aAAA,GAAAE,CAAA,QAAW;MACf2F,IAAA,EAAM;MACNC,OAAA,EAAS;MACT9D,KAAA,EAAO;IACT;IAEA,MAAM+D,QAAA;IAAA;IAAA,CAAA/F,aAAA,GAAAE,CAAA,QAAW;MACf2F,IAAA,EAAM;MACNC,OAAA,EAAS;MACT9D,KAAA,EAAO;IACT;IAEA,MAAMQ,UAAA;IAAA;IAAA,CAAAxC,aAAA,GAAAE,CAAA,QAA8B;MAClCuC,KAAA,EAAOgC,QAAQ,CAACmB,SAAA,CAAUd,QAAQ,CAAC;MACnC1C,KAAA,EAAO,GAAG2D,QAAQ,CAACH,SAAA,CAAUd,QAAQ,CAAC,IAAIc,SAAA,CAAUxD,KAAK,EAAE;MAC3D4D,IAAA,EAAMJ,SAAA,CAAU7B,OAAO;MACvBpB,MAAA,EAAQiD,SAAA,CAAUK,OAAO;MAAA;MAAA,CAAAjG,aAAA,GAAAa,CAAA,UAAGqF,MAAA,CAAOC,OAAO,CAACP,SAAA,CAAUK,OAAO,EAAE9C,GAAG,CAAC,CAAC,CAACiD,GAAA,EAAKxD,KAAA,CAAM,KAAM;QAAA;QAAA5C,aAAA,GAAAI,CAAA;QAAAJ,aAAA,GAAAE,CAAA;QAAA;UACnFkC,KAAA,EAAOgE,GAAA;UACPxD,KAAA,EAAOyD,MAAA,CAAOzD,KAAA;UACdE,KAAA,EAAO;QACT;MAAA;MAAA;MAAA,CAAA9C,aAAA,GAAAa,CAAA,UAAMyF,SAAA;MACN9C,MAAA,EAAQ;MACRC,EAAA,EAAIC,IAAA,CAAKC,KAAK,CAACC,IAAA,CAAKC,GAAG,KAAK;IAC9B;IAAA;IAAA7D,aAAA,GAAAE,CAAA;IAEA,OAAO,IAAI,CAACgB,gBAAgB,CAAC;MAC3B4C,OAAA,EAAS;MACTC,OAAA,EAAS6B,SAAA,CAAU7B,OAAO;MAC1BC,WAAA,EAAa,CAACxB,UAAA,CAAW;MACzByB,QAAA,EAAU2B,SAAA,CAAUd,QAAQ,KAAK;MAAA;MAAA,CAAA9E,aAAA,GAAAa,CAAA,UAAU;MAAA;MAAA,CAAAb,aAAA,GAAAa,CAAA,UAAS;IACtD;EACF;EAEA,MAAM0F,eAAA,EAAmC;IAAA;IAAAvG,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;IACvC,IAAI;MACF,MAAMiB,QAAA;MAAA;MAAA,CAAAnB,aAAA,GAAAE,CAAA,QAAW,MAAMkB,KAAA,CAAM,iCAAiC;QAC5DE,MAAA,EAAQ;MACV;MAAA;MAAAtB,aAAA,GAAAE,CAAA;MACA,OAAOiB,QAAA,CAASQ,EAAE;IACpB,EAAE,OAAOK,KAAA,EAAO;MAAA;MAAAhC,aAAA,GAAAE,CAAA;MACd+B,OAAA,CAAQD,KAAK,CAAC,mCAAmCA,KAAA;MAAA;MAAAhC,aAAA,GAAAE,CAAA;MACjD,OAAO;IACT;EACF;;;;;SAlRQc,UAAA,GAA4B;IAAA;IAAAhB,aAAA,GAAAE,CAAA;SAC5Be,QAAA,GAA0B;IAAA;IAAAjB,aAAA,GAAAE,CAAA;SAC1BmB,WAAA,GAAc;;AAiRxB;AAGO,MAAMX,YAAA;AAAA;AAAA,CAAAV,aAAA,GAAAE,CAAA,QAAeC,wBAAA,CAAyBQ,WAAW;AAAA;AAAAX,aAAA,GAAAE,CAAA;AAGzD,MAAMK,cAAA,GAAkBgC,SAAA,IAC7B;EAAA;EAAAvC,aAAA,GAAAI,CAAA;EAAAJ,aAAA,GAAAE,CAAA;EAAA,OAAAQ,YAAA,CAAaH,cAAc,CAACgC,SAAA;AAAA;AAAA;AAAAvC,aAAA,GAAAE,CAAA;AAEvB,MAAMI,iBAAA,GAAqB4D,WAAA,IAChC;EAAA;EAAAlE,aAAA,GAAAI,CAAA;EAAAJ,aAAA,GAAAE,CAAA;EAAA,OAAAQ,YAAA,CAAaJ,iBAAiB,CAAC4D,WAAA;AAAA;AAAA;AAAAlE,aAAA,GAAAE,CAAA;AAE1B,MAAMG,cAAA,GAAkBmE,SAAA,IAC7B;EAAA;EAAAxE,aAAA,GAAAI,CAAA;EAAAJ,aAAA,GAAAE,CAAA;EAAA,OAAAQ,YAAA,CAAaL,cAAc,CAACmE,SAAA;AAAA;AAAA;AAAAxE,aAAA,GAAAE,CAAA;AAEvB,MAAMM,eAAA,GAAmB4E,UAAA,IAC9B;EAAA;EAAApF,aAAA,GAAAI,CAAA;EAAAJ,aAAA,GAAAE,CAAA;EAAA,OAAAQ,YAAA,CAAaF,eAAe,CAAC4E,UAAA;AAAA;AAAA;AAAApF,aAAA,GAAAE,CAAA;AAExB,MAAMO,eAAA,GAAmBmF,SAAA,IAC9B;EAAA;EAAA5F,aAAA,GAAAI,CAAA;EAAAJ,aAAA,GAAAE,CAAA;EAAA,OAAAQ,YAAA,CAAaD,eAAe,CAACmF,SAAA;AAAA","ignoreList":[]}