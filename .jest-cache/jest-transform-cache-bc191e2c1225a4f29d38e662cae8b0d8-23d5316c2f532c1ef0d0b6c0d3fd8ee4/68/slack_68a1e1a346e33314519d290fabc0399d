b3bf90894d0299a3c93deac1bef781c4
'use client';
"use strict";

/* istanbul ignore next */
function cov_padv20ya3() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\notifications\\slack.ts";
  var hash = "5b167a396c57bafff68ff748c6be4bab4ebcc99d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\notifications\\slack.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 34,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 40
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 30
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 33
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 30
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 31
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 31
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 28
        }
      },
      "11": {
        start: {
          line: 35,
          column: 18
        },
        end: {
          line: 35,
          column: 58
        }
      },
      "12": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "13": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 79
        }
      },
      "14": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 49
        }
      },
      "15": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 52
        }
      },
      "16": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 48
        }
      },
      "17": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "18": {
        start: {
          line: 49,
          column: 29
        },
        end: {
          line: 55,
          column: 14
        }
      },
      "19": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "20": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 72
        }
      },
      "21": {
        start: {
          line: 59,
          column: 27
        },
        end: {
          line: 59,
          column: 48
        }
      },
      "22": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 34
        }
      },
      "23": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 70
        }
      },
      "24": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 67,
          column: 15
        }
      },
      "25": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 25
        }
      },
      "26": {
        start: {
          line: 72,
          column: 27
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "27": {
        start: {
          line: 93,
          column: 55
        },
        end: {
          line: 93,
          column: 89
        }
      },
      "28": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 107,
          column: 11
        }
      },
      "29": {
        start: {
          line: 110,
          column: 27
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "30": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 145,
          column: 11
        }
      },
      "31": {
        start: {
          line: 148,
          column: 25
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "32": {
        start: {
          line: 154,
          column: 27
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "33": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 189,
          column: 11
        }
      },
      "34": {
        start: {
          line: 192,
          column: 27
        },
        end: {
          line: 219,
          column: 9
        }
      },
      "35": {
        start: {
          line: 213,
          column: 59
        },
        end: {
          line: 213,
          column: 89
        }
      },
      "36": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 227,
          column: 11
        }
      },
      "37": {
        start: {
          line: 230,
          column: 25
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "38": {
        start: {
          line: 235,
          column: 25
        },
        end: {
          line: 239,
          column: 9
        }
      },
      "39": {
        start: {
          line: 240,
          column: 27
        },
        end: {
          line: 251,
          column: 9
        }
      },
      "40": {
        start: {
          line: 244,
          column: 95
        },
        end: {
          line: 248,
          column: 17
        }
      },
      "41": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 259,
          column: 11
        }
      },
      "42": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 270,
          column: 9
        }
      },
      "43": {
        start: {
          line: 263,
          column: 29
        },
        end: {
          line: 265,
          column: 14
        }
      },
      "44": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 266,
          column: 31
        }
      },
      "45": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 68
        }
      },
      "46": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 269,
          column: 25
        }
      },
      "47": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 273,
          column: 31
        }
      },
      "48": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 274,
          column: 29
        }
      },
      "49": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 275,
          column: 54
        }
      },
      "50": {
        start: {
          line: 278,
          column: 21
        },
        end: {
          line: 278,
          column: 59
        }
      },
      "51": {
        start: {
          line: 279,
          column: 23
        },
        end: {
          line: 279,
          column: 74
        }
      },
      "52": {
        start: {
          line: 279,
          column: 36
        },
        end: {
          line: 279,
          column: 74
        }
      },
      "53": {
        start: {
          line: 280,
          column: 26
        },
        end: {
          line: 280,
          column: 84
        }
      },
      "54": {
        start: {
          line: 280,
          column: 41
        },
        end: {
          line: 280,
          column: 84
        }
      },
      "55": {
        start: {
          line: 281,
          column: 23
        },
        end: {
          line: 281,
          column: 74
        }
      },
      "56": {
        start: {
          line: 281,
          column: 36
        },
        end: {
          line: 281,
          column: 74
        }
      },
      "57": {
        start: {
          line: 282,
          column: 24
        },
        end: {
          line: 282,
          column: 78
        }
      },
      "58": {
        start: {
          line: 282,
          column: 38
        },
        end: {
          line: 282,
          column: 78
        }
      },
      "59": {
        start: {
          line: 283,
          column: 24
        },
        end: {
          line: 283,
          column: 76
        }
      },
      "60": {
        start: {
          line: 283,
          column: 37
        },
        end: {
          line: 283,
          column: 76
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 36
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 29
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 26
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 27
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 27
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 24
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 25
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 37
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        loc: {
          start: {
            line: 43,
            column: 22
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 43
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        loc: {
          start: {
            line: 47,
            column: 35
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 47
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 36
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 71
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 93,
            column: 47
          },
          end: {
            line: 93,
            column: 48
          }
        },
        loc: {
          start: {
            line: 93,
            column: 55
          },
          end: {
            line: 93,
            column: 89
          }
        },
        line: 93
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        },
        loc: {
          start: {
            line: 109,
            column: 41
          },
          end: {
            line: 146,
            column: 5
          }
        },
        line: 109
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        },
        loc: {
          start: {
            line: 147,
            column: 36
          },
          end: {
            line: 190,
            column: 5
          }
        },
        line: 147
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        },
        loc: {
          start: {
            line: 191,
            column: 38
          },
          end: {
            line: 228,
            column: 5
          }
        },
        line: 191
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 213,
            column: 54
          },
          end: {
            line: 213,
            column: 55
          }
        },
        loc: {
          start: {
            line: 213,
            column: 59
          },
          end: {
            line: 213,
            column: 89
          }
        },
        line: 213
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 229,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        },
        loc: {
          start: {
            line: 229,
            column: 37
          },
          end: {
            line: 260,
            column: 5
          }
        },
        line: 229
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 244,
            column: 78
          },
          end: {
            line: 244,
            column: 79
          }
        },
        loc: {
          start: {
            line: 244,
            column: 95
          },
          end: {
            line: 248,
            column: 17
          }
        },
        line: 244
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 261,
            column: 4
          },
          end: {
            line: 261,
            column: 5
          }
        },
        loc: {
          start: {
            line: 261,
            column: 27
          },
          end: {
            line: 271,
            column: 5
          }
        },
        line: 261
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 272,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        },
        loc: {
          start: {
            line: 272,
            column: 17
          },
          end: {
            line: 276,
            column: 5
          }
        },
        line: 272
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 279,
            column: 23
          },
          end: {
            line: 279,
            column: 24
          }
        },
        loc: {
          start: {
            line: 279,
            column: 36
          },
          end: {
            line: 279,
            column: 74
          }
        },
        line: 279
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 280,
            column: 26
          },
          end: {
            line: 280,
            column: 27
          }
        },
        loc: {
          start: {
            line: 280,
            column: 41
          },
          end: {
            line: 280,
            column: 84
          }
        },
        line: 280
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 281,
            column: 23
          },
          end: {
            line: 281,
            column: 24
          }
        },
        loc: {
          start: {
            line: 281,
            column: 36
          },
          end: {
            line: 281,
            column: 74
          }
        },
        line: 281
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 282,
            column: 24
          },
          end: {
            line: 282,
            column: 25
          }
        },
        loc: {
          start: {
            line: 282,
            column: 38
          },
          end: {
            line: 282,
            column: 78
          }
        },
        line: 282
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 283,
            column: 24
          },
          end: {
            line: 283,
            column: 25
          }
        },
        loc: {
          start: {
            line: 283,
            column: 37
          },
          end: {
            line: 283,
            column: 76
          }
        },
        line: 283
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 44,
            column: 26
          },
          end: {
            line: 44,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 26
          },
          end: {
            line: 44,
            column: 43
          }
        }, {
          start: {
            line: 44,
            column: 47
          },
          end: {
            line: 44,
            column: 51
          }
        }],
        line: 44
      },
      "2": {
        loc: {
          start: {
            line: 45,
            column: 24
          },
          end: {
            line: 45,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 24
          },
          end: {
            line: 45,
            column: 39
          }
        }, {
          start: {
            line: 45,
            column: 43
          },
          end: {
            line: 45,
            column: 47
          }
        }],
        line: 45
      },
      "3": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "4": {
        loc: {
          start: {
            line: 170,
            column: 27
          },
          end: {
            line: 170,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 170,
            column: 27
          },
          end: {
            line: 170,
            column: 43
          }
        }, {
          start: {
            line: 170,
            column: 47
          },
          end: {
            line: 170,
            column: 52
          }
        }],
        line: 170
      },
      "5": {
        loc: {
          start: {
            line: 188,
            column: 22
          },
          end: {
            line: 188,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 188,
            column: 58
          },
          end: {
            line: 188,
            column: 68
          }
        }, {
          start: {
            line: 188,
            column: 71
          },
          end: {
            line: 188,
            column: 77
          }
        }],
        line: 188
      },
      "6": {
        loc: {
          start: {
            line: 244,
            column: 20
          },
          end: {
            line: 248,
            column: 31
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 244,
            column: 40
          },
          end: {
            line: 248,
            column: 19
          }
        }, {
          start: {
            line: 248,
            column: 22
          },
          end: {
            line: 248,
            column: 31
          }
        }],
        line: 244
      },
      "7": {
        loc: {
          start: {
            line: 258,
            column: 22
          },
          end: {
            line: 258,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 258,
            column: 55
          },
          end: {
            line: 258,
            column: 61
          }
        }, {
          start: {
            line: 258,
            column: 64
          },
          end: {
            line: 258,
            column: 72
          }
        }],
        line: 258
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\notifications\\slack.ts"],
      sourcesContent: ["'use client'\r\n\r\nimport { toast } from '@/components/ui/use-toast'\r\n\r\nexport interface SlackNotificationConfig {\r\n  channel: string\r\n  message: string\r\n  username?: string\r\n  iconEmoji?: string\r\n  attachments?: SlackAttachment[]\r\n  blocks?: SlackBlock[]\r\n  threadTs?: string\r\n  priority?: 'low' | 'normal' | 'high' | 'critical'\r\n}\r\n\r\nexport interface SlackAttachment {\r\n  color?: 'good' | 'warning' | 'danger' | string\r\n  title?: string\r\n  titleLink?: string\r\n  text?: string\r\n  fields?: Array<{\r\n    title: string\r\n    value: string\r\n    short?: boolean\r\n  }>\r\n  footer?: string\r\n  ts?: number\r\n}\r\n\r\nexport interface SlackBlock {\r\n  type: string\r\n  text?: {\r\n    type: string\r\n    text: string\r\n  }\r\n  elements?: any[]\r\n  accessory?: any\r\n}\r\n\r\nexport class SlackNotificationService {\r\n  private static instance: SlackNotificationService\r\n  private webhookUrl: string | null = null\r\n  private botToken: string | null = null\r\n  private apiEndpoint = '/api/notifications/slack'\r\n\r\n  static getInstance(): SlackNotificationService {\r\n    if (!SlackNotificationService.instance) {\r\n      SlackNotificationService.instance = new SlackNotificationService()\r\n    }\r\n    return SlackNotificationService.instance\r\n  }\r\n\r\n  configure(config: { webhookUrl?: string; botToken?: string }) {\r\n    this.webhookUrl = config.webhookUrl || null\r\n    this.botToken = config.botToken || null\r\n  }\r\n\r\n  async sendNotification(config: SlackNotificationConfig): Promise<boolean> {\r\n    try {\r\n      const response = await fetch(this.apiEndpoint, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(config)\r\n      })\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al enviar notificaci\xF3n a Slack')\r\n      }\r\n\r\n      const result = await response.json()\r\n      return result.success\r\n    } catch (error) {\r\n      console.error('Error sending Slack notification:', error)\r\n      toast({\r\n        title: 'Error',\r\n        description: 'No se pudo enviar la notificaci\xF3n a Slack',\r\n        variant: 'destructive'\r\n      })\r\n      return false\r\n    }\r\n  }\r\n\r\n  async sendOrderAlert(orderData: {\r\n    orderId: string\r\n    customerName: string\r\n    total: number\r\n    items: Array<{ name: string; quantity: number }>\r\n    status: string\r\n  }): Promise<boolean> {\r\n    const attachment: SlackAttachment = {\r\n      color: 'good',\r\n      title: `Nueva orden #${orderData.orderId}`,\r\n      fields: [\r\n        {\r\n          title: 'Cliente',\r\n          value: orderData.customerName,\r\n          short: true\r\n        },\r\n        {\r\n          title: 'Total',\r\n          value: `$${orderData.total.toFixed(2)}`,\r\n          short: true\r\n        },\r\n        {\r\n          title: 'Estado',\r\n          value: orderData.status,\r\n          short: true\r\n        },\r\n        {\r\n          title: 'Productos',\r\n          value: orderData.items.map(item => `${item.name} (x${item.quantity})`).join('\\n'),\r\n          short: false\r\n        }\r\n      ],\r\n      footer: 'Sistema E-commerce',\r\n      ts: Math.floor(Date.now() / 1000)\r\n    }\r\n\r\n    return this.sendNotification({\r\n      channel: '#orders',\r\n      message: `Nueva orden recibida: #${orderData.orderId}`,\r\n      attachments: [attachment],\r\n      priority: 'normal'\r\n    })\r\n  }\r\n\r\n  async sendLowStockAlert(productData: {\r\n    productName: string\r\n    currentStock: number\r\n    minimumStock: number\r\n    productId: string\r\n  }): Promise<boolean> {\r\n    const attachment: SlackAttachment = {\r\n      color: 'warning',\r\n      title: '\u26A0\uFE0F Alerta de Stock Bajo',\r\n      fields: [\r\n        {\r\n          title: 'Producto',\r\n          value: productData.productName,\r\n          short: true\r\n        },\r\n        {\r\n          title: 'Stock Actual',\r\n          value: productData.currentStock.toString(),\r\n          short: true\r\n        },\r\n        {\r\n          title: 'Stock M\xEDnimo',\r\n          value: productData.minimumStock.toString(),\r\n          short: true\r\n        },\r\n        {\r\n          title: 'ID Producto',\r\n          value: productData.productId,\r\n          short: true\r\n        }\r\n      ],\r\n      footer: 'Sistema de Inventario',\r\n      ts: Math.floor(Date.now() / 1000)\r\n    }\r\n\r\n    return this.sendNotification({\r\n      channel: '#inventory',\r\n      message: `\uD83D\uDEA8 Stock bajo detectado para: ${productData.productName}`,\r\n      attachments: [attachment],\r\n      priority: 'high'\r\n    })\r\n  }\r\n\r\n  async sendErrorAlert(errorData: {\r\n    error: string\r\n    context: string\r\n    userId?: string\r\n    timestamp: Date\r\n    severity: 'low' | 'medium' | 'high' | 'critical'\r\n  }): Promise<boolean> {\r\n    const colorMap = {\r\n      low: 'good',\r\n      medium: 'warning',\r\n      high: 'danger',\r\n      critical: 'danger'\r\n    }\r\n\r\n    const attachment: SlackAttachment = {\r\n      color: colorMap[errorData.severity],\r\n      title: `\uD83D\uDEA8 Error ${errorData.severity.toUpperCase()}`,\r\n      fields: [\r\n        {\r\n          title: 'Error',\r\n          value: errorData.error,\r\n          short: false\r\n        },\r\n        {\r\n          title: 'Contexto',\r\n          value: errorData.context,\r\n          short: false\r\n        },\r\n        {\r\n          title: 'Usuario',\r\n          value: errorData.userId || 'N/A',\r\n          short: true\r\n        },\r\n        {\r\n          title: 'Severidad',\r\n          value: errorData.severity.toUpperCase(),\r\n          short: true\r\n        }\r\n      ],\r\n      footer: 'Sistema de Monitoreo',\r\n      ts: Math.floor(errorData.timestamp.getTime() / 1000)\r\n    }\r\n\r\n    return this.sendNotification({\r\n      channel: '#errors',\r\n      message: `Error detectado en el sistema`,\r\n      attachments: [attachment],\r\n      priority: errorData.severity === 'critical' ? 'critical' : 'high'\r\n    })\r\n  }\r\n\r\n  async sendSalesReport(reportData: {\r\n    period: string\r\n    totalSales: number\r\n    totalOrders: number\r\n    averageOrderValue: number\r\n    topProducts: Array<{ name: string; sales: number }>\r\n  }): Promise<boolean> {\r\n    const attachment: SlackAttachment = {\r\n      color: 'good',\r\n      title: `\uD83D\uDCCA Reporte de Ventas - ${reportData.period}`,\r\n      fields: [\r\n        {\r\n          title: 'Ventas Totales',\r\n          value: `$${reportData.totalSales.toFixed(2)}`,\r\n          short: true\r\n        },\r\n        {\r\n          title: '\xD3rdenes Totales',\r\n          value: reportData.totalOrders.toString(),\r\n          short: true\r\n        },\r\n        {\r\n          title: 'Valor Promedio por Orden',\r\n          value: `$${reportData.averageOrderValue.toFixed(2)}`,\r\n          short: true\r\n        },\r\n        {\r\n          title: 'Top Productos',\r\n          value: reportData.topProducts.map(p => `${p.name}: ${p.sales} ventas`).join('\\n'),\r\n          short: false\r\n        }\r\n      ],\r\n      footer: 'Reporte Autom\xE1tico',\r\n      ts: Math.floor(Date.now() / 1000)\r\n    }\r\n\r\n    return this.sendNotification({\r\n      channel: '#sales',\r\n      message: `Reporte de ventas generado para ${reportData.period}`,\r\n      attachments: [attachment],\r\n      priority: 'low'\r\n    })\r\n  }\r\n\r\n  async sendSystemAlert(alertData: {\r\n    title: string\r\n    message: string\r\n    severity: 'info' | 'warning' | 'error'\r\n    details?: Record<string, any>\r\n  }): Promise<boolean> {\r\n    const colorMap = {\r\n      info: 'good',\r\n      warning: 'warning',\r\n      error: 'danger'\r\n    }\r\n\r\n    const emojiMap = {\r\n      info: '\u2139\uFE0F',\r\n      warning: '\u26A0\uFE0F',\r\n      error: '\uD83D\uDEA8'\r\n    }\r\n\r\n    const attachment: SlackAttachment = {\r\n      color: colorMap[alertData.severity],\r\n      title: `${emojiMap[alertData.severity]} ${alertData.title}`,\r\n      text: alertData.message,\r\n      fields: alertData.details ? Object.entries(alertData.details).map(([key, value]) => ({\r\n        title: key,\r\n        value: String(value),\r\n        short: true\r\n      })) : undefined,\r\n      footer: 'Sistema de Alertas',\r\n      ts: Math.floor(Date.now() / 1000)\r\n    }\r\n\r\n    return this.sendNotification({\r\n      channel: '#system',\r\n      message: alertData.message,\r\n      attachments: [attachment],\r\n      priority: alertData.severity === 'error' ? 'high' : 'normal'\r\n    })\r\n  }\r\n\r\n  async testConnection(): Promise<boolean> {\r\n    try {\r\n      const response = await fetch('/api/notifications/slack/test', {\r\n        method: 'POST'\r\n      })\r\n      return response.ok\r\n    } catch (error) {\r\n      console.error('Error testing Slack connection:', error)\r\n      return false\r\n    }\r\n  }\r\n}\r\n\r\n// Instancia singleton para uso global\r\nexport const slackService = SlackNotificationService.getInstance()\r\n\r\n// Funciones de conveniencia\r\nexport const sendOrderAlert = (orderData: Parameters<SlackNotificationService['sendOrderAlert']>[0]) => \r\n  slackService.sendOrderAlert(orderData)\r\n\r\nexport const sendLowStockAlert = (productData: Parameters<SlackNotificationService['sendLowStockAlert']>[0]) => \r\n  slackService.sendLowStockAlert(productData)\r\n\r\nexport const sendErrorAlert = (errorData: Parameters<SlackNotificationService['sendErrorAlert']>[0]) => \r\n  slackService.sendErrorAlert(errorData)\r\n\r\nexport const sendSalesReport = (reportData: Parameters<SlackNotificationService['sendSalesReport']>[0]) => \r\n  slackService.sendSalesReport(reportData)\r\n\r\nexport const sendSystemAlert = (alertData: Parameters<SlackNotificationService['sendSystemAlert']>[0]) => \r\n  slackService.sendSystemAlert(alertData)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["SlackNotificationService", "sendErrorAlert", "sendLowStockAlert", "sendOrderAlert", "sendSalesReport", "sendSystemAlert", "slackService", "getInstance", "instance", "configure", "config", "webhookUrl", "botToken", "sendNotification", "response", "fetch", "apiEndpoint", "method", "headers", "body", "JSON", "stringify", "ok", "Error", "result", "json", "success", "error", "console", "toast", "title", "description", "variant", "orderData", "attachment", "color", "orderId", "fields", "value", "customerName", "short", "total", "toFixed", "status", "items", "map", "item", "name", "quantity", "join", "footer", "ts", "Math", "floor", "Date", "now", "channel", "message", "attachments", "priority", "productData", "productName", "currentStock", "toString", "minimumStock", "productId", "errorData", "colorMap", "low", "medium", "high", "critical", "severity", "toUpperCase", "context", "userId", "timestamp", "getTime", "reportData", "period", "totalSales", "totalOrders", "averageOrderValue", "topProducts", "p", "sales", "alertData", "info", "warning", "emojiMap", "text", "details", "Object", "entries", "key", "String", "undefined", "testConnection"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5b167a396c57bafff68ff748c6be4bab4ebcc99d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_padv20ya3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_padv20ya3();
cov_padv20ya3().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_padv20ya3().f[0]++;
  cov_padv20ya3().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_padv20ya3().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_padv20ya3().s[3]++;
_export(exports, {
  get SlackNotificationService() {
    /* istanbul ignore next */
    cov_padv20ya3().f[1]++;
    cov_padv20ya3().s[4]++;
    return SlackNotificationService;
  },
  get sendErrorAlert() {
    /* istanbul ignore next */
    cov_padv20ya3().f[2]++;
    cov_padv20ya3().s[5]++;
    return sendErrorAlert;
  },
  get sendLowStockAlert() {
    /* istanbul ignore next */
    cov_padv20ya3().f[3]++;
    cov_padv20ya3().s[6]++;
    return sendLowStockAlert;
  },
  get sendOrderAlert() {
    /* istanbul ignore next */
    cov_padv20ya3().f[4]++;
    cov_padv20ya3().s[7]++;
    return sendOrderAlert;
  },
  get sendSalesReport() {
    /* istanbul ignore next */
    cov_padv20ya3().f[5]++;
    cov_padv20ya3().s[8]++;
    return sendSalesReport;
  },
  get sendSystemAlert() {
    /* istanbul ignore next */
    cov_padv20ya3().f[6]++;
    cov_padv20ya3().s[9]++;
    return sendSystemAlert;
  },
  get slackService() {
    /* istanbul ignore next */
    cov_padv20ya3().f[7]++;
    cov_padv20ya3().s[10]++;
    return slackService;
  }
});
const _usetoast =
/* istanbul ignore next */
(cov_padv20ya3().s[11]++, require("../../components/ui/use-toast"));
class SlackNotificationService {
  static getInstance() {
    /* istanbul ignore next */
    cov_padv20ya3().f[8]++;
    cov_padv20ya3().s[12]++;
    if (!SlackNotificationService.instance) {
      /* istanbul ignore next */
      cov_padv20ya3().b[0][0]++;
      cov_padv20ya3().s[13]++;
      SlackNotificationService.instance = new SlackNotificationService();
    } else
    /* istanbul ignore next */
    {
      cov_padv20ya3().b[0][1]++;
    }
    cov_padv20ya3().s[14]++;
    return SlackNotificationService.instance;
  }
  configure(config) {
    /* istanbul ignore next */
    cov_padv20ya3().f[9]++;
    cov_padv20ya3().s[15]++;
    this.webhookUrl =
    /* istanbul ignore next */
    (cov_padv20ya3().b[1][0]++, config.webhookUrl) ||
    /* istanbul ignore next */
    (cov_padv20ya3().b[1][1]++, null);
    /* istanbul ignore next */
    cov_padv20ya3().s[16]++;
    this.botToken =
    /* istanbul ignore next */
    (cov_padv20ya3().b[2][0]++, config.botToken) ||
    /* istanbul ignore next */
    (cov_padv20ya3().b[2][1]++, null);
  }
  async sendNotification(config) {
    /* istanbul ignore next */
    cov_padv20ya3().f[10]++;
    cov_padv20ya3().s[17]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_padv20ya3().s[18]++, await fetch(this.apiEndpoint, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(config)
      }));
      /* istanbul ignore next */
      cov_padv20ya3().s[19]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_padv20ya3().b[3][0]++;
        cov_padv20ya3().s[20]++;
        throw new Error('Error al enviar notificación a Slack');
      } else
      /* istanbul ignore next */
      {
        cov_padv20ya3().b[3][1]++;
      }
      const result =
      /* istanbul ignore next */
      (cov_padv20ya3().s[21]++, await response.json());
      /* istanbul ignore next */
      cov_padv20ya3().s[22]++;
      return result.success;
    } catch (error) {
      /* istanbul ignore next */
      cov_padv20ya3().s[23]++;
      console.error('Error sending Slack notification:', error);
      /* istanbul ignore next */
      cov_padv20ya3().s[24]++;
      (0, _usetoast.toast)({
        title: 'Error',
        description: 'No se pudo enviar la notificación a Slack',
        variant: 'destructive'
      });
      /* istanbul ignore next */
      cov_padv20ya3().s[25]++;
      return false;
    }
  }
  async sendOrderAlert(orderData) {
    /* istanbul ignore next */
    cov_padv20ya3().f[11]++;
    const attachment =
    /* istanbul ignore next */
    (cov_padv20ya3().s[26]++, {
      color: 'good',
      title: `Nueva orden #${orderData.orderId}`,
      fields: [{
        title: 'Cliente',
        value: orderData.customerName,
        short: true
      }, {
        title: 'Total',
        value: `$${orderData.total.toFixed(2)}`,
        short: true
      }, {
        title: 'Estado',
        value: orderData.status,
        short: true
      }, {
        title: 'Productos',
        value: orderData.items.map(item => {
          /* istanbul ignore next */
          cov_padv20ya3().f[12]++;
          cov_padv20ya3().s[27]++;
          return `${item.name} (x${item.quantity})`;
        }).join('\n'),
        short: false
      }],
      footer: 'Sistema E-commerce',
      ts: Math.floor(Date.now() / 1000)
    });
    /* istanbul ignore next */
    cov_padv20ya3().s[28]++;
    return this.sendNotification({
      channel: '#orders',
      message: `Nueva orden recibida: #${orderData.orderId}`,
      attachments: [attachment],
      priority: 'normal'
    });
  }
  async sendLowStockAlert(productData) {
    /* istanbul ignore next */
    cov_padv20ya3().f[13]++;
    const attachment =
    /* istanbul ignore next */
    (cov_padv20ya3().s[29]++, {
      color: 'warning',
      title: '⚠️ Alerta de Stock Bajo',
      fields: [{
        title: 'Producto',
        value: productData.productName,
        short: true
      }, {
        title: 'Stock Actual',
        value: productData.currentStock.toString(),
        short: true
      }, {
        title: 'Stock Mínimo',
        value: productData.minimumStock.toString(),
        short: true
      }, {
        title: 'ID Producto',
        value: productData.productId,
        short: true
      }],
      footer: 'Sistema de Inventario',
      ts: Math.floor(Date.now() / 1000)
    });
    /* istanbul ignore next */
    cov_padv20ya3().s[30]++;
    return this.sendNotification({
      channel: '#inventory',
      message: `🚨 Stock bajo detectado para: ${productData.productName}`,
      attachments: [attachment],
      priority: 'high'
    });
  }
  async sendErrorAlert(errorData) {
    /* istanbul ignore next */
    cov_padv20ya3().f[14]++;
    const colorMap =
    /* istanbul ignore next */
    (cov_padv20ya3().s[31]++, {
      low: 'good',
      medium: 'warning',
      high: 'danger',
      critical: 'danger'
    });
    const attachment =
    /* istanbul ignore next */
    (cov_padv20ya3().s[32]++, {
      color: colorMap[errorData.severity],
      title: `🚨 Error ${errorData.severity.toUpperCase()}`,
      fields: [{
        title: 'Error',
        value: errorData.error,
        short: false
      }, {
        title: 'Contexto',
        value: errorData.context,
        short: false
      }, {
        title: 'Usuario',
        value:
        /* istanbul ignore next */
        (cov_padv20ya3().b[4][0]++, errorData.userId) ||
        /* istanbul ignore next */
        (cov_padv20ya3().b[4][1]++, 'N/A'),
        short: true
      }, {
        title: 'Severidad',
        value: errorData.severity.toUpperCase(),
        short: true
      }],
      footer: 'Sistema de Monitoreo',
      ts: Math.floor(errorData.timestamp.getTime() / 1000)
    });
    /* istanbul ignore next */
    cov_padv20ya3().s[33]++;
    return this.sendNotification({
      channel: '#errors',
      message: `Error detectado en el sistema`,
      attachments: [attachment],
      priority: errorData.severity === 'critical' ?
      /* istanbul ignore next */
      (cov_padv20ya3().b[5][0]++, 'critical') :
      /* istanbul ignore next */
      (cov_padv20ya3().b[5][1]++, 'high')
    });
  }
  async sendSalesReport(reportData) {
    /* istanbul ignore next */
    cov_padv20ya3().f[15]++;
    const attachment =
    /* istanbul ignore next */
    (cov_padv20ya3().s[34]++, {
      color: 'good',
      title: `📊 Reporte de Ventas - ${reportData.period}`,
      fields: [{
        title: 'Ventas Totales',
        value: `$${reportData.totalSales.toFixed(2)}`,
        short: true
      }, {
        title: 'Órdenes Totales',
        value: reportData.totalOrders.toString(),
        short: true
      }, {
        title: 'Valor Promedio por Orden',
        value: `$${reportData.averageOrderValue.toFixed(2)}`,
        short: true
      }, {
        title: 'Top Productos',
        value: reportData.topProducts.map(p => {
          /* istanbul ignore next */
          cov_padv20ya3().f[16]++;
          cov_padv20ya3().s[35]++;
          return `${p.name}: ${p.sales} ventas`;
        }).join('\n'),
        short: false
      }],
      footer: 'Reporte Automático',
      ts: Math.floor(Date.now() / 1000)
    });
    /* istanbul ignore next */
    cov_padv20ya3().s[36]++;
    return this.sendNotification({
      channel: '#sales',
      message: `Reporte de ventas generado para ${reportData.period}`,
      attachments: [attachment],
      priority: 'low'
    });
  }
  async sendSystemAlert(alertData) {
    /* istanbul ignore next */
    cov_padv20ya3().f[17]++;
    const colorMap =
    /* istanbul ignore next */
    (cov_padv20ya3().s[37]++, {
      info: 'good',
      warning: 'warning',
      error: 'danger'
    });
    const emojiMap =
    /* istanbul ignore next */
    (cov_padv20ya3().s[38]++, {
      info: 'ℹ️',
      warning: '⚠️',
      error: '🚨'
    });
    const attachment =
    /* istanbul ignore next */
    (cov_padv20ya3().s[39]++, {
      color: colorMap[alertData.severity],
      title: `${emojiMap[alertData.severity]} ${alertData.title}`,
      text: alertData.message,
      fields: alertData.details ?
      /* istanbul ignore next */
      (cov_padv20ya3().b[6][0]++, Object.entries(alertData.details).map(([key, value]) => {
        /* istanbul ignore next */
        cov_padv20ya3().f[18]++;
        cov_padv20ya3().s[40]++;
        return {
          title: key,
          value: String(value),
          short: true
        };
      })) :
      /* istanbul ignore next */
      (cov_padv20ya3().b[6][1]++, undefined),
      footer: 'Sistema de Alertas',
      ts: Math.floor(Date.now() / 1000)
    });
    /* istanbul ignore next */
    cov_padv20ya3().s[41]++;
    return this.sendNotification({
      channel: '#system',
      message: alertData.message,
      attachments: [attachment],
      priority: alertData.severity === 'error' ?
      /* istanbul ignore next */
      (cov_padv20ya3().b[7][0]++, 'high') :
      /* istanbul ignore next */
      (cov_padv20ya3().b[7][1]++, 'normal')
    });
  }
  async testConnection() {
    /* istanbul ignore next */
    cov_padv20ya3().f[19]++;
    cov_padv20ya3().s[42]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_padv20ya3().s[43]++, await fetch('/api/notifications/slack/test', {
        method: 'POST'
      }));
      /* istanbul ignore next */
      cov_padv20ya3().s[44]++;
      return response.ok;
    } catch (error) {
      /* istanbul ignore next */
      cov_padv20ya3().s[45]++;
      console.error('Error testing Slack connection:', error);
      /* istanbul ignore next */
      cov_padv20ya3().s[46]++;
      return false;
    }
  }
  constructor() {
    /* istanbul ignore next */
    cov_padv20ya3().f[20]++;
    cov_padv20ya3().s[47]++;
    this.webhookUrl = null;
    /* istanbul ignore next */
    cov_padv20ya3().s[48]++;
    this.botToken = null;
    /* istanbul ignore next */
    cov_padv20ya3().s[49]++;
    this.apiEndpoint = '/api/notifications/slack';
  }
}
const slackService =
/* istanbul ignore next */
(cov_padv20ya3().s[50]++, SlackNotificationService.getInstance());
/* istanbul ignore next */
cov_padv20ya3().s[51]++;
const sendOrderAlert = orderData => {
  /* istanbul ignore next */
  cov_padv20ya3().f[21]++;
  cov_padv20ya3().s[52]++;
  return slackService.sendOrderAlert(orderData);
};
/* istanbul ignore next */
cov_padv20ya3().s[53]++;
const sendLowStockAlert = productData => {
  /* istanbul ignore next */
  cov_padv20ya3().f[22]++;
  cov_padv20ya3().s[54]++;
  return slackService.sendLowStockAlert(productData);
};
/* istanbul ignore next */
cov_padv20ya3().s[55]++;
const sendErrorAlert = errorData => {
  /* istanbul ignore next */
  cov_padv20ya3().f[23]++;
  cov_padv20ya3().s[56]++;
  return slackService.sendErrorAlert(errorData);
};
/* istanbul ignore next */
cov_padv20ya3().s[57]++;
const sendSalesReport = reportData => {
  /* istanbul ignore next */
  cov_padv20ya3().f[24]++;
  cov_padv20ya3().s[58]++;
  return slackService.sendSalesReport(reportData);
};
/* istanbul ignore next */
cov_padv20ya3().s[59]++;
const sendSystemAlert = alertData => {
  /* istanbul ignore next */
  cov_padv20ya3().f[25]++;
  cov_padv20ya3().s[60]++;
  return slackService.sendSystemAlert(alertData);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,