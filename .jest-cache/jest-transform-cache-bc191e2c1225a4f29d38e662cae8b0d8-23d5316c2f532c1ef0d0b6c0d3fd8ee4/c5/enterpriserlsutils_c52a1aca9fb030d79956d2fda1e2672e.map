{"version":3,"names":["cov_2gyfeyxh6j","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","checkRLSPermission","createRLSFilters","createUserSupabaseClient","executeWithRLS","testRLSPolicies","validateRLSContext","withRLS","enterpriseContext","_supabase","supabaseAdmin","valid","error","code","data","userProfile","profileError","from","select","eq","userId","single","console","is_active","rlsContext","supabaseUserId","supabase_user_id","role","user_roles","role_name","permissions","isActive","context","accessToken","supabaseUrl","process","env","NEXT_PUBLIC_SUPABASE_URL","supabaseAnonKey","NEXT_PUBLIC_SUPABASE_ANON_KEY","client","_supabasejs","createClient","auth","autoRefreshToken","persistSession","headers","queryFunction","options","rlsValidation","success","bypassRLS","log","result","auditLog","logRLSOperation","adminOverride","message","requiredPermission","resourceOwner","includes","tableName","filters","clerk_user_id","user_id","handler","request","args","enterpriseAuth","errorResponse","timestamp","Date","toISOString","res","status","json","Response","JSON","stringify","rls","operation","metadata","insert","event_type","event_category","severity","description","security_level","securityLevel","ip_address","ipAddress","user_agent","userAgent","created_at","testCases","results","testCase","push","passed"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\auth\\enterprise-rls-utils.ts"],"sourcesContent":["/**\r\n * Utilidades RLS Enterprise\r\n * Integración entre Row Level Security de Supabase y autenticación enterprise\r\n */\r\n\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport type { EnterpriseAuthContext } from './enterprise-auth-utils';\r\n\r\n// =====================================================\r\n// TIPOS Y INTERFACES\r\n// =====================================================\r\n\r\nexport interface RLSContext {\r\n  userId: string;\r\n  supabaseUserId?: string;\r\n  role: 'admin' | 'user' | 'moderator';\r\n  permissions: string[];\r\n  isActive: boolean;\r\n}\r\n\r\nexport interface RLSValidationResult {\r\n  valid: boolean;\r\n  context?: RLSContext;\r\n  error?: string;\r\n  code?: string;\r\n}\r\n\r\nexport interface RLSQueryOptions {\r\n  enforceRLS?: boolean;\r\n  bypassRLS?: boolean;\r\n  adminOverride?: boolean;\r\n  auditLog?: boolean;\r\n}\r\n\r\n// =====================================================\r\n// FUNCIONES DE VALIDACIÓN RLS\r\n// =====================================================\r\n\r\n/**\r\n * Valida el contexto RLS para un usuario\r\n */\r\nexport async function validateRLSContext(\r\n  enterpriseContext: EnterpriseAuthContext\r\n): Promise<RLSValidationResult> {\r\n  try {\r\n    if (!supabaseAdmin) {\r\n      return {\r\n        valid: false,\r\n        error: 'Supabase admin client no disponible',\r\n        code: 'SUPABASE_UNAVAILABLE'\r\n      };\r\n    }\r\n\r\n    // Obtener información del usuario desde Supabase\r\n    const { data: userProfile, error: profileError } = await supabaseAdmin\r\n      .from('user_profiles')\r\n      .select('id, supabase_user_id, role_id, permissions, is_active, user_roles(role_name)')\r\n      .eq('clerk_user_id', enterpriseContext.userId)\r\n      .single();\r\n\r\n    if (profileError) {\r\n      console.error('[RLS] Error obteniendo perfil de usuario:', profileError);\r\n      return {\r\n        valid: false,\r\n        error: 'Error obteniendo perfil de usuario',\r\n        code: 'PROFILE_ERROR'\r\n      };\r\n    }\r\n\r\n    if (!userProfile || !userProfile.is_active) {\r\n      return {\r\n        valid: false,\r\n        error: 'Usuario inactivo o no encontrado',\r\n        code: 'USER_INACTIVE'\r\n      };\r\n    }\r\n\r\n    // Crear contexto RLS\r\n    const rlsContext: RLSContext = {\r\n      userId: enterpriseContext.userId,\r\n      supabaseUserId: userProfile.supabase_user_id,\r\n      role: (userProfile.user_roles as any)?.role_name || 'user',\r\n      permissions: userProfile.permissions || [],\r\n      isActive: userProfile.is_active\r\n    };\r\n\r\n    return {\r\n      valid: true,\r\n      context: rlsContext\r\n    };\r\n\r\n  } catch (error) {\r\n    console.error('[RLS] Error validando contexto RLS:', error);\r\n    return {\r\n      valid: false,\r\n      error: 'Error interno validando RLS',\r\n      code: 'INTERNAL_ERROR'\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Crea un cliente Supabase con contexto de usuario para RLS\r\n */\r\nexport function createUserSupabaseClient(\r\n  supabaseUserId: string,\r\n  accessToken?: string\r\n): ReturnType<typeof createClient> | null {\r\n  try {\r\n    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\n    const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\r\n\r\n    if (!supabaseUrl || !supabaseAnonKey) {\r\n      console.error('[RLS] Configuración de Supabase no disponible');\r\n      return null;\r\n    }\r\n\r\n    // Crear cliente con contexto de usuario\r\n    const client = createClient(supabaseUrl, supabaseAnonKey, {\r\n      auth: {\r\n        autoRefreshToken: false,\r\n        persistSession: false\r\n      },\r\n      global: {\r\n        headers: {\r\n          'X-User-ID': supabaseUserId,\r\n          ...(accessToken && { 'Authorization': `Bearer ${accessToken}` })\r\n        }\r\n      }\r\n    });\r\n\r\n    return client;\r\n\r\n  } catch (error) {\r\n    console.error('[RLS] Error creando cliente Supabase de usuario:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Ejecuta una consulta con contexto RLS\r\n */\r\nexport async function executeWithRLS<T>(\r\n  enterpriseContext: EnterpriseAuthContext,\r\n  queryFunction: (client: any, rlsContext: RLSContext) => Promise<T>,\r\n  options: RLSQueryOptions = {}\r\n): Promise<{ success: boolean; data?: T; error?: string; code?: string }> {\r\n  try {\r\n    // Validar contexto RLS\r\n    const rlsValidation = await validateRLSContext(enterpriseContext);\r\n    if (!rlsValidation.valid) {\r\n      return {\r\n        success: false,\r\n        error: rlsValidation.error,\r\n        code: rlsValidation.code\r\n      };\r\n    }\r\n\r\n    const rlsContext = rlsValidation.context!;\r\n\r\n    // Determinar qué cliente usar\r\n    let client;\r\n    if (options.bypassRLS && enterpriseContext.role === 'admin') {\r\n      // Admin puede usar cliente administrativo para bypass RLS\r\n      client = supabaseAdmin;\r\n      console.log('[RLS] Usando cliente admin para bypass RLS');\r\n    } else if (rlsContext.supabaseUserId) {\r\n      // Usar cliente con contexto de usuario para RLS\r\n      client = createUserSupabaseClient(rlsContext.supabaseUserId);\r\n      if (!client) {\r\n        return {\r\n          success: false,\r\n          error: 'Error creando cliente de usuario',\r\n          code: 'CLIENT_ERROR'\r\n        };\r\n      }\r\n      console.log('[RLS] Usando cliente de usuario con RLS');\r\n    } else {\r\n      // Fallback a cliente admin\r\n      client = supabaseAdmin;\r\n      console.log('[RLS] Usando cliente admin como fallback');\r\n    }\r\n\r\n    // Ejecutar consulta\r\n    const result = await queryFunction(client, rlsContext);\r\n\r\n    // Log de auditoría si está habilitado\r\n    if (options.auditLog) {\r\n      await logRLSOperation(enterpriseContext, 'query_executed', {\r\n        bypassRLS: options.bypassRLS,\r\n        adminOverride: options.adminOverride,\r\n        success: true\r\n      });\r\n    }\r\n\r\n    return {\r\n      success: true,\r\n      data: result\r\n    };\r\n\r\n  } catch (error) {\r\n    console.error('[RLS] Error ejecutando consulta con RLS:', error);\r\n\r\n    // Log de auditoría para errores\r\n    if (options.auditLog) {\r\n      await logRLSOperation(enterpriseContext, 'query_error', {\r\n        error: error.message,\r\n        bypassRLS: options.bypassRLS,\r\n        adminOverride: options.adminOverride\r\n      });\r\n    }\r\n\r\n    return {\r\n      success: false,\r\n      error: 'Error ejecutando consulta',\r\n      code: 'QUERY_ERROR'\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Verifica permisos específicos para operaciones RLS\r\n */\r\nexport function checkRLSPermission(\r\n  rlsContext: RLSContext,\r\n  requiredPermission: string,\r\n  resourceOwner?: string\r\n): boolean {\r\n  // Admin siempre tiene acceso\r\n  if (rlsContext.role === 'admin') {\r\n    return true;\r\n  }\r\n\r\n  // Verificar permiso específico\r\n  if (rlsContext.permissions.includes(requiredPermission)) {\r\n    return true;\r\n  }\r\n\r\n  // Verificar si es el propietario del recurso\r\n  if (resourceOwner && resourceOwner === rlsContext.userId) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * Crea filtros RLS para consultas\r\n */\r\nexport function createRLSFilters(\r\n  rlsContext: RLSContext,\r\n  tableName: string\r\n): Record<string, any> {\r\n  const filters: Record<string, any> = {};\r\n\r\n  switch (tableName) {\r\n    case 'user_profiles':\r\n      if (rlsContext.role !== 'admin' && rlsContext.role !== 'moderator') {\r\n        // Los usuarios solo pueden ver su propio perfil\r\n        filters.clerk_user_id = rlsContext.userId;\r\n      }\r\n      break;\r\n\r\n    case 'orders':\r\n      if (rlsContext.role !== 'admin' && rlsContext.role !== 'moderator') {\r\n        // Los usuarios solo pueden ver sus propias órdenes\r\n        filters.user_id = rlsContext.userId;\r\n      }\r\n      break;\r\n\r\n    case 'products':\r\n      if (rlsContext.role !== 'admin' && rlsContext.role !== 'moderator') {\r\n        // Los usuarios solo pueden ver productos activos\r\n        filters.is_active = true;\r\n      }\r\n      break;\r\n\r\n    default:\r\n      // Sin filtros adicionales para otras tablas\r\n      break;\r\n  }\r\n\r\n  return filters;\r\n}\r\n\r\n/**\r\n * Middleware RLS para APIs\r\n */\r\nexport function withRLS(options: RLSQueryOptions = {}) {\r\n  return function (handler: Function) {\r\n    return async (request: any, ...args: any[]) => {\r\n      try {\r\n        // Obtener contexto enterprise del request\r\n        const enterpriseContext = (request as any).enterpriseAuth;\r\n        \r\n        if (!enterpriseContext) {\r\n          const errorResponse = {\r\n            success: false,\r\n            error: 'Contexto enterprise no disponible',\r\n            code: 'NO_ENTERPRISE_CONTEXT',\r\n            timestamp: new Date().toISOString()\r\n          };\r\n\r\n          if ('query' in request) {\r\n            // Pages Router\r\n            const res = args[0] as any;\r\n            return res.status(401).json(errorResponse);\r\n          } else {\r\n            // App Router\r\n            return new Response(JSON.stringify(errorResponse), {\r\n              status: 401,\r\n              headers: { 'Content-Type': 'application/json' }\r\n            });\r\n          }\r\n        }\r\n\r\n        // Validar contexto RLS\r\n        const rlsValidation = await validateRLSContext(enterpriseContext);\r\n        if (!rlsValidation.valid) {\r\n          const errorResponse = {\r\n            success: false,\r\n            error: rlsValidation.error,\r\n            code: rlsValidation.code,\r\n            rls: true,\r\n            timestamp: new Date().toISOString()\r\n          };\r\n\r\n          if ('query' in request) {\r\n            // Pages Router\r\n            const res = args[0] as any;\r\n            return res.status(403).json(errorResponse);\r\n          } else {\r\n            // App Router\r\n            return new Response(JSON.stringify(errorResponse), {\r\n              status: 403,\r\n              headers: { 'Content-Type': 'application/json' }\r\n            });\r\n          }\r\n        }\r\n\r\n        // Añadir contexto RLS al request\r\n        (request as any).rlsContext = rlsValidation.context;\r\n\r\n        return handler(request, ...args);\r\n\r\n      } catch (error) {\r\n        console.error('[RLS] Error en middleware RLS:', error);\r\n        \r\n        const errorResponse = {\r\n          success: false,\r\n          error: 'Error interno en middleware RLS',\r\n          code: 'RLS_MIDDLEWARE_ERROR',\r\n          timestamp: new Date().toISOString()\r\n        };\r\n\r\n        if ('query' in request) {\r\n          // Pages Router\r\n          const res = args[0] as any;\r\n          return res.status(500).json(errorResponse);\r\n        } else {\r\n          // App Router\r\n          return new Response(JSON.stringify(errorResponse), {\r\n            status: 500,\r\n            headers: { 'Content-Type': 'application/json' }\r\n          });\r\n        }\r\n      }\r\n    };\r\n  };\r\n}\r\n\r\n// =====================================================\r\n// FUNCIONES DE AUDITORÍA\r\n// =====================================================\r\n\r\n/**\r\n * Log de operaciones RLS para auditoría\r\n */\r\nasync function logRLSOperation(\r\n  enterpriseContext: EnterpriseAuthContext,\r\n  operation: string,\r\n  metadata: any\r\n): Promise<void> {\r\n  try {\r\n    if (!supabaseAdmin) {return;}\r\n\r\n    await supabaseAdmin\r\n      .from('security_audit_logs')\r\n      .insert({\r\n        user_id: enterpriseContext.userId,\r\n        event_type: 'RLS_OPERATION',\r\n        event_category: 'database_access',\r\n        severity: 'info',\r\n        description: `RLS operation: ${operation}`,\r\n        metadata: {\r\n          operation,\r\n          role: enterpriseContext.role,\r\n          permissions: enterpriseContext.permissions,\r\n          security_level: enterpriseContext.securityLevel,\r\n          ...metadata\r\n        },\r\n        ip_address: enterpriseContext.ipAddress,\r\n        user_agent: enterpriseContext.userAgent,\r\n        created_at: new Date().toISOString()\r\n      });\r\n\r\n  } catch (error) {\r\n    console.error('[RLS] Error logging RLS operation:', error);\r\n  }\r\n}\r\n\r\n// =====================================================\r\n// UTILIDADES DE TESTING\r\n// =====================================================\r\n\r\n/**\r\n * Función para testing de políticas RLS\r\n */\r\nexport async function testRLSPolicies(\r\n  tableName: string,\r\n  testCases: Array<{\r\n    name: string;\r\n    userRole: 'admin' | 'user' | 'moderator';\r\n    operation: 'SELECT' | 'INSERT' | 'UPDATE' | 'DELETE';\r\n    expectedResult: 'allow' | 'deny';\r\n    testData?: any;\r\n  }>\r\n): Promise<Array<{ name: string; passed: boolean; error?: string }>> {\r\n  const results = [];\r\n\r\n  for (const testCase of testCases) {\r\n    try {\r\n      // Implementar lógica de testing específica\r\n      // Esta función se puede expandir para testing automatizado\r\n      results.push({\r\n        name: testCase.name,\r\n        passed: true // Placeholder\r\n      });\r\n    } catch (error) {\r\n      results.push({\r\n        name: testCase.name,\r\n        passed: false,\r\n        error: error.message\r\n      });\r\n    }\r\n  }\r\n\r\n  return results;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]}