bb3c552b3265179ff05f49d8de20adb3
/**
 * Microinteractions Test Ultra-Simplificado
 * Sin dependencias complejas - Solo microinteracciones básicas
 */ "use strict";
// Mock completo del Header para microinteracciones
jest.mock('../index', ()=>{
    return function MockHeaderMicrointeractions() {
        const [searchFocused, setSearchFocused] = _react.default.useState(false);
        const [cartHovered, setCartHovered] = _react.default.useState(false);
        const [menuAnimating, setMenuAnimating] = _react.default.useState(false);
        const [searchValue, setSearchValue] = _react.default.useState('');
        const [cartCount, setCartCount] = _react.default.useState(0);
        const handleSearchFocus = ()=>{
            setSearchFocused(true);
        };
        const handleSearchBlur = ()=>{
            setSearchFocused(false);
        };
        const handleCartHover = ()=>{
            setCartHovered(true);
        };
        const handleCartLeave = ()=>{
            setCartHovered(false);
        };
        const handleMenuToggle = ()=>{
            setMenuAnimating(true);
            setTimeout(()=>setMenuAnimating(false), 300);
        };
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)("header", {
            role: "banner",
            "data-testid": "header-microinteractions",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    "data-testid": "search-microinteraction",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                            role: "searchbox",
                            "aria-label": "Buscar productos",
                            value: searchValue,
                            onChange: (e)=>setSearchValue(e.target.value),
                            onFocus: handleSearchFocus,
                            onBlur: handleSearchBlur,
                            className: `transition-all duration-200 ${searchFocused ? 'ring-2 ring-blue-500' : ''}`,
                            placeholder: "Buscar productos..."
                        }),
                        searchFocused && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            "data-testid": "search-focus-indicator",
                            className: "search-focused",
                            children: "Campo enfocado"
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    "data-testid": "cart-microinteraction",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                            onMouseEnter: handleCartHover,
                            onMouseLeave: handleCartLeave,
                            onClick: ()=>setCartCount((prev)=>prev + 1),
                            className: `transition-transform duration-200 ${cartHovered ? 'scale-110' : 'scale-100'}`,
                            "aria-label": `Carrito con ${cartCount} productos`,
                            children: [
                                "\uD83D\uDED2 ",
                                cartCount
                            ]
                        }),
                        cartHovered && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            "data-testid": "cart-hover-tooltip",
                            className: "tooltip",
                            children: "Ver carrito"
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    "data-testid": "menu-microinteraction",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                            onClick: handleMenuToggle,
                            className: `transition-all duration-300 ${menuAnimating ? 'rotate-90' : 'rotate-0'}`,
                            disabled: menuAnimating,
                            children: "☰"
                        }),
                        menuAnimating && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            "data-testid": "menu-animating",
                            className: "animating",
                            children: "Animando..."
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    "data-testid": "interactive-elements",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                            className: "hover:bg-blue-500 transition-colors duration-150",
                            onMouseEnter: (e)=>e.target.style.backgroundColor = '#3b82f6',
                            onMouseLeave: (e)=>e.target.style.backgroundColor = '',
                            children: "Hover Effect"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                            className: "active:scale-95 transition-transform duration-100",
                            onMouseDown: (e)=>e.target.style.transform = 'scale(0.95)',
                            onMouseUp: (e)=>e.target.style.transform = 'scale(1)',
                            children: "Click Effect"
                        })
                    ]
                })
            ]
        });
    };
});
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
const _index = /*#__PURE__*/ _interop_require_default(require("../index"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
describe('Microinteractions - Ultra-Simplified Tests', ()=>{
    beforeEach(()=>{
        jest.clearAllMocks();
    });
    describe('Search Microinteractions', ()=>{
        it('debe mostrar indicador de focus', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            // No debe estar enfocado inicialmente
            expect(_react1.screen.queryByTestId('search-focus-indicator')).not.toBeInTheDocument();
            // Focus debe mostrar indicador
            _react1.fireEvent.focus(searchInput);
            expect(_react1.screen.getByTestId('search-focus-indicator')).toBeInTheDocument();
            expect(_react1.screen.getByText('Campo enfocado')).toBeInTheDocument();
        });
        it('debe ocultar indicador al perder focus', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            // Focus y luego blur
            _react1.fireEvent.focus(searchInput);
            expect(_react1.screen.getByTestId('search-focus-indicator')).toBeInTheDocument();
            _react1.fireEvent.blur(searchInput);
            expect(_react1.screen.queryByTestId('search-focus-indicator')).not.toBeInTheDocument();
        });
        it('debe aplicar clases de transición', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            expect(searchInput).toHaveClass('transition-all', 'duration-200');
        });
        it('debe aplicar estilos de focus', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            _react1.fireEvent.focus(searchInput);
            expect(searchInput).toHaveClass('ring-2', 'ring-blue-500');
        });
    });
    describe('Cart Microinteractions', ()=>{
        it('debe mostrar tooltip al hacer hover', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const cartButton = _react1.screen.getByLabelText(/Carrito con \d+ productos/);
            // No debe mostrar tooltip inicialmente
            expect(_react1.screen.queryByTestId('cart-hover-tooltip')).not.toBeInTheDocument();
            // Hover debe mostrar tooltip
            _react1.fireEvent.mouseEnter(cartButton);
            expect(_react1.screen.getByTestId('cart-hover-tooltip')).toBeInTheDocument();
            expect(_react1.screen.getByText('Ver carrito')).toBeInTheDocument();
        });
        it('debe ocultar tooltip al salir del hover', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const cartButton = _react1.screen.getByLabelText(/Carrito con \d+ productos/);
            // Hover y luego leave
            _react1.fireEvent.mouseEnter(cartButton);
            expect(_react1.screen.getByTestId('cart-hover-tooltip')).toBeInTheDocument();
            _react1.fireEvent.mouseLeave(cartButton);
            expect(_react1.screen.queryByTestId('cart-hover-tooltip')).not.toBeInTheDocument();
        });
        it('debe aplicar transformación de escala', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const cartButton = _react1.screen.getByLabelText(/Carrito con \d+ productos/);
            expect(cartButton).toHaveClass('transition-transform', 'duration-200');
            // Hover debe cambiar escala
            _react1.fireEvent.mouseEnter(cartButton);
            expect(cartButton).toHaveClass('scale-110');
            _react1.fireEvent.mouseLeave(cartButton);
            expect(cartButton).toHaveClass('scale-100');
        });
        it('debe incrementar contador al hacer click', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const cartButton = _react1.screen.getByLabelText(/Carrito con 0 productos/);
            _react1.fireEvent.click(cartButton);
            expect(_react1.screen.getByLabelText(/Carrito con 1 productos/)).toBeInTheDocument();
        });
    });
    describe('Menu Microinteractions', ()=>{
        it('debe mostrar animación al hacer click', async ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const menuButton = _react1.screen.getByText('☰');
            // No debe estar animando inicialmente
            expect(_react1.screen.queryByTestId('menu-animating')).not.toBeInTheDocument();
            // Click debe iniciar animación
            _react1.fireEvent.click(menuButton);
            expect(_react1.screen.getByTestId('menu-animating')).toBeInTheDocument();
            expect(_react1.screen.getByText('Animando...')).toBeInTheDocument();
        });
        it('debe aplicar rotación durante animación', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const menuButton = _react1.screen.getByText('☰');
            expect(menuButton).toHaveClass('transition-all', 'duration-300');
            _react1.fireEvent.click(menuButton);
            expect(menuButton).toHaveClass('rotate-90');
        });
        it('debe deshabilitar botón durante animación', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const menuButton = _react1.screen.getByText('☰');
            expect(menuButton).not.toBeDisabled();
            _react1.fireEvent.click(menuButton);
            expect(menuButton).toBeDisabled();
        });
        it('debe terminar animación después del timeout', async ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const menuButton = _react1.screen.getByText('☰');
            _react1.fireEvent.click(menuButton);
            expect(_react1.screen.getByTestId('menu-animating')).toBeInTheDocument();
            // Esperar que termine la animación
            await (0, _react1.waitFor)(()=>{
                expect(_react1.screen.queryByTestId('menu-animating')).not.toBeInTheDocument();
            }, {
                timeout: 500
            });
        });
    });
    describe('Interactive Elements', ()=>{
        it('debe aplicar efectos hover', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const hoverButton = _react1.screen.getByText('Hover Effect');
            expect(hoverButton).toHaveClass('hover:bg-blue-500', 'transition-colors');
        });
        it('debe aplicar efectos de click', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const clickButton = _react1.screen.getByText('Click Effect');
            expect(clickButton).toHaveClass('active:scale-95', 'transition-transform');
        });
        it('debe manejar eventos de mouse', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const hoverButton = _react1.screen.getByText('Hover Effect');
            // Simular hover
            _react1.fireEvent.mouseEnter(hoverButton);
            expect(hoverButton.style.backgroundColor).toBe('rgb(59, 130, 246)');
            _react1.fireEvent.mouseLeave(hoverButton);
            expect(hoverButton.style.backgroundColor).toBe('');
        });
        it('debe manejar eventos de click', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const clickButton = _react1.screen.getByText('Click Effect');
            // Simular click
            _react1.fireEvent.mouseDown(clickButton);
            expect(clickButton.style.transform).toBe('scale(0.95)');
            _react1.fireEvent.mouseUp(clickButton);
            expect(clickButton.style.transform).toBe('scale(1)');
        });
    });
    describe('Accesibilidad de Microinteractions', ()=>{
        it('debe mantener accesibilidad durante animaciones', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            const cartButton = _react1.screen.getByLabelText(/Carrito con \d+ productos/);
            // Focus debe funcionar con animaciones
            searchInput.focus();
            expect(document.activeElement).toBe(searchInput);
            // Verificar que tiene clases de transición
            expect(searchInput).toHaveClass('transition-all');
            // Click debe funcionar con animaciones
            _react1.fireEvent.click(cartButton);
            expect(_react1.screen.getByLabelText(/Carrito con 1 productos/)).toBeInTheDocument();
        });
        it('debe mantener labels durante interacciones', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            const cartButton = _react1.screen.getByLabelText(/Carrito con \d+ productos/);
            // Labels deben mantenerse durante focus
            _react1.fireEvent.focus(searchInput);
            expect(searchInput).toHaveAttribute('aria-label', 'Buscar productos');
            // Labels deben actualizarse correctamente
            _react1.fireEvent.click(cartButton);
            expect(_react1.screen.getByLabelText(/Carrito con 1 productos/)).toBeInTheDocument();
        });
        it('debe ser navegable por teclado', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            const menuButton = _react1.screen.getByText('☰');
            // Tab navigation debe funcionar
            searchInput.focus();
            expect(document.activeElement).toBe(searchInput);
            menuButton.focus();
            expect(document.activeElement).toBe(menuButton);
        });
    });
    describe('Performance de Microinteractions', ()=>{
        it('debe ejecutar animaciones rápidamente', ()=>{
            const startTime = performance.now();
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            _react1.fireEvent.focus(searchInput);
            const endTime = performance.now();
            const executionTime = endTime - startTime;
            expect(executionTime).toBeLessThan(50); // 50ms threshold
        });
        it('debe manejar múltiples interacciones simultáneamente', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            const cartButton = _react1.screen.getByLabelText(/Carrito con \d+ productos/);
            const menuButton = _react1.screen.getByText('☰');
            // Múltiples interacciones
            _react1.fireEvent.focus(searchInput);
            _react1.fireEvent.mouseEnter(cartButton);
            _react1.fireEvent.click(menuButton);
            // Todo debe funcionar correctamente
            expect(_react1.screen.getByTestId('search-focus-indicator')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('cart-hover-tooltip')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('menu-animating')).toBeInTheDocument();
        });
    });
    describe('Estados de Microinteractions', ()=>{
        it('debe mantener estados independientes', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            const cartButton = _react1.screen.getByLabelText(/Carrito con \d+ productos/);
            // Activar múltiples estados
            _react1.fireEvent.focus(searchInput);
            _react1.fireEvent.mouseEnter(cartButton);
            // Estados deben ser independientes
            expect(_react1.screen.getByTestId('search-focus-indicator')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('cart-hover-tooltip')).toBeInTheDocument();
            // Desactivar uno no debe afectar el otro
            _react1.fireEvent.blur(searchInput);
            expect(_react1.screen.queryByTestId('search-focus-indicator')).not.toBeInTheDocument();
            expect(_react1.screen.getByTestId('cart-hover-tooltip')).toBeInTheDocument();
        });
        it('debe resetear estados correctamente', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            const cartButton = _react1.screen.getByLabelText(/Carrito con \d+ productos/);
            // Activar estados
            _react1.fireEvent.focus(searchInput);
            _react1.fireEvent.mouseEnter(cartButton);
            // Resetear todos
            _react1.fireEvent.blur(searchInput);
            _react1.fireEvent.mouseLeave(cartButton);
            // No debe haber estados activos
            expect(_react1.screen.queryByTestId('search-focus-indicator')).not.toBeInTheDocument();
            expect(_react1.screen.queryByTestId('cart-hover-tooltip')).not.toBeInTheDocument();
        });
    });
});

//# sourceMappingURL=data:application/json;base64,