e13c9ec2f83ab8469c9ecd66a32cac07
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_1twkem731g() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\users\\route.ts";
  var hash = "b50526f2a7c3abb2dde46dee02227f92c489482a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\users\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 18
        },
        end: {
          line: 24,
          column: 66
        }
      },
      "9": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 54
        }
      },
      "10": {
        start: {
          line: 26,
          column: 13
        },
        end: {
          line: 26,
          column: 27
        }
      },
      "11": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 60
        }
      },
      "12": {
        start: {
          line: 28,
          column: 22
        },
        end: {
          line: 28,
          column: 67
        }
      },
      "13": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 71
        }
      },
      "14": {
        start: {
          line: 30,
          column: 17
        },
        end: {
          line: 30,
          column: 62
        }
      },
      "15": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 24
        }
      },
      "16": {
        start: {
          line: 35,
          column: 26
        },
        end: {
          line: 61,
          column: 2
        }
      },
      "17": {
        start: {
          line: 62,
          column: 25
        },
        end: {
          line: 80,
          column: 2
        }
      },
      "18": {
        start: {
          line: 81,
          column: 25
        },
        end: {
          line: 97,
          column: 2
        }
      },
      "19": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 141,
          column: 5
        }
      },
      "20": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "21": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 112,
          column: 14
        }
      },
      "22": {
        start: {
          line: 114,
          column: 24
        },
        end: {
          line: 114,
          column: 49
        }
      },
      "23": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "24": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 119,
          column: 14
        }
      },
      "25": {
        start: {
          line: 122,
          column: 24
        },
        end: {
          line: 122,
          column: 68
        }
      },
      "26": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 128,
          column: 9
        }
      },
      "27": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 127,
          column: 14
        }
      },
      "28": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 132,
          column: 10
        }
      },
      "29": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 136,
          column: 11
        }
      },
      "30": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 140,
          column: 10
        }
      },
      "31": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 237,
          column: 5
        }
      },
      "32": {
        start: {
          line: 148,
          column: 20
        },
        end: {
          line: 164,
          column: 10
        }
      },
      "33": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "34": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 95
        }
      },
      "35": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "36": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 174,
          column: 13
        }
      },
      "37": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 171,
          column: 52
        }
      },
      "38": {
        start: {
          line: 172,
          column: 19
        },
        end: {
          line: 174,
          column: 13
        }
      },
      "39": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 173,
          column: 53
        }
      },
      "40": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "41": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 51
        }
      },
      "42": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "43": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 63
        }
      },
      "44": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 184,
          column: 9
        }
      },
      "45": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 61
        }
      },
      "46": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 188,
          column: 11
        }
      },
      "47": {
        start: {
          line: 190,
          column: 21
        },
        end: {
          line: 190,
          column: 61
        }
      },
      "48": {
        start: {
          line: 191,
          column: 19
        },
        end: {
          line: 191,
          column: 46
        }
      },
      "49": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 38
        }
      },
      "50": {
        start: {
          line: 193,
          column: 46
        },
        end: {
          line: 193,
          column: 57
        }
      },
      "51": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 196,
          column: 9
        }
      },
      "52": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 24
        }
      },
      "53": {
        start: {
          line: 198,
          column: 31
        },
        end: {
          line: 198,
          column: 33
        }
      },
      "54": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "55": {
        start: {
          line: 200,
          column: 28
        },
        end: {
          line: 200,
          column: 54
        }
      },
      "56": {
        start: {
          line: 200,
          column: 46
        },
        end: {
          line: 200,
          column: 53
        }
      },
      "57": {
        start: {
          line: 202,
          column: 41
        },
        end: {
          line: 202,
          column: 159
        }
      },
      "58": {
        start: {
          line: 204,
          column: 29
        },
        end: {
          line: 214,
          column: 24
        }
      },
      "59": {
        start: {
          line: 205,
          column: 16
        },
        end: {
          line: 210,
          column: 17
        }
      },
      "60": {
        start: {
          line: 206,
          column: 20
        },
        end: {
          line: 209,
          column: 22
        }
      },
      "61": {
        start: {
          line: 211,
          column: 16
        },
        end: {
          line: 211,
          column: 53
        }
      },
      "62": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 212,
          column: 67
        }
      },
      "63": {
        start: {
          line: 213,
          column: 16
        },
        end: {
          line: 213,
          column: 27
        }
      },
      "64": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 226,
          column: 13
        }
      },
      "65": {
        start: {
          line: 217,
          column: 30
        },
        end: {
          line: 220,
          column: 17
        }
      },
      "66": {
        start: {
          line: 221,
          column: 16
        },
        end: {
          line: 225,
          column: 19
        }
      },
      "67": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 231,
          column: 10
        }
      },
      "68": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 235,
          column: 11
        }
      },
      "69": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 20
        }
      },
      "70": {
        start: {
          line: 240,
          column: 22
        },
        end: {
          line: 240,
          column: 32
        }
      },
      "71": {
        start: {
          line: 241,
          column: 4
        },
        end: {
          line: 359,
          column: 5
        }
      },
      "72": {
        start: {
          line: 243,
          column: 32
        },
        end: {
          line: 247,
          column: 25
        }
      },
      "73": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 256,
          column: 9
        }
      },
      "74": {
        start: {
          line: 249,
          column: 29
        },
        end: {
          line: 253,
          column: 14
        }
      },
      "75": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 77
        }
      },
      "76": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 28
        }
      },
      "77": {
        start: {
          line: 258,
          column: 27
        },
        end: {
          line: 258,
          column: 52
        }
      },
      "78": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 268,
          column: 9
        }
      },
      "79": {
        start: {
          line: 260,
          column: 34
        },
        end: {
          line: 264,
          column: 13
        }
      },
      "80": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 267,
          column: 15
        }
      },
      "81": {
        start: {
          line: 270,
          column: 33
        },
        end: {
          line: 270,
          column: 53
        }
      },
      "82": {
        start: {
          line: 271,
          column: 33
        },
        end: {
          line: 281,
          column: 10
        }
      },
      "83": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 291,
          column: 9
        }
      },
      "84": {
        start: {
          line: 283,
          column: 34
        },
        end: {
          line: 287,
          column: 13
        }
      },
      "85": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 290,
          column: 15
        }
      },
      "86": {
        start: {
          line: 292,
          column: 24
        },
        end: {
          line: 292,
          column: 45
        }
      },
      "87": {
        start: {
          line: 293,
          column: 33
        },
        end: {
          line: 293,
          column: 74
        }
      },
      "88": {
        start: {
          line: 294,
          column: 27
        },
        end: {
          line: 294,
          column: 59
        }
      },
      "89": {
        start: {
          line: 295,
          column: 29
        },
        end: {
          line: 316,
          column: 9
        }
      },
      "90": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 324,
          column: 11
        }
      },
      "91": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 330,
          column: 11
        }
      },
      "92": {
        start: {
          line: 331,
          column: 25
        },
        end: {
          line: 335,
          column: 9
        }
      },
      "93": {
        start: {
          line: 336,
          column: 29
        },
        end: {
          line: 336,
          column: 64
        }
      },
      "94": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 337,
          column: 77
        }
      },
      "95": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 338,
          column: 28
        }
      },
      "96": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 342,
          column: 11
        }
      },
      "97": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 350,
          column: 11
        }
      },
      "98": {
        start: {
          line: 351,
          column: 30
        },
        end: {
          line: 355,
          column: 9
        }
      },
      "99": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 358,
          column: 11
        }
      },
      "100": {
        start: {
          line: 362,
          column: 22
        },
        end: {
          line: 362,
          column: 32
        }
      },
      "101": {
        start: {
          line: 363,
          column: 4
        },
        end: {
          line: 515,
          column: 5
        }
      },
      "102": {
        start: {
          line: 365,
          column: 32
        },
        end: {
          line: 369,
          column: 32
        }
      },
      "103": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 378,
          column: 9
        }
      },
      "104": {
        start: {
          line: 371,
          column: 29
        },
        end: {
          line: 375,
          column: 14
        }
      },
      "105": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 376,
          column: 77
        }
      },
      "106": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 28
        }
      },
      "107": {
        start: {
          line: 380,
          column: 27
        },
        end: {
          line: 380,
          column: 52
        }
      },
      "108": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 390,
          column: 9
        }
      },
      "109": {
        start: {
          line: 382,
          column: 34
        },
        end: {
          line: 386,
          column: 13
        }
      },
      "110": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 389,
          column: 15
        }
      },
      "111": {
        start: {
          line: 392,
          column: 21
        },
        end: {
          line: 392,
          column: 41
        }
      },
      "112": {
        start: {
          line: 393,
          column: 33
        },
        end: {
          line: 393,
          column: 65
        }
      },
      "113": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 403,
          column: 9
        }
      },
      "114": {
        start: {
          line: 395,
          column: 34
        },
        end: {
          line: 399,
          column: 13
        }
      },
      "115": {
        start: {
          line: 400,
          column: 12
        },
        end: {
          line: 402,
          column: 15
        }
      },
      "116": {
        start: {
          line: 404,
          column: 25
        },
        end: {
          line: 404,
          column: 46
        }
      },
      "117": {
        start: {
          line: 406,
          column: 39
        },
        end: {
          line: 406,
          column: 132
        }
      },
      "118": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 416,
          column: 9
        }
      },
      "119": {
        start: {
          line: 408,
          column: 34
        },
        end: {
          line: 412,
          column: 13
        }
      },
      "120": {
        start: {
          line: 413,
          column: 12
        },
        end: {
          line: 415,
          column: 15
        }
      },
      "121": {
        start: {
          line: 418,
          column: 53
        },
        end: {
          line: 426,
          column: 10
        }
      },
      "122": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 439,
          column: 9
        }
      },
      "123": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 430,
          column: 15
        }
      },
      "124": {
        start: {
          line: 431,
          column: 34
        },
        end: {
          line: 435,
          column: 13
        }
      },
      "125": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 438,
          column: 15
        }
      },
      "126": {
        start: {
          line: 441,
          column: 55
        },
        end: {
          line: 449,
          column: 28
        }
      },
      "127": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 464,
          column: 9
        }
      },
      "128": {
        start: {
          line: 452,
          column: 12
        },
        end: {
          line: 452,
          column: 82
        }
      },
      "129": {
        start: {
          line: 453,
          column: 12
        },
        end: {
          line: 455,
          column: 15
        }
      },
      "130": {
        start: {
          line: 456,
          column: 34
        },
        end: {
          line: 460,
          column: 13
        }
      },
      "131": {
        start: {
          line: 461,
          column: 12
        },
        end: {
          line: 463,
          column: 15
        }
      },
      "132": {
        start: {
          line: 466,
          column: 8
        },
        end: {
          line: 472,
          column: 11
        }
      },
      "133": {
        start: {
          line: 474,
          column: 8
        },
        end: {
          line: 479,
          column: 11
        }
      },
      "134": {
        start: {
          line: 480,
          column: 30
        },
        end: {
          line: 484,
          column: 9
        }
      },
      "135": {
        start: {
          line: 485,
          column: 25
        },
        end: {
          line: 489,
          column: 9
        }
      },
      "136": {
        start: {
          line: 490,
          column: 29
        },
        end: {
          line: 492,
          column: 10
        }
      },
      "137": {
        start: {
          line: 493,
          column: 8
        },
        end: {
          line: 493,
          column: 77
        }
      },
      "138": {
        start: {
          line: 494,
          column: 8
        },
        end: {
          line: 494,
          column: 28
        }
      },
      "139": {
        start: {
          line: 496,
          column: 8
        },
        end: {
          line: 498,
          column: 11
        }
      },
      "140": {
        start: {
          line: 500,
          column: 8
        },
        end: {
          line: 506,
          column: 11
        }
      },
      "141": {
        start: {
          line: 507,
          column: 30
        },
        end: {
          line: 511,
          column: 9
        }
      },
      "142": {
        start: {
          line: 512,
          column: 8
        },
        end: {
          line: 514,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "validateAdminAuth",
        decl: {
          start: {
            line: 101,
            column: 15
          },
          end: {
            line: 101,
            column: 32
          }
        },
        loc: {
          start: {
            line: 101,
            column: 35
          },
          end: {
            line: 142,
            column: 1
          }
        },
        line: 101
      },
      "5": {
        name: "getUsersWithStats",
        decl: {
          start: {
            line: 146,
            column: 15
          },
          end: {
            line: 146,
            column: 32
          }
        },
        loc: {
          start: {
            line: 146,
            column: 54
          },
          end: {
            line: 238,
            column: 1
          }
        },
        line: 146
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 200,
            column: 38
          },
          end: {
            line: 200,
            column: 39
          }
        },
        loc: {
          start: {
            line: 200,
            column: 46
          },
          end: {
            line: 200,
            column: 53
          }
        },
        line: 200
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 204,
            column: 48
          },
          end: {
            line: 204,
            column: 49
          }
        },
        loc: {
          start: {
            line: 204,
            column: 62
          },
          end: {
            line: 214,
            column: 13
          }
        },
        line: 204
      },
      "8": {
        name: "GET",
        decl: {
          start: {
            line: 239,
            column: 15
          },
          end: {
            line: 239,
            column: 18
          }
        },
        loc: {
          start: {
            line: 239,
            column: 28
          },
          end: {
            line: 360,
            column: 1
          }
        },
        line: 239
      },
      "9": {
        name: "POST",
        decl: {
          start: {
            line: 361,
            column: 15
          },
          end: {
            line: 361,
            column: 19
          }
        },
        loc: {
          start: {
            line: 361,
            column: 29
          },
          end: {
            line: 516,
            column: 1
          }
        },
        line: 361
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "1": {
        loc: {
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 104,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 104,
            column: 50
          }
        }, {
          start: {
            line: 104,
            column: 54
          },
          end: {
            line: 104,
            column: 88
          }
        }],
        line: 104
      },
      "2": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "3": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "4": {
        loc: {
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "5": {
        loc: {
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "6": {
        loc: {
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        }, {
          start: {
            line: 172,
            column: 19
          },
          end: {
            line: 174,
            column: 13
          }
        }],
        line: 170
      },
      "7": {
        loc: {
          start: {
            line: 172,
            column: 19
          },
          end: {
            line: 174,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 19
          },
          end: {
            line: 174,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "8": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "9": {
        loc: {
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "10": {
        loc: {
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 184,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 184,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "11": {
        loc: {
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 196,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 196,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "12": {
        loc: {
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "13": {
        loc: {
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 199,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 199,
            column: 17
          }
        }, {
          start: {
            line: 199,
            column: 21
          },
          end: {
            line: 199,
            column: 37
          }
        }],
        line: 199
      },
      "14": {
        loc: {
          start: {
            line: 204,
            column: 29
          },
          end: {
            line: 214,
            column: 24
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 29
          },
          end: {
            line: 214,
            column: 18
          }
        }, {
          start: {
            line: 214,
            column: 22
          },
          end: {
            line: 214,
            column: 24
          }
        }],
        line: 204
      },
      "15": {
        loc: {
          start: {
            line: 205,
            column: 16
          },
          end: {
            line: 210,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 16
          },
          end: {
            line: 210,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "16": {
        loc: {
          start: {
            line: 212,
            column: 50
          },
          end: {
            line: 212,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 50
          },
          end: {
            line: 212,
            column: 61
          }
        }, {
          start: {
            line: 212,
            column: 65
          },
          end: {
            line: 212,
            column: 66
          }
        }],
        line: 212
      },
      "17": {
        loc: {
          start: {
            line: 217,
            column: 30
          },
          end: {
            line: 220,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 217,
            column: 30
          },
          end: {
            line: 217,
            column: 47
          }
        }, {
          start: {
            line: 217,
            column: 51
          },
          end: {
            line: 220,
            column: 17
          }
        }],
        line: 217
      },
      "18": {
        loc: {
          start: {
            line: 230,
            column: 19
          },
          end: {
            line: 230,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 230,
            column: 19
          },
          end: {
            line: 230,
            column: 24
          }
        }, {
          start: {
            line: 230,
            column: 28
          },
          end: {
            line: 230,
            column: 29
          }
        }],
        line: 230
      },
      "19": {
        loc: {
          start: {
            line: 246,
            column: 21
          },
          end: {
            line: 246,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 246,
            column: 21
          },
          end: {
            line: 246,
            column: 66
          }
        }, {
          start: {
            line: 246,
            column: 70
          },
          end: {
            line: 246,
            column: 110
          }
        }],
        line: 246
      },
      "20": {
        loc: {
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 256,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 256,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "21": {
        loc: {
          start: {
            line: 259,
            column: 8
          },
          end: {
            line: 268,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 8
          },
          end: {
            line: 268,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 259
      },
      "22": {
        loc: {
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 291,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 291,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 282
      },
      "23": {
        loc: {
          start: {
            line: 306,
            column: 24
          },
          end: {
            line: 306,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 306,
            column: 24
          },
          end: {
            line: 306,
            column: 38
          }
        }, {
          start: {
            line: 306,
            column: 42
          },
          end: {
            line: 306,
            column: 51
          }
        }],
        line: 306
      },
      "24": {
        loc: {
          start: {
            line: 307,
            column: 24
          },
          end: {
            line: 307,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 307,
            column: 24
          },
          end: {
            line: 307,
            column: 38
          }
        }, {
          start: {
            line: 307,
            column: 42
          },
          end: {
            line: 307,
            column: 51
          }
        }],
        line: 307
      },
      "25": {
        loc: {
          start: {
            line: 308,
            column: 22
          },
          end: {
            line: 308,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 308,
            column: 22
          },
          end: {
            line: 308,
            column: 34
          }
        }, {
          start: {
            line: 308,
            column: 38
          },
          end: {
            line: 308,
            column: 47
          }
        }],
        line: 308
      },
      "26": {
        loc: {
          start: {
            line: 309,
            column: 27
          },
          end: {
            line: 309,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 309,
            column: 27
          },
          end: {
            line: 309,
            column: 44
          }
        }, {
          start: {
            line: 309,
            column: 48
          },
          end: {
            line: 309,
            column: 57
          }
        }],
        line: 309
      },
      "27": {
        loc: {
          start: {
            line: 310,
            column: 25
          },
          end: {
            line: 310,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 310,
            column: 25
          },
          end: {
            line: 310,
            column: 40
          }
        }, {
          start: {
            line: 310,
            column: 44
          },
          end: {
            line: 310,
            column: 53
          }
        }],
        line: 310
      },
      "28": {
        loc: {
          start: {
            line: 349,
            column: 19
          },
          end: {
            line: 349,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 349,
            column: 44
          },
          end: {
            line: 349,
            column: 57
          }
        }, {
          start: {
            line: 349,
            column: 60
          },
          end: {
            line: 349,
            column: 75
          }
        }],
        line: 349
      },
      "29": {
        loc: {
          start: {
            line: 368,
            column: 21
          },
          end: {
            line: 368,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 368,
            column: 21
          },
          end: {
            line: 368,
            column: 66
          }
        }, {
          start: {
            line: 368,
            column: 70
          },
          end: {
            line: 368,
            column: 110
          }
        }],
        line: 368
      },
      "30": {
        loc: {
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 378,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 378,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 370
      },
      "31": {
        loc: {
          start: {
            line: 381,
            column: 8
          },
          end: {
            line: 390,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 381,
            column: 8
          },
          end: {
            line: 390,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 381
      },
      "32": {
        loc: {
          start: {
            line: 394,
            column: 8
          },
          end: {
            line: 403,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 394,
            column: 8
          },
          end: {
            line: 403,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 394
      },
      "33": {
        loc: {
          start: {
            line: 407,
            column: 8
          },
          end: {
            line: 416,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 407,
            column: 8
          },
          end: {
            line: 416,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 407
      },
      "34": {
        loc: {
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 439,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 439,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 427
      },
      "35": {
        loc: {
          start: {
            line: 427,
            column: 12
          },
          end: {
            line: 427,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 427,
            column: 12
          },
          end: {
            line: 427,
            column: 21
          }
        }, {
          start: {
            line: 427,
            column: 25
          },
          end: {
            line: 427,
            column: 39
          }
        }],
        line: 427
      },
      "36": {
        loc: {
          start: {
            line: 450,
            column: 8
          },
          end: {
            line: 464,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 450,
            column: 8
          },
          end: {
            line: 464,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 450
      },
      "37": {
        loc: {
          start: {
            line: 505,
            column: 19
          },
          end: {
            line: 505,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 505,
            column: 44
          },
          end: {
            line: 505,
            column: 57
          }
        }, {
          start: {
            line: 505,
            column: 60
          },
          end: {
            line: 505,
            column: 75
          }
        }],
        line: 505
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\users\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - ADMIN USERS API ENTERPRISE\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { ApiResponse } from '@/types/api';\r\nimport { z } from 'zod';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\nimport { checkRateLimit } from '@/lib/auth/rate-limiting';\r\nimport { addRateLimitHeaders, RATE_LIMIT_CONFIGS } from '@/lib/enterprise/rate-limiter';\r\nimport { metricsCollector } from '@/lib/enterprise/metrics';\r\n\r\n// ===================================\r\n// SCHEMAS DE VALIDACI\xD3N\r\n// ===================================\r\n\r\nconst UserFiltersSchema = z.object({\r\n  page: z.coerce.number().min(1).default(1),\r\n  limit: z.coerce.number().min(1).max(100).default(25),\r\n  search: z.string().optional().nullable(),\r\n  status: z.enum(['active', 'inactive', 'banned']).optional().nullable(),\r\n  role: z.enum(['user', 'admin', 'moderator']).optional().nullable(),\r\n  date_from: z.string().optional().nullable(),\r\n  date_to: z.string().optional().nullable(),\r\n  sort_by: z.enum(['created_at', 'email', 'name', 'last_login']).default('created_at'),\r\n  sort_order: z.enum(['asc', 'desc']).default('desc'),\r\n});\r\n\r\nconst CreateUserSchema = z.object({\r\n  email: z.string().email('Email inv\xE1lido'),\r\n  name: z.string().min(1, 'Nombre requerido').max(100, 'M\xE1ximo 100 caracteres'),\r\n  password: z.string().min(8, 'M\xEDnimo 8 caracteres').max(100, 'M\xE1ximo 100 caracteres'),\r\n  role: z.enum(['user', 'admin', 'moderator']).default('user'),\r\n  is_active: z.boolean().default(true),\r\n  phone: z.string().optional().nullable(),\r\n  address: z.object({\r\n    street_name: z.string().optional(),\r\n    street_number: z.string().optional(),\r\n    zip_code: z.string().optional(),\r\n    city_name: z.string().optional(),\r\n    state_name: z.string().optional(),\r\n  }).optional().nullable(),\r\n});\r\n\r\nconst UpdateUserSchema = z.object({\r\n  name: z.string().min(1).max(100).optional(),\r\n  role: z.enum(['user', 'admin', 'moderator']).optional(),\r\n  is_active: z.boolean().optional(),\r\n  phone: z.string().optional().nullable(),\r\n  address: z.object({\r\n    street_name: z.string().optional(),\r\n    street_number: z.string().optional(),\r\n    zip_code: z.string().optional(),\r\n    city_name: z.string().optional(),\r\n    state_name: z.string().optional(),\r\n  }).optional().nullable(),\r\n});\r\n\r\n// ===================================\r\n// TIPOS DE DATOS\r\n// ===================================\r\n\r\ninterface UserWithStats {\r\n  id: string;\r\n  email: string;\r\n  name: string;\r\n  role: string;\r\n  is_active: boolean;\r\n  phone?: string;\r\n  address?: any;\r\n  created_at: string;\r\n  updated_at: string;\r\n  last_login?: string;\r\n  orders_count: number;\r\n  total_spent: number;\r\n  avatar_url?: string;\r\n}\r\n\r\ninterface UsersListResponse {\r\n  users: UserWithStats[];\r\n  total: number;\r\n  pagination: {\r\n    page: number;\r\n    limit: number;\r\n    totalPages: number;\r\n    hasNext: boolean;\r\n    hasPrev: boolean;\r\n  };\r\n  filters: {\r\n    search?: string;\r\n    status?: string;\r\n    role?: string;\r\n    date_from?: string;\r\n    date_to?: string;\r\n  };\r\n  sort: {\r\n    by: string;\r\n    order: string;\r\n  };\r\n}\r\n\r\n// ===================================\r\n// MIDDLEWARE DE AUTENTICACI\xD3N ADMIN\r\n// ===================================\r\n\r\nasync function validateAdminAuth() {\r\n  try {\r\n    // BYPASS TEMPORAL PARA DESARROLLO\r\n    if (process.env.NODE_ENV === 'development' && process.env.BYPASS_AUTH === 'true') {\r\n      return {\r\n        user: {\r\n          id: 'dev-admin',\r\n          email: 'santiago@xor.com.ar',\r\n          name: 'Dev Admin'\r\n        },\r\n        userId: 'dev-admin'\r\n      };\r\n    }\r\n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return { error: 'Usuario no autenticado', status: 401 };\r\n    }\r\n\r\n    // Verificar si es admin\r\n    const isAdmin = session.user.email === 'santiago@xor.com.ar';\r\n    if (!isAdmin) {\r\n      return { error: 'Acceso denegado - Se requieren permisos de administrador', status: 403 };\r\n    }\r\n\r\n    return { user: session.user, userId: session.user.id };\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.AUTH, 'Error en validaci\xF3n admin', { error });\r\n    return { error: 'Error de autenticaci\xF3n', status: 500 };\r\n  }\r\n}\r\n\r\n// ===================================\r\n// FUNCIONES AUXILIARES\r\n// ===================================\r\n\r\nasync function getUsersWithStats(filters: any, pagination: any) {\r\n  try {\r\n    let query = supabaseAdmin\r\n      .from('user_profiles')\r\n      .select(`\r\n        id,\r\n        email,\r\n        first_name,\r\n        last_name,\r\n        role_id,\r\n        is_active,\r\n        metadata,\r\n        created_at,\r\n        updated_at,\r\n        user_roles (\r\n          role_name,\r\n          permissions\r\n        )\r\n      `, { count: 'exact' });\r\n\r\n    // Aplicar filtros\r\n    if (filters.search) {\r\n      query = query.or(`email.ilike.%${filters.search}%,name.ilike.%${filters.search}%`);\r\n    }\r\n\r\n    if (filters.status) {\r\n      if (filters.status === 'active') {\r\n        query = query.eq('is_active', true);\r\n      } else if (filters.status === 'inactive') {\r\n        query = query.eq('is_active', false);\r\n      }\r\n    }\r\n\r\n    if (filters.role) {\r\n      query = query.eq('role', filters.role);\r\n    }\r\n\r\n    if (filters.date_from) {\r\n      query = query.gte('created_at', filters.date_from);\r\n    }\r\n\r\n    if (filters.date_to) {\r\n      query = query.lte('created_at', filters.date_to);\r\n    }\r\n\r\n    // Aplicar ordenamiento\r\n    query = query.order(pagination.sort_by, { ascending: pagination.sort_order === 'asc' });\r\n\r\n    // Aplicar paginaci\xF3n\r\n    const from = (pagination.page - 1) * pagination.limit;\r\n    const to = from + pagination.limit - 1;\r\n    query = query.range(from, to);\r\n\r\n    const { data: users, error, count } = await query;\r\n\r\n    if (error) {\r\n      throw error;\r\n    }\r\n\r\n    // Obtener estad\xEDsticas de \xF3rdenes para cada usuario\r\n    const usersWithStats: UserWithStats[] = [];\r\n    \r\n    if (users && users.length > 0) {\r\n      const userIds = users.map(user => user.id);\r\n      \r\n      // Obtener estad\xEDsticas de \xF3rdenes\r\n      const { data: orderStats } = await supabaseAdmin\r\n        .from('orders')\r\n        .select('user_id, total')\r\n        .in('user_id', userIds)\r\n        .eq('status', 'completed');\r\n\r\n      // Calcular estad\xEDsticas por usuario\r\n      const statsMap = orderStats?.reduce((acc: any, order) => {\r\n        if (!acc[order.user_id]) {\r\n          acc[order.user_id] = { orders_count: 0, total_spent: 0 };\r\n        }\r\n        acc[order.user_id].orders_count += 1;\r\n        acc[order.user_id].total_spent += order.total || 0;\r\n        return acc;\r\n      }, {}) || {};\r\n\r\n      // Combinar datos\r\n      for (const user of users) {\r\n        const stats = statsMap[user.id] || { orders_count: 0, total_spent: 0 };\r\n        usersWithStats.push({\r\n          ...user,\r\n          orders_count: stats.orders_count,\r\n          total_spent: stats.total_spent\r\n        });\r\n      }\r\n    }\r\n\r\n    return {\r\n      users: usersWithStats,\r\n      total: count || 0\r\n    };\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error obteniendo usuarios con estad\xEDsticas', { error });\r\n    throw error;\r\n  }\r\n}\r\n\r\n// ===================================\r\n// GET - Listar usuarios con filtros y estad\xEDsticas\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,\r\n        maxRequests: RATE_LIMIT_CONFIGS.admin.maxRequests,\r\n        message: RATE_LIMIT_CONFIGS.admin.message || 'Demasiadas solicitudes administrativas'\r\n      },\r\n      'admin-users'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: rateLimitResult.message },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult);\r\n      return response;\r\n    }\r\n\r\n    // Validar autenticaci\xF3n admin\r\n    const authResult = await validateAdminAuth();\r\n    if (authResult.error) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: authResult.error,\r\n      };\r\n      return NextResponse.json(errorResponse, { status: authResult.status });\r\n    }\r\n\r\n    // Validar par\xE1metros\r\n    const { searchParams } = new URL(request.url);\r\n    const validationResult = UserFiltersSchema.safeParse({\r\n      page: searchParams.get('page'),\r\n      limit: searchParams.get('limit'),\r\n      search: searchParams.get('search'),\r\n      status: searchParams.get('status'),\r\n      role: searchParams.get('role'),\r\n      date_from: searchParams.get('date_from'),\r\n      date_to: searchParams.get('date_to'),\r\n      sort_by: searchParams.get('sort_by'),\r\n      sort_order: searchParams.get('sort_order'),\r\n    });\r\n\r\n    if (!validationResult.success) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'Par\xE1metros inv\xE1lidos',\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 400 });\r\n    }\r\n\r\n    const filters = validationResult.data;\r\n    const { users, total } = await getUsersWithStats(filters, filters);\r\n\r\n    const totalPages = Math.ceil(total / filters.limit);\r\n\r\n    const responseData: UsersListResponse = {\r\n      users,\r\n      total,\r\n      pagination: {\r\n        page: filters.page,\r\n        limit: filters.limit,\r\n        totalPages,\r\n        hasNext: filters.page < totalPages,\r\n        hasPrev: filters.page > 1,\r\n      },\r\n      filters: {\r\n        search: filters.search || undefined,\r\n        status: filters.status || undefined,\r\n        role: filters.role || undefined,\r\n        date_from: filters.date_from || undefined,\r\n        date_to: filters.date_to || undefined,\r\n      },\r\n      sort: {\r\n        by: filters.sort_by,\r\n        order: filters.sort_order,\r\n      },\r\n    };\r\n\r\n    // Registrar m\xE9tricas\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/users',\r\n      method: 'GET',\r\n      statusCode: 200,\r\n      responseTime: Date.now() - startTime,\r\n      userId: authResult.userId\r\n    });\r\n\r\n    // Log de auditor\xEDa\r\n    logger.log(LogLevel.INFO, LogCategory.ADMIN, 'Lista de usuarios consultada', {\r\n      userId: authResult.userId,\r\n      filters,\r\n      total\r\n    });\r\n\r\n    const response: ApiResponse<UsersListResponse> = {\r\n      data: responseData,\r\n      success: true,\r\n      message: 'Usuarios obtenidos exitosamente'\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response);\r\n    addRateLimitHeaders(nextResponse, rateLimitResult);\r\n    return nextResponse;\r\n\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en GET /api/admin/users', { error });\r\n\r\n    // Registrar m\xE9tricas de error\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/users',\r\n      method: 'GET',\r\n      statusCode: 500,\r\n      responseTime: Date.now() - startTime,\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    });\r\n\r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: 'Error interno del servidor',\r\n    };\r\n\r\n    return NextResponse.json(errorResponse, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// POST - Crear nuevo usuario\r\n// ===================================\r\nexport async function POST(request: NextRequest) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,\r\n        maxRequests: RATE_LIMIT_CONFIGS.admin.maxRequests,\r\n        message: RATE_LIMIT_CONFIGS.admin.message || 'Demasiadas solicitudes administrativas'\r\n      },\r\n      'admin-users-create'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: rateLimitResult.message },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult);\r\n      return response;\r\n    }\r\n\r\n    // Validar autenticaci\xF3n admin\r\n    const authResult = await validateAdminAuth();\r\n    if (authResult.error) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: authResult.error,\r\n      };\r\n      return NextResponse.json(errorResponse, { status: authResult.status });\r\n    }\r\n\r\n    // Validar datos de entrada\r\n    const body = await request.json();\r\n    const validationResult = CreateUserSchema.safeParse(body);\r\n\r\n    if (!validationResult.success) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'Datos de usuario inv\xE1lidos',\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 400 });\r\n    }\r\n\r\n    const userData = validationResult.data;\r\n\r\n    // Verificar si el email ya existe\r\n    const { data: existingUser } = await supabaseAdmin\r\n      .from('users')\r\n      .select('id')\r\n      .eq('email', userData.email)\r\n      .single();\r\n\r\n    if (existingUser) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'El email ya est\xE1 registrado',\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 409 });\r\n    }\r\n\r\n    // Crear usuario en Supabase Auth\r\n    const { data: authUser, error: authError } = await supabaseAdmin.auth.admin.createUser({\r\n      email: userData.email,\r\n      password: userData.password,\r\n      email_confirm: true,\r\n      user_metadata: {\r\n        name: userData.name,\r\n        role: userData.role\r\n      }\r\n    });\r\n\r\n    if (authError || !authUser.user) {\r\n      logger.log(LogLevel.ERROR, LogCategory.AUTH, 'Error creando usuario en Auth', { authError });\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'Error creando usuario',\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 500 });\r\n    }\r\n\r\n    // Crear perfil de usuario en la tabla users\r\n    const { data: newUser, error: profileError } = await supabaseAdmin\r\n      .from('users')\r\n      .insert({\r\n        id: authUser.user.id,\r\n        email: userData.email,\r\n        name: userData.name,\r\n        role: userData.role,\r\n        is_active: userData.is_active,\r\n        phone: userData.phone,\r\n        address: userData.address,\r\n      })\r\n      .select()\r\n      .single();\r\n\r\n    if (profileError) {\r\n      // Si falla la creaci\xF3n del perfil, eliminar el usuario de Auth\r\n      await supabaseAdmin.auth.admin.deleteUser(authUser.user.id);\r\n      \r\n      logger.log(LogLevel.ERROR, LogCategory.API, 'Error creando perfil de usuario', { profileError });\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'Error creando perfil de usuario',\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 500 });\r\n    }\r\n\r\n    // Registrar m\xE9tricas\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/users',\r\n      method: 'POST',\r\n      statusCode: 201,\r\n      responseTime: Date.now() - startTime,\r\n      userId: authResult.userId\r\n    });\r\n\r\n    // Log de auditor\xEDa\r\n    logger.log(LogLevel.INFO, LogCategory.ADMIN, 'Usuario creado', {\r\n      adminUserId: authResult.userId,\r\n      newUserId: newUser.id,\r\n      email: newUser.email,\r\n      role: newUser.role\r\n    });\r\n\r\n    const userWithStats: UserWithStats = {\r\n      ...newUser,\r\n      orders_count: 0,\r\n      total_spent: 0\r\n    };\r\n\r\n    const response: ApiResponse<UserWithStats> = {\r\n      data: userWithStats,\r\n      success: true,\r\n      message: 'Usuario creado exitosamente'\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response, { status: 201 });\r\n    addRateLimitHeaders(nextResponse, rateLimitResult);\r\n    return nextResponse;\r\n\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en POST /api/admin/users', { error });\r\n\r\n    // Registrar m\xE9tricas de error\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/users',\r\n      method: 'POST',\r\n      statusCode: 500,\r\n      responseTime: Date.now() - startTime,\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    });\r\n\r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: 'Error interno del servidor',\r\n    };\r\n\r\n    return NextResponse.json(errorResponse, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "UserFiltersSchema", "z", "object", "page", "coerce", "number", "min", "default", "limit", "max", "search", "string", "optional", "nullable", "status", "enum", "role", "date_from", "date_to", "sort_by", "sort_order", "CreateUserSchema", "email", "name", "password", "is_active", "boolean", "phone", "address", "street_name", "street_number", "zip_code", "city_name", "state_name", "UpdateUserSchema", "validateAdminAuth", "process", "env", "NODE_ENV", "BYPASS_AUTH", "user", "id", "userId", "session", "auth", "error", "isAdmin", "logger", "log", "LogLevel", "ERROR", "LogCategory", "AUTH", "getUsersWithStats", "filters", "pagination", "query", "supabaseAdmin", "from", "select", "count", "or", "eq", "gte", "lte", "order", "ascending", "to", "range", "data", "users", "usersWithStats", "length", "userIds", "map", "orderStats", "in", "statsMap", "reduce", "acc", "user_id", "orders_count", "total_spent", "total", "stats", "push", "API", "request", "startTime", "Date", "now", "rateLimitResult", "checkRateLimit", "windowMs", "RATE_LIMIT_CONFIGS", "admin", "maxRequests", "message", "success", "response", "NextResponse", "json", "addRateLimitHeaders", "authResult", "errorResponse", "searchParams", "URL", "url", "validationResult", "safeParse", "get", "totalPages", "Math", "ceil", "responseData", "hasNext", "hasPrev", "undefined", "sort", "by", "metricsCollector", "recordApiCall", "endpoint", "method", "statusCode", "responseTime", "INFO", "ADMIN", "nextResponse", "Error", "body", "userData", "existingUser", "single", "authUser", "authError", "createUser", "email_confirm", "user_metadata", "newUser", "profileError", "insert", "deleteUser", "adminUserId", "newUserId", "userWithStats"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b50526f2a7c3abb2dde46dee02227f92c489482a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1twkem731g = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1twkem731g();
cov_1twkem731g().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1twkem731g().f[0]++;
  cov_1twkem731g().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1twkem731g().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1twkem731g().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_1twkem731g().f[1]++;
    cov_1twkem731g().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_1twkem731g().f[2]++;
    cov_1twkem731g().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_1twkem731g().f[3]++;
    cov_1twkem731g().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_1twkem731g().s[7]++, require("next/server"));
const _supabase =
/* istanbul ignore next */
(cov_1twkem731g().s[8]++, require("../../../../lib/integrations/supabase"));
const _config =
/* istanbul ignore next */
(cov_1twkem731g().s[9]++, require("../../../../lib/auth/config"));
const _zod =
/* istanbul ignore next */
(cov_1twkem731g().s[10]++, require("zod"));
const _logger =
/* istanbul ignore next */
(cov_1twkem731g().s[11]++, require("../../../../lib/enterprise/logger"));
const _ratelimiting =
/* istanbul ignore next */
(cov_1twkem731g().s[12]++, require("../../../../lib/auth/rate-limiting"));
const _ratelimiter =
/* istanbul ignore next */
(cov_1twkem731g().s[13]++, require("../../../../lib/enterprise/rate-limiter"));
const _metrics =
/* istanbul ignore next */
(cov_1twkem731g().s[14]++, require("../../../../lib/enterprise/metrics"));
const runtime =
/* istanbul ignore next */
(cov_1twkem731g().s[15]++, 'nodejs');
// ===================================
// SCHEMAS DE VALIDACIÃN
// ===================================
const UserFiltersSchema =
/* istanbul ignore next */
(cov_1twkem731g().s[16]++, _zod.z.object({
  page: _zod.z.coerce.number().min(1).default(1),
  limit: _zod.z.coerce.number().min(1).max(100).default(25),
  search: _zod.z.string().optional().nullable(),
  status: _zod.z.enum(['active', 'inactive', 'banned']).optional().nullable(),
  role: _zod.z.enum(['user', 'admin', 'moderator']).optional().nullable(),
  date_from: _zod.z.string().optional().nullable(),
  date_to: _zod.z.string().optional().nullable(),
  sort_by: _zod.z.enum(['created_at', 'email', 'name', 'last_login']).default('created_at'),
  sort_order: _zod.z.enum(['asc', 'desc']).default('desc')
}));
const CreateUserSchema =
/* istanbul ignore next */
(cov_1twkem731g().s[17]++, _zod.z.object({
  email: _zod.z.string().email('Email invÃ¡lido'),
  name: _zod.z.string().min(1, 'Nombre requerido').max(100, 'MÃ¡ximo 100 caracteres'),
  password: _zod.z.string().min(8, 'MÃ­nimo 8 caracteres').max(100, 'MÃ¡ximo 100 caracteres'),
  role: _zod.z.enum(['user', 'admin', 'moderator']).default('user'),
  is_active: _zod.z.boolean().default(true),
  phone: _zod.z.string().optional().nullable(),
  address: _zod.z.object({
    street_name: _zod.z.string().optional(),
    street_number: _zod.z.string().optional(),
    zip_code: _zod.z.string().optional(),
    city_name: _zod.z.string().optional(),
    state_name: _zod.z.string().optional()
  }).optional().nullable()
}));
const UpdateUserSchema =
/* istanbul ignore next */
(cov_1twkem731g().s[18]++, _zod.z.object({
  name: _zod.z.string().min(1).max(100).optional(),
  role: _zod.z.enum(['user', 'admin', 'moderator']).optional(),
  is_active: _zod.z.boolean().optional(),
  phone: _zod.z.string().optional().nullable(),
  address: _zod.z.object({
    street_name: _zod.z.string().optional(),
    street_number: _zod.z.string().optional(),
    zip_code: _zod.z.string().optional(),
    city_name: _zod.z.string().optional(),
    state_name: _zod.z.string().optional()
  }).optional().nullable()
}));
// ===================================
// MIDDLEWARE DE AUTENTICACIÃN ADMIN
// ===================================
async function validateAdminAuth() {
  /* istanbul ignore next */
  cov_1twkem731g().f[4]++;
  cov_1twkem731g().s[19]++;
  try {
    /* istanbul ignore next */
    cov_1twkem731g().s[20]++;
    // BYPASS TEMPORAL PARA DESARROLLO
    if (
    /* istanbul ignore next */
    (cov_1twkem731g().b[1][0]++, process.env.NODE_ENV === 'development') &&
    /* istanbul ignore next */
    (cov_1twkem731g().b[1][1]++, process.env.BYPASS_AUTH === 'true')) {
      /* istanbul ignore next */
      cov_1twkem731g().b[0][0]++;
      cov_1twkem731g().s[21]++;
      return {
        user: {
          id: 'dev-admin',
          email: 'santiago@xor.com.ar',
          name: 'Dev Admin'
        },
        userId: 'dev-admin'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1twkem731g().b[0][1]++;
    }
    const session =
    /* istanbul ignore next */
    (cov_1twkem731g().s[22]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_1twkem731g().s[23]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_1twkem731g().b[2][0]++;
      cov_1twkem731g().s[24]++;
      return {
        error: 'Usuario no autenticado',
        status: 401
      };
    } else
    /* istanbul ignore next */
    {
      cov_1twkem731g().b[2][1]++;
    }
    // Verificar si es admin
    const isAdmin =
    /* istanbul ignore next */
    (cov_1twkem731g().s[25]++, session.user.email === 'santiago@xor.com.ar');
    /* istanbul ignore next */
    cov_1twkem731g().s[26]++;
    if (!isAdmin) {
      /* istanbul ignore next */
      cov_1twkem731g().b[3][0]++;
      cov_1twkem731g().s[27]++;
      return {
        error: 'Acceso denegado - Se requieren permisos de administrador',
        status: 403
      };
    } else
    /* istanbul ignore next */
    {
      cov_1twkem731g().b[3][1]++;
    }
    cov_1twkem731g().s[28]++;
    return {
      user: session.user,
      userId: session.user.id
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1twkem731g().s[29]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.AUTH, 'Error en validaciÃ³n admin', {
      error
    });
    /* istanbul ignore next */
    cov_1twkem731g().s[30]++;
    return {
      error: 'Error de autenticaciÃ³n',
      status: 500
    };
  }
}
// ===================================
// FUNCIONES AUXILIARES
// ===================================
async function getUsersWithStats(filters, pagination) {
  /* istanbul ignore next */
  cov_1twkem731g().f[5]++;
  cov_1twkem731g().s[31]++;
  try {
    let query =
    /* istanbul ignore next */
    (cov_1twkem731g().s[32]++, _supabase.supabaseAdmin.from('user_profiles').select(`
        id,
        email,
        first_name,
        last_name,
        role_id,
        is_active,
        metadata,
        created_at,
        updated_at,
        user_roles (
          role_name,
          permissions
        )
      `, {
      count: 'exact'
    }));
    // Aplicar filtros
    /* istanbul ignore next */
    cov_1twkem731g().s[33]++;
    if (filters.search) {
      /* istanbul ignore next */
      cov_1twkem731g().b[4][0]++;
      cov_1twkem731g().s[34]++;
      query = query.or(`email.ilike.%${filters.search}%,name.ilike.%${filters.search}%`);
    } else
    /* istanbul ignore next */
    {
      cov_1twkem731g().b[4][1]++;
    }
    cov_1twkem731g().s[35]++;
    if (filters.status) {
      /* istanbul ignore next */
      cov_1twkem731g().b[5][0]++;
      cov_1twkem731g().s[36]++;
      if (filters.status === 'active') {
        /* istanbul ignore next */
        cov_1twkem731g().b[6][0]++;
        cov_1twkem731g().s[37]++;
        query = query.eq('is_active', true);
      } else {
        /* istanbul ignore next */
        cov_1twkem731g().b[6][1]++;
        cov_1twkem731g().s[38]++;
        if (filters.status === 'inactive') {
          /* istanbul ignore next */
          cov_1twkem731g().b[7][0]++;
          cov_1twkem731g().s[39]++;
          query = query.eq('is_active', false);
        } else
        /* istanbul ignore next */
        {
          cov_1twkem731g().b[7][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_1twkem731g().b[5][1]++;
    }
    cov_1twkem731g().s[40]++;
    if (filters.role) {
      /* istanbul ignore next */
      cov_1twkem731g().b[8][0]++;
      cov_1twkem731g().s[41]++;
      query = query.eq('role', filters.role);
    } else
    /* istanbul ignore next */
    {
      cov_1twkem731g().b[8][1]++;
    }
    cov_1twkem731g().s[42]++;
    if (filters.date_from) {
      /* istanbul ignore next */
      cov_1twkem731g().b[9][0]++;
      cov_1twkem731g().s[43]++;
      query = query.gte('created_at', filters.date_from);
    } else
    /* istanbul ignore next */
    {
      cov_1twkem731g().b[9][1]++;
    }
    cov_1twkem731g().s[44]++;
    if (filters.date_to) {
      /* istanbul ignore next */
      cov_1twkem731g().b[10][0]++;
      cov_1twkem731g().s[45]++;
      query = query.lte('created_at', filters.date_to);
    } else
    /* istanbul ignore next */
    {
      cov_1twkem731g().b[10][1]++;
    }
    // Aplicar ordenamiento
    cov_1twkem731g().s[46]++;
    query = query.order(pagination.sort_by, {
      ascending: pagination.sort_order === 'asc'
    });
    // Aplicar paginaciÃ³n
    const from =
    /* istanbul ignore next */
    (cov_1twkem731g().s[47]++, (pagination.page - 1) * pagination.limit);
    const to =
    /* istanbul ignore next */
    (cov_1twkem731g().s[48]++, from + pagination.limit - 1);
    /* istanbul ignore next */
    cov_1twkem731g().s[49]++;
    query = query.range(from, to);
    const {
      data: users,
      error,
      count
    } =
    /* istanbul ignore next */
    (cov_1twkem731g().s[50]++, await query);
    /* istanbul ignore next */
    cov_1twkem731g().s[51]++;
    if (error) {
      /* istanbul ignore next */
      cov_1twkem731g().b[11][0]++;
      cov_1twkem731g().s[52]++;
      throw error;
    } else
    /* istanbul ignore next */
    {
      cov_1twkem731g().b[11][1]++;
    }
    // Obtener estadÃ­sticas de Ã³rdenes para cada usuario
    const usersWithStats =
    /* istanbul ignore next */
    (cov_1twkem731g().s[53]++, []);
    /* istanbul ignore next */
    cov_1twkem731g().s[54]++;
    if (
    /* istanbul ignore next */
    (cov_1twkem731g().b[13][0]++, users) &&
    /* istanbul ignore next */
    (cov_1twkem731g().b[13][1]++, users.length > 0)) {
      /* istanbul ignore next */
      cov_1twkem731g().b[12][0]++;
      const userIds =
      /* istanbul ignore next */
      (cov_1twkem731g().s[55]++, users.map(user => {
        /* istanbul ignore next */
        cov_1twkem731g().f[6]++;
        cov_1twkem731g().s[56]++;
        return user.id;
      }));
      // Obtener estadÃ­sticas de Ã³rdenes
      const {
        data: orderStats
      } =
      /* istanbul ignore next */
      (cov_1twkem731g().s[57]++, await _supabase.supabaseAdmin.from('orders').select('user_id, total').in('user_id', userIds).eq('status', 'completed'));
      // Calcular estadÃ­sticas por usuario
      const statsMap =
      /* istanbul ignore next */
      (cov_1twkem731g().s[58]++,
      /* istanbul ignore next */
      (cov_1twkem731g().b[14][0]++, orderStats?.reduce((acc, order) => {
        /* istanbul ignore next */
        cov_1twkem731g().f[7]++;
        cov_1twkem731g().s[59]++;
        if (!acc[order.user_id]) {
          /* istanbul ignore next */
          cov_1twkem731g().b[15][0]++;
          cov_1twkem731g().s[60]++;
          acc[order.user_id] = {
            orders_count: 0,
            total_spent: 0
          };
        } else
        /* istanbul ignore next */
        {
          cov_1twkem731g().b[15][1]++;
        }
        cov_1twkem731g().s[61]++;
        acc[order.user_id].orders_count += 1;
        /* istanbul ignore next */
        cov_1twkem731g().s[62]++;
        acc[order.user_id].total_spent +=
        /* istanbul ignore next */
        (cov_1twkem731g().b[16][0]++, order.total) ||
        /* istanbul ignore next */
        (cov_1twkem731g().b[16][1]++, 0);
        /* istanbul ignore next */
        cov_1twkem731g().s[63]++;
        return acc;
      }, {})) ||
      /* istanbul ignore next */
      (cov_1twkem731g().b[14][1]++, {}));
      // Combinar datos
      /* istanbul ignore next */
      cov_1twkem731g().s[64]++;
      for (const user of users) {
        const stats =
        /* istanbul ignore next */
        (cov_1twkem731g().s[65]++,
        /* istanbul ignore next */
        (cov_1twkem731g().b[17][0]++, statsMap[user.id]) ||
        /* istanbul ignore next */
        (cov_1twkem731g().b[17][1]++, {
          orders_count: 0,
          total_spent: 0
        }));
        /* istanbul ignore next */
        cov_1twkem731g().s[66]++;
        usersWithStats.push({
          ...user,
          orders_count: stats.orders_count,
          total_spent: stats.total_spent
        });
      }
    } else
    /* istanbul ignore next */
    {
      cov_1twkem731g().b[12][1]++;
    }
    cov_1twkem731g().s[67]++;
    return {
      users: usersWithStats,
      total:
      /* istanbul ignore next */
      (cov_1twkem731g().b[18][0]++, count) ||
      /* istanbul ignore next */
      (cov_1twkem731g().b[18][1]++, 0)
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1twkem731g().s[68]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error obteniendo usuarios con estadÃ­sticas', {
      error
    });
    /* istanbul ignore next */
    cov_1twkem731g().s[69]++;
    throw error;
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_1twkem731g().f[8]++;
  const startTime =
  /* istanbul ignore next */
  (cov_1twkem731g().s[70]++, Date.now());
  /* istanbul ignore next */
  cov_1twkem731g().s[71]++;
  try {
    // Rate limiting
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_1twkem731g().s[72]++, await (0, _ratelimiting.checkRateLimit)(request, {
      windowMs: _ratelimiter.RATE_LIMIT_CONFIGS.admin.windowMs,
      maxRequests: _ratelimiter.RATE_LIMIT_CONFIGS.admin.maxRequests,
      message:
      /* istanbul ignore next */
      (cov_1twkem731g().b[19][0]++, _ratelimiter.RATE_LIMIT_CONFIGS.admin.message) ||
      /* istanbul ignore next */
      (cov_1twkem731g().b[19][1]++, 'Demasiadas solicitudes administrativas')
    }, 'admin-users'));
    /* istanbul ignore next */
    cov_1twkem731g().s[73]++;
    if (!rateLimitResult.success) {
      /* istanbul ignore next */
      cov_1twkem731g().b[20][0]++;
      const response =
      /* istanbul ignore next */
      (cov_1twkem731g().s[74]++, _server.NextResponse.json({
        error: rateLimitResult.message
      }, {
        status: 429
      }));
      /* istanbul ignore next */
      cov_1twkem731g().s[75]++;
      (0, _ratelimiter.addRateLimitHeaders)(response, rateLimitResult);
      /* istanbul ignore next */
      cov_1twkem731g().s[76]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_1twkem731g().b[20][1]++;
    }
    // Validar autenticaciÃ³n admin
    const authResult =
    /* istanbul ignore next */
    (cov_1twkem731g().s[77]++, await validateAdminAuth());
    /* istanbul ignore next */
    cov_1twkem731g().s[78]++;
    if (authResult.error) {
      /* istanbul ignore next */
      cov_1twkem731g().b[21][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_1twkem731g().s[79]++, {
        data: null,
        success: false,
        error: authResult.error
      });
      /* istanbul ignore next */
      cov_1twkem731g().s[80]++;
      return _server.NextResponse.json(errorResponse, {
        status: authResult.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_1twkem731g().b[21][1]++;
    }
    // Validar parÃ¡metros
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_1twkem731g().s[81]++, new URL(request.url));
    const validationResult =
    /* istanbul ignore next */
    (cov_1twkem731g().s[82]++, UserFiltersSchema.safeParse({
      page: searchParams.get('page'),
      limit: searchParams.get('limit'),
      search: searchParams.get('search'),
      status: searchParams.get('status'),
      role: searchParams.get('role'),
      date_from: searchParams.get('date_from'),
      date_to: searchParams.get('date_to'),
      sort_by: searchParams.get('sort_by'),
      sort_order: searchParams.get('sort_order')
    }));
    /* istanbul ignore next */
    cov_1twkem731g().s[83]++;
    if (!validationResult.success) {
      /* istanbul ignore next */
      cov_1twkem731g().b[22][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_1twkem731g().s[84]++, {
        data: null,
        success: false,
        error: 'ParÃ¡metros invÃ¡lidos'
      });
      /* istanbul ignore next */
      cov_1twkem731g().s[85]++;
      return _server.NextResponse.json(errorResponse, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1twkem731g().b[22][1]++;
    }
    const filters =
    /* istanbul ignore next */
    (cov_1twkem731g().s[86]++, validationResult.data);
    const {
      users,
      total
    } =
    /* istanbul ignore next */
    (cov_1twkem731g().s[87]++, await getUsersWithStats(filters, filters));
    const totalPages =
    /* istanbul ignore next */
    (cov_1twkem731g().s[88]++, Math.ceil(total / filters.limit));
    const responseData =
    /* istanbul ignore next */
    (cov_1twkem731g().s[89]++, {
      users,
      total,
      pagination: {
        page: filters.page,
        limit: filters.limit,
        totalPages,
        hasNext: filters.page < totalPages,
        hasPrev: filters.page > 1
      },
      filters: {
        search:
        /* istanbul ignore next */
        (cov_1twkem731g().b[23][0]++, filters.search) ||
        /* istanbul ignore next */
        (cov_1twkem731g().b[23][1]++, undefined),
        status:
        /* istanbul ignore next */
        (cov_1twkem731g().b[24][0]++, filters.status) ||
        /* istanbul ignore next */
        (cov_1twkem731g().b[24][1]++, undefined),
        role:
        /* istanbul ignore next */
        (cov_1twkem731g().b[25][0]++, filters.role) ||
        /* istanbul ignore next */
        (cov_1twkem731g().b[25][1]++, undefined),
        date_from:
        /* istanbul ignore next */
        (cov_1twkem731g().b[26][0]++, filters.date_from) ||
        /* istanbul ignore next */
        (cov_1twkem731g().b[26][1]++, undefined),
        date_to:
        /* istanbul ignore next */
        (cov_1twkem731g().b[27][0]++, filters.date_to) ||
        /* istanbul ignore next */
        (cov_1twkem731g().b[27][1]++, undefined)
      },
      sort: {
        by: filters.sort_by,
        order: filters.sort_order
      }
    });
    // Registrar mÃ©tricas
    /* istanbul ignore next */
    cov_1twkem731g().s[90]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/users',
      method: 'GET',
      statusCode: 200,
      responseTime: Date.now() - startTime,
      userId: authResult.userId
    });
    // Log de auditorÃ­a
    /* istanbul ignore next */
    cov_1twkem731g().s[91]++;
    _logger.logger.log(_logger.LogLevel.INFO, _logger.LogCategory.ADMIN, 'Lista de usuarios consultada', {
      userId: authResult.userId,
      filters,
      total
    });
    const response =
    /* istanbul ignore next */
    (cov_1twkem731g().s[92]++, {
      data: responseData,
      success: true,
      message: 'Usuarios obtenidos exitosamente'
    });
    const nextResponse =
    /* istanbul ignore next */
    (cov_1twkem731g().s[93]++, _server.NextResponse.json(response));
    /* istanbul ignore next */
    cov_1twkem731g().s[94]++;
    (0, _ratelimiter.addRateLimitHeaders)(nextResponse, rateLimitResult);
    /* istanbul ignore next */
    cov_1twkem731g().s[95]++;
    return nextResponse;
  } catch (error) {
    /* istanbul ignore next */
    cov_1twkem731g().s[96]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en GET /api/admin/users', {
      error
    });
    // Registrar mÃ©tricas de error
    /* istanbul ignore next */
    cov_1twkem731g().s[97]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/users',
      method: 'GET',
      statusCode: 500,
      responseTime: Date.now() - startTime,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1twkem731g().b[28][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1twkem731g().b[28][1]++, 'Unknown error')
    });
    const errorResponse =
    /* istanbul ignore next */
    (cov_1twkem731g().s[98]++, {
      data: null,
      success: false,
      error: 'Error interno del servidor'
    });
    /* istanbul ignore next */
    cov_1twkem731g().s[99]++;
    return _server.NextResponse.json(errorResponse, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_1twkem731g().f[9]++;
  const startTime =
  /* istanbul ignore next */
  (cov_1twkem731g().s[100]++, Date.now());
  /* istanbul ignore next */
  cov_1twkem731g().s[101]++;
  try {
    // Rate limiting
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_1twkem731g().s[102]++, await (0, _ratelimiting.checkRateLimit)(request, {
      windowMs: _ratelimiter.RATE_LIMIT_CONFIGS.admin.windowMs,
      maxRequests: _ratelimiter.RATE_LIMIT_CONFIGS.admin.maxRequests,
      message:
      /* istanbul ignore next */
      (cov_1twkem731g().b[29][0]++, _ratelimiter.RATE_LIMIT_CONFIGS.admin.message) ||
      /* istanbul ignore next */
      (cov_1twkem731g().b[29][1]++, 'Demasiadas solicitudes administrativas')
    }, 'admin-users-create'));
    /* istanbul ignore next */
    cov_1twkem731g().s[103]++;
    if (!rateLimitResult.success) {
      /* istanbul ignore next */
      cov_1twkem731g().b[30][0]++;
      const response =
      /* istanbul ignore next */
      (cov_1twkem731g().s[104]++, _server.NextResponse.json({
        error: rateLimitResult.message
      }, {
        status: 429
      }));
      /* istanbul ignore next */
      cov_1twkem731g().s[105]++;
      (0, _ratelimiter.addRateLimitHeaders)(response, rateLimitResult);
      /* istanbul ignore next */
      cov_1twkem731g().s[106]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_1twkem731g().b[30][1]++;
    }
    // Validar autenticaciÃ³n admin
    const authResult =
    /* istanbul ignore next */
    (cov_1twkem731g().s[107]++, await validateAdminAuth());
    /* istanbul ignore next */
    cov_1twkem731g().s[108]++;
    if (authResult.error) {
      /* istanbul ignore next */
      cov_1twkem731g().b[31][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_1twkem731g().s[109]++, {
        data: null,
        success: false,
        error: authResult.error
      });
      /* istanbul ignore next */
      cov_1twkem731g().s[110]++;
      return _server.NextResponse.json(errorResponse, {
        status: authResult.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_1twkem731g().b[31][1]++;
    }
    // Validar datos de entrada
    const body =
    /* istanbul ignore next */
    (cov_1twkem731g().s[111]++, await request.json());
    const validationResult =
    /* istanbul ignore next */
    (cov_1twkem731g().s[112]++, CreateUserSchema.safeParse(body));
    /* istanbul ignore next */
    cov_1twkem731g().s[113]++;
    if (!validationResult.success) {
      /* istanbul ignore next */
      cov_1twkem731g().b[32][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_1twkem731g().s[114]++, {
        data: null,
        success: false,
        error: 'Datos de usuario invÃ¡lidos'
      });
      /* istanbul ignore next */
      cov_1twkem731g().s[115]++;
      return _server.NextResponse.json(errorResponse, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1twkem731g().b[32][1]++;
    }
    const userData =
    /* istanbul ignore next */
    (cov_1twkem731g().s[116]++, validationResult.data);
    // Verificar si el email ya existe
    const {
      data: existingUser
    } =
    /* istanbul ignore next */
    (cov_1twkem731g().s[117]++, await _supabase.supabaseAdmin.from('users').select('id').eq('email', userData.email).single());
    /* istanbul ignore next */
    cov_1twkem731g().s[118]++;
    if (existingUser) {
      /* istanbul ignore next */
      cov_1twkem731g().b[33][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_1twkem731g().s[119]++, {
        data: null,
        success: false,
        error: 'El email ya estÃ¡ registrado'
      });
      /* istanbul ignore next */
      cov_1twkem731g().s[120]++;
      return _server.NextResponse.json(errorResponse, {
        status: 409
      });
    } else
    /* istanbul ignore next */
    {
      cov_1twkem731g().b[33][1]++;
    }
    // Crear usuario en Supabase Auth
    const {
      data: authUser,
      error: authError
    } =
    /* istanbul ignore next */
    (cov_1twkem731g().s[121]++, await _supabase.supabaseAdmin.auth.admin.createUser({
      email: userData.email,
      password: userData.password,
      email_confirm: true,
      user_metadata: {
        name: userData.name,
        role: userData.role
      }
    }));
    /* istanbul ignore next */
    cov_1twkem731g().s[122]++;
    if (
    /* istanbul ignore next */
    (cov_1twkem731g().b[35][0]++, authError) ||
    /* istanbul ignore next */
    (cov_1twkem731g().b[35][1]++, !authUser.user)) {
      /* istanbul ignore next */
      cov_1twkem731g().b[34][0]++;
      cov_1twkem731g().s[123]++;
      _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.AUTH, 'Error creando usuario en Auth', {
        authError
      });
      const errorResponse =
      /* istanbul ignore next */
      (cov_1twkem731g().s[124]++, {
        data: null,
        success: false,
        error: 'Error creando usuario'
      });
      /* istanbul ignore next */
      cov_1twkem731g().s[125]++;
      return _server.NextResponse.json(errorResponse, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_1twkem731g().b[34][1]++;
    }
    // Crear perfil de usuario en la tabla users
    const {
      data: newUser,
      error: profileError
    } =
    /* istanbul ignore next */
    (cov_1twkem731g().s[126]++, await _supabase.supabaseAdmin.from('users').insert({
      id: authUser.user.id,
      email: userData.email,
      name: userData.name,
      role: userData.role,
      is_active: userData.is_active,
      phone: userData.phone,
      address: userData.address
    }).select().single());
    /* istanbul ignore next */
    cov_1twkem731g().s[127]++;
    if (profileError) {
      /* istanbul ignore next */
      cov_1twkem731g().b[36][0]++;
      cov_1twkem731g().s[128]++;
      // Si falla la creaciÃ³n del perfil, eliminar el usuario de Auth
      await _supabase.supabaseAdmin.auth.admin.deleteUser(authUser.user.id);
      /* istanbul ignore next */
      cov_1twkem731g().s[129]++;
      _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error creando perfil de usuario', {
        profileError
      });
      const errorResponse =
      /* istanbul ignore next */
      (cov_1twkem731g().s[130]++, {
        data: null,
        success: false,
        error: 'Error creando perfil de usuario'
      });
      /* istanbul ignore next */
      cov_1twkem731g().s[131]++;
      return _server.NextResponse.json(errorResponse, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_1twkem731g().b[36][1]++;
    }
    // Registrar mÃ©tricas
    cov_1twkem731g().s[132]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/users',
      method: 'POST',
      statusCode: 201,
      responseTime: Date.now() - startTime,
      userId: authResult.userId
    });
    // Log de auditorÃ­a
    /* istanbul ignore next */
    cov_1twkem731g().s[133]++;
    _logger.logger.log(_logger.LogLevel.INFO, _logger.LogCategory.ADMIN, 'Usuario creado', {
      adminUserId: authResult.userId,
      newUserId: newUser.id,
      email: newUser.email,
      role: newUser.role
    });
    const userWithStats =
    /* istanbul ignore next */
    (cov_1twkem731g().s[134]++, {
      ...newUser,
      orders_count: 0,
      total_spent: 0
    });
    const response =
    /* istanbul ignore next */
    (cov_1twkem731g().s[135]++, {
      data: userWithStats,
      success: true,
      message: 'Usuario creado exitosamente'
    });
    const nextResponse =
    /* istanbul ignore next */
    (cov_1twkem731g().s[136]++, _server.NextResponse.json(response, {
      status: 201
    }));
    /* istanbul ignore next */
    cov_1twkem731g().s[137]++;
    (0, _ratelimiter.addRateLimitHeaders)(nextResponse, rateLimitResult);
    /* istanbul ignore next */
    cov_1twkem731g().s[138]++;
    return nextResponse;
  } catch (error) {
    /* istanbul ignore next */
    cov_1twkem731g().s[139]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en POST /api/admin/users', {
      error
    });
    // Registrar mÃ©tricas de error
    /* istanbul ignore next */
    cov_1twkem731g().s[140]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/users',
      method: 'POST',
      statusCode: 500,
      responseTime: Date.now() - startTime,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1twkem731g().b[37][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1twkem731g().b[37][1]++, 'Unknown error')
    });
    const errorResponse =
    /* istanbul ignore next */
    (cov_1twkem731g().s[141]++, {
      data: null,
      success: false,
      error: 'Error interno del servidor'
    });
    /* istanbul ignore next */
    cov_1twkem731g().s[142]++;
    return _server.NextResponse.json(errorResponse, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,