{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\driver\\NavigationInstructions.tsx"],"sourcesContent":["/**\n * Componente de instrucciones de navegación turn-by-turn\n * Muestra direcciones paso a paso de forma clara y legible\n */\n\n'use client'\n\nimport React, { useState, useEffect } from 'react'\nimport { Card, CardContent } from '@/components/ui/card'\nimport {\n  ArrowUp,\n  ArrowDown,\n  ArrowLeft,\n  ArrowRight,\n  RotateCcw,\n  Navigation,\n  MapPin,\n  Clock,\n} from 'lucide-react'\nimport { cn } from '@/lib/core/utils'\n\ninterface NavigationStep {\n  instruction: string\n  distance: string\n  duration: string\n  maneuver: string\n  coordinates: { lat: number; lng: number }\n}\n\ninterface NavigationInstructionsProps {\n  instructions: NavigationStep[]\n  currentLocation: { lat: number; lng: number } | null\n}\n\nexport function NavigationInstructions({\n  instructions,\n  currentLocation,\n}: NavigationInstructionsProps) {\n  const [currentStepIndex, setCurrentStepIndex] = useState(0)\n  const [nextStepIndex, setNextStepIndex] = useState(1)\n\n  const currentStep = instructions[currentStepIndex]\n  const nextStep = instructions[nextStepIndex]\n\n  // Calcular distancia entre dos puntos\n  const calculateDistance = (\n    point1: { lat: number; lng: number },\n    point2: { lat: number; lng: number }\n  ) => {\n    const R = 6371 // Radio de la Tierra en km\n    const dLat = ((point2.lat - point1.lat) * Math.PI) / 180\n    const dLon = ((point2.lng - point1.lng) * Math.PI) / 180\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos((point1.lat * Math.PI) / 180) *\n        Math.cos((point2.lat * Math.PI) / 180) *\n        Math.sin(dLon / 2) *\n        Math.sin(dLon / 2)\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n    return R * c * 1000 // Convertir a metros\n  }\n\n  // Actualizar paso actual basado en la ubicación\n  useEffect(() => {\n    if (!currentLocation || !instructions.length) return\n\n    // Encontrar el paso más cercano a la ubicación actual\n    let closestStepIndex = 0\n    let minDistance = Infinity\n\n    instructions.forEach((step, index) => {\n      const distance = calculateDistance(currentLocation, step.coordinates)\n      if (distance < minDistance) {\n        minDistance = distance\n        closestStepIndex = index\n      }\n    })\n\n    // Solo actualizar si estamos cerca del siguiente paso (menos de 50 metros)\n    if (minDistance < 50 && closestStepIndex !== currentStepIndex) {\n      setCurrentStepIndex(closestStepIndex)\n      setNextStepIndex(Math.min(closestStepIndex + 1, instructions.length - 1))\n    }\n  }, [currentLocation, instructions])\n\n  const getManeuverIcon = (maneuver: string) => {\n    const iconClass = 'h-8 w-8 text-white'\n\n    switch (maneuver.toLowerCase()) {\n      case 'turn-left':\n      case 'turn-slight-left':\n        return <ArrowLeft className={iconClass} />\n      case 'turn-right':\n      case 'turn-slight-right':\n        return <ArrowRight className={iconClass} />\n      case 'straight':\n      case 'continue':\n        return <ArrowUp className={iconClass} />\n      case 'u-turn':\n        return <RotateCcw className={iconClass} />\n      case 'roundabout':\n        return <RotateCcw className={iconClass} />\n      default:\n        return <Navigation className={iconClass} />\n    }\n  }\n\n  const getManeuverColor = (maneuver: string) => {\n    switch (maneuver.toLowerCase()) {\n      case 'turn-left':\n      case 'turn-slight-left':\n        return 'bg-blue-600'\n      case 'turn-right':\n      case 'turn-slight-right':\n        return 'bg-green-600'\n      case 'straight':\n      case 'continue':\n        return 'bg-gray-600'\n      case 'u-turn':\n        return 'bg-red-600'\n      case 'roundabout':\n        return 'bg-purple-600'\n      default:\n        return 'bg-blue-600'\n    }\n  }\n\n  if (!currentStep) {\n    return null\n  }\n\n  return (\n    <div className='space-y-2'>\n      {/* Instrucción principal */}\n      <Card className='bg-white shadow-lg'>\n        <CardContent className='p-4'>\n          <div className='flex items-center space-x-4'>\n            <div\n              className={cn(\n                'rounded-full p-3 flex-shrink-0',\n                getManeuverColor(currentStep.maneuver)\n              )}\n            >\n              {getManeuverIcon(currentStep.maneuver)}\n            </div>\n\n            <div className='flex-1 min-w-0'>\n              <p className='text-lg font-semibold text-gray-900 leading-tight'>\n                {currentStep.instruction}\n              </p>\n              <div className='flex items-center space-x-4 mt-2 text-sm text-gray-600'>\n                <div className='flex items-center space-x-1'>\n                  <MapPin className='h-4 w-4' />\n                  <span>{currentStep.distance}</span>\n                </div>\n                <div className='flex items-center space-x-1'>\n                  <Clock className='h-4 w-4' />\n                  <span>{currentStep.duration}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Próxima instrucción */}\n      {nextStep && nextStepIndex < instructions.length && (\n        <Card className='bg-gray-50 border-gray-200'>\n          <CardContent className='p-3'>\n            <div className='flex items-center space-x-3'>\n              <div\n                className={cn(\n                  'rounded-full p-2 flex-shrink-0',\n                  getManeuverColor(nextStep.maneuver),\n                  'opacity-70'\n                )}\n              >\n                {getManeuverIcon(nextStep.maneuver)}\n              </div>\n\n              <div className='flex-1 min-w-0'>\n                <p className='text-sm font-medium text-gray-700 leading-tight'>\n                  Luego: {nextStep.instruction}\n                </p>\n                <p className='text-xs text-gray-500 mt-1'>{nextStep.distance}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Progreso de la ruta */}\n      <Card className='bg-blue-50 border-blue-200'>\n        <CardContent className='p-3'>\n          <div className='flex items-center justify-between text-sm'>\n            <span className='text-blue-800 font-medium'>\n              Paso {currentStepIndex + 1} de {instructions.length}\n            </span>\n            <div className='flex-1 mx-3'>\n              <div className='bg-blue-200 rounded-full h-2'>\n                <div\n                  className='bg-blue-600 h-2 rounded-full transition-all duration-300'\n                  style={{\n                    width: `${((currentStepIndex + 1) / instructions.length) * 100}%`,\n                  }}\n                />\n              </div>\n            </div>\n            <span className='text-blue-600 text-xs'>\n              {Math.round(((currentStepIndex + 1) / instructions.length) * 100)}%\n            </span>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":["NavigationInstructions","instructions","currentLocation","currentStepIndex","setCurrentStepIndex","useState","nextStepIndex","setNextStepIndex","currentStep","nextStep","calculateDistance","point1","point2","R","dLat","lat","Math","PI","dLon","lng","a","sin","cos","c","atan2","sqrt","useEffect","length","closestStepIndex","minDistance","Infinity","forEach","step","index","distance","coordinates","min","getManeuverIcon","maneuver","iconClass","toLowerCase","ArrowLeft","className","ArrowRight","ArrowUp","RotateCcw","Navigation","getManeuverColor","div","Card","CardContent","cn","p","instruction","MapPin","span","Clock","duration","style","width","round"],"mappings":"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"}