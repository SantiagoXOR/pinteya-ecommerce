{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\Header\\__tests__\\unit\\Header.unit.test.tsx"],"sourcesContent":["/**\r\n * Header Unit Test Ultra-Simplificado\r\n * Sin dependencias complejas - Solo tests unitarios básicos\r\n */\r\n\r\nimport React from 'react'\r\nimport { render, screen, fireEvent } from '@testing-library/react'\r\n\r\n// Mock completo del Header para evitar dependencias\r\njest.mock('../../index', () => {\r\n  return function MockHeaderUnit() {\r\n    const [isMenuOpen, setIsMenuOpen] = React.useState(false)\r\n    const [searchValue, setSearchValue] = React.useState('')\r\n    const [cartCount, setCartCount] = React.useState(0)\r\n    \r\n    return (\r\n      <header role=\"banner\" data-testid=\"header-unit\">\r\n        <div data-testid=\"header-container\" className=\"header-container\">\r\n          <div data-testid=\"logo-unit\" className=\"logo-section\">\r\n            <img alt=\"Pinteya Logo\" src=\"/logo.svg\" width=\"120\" height=\"40\" />\r\n          </div>\r\n          \r\n          <nav data-testid=\"navigation-unit\" className=\"navigation\">\r\n            <button \r\n              data-testid=\"menu-toggle\"\r\n              onClick={() => setIsMenuOpen(!isMenuOpen)}\r\n              aria-expanded={isMenuOpen}\r\n              aria-label=\"Abrir menú de navegación\"\r\n            >\r\n              ☰\r\n            </button>\r\n            \r\n            {isMenuOpen && (\r\n              <ul data-testid=\"menu-items\" className=\"menu-items\">\r\n                <li><a href=\"/productos\">Productos</a></li>\r\n                <li><a href=\"/ofertas\">Ofertas</a></li>\r\n                <li><a href=\"/contacto\">Contacto</a></li>\r\n              </ul>\r\n            )}\r\n          </nav>\r\n          \r\n          <div data-testid=\"search-unit\" className=\"search-section\">\r\n            <input \r\n              role=\"searchbox\"\r\n              aria-label=\"Buscar productos\"\r\n              value={searchValue}\r\n              onChange={(e) => setSearchValue(e.target.value)}\r\n              placeholder=\"Buscar productos...\"\r\n              className=\"search-input\"\r\n            />\r\n            <button \r\n              data-testid=\"search-button\"\r\n              onClick={() => console.log('Buscar:', searchValue)}\r\n              className=\"search-button\"\r\n            >\r\n              🔍\r\n            </button>\r\n          </div>\r\n          \r\n          <div data-testid=\"actions-unit\" className=\"actions-section\">\r\n            <button \r\n              data-testid=\"cart-unit\"\r\n              onClick={() => setCartCount(prev => prev + 1)}\r\n              aria-label={`Carrito con ${cartCount} productos`}\r\n              className=\"cart-button\"\r\n            >\r\n              🛒 <span data-testid=\"cart-count\">{cartCount}</span>\r\n            </button>\r\n            \r\n            <button \r\n              data-testid=\"auth-unit\"\r\n              className=\"auth-button\"\r\n              aria-label=\"Iniciar sesión\"\r\n            >\r\n              👤 Iniciar Sesión\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n})\r\n\r\nimport Header from '../../index'\r\n\r\ndescribe('Header Unit - Ultra-Simplified Tests', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks()\r\n  })\r\n\r\n  describe('Renderizado de Componentes', () => {\r\n    it('debe renderizar header principal', () => {\r\n      render(<Header />)\r\n      \r\n      const header = screen.getByRole('banner')\r\n      expect(header).toBeInTheDocument()\r\n      expect(header).toHaveAttribute('data-testid', 'header-unit')\r\n    })\r\n\r\n    it('debe renderizar contenedor principal', () => {\r\n      render(<Header />)\r\n      \r\n      const container = screen.getByTestId('header-container')\r\n      expect(container).toBeInTheDocument()\r\n      expect(container).toHaveClass('header-container')\r\n    })\r\n\r\n    it('debe renderizar logo', () => {\r\n      render(<Header />)\r\n      \r\n      const logo = screen.getByTestId('logo-unit')\r\n      expect(logo).toBeInTheDocument()\r\n      \r\n      const logoImg = screen.getByAltText('Pinteya Logo')\r\n      expect(logoImg).toBeInTheDocument()\r\n      expect(logoImg).toHaveAttribute('src', '/logo.svg')\r\n    })\r\n\r\n    it('debe renderizar navegación', () => {\r\n      render(<Header />)\r\n      \r\n      const navigation = screen.getByTestId('navigation-unit')\r\n      expect(navigation).toBeInTheDocument()\r\n      \r\n      const menuToggle = screen.getByTestId('menu-toggle')\r\n      expect(menuToggle).toBeInTheDocument()\r\n    })\r\n\r\n    it('debe renderizar búsqueda', () => {\r\n      render(<Header />)\r\n      \r\n      const searchSection = screen.getByTestId('search-unit')\r\n      expect(searchSection).toBeInTheDocument()\r\n      \r\n      const searchInput = screen.getByRole('searchbox')\r\n      expect(searchInput).toBeInTheDocument()\r\n      \r\n      const searchButton = screen.getByTestId('search-button')\r\n      expect(searchButton).toBeInTheDocument()\r\n    })\r\n\r\n    it('debe renderizar acciones', () => {\r\n      render(<Header />)\r\n      \r\n      const actionsSection = screen.getByTestId('actions-unit')\r\n      expect(actionsSection).toBeInTheDocument()\r\n      \r\n      const cartButton = screen.getByTestId('cart-unit')\r\n      expect(cartButton).toBeInTheDocument()\r\n      \r\n      const authButton = screen.getByTestId('auth-unit')\r\n      expect(authButton).toBeInTheDocument()\r\n    })\r\n  })\r\n\r\n  describe('Funcionalidad de Navegación', () => {\r\n    it('debe abrir menú al hacer click', () => {\r\n      render(<Header />)\r\n      \r\n      const menuToggle = screen.getByTestId('menu-toggle')\r\n      \r\n      // Menu cerrado inicialmente\r\n      expect(screen.queryByTestId('menu-items')).not.toBeInTheDocument()\r\n      expect(menuToggle).toHaveAttribute('aria-expanded', 'false')\r\n      \r\n      // Abrir menu\r\n      fireEvent.click(menuToggle)\r\n      expect(screen.getByTestId('menu-items')).toBeInTheDocument()\r\n      expect(menuToggle).toHaveAttribute('aria-expanded', 'true')\r\n    })\r\n\r\n    it('debe cerrar menú al hacer click nuevamente', () => {\r\n      render(<Header />)\r\n      \r\n      const menuToggle = screen.getByTestId('menu-toggle')\r\n      \r\n      // Abrir menu\r\n      fireEvent.click(menuToggle)\r\n      expect(screen.getByTestId('menu-items')).toBeInTheDocument()\r\n      \r\n      // Cerrar menu\r\n      fireEvent.click(menuToggle)\r\n      expect(screen.queryByTestId('menu-items')).not.toBeInTheDocument()\r\n      expect(menuToggle).toHaveAttribute('aria-expanded', 'false')\r\n    })\r\n\r\n    it('debe mostrar elementos de navegación', () => {\r\n      render(<Header />)\r\n      \r\n      const menuToggle = screen.getByTestId('menu-toggle')\r\n      fireEvent.click(menuToggle)\r\n      \r\n      const menuItems = screen.getByTestId('menu-items')\r\n      expect(menuItems).toBeInTheDocument()\r\n      \r\n      expect(screen.getByText('Productos')).toBeInTheDocument()\r\n      expect(screen.getByText('Ofertas')).toBeInTheDocument()\r\n      expect(screen.getByText('Contacto')).toBeInTheDocument()\r\n    })\r\n  })\r\n\r\n  describe('Funcionalidad de Búsqueda', () => {\r\n    it('debe permitir escribir en campo de búsqueda', () => {\r\n      render(<Header />)\r\n      \r\n      const searchInput = screen.getByRole('searchbox') as HTMLInputElement\r\n      \r\n      fireEvent.change(searchInput, { target: { value: 'pintura látex' } })\r\n      expect(searchInput.value).toBe('pintura látex')\r\n    })\r\n\r\n    it('debe tener placeholder apropiado', () => {\r\n      render(<Header />)\r\n      \r\n      const searchInput = screen.getByRole('searchbox')\r\n      expect(searchInput).toHaveAttribute('placeholder', 'Buscar productos...')\r\n    })\r\n\r\n    it('debe tener botón de búsqueda funcional', () => {\r\n      render(<Header />)\r\n      \r\n      const searchButton = screen.getByTestId('search-button')\r\n      expect(searchButton).toBeInTheDocument()\r\n      expect(searchButton).toHaveTextContent('🔍')\r\n    })\r\n\r\n    it('debe limpiar búsqueda', () => {\r\n      render(<Header />)\r\n      \r\n      const searchInput = screen.getByRole('searchbox') as HTMLInputElement\r\n      \r\n      fireEvent.change(searchInput, { target: { value: 'test' } })\r\n      expect(searchInput.value).toBe('test')\r\n      \r\n      fireEvent.change(searchInput, { target: { value: '' } })\r\n      expect(searchInput.value).toBe('')\r\n    })\r\n  })\r\n\r\n  describe('Funcionalidad del Carrito', () => {\r\n    it('debe mostrar contador inicial', () => {\r\n      render(<Header />)\r\n      \r\n      const cartCount = screen.getByTestId('cart-count')\r\n      expect(cartCount).toHaveTextContent('0')\r\n    })\r\n\r\n    it('debe incrementar contador al hacer click', () => {\r\n      render(<Header />)\r\n      \r\n      const cartButton = screen.getByTestId('cart-unit')\r\n      const cartCount = screen.getByTestId('cart-count')\r\n      \r\n      expect(cartCount).toHaveTextContent('0')\r\n      \r\n      fireEvent.click(cartButton)\r\n      expect(cartCount).toHaveTextContent('1')\r\n      \r\n      fireEvent.click(cartButton)\r\n      expect(cartCount).toHaveTextContent('2')\r\n    })\r\n\r\n    it('debe actualizar aria-label del carrito', () => {\r\n      render(<Header />)\r\n      \r\n      const cartButton = screen.getByTestId('cart-unit')\r\n      \r\n      expect(cartButton).toHaveAttribute('aria-label', 'Carrito con 0 productos')\r\n      \r\n      fireEvent.click(cartButton)\r\n      expect(cartButton).toHaveAttribute('aria-label', 'Carrito con 1 productos')\r\n    })\r\n  })\r\n\r\n  describe('Funcionalidad de Autenticación', () => {\r\n    it('debe mostrar botón de login', () => {\r\n      render(<Header />)\r\n      \r\n      const authButton = screen.getByTestId('auth-unit')\r\n      expect(authButton).toBeInTheDocument()\r\n      expect(authButton).toHaveTextContent('👤 Iniciar Sesión')\r\n    })\r\n\r\n    it('debe tener aria-label apropiado', () => {\r\n      render(<Header />)\r\n      \r\n      const authButton = screen.getByTestId('auth-unit')\r\n      expect(authButton).toHaveAttribute('aria-label', 'Iniciar sesión')\r\n    })\r\n\r\n    it('debe ser clickeable', () => {\r\n      render(<Header />)\r\n      \r\n      const authButton = screen.getByTestId('auth-unit')\r\n      fireEvent.click(authButton)\r\n      \r\n      // No debe lanzar errores\r\n      expect(authButton).toBeInTheDocument()\r\n    })\r\n  })\r\n\r\n  describe('Clases CSS', () => {\r\n    it('debe tener clases apropiadas en elementos', () => {\r\n      render(<Header />)\r\n      \r\n      const container = screen.getByTestId('header-container')\r\n      expect(container).toHaveClass('header-container')\r\n      \r\n      const logo = screen.getByTestId('logo-unit')\r\n      expect(logo).toHaveClass('logo-section')\r\n      \r\n      const navigation = screen.getByTestId('navigation-unit')\r\n      expect(navigation).toHaveClass('navigation')\r\n      \r\n      const search = screen.getByTestId('search-unit')\r\n      expect(search).toHaveClass('search-section')\r\n      \r\n      const actions = screen.getByTestId('actions-unit')\r\n      expect(actions).toHaveClass('actions-section')\r\n    })\r\n\r\n    it('debe tener clases en elementos interactivos', () => {\r\n      render(<Header />)\r\n      \r\n      const searchInput = screen.getByRole('searchbox')\r\n      expect(searchInput).toHaveClass('search-input')\r\n      \r\n      const searchButton = screen.getByTestId('search-button')\r\n      expect(searchButton).toHaveClass('search-button')\r\n      \r\n      const cartButton = screen.getByTestId('cart-unit')\r\n      expect(cartButton).toHaveClass('cart-button')\r\n      \r\n      const authButton = screen.getByTestId('auth-unit')\r\n      expect(authButton).toHaveClass('auth-button')\r\n    })\r\n  })\r\n\r\n  describe('Accesibilidad', () => {\r\n    it('debe tener estructura semántica correcta', () => {\r\n      render(<Header />)\r\n      \r\n      expect(screen.getByRole('banner')).toBeInTheDocument()\r\n      expect(screen.getByRole('searchbox')).toBeInTheDocument()\r\n      \r\n      const buttons = screen.getAllByRole('button')\r\n      expect(buttons.length).toBeGreaterThanOrEqual(4)\r\n    })\r\n\r\n    it('debe tener labels descriptivos', () => {\r\n      render(<Header />)\r\n      \r\n      const searchInput = screen.getByRole('searchbox')\r\n      expect(searchInput).toHaveAttribute('aria-label', 'Buscar productos')\r\n      \r\n      const menuToggle = screen.getByTestId('menu-toggle')\r\n      expect(menuToggle).toHaveAttribute('aria-label', 'Abrir menú de navegación')\r\n      \r\n      const authButton = screen.getByTestId('auth-unit')\r\n      expect(authButton).toHaveAttribute('aria-label', 'Iniciar sesión')\r\n    })\r\n\r\n    it('debe ser navegable por teclado', () => {\r\n      render(<Header />)\r\n      \r\n      const searchInput = screen.getByRole('searchbox')\r\n      const menuToggle = screen.getByTestId('menu-toggle')\r\n      const cartButton = screen.getByTestId('cart-unit')\r\n      \r\n      searchInput.focus()\r\n      expect(document.activeElement).toBe(searchInput)\r\n      \r\n      menuToggle.focus()\r\n      expect(document.activeElement).toBe(menuToggle)\r\n      \r\n      cartButton.focus()\r\n      expect(document.activeElement).toBe(cartButton)\r\n    })\r\n  })\r\n\r\n  describe('Interacciones Múltiples', () => {\r\n    it('debe manejar múltiples acciones simultáneamente', () => {\r\n      render(<Header />)\r\n      \r\n      const searchInput = screen.getByRole('searchbox') as HTMLInputElement\r\n      const menuToggle = screen.getByTestId('menu-toggle')\r\n      const cartButton = screen.getByTestId('cart-unit')\r\n      \r\n      // Escribir en búsqueda\r\n      fireEvent.change(searchInput, { target: { value: 'test' } })\r\n      expect(searchInput.value).toBe('test')\r\n      \r\n      // Abrir menú\r\n      fireEvent.click(menuToggle)\r\n      expect(screen.getByTestId('menu-items')).toBeInTheDocument()\r\n      \r\n      // Agregar al carrito\r\n      fireEvent.click(cartButton)\r\n      expect(screen.getByTestId('cart-count')).toHaveTextContent('1')\r\n      \r\n      // Todo debe seguir funcionando\r\n      expect(searchInput.value).toBe('test')\r\n      expect(screen.getByTestId('menu-items')).toBeInTheDocument()\r\n      expect(screen.getByTestId('cart-count')).toHaveTextContent('1')\r\n    })\r\n  })\r\n\r\n  describe('Performance', () => {\r\n    it('debe renderizar rápidamente', () => {\r\n      const startTime = performance.now()\r\n      \r\n      render(<Header />)\r\n      \r\n      const endTime = performance.now()\r\n      const renderTime = endTime - startTime\r\n      \r\n      expect(renderTime).toBeLessThan(100)\r\n      expect(screen.getByRole('banner')).toBeInTheDocument()\r\n    })\r\n  })\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["jest","mock","MockHeaderUnit","isMenuOpen","setIsMenuOpen","React","useState","searchValue","setSearchValue","cartCount","setCartCount","header","role","data-testid","div","className","img","alt","src","width","height","nav","button","onClick","aria-expanded","aria-label","ul","li","a","href","input","value","onChange","e","target","placeholder","console","log","prev","span","describe","beforeEach","clearAllMocks","it","render","Header","screen","getByRole","expect","toBeInTheDocument","toHaveAttribute","container","getByTestId","toHaveClass","logo","logoImg","getByAltText","navigation","menuToggle","searchSection","searchInput","searchButton","actionsSection","cartButton","authButton","queryByTestId","not","fireEvent","click","menuItems","getByText","change","toBe","toHaveTextContent","search","actions","buttons","getAllByRole","length","toBeGreaterThanOrEqual","focus","document","activeElement","startTime","performance","now","endTime","renderTime","toBeLessThan"],"mappings":"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"}