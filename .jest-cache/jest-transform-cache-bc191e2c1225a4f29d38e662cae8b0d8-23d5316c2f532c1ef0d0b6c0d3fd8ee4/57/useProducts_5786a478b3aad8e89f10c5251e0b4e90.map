{"version":3,"names":["useProducts","options","cov_uvfls65f5","b","f","initialFilters","autoFetch","s","abortControllerRef","_react","useRef","lastRequestRef","process","env","NODE_ENV","state","setState","useState","products","loading","error","pagination","page","limit","total","totalPages","filters","setFilters","fetchProducts","useCallback","newFilters","filtersToUse","prev","response","_products","getProducts","success","adaptedProducts","_productAdapter","adaptApiProductsToLegacy","data","message","updateFilters","updatedFilters","changePage","changeLimit","changeSorting","sortBy","sortOrder","searchProducts","searchTerm","search","filterByCategory","category","filterByPriceRange","priceMin","priceMax","clearFilters","clearedFilters","refresh","useEffect","current","abort","helpers","useMemo","hasProducts","length","isEmpty","hasError","hasNextPage","hasPrevPage"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useProducts.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - HOOK PARA PRODUCTOS\r\n// ===================================\r\n\r\nimport { useState, useEffect, useCallback, useMemo, useRef } from 'react';\r\nimport { Product } from '@/types/product';\r\nimport { ProductFilters, PaginatedResponse, ProductWithCategory } from '@/types/api';\r\nimport { getProducts } from '@/lib/api/products';\r\nimport { adaptApiProductsToLegacy, ExtendedProduct } from '@/lib/adapters/productAdapter';\r\n\r\ninterface UseProductsState {\r\n  products: ExtendedProduct[];\r\n  loading: boolean;\r\n  error: string | null;\r\n  pagination: {\r\n    page: number;\r\n    limit: number;\r\n    total: number;\r\n    totalPages: number;\r\n  };\r\n}\r\n\r\ninterface UseProductsOptions {\r\n  initialFilters?: ProductFilters;\r\n  autoFetch?: boolean;\r\n}\r\n\r\nexport function useProducts(options: UseProductsOptions = {}) {\r\n  const { initialFilters = {}, autoFetch = true } = options;\r\n\r\n  // Referencias para evitar re-renders innecesarios\r\n  const abortControllerRef = useRef<AbortController | null>(null);\r\n  const lastRequestRef = useRef<string>('');\r\n\r\n  // DEBUG: Log básico para verificar que el hook se ejecuta (solo en desarrollo)\r\n  if (process.env.NODE_ENV === 'development') {\r\n  }\r\n\r\n  const [state, setState] = useState<UseProductsState>({\r\n    products: [],\r\n    loading: false,\r\n    error: null,\r\n    pagination: {\r\n      page: 1,\r\n      limit: 12,\r\n      total: 0,\r\n      totalPages: 0,\r\n    },\r\n  });\r\n\r\n  const [filters, setFilters] = useState<ProductFilters>(initialFilters);\r\n\r\n  /**\r\n   * Obtiene productos desde la API con optimizaciones de performance\r\n   */\r\n  const fetchProducts = useCallback(async (newFilters?: ProductFilters) => {\r\n    const filtersToUse = newFilters || filters;\r\n\r\n    try {\r\n      setState(prev => ({ ...prev, loading: true, error: null }));\r\n\r\n      const response = await getProducts(filtersToUse);\r\n\r\n      if (response.success) {\r\n        const adaptedProducts = adaptApiProductsToLegacy(response.data);\r\n\r\n        setState(prev => ({\r\n          ...prev,\r\n          products: adaptedProducts,\r\n          loading: false,\r\n          pagination: response.pagination,\r\n        }));\r\n      } else {\r\n        setState(prev => ({\r\n          ...prev,\r\n          loading: false,\r\n          error: response.error || 'Error obteniendo productos',\r\n        }));\r\n      }\r\n    } catch (error: any) {\r\n      setState(prev => ({\r\n        ...prev,\r\n        loading: false,\r\n        error: error.message || 'Error inesperado',\r\n      }));\r\n    }\r\n  }, [filters]);\r\n\r\n  /**\r\n   * Actualiza los filtros y obtiene productos\r\n   */\r\n  const updateFilters = useCallback((newFilters: Partial<ProductFilters>) => {\r\n    const updatedFilters = { ...filters, ...newFilters };\r\n    setFilters(updatedFilters);\r\n    fetchProducts(updatedFilters);\r\n  }, [filters, fetchProducts]);\r\n\r\n  /**\r\n   * Cambia la página\r\n   */\r\n  const changePage = useCallback((page: number) => {\r\n    updateFilters({ page });\r\n  }, [updateFilters]);\r\n\r\n  /**\r\n   * Cambia el límite de productos por página\r\n   */\r\n  const changeLimit = useCallback((limit: number) => {\r\n    updateFilters({ limit, page: 1 });\r\n  }, [updateFilters]);\r\n\r\n  /**\r\n   * Cambia el ordenamiento\r\n   */\r\n  const changeSorting = useCallback((sortBy: 'price' | 'name' | 'created_at', sortOrder: 'asc' | 'desc') => {\r\n    updateFilters({ sortBy, sortOrder, page: 1 });\r\n  }, [updateFilters]);\r\n\r\n  /**\r\n   * Busca productos por término\r\n   */\r\n  const searchProducts = useCallback((searchTerm: string) => {\r\n    updateFilters({ search: searchTerm, page: 1 });\r\n  }, [updateFilters]);\r\n\r\n  /**\r\n   * Filtra por categoría\r\n   */\r\n  const filterByCategory = useCallback((category: string) => {\r\n    updateFilters({ category, page: 1 });\r\n  }, [updateFilters]);\r\n\r\n  /**\r\n   * Filtra por rango de precios\r\n   */\r\n  const filterByPriceRange = useCallback((priceMin?: number, priceMax?: number) => {\r\n    updateFilters({ priceMin, priceMax, page: 1 });\r\n  }, [updateFilters]);\r\n\r\n  /**\r\n   * Limpia todos los filtros\r\n   */\r\n  const clearFilters = useCallback(() => {\r\n    const clearedFilters: ProductFilters = {\r\n      page: 1,\r\n      limit: filters.limit || 12,\r\n      sortBy: 'created_at',\r\n      sortOrder: 'desc',\r\n    };\r\n    setFilters(clearedFilters);\r\n    fetchProducts(clearedFilters);\r\n  }, [filters.limit, fetchProducts]);\r\n\r\n  /**\r\n   * Refresca los productos\r\n   */\r\n  const refresh = useCallback(() => {\r\n    fetchProducts();\r\n  }, [fetchProducts]);\r\n\r\n  // Auto-fetch al montar el componente\r\n  useEffect(() => {\r\n    if (autoFetch) {\r\n      fetchProducts();\r\n    }\r\n  }, [autoFetch]); // Removido fetchProducts de las dependencias para evitar bucles\r\n\r\n  // Cleanup effect para cancelar requests pendientes\r\n  useEffect(() => {\r\n    return () => {\r\n      if (abortControllerRef.current) {\r\n        abortControllerRef.current.abort();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Memoized helpers para optimizar renders\r\n  const helpers = useMemo(() => ({\r\n    hasProducts: state.products.length > 0,\r\n    isEmpty: !state.loading && state.products.length === 0,\r\n    hasError: !!state.error,\r\n    hasNextPage: state.pagination.page < state.pagination.totalPages,\r\n    hasPrevPage: state.pagination.page > 1,\r\n  }), [state.products.length, state.loading, state.error, state.pagination.page, state.pagination.totalPages]);\r\n\r\n  return {\r\n    // Estado\r\n    products: state.products,\r\n    loading: state.loading,\r\n    error: state.error,\r\n    pagination: state.pagination,\r\n    filters,\r\n\r\n    // Acciones\r\n    fetchProducts,\r\n    updateFilters,\r\n    changePage,\r\n    changeLimit,\r\n    changeSorting,\r\n    searchProducts,\r\n    filterByCategory,\r\n    filterByPriceRange,\r\n    clearFilters,\r\n    refresh,\r\n\r\n    // Helpers memoizados\r\n    ...helpers,\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}