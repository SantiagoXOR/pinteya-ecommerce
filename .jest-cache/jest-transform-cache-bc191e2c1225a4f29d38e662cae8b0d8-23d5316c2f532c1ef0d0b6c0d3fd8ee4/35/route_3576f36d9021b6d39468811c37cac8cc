e83ab2be38254fa48d76e343e392b370
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_1aag7gutoy() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\preferences\\notifications\\route.ts";
  var hash = "88cbaf877d463a50ce6b4ccce7fcd7756892f643";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\preferences\\notifications\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 21
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 57
        }
      },
      "8": {
        start: {
          line: 22,
          column: 18
        },
        end: {
          line: 22,
          column: 69
        }
      },
      "9": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 23,
          column: 77
        }
      },
      "10": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 24
        }
      },
      "11": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 98,
          column: 5
        }
      },
      "12": {
        start: {
          line: 27,
          column: 24
        },
        end: {
          line: 27,
          column: 49
        }
      },
      "13": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "14": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 33,
          column: 15
        }
      },
      "15": {
        start: {
          line: 35,
          column: 23
        },
        end: {
          line: 35,
          column: 38
        }
      },
      "16": {
        start: {
          line: 36,
          column: 21
        },
        end: {
          line: 36,
          column: 41
        }
      },
      "17": {
        start: {
          line: 37,
          column: 34
        },
        end: {
          line: 37,
          column: 38
        }
      },
      "18": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "19": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 43,
          column: 15
        }
      },
      "20": {
        start: {
          line: 46,
          column: 58
        },
        end: {
          line: 46,
          column: 165
        }
      },
      "21": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "22": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 81
        }
      },
      "23": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 53,
          column: 15
        }
      },
      "24": {
        start: {
          line: 56,
          column: 30
        },
        end: {
          line: 56,
          column: 61
        }
      },
      "25": {
        start: {
          line: 57,
          column: 35
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "26": {
        start: {
          line: 65,
          column: 46
        },
        end: {
          line: 69,
          column: 28
        }
      },
      "27": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "28": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 88
        }
      },
      "29": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 76,
          column: 15
        }
      },
      "30": {
        start: {
          line: 79,
          column: 28
        },
        end: {
          line: 79,
          column: 72
        }
      },
      "31": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 85,
          column: 24
        }
      },
      "32": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 90,
          column: 11
        }
      },
      "33": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 84
        }
      },
      "34": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 97,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 17
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "PATCH",
        decl: {
          start: {
            line: 25,
            column: 15
          },
          end: {
            line: 25,
            column: 20
          }
        },
        loc: {
          start: {
            line: 25,
            column: 30
          },
          end: {
            line: 99,
            column: 1
          }
        },
        line: 25
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "3": {
        loc: {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 22
          }
        }, {
          start: {
            line: 47,
            column: 26
          },
          end: {
            line: 47,
            column: 56
          }
        }],
        line: 47
      },
      "4": {
        loc: {
          start: {
            line: 56,
            column: 30
          },
          end: {
            line: 56,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 30
          },
          end: {
            line: 56,
            column: 55
          }
        }, {
          start: {
            line: 56,
            column: 59
          },
          end: {
            line: 56,
            column: 61
          }
        }],
        line: 56
      },
      "5": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\preferences\\notifications\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API DE PREFERENCIAS DE NOTIFICACIONES\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { logPreferenceActivity, getRequestInfo } from '@/lib/activity/activityLogger';\r\n\r\n// PATCH - Actualizar preferencias de notificaciones\r\nexport async function PATCH(request: NextRequest) {\r\n  try {\r\n    const session = await auth();\r\n    if (!session?.user?.id) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n    const body = await request.json();\r\n    const { notifications } = body;\r\n\r\n    if (!notifications) {\r\n      return NextResponse.json(\r\n        { error: 'Configuraci\xF3n de notificaciones requerida' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Obtener preferencias actuales\r\n    const { data: currentPrefs, error: fetchError } = await supabaseAdmin\r\n      .from('user_preferences')\r\n      .select('preferences')\r\n      .eq('user_id', userId)\r\n      .single();\r\n\r\n    if (fetchError && fetchError.code !== 'PGRST116') {\r\n      console.error('Error al obtener preferencias actuales:', fetchError);\r\n      return NextResponse.json(\r\n        { error: 'Error al obtener preferencias actuales' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Combinar con preferencias existentes\r\n    const existingPrefs = currentPrefs?.preferences || {};\r\n    const updatedPreferences = {\r\n      ...existingPrefs,\r\n      notifications: {\r\n        ...existingPrefs.notifications,\r\n        ...notifications,\r\n      },\r\n    };\r\n\r\n    // Actualizar en la base de datos\r\n    const { data: updatedPrefs, error } = await supabaseAdmin\r\n      .from('user_preferences')\r\n      .upsert({\r\n        user_id: userId,\r\n        preferences: updatedPreferences,\r\n        updated_at: new Date().toISOString(),\r\n      })\r\n      .select()\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('Error al actualizar preferencias de notificaciones:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al actualizar preferencias de notificaciones' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Registrar actividad\r\n    const requestInfo = getRequestInfo(request);\r\n    await logPreferenceActivity(\r\n      userId,\r\n      'update_notifications',\r\n      {\r\n        updated_settings: Object.keys(notifications),\r\n        email_notifications: notifications.emailNotifications,\r\n        push_notifications: notifications.pushNotifications,\r\n        security_alerts: notifications.securityAlerts,\r\n      },\r\n      requestInfo\r\n    );\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      notifications: updatedPrefs.preferences.notifications,\r\n      message: 'Preferencias de notificaciones actualizadas correctamente',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en PATCH /api/user/preferences/notifications:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["PATCH", "runtime", "request", "session", "auth", "user", "id", "NextResponse", "json", "error", "status", "userId", "body", "notifications", "data", "currentPrefs", "fetchError", "supabaseAdmin", "from", "select", "eq", "single", "code", "console", "existingPrefs", "preferences", "updatedPreferences", "updatedPrefs", "upsert", "user_id", "updated_at", "Date", "toISOString", "requestInfo", "getRequestInfo", "logPreferenceActivity", "updated_settings", "Object", "keys", "email_notifications", "emailNotifications", "push_notifications", "pushNotifications", "security_alerts", "securityAlerts", "success", "message"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QAafA;eAAAA;;QAZTC;eAAAA;;;wBAM6B;wBACrB;0BACS;gCACwB;AAT/C,MAAMA,UAAU;AAYhB,eAAeD,MAAME,OAAoB;IAC9C,IAAI;QACF,MAAMC,UAAU,MAAMC,IAAAA,YAAI;QAC1B,IAAI,CAACD,SAASE,MAAMC,IAAI;YACtB,OAAOC,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAO;YAAgB,GACzB;gBAAEC,QAAQ;YAAI;QAElB;QAEA,MAAMC,SAASR,QAAQE,IAAI,CAACC,EAAE;QAC9B,MAAMM,OAAO,MAAMV,QAAQM,IAAI;QAC/B,MAAM,EAAEK,aAAa,EAAE,GAAGD;QAE1B,IAAI,CAACC,eAAe;YAClB,OAAON,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAO;YAA4C,GACrD;gBAAEC,QAAQ;YAAI;QAElB;QAEA,gCAAgC;QAChC,MAAM,EAAEI,MAAMC,YAAY,EAAEN,OAAOO,UAAU,EAAE,GAAG,MAAMC,uBAAa,CAClEC,IAAI,CAAC,oBACLC,MAAM,CAAC,eACPC,EAAE,CAAC,WAAWT,QACdU,MAAM;QAET,IAAIL,cAAcA,WAAWM,IAAI,KAAK,YAAY;YAChDC,QAAQd,KAAK,CAAC,2CAA2CO;YACzD,OAAOT,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAO;YAAyC,GAClD;gBAAEC,QAAQ;YAAI;QAElB;QAEA,uCAAuC;QACvC,MAAMc,gBAAgBT,cAAcU,eAAe,CAAC;QACpD,MAAMC,qBAAqB;YACzB,GAAGF,aAAa;YAChBX,eAAe;gBACb,GAAGW,cAAcX,aAAa;gBAC9B,GAAGA,aAAa;YAClB;QACF;QAEA,iCAAiC;QACjC,MAAM,EAAEC,MAAMa,YAAY,EAAElB,KAAK,EAAE,GAAG,MAAMQ,uBAAa,CACtDC,IAAI,CAAC,oBACLU,MAAM,CAAC;YACNC,SAASlB;YACTc,aAAaC;YACbI,YAAY,IAAIC,OAAOC,WAAW;QACpC,GACCb,MAAM,GACNE,MAAM;QAET,IAAIZ,OAAO;YACTc,QAAQd,KAAK,CAAC,uDAAuDA;YACrE,OAAOF,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAO;YAAqD,GAC9D;gBAAEC,QAAQ;YAAI;QAElB;QAEA,sBAAsB;QACtB,MAAMuB,cAAcC,IAAAA,8BAAc,EAAChC;QACnC,MAAMiC,IAAAA,qCAAqB,EACzBxB,QACA,wBACA;YACEyB,kBAAkBC,OAAOC,IAAI,CAACzB;YAC9B0B,qBAAqB1B,cAAc2B,kBAAkB;YACrDC,oBAAoB5B,cAAc6B,iBAAiB;YACnDC,iBAAiB9B,cAAc+B,cAAc;QAC/C,GACAX;QAGF,OAAO1B,oBAAY,CAACC,IAAI,CAAC;YACvBqC,SAAS;YACThC,eAAec,aAAaF,WAAW,CAACZ,aAAa;YACrDiC,SAAS;QACX;IACF,EAAE,OAAOrC,OAAO;QACdc,QAAQd,KAAK,CAAC,uDAAuDA;QACrE,OAAOF,oBAAY,CAACC,IAAI,CACtB;YAAEC,OAAO;QAA6B,GACtC;YAAEC,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "88cbaf877d463a50ce6b4ccce7fcd7756892f643"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1aag7gutoy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1aag7gutoy();
cov_1aag7gutoy().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1aag7gutoy().f[0]++;
  cov_1aag7gutoy().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1aag7gutoy().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1aag7gutoy().s[3]++;
_export(exports, {
  get PATCH() {
    /* istanbul ignore next */
    cov_1aag7gutoy().f[1]++;
    cov_1aag7gutoy().s[4]++;
    return PATCH;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_1aag7gutoy().f[2]++;
    cov_1aag7gutoy().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_1aag7gutoy().s[6]++, require("next/server"));
const _config =
/* istanbul ignore next */
(cov_1aag7gutoy().s[7]++, require("../../../../../lib/auth/config"));
const _supabase =
/* istanbul ignore next */
(cov_1aag7gutoy().s[8]++, require("../../../../../lib/integrations/supabase"));
const _activityLogger =
/* istanbul ignore next */
(cov_1aag7gutoy().s[9]++, require("../../../../../lib/activity/activityLogger"));
const runtime =
/* istanbul ignore next */
(cov_1aag7gutoy().s[10]++, 'nodejs');
async function PATCH(request) {
  /* istanbul ignore next */
  cov_1aag7gutoy().f[3]++;
  cov_1aag7gutoy().s[11]++;
  try {
    const session =
    /* istanbul ignore next */
    (cov_1aag7gutoy().s[12]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_1aag7gutoy().s[13]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_1aag7gutoy().b[0][0]++;
      cov_1aag7gutoy().s[14]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1aag7gutoy().b[0][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_1aag7gutoy().s[15]++, session.user.id);
    const body =
    /* istanbul ignore next */
    (cov_1aag7gutoy().s[16]++, await request.json());
    const {
      notifications
    } =
    /* istanbul ignore next */
    (cov_1aag7gutoy().s[17]++, body);
    /* istanbul ignore next */
    cov_1aag7gutoy().s[18]++;
    if (!notifications) {
      /* istanbul ignore next */
      cov_1aag7gutoy().b[1][0]++;
      cov_1aag7gutoy().s[19]++;
      return _server.NextResponse.json({
        error: 'ConfiguraciÃ³n de notificaciones requerida'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1aag7gutoy().b[1][1]++;
    }
    // Obtener preferencias actuales
    const {
      data: currentPrefs,
      error: fetchError
    } =
    /* istanbul ignore next */
    (cov_1aag7gutoy().s[20]++, await _supabase.supabaseAdmin.from('user_preferences').select('preferences').eq('user_id', userId).single());
    /* istanbul ignore next */
    cov_1aag7gutoy().s[21]++;
    if (
    /* istanbul ignore next */
    (cov_1aag7gutoy().b[3][0]++, fetchError) &&
    /* istanbul ignore next */
    (cov_1aag7gutoy().b[3][1]++, fetchError.code !== 'PGRST116')) {
      /* istanbul ignore next */
      cov_1aag7gutoy().b[2][0]++;
      cov_1aag7gutoy().s[22]++;
      console.error('Error al obtener preferencias actuales:', fetchError);
      /* istanbul ignore next */
      cov_1aag7gutoy().s[23]++;
      return _server.NextResponse.json({
        error: 'Error al obtener preferencias actuales'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_1aag7gutoy().b[2][1]++;
    }
    // Combinar con preferencias existentes
    const existingPrefs =
    /* istanbul ignore next */
    (cov_1aag7gutoy().s[24]++,
    /* istanbul ignore next */
    (cov_1aag7gutoy().b[4][0]++, currentPrefs?.preferences) ||
    /* istanbul ignore next */
    (cov_1aag7gutoy().b[4][1]++, {}));
    const updatedPreferences =
    /* istanbul ignore next */
    (cov_1aag7gutoy().s[25]++, {
      ...existingPrefs,
      notifications: {
        ...existingPrefs.notifications,
        ...notifications
      }
    });
    // Actualizar en la base de datos
    const {
      data: updatedPrefs,
      error
    } =
    /* istanbul ignore next */
    (cov_1aag7gutoy().s[26]++, await _supabase.supabaseAdmin.from('user_preferences').upsert({
      user_id: userId,
      preferences: updatedPreferences,
      updated_at: new Date().toISOString()
    }).select().single());
    /* istanbul ignore next */
    cov_1aag7gutoy().s[27]++;
    if (error) {
      /* istanbul ignore next */
      cov_1aag7gutoy().b[5][0]++;
      cov_1aag7gutoy().s[28]++;
      console.error('Error al actualizar preferencias de notificaciones:', error);
      /* istanbul ignore next */
      cov_1aag7gutoy().s[29]++;
      return _server.NextResponse.json({
        error: 'Error al actualizar preferencias de notificaciones'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_1aag7gutoy().b[5][1]++;
    }
    // Registrar actividad
    const requestInfo =
    /* istanbul ignore next */
    (cov_1aag7gutoy().s[30]++, (0, _activityLogger.getRequestInfo)(request));
    /* istanbul ignore next */
    cov_1aag7gutoy().s[31]++;
    await (0, _activityLogger.logPreferenceActivity)(userId, 'update_notifications', {
      updated_settings: Object.keys(notifications),
      email_notifications: notifications.emailNotifications,
      push_notifications: notifications.pushNotifications,
      security_alerts: notifications.securityAlerts
    }, requestInfo);
    /* istanbul ignore next */
    cov_1aag7gutoy().s[32]++;
    return _server.NextResponse.json({
      success: true,
      notifications: updatedPrefs.preferences.notifications,
      message: 'Preferencias de notificaciones actualizadas correctamente'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1aag7gutoy().s[33]++;
    console.error('Error en PATCH /api/user/preferences/notifications:', error);
    /* istanbul ignore next */
    cov_1aag7gutoy().s[34]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,