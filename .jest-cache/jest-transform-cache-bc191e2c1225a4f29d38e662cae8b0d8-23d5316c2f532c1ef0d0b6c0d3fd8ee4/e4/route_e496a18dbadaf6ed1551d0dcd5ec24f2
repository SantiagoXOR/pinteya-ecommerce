be12e9acf8dbfbf2ce909226695f8797
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_16ch85ahy2() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\categories\\bulk\\route.ts";
  var hash = "17c7dc2b55e19f8b9cfc4b85564d689a3194981c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\categories\\bulk\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 13
        },
        end: {
          line: 24,
          column: 27
        }
      },
      "9": {
        start: {
          line: 25,
          column: 17
        },
        end: {
          line: 25,
          column: 75
        }
      },
      "10": {
        start: {
          line: 26,
          column: 19
        },
        end: {
          line: 26,
          column: 64
        }
      },
      "11": {
        start: {
          line: 27,
          column: 21
        },
        end: {
          line: 27,
          column: 74
        }
      },
      "12": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 63
        }
      },
      "13": {
        start: {
          line: 29,
          column: 17
        },
        end: {
          line: 29,
          column: 65
        }
      },
      "14": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 24
        }
      },
      "15": {
        start: {
          line: 34,
          column: 27
        },
        end: {
          line: 39,
          column: 1
        }
      },
      "16": {
        start: {
          line: 43,
          column: 33
        },
        end: {
          line: 60,
          column: 2
        }
      },
      "17": {
        start: {
          line: 61,
          column: 33
        },
        end: {
          line: 74,
          column: 2
        }
      },
      "18": {
        start: {
          line: 75,
          column: 33
        },
        end: {
          line: 96,
          column: 2
        }
      },
      "19": {
        start: {
          line: 101,
          column: 21
        },
        end: {
          line: 101,
          column: 55
        }
      },
      "20": {
        start: {
          line: 102,
          column: 40
        },
        end: {
          line: 102,
          column: 107
        }
      },
      "21": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "22": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 73
        }
      },
      "23": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 106,
          column: 28
        }
      },
      "24": {
        start: {
          line: 109,
          column: 21
        },
        end: {
          line: 109,
          column: 44
        }
      },
      "25": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 112,
          column: 5
        }
      },
      "26": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 76
        }
      },
      "27": {
        start: {
          line: 113,
          column: 19
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "28": {
        start: {
          line: 120,
          column: 23
        },
        end: {
          line: 120,
          column: 60
        }
      },
      "29": {
        start: {
          line: 121,
          column: 21
        },
        end: {
          line: 121,
          column: 46
        }
      },
      "30": {
        start: {
          line: 121,
          column: 41
        },
        end: {
          line: 121,
          column: 45
        }
      },
      "31": {
        start: {
          line: 122,
          column: 24
        },
        end: {
          line: 122,
          column: 72
        }
      },
      "32": {
        start: {
          line: 122,
          column: 49
        },
        end: {
          line: 122,
          column: 71
        }
      },
      "33": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 130,
          column: 7
        }
      },
      "34": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 128,
          column: 11
        }
      },
      "35": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 29
        }
      },
      "36": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 133,
          column: 5
        }
      },
      "37": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 22
        }
      },
      "38": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 298,
          column: 5
        }
      },
      "39": {
        start: {
          line: 135,
          column: 25
        },
        end: {
          line: 135,
          column: 27
        }
      },
      "40": {
        start: {
          line: 136,
          column: 27
        },
        end: {
          line: 136,
          column: 31
        }
      },
      "41": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 251,
          column: 9
        }
      },
      "42": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 141,
          column: 18
        }
      },
      "43": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 22
        }
      },
      "44": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 146,
          column: 18
        }
      },
      "45": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 22
        }
      },
      "46": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 151,
          column: 18
        }
      },
      "47": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 152,
          column: 22
        }
      },
      "48": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 156,
          column: 18
        }
      },
      "49": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 157,
          column: 22
        }
      },
      "50": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 161,
          column: 18
        }
      },
      "51": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 175,
          column: 17
        }
      },
      "52": {
        start: {
          line: 164,
          column: 20
        },
        end: {
          line: 174,
          column: 21
        }
      },
      "53": {
        start: {
          line: 165,
          column: 43
        },
        end: {
          line: 165,
          column: 99
        }
      },
      "54": {
        start: {
          line: 166,
          column: 24
        },
        end: {
          line: 173,
          column: 25
        }
      },
      "55": {
        start: {
          line: 167,
          column: 28
        },
        end: {
          line: 171,
          column: 31
        }
      },
      "56": {
        start: {
          line: 169,
          column: 68
        },
        end: {
          line: 169,
          column: 87
        }
      },
      "57": {
        start: {
          line: 172,
          column: 28
        },
        end: {
          line: 172,
          column: 49
        }
      },
      "58": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 176,
          column: 22
        }
      },
      "59": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 179,
          column: 37
        }
      },
      "60": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 197,
          column: 17
        }
      },
      "61": {
        start: {
          line: 180,
          column: 28
        },
        end: {
          line: 180,
          column: 29
        }
      },
      "62": {
        start: {
          line: 181,
          column: 39
        },
        end: {
          line: 181,
          column: 50
        }
      },
      "63": {
        start: {
          line: 182,
          column: 38
        },
        end: {
          line: 182,
          column: 65
        }
      },
      "64": {
        start: {
          line: 183,
          column: 38
        },
        end: {
          line: 186,
          column: 43
        }
      },
      "65": {
        start: {
          line: 187,
          column: 20
        },
        end: {
          line: 196,
          column: 21
        }
      },
      "66": {
        start: {
          line: 188,
          column: 24
        },
        end: {
          line: 192,
          column: 27
        }
      },
      "67": {
        start: {
          line: 190,
          column: 64
        },
        end: {
          line: 190,
          column: 83
        }
      },
      "68": {
        start: {
          line: 193,
          column: 24
        },
        end: {
          line: 193,
          column: 45
        }
      },
      "69": {
        start: {
          line: 195,
          column: 24
        },
        end: {
          line: 195,
          column: 47
        }
      },
      "70": {
        start: {
          line: 198,
          column: 16
        },
        end: {
          line: 198,
          column: 22
        }
      },
      "71": {
        start: {
          line: 201,
          column: 47
        },
        end: {
          line: 201,
          column: 90
        }
      },
      "72": {
        start: {
          line: 201,
          column: 70
        },
        end: {
          line: 201,
          column: 89
        }
      },
      "73": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 211,
          column: 17
        }
      },
      "74": {
        start: {
          line: 203,
          column: 20
        },
        end: {
          line: 210,
          column: 23
        }
      },
      "75": {
        start: {
          line: 204,
          column: 24
        },
        end: {
          line: 208,
          column: 27
        }
      },
      "76": {
        start: {
          line: 209,
          column: 24
        },
        end: {
          line: 209,
          column: 45
        }
      },
      "77": {
        start: {
          line: 213,
          column: 48
        },
        end: {
          line: 213,
          column: 137
        }
      },
      "78": {
        start: {
          line: 214,
          column: 16
        },
        end: {
          line: 228,
          column: 17
        }
      },
      "79": {
        start: {
          line: 215,
          column: 38
        },
        end: {
          line: 217,
          column: 21
        }
      },
      "80": {
        start: {
          line: 216,
          column: 58
        },
        end: {
          line: 216,
          column: 69
        }
      },
      "81": {
        start: {
          line: 218,
          column: 20
        },
        end: {
          line: 227,
          column: 23
        }
      },
      "82": {
        start: {
          line: 219,
          column: 47
        },
        end: {
          line: 219,
          column: 86
        }
      },
      "83": {
        start: {
          line: 219,
          column: 68
        },
        end: {
          line: 219,
          column: 85
        }
      },
      "84": {
        start: {
          line: 220,
          column: 43
        },
        end: {
          line: 220,
          column: 101
        }
      },
      "85": {
        start: {
          line: 220,
          column: 69
        },
        end: {
          line: 220,
          column: 93
        }
      },
      "86": {
        start: {
          line: 221,
          column: 24
        },
        end: {
          line: 225,
          column: 27
        }
      },
      "87": {
        start: {
          line: 226,
          column: 24
        },
        end: {
          line: 226,
          column: 45
        }
      },
      "88": {
        start: {
          line: 230,
          column: 43
        },
        end: {
          line: 230,
          column: 112
        }
      },
      "89": {
        start: {
          line: 230,
          column: 65
        },
        end: {
          line: 230,
          column: 111
        }
      },
      "90": {
        start: {
          line: 230,
          column: 90
        },
        end: {
          line: 230,
          column: 110
        }
      },
      "91": {
        start: {
          line: 231,
          column: 16
        },
        end: {
          line: 246,
          column: 17
        }
      },
      "92": {
        start: {
          line: 232,
          column: 76
        },
        end: {
          line: 232,
          column: 156
        }
      },
      "93": {
        start: {
          line: 233,
          column: 20
        },
        end: {
          line: 245,
          column: 21
        }
      },
      "94": {
        start: {
          line: 234,
          column: 24
        },
        end: {
          line: 241,
          column: 27
        }
      },
      "95": {
        start: {
          line: 235,
          column: 28
        },
        end: {
          line: 239,
          column: 31
        }
      },
      "96": {
        start: {
          line: 237,
          column: 68
        },
        end: {
          line: 237,
          column: 79
        }
      },
      "97": {
        start: {
          line: 240,
          column: 28
        },
        end: {
          line: 240,
          column: 49
        }
      },
      "98": {
        start: {
          line: 243,
          column: 24
        },
        end: {
          line: 243,
          column: 78
        }
      },
      "99": {
        start: {
          line: 244,
          column: 24
        },
        end: {
          line: 244,
          column: 78
        }
      },
      "100": {
        start: {
          line: 247,
          column: 16
        },
        end: {
          line: 247,
          column: 37
        }
      },
      "101": {
        start: {
          line: 248,
          column: 16
        },
        end: {
          line: 248,
          column: 22
        }
      },
      "102": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 250,
          column: 70
        }
      },
      "103": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 274,
          column: 9
        }
      },
      "104": {
        start: {
          line: 254,
          column: 32
        },
        end: {
          line: 254,
          column: 101
        }
      },
      "105": {
        start: {
          line: 254,
          column: 54
        },
        end: {
          line: 254,
          column: 100
        }
      },
      "106": {
        start: {
          line: 254,
          column: 79
        },
        end: {
          line: 254,
          column: 99
        }
      },
      "107": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 273,
          column: 13
        }
      },
      "108": {
        start: {
          line: 256,
          column: 72
        },
        end: {
          line: 259,
          column: 49
        }
      },
      "109": {
        start: {
          line: 260,
          column: 16
        },
        end: {
          line: 272,
          column: 17
        }
      },
      "110": {
        start: {
          line: 261,
          column: 20
        },
        end: {
          line: 268,
          column: 23
        }
      },
      "111": {
        start: {
          line: 262,
          column: 24
        },
        end: {
          line: 266,
          column: 27
        }
      },
      "112": {
        start: {
          line: 264,
          column: 64
        },
        end: {
          line: 264,
          column: 75
        }
      },
      "113": {
        start: {
          line: 267,
          column: 24
        },
        end: {
          line: 267,
          column: 45
        }
      },
      "114": {
        start: {
          line: 270,
          column: 20
        },
        end: {
          line: 270,
          column: 74
        }
      },
      "115": {
        start: {
          line: 271,
          column: 20
        },
        end: {
          line: 271,
          column: 74
        }
      },
      "116": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 285,
          column: 9
        }
      },
      "117": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 284,
          column: 15
        }
      },
      "118": {
        start: {
          line: 277,
          column: 82
        },
        end: {
          line: 277,
          column: 86
        }
      },
      "119": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 297,
          column: 11
        }
      },
      "120": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 296,
          column: 13
        }
      },
      "121": {
        start: {
          line: 289,
          column: 41
        },
        end: {
          line: 289,
          column: 61
        }
      },
      "122": {
        start: {
          line: 290,
          column: 16
        },
        end: {
          line: 294,
          column: 19
        }
      },
      "123": {
        start: {
          line: 292,
          column: 56
        },
        end: {
          line: 292,
          column: 67
        }
      },
      "124": {
        start: {
          line: 295,
          column: 16
        },
        end: {
          line: 295,
          column: 37
        }
      },
      "125": {
        start: {
          line: 299,
          column: 4
        },
        end: {
          line: 299,
          column: 18
        }
      },
      "126": {
        start: {
          line: 302,
          column: 21
        },
        end: {
          line: 302,
          column: 44
        }
      },
      "127": {
        start: {
          line: 303,
          column: 4
        },
        end: {
          line: 305,
          column: 5
        }
      },
      "128": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 304,
          column: 76
        }
      },
      "129": {
        start: {
          line: 306,
          column: 16
        },
        end: {
          line: 323,
          column: 6
        }
      },
      "130": {
        start: {
          line: 325,
          column: 4
        },
        end: {
          line: 327,
          column: 5
        }
      },
      "131": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 326,
          column: 57
        }
      },
      "132": {
        start: {
          line: 328,
          column: 4
        },
        end: {
          line: 330,
          column: 5
        }
      },
      "133": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 61
        }
      },
      "134": {
        start: {
          line: 331,
          column: 4
        },
        end: {
          line: 337,
          column: 5
        }
      },
      "135": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 336,
          column: 9
        }
      },
      "136": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 333,
          column: 48
        }
      },
      "137": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 335,
          column: 61
        }
      },
      "138": {
        start: {
          line: 338,
          column: 4
        },
        end: {
          line: 340,
          column: 5
        }
      },
      "139": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 339,
          column: 97
        }
      },
      "140": {
        start: {
          line: 341,
          column: 40
        },
        end: {
          line: 343,
          column: 6
        }
      },
      "141": {
        start: {
          line: 344,
          column: 4
        },
        end: {
          line: 346,
          column: 5
        }
      },
      "142": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 345,
          column: 73
        }
      },
      "143": {
        start: {
          line: 348,
          column: 26
        },
        end: {
          line: 377,
          column: 12
        }
      },
      "144": {
        start: {
          line: 349,
          column: 26
        },
        end: {
          line: 365,
          column: 9
        }
      },
      "145": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 375,
          column: 9
        }
      },
      "146": {
        start: {
          line: 368,
          column: 29
        },
        end: {
          line: 368,
          column: 31
        }
      },
      "147": {
        start: {
          line: 369,
          column: 12
        },
        end: {
          line: 373,
          column: 15
        }
      },
      "148": {
        start: {
          line: 370,
          column: 16
        },
        end: {
          line: 372,
          column: 17
        }
      },
      "149": {
        start: {
          line: 371,
          column: 20
        },
        end: {
          line: 371,
          column: 55
        }
      },
      "150": {
        start: {
          line: 374,
          column: 12
        },
        end: {
          line: 374,
          column: 28
        }
      },
      "151": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 376,
          column: 25
        }
      },
      "152": {
        start: {
          line: 378,
          column: 4
        },
        end: {
          line: 383,
          column: 6
        }
      },
      "153": {
        start: {
          line: 386,
          column: 21
        },
        end: {
          line: 386,
          column: 44
        }
      },
      "154": {
        start: {
          line: 387,
          column: 4
        },
        end: {
          line: 389,
          column: 5
        }
      },
      "155": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 388,
          column: 76
        }
      },
      "156": {
        start: {
          line: 390,
          column: 19
        },
        end: {
          line: 395,
          column: 5
        }
      },
      "157": {
        start: {
          line: 397,
          column: 41
        },
        end: {
          line: 397,
          column: 99
        }
      },
      "158": {
        start: {
          line: 398,
          column: 26
        },
        end: {
          line: 398,
          column: 77
        }
      },
      "159": {
        start: {
          line: 398,
          column: 63
        },
        end: {
          line: 398,
          column: 69
        }
      },
      "160": {
        start: {
          line: 399,
          column: 26
        },
        end: {
          line: 399,
          column: 91
        }
      },
      "161": {
        start: {
          line: 399,
          column: 63
        },
        end: {
          line: 399,
          column: 83
        }
      },
      "162": {
        start: {
          line: 401,
          column: 4
        },
        end: {
          line: 487,
          column: 5
        }
      },
      "163": {
        start: {
          line: 401,
          column: 16
        },
        end: {
          line: 401,
          column: 17
        }
      },
      "164": {
        start: {
          line: 402,
          column: 29
        },
        end: {
          line: 402,
          column: 42
        }
      },
      "165": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 486,
          column: 9
        }
      },
      "166": {
        start: {
          line: 405,
          column: 12
        },
        end: {
          line: 407,
          column: 13
        }
      },
      "167": {
        start: {
          line: 406,
          column: 16
        },
        end: {
          line: 406,
          column: 120
        }
      },
      "168": {
        start: {
          line: 409,
          column: 36
        },
        end: {
          line: 409,
          column: 72
        }
      },
      "169": {
        start: {
          line: 410,
          column: 36
        },
        end: {
          line: 410,
          column: 86
        }
      },
      "170": {
        start: {
          line: 411,
          column: 12
        },
        end: {
          line: 418,
          column: 13
        }
      },
      "171": {
        start: {
          line: 412,
          column: 16
        },
        end: {
          line: 415,
          column: 19
        }
      },
      "172": {
        start: {
          line: 416,
          column: 16
        },
        end: {
          line: 416,
          column: 37
        }
      },
      "173": {
        start: {
          line: 417,
          column: 16
        },
        end: {
          line: 417,
          column: 25
        }
      },
      "174": {
        start: {
          line: 420,
          column: 27
        },
        end: {
          line: 420,
          column: 31
        }
      },
      "175": {
        start: {
          line: 421,
          column: 12
        },
        end: {
          line: 433,
          column: 13
        }
      },
      "176": {
        start: {
          line: 422,
          column: 39
        },
        end: {
          line: 422,
          column: 105
        }
      },
      "177": {
        start: {
          line: 422,
          column: 69
        },
        end: {
          line: 422,
          column: 104
        }
      },
      "178": {
        start: {
          line: 423,
          column: 16
        },
        end: {
          line: 432,
          column: 17
        }
      },
      "179": {
        start: {
          line: 424,
          column: 20
        },
        end: {
          line: 424,
          column: 49
        }
      },
      "180": {
        start: {
          line: 426,
          column: 20
        },
        end: {
          line: 429,
          column: 23
        }
      },
      "181": {
        start: {
          line: 430,
          column: 20
        },
        end: {
          line: 430,
          column: 41
        }
      },
      "182": {
        start: {
          line: 431,
          column: 20
        },
        end: {
          line: 431,
          column: 29
        }
      },
      "183": {
        start: {
          line: 434,
          column: 31
        },
        end: {
          line: 447,
          column: 13
        }
      },
      "184": {
        start: {
          line: 448,
          column: 12
        },
        end: {
          line: 479,
          column: 13
        }
      },
      "185": {
        start: {
          line: 450,
          column: 41
        },
        end: {
          line: 450,
          column: 100
        }
      },
      "186": {
        start: {
          line: 450,
          column: 71
        },
        end: {
          line: 450,
          column: 99
        }
      },
      "187": {
        start: {
          line: 451,
          column: 16
        },
        end: {
          line: 463,
          column: 17
        }
      },
      "188": {
        start: {
          line: 452,
          column: 61
        },
        end: {
          line: 452,
          column: 161
        }
      },
      "189": {
        start: {
          line: 453,
          column: 20
        },
        end: {
          line: 462,
          column: 21
        }
      },
      "190": {
        start: {
          line: 454,
          column: 24
        },
        end: {
          line: 457,
          column: 27
        }
      },
      "191": {
        start: {
          line: 458,
          column: 24
        },
        end: {
          line: 458,
          column: 45
        }
      },
      "192": {
        start: {
          line: 460,
          column: 24
        },
        end: {
          line: 460,
          column: 74
        }
      },
      "193": {
        start: {
          line: 461,
          column: 24
        },
        end: {
          line: 461,
          column: 47
        }
      },
      "194": {
        start: {
          line: 466,
          column: 53
        },
        end: {
          line: 466,
          column: 123
        }
      },
      "195": {
        start: {
          line: 467,
          column: 16
        },
        end: {
          line: 478,
          column: 17
        }
      },
      "196": {
        start: {
          line: 468,
          column: 20
        },
        end: {
          line: 471,
          column: 23
        }
      },
      "197": {
        start: {
          line: 472,
          column: 20
        },
        end: {
          line: 472,
          column: 41
        }
      },
      "198": {
        start: {
          line: 474,
          column: 20
        },
        end: {
          line: 474,
          column: 66
        }
      },
      "199": {
        start: {
          line: 475,
          column: 20
        },
        end: {
          line: 475,
          column: 43
        }
      },
      "200": {
        start: {
          line: 476,
          column: 20
        },
        end: {
          line: 476,
          column: 56
        }
      },
      "201": {
        start: {
          line: 477,
          column: 20
        },
        end: {
          line: 477,
          column: 70
        }
      },
      "202": {
        start: {
          line: 481,
          column: 12
        },
        end: {
          line: 484,
          column: 15
        }
      },
      "203": {
        start: {
          line: 485,
          column: 12
        },
        end: {
          line: 485,
          column: 33
        }
      },
      "204": {
        start: {
          line: 489,
          column: 4
        },
        end: {
          line: 498,
          column: 5
        }
      },
      "205": {
        start: {
          line: 490,
          column: 8
        },
        end: {
          line: 497,
          column: 11
        }
      },
      "206": {
        start: {
          line: 490,
          column: 80
        },
        end: {
          line: 490,
          column: 84
        }
      },
      "207": {
        start: {
          line: 499,
          column: 4
        },
        end: {
          line: 499,
          column: 18
        }
      },
      "208": {
        start: {
          line: 502,
          column: 21
        },
        end: {
          line: 502,
          column: 44
        }
      },
      "209": {
        start: {
          line: 503,
          column: 4
        },
        end: {
          line: 505,
          column: 5
        }
      },
      "210": {
        start: {
          line: 504,
          column: 8
        },
        end: {
          line: 504,
          column: 21
        }
      },
      "211": {
        start: {
          line: 506,
          column: 4
        },
        end: {
          line: 508,
          column: 5
        }
      },
      "212": {
        start: {
          line: 507,
          column: 8
        },
        end: {
          line: 507,
          column: 20
        }
      },
      "213": {
        start: {
          line: 509,
          column: 26
        },
        end: {
          line: 509,
          column: 34
        }
      },
      "214": {
        start: {
          line: 510,
          column: 20
        },
        end: {
          line: 510,
          column: 29
        }
      },
      "215": {
        start: {
          line: 511,
          column: 4
        },
        end: {
          line: 518,
          column: 5
        }
      },
      "216": {
        start: {
          line: 512,
          column: 8
        },
        end: {
          line: 512,
          column: 37
        }
      },
      "217": {
        start: {
          line: 513,
          column: 8
        },
        end: {
          line: 515,
          column: 9
        }
      },
      "218": {
        start: {
          line: 514,
          column: 12
        },
        end: {
          line: 514,
          column: 24
        }
      },
      "219": {
        start: {
          line: 516,
          column: 33
        },
        end: {
          line: 516,
          column: 121
        }
      },
      "220": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 517,
          column: 44
        }
      },
      "221": {
        start: {
          line: 519,
          column: 4
        },
        end: {
          line: 519,
          column: 17
        }
      },
      "222": {
        start: {
          line: 522,
          column: 4
        },
        end: {
          line: 545,
          column: 5
        }
      },
      "223": {
        start: {
          line: 523,
          column: 25
        },
        end: {
          line: 523,
          column: 48
        }
      },
      "224": {
        start: {
          line: 524,
          column: 8
        },
        end: {
          line: 526,
          column: 9
        }
      },
      "225": {
        start: {
          line: 525,
          column: 12
        },
        end: {
          line: 525,
          column: 19
        }
      },
      "226": {
        start: {
          line: 527,
          column: 29
        },
        end: {
          line: 537,
          column: 15
        }
      },
      "227": {
        start: {
          line: 527,
          column: 60
        },
        end: {
          line: 537,
          column: 13
        }
      },
      "228": {
        start: {
          line: 538,
          column: 8
        },
        end: {
          line: 538,
          column: 63
        }
      },
      "229": {
        start: {
          line: 540,
          column: 8
        },
        end: {
          line: 544,
          column: 11
        }
      },
      "230": {
        start: {
          line: 548,
          column: 22
        },
        end: {
          line: 548,
          column: 32
        }
      },
      "231": {
        start: {
          line: 549,
          column: 4
        },
        end: {
          line: 639,
          column: 5
        }
      },
      "232": {
        start: {
          line: 551,
          column: 32
        },
        end: {
          line: 551,
          column: 137
        }
      },
      "233": {
        start: {
          line: 552,
          column: 8
        },
        end: {
          line: 560,
          column: 9
        }
      },
      "234": {
        start: {
          line: 553,
          column: 29
        },
        end: {
          line: 557,
          column: 14
        }
      },
      "235": {
        start: {
          line: 559,
          column: 12
        },
        end: {
          line: 559,
          column: 28
        }
      },
      "236": {
        start: {
          line: 562,
          column: 27
        },
        end: {
          line: 564,
          column: 10
        }
      },
      "237": {
        start: {
          line: 565,
          column: 8
        },
        end: {
          line: 574,
          column: 9
        }
      },
      "238": {
        start: {
          line: 566,
          column: 12
        },
        end: {
          line: 573,
          column: 15
        }
      },
      "239": {
        start: {
          line: 575,
          column: 20
        },
        end: {
          line: 575,
          column: 40
        }
      },
      "240": {
        start: {
          line: 576,
          column: 23
        },
        end: {
          line: 576,
          column: 62
        }
      },
      "241": {
        start: {
          line: 577,
          column: 23
        },
        end: {
          line: 577,
          column: 65
        }
      },
      "242": {
        start: {
          line: 579,
          column: 24
        },
        end: {
          line: 579,
          column: 26
        }
      },
      "243": {
        start: {
          line: 580,
          column: 8
        },
        end: {
          line: 582,
          column: 9
        }
      },
      "244": {
        start: {
          line: 581,
          column: 12
        },
        end: {
          line: 581,
          column: 77
        }
      },
      "245": {
        start: {
          line: 583,
          column: 8
        },
        end: {
          line: 585,
          column: 9
        }
      },
      "246": {
        start: {
          line: 584,
          column: 12
        },
        end: {
          line: 584,
          column: 81
        }
      },
      "247": {
        start: {
          line: 586,
          column: 8
        },
        end: {
          line: 588,
          column: 9
        }
      },
      "248": {
        start: {
          line: 587,
          column: 12
        },
        end: {
          line: 587,
          column: 66
        }
      },
      "249": {
        start: {
          line: 589,
          column: 8
        },
        end: {
          line: 591,
          column: 9
        }
      },
      "250": {
        start: {
          line: 590,
          column: 12
        },
        end: {
          line: 590,
          column: 60
        }
      },
      "251": {
        start: {
          line: 593,
          column: 29
        },
        end: {
          line: 597,
          column: 10
        }
      },
      "252": {
        start: {
          line: 599,
          column: 29
        },
        end: {
          line: 599,
          column: 115
        }
      },
      "253": {
        start: {
          line: 601,
          column: 8
        },
        end: {
          line: 607,
          column: 11
        }
      },
      "254": {
        start: {
          line: 608,
          column: 25
        },
        end: {
          line: 615,
          column: 9
        }
      },
      "255": {
        start: {
          line: 616,
          column: 29
        },
        end: {
          line: 616,
          column: 64
        }
      },
      "256": {
        start: {
          line: 618,
          column: 8
        },
        end: {
          line: 618,
          column: 28
        }
      },
      "257": {
        start: {
          line: 620,
          column: 8
        },
        end: {
          line: 622,
          column: 11
        }
      },
      "258": {
        start: {
          line: 624,
          column: 8
        },
        end: {
          line: 630,
          column: 11
        }
      },
      "259": {
        start: {
          line: 631,
          column: 30
        },
        end: {
          line: 635,
          column: 9
        }
      },
      "260": {
        start: {
          line: 636,
          column: 8
        },
        end: {
          line: 638,
          column: 11
        }
      },
      "261": {
        start: {
          line: 642,
          column: 22
        },
        end: {
          line: 642,
          column: 32
        }
      },
      "262": {
        start: {
          line: 643,
          column: 4
        },
        end: {
          line: 731,
          column: 5
        }
      },
      "263": {
        start: {
          line: 645,
          column: 32
        },
        end: {
          line: 649,
          column: 46
        }
      },
      "264": {
        start: {
          line: 650,
          column: 8
        },
        end: {
          line: 658,
          column: 9
        }
      },
      "265": {
        start: {
          line: 651,
          column: 29
        },
        end: {
          line: 655,
          column: 14
        }
      },
      "266": {
        start: {
          line: 657,
          column: 12
        },
        end: {
          line: 657,
          column: 28
        }
      },
      "267": {
        start: {
          line: 660,
          column: 27
        },
        end: {
          line: 664,
          column: 10
        }
      },
      "268": {
        start: {
          line: 665,
          column: 8
        },
        end: {
          line: 674,
          column: 9
        }
      },
      "269": {
        start: {
          line: 666,
          column: 12
        },
        end: {
          line: 673,
          column: 15
        }
      },
      "270": {
        start: {
          line: 675,
          column: 21
        },
        end: {
          line: 675,
          column: 41
        }
      },
      "271": {
        start: {
          line: 676,
          column: 30
        },
        end: {
          line: 676,
          column: 34
        }
      },
      "272": {
        start: {
          line: 679,
          column: 8
        },
        end: {
          line: 689,
          column: 9
        }
      },
      "273": {
        start: {
          line: 681,
          column: 33
        },
        end: {
          line: 681,
          column: 69
        }
      },
      "274": {
        start: {
          line: 682,
          column: 12
        },
        end: {
          line: 682,
          column: 106
        }
      },
      "275": {
        start: {
          line: 683,
          column: 12
        },
        end: {
          line: 683,
          column: 125
        }
      },
      "276": {
        start: {
          line: 686,
          column: 31
        },
        end: {
          line: 686,
          column: 67
        }
      },
      "277": {
        start: {
          line: 687,
          column: 12
        },
        end: {
          line: 687,
          column: 127
        }
      },
      "278": {
        start: {
          line: 688,
          column: 12
        },
        end: {
          line: 688,
          column: 146
        }
      },
      "279": {
        start: {
          line: 691,
          column: 8
        },
        end: {
          line: 697,
          column: 11
        }
      },
      "280": {
        start: {
          line: 698,
          column: 25
        },
        end: {
          line: 707,
          column: 9
        }
      },
      "281": {
        start: {
          line: 708,
          column: 29
        },
        end: {
          line: 708,
          column: 64
        }
      },
      "282": {
        start: {
          line: 710,
          column: 8
        },
        end: {
          line: 710,
          column: 28
        }
      },
      "283": {
        start: {
          line: 712,
          column: 8
        },
        end: {
          line: 714,
          column: 11
        }
      },
      "284": {
        start: {
          line: 716,
          column: 8
        },
        end: {
          line: 722,
          column: 11
        }
      },
      "285": {
        start: {
          line: 723,
          column: 30
        },
        end: {
          line: 727,
          column: 9
        }
      },
      "286": {
        start: {
          line: 728,
          column: 8
        },
        end: {
          line: 730,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "getCategoriesByIds",
        decl: {
          start: {
            line: 100,
            column: 15
          },
          end: {
            line: 100,
            column: 33
          }
        },
        loc: {
          start: {
            line: 100,
            column: 47
          },
          end: {
            line: 107,
            column: 1
          }
        },
        line: 100
      },
      "5": {
        name: "executeBulkAction",
        decl: {
          start: {
            line: 108,
            column: 15
          },
          end: {
            line: 108,
            column: 32
          }
        },
        loc: {
          start: {
            line: 108,
            column: 68
          },
          end: {
            line: 300,
            column: 1
          }
        },
        line: 108
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 121,
            column: 36
          },
          end: {
            line: 121,
            column: 37
          }
        },
        loc: {
          start: {
            line: 121,
            column: 41
          },
          end: {
            line: 121,
            column: 45
          }
        },
        line: 121
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 122,
            column: 43
          },
          end: {
            line: 122,
            column: 44
          }
        },
        loc: {
          start: {
            line: 122,
            column: 49
          },
          end: {
            line: 122,
            column: 71
          }
        },
        line: 122
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 124,
            column: 24
          },
          end: {
            line: 124,
            column: 25
          }
        },
        loc: {
          start: {
            line: 124,
            column: 30
          },
          end: {
            line: 130,
            column: 5
          }
        },
        line: 124
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 169,
            column: 63
          },
          end: {
            line: 169,
            column: 64
          }
        },
        loc: {
          start: {
            line: 169,
            column: 68
          },
          end: {
            line: 169,
            column: 87
          }
        },
        line: 169
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 190,
            column: 59
          },
          end: {
            line: 190,
            column: 60
          }
        },
        loc: {
          start: {
            line: 190,
            column: 64
          },
          end: {
            line: 190,
            column: 83
          }
        },
        line: 190
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 201,
            column: 65
          },
          end: {
            line: 201,
            column: 66
          }
        },
        loc: {
          start: {
            line: 201,
            column: 70
          },
          end: {
            line: 201,
            column: 89
          }
        },
        line: 201
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 203,
            column: 51
          },
          end: {
            line: 203,
            column: 52
          }
        },
        loc: {
          start: {
            line: 203,
            column: 63
          },
          end: {
            line: 210,
            column: 21
          }
        },
        line: 203
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 216,
            column: 53
          },
          end: {
            line: 216,
            column: 54
          }
        },
        loc: {
          start: {
            line: 216,
            column: 58
          },
          end: {
            line: 216,
            column: 69
          }
        },
        line: 216
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 218,
            column: 38
          },
          end: {
            line: 218,
            column: 39
          }
        },
        loc: {
          start: {
            line: 218,
            column: 50
          },
          end: {
            line: 227,
            column: 21
          }
        },
        line: 218
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 219,
            column: 63
          },
          end: {
            line: 219,
            column: 64
          }
        },
        loc: {
          start: {
            line: 219,
            column: 68
          },
          end: {
            line: 219,
            column: 85
          }
        },
        line: 219
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 220,
            column: 64
          },
          end: {
            line: 220,
            column: 65
          }
        },
        loc: {
          start: {
            line: 220,
            column: 69
          },
          end: {
            line: 220,
            column: 93
          }
        },
        line: 220
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 230,
            column: 59
          },
          end: {
            line: 230,
            column: 60
          }
        },
        loc: {
          start: {
            line: 230,
            column: 65
          },
          end: {
            line: 230,
            column: 111
          }
        },
        line: 230
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 230,
            column: 85
          },
          end: {
            line: 230,
            column: 86
          }
        },
        loc: {
          start: {
            line: 230,
            column: 90
          },
          end: {
            line: 230,
            column: 110
          }
        },
        line: 230
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 234,
            column: 51
          },
          end: {
            line: 234,
            column: 52
          }
        },
        loc: {
          start: {
            line: 234,
            column: 57
          },
          end: {
            line: 241,
            column: 25
          }
        },
        line: 234
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 237,
            column: 63
          },
          end: {
            line: 237,
            column: 64
          }
        },
        loc: {
          start: {
            line: 237,
            column: 68
          },
          end: {
            line: 237,
            column: 79
          }
        },
        line: 237
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 254,
            column: 48
          },
          end: {
            line: 254,
            column: 49
          }
        },
        loc: {
          start: {
            line: 254,
            column: 54
          },
          end: {
            line: 254,
            column: 100
          }
        },
        line: 254
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 254,
            column: 74
          },
          end: {
            line: 254,
            column: 75
          }
        },
        loc: {
          start: {
            line: 254,
            column: 79
          },
          end: {
            line: 254,
            column: 99
          }
        },
        line: 254
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 261,
            column: 40
          },
          end: {
            line: 261,
            column: 41
          }
        },
        loc: {
          start: {
            line: 261,
            column: 46
          },
          end: {
            line: 268,
            column: 21
          }
        },
        line: 261
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 264,
            column: 59
          },
          end: {
            line: 264,
            column: 60
          }
        },
        loc: {
          start: {
            line: 264,
            column: 64
          },
          end: {
            line: 264,
            column: 75
          }
        },
        line: 264
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 277,
            column: 77
          },
          end: {
            line: 277,
            column: 78
          }
        },
        loc: {
          start: {
            line: 277,
            column: 82
          },
          end: {
            line: 277,
            column: 86
          }
        },
        line: 277
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 288,
            column: 25
          },
          end: {
            line: 288,
            column: 26
          }
        },
        loc: {
          start: {
            line: 288,
            column: 31
          },
          end: {
            line: 297,
            column: 9
          }
        },
        line: 288
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 289,
            column: 36
          },
          end: {
            line: 289,
            column: 37
          }
        },
        loc: {
          start: {
            line: 289,
            column: 41
          },
          end: {
            line: 289,
            column: 61
          }
        },
        line: 289
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 292,
            column: 51
          },
          end: {
            line: 292,
            column: 52
          }
        },
        loc: {
          start: {
            line: 292,
            column: 56
          },
          end: {
            line: 292,
            column: 67
          }
        },
        line: 292
      },
      "29": {
        name: "exportCategories",
        decl: {
          start: {
            line: 301,
            column: 15
          },
          end: {
            line: 301,
            column: 31
          }
        },
        loc: {
          start: {
            line: 301,
            column: 57
          },
          end: {
            line: 384,
            column: 1
          }
        },
        line: 301
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 348,
            column: 42
          },
          end: {
            line: 348,
            column: 43
          }
        },
        loc: {
          start: {
            line: 348,
            column: 54
          },
          end: {
            line: 377,
            column: 5
          }
        },
        line: 348
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 369,
            column: 27
          },
          end: {
            line: 369,
            column: 28
          }
        },
        loc: {
          start: {
            line: 369,
            column: 36
          },
          end: {
            line: 373,
            column: 13
          }
        },
        line: 369
      },
      "32": {
        name: "importCategories",
        decl: {
          start: {
            line: 385,
            column: 15
          },
          end: {
            line: 385,
            column: 31
          }
        },
        loc: {
          start: {
            line: 385,
            column: 61
          },
          end: {
            line: 500,
            column: 1
          }
        },
        line: 385
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 398,
            column: 58
          },
          end: {
            line: 398,
            column: 59
          }
        },
        loc: {
          start: {
            line: 398,
            column: 63
          },
          end: {
            line: 398,
            column: 69
          }
        },
        line: 398
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 399,
            column: 58
          },
          end: {
            line: 399,
            column: 59
          }
        },
        loc: {
          start: {
            line: 399,
            column: 63
          },
          end: {
            line: 399,
            column: 83
          }
        },
        line: 399
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 422,
            column: 64
          },
          end: {
            line: 422,
            column: 65
          }
        },
        loc: {
          start: {
            line: 422,
            column: 69
          },
          end: {
            line: 422,
            column: 104
          }
        },
        line: 422
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 450,
            column: 66
          },
          end: {
            line: 450,
            column: 67
          }
        },
        loc: {
          start: {
            line: 450,
            column: 71
          },
          end: {
            line: 450,
            column: 99
          }
        },
        line: 450
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 490,
            column: 75
          },
          end: {
            line: 490,
            column: 76
          }
        },
        loc: {
          start: {
            line: 490,
            column: 80
          },
          end: {
            line: 490,
            column: 84
          }
        },
        line: 490
      },
      "38": {
        name: "checkCircularHierarchy",
        decl: {
          start: {
            line: 501,
            column: 15
          },
          end: {
            line: 501,
            column: 37
          }
        },
        loc: {
          start: {
            line: 501,
            column: 60
          },
          end: {
            line: 520,
            column: 1
          }
        },
        line: 501
      },
      "39": {
        name: "logBulkAuditAction",
        decl: {
          start: {
            line: 521,
            column: 15
          },
          end: {
            line: 521,
            column: 33
          }
        },
        loc: {
          start: {
            line: 521,
            column: 72
          },
          end: {
            line: 546,
            column: 1
          }
        },
        line: 521
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 527,
            column: 45
          },
          end: {
            line: 527,
            column: 46
          }
        },
        loc: {
          start: {
            line: 527,
            column: 60
          },
          end: {
            line: 537,
            column: 13
          }
        },
        line: 527
      },
      "41": {
        name: "GET",
        decl: {
          start: {
            line: 547,
            column: 15
          },
          end: {
            line: 547,
            column: 18
          }
        },
        loc: {
          start: {
            line: 547,
            column: 28
          },
          end: {
            line: 640,
            column: 1
          }
        },
        line: 547
      },
      "42": {
        name: "POST",
        decl: {
          start: {
            line: 641,
            column: 15
          },
          end: {
            line: 641,
            column: 19
          }
        },
        loc: {
          start: {
            line: 641,
            column: 29
          },
          end: {
            line: 732,
            column: 1
          }
        },
        line: 641
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "1": {
        loc: {
          start: {
            line: 106,
            column: 11
          },
          end: {
            line: 106,
            column: 27
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 11
          },
          end: {
            line: 106,
            column: 21
          }
        }, {
          start: {
            line: 106,
            column: 25
          },
          end: {
            line: 106,
            column: 27
          }
        }],
        line: 106
      },
      "2": {
        loc: {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "3": {
        loc: {
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 133,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 133,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "4": {
        loc: {
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 251,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 142,
            column: 22
          }
        }, {
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 147,
            column: 22
          }
        }, {
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 152,
            column: 22
          }
        }, {
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 157,
            column: 22
          }
        }, {
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 176,
            column: 22
          }
        }, {
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 198,
            column: 22
          }
        }, {
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 248,
            column: 22
          }
        }, {
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 250,
            column: 70
          }
        }],
        line: 137
      },
      "5": {
        loc: {
          start: {
            line: 160,
            column: 31
          },
          end: {
            line: 160,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 31
          },
          end: {
            line: 160,
            column: 46
          }
        }, {
          start: {
            line: 160,
            column: 50
          },
          end: {
            line: 160,
            column: 54
          }
        }],
        line: 160
      },
      "6": {
        loc: {
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 175,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 175,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "7": {
        loc: {
          start: {
            line: 166,
            column: 24
          },
          end: {
            line: 173,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 24
          },
          end: {
            line: 173,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "8": {
        loc: {
          start: {
            line: 182,
            column: 39
          },
          end: {
            line: 182,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 182,
            column: 39
          },
          end: {
            line: 182,
            column: 55
          }
        }, {
          start: {
            line: 182,
            column: 59
          },
          end: {
            line: 182,
            column: 60
          }
        }],
        line: 182
      },
      "9": {
        loc: {
          start: {
            line: 187,
            column: 20
          },
          end: {
            line: 196,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 20
          },
          end: {
            line: 196,
            column: 21
          }
        }, {
          start: {
            line: 194,
            column: 27
          },
          end: {
            line: 196,
            column: 21
          }
        }],
        line: 187
      },
      "10": {
        loc: {
          start: {
            line: 202,
            column: 16
          },
          end: {
            line: 211,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 16
          },
          end: {
            line: 211,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "11": {
        loc: {
          start: {
            line: 214,
            column: 16
          },
          end: {
            line: 228,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 16
          },
          end: {
            line: 228,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "12": {
        loc: {
          start: {
            line: 214,
            column: 20
          },
          end: {
            line: 214,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 214,
            column: 20
          },
          end: {
            line: 214,
            column: 33
          }
        }, {
          start: {
            line: 214,
            column: 37
          },
          end: {
            line: 214,
            column: 61
          }
        }],
        line: 214
      },
      "13": {
        loc: {
          start: {
            line: 231,
            column: 16
          },
          end: {
            line: 246,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 16
          },
          end: {
            line: 246,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      },
      "14": {
        loc: {
          start: {
            line: 233,
            column: 20
          },
          end: {
            line: 245,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 20
          },
          end: {
            line: 245,
            column: 21
          }
        }, {
          start: {
            line: 242,
            column: 27
          },
          end: {
            line: 245,
            column: 21
          }
        }],
        line: 233
      },
      "15": {
        loc: {
          start: {
            line: 243,
            column: 47
          },
          end: {
            line: 243,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 47
          },
          end: {
            line: 243,
            column: 72
          }
        }, {
          start: {
            line: 243,
            column: 76
          },
          end: {
            line: 243,
            column: 77
          }
        }],
        line: 243
      },
      "16": {
        loc: {
          start: {
            line: 244,
            column: 54
          },
          end: {
            line: 244,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 244,
            column: 54
          },
          end: {
            line: 244,
            column: 71
          }
        }, {
          start: {
            line: 244,
            column: 75
          },
          end: {
            line: 244,
            column: 77
          }
        }],
        line: 244
      },
      "17": {
        loc: {
          start: {
            line: 252,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 252
      },
      "18": {
        loc: {
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 252,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 252,
            column: 24
          }
        }, {
          start: {
            line: 252,
            column: 28
          },
          end: {
            line: 252,
            column: 62
          }
        }],
        line: 252
      },
      "19": {
        loc: {
          start: {
            line: 255,
            column: 12
          },
          end: {
            line: 273,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 12
          },
          end: {
            line: 273,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "20": {
        loc: {
          start: {
            line: 260,
            column: 16
          },
          end: {
            line: 272,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 16
          },
          end: {
            line: 272,
            column: 17
          }
        }, {
          start: {
            line: 269,
            column: 23
          },
          end: {
            line: 272,
            column: 17
          }
        }],
        line: 260
      },
      "21": {
        loc: {
          start: {
            line: 270,
            column: 43
          },
          end: {
            line: 270,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 270,
            column: 43
          },
          end: {
            line: 270,
            column: 68
          }
        }, {
          start: {
            line: 270,
            column: 72
          },
          end: {
            line: 270,
            column: 73
          }
        }],
        line: 270
      },
      "22": {
        loc: {
          start: {
            line: 271,
            column: 50
          },
          end: {
            line: 271,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 271,
            column: 50
          },
          end: {
            line: 271,
            column: 67
          }
        }, {
          start: {
            line: 271,
            column: 71
          },
          end: {
            line: 271,
            column: 73
          }
        }],
        line: 271
      },
      "23": {
        loc: {
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 276
      },
      "24": {
        loc: {
          start: {
            line: 276,
            column: 12
          },
          end: {
            line: 276,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 276,
            column: 12
          },
          end: {
            line: 276,
            column: 18
          }
        }, {
          start: {
            line: 276,
            column: 22
          },
          end: {
            line: 276,
            column: 46
          }
        }],
        line: 276
      },
      "25": {
        loc: {
          start: {
            line: 289,
            column: 12
          },
          end: {
            line: 296,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 12
          },
          end: {
            line: 296,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 289
      },
      "26": {
        loc: {
          start: {
            line: 293,
            column: 27
          },
          end: {
            line: 293,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 293,
            column: 27
          },
          end: {
            line: 293,
            column: 40
          }
        }, {
          start: {
            line: 293,
            column: 44
          },
          end: {
            line: 293,
            column: 63
          }
        }],
        line: 293
      },
      "27": {
        loc: {
          start: {
            line: 303,
            column: 4
          },
          end: {
            line: 305,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 4
          },
          end: {
            line: 305,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "28": {
        loc: {
          start: {
            line: 325,
            column: 4
          },
          end: {
            line: 327,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 325,
            column: 4
          },
          end: {
            line: 327,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 325
      },
      "29": {
        loc: {
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 330,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 330,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 328
      },
      "30": {
        loc: {
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 337,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 337,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 331
      },
      "31": {
        loc: {
          start: {
            line: 332,
            column: 8
          },
          end: {
            line: 336,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 8
          },
          end: {
            line: 336,
            column: 9
          }
        }, {
          start: {
            line: 334,
            column: 15
          },
          end: {
            line: 336,
            column: 9
          }
        }],
        line: 332
      },
      "32": {
        loc: {
          start: {
            line: 338,
            column: 4
          },
          end: {
            line: 340,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 338,
            column: 4
          },
          end: {
            line: 340,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 338
      },
      "33": {
        loc: {
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 346,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 346,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      },
      "34": {
        loc: {
          start: {
            line: 348,
            column: 26
          },
          end: {
            line: 377,
            column: 12
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 348,
            column: 26
          },
          end: {
            line: 377,
            column: 6
          }
        }, {
          start: {
            line: 377,
            column: 10
          },
          end: {
            line: 377,
            column: 12
          }
        }],
        line: 348
      },
      "35": {
        loc: {
          start: {
            line: 353,
            column: 25
          },
          end: {
            line: 353,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 353,
            column: 25
          },
          end: {
            line: 353,
            column: 45
          }
        }, {
          start: {
            line: 353,
            column: 49
          },
          end: {
            line: 353,
            column: 51
          }
        }],
        line: 353
      },
      "36": {
        loc: {
          start: {
            line: 354,
            column: 23
          },
          end: {
            line: 354,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 354,
            column: 23
          },
          end: {
            line: 354,
            column: 41
          }
        }, {
          start: {
            line: 354,
            column: 45
          },
          end: {
            line: 354,
            column: 47
          }
        }],
        line: 354
      },
      "37": {
        loc: {
          start: {
            line: 355,
            column: 25
          },
          end: {
            line: 355,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 355,
            column: 25
          },
          end: {
            line: 355,
            column: 46
          }
        }, {
          start: {
            line: 355,
            column: 50
          },
          end: {
            line: 355,
            column: 52
          }
        }],
        line: 355
      },
      "38": {
        loc: {
          start: {
            line: 360,
            column: 24
          },
          end: {
            line: 360,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 360,
            column: 24
          },
          end: {
            line: 360,
            column: 43
          }
        }, {
          start: {
            line: 360,
            column: 47
          },
          end: {
            line: 360,
            column: 49
          }
        }],
        line: 360
      },
      "39": {
        loc: {
          start: {
            line: 361,
            column: 30
          },
          end: {
            line: 361,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 361,
            column: 30
          },
          end: {
            line: 361,
            column: 55
          }
        }, {
          start: {
            line: 361,
            column: 59
          },
          end: {
            line: 361,
            column: 61
          }
        }],
        line: 361
      },
      "40": {
        loc: {
          start: {
            line: 362,
            column: 27
          },
          end: {
            line: 362,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 362,
            column: 27
          },
          end: {
            line: 362,
            column: 49
          }
        }, {
          start: {
            line: 362,
            column: 53
          },
          end: {
            line: 362,
            column: 55
          }
        }],
        line: 362
      },
      "41": {
        loc: {
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 375,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 375,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "42": {
        loc: {
          start: {
            line: 367,
            column: 12
          },
          end: {
            line: 367,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 367,
            column: 12
          },
          end: {
            line: 367,
            column: 18
          }
        }, {
          start: {
            line: 367,
            column: 22
          },
          end: {
            line: 367,
            column: 39
          }
        }],
        line: 367
      },
      "43": {
        loc: {
          start: {
            line: 370,
            column: 16
          },
          end: {
            line: 372,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 16
          },
          end: {
            line: 372,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 370
      },
      "44": {
        loc: {
          start: {
            line: 387,
            column: 4
          },
          end: {
            line: 389,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 387,
            column: 4
          },
          end: {
            line: 389,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 387
      },
      "45": {
        loc: {
          start: {
            line: 398,
            column: 34
          },
          end: {
            line: 398,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 398,
            column: 34
          },
          end: {
            line: 398,
            column: 70
          }
        }, {
          start: {
            line: 398,
            column: 74
          },
          end: {
            line: 398,
            column: 76
          }
        }],
        line: 398
      },
      "46": {
        loc: {
          start: {
            line: 399,
            column: 34
          },
          end: {
            line: 399,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 399,
            column: 34
          },
          end: {
            line: 399,
            column: 84
          }
        }, {
          start: {
            line: 399,
            column: 88
          },
          end: {
            line: 399,
            column: 90
          }
        }],
        line: 399
      },
      "47": {
        loc: {
          start: {
            line: 405,
            column: 12
          },
          end: {
            line: 407,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 405,
            column: 12
          },
          end: {
            line: 407,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 405
      },
      "48": {
        loc: {
          start: {
            line: 411,
            column: 12
          },
          end: {
            line: 418,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 411,
            column: 12
          },
          end: {
            line: 418,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 411
      },
      "49": {
        loc: {
          start: {
            line: 411,
            column: 16
          },
          end: {
            line: 411,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 411,
            column: 17
          },
          end: {
            line: 411,
            column: 32
          }
        }, {
          start: {
            line: 411,
            column: 36
          },
          end: {
            line: 411,
            column: 51
          }
        }, {
          start: {
            line: 411,
            column: 56
          },
          end: {
            line: 411,
            column: 80
          }
        }],
        line: 411
      },
      "50": {
        loc: {
          start: {
            line: 421,
            column: 12
          },
          end: {
            line: 433,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 421,
            column: 12
          },
          end: {
            line: 433,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 421
      },
      "51": {
        loc: {
          start: {
            line: 423,
            column: 16
          },
          end: {
            line: 432,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 423,
            column: 16
          },
          end: {
            line: 432,
            column: 17
          }
        }, {
          start: {
            line: 425,
            column: 23
          },
          end: {
            line: 432,
            column: 17
          }
        }],
        line: 423
      },
      "52": {
        loc: {
          start: {
            line: 437,
            column: 29
          },
          end: {
            line: 437,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 437,
            column: 29
          },
          end: {
            line: 437,
            column: 53
          }
        }, {
          start: {
            line: 437,
            column: 57
          },
          end: {
            line: 437,
            column: 61
          }
        }],
        line: 437
      },
      "53": {
        loc: {
          start: {
            line: 439,
            column: 27
          },
          end: {
            line: 439,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 439,
            column: 27
          },
          end: {
            line: 439,
            column: 49
          }
        }, {
          start: {
            line: 439,
            column: 53
          },
          end: {
            line: 439,
            column: 57
          }
        }],
        line: 439
      },
      "54": {
        loc: {
          start: {
            line: 440,
            column: 29
          },
          end: {
            line: 440,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 440,
            column: 29
          },
          end: {
            line: 440,
            column: 53
          }
        }, {
          start: {
            line: 440,
            column: 57
          },
          end: {
            line: 440,
            column: 62
          }
        }],
        line: 440
      },
      "55": {
        loc: {
          start: {
            line: 441,
            column: 28
          },
          end: {
            line: 441,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 441,
            column: 28
          },
          end: {
            line: 441,
            column: 51
          }
        }, {
          start: {
            line: 441,
            column: 55
          },
          end: {
            line: 441,
            column: 56
          }
        }],
        line: 441
      },
      "56": {
        loc: {
          start: {
            line: 442,
            column: 28
          },
          end: {
            line: 442,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 442,
            column: 28
          },
          end: {
            line: 442,
            column: 51
          }
        }, {
          start: {
            line: 442,
            column: 55
          },
          end: {
            line: 442,
            column: 59
          }
        }],
        line: 442
      },
      "57": {
        loc: {
          start: {
            line: 443,
            column: 34
          },
          end: {
            line: 443,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 443,
            column: 34
          },
          end: {
            line: 443,
            column: 63
          }
        }, {
          start: {
            line: 443,
            column: 67
          },
          end: {
            line: 443,
            column: 71
          }
        }],
        line: 443
      },
      "58": {
        loc: {
          start: {
            line: 444,
            column: 31
          },
          end: {
            line: 444,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 444,
            column: 31
          },
          end: {
            line: 444,
            column: 57
          }
        }, {
          start: {
            line: 444,
            column: 61
          },
          end: {
            line: 444,
            column: 65
          }
        }],
        line: 444
      },
      "59": {
        loc: {
          start: {
            line: 448,
            column: 12
          },
          end: {
            line: 479,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 448,
            column: 12
          },
          end: {
            line: 479,
            column: 13
          }
        }, {
          start: {
            line: 464,
            column: 19
          },
          end: {
            line: 479,
            column: 13
          }
        }],
        line: 448
      },
      "60": {
        loc: {
          start: {
            line: 448,
            column: 16
          },
          end: {
            line: 448,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 448,
            column: 16
          },
          end: {
            line: 448,
            column: 31
          }
        }, {
          start: {
            line: 448,
            column: 35
          },
          end: {
            line: 448,
            column: 59
          }
        }],
        line: 448
      },
      "61": {
        loc: {
          start: {
            line: 451,
            column: 16
          },
          end: {
            line: 463,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 451,
            column: 16
          },
          end: {
            line: 463,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 451
      },
      "62": {
        loc: {
          start: {
            line: 453,
            column: 20
          },
          end: {
            line: 462,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 453,
            column: 20
          },
          end: {
            line: 462,
            column: 21
          }
        }, {
          start: {
            line: 459,
            column: 27
          },
          end: {
            line: 462,
            column: 21
          }
        }],
        line: 453
      },
      "63": {
        loc: {
          start: {
            line: 467,
            column: 16
          },
          end: {
            line: 478,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 467,
            column: 16
          },
          end: {
            line: 478,
            column: 17
          }
        }, {
          start: {
            line: 473,
            column: 23
          },
          end: {
            line: 478,
            column: 17
          }
        }],
        line: 467
      },
      "64": {
        loc: {
          start: {
            line: 482,
            column: 31
          },
          end: {
            line: 482,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 482,
            column: 31
          },
          end: {
            line: 482,
            column: 48
          }
        }, {
          start: {
            line: 482,
            column: 52
          },
          end: {
            line: 482,
            column: 67
          }
        }],
        line: 482
      },
      "65": {
        loc: {
          start: {
            line: 483,
            column: 23
          },
          end: {
            line: 483,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 483,
            column: 23
          },
          end: {
            line: 483,
            column: 36
          }
        }, {
          start: {
            line: 483,
            column: 40
          },
          end: {
            line: 483,
            column: 59
          }
        }],
        line: 483
      },
      "66": {
        loc: {
          start: {
            line: 489,
            column: 4
          },
          end: {
            line: 498,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 489,
            column: 4
          },
          end: {
            line: 498,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 489
      },
      "67": {
        loc: {
          start: {
            line: 503,
            column: 4
          },
          end: {
            line: 505,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 503,
            column: 4
          },
          end: {
            line: 505,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 503
      },
      "68": {
        loc: {
          start: {
            line: 506,
            column: 4
          },
          end: {
            line: 508,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 506,
            column: 4
          },
          end: {
            line: 508,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 506
      },
      "69": {
        loc: {
          start: {
            line: 511,
            column: 10
          },
          end: {
            line: 511,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 511,
            column: 10
          },
          end: {
            line: 511,
            column: 25
          }
        }, {
          start: {
            line: 511,
            column: 29
          },
          end: {
            line: 511,
            column: 58
          }
        }],
        line: 511
      },
      "70": {
        loc: {
          start: {
            line: 513,
            column: 8
          },
          end: {
            line: 515,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 513,
            column: 8
          },
          end: {
            line: 515,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 513
      },
      "71": {
        loc: {
          start: {
            line: 524,
            column: 8
          },
          end: {
            line: 526,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 524,
            column: 8
          },
          end: {
            line: 526,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 524
      },
      "72": {
        loc: {
          start: {
            line: 533,
            column: 28
          },
          end: {
            line: 533,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 533,
            column: 28
          },
          end: {
            line: 533,
            column: 35
          }
        }, {
          start: {
            line: 533,
            column: 39
          },
          end: {
            line: 533,
            column: 43
          }
        }],
        line: 533
      },
      "73": {
        loc: {
          start: {
            line: 552,
            column: 8
          },
          end: {
            line: 560,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 552,
            column: 8
          },
          end: {
            line: 560,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 552
      },
      "74": {
        loc: {
          start: {
            line: 565,
            column: 8
          },
          end: {
            line: 574,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 565,
            column: 8
          },
          end: {
            line: 574,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 565
      },
      "75": {
        loc: {
          start: {
            line: 572,
            column: 24
          },
          end: {
            line: 572,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 572,
            column: 24
          },
          end: {
            line: 572,
            column: 41
          }
        }, {
          start: {
            line: 572,
            column: 45
          },
          end: {
            line: 572,
            column: 48
          }
        }],
        line: 572
      },
      "76": {
        loc: {
          start: {
            line: 576,
            column: 23
          },
          end: {
            line: 576,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 576,
            column: 23
          },
          end: {
            line: 576,
            column: 53
          }
        }, {
          start: {
            line: 576,
            column: 57
          },
          end: {
            line: 576,
            column: 62
          }
        }],
        line: 576
      },
      "77": {
        loc: {
          start: {
            line: 580,
            column: 8
          },
          end: {
            line: 582,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 580,
            column: 8
          },
          end: {
            line: 582,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 580
      },
      "78": {
        loc: {
          start: {
            line: 583,
            column: 8
          },
          end: {
            line: 585,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 583,
            column: 8
          },
          end: {
            line: 585,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 583
      },
      "79": {
        loc: {
          start: {
            line: 586,
            column: 8
          },
          end: {
            line: 588,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 586,
            column: 8
          },
          end: {
            line: 588,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 586
      },
      "80": {
        loc: {
          start: {
            line: 589,
            column: 8
          },
          end: {
            line: 591,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 589,
            column: 8
          },
          end: {
            line: 591,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 589
      },
      "81": {
        loc: {
          start: {
            line: 629,
            column: 19
          },
          end: {
            line: 629,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 629,
            column: 19
          },
          end: {
            line: 629,
            column: 32
          }
        }, {
          start: {
            line: 629,
            column: 36
          },
          end: {
            line: 629,
            column: 51
          }
        }],
        line: 629
      },
      "82": {
        loc: {
          start: {
            line: 634,
            column: 19
          },
          end: {
            line: 634,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 634,
            column: 19
          },
          end: {
            line: 634,
            column: 32
          }
        }, {
          start: {
            line: 634,
            column: 36
          },
          end: {
            line: 634,
            column: 64
          }
        }],
        line: 634
      },
      "83": {
        loc: {
          start: {
            line: 650,
            column: 8
          },
          end: {
            line: 658,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 650,
            column: 8
          },
          end: {
            line: 658,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 650
      },
      "84": {
        loc: {
          start: {
            line: 665,
            column: 8
          },
          end: {
            line: 674,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 665,
            column: 8
          },
          end: {
            line: 674,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 665
      },
      "85": {
        loc: {
          start: {
            line: 672,
            column: 24
          },
          end: {
            line: 672,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 672,
            column: 24
          },
          end: {
            line: 672,
            column: 41
          }
        }, {
          start: {
            line: 672,
            column: 45
          },
          end: {
            line: 672,
            column: 48
          }
        }],
        line: 672
      },
      "86": {
        loc: {
          start: {
            line: 679,
            column: 8
          },
          end: {
            line: 689,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 679,
            column: 8
          },
          end: {
            line: 689,
            column: 9
          }
        }, {
          start: {
            line: 684,
            column: 15
          },
          end: {
            line: 689,
            column: 9
          }
        }],
        line: 679
      },
      "87": {
        loc: {
          start: {
            line: 721,
            column: 19
          },
          end: {
            line: 721,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 721,
            column: 19
          },
          end: {
            line: 721,
            column: 32
          }
        }, {
          start: {
            line: 721,
            column: 36
          },
          end: {
            line: 721,
            column: 51
          }
        }],
        line: 721
      },
      "88": {
        loc: {
          start: {
            line: 726,
            column: 19
          },
          end: {
            line: 726,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 726,
            column: 19
          },
          end: {
            line: 726,
            column: 32
          }
        }, {
          start: {
            line: 726,
            column: 36
          },
          end: {
            line: 726,
            column: 64
          }
        }],
        line: 726
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0, 0, 0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\categories\\bulk\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { z } from 'zod';\r\nimport { createClient } from '@/lib/integrations/supabase/server';\r\nimport { requireAdminAuth } from '@/lib/auth/admin-auth';\r\nimport { checkRateLimit } from '@/lib/enterprise/rate-limiter';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\nimport { metricsCollector } from '@/lib/enterprise/metrics';\r\n\r\n// ===================================\r\n// CONFIGURACI\xD3N\r\n// ===================================\r\nconst RATE_LIMIT_CONFIGS = {\r\n  admin: {\r\n    windowMs: 15 * 60 * 1000, // 15 minutos\r\n    maxRequests: 50, // M\xE1s restrictivo para operaciones masivas\r\n  },\r\n};\r\n\r\n// ===================================\r\n// ESQUEMAS DE VALIDACI\xD3N\r\n// ===================================\r\nconst BulkCategoryActionSchema = z.object({\r\n  action: z.enum(['activate', 'deactivate', 'feature', 'unfeature', 'delete', 'update_parent', 'reorder']),\r\n  category_ids: z.array(z.string().uuid('ID de categor\xEDa inv\xE1lido')).min(1, 'Debe seleccionar al menos una categor\xEDa').max(100, 'M\xE1ximo 100 categor\xEDas por operaci\xF3n'),\r\n  data: z.object({\r\n    parent_id: z.string().uuid('ID de categor\xEDa padre inv\xE1lido').optional().nullable(),\r\n    sort_order: z.number().int().min(0).optional(),\r\n    is_active: z.boolean().optional(),\r\n    is_featured: z.boolean().optional(),\r\n  }).optional(),\r\n});\r\n\r\nconst BulkCategoryExportSchema = z.object({\r\n  format: z.enum(['csv', 'json', 'xlsx']).default('csv'),\r\n  filters: z.object({\r\n    is_active: z.boolean().optional(),\r\n    is_featured: z.boolean().optional(),\r\n    parent_id: z.string().uuid().optional().nullable(),\r\n    search: z.string().optional(),\r\n  }).optional(),\r\n  fields: z.array(z.string()).optional(),\r\n});\r\n\r\nconst BulkCategoryImportSchema = z.object({\r\n  format: z.enum(['csv', 'json']),\r\n  data: z.array(z.object({\r\n    name: z.string().min(1, 'El nombre es requerido'),\r\n    slug: z.string().optional(),\r\n    description: z.string().optional(),\r\n    parent_slug: z.string().optional(), // Para referenciar por slug\r\n    is_active: z.boolean().default(true),\r\n    is_featured: z.boolean().default(false),\r\n    sort_order: z.number().int().min(0).default(0),\r\n    meta_title: z.string().optional(),\r\n    meta_description: z.string().optional(),\r\n    meta_keywords: z.string().optional(),\r\n  })).min(1, 'Debe proporcionar al menos una categor\xEDa').max(1000, 'M\xE1ximo 1000 categor\xEDas por importaci\xF3n'),\r\n  options: z.object({\r\n    update_existing: z.boolean().default(false),\r\n    skip_duplicates: z.boolean().default(true),\r\n  }).optional(),\r\n});\r\n\r\n// ===================================\r\n// TIPOS\r\n// ===================================\r\ninterface ApiResponse<T> {\r\n  data: T;\r\n  success: boolean;\r\n  message?: string;\r\n  error?: string;\r\n  meta?: {\r\n    total?: number;\r\n    processed?: number;\r\n    errors?: any[];\r\n  };\r\n}\r\n\r\ninterface Category {\r\n  id: string;\r\n  name: string;\r\n  slug: string;\r\n  description?: string;\r\n  image_url?: string;\r\n  parent_id?: string;\r\n  is_active: boolean;\r\n  is_featured: boolean;\r\n  sort_order: number;\r\n  product_count: number;\r\n  meta_title?: string;\r\n  meta_description?: string;\r\n  meta_keywords?: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\ninterface BulkOperationResult {\r\n  success_count: number;\r\n  error_count: number;\r\n  errors: Array<{\r\n    category_id?: string;\r\n    category_name?: string;\r\n    error: string;\r\n  }>;\r\n  processed_categories: Category[];\r\n}\r\n\r\n// ===================================\r\n// FUNCIONES AUXILIARES\r\n// ===================================\r\nasync function getCategoriesByIds(categoryIds: string[]): Promise<Category[]> {\r\n  const supabase = await createClient();\r\n\r\n  const { data: categories, error } = await supabase\r\n    .from('categories')\r\n    .select('*')\r\n    .in('id', categoryIds);\r\n\r\n  if (error) {\r\n    throw new Error(`Error obteniendo categor\xEDas: ${error.message}`);\r\n  }\r\n\r\n  return categories || [];\r\n}\r\n\r\nasync function executeBulkAction(\r\n  action: string,\r\n  categoryIds: string[],\r\n  data?: any,\r\n  userId?: string\r\n): Promise<BulkOperationResult> {\r\n  const supabase = getSupabaseClient(true);\r\n  \r\n  if (!supabase) {\r\n    throw new Error('Cliente administrativo de Supabase no disponible');\r\n  }\r\n\r\n  const result: BulkOperationResult = {\r\n    success_count: 0,\r\n    error_count: 0,\r\n    errors: [],\r\n    processed_categories: []\r\n  };\r\n\r\n  // Obtener categor\xEDas existentes\r\n  const categories = await getCategoriesByIds(categoryIds);\r\n  const foundIds = categories.map(c => c.id);\r\n  const notFoundIds = categoryIds.filter(id => !foundIds.includes(id));\r\n\r\n  // Agregar errores para categor\xEDas no encontradas\r\n  notFoundIds.forEach(id => {\r\n    result.errors.push({\r\n      category_id: id,\r\n      error: 'Categor\xEDa no encontrada'\r\n    });\r\n    result.error_count++;\r\n  });\r\n\r\n  if (foundIds.length === 0) {\r\n    return result;\r\n  }\r\n\r\n  try {\r\n    let updateData: any = {};\r\n    let shouldUpdate = true;\r\n\r\n    switch (action) {\r\n      case 'activate':\r\n        updateData = { is_active: true };\r\n        break;\r\n      case 'deactivate':\r\n        updateData = { is_active: false };\r\n        break;\r\n      case 'feature':\r\n        updateData = { is_featured: true };\r\n        break;\r\n      case 'unfeature':\r\n        updateData = { is_featured: false };\r\n        break;\r\n      case 'update_parent':\r\n        updateData = { parent_id: data?.parent_id || null };\r\n        \r\n        // Verificar jerarqu\xEDas circulares\r\n        if (data?.parent_id) {\r\n          for (const categoryId of foundIds) {\r\n            const isCircular = await checkCircularHierarchy(categoryId, data.parent_id);\r\n            if (isCircular) {\r\n              result.errors.push({\r\n                category_id: categoryId,\r\n                category_name: categories.find(c => c.id === categoryId)?.name,\r\n                error: 'Crear\xEDa una jerarqu\xEDa circular'\r\n              });\r\n              result.error_count++;\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      case 'reorder':\r\n        // Para reordenar, necesitamos manejar cada categor\xEDa individualmente\r\n        shouldUpdate = false;\r\n        for (let i = 0; i < foundIds.length; i++) {\r\n          const categoryId = foundIds[i];\r\n          const sortOrder = (data?.sort_order || 0) + i;\r\n          \r\n          const { error } = await supabase\r\n            .from('categories')\r\n            .update({ \r\n              sort_order: sortOrder,\r\n              updated_at: new Date().toISOString()\r\n            })\r\n            .eq('id', categoryId);\r\n\r\n          if (error) {\r\n            result.errors.push({\r\n              category_id: categoryId,\r\n              category_name: categories.find(c => c.id === categoryId)?.name,\r\n              error: error.message\r\n            });\r\n            result.error_count++;\r\n          } else {\r\n            result.success_count++;\r\n          }\r\n        }\r\n        break;\r\n      case 'delete':\r\n        // Verificar que las categor\xEDas no tengan productos o subcategor\xEDas\r\n        const categoriesWithProducts = categories.filter(c => c.product_count > 0);\r\n        if (categoriesWithProducts.length > 0) {\r\n          categoriesWithProducts.forEach(category => {\r\n            result.errors.push({\r\n              category_id: category.id,\r\n              category_name: category.name,\r\n              error: `Tiene ${category.product_count} productos asociados`\r\n            });\r\n            result.error_count++;\r\n          });\r\n        }\r\n\r\n        // Verificar subcategor\xEDas\r\n        const { data: subcategories } = await supabase\r\n          .from('categories')\r\n          .select('id, name, parent_id')\r\n          .in('parent_id', foundIds);\r\n\r\n        if (subcategories && subcategories.length > 0) {\r\n          const parentIds = [...new Set(subcategories.map(s => s.parent_id))];\r\n          parentIds.forEach(parentId => {\r\n            const parentCategory = categories.find(c => c.id === parentId);\r\n            const childCount = subcategories.filter(s => s.parent_id === parentId).length;\r\n            result.errors.push({\r\n              category_id: parentId!,\r\n              category_name: parentCategory?.name,\r\n              error: `Tiene ${childCount} subcategor\xEDas`\r\n            });\r\n            result.error_count++;\r\n          });\r\n        }\r\n\r\n        // Eliminar solo las categor\xEDas que no tienen restricciones\r\n        const categoriesToDelete = foundIds.filter(id => \r\n          !result.errors.some(e => e.category_id === id)\r\n        );\r\n\r\n        if (categoriesToDelete.length > 0) {\r\n          const { data: deletedCategories, error: deleteError } = await supabase\r\n            .from('categories')\r\n            .delete()\r\n            .in('id', categoriesToDelete)\r\n            .select();\r\n\r\n          if (deleteError) {\r\n            categoriesToDelete.forEach(id => {\r\n              result.errors.push({\r\n                category_id: id,\r\n                category_name: categories.find(c => c.id === id)?.name,\r\n                error: deleteError.message\r\n              });\r\n              result.error_count++;\r\n            });\r\n          } else {\r\n            result.success_count = deletedCategories?.length || 0;\r\n            result.processed_categories = deletedCategories || [];\r\n          }\r\n        }\r\n        shouldUpdate = false;\r\n        break;\r\n      default:\r\n        throw new Error(`Acci\xF3n '${action}' no implementada`);\r\n    }\r\n\r\n    if (shouldUpdate && Object.keys(updateData).length > 0) {\r\n      // Filtrar IDs que no tuvieron errores\r\n      const idsToUpdate = foundIds.filter(id => \r\n        !result.errors.some(e => e.category_id === id)\r\n      );\r\n\r\n      if (idsToUpdate.length > 0) {\r\n        const { data: updatedCategories, error: updateError } = await supabase\r\n          .from('categories')\r\n          .update({\r\n            ...updateData,\r\n            updated_at: new Date().toISOString()\r\n          })\r\n          .in('id', idsToUpdate)\r\n          .select();\r\n\r\n        if (updateError) {\r\n          idsToUpdate.forEach(id => {\r\n            result.errors.push({\r\n              category_id: id,\r\n              category_name: categories.find(c => c.id === id)?.name,\r\n              error: updateError.message\r\n            });\r\n            result.error_count++;\r\n          });\r\n        } else {\r\n          result.success_count = updatedCategories?.length || 0;\r\n          result.processed_categories = updatedCategories || [];\r\n        }\r\n      }\r\n    }\r\n\r\n    // Registrar auditor\xEDa para operaciones exitosas\r\n    if (userId && result.success_count > 0) {\r\n      await logBulkAuditAction(action, result.processed_categories.map(c => c.id), userId, {\r\n        action,\r\n        data,\r\n        result: {\r\n          success_count: result.success_count,\r\n          error_count: result.error_count\r\n        }\r\n      });\r\n    }\r\n\r\n  } catch (error: any) {\r\n    // Si hay un error general, marcarlo para todas las categor\xEDas\r\n    foundIds.forEach(id => {\r\n      if (!result.errors.some(e => e.category_id === id)) {\r\n        result.errors.push({\r\n          category_id: id,\r\n          category_name: categories.find(c => c.id === id)?.name,\r\n          error: error.message || 'Error desconocido'\r\n        });\r\n        result.error_count++;\r\n      }\r\n    });\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nasync function exportCategories(filters: any, format: string, fields?: string[]): Promise<any> {\r\n  const supabase = getSupabaseClient(true);\r\n  \r\n  if (!supabase) {\r\n    throw new Error('Cliente administrativo de Supabase no disponible');\r\n  }\r\n\r\n  let query = supabase\r\n    .from('categories')\r\n    .select(`\r\n      id,\r\n      name,\r\n      slug,\r\n      description,\r\n      image_url,\r\n      parent_id,\r\n      is_active,\r\n      is_featured,\r\n      sort_order,\r\n      product_count,\r\n      meta_title,\r\n      meta_description,\r\n      meta_keywords,\r\n      created_at,\r\n      updated_at,\r\n      parent:parent_id(name, slug)\r\n    `);\r\n\r\n  // Aplicar filtros\r\n  if (filters?.is_active !== undefined) {\r\n    query = query.eq('is_active', filters.is_active);\r\n  }\r\n  if (filters?.is_featured !== undefined) {\r\n    query = query.eq('is_featured', filters.is_featured);\r\n  }\r\n  if (filters?.parent_id !== undefined) {\r\n    if (filters.parent_id === null) {\r\n      query = query.is('parent_id', null);\r\n    } else {\r\n      query = query.eq('parent_id', filters.parent_id);\r\n    }\r\n  }\r\n  if (filters?.search) {\r\n    query = query.or(`name.ilike.%${filters.search}%,description.ilike.%${filters.search}%`);\r\n  }\r\n\r\n  const { data: categories, error } = await query.order('sort_order', { ascending: true });\r\n\r\n  if (error) {\r\n    throw new Error(`Error exportando categor\xEDas: ${error.message}`);\r\n  }\r\n\r\n  // Procesar datos seg\xFAn el formato\r\n  const processedData = categories?.map(category => {\r\n    const processed: any = {\r\n      id: category.id,\r\n      name: category.name,\r\n      slug: category.slug,\r\n      description: category.description || '',\r\n      image_url: category.image_url || '',\r\n      parent_name: category.parent?.name || '',\r\n      is_active: category.is_active,\r\n      is_featured: category.is_featured,\r\n      sort_order: category.sort_order,\r\n      product_count: category.product_count,\r\n      meta_title: category.meta_title || '',\r\n      meta_description: category.meta_description || '',\r\n      meta_keywords: category.meta_keywords || '',\r\n      created_at: category.created_at,\r\n      updated_at: category.updated_at\r\n    };\r\n\r\n    // Filtrar campos si se especificaron\r\n    if (fields && fields.length > 0) {\r\n      const filtered: any = {};\r\n      fields.forEach(field => {\r\n        if (processed.hasOwnProperty(field)) {\r\n          filtered[field] = processed[field];\r\n        }\r\n      });\r\n      return filtered;\r\n    }\r\n\r\n    return processed;\r\n  }) || [];\r\n\r\n  return {\r\n    data: processedData,\r\n    total: processedData.length,\r\n    format,\r\n    exported_at: new Date().toISOString()\r\n  };\r\n}\r\n\r\nasync function importCategories(importData: any, options: any, userId: string): Promise<BulkOperationResult> {\r\n  const supabase = getSupabaseClient(true);\r\n  \r\n  if (!supabase) {\r\n    throw new Error('Cliente administrativo de Supabase no disponible');\r\n  }\r\n\r\n  const result: BulkOperationResult = {\r\n    success_count: 0,\r\n    error_count: 0,\r\n    errors: [],\r\n    processed_categories: []\r\n  };\r\n\r\n  // Obtener categor\xEDas existentes para verificar duplicados\r\n  const { data: existingCategories } = await supabase\r\n    .from('categories')\r\n    .select('id, name, slug');\r\n\r\n  const existingSlugs = new Set(existingCategories?.map(c => c.slug) || []);\r\n  const existingNames = new Set(existingCategories?.map(c => c.name.toLowerCase()) || []);\r\n\r\n  // Procesar cada categor\xEDa\r\n  for (let i = 0; i < importData.length; i++) {\r\n    const categoryData = importData[i];\r\n    \r\n    try {\r\n      // Generar slug si no existe\r\n      if (!categoryData.slug) {\r\n        categoryData.slug = categoryData.name\r\n          .toLowerCase()\r\n          .replace(/[^a-z0-9]+/g, '-')\r\n          .replace(/(^-|-$)/g, '');\r\n      }\r\n\r\n      // Verificar duplicados\r\n      const isDuplicateSlug = existingSlugs.has(categoryData.slug);\r\n      const isDuplicateName = existingNames.has(categoryData.name.toLowerCase());\r\n\r\n      if ((isDuplicateSlug || isDuplicateName) && options?.skip_duplicates) {\r\n        result.errors.push({\r\n          category_name: categoryData.name,\r\n          error: 'Categor\xEDa duplicada (omitida)'\r\n        });\r\n        result.error_count++;\r\n        continue;\r\n      }\r\n\r\n      // Resolver parent_id si se proporciona parent_slug\r\n      let parentId = null;\r\n      if (categoryData.parent_slug) {\r\n        const parentCategory = existingCategories?.find(c => c.slug === categoryData.parent_slug);\r\n        if (parentCategory) {\r\n          parentId = parentCategory.id;\r\n        } else {\r\n          result.errors.push({\r\n            category_name: categoryData.name,\r\n            error: `Categor\xEDa padre no encontrada: ${categoryData.parent_slug}`\r\n          });\r\n          result.error_count++;\r\n          continue;\r\n        }\r\n      }\r\n\r\n      const insertData = {\r\n        name: categoryData.name,\r\n        slug: categoryData.slug,\r\n        description: categoryData.description || null,\r\n        parent_id: parentId,\r\n        is_active: categoryData.is_active ?? true,\r\n        is_featured: categoryData.is_featured ?? false,\r\n        sort_order: categoryData.sort_order ?? 0,\r\n        meta_title: categoryData.meta_title || null,\r\n        meta_description: categoryData.meta_description || null,\r\n        meta_keywords: categoryData.meta_keywords || null,\r\n        created_at: new Date().toISOString(),\r\n        updated_at: new Date().toISOString()\r\n      };\r\n\r\n      if (isDuplicateSlug && options?.update_existing) {\r\n        // Actualizar categor\xEDa existente\r\n        const existingCategory = existingCategories?.find(c => c.slug === categoryData.slug);\r\n        if (existingCategory) {\r\n          const { data: updatedCategory, error } = await supabase\r\n            .from('categories')\r\n            .update(insertData)\r\n            .eq('id', existingCategory.id)\r\n            .select()\r\n            .single();\r\n\r\n          if (error) {\r\n            result.errors.push({\r\n              category_name: categoryData.name,\r\n              error: `Error actualizando: ${error.message}`\r\n            });\r\n            result.error_count++;\r\n          } else {\r\n            result.processed_categories.push(updatedCategory);\r\n            result.success_count++;\r\n          }\r\n        }\r\n      } else {\r\n        // Crear nueva categor\xEDa\r\n        const { data: newCategory, error } = await supabase\r\n          .from('categories')\r\n          .insert(insertData)\r\n          .select()\r\n          .single();\r\n\r\n        if (error) {\r\n          result.errors.push({\r\n            category_name: categoryData.name,\r\n            error: `Error creando: ${error.message}`\r\n          });\r\n          result.error_count++;\r\n        } else {\r\n          result.processed_categories.push(newCategory);\r\n          result.success_count++;\r\n          existingSlugs.add(newCategory.slug);\r\n          existingNames.add(newCategory.name.toLowerCase());\r\n        }\r\n      }\r\n\r\n    } catch (error: any) {\r\n      result.errors.push({\r\n        category_name: categoryData.name || `Fila ${i + 1}`,\r\n        error: error.message || 'Error desconocido'\r\n      });\r\n      result.error_count++;\r\n    }\r\n  }\r\n\r\n  // Registrar auditor\xEDa\r\n  if (result.success_count > 0) {\r\n    await logBulkAuditAction('import', result.processed_categories.map(c => c.id), userId, {\r\n      action: 'import',\r\n      options,\r\n      result: {\r\n        success_count: result.success_count,\r\n        error_count: result.error_count\r\n      }\r\n    });\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nasync function checkCircularHierarchy(categoryId: string, parentId: string): Promise<boolean> {\r\n  const supabase = getSupabaseClient(true);\r\n  \r\n  if (!supabase) {\r\n    return false;\r\n  }\r\n\r\n  if (categoryId === parentId) {\r\n    return true;\r\n  }\r\n\r\n  let currentParentId = parentId;\r\n  const visited = new Set<string>();\r\n\r\n  while (currentParentId && !visited.has(currentParentId)) {\r\n    visited.add(currentParentId);\r\n\r\n    if (currentParentId === categoryId) {\r\n      return true;\r\n    }\r\n\r\n    const { data: parent } = await supabase\r\n      .from('categories')\r\n      .select('parent_id')\r\n      .eq('id', currentParentId)\r\n      .single();\r\n\r\n    currentParentId = parent?.parent_id;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nasync function logBulkAuditAction(action: string, categoryIds: string[], userId: string, details?: any): Promise<void> {\r\n  try {\r\n    const supabase = getSupabaseClient(true);\r\n    if (!supabase) {return;}\r\n\r\n    const auditEntries = categoryIds.map(categoryId => ({\r\n      table_name: 'categories',\r\n      record_id: categoryId,\r\n      action: `bulk_${action}`,\r\n      user_id: userId,\r\n      old_values: null,\r\n      new_values: details || null,\r\n      ip_address: null,\r\n      user_agent: null,\r\n      created_at: new Date().toISOString()\r\n    }));\r\n\r\n    await supabase.from('audit_logs').insert(auditEntries);\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.AUDIT, 'Error registrando auditor\xEDa masiva', { error, action, categoryIds });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// GET /api/admin/categories/bulk - Exportar categor\xEDas (Admin)\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      RATE_LIMIT_CONFIGS.admin,\r\n      'admin-categories-bulk-export'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: rateLimitResult.message },\r\n        { status: 429 }\r\n      );\r\n      // Rate limit headers are handled internally\r\n      return response;\r\n    }\r\n\r\n    // Verificar autenticaci\xF3n de admin\r\n    const authResult = await requireAdminAuth(request, ['categories_read']);\r\n\r\n    if (!authResult.success) {\r\n      return NextResponse.json(\r\n        {\r\n          error: authResult.error,\r\n          code: authResult.code,\r\n          enterprise: true,\r\n          timestamp: new Date().toISOString()\r\n        },\r\n        { status: authResult.status || 401 }\r\n      );\r\n    }\r\n\r\n    const url = new URL(request.url);\r\n    const format = url.searchParams.get('format') || 'csv';\r\n    const fields = url.searchParams.get('fields')?.split(',');\r\n    \r\n    // Parsear filtros\r\n    const filters: any = {};\r\n    if (url.searchParams.get('is_active') !== null) {\r\n      filters.is_active = url.searchParams.get('is_active') === 'true';\r\n    }\r\n    if (url.searchParams.get('is_featured') !== null) {\r\n      filters.is_featured = url.searchParams.get('is_featured') === 'true';\r\n    }\r\n    if (url.searchParams.get('parent_id')) {\r\n      filters.parent_id = url.searchParams.get('parent_id');\r\n    }\r\n    if (url.searchParams.get('search')) {\r\n      filters.search = url.searchParams.get('search');\r\n    }\r\n\r\n    // Validar par\xE1metros\r\n    const exportParams = BulkCategoryExportSchema.parse({\r\n      format,\r\n      filters,\r\n      fields\r\n    });\r\n\r\n    // Exportar categor\xEDas\r\n    const exportResult = await exportCategories(exportParams.filters, exportParams.format, exportParams.fields);\r\n\r\n    // Registrar m\xE9tricas\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/categories/bulk',\r\n      method: 'GET',\r\n      statusCode: 200,\r\n      responseTime: Date.now() - startTime,\r\n      userId: authResult.user?.id\r\n    });\r\n\r\n    const response: ApiResponse<typeof exportResult> = {\r\n      data: exportResult,\r\n      success: true,\r\n      message: `${exportResult.total} categor\xEDas exportadas en formato ${format}`,\r\n      meta: {\r\n        total: exportResult.total\r\n      }\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response);\r\n    // Rate limit headers are handled internally\r\n    return nextResponse;\r\n\r\n  } catch (error: any) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en GET /api/admin/categories/bulk', { error });\r\n\r\n    // Registrar m\xE9tricas de error\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/categories/bulk',\r\n      method: 'GET',\r\n      statusCode: 500,\r\n      responseTime: Date.now() - startTime,\r\n      error: error.message || 'Unknown error'\r\n    });\r\n\r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: error.message || 'Error interno del servidor'\r\n    };\r\n\r\n    return NextResponse.json(errorResponse, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// POST /api/admin/categories/bulk - Operaciones masivas e importaci\xF3n (Admin)\r\n// ===================================\r\nexport async function POST(request: NextRequest) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting m\xE1s restrictivo para operaciones masivas\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,\r\n        maxRequests: Math.floor(RATE_LIMIT_CONFIGS.admin.maxRequests / 4),\r\n        message: 'Demasiadas operaciones masivas'\r\n      },\r\n      'admin-categories-bulk-operations'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: rateLimitResult.message },\r\n        { status: 429 }\r\n      );\r\n      // Rate limit headers are handled internally\r\n      return response;\r\n    }\r\n\r\n    // Verificar autenticaci\xF3n de admin\r\n    const authResult = await requireAdminAuth(request, ['categories_create', 'categories_update', 'categories_delete']);\r\n\r\n    if (!authResult.success) {\r\n      return NextResponse.json(\r\n        {\r\n          error: authResult.error,\r\n          code: authResult.code,\r\n          enterprise: true,\r\n          timestamp: new Date().toISOString()\r\n        },\r\n        { status: authResult.status || 401 }\r\n      );\r\n    }\r\n\r\n    const body = await request.json();\r\n    const { operation } = body;\r\n\r\n    let result: BulkOperationResult;\r\n    let message: string;\r\n\r\n    if (operation === 'import') {\r\n      // Importaci\xF3n de categor\xEDas\r\n      const importParams = BulkCategoryImportSchema.parse(body);\r\n      result = await importCategories(importParams.data, importParams.options, authResult.user?.id!);\r\n      message = `Importaci\xF3n completada: ${result.success_count} categor\xEDas procesadas, ${result.error_count} errores`;\r\n    } else {\r\n      // Operaciones masivas est\xE1ndar\r\n      const bulkParams = BulkCategoryActionSchema.parse(body);\r\n      result = await executeBulkAction(\r\n        bulkParams.action,\r\n        bulkParams.category_ids,\r\n        bulkParams.data,\r\n        authResult.user?.id\r\n      );\r\n      message = `Operaci\xF3n '${bulkParams.action}' completada: ${result.success_count} categor\xEDas procesadas, ${result.error_count} errores`;\r\n    }\r\n\r\n    // Registrar m\xE9tricas\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/categories/bulk',\r\n      method: 'POST',\r\n      statusCode: 200,\r\n      responseTime: Date.now() - startTime,\r\n      userId: authResult.user?.id\r\n    });\r\n\r\n    const response: ApiResponse<BulkOperationResult> = {\r\n      data: result,\r\n      success: true,\r\n      message,\r\n      meta: {\r\n        total: result.success_count + result.error_count,\r\n        processed: result.success_count,\r\n        errors: result.errors\r\n      }\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response);\r\n    // Rate limit headers are handled internally\r\n    return nextResponse;\r\n\r\n  } catch (error: any) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en POST /api/admin/categories/bulk', { error });\r\n\r\n    // Registrar m\xE9tricas de error\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/categories/bulk',\r\n      method: 'POST',\r\n      statusCode: 500,\r\n      responseTime: Date.now() - startTime,\r\n      error: error.message || 'Unknown error'\r\n    });\r\n\r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: error.message || 'Error interno del servidor'\r\n    };\r\n\r\n    return NextResponse.json(errorResponse, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "RATE_LIMIT_CONFIGS", "admin", "windowMs", "maxRequests", "BulkCategoryActionSchema", "z", "object", "action", "enum", "category_ids", "array", "string", "uuid", "min", "max", "data", "parent_id", "optional", "nullable", "sort_order", "number", "int", "is_active", "boolean", "is_featured", "BulkCategoryExportSchema", "format", "default", "filters", "search", "fields", "BulkCategoryImportSchema", "name", "slug", "description", "parent_slug", "meta_title", "meta_description", "meta_keywords", "options", "update_existing", "skip_duplicates", "getCategoriesByIds", "categoryIds", "supabase", "createClient", "categories", "error", "from", "select", "in", "Error", "message", "executeBulkAction", "userId", "getSupabaseClient", "result", "success_count", "error_count", "errors", "processed_categories", "foundIds", "map", "c", "id", "notFoundIds", "filter", "includes", "forEach", "push", "category_id", "length", "updateData", "shouldUpdate", "categoryId", "isCircular", "checkCircularHierarchy", "category_name", "find", "i", "sortOrder", "update", "updated_at", "Date", "toISOString", "eq", "categoriesWithProducts", "product_count", "category", "subcategories", "parentIds", "Set", "s", "parentId", "parentCategory", "childCount", "categoriesToDelete", "some", "e", "deletedCategories", "deleteError", "delete", "Object", "keys", "idsToUpdate", "updatedCategories", "updateError", "logBulkAuditAction", "exportCategories", "query", "undefined", "is", "or", "order", "ascending", "processedData", "processed", "image_url", "parent_name", "parent", "created_at", "filtered", "field", "hasOwnProperty", "total", "exported_at", "importCategories", "importData", "existingCategories", "existingSlugs", "existingNames", "toLowerCase", "categoryData", "replace", "isDuplicateSlug", "has", "isDuplicateName", "insertData", "existingCategory", "updatedCategory", "single", "newCategory", "insert", "add", "currentParentId", "visited", "details", "auditEntries", "table_name", "record_id", "user_id", "old_values", "new_values", "ip_address", "user_agent", "logger", "log", "LogLevel", "ERROR", "LogCategory", "AUDIT", "request", "startTime", "now", "rateLimitResult", "checkRateLimit", "success", "response", "NextResponse", "json", "status", "authResult", "requireAdminAuth", "code", "enterprise", "timestamp", "url", "URL", "searchParams", "get", "split", "exportParams", "parse", "exportResult", "metricsCollector", "recordApiCall", "endpoint", "method", "statusCode", "responseTime", "user", "meta", "nextResponse", "API", "errorResponse", "Math", "floor", "body", "operation", "importParams", "bulkParams"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "17c7dc2b55e19f8b9cfc4b85564d689a3194981c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_16ch85ahy2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_16ch85ahy2();
cov_16ch85ahy2().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_16ch85ahy2().f[0]++;
  cov_16ch85ahy2().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_16ch85ahy2().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_16ch85ahy2().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_16ch85ahy2().f[1]++;
    cov_16ch85ahy2().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_16ch85ahy2().f[2]++;
    cov_16ch85ahy2().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_16ch85ahy2().f[3]++;
    cov_16ch85ahy2().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_16ch85ahy2().s[7]++, require("next/server"));
const _zod =
/* istanbul ignore next */
(cov_16ch85ahy2().s[8]++, require("zod"));
const _server1 =
/* istanbul ignore next */
(cov_16ch85ahy2().s[9]++, require("../../../../../lib/integrations/supabase/server"));
const _adminauth =
/* istanbul ignore next */
(cov_16ch85ahy2().s[10]++, require("../../../../../lib/auth/admin-auth"));
const _ratelimiter =
/* istanbul ignore next */
(cov_16ch85ahy2().s[11]++, require("../../../../../lib/enterprise/rate-limiter"));
const _logger =
/* istanbul ignore next */
(cov_16ch85ahy2().s[12]++, require("../../../../../lib/enterprise/logger"));
const _metrics =
/* istanbul ignore next */
(cov_16ch85ahy2().s[13]++, require("../../../../../lib/enterprise/metrics"));
const runtime =
/* istanbul ignore next */
(cov_16ch85ahy2().s[14]++, 'nodejs');
// ===================================
// CONFIGURACIÃN
// ===================================
const RATE_LIMIT_CONFIGS =
/* istanbul ignore next */
(cov_16ch85ahy2().s[15]++, {
  admin: {
    windowMs: 15 * 60 * 1000,
    maxRequests: 50
  }
});
// ===================================
// ESQUEMAS DE VALIDACIÃN
// ===================================
const BulkCategoryActionSchema =
/* istanbul ignore next */
(cov_16ch85ahy2().s[16]++, _zod.z.object({
  action: _zod.z.enum(['activate', 'deactivate', 'feature', 'unfeature', 'delete', 'update_parent', 'reorder']),
  category_ids: _zod.z.array(_zod.z.string().uuid('ID de categorÃ­a invÃ¡lido')).min(1, 'Debe seleccionar al menos una categorÃ­a').max(100, 'MÃ¡ximo 100 categorÃ­as por operaciÃ³n'),
  data: _zod.z.object({
    parent_id: _zod.z.string().uuid('ID de categorÃ­a padre invÃ¡lido').optional().nullable(),
    sort_order: _zod.z.number().int().min(0).optional(),
    is_active: _zod.z.boolean().optional(),
    is_featured: _zod.z.boolean().optional()
  }).optional()
}));
const BulkCategoryExportSchema =
/* istanbul ignore next */
(cov_16ch85ahy2().s[17]++, _zod.z.object({
  format: _zod.z.enum(['csv', 'json', 'xlsx']).default('csv'),
  filters: _zod.z.object({
    is_active: _zod.z.boolean().optional(),
    is_featured: _zod.z.boolean().optional(),
    parent_id: _zod.z.string().uuid().optional().nullable(),
    search: _zod.z.string().optional()
  }).optional(),
  fields: _zod.z.array(_zod.z.string()).optional()
}));
const BulkCategoryImportSchema =
/* istanbul ignore next */
(cov_16ch85ahy2().s[18]++, _zod.z.object({
  format: _zod.z.enum(['csv', 'json']),
  data: _zod.z.array(_zod.z.object({
    name: _zod.z.string().min(1, 'El nombre es requerido'),
    slug: _zod.z.string().optional(),
    description: _zod.z.string().optional(),
    parent_slug: _zod.z.string().optional(),
    is_active: _zod.z.boolean().default(true),
    is_featured: _zod.z.boolean().default(false),
    sort_order: _zod.z.number().int().min(0).default(0),
    meta_title: _zod.z.string().optional(),
    meta_description: _zod.z.string().optional(),
    meta_keywords: _zod.z.string().optional()
  })).min(1, 'Debe proporcionar al menos una categorÃ­a').max(1000, 'MÃ¡ximo 1000 categorÃ­as por importaciÃ³n'),
  options: _zod.z.object({
    update_existing: _zod.z.boolean().default(false),
    skip_duplicates: _zod.z.boolean().default(true)
  }).optional()
}));
// ===================================
// FUNCIONES AUXILIARES
// ===================================
async function getCategoriesByIds(categoryIds) {
  /* istanbul ignore next */
  cov_16ch85ahy2().f[4]++;
  const supabase =
  /* istanbul ignore next */
  (cov_16ch85ahy2().s[19]++, await (0, _server1.createClient)());
  const {
    data: categories,
    error
  } =
  /* istanbul ignore next */
  (cov_16ch85ahy2().s[20]++, await supabase.from('categories').select('*').in('id', categoryIds));
  /* istanbul ignore next */
  cov_16ch85ahy2().s[21]++;
  if (error) {
    /* istanbul ignore next */
    cov_16ch85ahy2().b[0][0]++;
    cov_16ch85ahy2().s[22]++;
    throw new Error(`Error obteniendo categorÃ­as: ${error.message}`);
  } else
  /* istanbul ignore next */
  {
    cov_16ch85ahy2().b[0][1]++;
  }
  cov_16ch85ahy2().s[23]++;
  return /* istanbul ignore next */(cov_16ch85ahy2().b[1][0]++, categories) ||
  /* istanbul ignore next */
  (cov_16ch85ahy2().b[1][1]++, []);
}
async function executeBulkAction(action, categoryIds, data, userId) {
  /* istanbul ignore next */
  cov_16ch85ahy2().f[5]++;
  const supabase =
  /* istanbul ignore next */
  (cov_16ch85ahy2().s[24]++, getSupabaseClient(true));
  /* istanbul ignore next */
  cov_16ch85ahy2().s[25]++;
  if (!supabase) {
    /* istanbul ignore next */
    cov_16ch85ahy2().b[2][0]++;
    cov_16ch85ahy2().s[26]++;
    throw new Error('Cliente administrativo de Supabase no disponible');
  } else
  /* istanbul ignore next */
  {
    cov_16ch85ahy2().b[2][1]++;
  }
  const result =
  /* istanbul ignore next */
  (cov_16ch85ahy2().s[27]++, {
    success_count: 0,
    error_count: 0,
    errors: [],
    processed_categories: []
  });
  // Obtener categorÃ­as existentes
  const categories =
  /* istanbul ignore next */
  (cov_16ch85ahy2().s[28]++, await getCategoriesByIds(categoryIds));
  const foundIds =
  /* istanbul ignore next */
  (cov_16ch85ahy2().s[29]++, categories.map(c => {
    /* istanbul ignore next */
    cov_16ch85ahy2().f[6]++;
    cov_16ch85ahy2().s[30]++;
    return c.id;
  }));
  const notFoundIds =
  /* istanbul ignore next */
  (cov_16ch85ahy2().s[31]++, categoryIds.filter(id => {
    /* istanbul ignore next */
    cov_16ch85ahy2().f[7]++;
    cov_16ch85ahy2().s[32]++;
    return !foundIds.includes(id);
  }));
  // Agregar errores para categorÃ­as no encontradas
  /* istanbul ignore next */
  cov_16ch85ahy2().s[33]++;
  notFoundIds.forEach(id => {
    /* istanbul ignore next */
    cov_16ch85ahy2().f[8]++;
    cov_16ch85ahy2().s[34]++;
    result.errors.push({
      category_id: id,
      error: 'CategorÃ­a no encontrada'
    });
    /* istanbul ignore next */
    cov_16ch85ahy2().s[35]++;
    result.error_count++;
  });
  /* istanbul ignore next */
  cov_16ch85ahy2().s[36]++;
  if (foundIds.length === 0) {
    /* istanbul ignore next */
    cov_16ch85ahy2().b[3][0]++;
    cov_16ch85ahy2().s[37]++;
    return result;
  } else
  /* istanbul ignore next */
  {
    cov_16ch85ahy2().b[3][1]++;
  }
  cov_16ch85ahy2().s[38]++;
  try {
    let updateData =
    /* istanbul ignore next */
    (cov_16ch85ahy2().s[39]++, {});
    let shouldUpdate =
    /* istanbul ignore next */
    (cov_16ch85ahy2().s[40]++, true);
    /* istanbul ignore next */
    cov_16ch85ahy2().s[41]++;
    switch (action) {
      case 'activate':
        /* istanbul ignore next */
        cov_16ch85ahy2().b[4][0]++;
        cov_16ch85ahy2().s[42]++;
        updateData = {
          is_active: true
        };
        /* istanbul ignore next */
        cov_16ch85ahy2().s[43]++;
        break;
      case 'deactivate':
        /* istanbul ignore next */
        cov_16ch85ahy2().b[4][1]++;
        cov_16ch85ahy2().s[44]++;
        updateData = {
          is_active: false
        };
        /* istanbul ignore next */
        cov_16ch85ahy2().s[45]++;
        break;
      case 'feature':
        /* istanbul ignore next */
        cov_16ch85ahy2().b[4][2]++;
        cov_16ch85ahy2().s[46]++;
        updateData = {
          is_featured: true
        };
        /* istanbul ignore next */
        cov_16ch85ahy2().s[47]++;
        break;
      case 'unfeature':
        /* istanbul ignore next */
        cov_16ch85ahy2().b[4][3]++;
        cov_16ch85ahy2().s[48]++;
        updateData = {
          is_featured: false
        };
        /* istanbul ignore next */
        cov_16ch85ahy2().s[49]++;
        break;
      case 'update_parent':
        /* istanbul ignore next */
        cov_16ch85ahy2().b[4][4]++;
        cov_16ch85ahy2().s[50]++;
        updateData = {
          parent_id:
          /* istanbul ignore next */
          (cov_16ch85ahy2().b[5][0]++, data?.parent_id) ||
          /* istanbul ignore next */
          (cov_16ch85ahy2().b[5][1]++, null)
        };
        // Verificar jerarquÃ­as circulares
        /* istanbul ignore next */
        cov_16ch85ahy2().s[51]++;
        if (data?.parent_id) {
          /* istanbul ignore next */
          cov_16ch85ahy2().b[6][0]++;
          cov_16ch85ahy2().s[52]++;
          for (const categoryId of foundIds) {
            const isCircular =
            /* istanbul ignore next */
            (cov_16ch85ahy2().s[53]++, await checkCircularHierarchy(categoryId, data.parent_id));
            /* istanbul ignore next */
            cov_16ch85ahy2().s[54]++;
            if (isCircular) {
              /* istanbul ignore next */
              cov_16ch85ahy2().b[7][0]++;
              cov_16ch85ahy2().s[55]++;
              result.errors.push({
                category_id: categoryId,
                category_name: categories.find(c => {
                  /* istanbul ignore next */
                  cov_16ch85ahy2().f[9]++;
                  cov_16ch85ahy2().s[56]++;
                  return c.id === categoryId;
                })?.name,
                error: 'CrearÃ­a una jerarquÃ­a circular'
              });
              /* istanbul ignore next */
              cov_16ch85ahy2().s[57]++;
              result.error_count++;
            } else
            /* istanbul ignore next */
            {
              cov_16ch85ahy2().b[7][1]++;
            }
          }
        } else
        /* istanbul ignore next */
        {
          cov_16ch85ahy2().b[6][1]++;
        }
        cov_16ch85ahy2().s[58]++;
        break;
      case 'reorder':
        /* istanbul ignore next */
        cov_16ch85ahy2().b[4][5]++;
        cov_16ch85ahy2().s[59]++;
        // Para reordenar, necesitamos manejar cada categorÃ­a individualmente
        shouldUpdate = false;
        /* istanbul ignore next */
        cov_16ch85ahy2().s[60]++;
        for (let i =
        /* istanbul ignore next */
        (cov_16ch85ahy2().s[61]++, 0); i < foundIds.length; i++) {
          const categoryId =
          /* istanbul ignore next */
          (cov_16ch85ahy2().s[62]++, foundIds[i]);
          const sortOrder =
          /* istanbul ignore next */
          (cov_16ch85ahy2().s[63]++, (
          /* istanbul ignore next */
          (cov_16ch85ahy2().b[8][0]++, data?.sort_order) ||
          /* istanbul ignore next */
          (cov_16ch85ahy2().b[8][1]++, 0)) + i);
          const {
            error
          } =
          /* istanbul ignore next */
          (cov_16ch85ahy2().s[64]++, await supabase.from('categories').update({
            sort_order: sortOrder,
            updated_at: new Date().toISOString()
          }).eq('id', categoryId));
          /* istanbul ignore next */
          cov_16ch85ahy2().s[65]++;
          if (error) {
            /* istanbul ignore next */
            cov_16ch85ahy2().b[9][0]++;
            cov_16ch85ahy2().s[66]++;
            result.errors.push({
              category_id: categoryId,
              category_name: categories.find(c => {
                /* istanbul ignore next */
                cov_16ch85ahy2().f[10]++;
                cov_16ch85ahy2().s[67]++;
                return c.id === categoryId;
              })?.name,
              error: error.message
            });
            /* istanbul ignore next */
            cov_16ch85ahy2().s[68]++;
            result.error_count++;
          } else {
            /* istanbul ignore next */
            cov_16ch85ahy2().b[9][1]++;
            cov_16ch85ahy2().s[69]++;
            result.success_count++;
          }
        }
        /* istanbul ignore next */
        cov_16ch85ahy2().s[70]++;
        break;
      case 'delete':
        /* istanbul ignore next */
        cov_16ch85ahy2().b[4][6]++;
        // Verificar que las categorÃ­as no tengan productos o subcategorÃ­as
        const categoriesWithProducts =
        /* istanbul ignore next */
        (cov_16ch85ahy2().s[71]++, categories.filter(c => {
          /* istanbul ignore next */
          cov_16ch85ahy2().f[11]++;
          cov_16ch85ahy2().s[72]++;
          return c.product_count > 0;
        }));
        /* istanbul ignore next */
        cov_16ch85ahy2().s[73]++;
        if (categoriesWithProducts.length > 0) {
          /* istanbul ignore next */
          cov_16ch85ahy2().b[10][0]++;
          cov_16ch85ahy2().s[74]++;
          categoriesWithProducts.forEach(category => {
            /* istanbul ignore next */
            cov_16ch85ahy2().f[12]++;
            cov_16ch85ahy2().s[75]++;
            result.errors.push({
              category_id: category.id,
              category_name: category.name,
              error: `Tiene ${category.product_count} productos asociados`
            });
            /* istanbul ignore next */
            cov_16ch85ahy2().s[76]++;
            result.error_count++;
          });
        } else
        /* istanbul ignore next */
        {
          cov_16ch85ahy2().b[10][1]++;
        }
        // Verificar subcategorÃ­as
        const {
          data: subcategories
        } =
        /* istanbul ignore next */
        (cov_16ch85ahy2().s[77]++, await supabase.from('categories').select('id, name, parent_id').in('parent_id', foundIds));
        /* istanbul ignore next */
        cov_16ch85ahy2().s[78]++;
        if (
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[12][0]++, subcategories) &&
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[12][1]++, subcategories.length > 0)) {
          /* istanbul ignore next */
          cov_16ch85ahy2().b[11][0]++;
          const parentIds =
          /* istanbul ignore next */
          (cov_16ch85ahy2().s[79]++, [...new Set(subcategories.map(s => {
            /* istanbul ignore next */
            cov_16ch85ahy2().f[13]++;
            cov_16ch85ahy2().s[80]++;
            return s.parent_id;
          }))]);
          /* istanbul ignore next */
          cov_16ch85ahy2().s[81]++;
          parentIds.forEach(parentId => {
            /* istanbul ignore next */
            cov_16ch85ahy2().f[14]++;
            const parentCategory =
            /* istanbul ignore next */
            (cov_16ch85ahy2().s[82]++, categories.find(c => {
              /* istanbul ignore next */
              cov_16ch85ahy2().f[15]++;
              cov_16ch85ahy2().s[83]++;
              return c.id === parentId;
            }));
            const childCount =
            /* istanbul ignore next */
            (cov_16ch85ahy2().s[84]++, subcategories.filter(s => {
              /* istanbul ignore next */
              cov_16ch85ahy2().f[16]++;
              cov_16ch85ahy2().s[85]++;
              return s.parent_id === parentId;
            }).length);
            /* istanbul ignore next */
            cov_16ch85ahy2().s[86]++;
            result.errors.push({
              category_id: parentId,
              category_name: parentCategory?.name,
              error: `Tiene ${childCount} subcategorÃ­as`
            });
            /* istanbul ignore next */
            cov_16ch85ahy2().s[87]++;
            result.error_count++;
          });
        } else
        /* istanbul ignore next */
        {
          cov_16ch85ahy2().b[11][1]++;
        }
        // Eliminar solo las categorÃ­as que no tienen restricciones
        const categoriesToDelete =
        /* istanbul ignore next */
        (cov_16ch85ahy2().s[88]++, foundIds.filter(id => {
          /* istanbul ignore next */
          cov_16ch85ahy2().f[17]++;
          cov_16ch85ahy2().s[89]++;
          return !result.errors.some(e => {
            /* istanbul ignore next */
            cov_16ch85ahy2().f[18]++;
            cov_16ch85ahy2().s[90]++;
            return e.category_id === id;
          });
        }));
        /* istanbul ignore next */
        cov_16ch85ahy2().s[91]++;
        if (categoriesToDelete.length > 0) {
          /* istanbul ignore next */
          cov_16ch85ahy2().b[13][0]++;
          const {
            data: deletedCategories,
            error: deleteError
          } =
          /* istanbul ignore next */
          (cov_16ch85ahy2().s[92]++, await supabase.from('categories').delete().in('id', categoriesToDelete).select());
          /* istanbul ignore next */
          cov_16ch85ahy2().s[93]++;
          if (deleteError) {
            /* istanbul ignore next */
            cov_16ch85ahy2().b[14][0]++;
            cov_16ch85ahy2().s[94]++;
            categoriesToDelete.forEach(id => {
              /* istanbul ignore next */
              cov_16ch85ahy2().f[19]++;
              cov_16ch85ahy2().s[95]++;
              result.errors.push({
                category_id: id,
                category_name: categories.find(c => {
                  /* istanbul ignore next */
                  cov_16ch85ahy2().f[20]++;
                  cov_16ch85ahy2().s[96]++;
                  return c.id === id;
                })?.name,
                error: deleteError.message
              });
              /* istanbul ignore next */
              cov_16ch85ahy2().s[97]++;
              result.error_count++;
            });
          } else {
            /* istanbul ignore next */
            cov_16ch85ahy2().b[14][1]++;
            cov_16ch85ahy2().s[98]++;
            result.success_count =
            /* istanbul ignore next */
            (cov_16ch85ahy2().b[15][0]++, deletedCategories?.length) ||
            /* istanbul ignore next */
            (cov_16ch85ahy2().b[15][1]++, 0);
            /* istanbul ignore next */
            cov_16ch85ahy2().s[99]++;
            result.processed_categories =
            /* istanbul ignore next */
            (cov_16ch85ahy2().b[16][0]++, deletedCategories) ||
            /* istanbul ignore next */
            (cov_16ch85ahy2().b[16][1]++, []);
          }
        } else
        /* istanbul ignore next */
        {
          cov_16ch85ahy2().b[13][1]++;
        }
        cov_16ch85ahy2().s[100]++;
        shouldUpdate = false;
        /* istanbul ignore next */
        cov_16ch85ahy2().s[101]++;
        break;
      default:
        /* istanbul ignore next */
        cov_16ch85ahy2().b[4][7]++;
        cov_16ch85ahy2().s[102]++;
        throw new Error(`AcciÃ³n '${action}' no implementada`);
    }
    /* istanbul ignore next */
    cov_16ch85ahy2().s[103]++;
    if (
    /* istanbul ignore next */
    (cov_16ch85ahy2().b[18][0]++, shouldUpdate) &&
    /* istanbul ignore next */
    (cov_16ch85ahy2().b[18][1]++, Object.keys(updateData).length > 0)) {
      /* istanbul ignore next */
      cov_16ch85ahy2().b[17][0]++;
      // Filtrar IDs que no tuvieron errores
      const idsToUpdate =
      /* istanbul ignore next */
      (cov_16ch85ahy2().s[104]++, foundIds.filter(id => {
        /* istanbul ignore next */
        cov_16ch85ahy2().f[21]++;
        cov_16ch85ahy2().s[105]++;
        return !result.errors.some(e => {
          /* istanbul ignore next */
          cov_16ch85ahy2().f[22]++;
          cov_16ch85ahy2().s[106]++;
          return e.category_id === id;
        });
      }));
      /* istanbul ignore next */
      cov_16ch85ahy2().s[107]++;
      if (idsToUpdate.length > 0) {
        /* istanbul ignore next */
        cov_16ch85ahy2().b[19][0]++;
        const {
          data: updatedCategories,
          error: updateError
        } =
        /* istanbul ignore next */
        (cov_16ch85ahy2().s[108]++, await supabase.from('categories').update({
          ...updateData,
          updated_at: new Date().toISOString()
        }).in('id', idsToUpdate).select());
        /* istanbul ignore next */
        cov_16ch85ahy2().s[109]++;
        if (updateError) {
          /* istanbul ignore next */
          cov_16ch85ahy2().b[20][0]++;
          cov_16ch85ahy2().s[110]++;
          idsToUpdate.forEach(id => {
            /* istanbul ignore next */
            cov_16ch85ahy2().f[23]++;
            cov_16ch85ahy2().s[111]++;
            result.errors.push({
              category_id: id,
              category_name: categories.find(c => {
                /* istanbul ignore next */
                cov_16ch85ahy2().f[24]++;
                cov_16ch85ahy2().s[112]++;
                return c.id === id;
              })?.name,
              error: updateError.message
            });
            /* istanbul ignore next */
            cov_16ch85ahy2().s[113]++;
            result.error_count++;
          });
        } else {
          /* istanbul ignore next */
          cov_16ch85ahy2().b[20][1]++;
          cov_16ch85ahy2().s[114]++;
          result.success_count =
          /* istanbul ignore next */
          (cov_16ch85ahy2().b[21][0]++, updatedCategories?.length) ||
          /* istanbul ignore next */
          (cov_16ch85ahy2().b[21][1]++, 0);
          /* istanbul ignore next */
          cov_16ch85ahy2().s[115]++;
          result.processed_categories =
          /* istanbul ignore next */
          (cov_16ch85ahy2().b[22][0]++, updatedCategories) ||
          /* istanbul ignore next */
          (cov_16ch85ahy2().b[22][1]++, []);
        }
      } else
      /* istanbul ignore next */
      {
        cov_16ch85ahy2().b[19][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_16ch85ahy2().b[17][1]++;
    }
    // Registrar auditorÃ­a para operaciones exitosas
    cov_16ch85ahy2().s[116]++;
    if (
    /* istanbul ignore next */
    (cov_16ch85ahy2().b[24][0]++, userId) &&
    /* istanbul ignore next */
    (cov_16ch85ahy2().b[24][1]++, result.success_count > 0)) {
      /* istanbul ignore next */
      cov_16ch85ahy2().b[23][0]++;
      cov_16ch85ahy2().s[117]++;
      await logBulkAuditAction(action, result.processed_categories.map(c => {
        /* istanbul ignore next */
        cov_16ch85ahy2().f[25]++;
        cov_16ch85ahy2().s[118]++;
        return c.id;
      }), userId, {
        action,
        data,
        result: {
          success_count: result.success_count,
          error_count: result.error_count
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_16ch85ahy2().b[23][1]++;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_16ch85ahy2().s[119]++;
    // Si hay un error general, marcarlo para todas las categorÃ­as
    foundIds.forEach(id => {
      /* istanbul ignore next */
      cov_16ch85ahy2().f[26]++;
      cov_16ch85ahy2().s[120]++;
      if (!result.errors.some(e => {
        /* istanbul ignore next */
        cov_16ch85ahy2().f[27]++;
        cov_16ch85ahy2().s[121]++;
        return e.category_id === id;
      })) {
        /* istanbul ignore next */
        cov_16ch85ahy2().b[25][0]++;
        cov_16ch85ahy2().s[122]++;
        result.errors.push({
          category_id: id,
          category_name: categories.find(c => {
            /* istanbul ignore next */
            cov_16ch85ahy2().f[28]++;
            cov_16ch85ahy2().s[123]++;
            return c.id === id;
          })?.name,
          error:
          /* istanbul ignore next */
          (cov_16ch85ahy2().b[26][0]++, error.message) ||
          /* istanbul ignore next */
          (cov_16ch85ahy2().b[26][1]++, 'Error desconocido')
        });
        /* istanbul ignore next */
        cov_16ch85ahy2().s[124]++;
        result.error_count++;
      } else
      /* istanbul ignore next */
      {
        cov_16ch85ahy2().b[25][1]++;
      }
    });
  }
  /* istanbul ignore next */
  cov_16ch85ahy2().s[125]++;
  return result;
}
async function exportCategories(filters, format, fields) {
  /* istanbul ignore next */
  cov_16ch85ahy2().f[29]++;
  const supabase =
  /* istanbul ignore next */
  (cov_16ch85ahy2().s[126]++, getSupabaseClient(true));
  /* istanbul ignore next */
  cov_16ch85ahy2().s[127]++;
  if (!supabase) {
    /* istanbul ignore next */
    cov_16ch85ahy2().b[27][0]++;
    cov_16ch85ahy2().s[128]++;
    throw new Error('Cliente administrativo de Supabase no disponible');
  } else
  /* istanbul ignore next */
  {
    cov_16ch85ahy2().b[27][1]++;
  }
  let query =
  /* istanbul ignore next */
  (cov_16ch85ahy2().s[129]++, supabase.from('categories').select(`
      id,
      name,
      slug,
      description,
      image_url,
      parent_id,
      is_active,
      is_featured,
      sort_order,
      product_count,
      meta_title,
      meta_description,
      meta_keywords,
      created_at,
      updated_at,
      parent:parent_id(name, slug)
    `));
  // Aplicar filtros
  /* istanbul ignore next */
  cov_16ch85ahy2().s[130]++;
  if (filters?.is_active !== undefined) {
    /* istanbul ignore next */
    cov_16ch85ahy2().b[28][0]++;
    cov_16ch85ahy2().s[131]++;
    query = query.eq('is_active', filters.is_active);
  } else
  /* istanbul ignore next */
  {
    cov_16ch85ahy2().b[28][1]++;
  }
  cov_16ch85ahy2().s[132]++;
  if (filters?.is_featured !== undefined) {
    /* istanbul ignore next */
    cov_16ch85ahy2().b[29][0]++;
    cov_16ch85ahy2().s[133]++;
    query = query.eq('is_featured', filters.is_featured);
  } else
  /* istanbul ignore next */
  {
    cov_16ch85ahy2().b[29][1]++;
  }
  cov_16ch85ahy2().s[134]++;
  if (filters?.parent_id !== undefined) {
    /* istanbul ignore next */
    cov_16ch85ahy2().b[30][0]++;
    cov_16ch85ahy2().s[135]++;
    if (filters.parent_id === null) {
      /* istanbul ignore next */
      cov_16ch85ahy2().b[31][0]++;
      cov_16ch85ahy2().s[136]++;
      query = query.is('parent_id', null);
    } else {
      /* istanbul ignore next */
      cov_16ch85ahy2().b[31][1]++;
      cov_16ch85ahy2().s[137]++;
      query = query.eq('parent_id', filters.parent_id);
    }
  } else
  /* istanbul ignore next */
  {
    cov_16ch85ahy2().b[30][1]++;
  }
  cov_16ch85ahy2().s[138]++;
  if (filters?.search) {
    /* istanbul ignore next */
    cov_16ch85ahy2().b[32][0]++;
    cov_16ch85ahy2().s[139]++;
    query = query.or(`name.ilike.%${filters.search}%,description.ilike.%${filters.search}%`);
  } else
  /* istanbul ignore next */
  {
    cov_16ch85ahy2().b[32][1]++;
  }
  const {
    data: categories,
    error
  } =
  /* istanbul ignore next */
  (cov_16ch85ahy2().s[140]++, await query.order('sort_order', {
    ascending: true
  }));
  /* istanbul ignore next */
  cov_16ch85ahy2().s[141]++;
  if (error) {
    /* istanbul ignore next */
    cov_16ch85ahy2().b[33][0]++;
    cov_16ch85ahy2().s[142]++;
    throw new Error(`Error exportando categorÃ­as: ${error.message}`);
  } else
  /* istanbul ignore next */
  {
    cov_16ch85ahy2().b[33][1]++;
  }
  // Procesar datos segÃºn el formato
  const processedData =
  /* istanbul ignore next */
  (cov_16ch85ahy2().s[143]++,
  /* istanbul ignore next */
  (cov_16ch85ahy2().b[34][0]++, categories?.map(category => {
    /* istanbul ignore next */
    cov_16ch85ahy2().f[30]++;
    const processed =
    /* istanbul ignore next */
    (cov_16ch85ahy2().s[144]++, {
      id: category.id,
      name: category.name,
      slug: category.slug,
      description:
      /* istanbul ignore next */
      (cov_16ch85ahy2().b[35][0]++, category.description) ||
      /* istanbul ignore next */
      (cov_16ch85ahy2().b[35][1]++, ''),
      image_url:
      /* istanbul ignore next */
      (cov_16ch85ahy2().b[36][0]++, category.image_url) ||
      /* istanbul ignore next */
      (cov_16ch85ahy2().b[36][1]++, ''),
      parent_name:
      /* istanbul ignore next */
      (cov_16ch85ahy2().b[37][0]++, category.parent?.name) ||
      /* istanbul ignore next */
      (cov_16ch85ahy2().b[37][1]++, ''),
      is_active: category.is_active,
      is_featured: category.is_featured,
      sort_order: category.sort_order,
      product_count: category.product_count,
      meta_title:
      /* istanbul ignore next */
      (cov_16ch85ahy2().b[38][0]++, category.meta_title) ||
      /* istanbul ignore next */
      (cov_16ch85ahy2().b[38][1]++, ''),
      meta_description:
      /* istanbul ignore next */
      (cov_16ch85ahy2().b[39][0]++, category.meta_description) ||
      /* istanbul ignore next */
      (cov_16ch85ahy2().b[39][1]++, ''),
      meta_keywords:
      /* istanbul ignore next */
      (cov_16ch85ahy2().b[40][0]++, category.meta_keywords) ||
      /* istanbul ignore next */
      (cov_16ch85ahy2().b[40][1]++, ''),
      created_at: category.created_at,
      updated_at: category.updated_at
    });
    // Filtrar campos si se especificaron
    /* istanbul ignore next */
    cov_16ch85ahy2().s[145]++;
    if (
    /* istanbul ignore next */
    (cov_16ch85ahy2().b[42][0]++, fields) &&
    /* istanbul ignore next */
    (cov_16ch85ahy2().b[42][1]++, fields.length > 0)) {
      /* istanbul ignore next */
      cov_16ch85ahy2().b[41][0]++;
      const filtered =
      /* istanbul ignore next */
      (cov_16ch85ahy2().s[146]++, {});
      /* istanbul ignore next */
      cov_16ch85ahy2().s[147]++;
      fields.forEach(field => {
        /* istanbul ignore next */
        cov_16ch85ahy2().f[31]++;
        cov_16ch85ahy2().s[148]++;
        if (processed.hasOwnProperty(field)) {
          /* istanbul ignore next */
          cov_16ch85ahy2().b[43][0]++;
          cov_16ch85ahy2().s[149]++;
          filtered[field] = processed[field];
        } else
        /* istanbul ignore next */
        {
          cov_16ch85ahy2().b[43][1]++;
        }
      });
      /* istanbul ignore next */
      cov_16ch85ahy2().s[150]++;
      return filtered;
    } else
    /* istanbul ignore next */
    {
      cov_16ch85ahy2().b[41][1]++;
    }
    cov_16ch85ahy2().s[151]++;
    return processed;
  })) ||
  /* istanbul ignore next */
  (cov_16ch85ahy2().b[34][1]++, []));
  /* istanbul ignore next */
  cov_16ch85ahy2().s[152]++;
  return {
    data: processedData,
    total: processedData.length,
    format,
    exported_at: new Date().toISOString()
  };
}
async function importCategories(importData, options, userId) {
  /* istanbul ignore next */
  cov_16ch85ahy2().f[32]++;
  const supabase =
  /* istanbul ignore next */
  (cov_16ch85ahy2().s[153]++, getSupabaseClient(true));
  /* istanbul ignore next */
  cov_16ch85ahy2().s[154]++;
  if (!supabase) {
    /* istanbul ignore next */
    cov_16ch85ahy2().b[44][0]++;
    cov_16ch85ahy2().s[155]++;
    throw new Error('Cliente administrativo de Supabase no disponible');
  } else
  /* istanbul ignore next */
  {
    cov_16ch85ahy2().b[44][1]++;
  }
  const result =
  /* istanbul ignore next */
  (cov_16ch85ahy2().s[156]++, {
    success_count: 0,
    error_count: 0,
    errors: [],
    processed_categories: []
  });
  // Obtener categorÃ­as existentes para verificar duplicados
  const {
    data: existingCategories
  } =
  /* istanbul ignore next */
  (cov_16ch85ahy2().s[157]++, await supabase.from('categories').select('id, name, slug'));
  const existingSlugs =
  /* istanbul ignore next */
  (cov_16ch85ahy2().s[158]++, new Set(
  /* istanbul ignore next */
  (cov_16ch85ahy2().b[45][0]++, existingCategories?.map(c => {
    /* istanbul ignore next */
    cov_16ch85ahy2().f[33]++;
    cov_16ch85ahy2().s[159]++;
    return c.slug;
  })) ||
  /* istanbul ignore next */
  (cov_16ch85ahy2().b[45][1]++, [])));
  const existingNames =
  /* istanbul ignore next */
  (cov_16ch85ahy2().s[160]++, new Set(
  /* istanbul ignore next */
  (cov_16ch85ahy2().b[46][0]++, existingCategories?.map(c => {
    /* istanbul ignore next */
    cov_16ch85ahy2().f[34]++;
    cov_16ch85ahy2().s[161]++;
    return c.name.toLowerCase();
  })) ||
  /* istanbul ignore next */
  (cov_16ch85ahy2().b[46][1]++, [])));
  // Procesar cada categorÃ­a
  /* istanbul ignore next */
  cov_16ch85ahy2().s[162]++;
  for (let i =
  /* istanbul ignore next */
  (cov_16ch85ahy2().s[163]++, 0); i < importData.length; i++) {
    const categoryData =
    /* istanbul ignore next */
    (cov_16ch85ahy2().s[164]++, importData[i]);
    /* istanbul ignore next */
    cov_16ch85ahy2().s[165]++;
    try {
      /* istanbul ignore next */
      cov_16ch85ahy2().s[166]++;
      // Generar slug si no existe
      if (!categoryData.slug) {
        /* istanbul ignore next */
        cov_16ch85ahy2().b[47][0]++;
        cov_16ch85ahy2().s[167]++;
        categoryData.slug = categoryData.name.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '');
      } else
      /* istanbul ignore next */
      {
        cov_16ch85ahy2().b[47][1]++;
      }
      // Verificar duplicados
      const isDuplicateSlug =
      /* istanbul ignore next */
      (cov_16ch85ahy2().s[168]++, existingSlugs.has(categoryData.slug));
      const isDuplicateName =
      /* istanbul ignore next */
      (cov_16ch85ahy2().s[169]++, existingNames.has(categoryData.name.toLowerCase()));
      /* istanbul ignore next */
      cov_16ch85ahy2().s[170]++;
      if ((
      /* istanbul ignore next */
      (cov_16ch85ahy2().b[49][0]++, isDuplicateSlug) ||
      /* istanbul ignore next */
      (cov_16ch85ahy2().b[49][1]++, isDuplicateName)) &&
      /* istanbul ignore next */
      (cov_16ch85ahy2().b[49][2]++, options?.skip_duplicates)) {
        /* istanbul ignore next */
        cov_16ch85ahy2().b[48][0]++;
        cov_16ch85ahy2().s[171]++;
        result.errors.push({
          category_name: categoryData.name,
          error: 'CategorÃ­a duplicada (omitida)'
        });
        /* istanbul ignore next */
        cov_16ch85ahy2().s[172]++;
        result.error_count++;
        /* istanbul ignore next */
        cov_16ch85ahy2().s[173]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_16ch85ahy2().b[48][1]++;
      }
      // Resolver parent_id si se proporciona parent_slug
      let parentId =
      /* istanbul ignore next */
      (cov_16ch85ahy2().s[174]++, null);
      /* istanbul ignore next */
      cov_16ch85ahy2().s[175]++;
      if (categoryData.parent_slug) {
        /* istanbul ignore next */
        cov_16ch85ahy2().b[50][0]++;
        const parentCategory =
        /* istanbul ignore next */
        (cov_16ch85ahy2().s[176]++, existingCategories?.find(c => {
          /* istanbul ignore next */
          cov_16ch85ahy2().f[35]++;
          cov_16ch85ahy2().s[177]++;
          return c.slug === categoryData.parent_slug;
        }));
        /* istanbul ignore next */
        cov_16ch85ahy2().s[178]++;
        if (parentCategory) {
          /* istanbul ignore next */
          cov_16ch85ahy2().b[51][0]++;
          cov_16ch85ahy2().s[179]++;
          parentId = parentCategory.id;
        } else {
          /* istanbul ignore next */
          cov_16ch85ahy2().b[51][1]++;
          cov_16ch85ahy2().s[180]++;
          result.errors.push({
            category_name: categoryData.name,
            error: `CategorÃ­a padre no encontrada: ${categoryData.parent_slug}`
          });
          /* istanbul ignore next */
          cov_16ch85ahy2().s[181]++;
          result.error_count++;
          /* istanbul ignore next */
          cov_16ch85ahy2().s[182]++;
          continue;
        }
      } else
      /* istanbul ignore next */
      {
        cov_16ch85ahy2().b[50][1]++;
      }
      const insertData =
      /* istanbul ignore next */
      (cov_16ch85ahy2().s[183]++, {
        name: categoryData.name,
        slug: categoryData.slug,
        description:
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[52][0]++, categoryData.description) ||
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[52][1]++, null),
        parent_id: parentId,
        is_active:
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[53][0]++, categoryData.is_active) ??
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[53][1]++, true),
        is_featured:
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[54][0]++, categoryData.is_featured) ??
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[54][1]++, false),
        sort_order:
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[55][0]++, categoryData.sort_order) ??
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[55][1]++, 0),
        meta_title:
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[56][0]++, categoryData.meta_title) ||
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[56][1]++, null),
        meta_description:
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[57][0]++, categoryData.meta_description) ||
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[57][1]++, null),
        meta_keywords:
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[58][0]++, categoryData.meta_keywords) ||
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[58][1]++, null),
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString()
      });
      /* istanbul ignore next */
      cov_16ch85ahy2().s[184]++;
      if (
      /* istanbul ignore next */
      (cov_16ch85ahy2().b[60][0]++, isDuplicateSlug) &&
      /* istanbul ignore next */
      (cov_16ch85ahy2().b[60][1]++, options?.update_existing)) {
        /* istanbul ignore next */
        cov_16ch85ahy2().b[59][0]++;
        // Actualizar categorÃ­a existente
        const existingCategory =
        /* istanbul ignore next */
        (cov_16ch85ahy2().s[185]++, existingCategories?.find(c => {
          /* istanbul ignore next */
          cov_16ch85ahy2().f[36]++;
          cov_16ch85ahy2().s[186]++;
          return c.slug === categoryData.slug;
        }));
        /* istanbul ignore next */
        cov_16ch85ahy2().s[187]++;
        if (existingCategory) {
          /* istanbul ignore next */
          cov_16ch85ahy2().b[61][0]++;
          const {
            data: updatedCategory,
            error
          } =
          /* istanbul ignore next */
          (cov_16ch85ahy2().s[188]++, await supabase.from('categories').update(insertData).eq('id', existingCategory.id).select().single());
          /* istanbul ignore next */
          cov_16ch85ahy2().s[189]++;
          if (error) {
            /* istanbul ignore next */
            cov_16ch85ahy2().b[62][0]++;
            cov_16ch85ahy2().s[190]++;
            result.errors.push({
              category_name: categoryData.name,
              error: `Error actualizando: ${error.message}`
            });
            /* istanbul ignore next */
            cov_16ch85ahy2().s[191]++;
            result.error_count++;
          } else {
            /* istanbul ignore next */
            cov_16ch85ahy2().b[62][1]++;
            cov_16ch85ahy2().s[192]++;
            result.processed_categories.push(updatedCategory);
            /* istanbul ignore next */
            cov_16ch85ahy2().s[193]++;
            result.success_count++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_16ch85ahy2().b[61][1]++;
        }
      } else {
        /* istanbul ignore next */
        cov_16ch85ahy2().b[59][1]++;
        // Crear nueva categorÃ­a
        const {
          data: newCategory,
          error
        } =
        /* istanbul ignore next */
        (cov_16ch85ahy2().s[194]++, await supabase.from('categories').insert(insertData).select().single());
        /* istanbul ignore next */
        cov_16ch85ahy2().s[195]++;
        if (error) {
          /* istanbul ignore next */
          cov_16ch85ahy2().b[63][0]++;
          cov_16ch85ahy2().s[196]++;
          result.errors.push({
            category_name: categoryData.name,
            error: `Error creando: ${error.message}`
          });
          /* istanbul ignore next */
          cov_16ch85ahy2().s[197]++;
          result.error_count++;
        } else {
          /* istanbul ignore next */
          cov_16ch85ahy2().b[63][1]++;
          cov_16ch85ahy2().s[198]++;
          result.processed_categories.push(newCategory);
          /* istanbul ignore next */
          cov_16ch85ahy2().s[199]++;
          result.success_count++;
          /* istanbul ignore next */
          cov_16ch85ahy2().s[200]++;
          existingSlugs.add(newCategory.slug);
          /* istanbul ignore next */
          cov_16ch85ahy2().s[201]++;
          existingNames.add(newCategory.name.toLowerCase());
        }
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_16ch85ahy2().s[202]++;
      result.errors.push({
        category_name:
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[64][0]++, categoryData.name) ||
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[64][1]++, `Fila ${i + 1}`),
        error:
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[65][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[65][1]++, 'Error desconocido')
      });
      /* istanbul ignore next */
      cov_16ch85ahy2().s[203]++;
      result.error_count++;
    }
  }
  // Registrar auditorÃ­a
  /* istanbul ignore next */
  cov_16ch85ahy2().s[204]++;
  if (result.success_count > 0) {
    /* istanbul ignore next */
    cov_16ch85ahy2().b[66][0]++;
    cov_16ch85ahy2().s[205]++;
    await logBulkAuditAction('import', result.processed_categories.map(c => {
      /* istanbul ignore next */
      cov_16ch85ahy2().f[37]++;
      cov_16ch85ahy2().s[206]++;
      return c.id;
    }), userId, {
      action: 'import',
      options,
      result: {
        success_count: result.success_count,
        error_count: result.error_count
      }
    });
  } else
  /* istanbul ignore next */
  {
    cov_16ch85ahy2().b[66][1]++;
  }
  cov_16ch85ahy2().s[207]++;
  return result;
}
async function checkCircularHierarchy(categoryId, parentId) {
  /* istanbul ignore next */
  cov_16ch85ahy2().f[38]++;
  const supabase =
  /* istanbul ignore next */
  (cov_16ch85ahy2().s[208]++, getSupabaseClient(true));
  /* istanbul ignore next */
  cov_16ch85ahy2().s[209]++;
  if (!supabase) {
    /* istanbul ignore next */
    cov_16ch85ahy2().b[67][0]++;
    cov_16ch85ahy2().s[210]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_16ch85ahy2().b[67][1]++;
  }
  cov_16ch85ahy2().s[211]++;
  if (categoryId === parentId) {
    /* istanbul ignore next */
    cov_16ch85ahy2().b[68][0]++;
    cov_16ch85ahy2().s[212]++;
    return true;
  } else
  /* istanbul ignore next */
  {
    cov_16ch85ahy2().b[68][1]++;
  }
  let currentParentId =
  /* istanbul ignore next */
  (cov_16ch85ahy2().s[213]++, parentId);
  const visited =
  /* istanbul ignore next */
  (cov_16ch85ahy2().s[214]++, new Set());
  /* istanbul ignore next */
  cov_16ch85ahy2().s[215]++;
  while (
  /* istanbul ignore next */
  (cov_16ch85ahy2().b[69][0]++, currentParentId) &&
  /* istanbul ignore next */
  (cov_16ch85ahy2().b[69][1]++, !visited.has(currentParentId))) {
    /* istanbul ignore next */
    cov_16ch85ahy2().s[216]++;
    visited.add(currentParentId);
    /* istanbul ignore next */
    cov_16ch85ahy2().s[217]++;
    if (currentParentId === categoryId) {
      /* istanbul ignore next */
      cov_16ch85ahy2().b[70][0]++;
      cov_16ch85ahy2().s[218]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_16ch85ahy2().b[70][1]++;
    }
    const {
      data: parent
    } =
    /* istanbul ignore next */
    (cov_16ch85ahy2().s[219]++, await supabase.from('categories').select('parent_id').eq('id', currentParentId).single());
    /* istanbul ignore next */
    cov_16ch85ahy2().s[220]++;
    currentParentId = parent?.parent_id;
  }
  /* istanbul ignore next */
  cov_16ch85ahy2().s[221]++;
  return false;
}
async function logBulkAuditAction(action, categoryIds, userId, details) {
  /* istanbul ignore next */
  cov_16ch85ahy2().f[39]++;
  cov_16ch85ahy2().s[222]++;
  try {
    const supabase =
    /* istanbul ignore next */
    (cov_16ch85ahy2().s[223]++, getSupabaseClient(true));
    /* istanbul ignore next */
    cov_16ch85ahy2().s[224]++;
    if (!supabase) {
      /* istanbul ignore next */
      cov_16ch85ahy2().b[71][0]++;
      cov_16ch85ahy2().s[225]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_16ch85ahy2().b[71][1]++;
    }
    const auditEntries =
    /* istanbul ignore next */
    (cov_16ch85ahy2().s[226]++, categoryIds.map(categoryId => {
      /* istanbul ignore next */
      cov_16ch85ahy2().f[40]++;
      cov_16ch85ahy2().s[227]++;
      return {
        table_name: 'categories',
        record_id: categoryId,
        action: `bulk_${action}`,
        user_id: userId,
        old_values: null,
        new_values:
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[72][0]++, details) ||
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[72][1]++, null),
        ip_address: null,
        user_agent: null,
        created_at: new Date().toISOString()
      };
    }));
    /* istanbul ignore next */
    cov_16ch85ahy2().s[228]++;
    await supabase.from('audit_logs').insert(auditEntries);
  } catch (error) {
    /* istanbul ignore next */
    cov_16ch85ahy2().s[229]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.AUDIT, 'Error registrando auditorÃ­a masiva', {
      error,
      action,
      categoryIds
    });
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_16ch85ahy2().f[41]++;
  const startTime =
  /* istanbul ignore next */
  (cov_16ch85ahy2().s[230]++, Date.now());
  /* istanbul ignore next */
  cov_16ch85ahy2().s[231]++;
  try {
    // Rate limiting
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_16ch85ahy2().s[232]++, await (0, _ratelimiter.checkRateLimit)(request, RATE_LIMIT_CONFIGS.admin, 'admin-categories-bulk-export'));
    /* istanbul ignore next */
    cov_16ch85ahy2().s[233]++;
    if (!rateLimitResult.success) {
      /* istanbul ignore next */
      cov_16ch85ahy2().b[73][0]++;
      const response =
      /* istanbul ignore next */
      (cov_16ch85ahy2().s[234]++, _server.NextResponse.json({
        error: rateLimitResult.message
      }, {
        status: 429
      }));
      // Rate limit headers are handled internally
      /* istanbul ignore next */
      cov_16ch85ahy2().s[235]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_16ch85ahy2().b[73][1]++;
    }
    // Verificar autenticaciÃ³n de admin
    const authResult =
    /* istanbul ignore next */
    (cov_16ch85ahy2().s[236]++, await (0, _adminauth.requireAdminAuth)(request, ['categories_read']));
    /* istanbul ignore next */
    cov_16ch85ahy2().s[237]++;
    if (!authResult.success) {
      /* istanbul ignore next */
      cov_16ch85ahy2().b[74][0]++;
      cov_16ch85ahy2().s[238]++;
      return _server.NextResponse.json({
        error: authResult.error,
        code: authResult.code,
        enterprise: true,
        timestamp: new Date().toISOString()
      }, {
        status:
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[75][0]++, authResult.status) ||
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[75][1]++, 401)
      });
    } else
    /* istanbul ignore next */
    {
      cov_16ch85ahy2().b[74][1]++;
    }
    const url =
    /* istanbul ignore next */
    (cov_16ch85ahy2().s[239]++, new URL(request.url));
    const format =
    /* istanbul ignore next */
    (cov_16ch85ahy2().s[240]++,
    /* istanbul ignore next */
    (cov_16ch85ahy2().b[76][0]++, url.searchParams.get('format')) ||
    /* istanbul ignore next */
    (cov_16ch85ahy2().b[76][1]++, 'csv'));
    const fields =
    /* istanbul ignore next */
    (cov_16ch85ahy2().s[241]++, url.searchParams.get('fields')?.split(','));
    // Parsear filtros
    const filters =
    /* istanbul ignore next */
    (cov_16ch85ahy2().s[242]++, {});
    /* istanbul ignore next */
    cov_16ch85ahy2().s[243]++;
    if (url.searchParams.get('is_active') !== null) {
      /* istanbul ignore next */
      cov_16ch85ahy2().b[77][0]++;
      cov_16ch85ahy2().s[244]++;
      filters.is_active = url.searchParams.get('is_active') === 'true';
    } else
    /* istanbul ignore next */
    {
      cov_16ch85ahy2().b[77][1]++;
    }
    cov_16ch85ahy2().s[245]++;
    if (url.searchParams.get('is_featured') !== null) {
      /* istanbul ignore next */
      cov_16ch85ahy2().b[78][0]++;
      cov_16ch85ahy2().s[246]++;
      filters.is_featured = url.searchParams.get('is_featured') === 'true';
    } else
    /* istanbul ignore next */
    {
      cov_16ch85ahy2().b[78][1]++;
    }
    cov_16ch85ahy2().s[247]++;
    if (url.searchParams.get('parent_id')) {
      /* istanbul ignore next */
      cov_16ch85ahy2().b[79][0]++;
      cov_16ch85ahy2().s[248]++;
      filters.parent_id = url.searchParams.get('parent_id');
    } else
    /* istanbul ignore next */
    {
      cov_16ch85ahy2().b[79][1]++;
    }
    cov_16ch85ahy2().s[249]++;
    if (url.searchParams.get('search')) {
      /* istanbul ignore next */
      cov_16ch85ahy2().b[80][0]++;
      cov_16ch85ahy2().s[250]++;
      filters.search = url.searchParams.get('search');
    } else
    /* istanbul ignore next */
    {
      cov_16ch85ahy2().b[80][1]++;
    }
    // Validar parÃ¡metros
    const exportParams =
    /* istanbul ignore next */
    (cov_16ch85ahy2().s[251]++, BulkCategoryExportSchema.parse({
      format,
      filters,
      fields
    }));
    // Exportar categorÃ­as
    const exportResult =
    /* istanbul ignore next */
    (cov_16ch85ahy2().s[252]++, await exportCategories(exportParams.filters, exportParams.format, exportParams.fields));
    // Registrar mÃ©tricas
    /* istanbul ignore next */
    cov_16ch85ahy2().s[253]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/categories/bulk',
      method: 'GET',
      statusCode: 200,
      responseTime: Date.now() - startTime,
      userId: authResult.user?.id
    });
    const response =
    /* istanbul ignore next */
    (cov_16ch85ahy2().s[254]++, {
      data: exportResult,
      success: true,
      message: `${exportResult.total} categorÃ­as exportadas en formato ${format}`,
      meta: {
        total: exportResult.total
      }
    });
    const nextResponse =
    /* istanbul ignore next */
    (cov_16ch85ahy2().s[255]++, _server.NextResponse.json(response));
    // Rate limit headers are handled internally
    /* istanbul ignore next */
    cov_16ch85ahy2().s[256]++;
    return nextResponse;
  } catch (error) {
    /* istanbul ignore next */
    cov_16ch85ahy2().s[257]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en GET /api/admin/categories/bulk', {
      error
    });
    // Registrar mÃ©tricas de error
    /* istanbul ignore next */
    cov_16ch85ahy2().s[258]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/categories/bulk',
      method: 'GET',
      statusCode: 500,
      responseTime: Date.now() - startTime,
      error:
      /* istanbul ignore next */
      (cov_16ch85ahy2().b[81][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_16ch85ahy2().b[81][1]++, 'Unknown error')
    });
    const errorResponse =
    /* istanbul ignore next */
    (cov_16ch85ahy2().s[259]++, {
      data: null,
      success: false,
      error:
      /* istanbul ignore next */
      (cov_16ch85ahy2().b[82][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_16ch85ahy2().b[82][1]++, 'Error interno del servidor')
    });
    /* istanbul ignore next */
    cov_16ch85ahy2().s[260]++;
    return _server.NextResponse.json(errorResponse, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_16ch85ahy2().f[42]++;
  const startTime =
  /* istanbul ignore next */
  (cov_16ch85ahy2().s[261]++, Date.now());
  /* istanbul ignore next */
  cov_16ch85ahy2().s[262]++;
  try {
    // Rate limiting mÃ¡s restrictivo para operaciones masivas
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_16ch85ahy2().s[263]++, await (0, _ratelimiter.checkRateLimit)(request, {
      windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,
      maxRequests: Math.floor(RATE_LIMIT_CONFIGS.admin.maxRequests / 4),
      message: 'Demasiadas operaciones masivas'
    }, 'admin-categories-bulk-operations'));
    /* istanbul ignore next */
    cov_16ch85ahy2().s[264]++;
    if (!rateLimitResult.success) {
      /* istanbul ignore next */
      cov_16ch85ahy2().b[83][0]++;
      const response =
      /* istanbul ignore next */
      (cov_16ch85ahy2().s[265]++, _server.NextResponse.json({
        error: rateLimitResult.message
      }, {
        status: 429
      }));
      // Rate limit headers are handled internally
      /* istanbul ignore next */
      cov_16ch85ahy2().s[266]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_16ch85ahy2().b[83][1]++;
    }
    // Verificar autenticaciÃ³n de admin
    const authResult =
    /* istanbul ignore next */
    (cov_16ch85ahy2().s[267]++, await (0, _adminauth.requireAdminAuth)(request, ['categories_create', 'categories_update', 'categories_delete']));
    /* istanbul ignore next */
    cov_16ch85ahy2().s[268]++;
    if (!authResult.success) {
      /* istanbul ignore next */
      cov_16ch85ahy2().b[84][0]++;
      cov_16ch85ahy2().s[269]++;
      return _server.NextResponse.json({
        error: authResult.error,
        code: authResult.code,
        enterprise: true,
        timestamp: new Date().toISOString()
      }, {
        status:
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[85][0]++, authResult.status) ||
        /* istanbul ignore next */
        (cov_16ch85ahy2().b[85][1]++, 401)
      });
    } else
    /* istanbul ignore next */
    {
      cov_16ch85ahy2().b[84][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_16ch85ahy2().s[270]++, await request.json());
    const {
      operation
    } =
    /* istanbul ignore next */
    (cov_16ch85ahy2().s[271]++, body);
    let result;
    let message;
    /* istanbul ignore next */
    cov_16ch85ahy2().s[272]++;
    if (operation === 'import') {
      /* istanbul ignore next */
      cov_16ch85ahy2().b[86][0]++;
      // ImportaciÃ³n de categorÃ­as
      const importParams =
      /* istanbul ignore next */
      (cov_16ch85ahy2().s[273]++, BulkCategoryImportSchema.parse(body));
      /* istanbul ignore next */
      cov_16ch85ahy2().s[274]++;
      result = await importCategories(importParams.data, importParams.options, authResult.user?.id);
      /* istanbul ignore next */
      cov_16ch85ahy2().s[275]++;
      message = `ImportaciÃ³n completada: ${result.success_count} categorÃ­as procesadas, ${result.error_count} errores`;
    } else {
      /* istanbul ignore next */
      cov_16ch85ahy2().b[86][1]++;
      // Operaciones masivas estÃ¡ndar
      const bulkParams =
      /* istanbul ignore next */
      (cov_16ch85ahy2().s[276]++, BulkCategoryActionSchema.parse(body));
      /* istanbul ignore next */
      cov_16ch85ahy2().s[277]++;
      result = await executeBulkAction(bulkParams.action, bulkParams.category_ids, bulkParams.data, authResult.user?.id);
      /* istanbul ignore next */
      cov_16ch85ahy2().s[278]++;
      message = `OperaciÃ³n '${bulkParams.action}' completada: ${result.success_count} categorÃ­as procesadas, ${result.error_count} errores`;
    }
    // Registrar mÃ©tricas
    /* istanbul ignore next */
    cov_16ch85ahy2().s[279]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/categories/bulk',
      method: 'POST',
      statusCode: 200,
      responseTime: Date.now() - startTime,
      userId: authResult.user?.id
    });
    const response =
    /* istanbul ignore next */
    (cov_16ch85ahy2().s[280]++, {
      data: result,
      success: true,
      message,
      meta: {
        total: result.success_count + result.error_count,
        processed: result.success_count,
        errors: result.errors
      }
    });
    const nextResponse =
    /* istanbul ignore next */
    (cov_16ch85ahy2().s[281]++, _server.NextResponse.json(response));
    // Rate limit headers are handled internally
    /* istanbul ignore next */
    cov_16ch85ahy2().s[282]++;
    return nextResponse;
  } catch (error) {
    /* istanbul ignore next */
    cov_16ch85ahy2().s[283]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en POST /api/admin/categories/bulk', {
      error
    });
    // Registrar mÃ©tricas de error
    /* istanbul ignore next */
    cov_16ch85ahy2().s[284]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/categories/bulk',
      method: 'POST',
      statusCode: 500,
      responseTime: Date.now() - startTime,
      error:
      /* istanbul ignore next */
      (cov_16ch85ahy2().b[87][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_16ch85ahy2().b[87][1]++, 'Unknown error')
    });
    const errorResponse =
    /* istanbul ignore next */
    (cov_16ch85ahy2().s[285]++, {
      data: null,
      success: false,
      error:
      /* istanbul ignore next */
      (cov_16ch85ahy2().b[88][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_16ch85ahy2().b[88][1]++, 'Error interno del servidor')
    });
    /* istanbul ignore next */
    cov_16ch85ahy2().s[286]++;
    return _server.NextResponse.json(errorResponse, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,