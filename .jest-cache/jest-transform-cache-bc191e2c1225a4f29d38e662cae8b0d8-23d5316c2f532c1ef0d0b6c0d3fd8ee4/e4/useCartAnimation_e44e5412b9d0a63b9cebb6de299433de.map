{"version":3,"names":["cov_1rg31l9jkm","actualCoverage","s","ANIMATION_DURATIONS","f","useCartAnimation","useProductAnimation","options","b","showSuccessMessage","autoOpenCart","animationDuration","isAnimating","setIsAnimating","_react","useState","showSuccess","setShowSuccess","openCartModal","_CartSidebarModalContext","useCartModalContext","triggerCartAnimation","useCallback","setTimeout","animatingProducts","setAnimatingProducts","Set","animateProduct","productId","duration","prev","add","newSet","delete","isProductAnimating","has","CART_SHAKE","NOTIFICATION","BUTTON_ANIMATION"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useCartAnimation.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useCallback } from 'react';\r\nimport { useCartModalContext } from '@/app/context/CartSidebarModalContext';\r\n\r\nexport interface CartAnimationOptions {\r\n  showSuccessMessage?: boolean;\r\n  autoOpenCart?: boolean;\r\n  animationDuration?: number;\r\n}\r\n\r\nexport const useCartAnimation = (options: CartAnimationOptions = {}) => {\r\n  const {\r\n    showSuccessMessage = true,\r\n    autoOpenCart = false,\r\n    animationDuration = 1000,\r\n  } = options;\r\n\r\n  const [isAnimating, setIsAnimating] = useState(false);\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const { openCartModal } = useCartModalContext();\r\n\r\n  const triggerCartAnimation = useCallback(async () => {\r\n    setIsAnimating(true);\r\n    \r\n    // Mostrar animación de éxito si está habilitada\r\n    if (showSuccessMessage) {\r\n      setTimeout(() => {\r\n        setShowSuccess(true);\r\n      }, 200);\r\n    }\r\n\r\n    // Abrir carrito automáticamente si está habilitado\r\n    if (autoOpenCart) {\r\n      setTimeout(() => {\r\n        openCartModal();\r\n      }, 600);\r\n    }\r\n\r\n    // Resetear estados después de la animación\r\n    setTimeout(() => {\r\n      setIsAnimating(false);\r\n      setShowSuccess(false);\r\n    }, animationDuration);\r\n\r\n  }, [showSuccessMessage, autoOpenCart, animationDuration, openCartModal]);\r\n\r\n  return {\r\n    isAnimating,\r\n    showSuccess,\r\n    triggerCartAnimation,\r\n  };\r\n};\r\n\r\n// Hook para animaciones de productos específicas\r\nexport const useProductAnimation = () => {\r\n  const [animatingProducts, setAnimatingProducts] = useState<Set<string>>(new Set());\r\n\r\n  const animateProduct = useCallback((productId: string, duration = 1000) => {\r\n    setAnimatingProducts(prev => new Set(prev).add(productId));\r\n    \r\n    setTimeout(() => {\r\n      setAnimatingProducts(prev => {\r\n        const newSet = new Set(prev);\r\n        newSet.delete(productId);\r\n        return newSet;\r\n      });\r\n    }, duration);\r\n  }, []);\r\n\r\n  const isProductAnimating = useCallback((productId: string) => {\r\n    return animatingProducts.has(productId);\r\n  }, [animatingProducts]);\r\n\r\n  return {\r\n    animateProduct,\r\n    isProductAnimating,\r\n  };\r\n};\r\n\r\n// Tipos para la notificación del carrito\r\nexport interface CartNotificationData {\r\n  show: boolean;\r\n  productName?: string;\r\n  productImage?: string;\r\n}\r\n\r\n// Constantes para las animaciones\r\nexport const ANIMATION_DURATIONS = {\r\n  CART_SHAKE: 500,\r\n  NOTIFICATION: 4000,\r\n  BUTTON_ANIMATION: 1000,\r\n} as const;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}