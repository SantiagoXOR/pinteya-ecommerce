c3f6305ae22da71696c63ade36e96ef3
"use client";
"use strict";

/* istanbul ignore next */
function cov_flx8ecvxj() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\spinner.tsx";
  var hash = "b8707d4ca5936492d0728dd7ee223a7de1ce4b7a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\spinner.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 23
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 30
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "7": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 48
        }
      },
      "8": {
        start: {
          line: 24,
          column: 29
        },
        end: {
          line: 24,
          column: 72
        }
      },
      "9": {
        start: {
          line: 25,
          column: 15
        },
        end: {
          line: 25,
          column: 41
        }
      },
      "10": {
        start: {
          line: 26,
          column: 32
        },
        end: {
          line: 26,
          column: 67
        }
      },
      "11": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 51
        }
      },
      "12": {
        start: {
          line: 28,
          column: 39
        },
        end: {
          line: 28,
          column: 51
        }
      },
      "13": {
        start: {
          line: 29,
          column: 28
        },
        end: {
          line: 29,
          column: 41
        }
      },
      "14": {
        start: {
          line: 30,
          column: 27
        },
        end: {
          line: 30,
          column: 40
        }
      },
      "15": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 20
        }
      },
      "16": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 66
        }
      },
      "17": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "18": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 19
        }
      },
      "19": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "20": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 42,
          column: 10
        }
      },
      "21": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 53
        }
      },
      "22": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "23": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 30
        }
      },
      "24": {
        start: {
          line: 48,
          column: 17
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "25": {
        start: {
          line: 51,
          column: 32
        },
        end: {
          line: 51,
          column: 88
        }
      },
      "26": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "27": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "28": {
        start: {
          line: 54,
          column: 23
        },
        end: {
          line: 54,
          column: 95
        }
      },
      "29": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 59,
          column: 13
        }
      },
      "30": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 57
        }
      },
      "31": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 39
        }
      },
      "32": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 25
        }
      },
      "33": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "34": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 31
        }
      },
      "35": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 18
        }
      },
      "36": {
        start: {
          line: 68,
          column: 24
        },
        end: {
          line: 87,
          column: 2
        }
      },
      "37": {
        start: {
          line: 88,
          column: 30
        },
        end: {
          line: 103,
          column: 2
        }
      },
      "38": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 102,
          column: 7
        }
      },
      "39": {
        start: {
          line: 104,
          column: 0
        },
        end: {
          line: 104,
          column: 32
        }
      },
      "40": {
        start: {
          line: 105,
          column: 37
        },
        end: {
          line: 126,
          column: 2
        }
      },
      "41": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "42": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 20
        }
      },
      "43": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 125,
          column: 7
        }
      },
      "44": {
        start: {
          line: 127,
          column: 0
        },
        end: {
          line: 127,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 27
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 33
          }
        },
        loc: {
          start: {
            line: 27,
            column: 47
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 31,
            column: 39
          },
          end: {
            line: 31,
            column: 40
          }
        },
        loc: {
          start: {
            line: 31,
            column: 61
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "6": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 35,
            column: 9
          },
          end: {
            line: 35,
            column: 34
          }
        },
        loc: {
          start: {
            line: 35,
            column: 53
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 35
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 88,
            column: 48
          },
          end: {
            line: 88,
            column: 49
          }
        },
        loc: {
          start: {
            line: 88,
            column: 119
          },
          end: {
            line: 103,
            column: 1
          }
        },
        line: 88
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 105,
            column: 55
          },
          end: {
            line: 105,
            column: 56
          }
        },
        loc: {
          start: {
            line: 105,
            column: 113
          },
          end: {
            line: 126,
            column: 1
          }
        },
        line: 105
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 15
          },
          end: {
            line: 32,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 29
          },
          end: {
            line: 32,
            column: 45
          }
        }, {
          start: {
            line: 32,
            column: 48
          },
          end: {
            line: 32,
            column: 65
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 20
          }
        }, {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 27
          }
        }, {
          start: {
            line: 36,
            column: 31
          },
          end: {
            line: 36,
            column: 45
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 20
          }
        }, {
          start: {
            line: 39,
            column: 24
          },
          end: {
            line: 39,
            column: 47
          }
        }, {
          start: {
            line: 39,
            column: 51
          },
          end: {
            line: 39,
            column: 76
          }
        }],
        line: 39
      },
      "6": {
        loc: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "7": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 45,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 45,
            column: 13
          }
        }, {
          start: {
            line: 45,
            column: 17
          },
          end: {
            line: 45,
            column: 31
          }
        }],
        line: 45
      },
      "8": {
        loc: {
          start: {
            line: 51,
            column: 32
          },
          end: {
            line: 51,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 32
          },
          end: {
            line: 51,
            column: 53
          }
        }, {
          start: {
            line: 51,
            column: 57
          },
          end: {
            line: 51,
            column: 88
          }
        }],
        line: 51
      },
      "9": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "10": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 29
          }
        }, {
          start: {
            line: 53,
            column: 33
          },
          end: {
            line: 53,
            column: 79
          }
        }],
        line: 53
      },
      "11": {
        loc: {
          start: {
            line: 54,
            column: 23
          },
          end: {
            line: 54,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 54,
            column: 47
          },
          end: {
            line: 54,
            column: 88
          }
        }, {
          start: {
            line: 54,
            column: 91
          },
          end: {
            line: 54,
            column: 95
          }
        }],
        line: 54
      },
      "12": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: 57,
            column: 19
          },
          end: {
            line: 59,
            column: 13
          }
        }],
        line: 55
      },
      "13": {
        loc: {
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 55,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 55,
            column: 20
          }
        }, {
          start: {
            line: 55,
            column: 25
          },
          end: {
            line: 55,
            column: 33
          }
        }, {
          start: {
            line: 55,
            column: 37
          },
          end: {
            line: 55,
            column: 45
          }
        }],
        line: 55
      },
      "14": {
        loc: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "15": {
        loc: {
          start: {
            line: 88,
            column: 77
          },
          end: {
            line: 88,
            column: 99
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 88,
            column: 86
          },
          end: {
            line: 88,
            column: 99
          }
        }],
        line: 88
      },
      "16": {
        loc: {
          start: {
            line: 105,
            column: 58
          },
          end: {
            line: 105,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 105,
            column: 65
          },
          end: {
            line: 105,
            column: 69
          }
        }],
        line: 105
      },
      "17": {
        loc: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "18": {
        loc: {
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 122,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 119,
            column: 20
          }
        }, {
          start: {
            line: 119,
            column: 38
          },
          end: {
            line: 122,
            column: 18
          }
        }],
        line: 119
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\spinner.tsx"],
      sourcesContent: ["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nconst spinnerVariants = cva(\r\n  \"animate-spin rounded-full border-2 border-solid border-current border-r-transparent\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        sm: \"h-4 w-4\",\r\n        md: \"h-6 w-6\",\r\n        lg: \"h-8 w-8\",\r\n        xl: \"h-12 w-12\",\r\n      },\r\n      variant: {\r\n        default: \"text-primary\",\r\n        secondary: \"text-gray-500\",\r\n        white: \"text-white\",\r\n        muted: \"text-gray-400\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"md\",\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface SpinnerProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof spinnerVariants> {\r\n  /**\r\n   * Texto de accesibilidad para lectores de pantalla\r\n   */\r\n  srText?: string\r\n}\r\n\r\nconst Spinner = React.forwardRef<HTMLDivElement, SpinnerProps>(\r\n  ({ className, size, variant, srText = \"Cargando...\", ...props }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(spinnerVariants({ size, variant }), className)}\r\n        role=\"status\"\r\n        aria-label={srText}\r\n        {...props}\r\n      >\r\n        <span className=\"sr-only\">{srText}</span>\r\n      </div>\r\n    )\r\n  }\r\n)\r\nSpinner.displayName = \"Spinner\"\r\n\r\n/**\r\n * Componente de spinner con overlay para pantalla completa\r\n */\r\nexport interface SpinnerOverlayProps extends SpinnerProps {\r\n  /**\r\n   * Si se muestra el overlay\r\n   */\r\n  show?: boolean\r\n  /**\r\n   * Texto a mostrar debajo del spinner\r\n   */\r\n  text?: string\r\n}\r\n\r\nconst SpinnerOverlay = React.forwardRef<HTMLDivElement, SpinnerOverlayProps>(\r\n  ({ show = true, text, className, ...spinnerProps }, ref) => {\r\n    if (!show) {return null}\r\n\r\n    return (\r\n      <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm\">\r\n        <div className=\"flex flex-col items-center space-y-4 rounded-lg bg-white p-6 shadow-lg\">\r\n          <Spinner ref={ref} className={className} {...spinnerProps} />\r\n          {text && (\r\n            <p className=\"text-sm text-gray-600\">{text}</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n)\r\nSpinnerOverlay.displayName = \"SpinnerOverlay\"\r\n\r\nexport { Spinner, SpinnerOverlay, spinnerVariants }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["Spinner", "SpinnerOverlay", "spinnerVariants", "cva", "variants", "size", "sm", "md", "lg", "xl", "variant", "default", "secondary", "white", "muted", "defaultVariants", "React", "forwardRef", "className", "srText", "props", "ref", "div", "cn", "role", "aria-label", "span", "displayName", "show", "text", "spinnerProps", "p"],
      mappings: "AAAA;;;;;;;;;;;;QAwFSA;eAAAA;;QAASC;eAAAA;;QAAgBC;eAAAA;;;;+DAtFX;uBACJ;wCACoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEvC,MAAMA,kBAAkBC,IAAAA,2BAAG,EACzB,uFACA;IACEC,UAAU;QACRC,MAAM;YACJC,IAAI;YACJC,IAAI;YACJC,IAAI;YACJC,IAAI;QACN;QACAC,SAAS;YACPC,SAAS;YACTC,WAAW;YACXC,OAAO;YACPC,OAAO;QACT;IACF;IACAC,iBAAiB;QACfV,MAAM;QACNK,SAAS;IACX;AACF;AAYF,MAAMV,wBAAUgB,OAAMC,UAAU,CAC9B,CAAC,EAAEC,SAAS,EAAEb,IAAI,EAAEK,OAAO,EAAES,SAAS,aAAa,EAAE,GAAGC,OAAO,EAAEC;IAC/D,qBACE,qBAACC;QACCD,KAAKA;QACLH,WAAWK,IAAAA,SAAE,EAACrB,gBAAgB;YAAEG;YAAMK;QAAQ,IAAIQ;QAClDM,MAAK;QACLC,cAAYN;QACX,GAAGC,KAAK;kBAET,cAAA,qBAACM;YAAKR,WAAU;sBAAWC;;;AAGjC;AAEFnB,QAAQ2B,WAAW,GAAG;AAgBtB,MAAM1B,+BAAiBe,OAAMC,UAAU,CACrC,CAAC,EAAEW,OAAO,IAAI,EAAEC,IAAI,EAAEX,SAAS,EAAE,GAAGY,cAAc,EAAET;IAClD,IAAI,CAACO,MAAM;QAAC,OAAO;IAAI;IAEvB,qBACE,qBAACN;QAAIJ,WAAU;kBACb,cAAA,sBAACI;YAAIJ,WAAU;;8BACb,qBAAClB;oBAAQqB,KAAKA;oBAAKH,WAAWA;oBAAY,GAAGY,YAAY;;gBACxDD,sBACC,qBAACE;oBAAEb,WAAU;8BAAyBW;;;;;AAKhD;AAEF5B,eAAe0B,WAAW,GAAG"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b8707d4ca5936492d0728dd7ee223a7de1ce4b7a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_flx8ecvxj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_flx8ecvxj();
cov_flx8ecvxj().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_flx8ecvxj().f[0]++;
  cov_flx8ecvxj().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_flx8ecvxj().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_flx8ecvxj().s[3]++;
_export(exports, {
  get Spinner() {
    /* istanbul ignore next */
    cov_flx8ecvxj().f[1]++;
    cov_flx8ecvxj().s[4]++;
    return Spinner;
  },
  get SpinnerOverlay() {
    /* istanbul ignore next */
    cov_flx8ecvxj().f[2]++;
    cov_flx8ecvxj().s[5]++;
    return SpinnerOverlay;
  },
  get spinnerVariants() {
    /* istanbul ignore next */
    cov_flx8ecvxj().f[3]++;
    cov_flx8ecvxj().s[6]++;
    return spinnerVariants;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_flx8ecvxj().s[7]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_flx8ecvxj().s[8]++, _interop_require_wildcard(require("react")));
const _utils =
/* istanbul ignore next */
(cov_flx8ecvxj().s[9]++, require("../../lib/utils"));
const _classvarianceauthority =
/* istanbul ignore next */
(cov_flx8ecvxj().s[10]++, require("class-variance-authority"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_flx8ecvxj().f[4]++;
  cov_flx8ecvxj().s[11]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_flx8ecvxj().b[0][0]++;
    cov_flx8ecvxj().s[12]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_flx8ecvxj().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_flx8ecvxj().s[13]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_flx8ecvxj().s[14]++, new WeakMap());
  /* istanbul ignore next */
  cov_flx8ecvxj().s[15]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_flx8ecvxj().f[5]++;
    cov_flx8ecvxj().s[16]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_flx8ecvxj().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_flx8ecvxj().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_flx8ecvxj().f[6]++;
  cov_flx8ecvxj().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_flx8ecvxj().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_flx8ecvxj().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_flx8ecvxj().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_flx8ecvxj().b[2][0]++;
    cov_flx8ecvxj().s[18]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_flx8ecvxj().b[2][1]++;
  }
  cov_flx8ecvxj().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_flx8ecvxj().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_flx8ecvxj().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_flx8ecvxj().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_flx8ecvxj().b[4][0]++;
    cov_flx8ecvxj().s[20]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_flx8ecvxj().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_flx8ecvxj().s[21]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_flx8ecvxj().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_flx8ecvxj().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_flx8ecvxj().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_flx8ecvxj().b[6][0]++;
    cov_flx8ecvxj().s[23]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_flx8ecvxj().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_flx8ecvxj().s[24]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_flx8ecvxj().s[25]++,
  /* istanbul ignore next */
  (cov_flx8ecvxj().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_flx8ecvxj().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_flx8ecvxj().s[26]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_flx8ecvxj().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_flx8ecvxj().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_flx8ecvxj().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_flx8ecvxj().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_flx8ecvxj().s[28]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_flx8ecvxj().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_flx8ecvxj().b[11][1]++, null));
      /* istanbul ignore next */
      cov_flx8ecvxj().s[29]++;
      if (
      /* istanbul ignore next */
      (cov_flx8ecvxj().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_flx8ecvxj().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_flx8ecvxj().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_flx8ecvxj().b[12][0]++;
        cov_flx8ecvxj().s[30]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_flx8ecvxj().b[12][1]++;
        cov_flx8ecvxj().s[31]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_flx8ecvxj().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_flx8ecvxj().s[32]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_flx8ecvxj().s[33]++;
  if (cache) {
    /* istanbul ignore next */
    cov_flx8ecvxj().b[14][0]++;
    cov_flx8ecvxj().s[34]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_flx8ecvxj().b[14][1]++;
  }
  cov_flx8ecvxj().s[35]++;
  return newObj;
}
const spinnerVariants =
/* istanbul ignore next */
(cov_flx8ecvxj().s[36]++, (0, _classvarianceauthority.cva)("animate-spin rounded-full border-2 border-solid border-current border-r-transparent", {
  variants: {
    size: {
      sm: "h-4 w-4",
      md: "h-6 w-6",
      lg: "h-8 w-8",
      xl: "h-12 w-12"
    },
    variant: {
      default: "text-primary",
      secondary: "text-gray-500",
      white: "text-white",
      muted: "text-gray-400"
    }
  },
  defaultVariants: {
    size: "md",
    variant: "default"
  }
}));
const Spinner =
/* istanbul ignore next */
(/*#__PURE__*/cov_flx8ecvxj().s[37]++, _react.forwardRef(({
  className,
  size,
  variant,
  srText =
  /* istanbul ignore next */
  (cov_flx8ecvxj().b[15][0]++, "Cargando..."),
  ...props
}, ref) => {
  /* istanbul ignore next */
  cov_flx8ecvxj().f[7]++;
  cov_flx8ecvxj().s[38]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    ref: ref,
    className: (0, _utils.cn)(spinnerVariants({
      size,
      variant
    }), className),
    role: "status",
    "aria-label": srText,
    ...props,
    children: /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
      className: "sr-only",
      children: srText
    })
  });
}));
/* istanbul ignore next */
cov_flx8ecvxj().s[39]++;
Spinner.displayName = "Spinner";
const SpinnerOverlay =
/* istanbul ignore next */
(/*#__PURE__*/cov_flx8ecvxj().s[40]++, _react.forwardRef(({
  show =
  /* istanbul ignore next */
  (cov_flx8ecvxj().b[16][0]++, true),
  text,
  className,
  ...spinnerProps
}, ref) => {
  /* istanbul ignore next */
  cov_flx8ecvxj().f[8]++;
  cov_flx8ecvxj().s[41]++;
  if (!show) {
    /* istanbul ignore next */
    cov_flx8ecvxj().b[17][0]++;
    cov_flx8ecvxj().s[42]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_flx8ecvxj().b[17][1]++;
  }
  cov_flx8ecvxj().s[43]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: "fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm",
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex flex-col items-center space-y-4 rounded-lg bg-white p-6 shadow-lg",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(Spinner, {
        ref: ref,
        className: className,
        ...spinnerProps
      }),
      /* istanbul ignore next */
      (cov_flx8ecvxj().b[18][0]++, text) &&
      /* istanbul ignore next */
      (cov_flx8ecvxj().b[18][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-sm text-gray-600",
        children: text
      }))]
    })
  });
}));
/* istanbul ignore next */
cov_flx8ecvxj().s[44]++;
SpinnerOverlay.displayName = "SpinnerOverlay";
//# sourceMappingURL=data:application/json;charset=utf-8;base64,