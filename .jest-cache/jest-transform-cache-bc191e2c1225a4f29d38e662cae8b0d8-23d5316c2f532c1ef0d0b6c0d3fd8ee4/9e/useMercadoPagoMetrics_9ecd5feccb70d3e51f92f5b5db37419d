6116254f139a6a515c6a8e388cc89629
// ===================================
// PINTEYA E-COMMERCE - MERCADOPAGO METRICS HOOK
// ===================================
"use strict";

/* istanbul ignore next */
function cov_204aep4t6i() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useMercadoPagoMetrics.ts";
  var hash = "dd91b5f039e1a93bb363e1032653fb73c4ee9678";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useMercadoPagoMetrics.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 36
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 37
        }
      },
      "7": {
        start: {
          line: 25,
          column: 15
        },
        end: {
          line: 25,
          column: 31
        }
      },
      "8": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 51
        }
      },
      "9": {
        start: {
          line: 28,
          column: 78
        },
        end: {
          line: 28,
          column: 85
        }
      },
      "10": {
        start: {
          line: 29,
          column: 34
        },
        end: {
          line: 29,
          column: 60
        }
      },
      "11": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 64
        }
      },
      "12": {
        start: {
          line: 31,
          column: 30
        },
        end: {
          line: 31,
          column: 56
        }
      },
      "13": {
        start: {
          line: 32,
          column: 40
        },
        end: {
          line: 32,
          column: 66
        }
      },
      "14": {
        start: {
          line: 35,
          column: 27
        },
        end: {
          line: 73,
          column: 6
        }
      },
      "15": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "16": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 31
        }
      },
      "17": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 27
        }
      },
      "18": {
        start: {
          line: 39,
          column: 29
        },
        end: {
          line: 44,
          column: 14
        }
      },
      "19": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 47,
          column: 13
        }
      },
      "20": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 84
        }
      },
      "21": {
        start: {
          line: 48,
          column: 25
        },
        end: {
          line: 48,
          column: 46
        }
      },
      "22": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 51,
          column: 13
        }
      },
      "23": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 67
        }
      },
      "24": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 34
        }
      },
      "25": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 38
        }
      },
      "26": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 57,
          column: 13
        }
      },
      "27": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 42
        }
      },
      "28": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 101
        }
      },
      "29": {
        start: {
          line: 60,
          column: 33
        },
        end: {
          line: 60,
          column: 89
        }
      },
      "30": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 35
        }
      },
      "31": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 101
        }
      },
      "32": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "33": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 29
        }
      },
      "34": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 32
        }
      },
      "35": {
        start: {
          line: 76,
          column: 27
        },
        end: {
          line: 107,
          column: 6
        }
      },
      "36": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "37": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 31
        }
      },
      "38": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 27
        }
      },
      "39": {
        start: {
          line: 80,
          column: 29
        },
        end: {
          line: 85,
          column: 14
        }
      },
      "40": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 88,
          column: 13
        }
      },
      "41": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 84
        }
      },
      "42": {
        start: {
          line: 89,
          column: 25
        },
        end: {
          line: 89,
          column: 46
        }
      },
      "43": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 92,
          column: 13
        }
      },
      "44": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 67
        }
      },
      "45": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 33
        }
      },
      "46": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 99
        }
      },
      "47": {
        start: {
          line: 97,
          column: 33
        },
        end: {
          line: 97,
          column: 89
        }
      },
      "48": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 35
        }
      },
      "49": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 102
        }
      },
      "50": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 102,
          column: 13
        }
      },
      "51": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 29
        }
      },
      "52": {
        start: {
          line: 110,
          column: 22
        },
        end: {
          line: 114,
          column: 6
        }
      },
      "53": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 29
        }
      },
      "54": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 120,
          column: 7
        }
      },
      "55": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 23
        }
      },
      "56": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 134,
          column: 7
        }
      },
      "57": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "58": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 19
        }
      },
      "59": {
        start: {
          line: 126,
          column: 25
        },
        end: {
          line: 128,
          column: 27
        }
      },
      "60": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 27
        }
      },
      "61": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 43
        }
      },
      "62": {
        start: {
          line: 129,
          column: 19
        },
        end: {
          line: 129,
          column: 42
        }
      },
      "63": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 143,
          column: 7
        }
      },
      "64": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "65": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 27
        }
      },
      "66": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 151,
          column: 6
        }
      },
      "67": {
        start: {
          line: 154,
          column: 42
        },
        end: {
          line: 157,
          column: 6
        }
      },
      "68": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 165,
          column: 6
        }
      },
      "69": {
        start: {
          line: 168,
          column: 24
        },
        end: {
          line: 171,
          column: 6
        }
      },
      "70": {
        start: {
          line: 172,
          column: 27
        },
        end: {
          line: 172,
          column: 88
        }
      },
      "71": {
        start: {
          line: 172,
          column: 59
        },
        end: {
          line: 172,
          column: 81
        }
      },
      "72": {
        start: {
          line: 173,
          column: 26
        },
        end: {
          line: 173,
          column: 89
        }
      },
      "73": {
        start: {
          line: 173,
          column: 58
        },
        end: {
          line: 173,
          column: 82
        }
      },
      "74": {
        start: {
          line: 174,
          column: 23
        },
        end: {
          line: 174,
          column: 83
        }
      },
      "75": {
        start: {
          line: 174,
          column: 55
        },
        end: {
          line: 174,
          column: 76
        }
      },
      "76": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 182,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 32
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 38
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 33
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "useMercadoPagoMetrics",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 30
          }
        },
        loc: {
          start: {
            line: 27,
            column: 45
          },
          end: {
            line: 152,
            column: 1
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 35,
            column: 51
          },
          end: {
            line: 35,
            column: 52
          }
        },
        loc: {
          start: {
            line: 35,
            column: 61
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 35
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 76,
            column: 51
          },
          end: {
            line: 76,
            column: 52
          }
        },
        loc: {
          start: {
            line: 76,
            column: 61
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 76
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 110,
            column: 46
          },
          end: {
            line: 110,
            column: 47
          }
        },
        loc: {
          start: {
            line: 110,
            column: 56
          },
          end: {
            line: 112,
            column: 5
          }
        },
        line: 110
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 116,
            column: 26
          },
          end: {
            line: 116,
            column: 27
          }
        },
        loc: {
          start: {
            line: 116,
            column: 30
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 116
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 122,
            column: 26
          },
          end: {
            line: 122,
            column: 27
          }
        },
        loc: {
          start: {
            line: 122,
            column: 30
          },
          end: {
            line: 130,
            column: 5
          }
        },
        line: 122
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 126,
            column: 37
          },
          end: {
            line: 126,
            column: 38
          }
        },
        loc: {
          start: {
            line: 126,
            column: 41
          },
          end: {
            line: 128,
            column: 9
          }
        },
        line: 126
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 129,
            column: 15
          },
          end: {
            line: 129,
            column: 16
          }
        },
        loc: {
          start: {
            line: 129,
            column: 19
          },
          end: {
            line: 129,
            column: 42
          }
        },
        line: 129
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 136,
            column: 26
          },
          end: {
            line: 136,
            column: 27
          }
        },
        loc: {
          start: {
            line: 136,
            column: 30
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 136
      },
      "13": {
        name: "useMercadoPagoBasicMetrics",
        decl: {
          start: {
            line: 153,
            column: 9
          },
          end: {
            line: 153,
            column: 35
          }
        },
        loc: {
          start: {
            line: 153,
            column: 38
          },
          end: {
            line: 166,
            column: 1
          }
        },
        line: 153
      },
      "14": {
        name: "useMercadoPagoAlerts",
        decl: {
          start: {
            line: 167,
            column: 9
          },
          end: {
            line: 167,
            column: 29
          }
        },
        loc: {
          start: {
            line: 167,
            column: 32
          },
          end: {
            line: 183,
            column: 1
          }
        },
        line: 167
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 172,
            column: 50
          },
          end: {
            line: 172,
            column: 51
          }
        },
        loc: {
          start: {
            line: 172,
            column: 59
          },
          end: {
            line: 172,
            column: 81
          }
        },
        line: 172
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 173,
            column: 49
          },
          end: {
            line: 173,
            column: 50
          }
        },
        loc: {
          start: {
            line: 173,
            column: 58
          },
          end: {
            line: 173,
            column: 82
          }
        },
        line: 173
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 174,
            column: 46
          },
          end: {
            line: 174,
            column: 47
          }
        },
        loc: {
          start: {
            line: 174,
            column: 55
          },
          end: {
            line: 174,
            column: 76
          }
        },
        line: 174
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 31
          },
          end: {
            line: 27,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 27,
            column: 41
          },
          end: {
            line: 27,
            column: 43
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 28,
            column: 30
          },
          end: {
            line: 28,
            column: 35
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 37
          },
          end: {
            line: 28,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 28,
            column: 51
          },
          end: {
            line: 28,
            column: 55
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 47,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 47,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "4": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "5": {
        loc: {
          start: {
            line: 50,
            column: 32
          },
          end: {
            line: 50,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 32
          },
          end: {
            line: 50,
            column: 42
          }
        }, {
          start: {
            line: 50,
            column: 46
          },
          end: {
            line: 50,
            column: 65
          }
        }],
        line: 50
      },
      "6": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "7": {
        loc: {
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 55,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 55,
            column: 23
          }
        }, {
          start: {
            line: 55,
            column: 27
          },
          end: {
            line: 55,
            column: 54
          }
        }],
        line: 55
      },
      "8": {
        loc: {
          start: {
            line: 60,
            column: 33
          },
          end: {
            line: 60,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 60,
            column: 56
          },
          end: {
            line: 60,
            column: 67
          }
        }, {
          start: {
            line: 60,
            column: 70
          },
          end: {
            line: 60,
            column: 89
          }
        }],
        line: 60
      },
      "9": {
        loc: {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "10": {
        loc: {
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "11": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "12": {
        loc: {
          start: {
            line: 91,
            column: 32
          },
          end: {
            line: 91,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 32
          },
          end: {
            line: 91,
            column: 42
          }
        }, {
          start: {
            line: 91,
            column: 46
          },
          end: {
            line: 91,
            column: 65
          }
        }],
        line: 91
      },
      "13": {
        loc: {
          start: {
            line: 97,
            column: 33
          },
          end: {
            line: 97,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 97,
            column: 56
          },
          end: {
            line: 97,
            column: 67
          }
        }, {
          start: {
            line: 97,
            column: 70
          },
          end: {
            line: 97,
            column: 89
          }
        }],
        line: 97
      },
      "14": {
        loc: {
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 102,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 102,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "15": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "16": {
        loc: {
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 123,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 123,
            column: 24
          }
        }, {
          start: {
            line: 123,
            column: 28
          },
          end: {
            line: 123,
            column: 48
          }
        }],
        line: 123
      },
      "17": {
        loc: {
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "18": {
        loc: {
          start: {
            line: 137,
            column: 12
          },
          end: {
            line: 137,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 12
          },
          end: {
            line: 137,
            column: 19
          }
        }, {
          start: {
            line: 137,
            column: 23
          },
          end: {
            line: 137,
            column: 28
          }
        }],
        line: 137
      },
      "19": {
        loc: {
          start: {
            line: 159,
            column: 23
          },
          end: {
            line: 159,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 23
          },
          end: {
            line: 159,
            column: 61
          }
        }, {
          start: {
            line: 159,
            column: 65
          },
          end: {
            line: 159,
            column: 66
          }
        }],
        line: 159
      },
      "20": {
        loc: {
          start: {
            line: 160,
            column: 21
          },
          end: {
            line: 160,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 21
          },
          end: {
            line: 160,
            column: 57
          }
        }, {
          start: {
            line: 160,
            column: 61
          },
          end: {
            line: 160,
            column: 62
          }
        }],
        line: 160
      },
      "21": {
        loc: {
          start: {
            line: 161,
            column: 19
          },
          end: {
            line: 161,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 19
          },
          end: {
            line: 161,
            column: 53
          }
        }, {
          start: {
            line: 161,
            column: 57
          },
          end: {
            line: 161,
            column: 58
          }
        }],
        line: 161
      },
      "22": {
        loc: {
          start: {
            line: 162,
            column: 29
          },
          end: {
            line: 162,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 29
          },
          end: {
            line: 162,
            column: 73
          }
        }, {
          start: {
            line: 162,
            column: 77
          },
          end: {
            line: 162,
            column: 78
          }
        }],
        line: 162
      },
      "23": {
        loc: {
          start: {
            line: 172,
            column: 27
          },
          end: {
            line: 172,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 27
          },
          end: {
            line: 172,
            column: 82
          }
        }, {
          start: {
            line: 172,
            column: 86
          },
          end: {
            line: 172,
            column: 88
          }
        }],
        line: 172
      },
      "24": {
        loc: {
          start: {
            line: 173,
            column: 26
          },
          end: {
            line: 173,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 173,
            column: 26
          },
          end: {
            line: 173,
            column: 83
          }
        }, {
          start: {
            line: 173,
            column: 87
          },
          end: {
            line: 173,
            column: 89
          }
        }],
        line: 173
      },
      "25": {
        loc: {
          start: {
            line: 174,
            column: 23
          },
          end: {
            line: 174,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 23
          },
          end: {
            line: 174,
            column: 77
          }
        }, {
          start: {
            line: 174,
            column: 81
          },
          end: {
            line: 174,
            column: 83
          }
        }],
        line: 174
      },
      "26": {
        loc: {
          start: {
            line: 176,
            column: 16
          },
          end: {
            line: 176,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 16
          },
          end: {
            line: 176,
            column: 31
          }
        }, {
          start: {
            line: 176,
            column: 35
          },
          end: {
            line: 176,
            column: 37
          }
        }],
        line: 176
      },
      "27": {
        loc: {
          start: {
            line: 180,
            column: 20
          },
          end: {
            line: 180,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 180,
            column: 20
          },
          end: {
            line: 180,
            column: 42
          }
        }, {
          start: {
            line: 180,
            column: 46
          },
          end: {
            line: 180,
            column: 47
          }
        }],
        line: 180
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useMercadoPagoMetrics.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - MERCADOPAGO METRICS HOOK\r\n// ===================================\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { logger, LogCategory } from '@/lib/enterprise/logger';\r\n\r\n// Tipos para m\xE9tricas de MercadoPago\r\nexport interface MercadoPagoMetrics {\r\n  realTimeMetrics: {\r\n    totalRequests: number;\r\n    successRate: number;\r\n    errorRate: number;\r\n    averageResponseTime: number;\r\n    rateLimitHits: number;\r\n    retryAttempts: number;\r\n  };\r\n  endpointMetrics: {\r\n    createPreference: EndpointMetric;\r\n    webhook: EndpointMetric;\r\n    paymentQuery: EndpointMetric;\r\n  };\r\n  systemHealth: {\r\n    redisStatus: 'connected' | 'disconnected';\r\n    lastUpdate: string;\r\n    uptime: number;\r\n  };\r\n  alerts: Alert[];\r\n}\r\n\r\nexport interface EndpointMetric {\r\n  requests: number;\r\n  successRate: number;\r\n  averageResponseTime: number;\r\n  errorCount: number;\r\n  lastError?: string;\r\n}\r\n\r\nexport interface Alert {\r\n  type: 'warning' | 'error' | 'info';\r\n  message: string;\r\n  timestamp: string;\r\n  endpoint?: string;\r\n}\r\n\r\ninterface UseMetricsOptions {\r\n  refreshInterval?: number; // en milisegundos\r\n  autoRefresh?: boolean;\r\n  onError?: (error: Error) => void;\r\n  onAlert?: (alerts: Alert[]) => void;\r\n}\r\n\r\ninterface UseMetricsReturn {\r\n  metrics: MercadoPagoMetrics | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  lastUpdate: Date | null;\r\n  refresh: () => Promise<void>;\r\n  resetMetrics: () => Promise<void>;\r\n}\r\n\r\n/**\r\n * Hook para obtener y gestionar m\xE9tricas de MercadoPago en tiempo real\r\n */\r\nexport function useMercadoPagoMetrics(options: UseMetricsOptions = {}): UseMetricsReturn {\r\n  const {\r\n    refreshInterval = 30000, // 30 segundos por defecto\r\n    autoRefresh = true,\r\n    onError,\r\n    onAlert,\r\n  } = options;\r\n\r\n  const [metrics, setMetrics] = useState<MercadoPagoMetrics | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [lastUpdate, setLastUpdate] = useState<Date | null>(null);\r\n\r\n  /**\r\n   * Funci\xF3n para obtener m\xE9tricas del servidor\r\n   */\r\n  const fetchMetrics = useCallback(async (): Promise<void> => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      const response = await fetch('/api/admin/mercadopago/metrics', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (!data.success) {\r\n        throw new Error(data.error || 'Error desconocido');\r\n      }\r\n\r\n      setMetrics(data.data);\r\n      setLastUpdate(new Date());\r\n\r\n      // Notificar alertas si hay callback\r\n      if (onAlert && data.data.alerts.length > 0) {\r\n        onAlert(data.data.alerts);\r\n      }\r\n\r\n      logger.info(LogCategory.API, 'MercadoPago metrics updated successfully');\r\n\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      setError(errorMessage);\r\n      \r\n      logger.error(LogCategory.API, 'Error fetching MercadoPago metrics', err as Error);\r\n\r\n      // Notificar error si hay callback\r\n      if (onError) {\r\n        onError(err as Error);\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [onError, onAlert]);\r\n\r\n  /**\r\n   * Funci\xF3n para reiniciar m\xE9tricas\r\n   */\r\n  const resetMetrics = useCallback(async (): Promise<void> => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      const response = await fetch('/api/admin/mercadopago/metrics', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (!data.success) {\r\n        throw new Error(data.error || 'Error desconocido');\r\n      }\r\n\r\n      // Refrescar m\xE9tricas despu\xE9s del reset\r\n      await fetchMetrics();\r\n\r\n      logger.info(LogCategory.API, 'MercadoPago metrics reset successfully');\r\n\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      setError(errorMessage);\r\n      \r\n      logger.error(LogCategory.API, 'Error resetting MercadoPago metrics', err as Error);\r\n\r\n      if (onError) {\r\n        onError(err as Error);\r\n      }\r\n    }\r\n  }, [fetchMetrics, onError]);\r\n\r\n  /**\r\n   * Funci\xF3n p\xFAblica para refrescar m\xE9tricas manualmente\r\n   */\r\n  const refresh = useCallback(async (): Promise<void> => {\r\n    await fetchMetrics();\r\n  }, [fetchMetrics]);\r\n\r\n  // Efecto para carga inicial\r\n  useEffect(() => {\r\n    fetchMetrics();\r\n  }, [fetchMetrics]);\r\n\r\n  // Efecto para auto-refresh\r\n  useEffect(() => {\r\n    if (!autoRefresh || refreshInterval <= 0) {\r\n      return;\r\n    }\r\n\r\n    const interval = setInterval(() => {\r\n      fetchMetrics();\r\n    }, refreshInterval);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [autoRefresh, refreshInterval, fetchMetrics]);\r\n\r\n  // Efecto para limpiar error cuando se obtienen m\xE9tricas exitosamente\r\n  useEffect(() => {\r\n    if (metrics && error) {\r\n      setError(null);\r\n    }\r\n  }, [metrics, error]);\r\n\r\n  return {\r\n    metrics,\r\n    isLoading,\r\n    error,\r\n    lastUpdate,\r\n    refresh,\r\n    resetMetrics,\r\n  };\r\n}\r\n\r\n/**\r\n * Hook simplificado para m\xE9tricas b\xE1sicas\r\n */\r\nexport function useMercadoPagoBasicMetrics() {\r\n  const { metrics, isLoading, error } = useMercadoPagoMetrics({\r\n    refreshInterval: 60000, // 1 minuto\r\n    autoRefresh: true,\r\n  });\r\n\r\n  return {\r\n    totalRequests: metrics?.realTimeMetrics.totalRequests || 0,\r\n    successRate: metrics?.realTimeMetrics.successRate || 0,\r\n    errorRate: metrics?.realTimeMetrics.errorRate || 0,\r\n    averageResponseTime: metrics?.realTimeMetrics.averageResponseTime || 0,\r\n    isLoading,\r\n    error,\r\n  };\r\n}\r\n\r\n/**\r\n * Hook para alertas de MercadoPago\r\n */\r\nexport function useMercadoPagoAlerts() {\r\n  const { metrics } = useMercadoPagoMetrics({\r\n    refreshInterval: 15000, // 15 segundos para alertas\r\n    autoRefresh: true,\r\n  });\r\n\r\n  const criticalAlerts = metrics?.alerts.filter(alert => alert.type === 'error') || [];\r\n  const warningAlerts = metrics?.alerts.filter(alert => alert.type === 'warning') || [];\r\n  const infoAlerts = metrics?.alerts.filter(alert => alert.type === 'info') || [];\r\n\r\n  return {\r\n    alerts: metrics?.alerts || [],\r\n    criticalAlerts,\r\n    warningAlerts,\r\n    infoAlerts,\r\n    hasAlerts: (metrics?.alerts.length || 0) > 0,\r\n    hasCriticalAlerts: criticalAlerts.length > 0,\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useMercadoPagoAlerts", "useMercadoPagoBasicMetrics", "useMercadoPagoMetrics", "options", "refreshInterval", "autoRefresh", "onError", "onAlert", "metrics", "setMetrics", "useState", "isLoading", "setIsLoading", "error", "setError", "lastUpdate", "setLastUpdate", "fetchMetrics", "useCallback", "response", "fetch", "method", "headers", "ok", "Error", "status", "statusText", "data", "json", "success", "Date", "alerts", "length", "logger", "info", "LogCategory", "API", "err", "errorMessage", "message", "resetMetrics", "refresh", "useEffect", "interval", "setInterval", "clearInterval", "totalRequests", "realTimeMetrics", "successRate", "errorRate", "averageResponseTime", "criticalAlerts", "filter", "alert", "type", "warningAlerts", "infoAlerts", "hasAlerts", "hasCriticalAlerts"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dd91b5f039e1a93bb363e1032653fb73c4ee9678"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_204aep4t6i = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_204aep4t6i();
cov_204aep4t6i().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_204aep4t6i().f[0]++;
  cov_204aep4t6i().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_204aep4t6i().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_204aep4t6i().s[3]++;
_export(exports, {
  get useMercadoPagoAlerts() {
    /* istanbul ignore next */
    cov_204aep4t6i().f[1]++;
    cov_204aep4t6i().s[4]++;
    return useMercadoPagoAlerts;
  },
  get useMercadoPagoBasicMetrics() {
    /* istanbul ignore next */
    cov_204aep4t6i().f[2]++;
    cov_204aep4t6i().s[5]++;
    return useMercadoPagoBasicMetrics;
  },
  get useMercadoPagoMetrics() {
    /* istanbul ignore next */
    cov_204aep4t6i().f[3]++;
    cov_204aep4t6i().s[6]++;
    return useMercadoPagoMetrics;
  }
});
const _react =
/* istanbul ignore next */
(cov_204aep4t6i().s[7]++, require("react"));
const _logger =
/* istanbul ignore next */
(cov_204aep4t6i().s[8]++, require("../lib/enterprise/logger"));
function useMercadoPagoMetrics(options =
/* istanbul ignore next */
(cov_204aep4t6i().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_204aep4t6i().f[4]++;
  const {
    refreshInterval =
    /* istanbul ignore next */
    (cov_204aep4t6i().b[1][0]++, 30000),
    autoRefresh =
    /* istanbul ignore next */
    (cov_204aep4t6i().b[2][0]++, true),
    onError,
    onAlert
  } =
  /* istanbul ignore next */
  (cov_204aep4t6i().s[9]++, options);
  const [metrics, setMetrics] =
  /* istanbul ignore next */
  (cov_204aep4t6i().s[10]++, (0, _react.useState)(null));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_204aep4t6i().s[11]++, (0, _react.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_204aep4t6i().s[12]++, (0, _react.useState)(null));
  const [lastUpdate, setLastUpdate] =
  /* istanbul ignore next */
  (cov_204aep4t6i().s[13]++, (0, _react.useState)(null));
  /**
  * Función para obtener métricas del servidor
  */
  const fetchMetrics =
  /* istanbul ignore next */
  (cov_204aep4t6i().s[14]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_204aep4t6i().f[5]++;
    cov_204aep4t6i().s[15]++;
    try {
      /* istanbul ignore next */
      cov_204aep4t6i().s[16]++;
      setIsLoading(true);
      /* istanbul ignore next */
      cov_204aep4t6i().s[17]++;
      setError(null);
      const response =
      /* istanbul ignore next */
      (cov_204aep4t6i().s[18]++, await fetch('/api/admin/mercadopago/metrics', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json'
        }
      }));
      /* istanbul ignore next */
      cov_204aep4t6i().s[19]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_204aep4t6i().b[3][0]++;
        cov_204aep4t6i().s[20]++;
        throw new Error(`Error ${response.status}: ${response.statusText}`);
      } else
      /* istanbul ignore next */
      {
        cov_204aep4t6i().b[3][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_204aep4t6i().s[21]++, await response.json());
      /* istanbul ignore next */
      cov_204aep4t6i().s[22]++;
      if (!data.success) {
        /* istanbul ignore next */
        cov_204aep4t6i().b[4][0]++;
        cov_204aep4t6i().s[23]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_204aep4t6i().b[5][0]++, data.error) ||
        /* istanbul ignore next */
        (cov_204aep4t6i().b[5][1]++, 'Error desconocido'));
      } else
      /* istanbul ignore next */
      {
        cov_204aep4t6i().b[4][1]++;
      }
      cov_204aep4t6i().s[24]++;
      setMetrics(data.data);
      /* istanbul ignore next */
      cov_204aep4t6i().s[25]++;
      setLastUpdate(new Date());
      // Notificar alertas si hay callback
      /* istanbul ignore next */
      cov_204aep4t6i().s[26]++;
      if (
      /* istanbul ignore next */
      (cov_204aep4t6i().b[7][0]++, onAlert) &&
      /* istanbul ignore next */
      (cov_204aep4t6i().b[7][1]++, data.data.alerts.length > 0)) {
        /* istanbul ignore next */
        cov_204aep4t6i().b[6][0]++;
        cov_204aep4t6i().s[27]++;
        onAlert(data.data.alerts);
      } else
      /* istanbul ignore next */
      {
        cov_204aep4t6i().b[6][1]++;
      }
      cov_204aep4t6i().s[28]++;
      _logger.logger.info(_logger.LogCategory.API, 'MercadoPago metrics updated successfully');
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_204aep4t6i().s[29]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_204aep4t6i().b[8][0]++, err.message) :
      /* istanbul ignore next */
      (cov_204aep4t6i().b[8][1]++, 'Error desconocido'));
      /* istanbul ignore next */
      cov_204aep4t6i().s[30]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_204aep4t6i().s[31]++;
      _logger.logger.error(_logger.LogCategory.API, 'Error fetching MercadoPago metrics', err);
      // Notificar error si hay callback
      /* istanbul ignore next */
      cov_204aep4t6i().s[32]++;
      if (onError) {
        /* istanbul ignore next */
        cov_204aep4t6i().b[9][0]++;
        cov_204aep4t6i().s[33]++;
        onError(err);
      } else
      /* istanbul ignore next */
      {
        cov_204aep4t6i().b[9][1]++;
      }
    } finally {
      /* istanbul ignore next */
      cov_204aep4t6i().s[34]++;
      setIsLoading(false);
    }
  }, [onError, onAlert]));
  /**
  * Función para reiniciar métricas
  */
  const resetMetrics =
  /* istanbul ignore next */
  (cov_204aep4t6i().s[35]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_204aep4t6i().f[6]++;
    cov_204aep4t6i().s[36]++;
    try {
      /* istanbul ignore next */
      cov_204aep4t6i().s[37]++;
      setIsLoading(true);
      /* istanbul ignore next */
      cov_204aep4t6i().s[38]++;
      setError(null);
      const response =
      /* istanbul ignore next */
      (cov_204aep4t6i().s[39]++, await fetch('/api/admin/mercadopago/metrics', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      }));
      /* istanbul ignore next */
      cov_204aep4t6i().s[40]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_204aep4t6i().b[10][0]++;
        cov_204aep4t6i().s[41]++;
        throw new Error(`Error ${response.status}: ${response.statusText}`);
      } else
      /* istanbul ignore next */
      {
        cov_204aep4t6i().b[10][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_204aep4t6i().s[42]++, await response.json());
      /* istanbul ignore next */
      cov_204aep4t6i().s[43]++;
      if (!data.success) {
        /* istanbul ignore next */
        cov_204aep4t6i().b[11][0]++;
        cov_204aep4t6i().s[44]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_204aep4t6i().b[12][0]++, data.error) ||
        /* istanbul ignore next */
        (cov_204aep4t6i().b[12][1]++, 'Error desconocido'));
      } else
      /* istanbul ignore next */
      {
        cov_204aep4t6i().b[11][1]++;
      }
      // Refrescar métricas después del reset
      cov_204aep4t6i().s[45]++;
      await fetchMetrics();
      /* istanbul ignore next */
      cov_204aep4t6i().s[46]++;
      _logger.logger.info(_logger.LogCategory.API, 'MercadoPago metrics reset successfully');
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_204aep4t6i().s[47]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_204aep4t6i().b[13][0]++, err.message) :
      /* istanbul ignore next */
      (cov_204aep4t6i().b[13][1]++, 'Error desconocido'));
      /* istanbul ignore next */
      cov_204aep4t6i().s[48]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_204aep4t6i().s[49]++;
      _logger.logger.error(_logger.LogCategory.API, 'Error resetting MercadoPago metrics', err);
      /* istanbul ignore next */
      cov_204aep4t6i().s[50]++;
      if (onError) {
        /* istanbul ignore next */
        cov_204aep4t6i().b[14][0]++;
        cov_204aep4t6i().s[51]++;
        onError(err);
      } else
      /* istanbul ignore next */
      {
        cov_204aep4t6i().b[14][1]++;
      }
    }
  }, [fetchMetrics, onError]));
  /**
  * Función pública para refrescar métricas manualmente
  */
  const refresh =
  /* istanbul ignore next */
  (cov_204aep4t6i().s[52]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_204aep4t6i().f[7]++;
    cov_204aep4t6i().s[53]++;
    await fetchMetrics();
  }, [fetchMetrics]));
  // Efecto para carga inicial
  /* istanbul ignore next */
  cov_204aep4t6i().s[54]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_204aep4t6i().f[8]++;
    cov_204aep4t6i().s[55]++;
    fetchMetrics();
  }, [fetchMetrics]);
  // Efecto para auto-refresh
  /* istanbul ignore next */
  cov_204aep4t6i().s[56]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_204aep4t6i().f[9]++;
    cov_204aep4t6i().s[57]++;
    if (
    /* istanbul ignore next */
    (cov_204aep4t6i().b[16][0]++, !autoRefresh) ||
    /* istanbul ignore next */
    (cov_204aep4t6i().b[16][1]++, refreshInterval <= 0)) {
      /* istanbul ignore next */
      cov_204aep4t6i().b[15][0]++;
      cov_204aep4t6i().s[58]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_204aep4t6i().b[15][1]++;
    }
    const interval =
    /* istanbul ignore next */
    (cov_204aep4t6i().s[59]++, setInterval(() => {
      /* istanbul ignore next */
      cov_204aep4t6i().f[10]++;
      cov_204aep4t6i().s[60]++;
      fetchMetrics();
    }, refreshInterval));
    /* istanbul ignore next */
    cov_204aep4t6i().s[61]++;
    return () => {
      /* istanbul ignore next */
      cov_204aep4t6i().f[11]++;
      cov_204aep4t6i().s[62]++;
      return clearInterval(interval);
    };
  }, [autoRefresh, refreshInterval, fetchMetrics]);
  // Efecto para limpiar error cuando se obtienen métricas exitosamente
  /* istanbul ignore next */
  cov_204aep4t6i().s[63]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_204aep4t6i().f[12]++;
    cov_204aep4t6i().s[64]++;
    if (
    /* istanbul ignore next */
    (cov_204aep4t6i().b[18][0]++, metrics) &&
    /* istanbul ignore next */
    (cov_204aep4t6i().b[18][1]++, error)) {
      /* istanbul ignore next */
      cov_204aep4t6i().b[17][0]++;
      cov_204aep4t6i().s[65]++;
      setError(null);
    } else
    /* istanbul ignore next */
    {
      cov_204aep4t6i().b[17][1]++;
    }
  }, [metrics, error]);
  /* istanbul ignore next */
  cov_204aep4t6i().s[66]++;
  return {
    metrics,
    isLoading,
    error,
    lastUpdate,
    refresh,
    resetMetrics
  };
}
function useMercadoPagoBasicMetrics() {
  /* istanbul ignore next */
  cov_204aep4t6i().f[13]++;
  const {
    metrics,
    isLoading,
    error
  } =
  /* istanbul ignore next */
  (cov_204aep4t6i().s[67]++, useMercadoPagoMetrics({
    refreshInterval: 60000,
    autoRefresh: true
  }));
  /* istanbul ignore next */
  cov_204aep4t6i().s[68]++;
  return {
    totalRequests:
    /* istanbul ignore next */
    (cov_204aep4t6i().b[19][0]++, metrics?.realTimeMetrics.totalRequests) ||
    /* istanbul ignore next */
    (cov_204aep4t6i().b[19][1]++, 0),
    successRate:
    /* istanbul ignore next */
    (cov_204aep4t6i().b[20][0]++, metrics?.realTimeMetrics.successRate) ||
    /* istanbul ignore next */
    (cov_204aep4t6i().b[20][1]++, 0),
    errorRate:
    /* istanbul ignore next */
    (cov_204aep4t6i().b[21][0]++, metrics?.realTimeMetrics.errorRate) ||
    /* istanbul ignore next */
    (cov_204aep4t6i().b[21][1]++, 0),
    averageResponseTime:
    /* istanbul ignore next */
    (cov_204aep4t6i().b[22][0]++, metrics?.realTimeMetrics.averageResponseTime) ||
    /* istanbul ignore next */
    (cov_204aep4t6i().b[22][1]++, 0),
    isLoading,
    error
  };
}
function useMercadoPagoAlerts() {
  /* istanbul ignore next */
  cov_204aep4t6i().f[14]++;
  const {
    metrics
  } =
  /* istanbul ignore next */
  (cov_204aep4t6i().s[69]++, useMercadoPagoMetrics({
    refreshInterval: 15000,
    autoRefresh: true
  }));
  const criticalAlerts =
  /* istanbul ignore next */
  (cov_204aep4t6i().s[70]++,
  /* istanbul ignore next */
  (cov_204aep4t6i().b[23][0]++, metrics?.alerts.filter(alert => {
    /* istanbul ignore next */
    cov_204aep4t6i().f[15]++;
    cov_204aep4t6i().s[71]++;
    return alert.type === 'error';
  })) ||
  /* istanbul ignore next */
  (cov_204aep4t6i().b[23][1]++, []));
  const warningAlerts =
  /* istanbul ignore next */
  (cov_204aep4t6i().s[72]++,
  /* istanbul ignore next */
  (cov_204aep4t6i().b[24][0]++, metrics?.alerts.filter(alert => {
    /* istanbul ignore next */
    cov_204aep4t6i().f[16]++;
    cov_204aep4t6i().s[73]++;
    return alert.type === 'warning';
  })) ||
  /* istanbul ignore next */
  (cov_204aep4t6i().b[24][1]++, []));
  const infoAlerts =
  /* istanbul ignore next */
  (cov_204aep4t6i().s[74]++,
  /* istanbul ignore next */
  (cov_204aep4t6i().b[25][0]++, metrics?.alerts.filter(alert => {
    /* istanbul ignore next */
    cov_204aep4t6i().f[17]++;
    cov_204aep4t6i().s[75]++;
    return alert.type === 'info';
  })) ||
  /* istanbul ignore next */
  (cov_204aep4t6i().b[25][1]++, []));
  /* istanbul ignore next */
  cov_204aep4t6i().s[76]++;
  return {
    alerts:
    /* istanbul ignore next */
    (cov_204aep4t6i().b[26][0]++, metrics?.alerts) ||
    /* istanbul ignore next */
    (cov_204aep4t6i().b[26][1]++, []),
    criticalAlerts,
    warningAlerts,
    infoAlerts,
    hasAlerts: (
    /* istanbul ignore next */
    (cov_204aep4t6i().b[27][0]++, metrics?.alerts.length) ||
    /* istanbul ignore next */
    (cov_204aep4t6i().b[27][1]++, 0)) > 0,
    hasCriticalAlerts: criticalAlerts.length > 0
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,