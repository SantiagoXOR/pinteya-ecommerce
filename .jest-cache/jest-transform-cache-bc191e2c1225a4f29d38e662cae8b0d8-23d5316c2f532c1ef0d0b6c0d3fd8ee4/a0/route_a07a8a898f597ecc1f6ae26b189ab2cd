1686db01e4b123f44cf98ce77ec1f049
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_2e4h1mzvw7() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\orders\\analytics\\route.ts";
  var hash = "06799263697296176f0f59e00eece1e989bb8c57";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\orders\\analytics\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 18
        },
        end: {
          line: 24,
          column: 69
        }
      },
      "9": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 57
        }
      },
      "10": {
        start: {
          line: 26,
          column: 13
        },
        end: {
          line: 26,
          column: 27
        }
      },
      "11": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 63
        }
      },
      "12": {
        start: {
          line: 28,
          column: 22
        },
        end: {
          line: 28,
          column: 70
        }
      },
      "13": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 74
        }
      },
      "14": {
        start: {
          line: 30,
          column: 17
        },
        end: {
          line: 30,
          column: 65
        }
      },
      "15": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 24
        }
      },
      "16": {
        start: {
          line: 35,
          column: 31
        },
        end: {
          line: 52,
          column: 2
        }
      },
      "17": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 86,
          column: 5
        }
      },
      "18": {
        start: {
          line: 58,
          column: 24
        },
        end: {
          line: 58,
          column: 49
        }
      },
      "19": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "20": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 63,
          column: 14
        }
      },
      "21": {
        start: {
          line: 65,
          column: 21
        },
        end: {
          line: 65,
          column: 33
        }
      },
      "22": {
        start: {
          line: 67,
          column: 24
        },
        end: {
          line: 67,
          column: 68
        }
      },
      "23": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "24": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 72,
          column: 14
        }
      },
      "25": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 77,
          column: 10
        }
      },
      "26": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 81,
          column: 11
        }
      },
      "27": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 85,
          column: 10
        }
      },
      "28": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 26
        }
      },
      "29": {
        start: {
          line: 94,
          column: 18
        },
        end: {
          line: 94,
          column: 21
        }
      },
      "30": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "31": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 83
        }
      },
      "32": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 18
        }
      },
      "33": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 74
        }
      },
      "34": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 18
        }
      },
      "35": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 71
        }
      },
      "36": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 18
        }
      },
      "37": {
        start: {
          line: 106,
          column: 33
        },
        end: {
          line: 106,
          column: 67
        }
      },
      "38": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 69
        }
      },
      "39": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 18
        }
      },
      "40": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 58
        }
      },
      "41": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 18
        }
      },
      "42": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 111
        }
      },
      "43": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 58
        }
      },
      "44": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 18
        }
      },
      "45": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 71
        }
      },
      "46": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 122,
          column: 6
        }
      },
      "47": {
        start: {
          line: 125,
          column: 22
        },
        end: {
          line: 125,
          column: 32
        }
      },
      "48": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 261,
          column: 5
        }
      },
      "49": {
        start: {
          line: 128,
          column: 32
        },
        end: {
          line: 131,
          column: 36
        }
      },
      "50": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "51": {
        start: {
          line: 133,
          column: 29
        },
        end: {
          line: 137,
          column: 14
        }
      },
      "52": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 143,
          column: 15
        }
      },
      "53": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 28
        }
      },
      "54": {
        start: {
          line: 147,
          column: 27
        },
        end: {
          line: 147,
          column: 52
        }
      },
      "55": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "56": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 153,
          column: 15
        }
      },
      "57": {
        start: {
          line: 156,
          column: 33
        },
        end: {
          line: 156,
          column: 53
        }
      },
      "58": {
        start: {
          line: 157,
          column: 30
        },
        end: {
          line: 163,
          column: 10
        }
      },
      "59": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "60": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 170,
          column: 15
        }
      },
      "61": {
        start: {
          line: 172,
          column: 24
        },
        end: {
          line: 172,
          column: 42
        }
      },
      "62": {
        start: {
          line: 173,
          column: 39
        },
        end: {
          line: 173,
          column: 103
        }
      },
      "63": {
        start: {
          line: 175,
          column: 34
        },
        end: {
          line: 178,
          column: 10
        }
      },
      "64": {
        start: {
          line: 179,
          column: 28
        },
        end: {
          line: 179,
          column: 56
        }
      },
      "65": {
        start: {
          line: 181,
          column: 24
        },
        end: {
          line: 181,
          column: 25
        }
      },
      "66": {
        start: {
          line: 182,
          column: 34
        },
        end: {
          line: 182,
          column: 35
        }
      },
      "67": {
        start: {
          line: 183,
          column: 35
        },
        end: {
          line: 183,
          column: 37
        }
      },
      "68": {
        start: {
          line: 184,
          column: 28
        },
        end: {
          line: 184,
          column: 30
        }
      },
      "69": {
        start: {
          line: 185,
          column: 30
        },
        end: {
          line: 185,
          column: 31
        }
      },
      "70": {
        start: {
          line: 187,
          column: 29
        },
        end: {
          line: 187,
          column: 51
        }
      },
      "71": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 193,
          column: 9
        }
      },
      "72": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 97
        }
      },
      "73": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 62
        }
      },
      "74": {
        start: {
          line: 194,
          column: 25
        },
        end: {
          line: 214,
          column: 9
        }
      },
      "75": {
        start: {
          line: 215,
          column: 29
        },
        end: {
          line: 215,
          column: 64
        }
      },
      "76": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 221,
          column: 11
        }
      },
      "77": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 227,
          column: 11
        }
      },
      "78": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 228,
          column: 28
        }
      },
      "79": {
        start: {
          line: 230,
          column: 29
        },
        end: {
          line: 230,
          column: 51
        }
      },
      "80": {
        start: {
          line: 232,
          column: 29
        },
        end: {
          line: 237,
          column: 9
        }
      },
      "81": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 238,
          column: 81
        }
      },
      "82": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 244,
          column: 9
        }
      },
      "83": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 240,
          column: 110
        }
      },
      "84": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 243,
          column: 69
        }
      },
      "85": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 253,
          column: 9
        }
      },
      "86": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 249,
          column: 15
        }
      },
      "87": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 55
        }
      },
      "88": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 260,
          column: 11
        }
      },
      "89": {
        start: {
          line: 264,
          column: 22
        },
        end: {
          line: 264,
          column: 32
        }
      },
      "90": {
        start: {
          line: 265,
          column: 4
        },
        end: {
          line: 343,
          column: 5
        }
      },
      "91": {
        start: {
          line: 267,
          column: 27
        },
        end: {
          line: 267,
          column: 52
        }
      },
      "92": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 274,
          column: 9
        }
      },
      "93": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 273,
          column: 15
        }
      },
      "94": {
        start: {
          line: 275,
          column: 21
        },
        end: {
          line: 275,
          column: 41
        }
      },
      "95": {
        start: {
          line: 276,
          column: 58
        },
        end: {
          line: 276,
          column: 62
        }
      },
      "96": {
        start: {
          line: 278,
          column: 33
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "97": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "98": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 289,
          column: 15
        }
      },
      "99": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 312,
          column: 9
        }
      },
      "100": {
        start: {
          line: 295,
          column: 16
        },
        end: {
          line: 295,
          column: 71
        }
      },
      "101": {
        start: {
          line: 296,
          column: 16
        },
        end: {
          line: 296,
          column: 22
        }
      },
      "102": {
        start: {
          line: 298,
          column: 16
        },
        end: {
          line: 298,
          column: 75
        }
      },
      "103": {
        start: {
          line: 299,
          column: 16
        },
        end: {
          line: 299,
          column: 22
        }
      },
      "104": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 301,
          column: 77
        }
      },
      "105": {
        start: {
          line: 302,
          column: 16
        },
        end: {
          line: 302,
          column: 22
        }
      },
      "106": {
        start: {
          line: 304,
          column: 16
        },
        end: {
          line: 304,
          column: 73
        }
      },
      "107": {
        start: {
          line: 305,
          column: 16
        },
        end: {
          line: 305,
          column: 22
        }
      },
      "108": {
        start: {
          line: 307,
          column: 16
        },
        end: {
          line: 311,
          column: 19
        }
      },
      "109": {
        start: {
          line: 314,
          column: 29
        },
        end: {
          line: 314,
          column: 51
        }
      },
      "110": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 315,
          column: 97
        }
      },
      "111": {
        start: {
          line: 316,
          column: 25
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "112": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 330,
          column: 11
        }
      },
      "113": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 331,
          column: 51
        }
      },
      "114": {
        start: {
          line: 333,
          column: 29
        },
        end: {
          line: 333,
          column: 51
        }
      },
      "115": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 334,
          column: 97
        }
      },
      "116": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 337,
          column: 11
        }
      },
      "117": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 342,
          column: 11
        }
      },
      "118": {
        start: {
          line: 350,
          column: 4
        },
        end: {
          line: 352,
          column: 6
        }
      },
      "119": {
        start: {
          line: 356,
          column: 4
        },
        end: {
          line: 358,
          column: 6
        }
      },
      "120": {
        start: {
          line: 362,
          column: 4
        },
        end: {
          line: 364,
          column: 6
        }
      },
      "121": {
        start: {
          line: 368,
          column: 4
        },
        end: {
          line: 370,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "validateAdminAuth",
        decl: {
          start: {
            line: 56,
            column: 15
          },
          end: {
            line: 56,
            column: 32
          }
        },
        loc: {
          start: {
            line: 56,
            column: 35
          },
          end: {
            line: 87,
            column: 1
          }
        },
        line: 56
      },
      "5": {
        name: "getDateRange",
        decl: {
          start: {
            line: 91,
            column: 9
          },
          end: {
            line: 91,
            column: 21
          }
        },
        loc: {
          start: {
            line: 91,
            column: 52
          },
          end: {
            line: 123,
            column: 1
          }
        },
        line: 91
      },
      "6": {
        name: "GET",
        decl: {
          start: {
            line: 124,
            column: 15
          },
          end: {
            line: 124,
            column: 18
          }
        },
        loc: {
          start: {
            line: 124,
            column: 28
          },
          end: {
            line: 262,
            column: 1
          }
        },
        line: 124
      },
      "7": {
        name: "POST",
        decl: {
          start: {
            line: 263,
            column: 15
          },
          end: {
            line: 263,
            column: 19
          }
        },
        loc: {
          start: {
            line: 263,
            column: 29
          },
          end: {
            line: 344,
            column: 1
          }
        },
        line: 263
      },
      "8": {
        name: "generateSalesSummaryReport",
        decl: {
          start: {
            line: 348,
            column: 15
          },
          end: {
            line: 348,
            column: 41
          }
        },
        loc: {
          start: {
            line: 348,
            column: 51
          },
          end: {
            line: 353,
            column: 1
          }
        },
        line: 348
      },
      "9": {
        name: "generateCustomerAnalysisReport",
        decl: {
          start: {
            line: 354,
            column: 15
          },
          end: {
            line: 354,
            column: 45
          }
        },
        loc: {
          start: {
            line: 354,
            column: 55
          },
          end: {
            line: 359,
            column: 1
          }
        },
        line: 354
      },
      "10": {
        name: "generateProductPerformanceReport",
        decl: {
          start: {
            line: 360,
            column: 15
          },
          end: {
            line: 360,
            column: 47
          }
        },
        loc: {
          start: {
            line: 360,
            column: 57
          },
          end: {
            line: 365,
            column: 1
          }
        },
        line: 360
      },
      "11": {
        name: "generateStatusTimelineReport",
        decl: {
          start: {
            line: 366,
            column: 15
          },
          end: {
            line: 366,
            column: 43
          }
        },
        loc: {
          start: {
            line: 366,
            column: 53
          },
          end: {
            line: 371,
            column: 1
          }
        },
        line: 366
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "1": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "2": {
        loc: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 98,
            column: 18
          }
        }, {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 18
          }
        }, {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 104,
            column: 18
          }
        }, {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 108,
            column: 18
          }
        }, {
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 111,
            column: 18
          }
        }, {
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 115,
            column: 18
          }
        }, {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 117,
            column: 71
          }
        }],
        line: 95
      },
      "3": {
        loc: {
          start: {
            line: 113,
            column: 24
          },
          end: {
            line: 113,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 113,
            column: 37
          },
          end: {
            line: 113,
            column: 57
          }
        }, {
          start: {
            line: 113,
            column: 60
          },
          end: {
            line: 113,
            column: 110
          }
        }],
        line: 113
      },
      "4": {
        loc: {
          start: {
            line: 114,
            column: 22
          },
          end: {
            line: 114,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 114,
            column: 33
          },
          end: {
            line: 114,
            column: 51
          }
        }, {
          start: {
            line: 114,
            column: 54
          },
          end: {
            line: 114,
            column: 57
          }
        }],
        line: 114
      },
      "5": {
        loc: {
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "6": {
        loc: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "7": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "8": {
        loc: {
          start: {
            line: 179,
            column: 28
          },
          end: {
            line: 179,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 28
          },
          end: {
            line: 179,
            column: 51
          }
        }, {
          start: {
            line: 179,
            column: 55
          },
          end: {
            line: 179,
            column: 56
          }
        }],
        line: 179
      },
      "9": {
        loc: {
          start: {
            line: 233,
            column: 21
          },
          end: {
            line: 233,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 233,
            column: 46
          },
          end: {
            line: 233,
            column: 59
          }
        }, {
          start: {
            line: 233,
            column: 62
          },
          end: {
            line: 233,
            column: 77
          }
        }],
        line: 233
      },
      "10": {
        loc: {
          start: {
            line: 234,
            column: 19
          },
          end: {
            line: 234,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 234,
            column: 44
          },
          end: {
            line: 234,
            column: 55
          }
        }, {
          start: {
            line: 234,
            column: 58
          },
          end: {
            line: 234,
            column: 67
          }
        }],
        line: 234
      },
      "11": {
        loc: {
          start: {
            line: 235,
            column: 18
          },
          end: {
            line: 235,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 235,
            column: 43
          },
          end: {
            line: 235,
            column: 53
          }
        }, {
          start: {
            line: 235,
            column: 56
          },
          end: {
            line: 235,
            column: 70
          }
        }],
        line: 235
      },
      "12": {
        loc: {
          start: {
            line: 236,
            column: 19
          },
          end: {
            line: 236,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 236,
            column: 44
          },
          end: {
            line: 236,
            column: 55
          }
        }, {
          start: {
            line: 236,
            column: 58
          },
          end: {
            line: 236,
            column: 67
          }
        }],
        line: 236
      },
      "13": {
        loc: {
          start: {
            line: 257,
            column: 19
          },
          end: {
            line: 257,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 257,
            column: 60
          },
          end: {
            line: 257,
            column: 72
          }
        }, {
          start: {
            line: 257,
            column: 75
          },
          end: {
            line: 257,
            column: 84
          }
        }],
        line: 257
      },
      "14": {
        loc: {
          start: {
            line: 268,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 268
      },
      "15": {
        loc: {
          start: {
            line: 276,
            column: 38
          },
          end: {
            line: 276,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 276,
            column: 47
          },
          end: {
            line: 276,
            column: 53
          }
        }],
        line: 276
      },
      "16": {
        loc: {
          start: {
            line: 284,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 284
      },
      "17": {
        loc: {
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 312,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 294,
            column: 12
          },
          end: {
            line: 296,
            column: 22
          }
        }, {
          start: {
            line: 297,
            column: 12
          },
          end: {
            line: 299,
            column: 22
          }
        }, {
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 302,
            column: 22
          }
        }, {
          start: {
            line: 303,
            column: 12
          },
          end: {
            line: 305,
            column: 22
          }
        }, {
          start: {
            line: 306,
            column: 12
          },
          end: {
            line: 311,
            column: 19
          }
        }],
        line: 293
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0, 0, 0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0, 0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\orders\\analytics\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - ADMIN ORDERS ANALYTICS API ENTERPRISE\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { ApiResponse } from '@/types/api';\r\nimport { z } from 'zod';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\nimport { checkRateLimit, type RateLimitResult } from '@/lib/auth/rate-limiting';\r\nimport { addRateLimitHeaders, RATE_LIMIT_CONFIGS } from '@/lib/enterprise/rate-limiter';\r\nimport { metricsCollector } from '@/lib/enterprise/metrics';\r\n\r\n// ===================================\r\n// SCHEMAS DE VALIDACI\xD3N\r\n// ===================================\r\n\r\nconst AnalyticsFiltersSchema = z.object({\r\n  period: z.enum(['today', 'week', 'month', 'quarter', 'year', 'custom']).default('month'),\r\n  date_from: z.string().optional(),\r\n  date_to: z.string().optional(),\r\n  group_by: z.enum(['day', 'week', 'month']).default('day'),\r\n  include_details: z.boolean().default(false),\r\n});\r\n\r\n// ===================================\r\n// MIDDLEWARE DE AUTENTICACI\xD3N ADMIN\r\n// ===================================\r\n\r\nasync function validateAdminAuth() {\r\n  try {\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return { error: 'Usuario no autenticado', status: 401 };\r\n    }\r\n\r\n    const user = session.user;\r\n\r\n    // Verificar si es admin\r\n    const isAdmin = session.user.email === 'santiago@xor.com.ar';\r\n    if (!isAdmin) {\r\n      return { error: 'Acceso denegado - Se requieren permisos de administrador', status: 403 };\r\n    }\r\n\r\n    return { user: session.user, userId: session.user.id };\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.AUTH, 'Error en validaci\xF3n admin', { error });\r\n    return { error: 'Error de autenticaci\xF3n', status: 500 };\r\n  }\r\n}\r\n\r\n// ===================================\r\n// UTILIDADES DE FECHAS\r\n// ===================================\r\n\r\nfunction getDateRange(period: string, customFrom?: string, customTo?: string) {\r\n  const now = new Date();\r\n  let startDate: Date;\r\n  let endDate = now;\r\n\r\n  switch (period) {\r\n    case 'today':\r\n      startDate = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n      break;\r\n    case 'week':\r\n      startDate = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\r\n      break;\r\n    case 'month':\r\n      startDate = new Date(now.getFullYear(), now.getMonth(), 1);\r\n      break;\r\n    case 'quarter':\r\n      const quarterStart = Math.floor(now.getMonth() / 3) * 3;\r\n      startDate = new Date(now.getFullYear(), quarterStart, 1);\r\n      break;\r\n    case 'year':\r\n      startDate = new Date(now.getFullYear(), 0, 1);\r\n      break;\r\n    case 'custom':\r\n      startDate = customFrom ? new Date(customFrom) : new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\r\n      endDate = customTo ? new Date(customTo) : now;\r\n      break;\r\n    default:\r\n      startDate = new Date(now.getFullYear(), now.getMonth(), 1);\r\n  }\r\n\r\n  return {\r\n    startDate: startDate.toISOString(),\r\n    endDate: endDate.toISOString(),\r\n  };\r\n}\r\n\r\n// ===================================\r\n// GET - Obtener analytics de \xF3rdenes\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  const startTime = Date.now();\r\n  \r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        maxRequests: RATE_LIMIT_CONFIGS.admin.requests,\r\n        windowMs: RATE_LIMIT_CONFIGS.admin.window\r\n      },\r\n      'admin-orders-analytics'\r\n    );\r\n\r\n    if (!rateLimitResult.allowed) {\r\n      const response = NextResponse.json(\r\n        { error: 'Demasiadas solicitudes' },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult, {\r\n        maxRequests: RATE_LIMIT_CONFIGS.admin.requests,\r\n        windowMs: RATE_LIMIT_CONFIGS.admin.window,\r\n        standardHeaders: true,\r\n        legacyHeaders: false\r\n      });\r\n      return response;\r\n    }\r\n\r\n    // Validar autenticaci\xF3n admin\r\n    const authResult = await validateAdminAuth();\r\n    if ('error' in authResult) {\r\n      return NextResponse.json(\r\n        { error: authResult.error },\r\n        { status: authResult.status }\r\n      );\r\n    }\r\n\r\n    // Validar par\xE1metros de consulta\r\n    const { searchParams } = new URL(request.url);\r\n    const filtersResult = AnalyticsFiltersSchema.safeParse({\r\n      period: searchParams.get('period'),\r\n      date_from: searchParams.get('date_from'),\r\n      date_to: searchParams.get('date_to'),\r\n      group_by: searchParams.get('group_by'),\r\n      include_details: searchParams.get('include_details') === 'true',\r\n    });\r\n\r\n    if (!filtersResult.success) {\r\n      return NextResponse.json(\r\n        { error: 'Par\xE1metros de analytics inv\xE1lidos', details: filtersResult.error.errors },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const filters = filtersResult.data;\r\n    const { startDate, endDate } = getDateRange(filters.period, filters.date_from, filters.date_to);\r\n\r\n    // Obtener m\xE9tricas b\xE1sicas de prueba\r\n    const totalOrdersResult = await supabaseAdmin\r\n      .from('orders')\r\n      .select('id', { count: 'exact', head: true });\r\n    \r\n    const totalOrders = totalOrdersResult.count || 0;\r\n\r\n    // Datos simplificados para prueba\r\n    const revenue = 0;\r\n    const averageOrderValue = 0;\r\n    const statusDistribution = {};\r\n    const topProducts: any[] = [];\r\n    const revenueGrowth = 0;\r\n\r\n    // M\xE9tricas de performance\r\n    const responseTime = Date.now() - startTime;\r\n    try {\r\n      metricsCollector.recordApiCall('admin-orders-analytics', responseTime, 200);\r\n    } catch (error) {\r\n      // Ignorar errores de m\xE9tricas en desarrollo\r\n      console.warn('Metrics collection failed:', error);\r\n    }\r\n\r\n    const response: ApiResponse<{\r\n      summary: {\r\n        total_orders: number;\r\n        total_revenue: number;\r\n        average_order_value: number;\r\n        revenue_growth_percentage: number;\r\n        period: {\r\n          start_date: string;\r\n          end_date: string;\r\n          period_type: string;\r\n        };\r\n      };\r\n      status_distribution: Record<string, number>;\r\n      top_products: typeof topProducts;\r\n      daily_trends: any;\r\n      filters: typeof filters;\r\n    }> = {\r\n      data: {\r\n        summary: {\r\n          total_orders: totalOrders,\r\n          total_revenue: revenue,\r\n          average_order_value: averageOrderValue,\r\n          revenue_growth_percentage: revenueGrowth,\r\n          period: {\r\n            start_date: startDate,\r\n            end_date: endDate,\r\n            period_type: filters.period,\r\n          },\r\n        },\r\n        status_distribution: statusDistribution,\r\n        top_products: topProducts,\r\n        daily_trends: [],\r\n        filters,\r\n      },\r\n      success: true,\r\n      error: null,\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response);\r\n    addRateLimitHeaders(nextResponse, rateLimitResult, {\r\n      maxRequests: RATE_LIMIT_CONFIGS.admin.requests,\r\n      windowMs: RATE_LIMIT_CONFIGS.admin.window,\r\n      standardHeaders: true,\r\n      legacyHeaders: false\r\n    });\r\n\r\n    logger.log(LogLevel.INFO, LogCategory.API, 'Analytics de \xF3rdenes obtenidas exitosamente', {\r\n      period: filters.period,\r\n      totalOrders,\r\n      revenue,\r\n      responseTime,\r\n    });\r\n\r\n    return nextResponse;\r\n\r\n  } catch (error) {\r\n    const responseTime = Date.now() - startTime;\r\n\r\n    // Logging detallado del error\r\n    const errorDetails = {\r\n      message: error instanceof Error ? error.message : 'Unknown error',\r\n      stack: error instanceof Error ? error.stack : undefined,\r\n      name: error instanceof Error ? error.name : 'UnknownError',\r\n      cause: error instanceof Error ? error.cause : undefined\r\n    };\r\n\r\n    console.error('\u274C [Orders Analytics API] Error detallado:', errorDetails);\r\n\r\n    try {\r\n      await metricsCollector.recordRequest('admin-orders-analytics', 'GET', 500, responseTime);\r\n    } catch (metricsError) {\r\n      // Ignorar errores de m\xE9tricas en desarrollo\r\n      console.warn('Metrics collection failed:', metricsError);\r\n    }\r\n\r\n    try {\r\n      logger.log(LogLevel.ERROR, LogCategory.API, 'Error en GET /api/admin/orders/analytics', {\r\n        error: errorDetails,\r\n        timestamp: new Date().toISOString()\r\n      });\r\n    } catch (logError) {\r\n      // Ignorar errores de logging en desarrollo\r\n      console.error('Logging failed:', logError);\r\n    }\r\n\r\n    return NextResponse.json(\r\n      {\r\n        error: 'Error interno del servidor',\r\n        details: errorDetails.message,\r\n        debug: process.env.NODE_ENV === 'development' ? errorDetails : undefined\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// ===================================\r\n// POST - Generar reporte personalizado\r\n// ===================================\r\nexport async function POST(request: NextRequest) {\r\n  const startTime = Date.now();\r\n  \r\n  try {\r\n    // Validar autenticaci\xF3n admin\r\n    const authResult = await validateAdminAuth();\r\n    if ('error' in authResult) {\r\n      return NextResponse.json(\r\n        { error: authResult.error },\r\n        { status: authResult.status }\r\n      );\r\n    }\r\n\r\n    const body = await request.json();\r\n    const { report_type, filters, format = 'json' } = body;\r\n\r\n    // Validar tipo de reporte\r\n    const validReportTypes = ['sales_summary', 'customer_analysis', 'product_performance', 'status_timeline'];\r\n    if (!validReportTypes.includes(report_type)) {\r\n      return NextResponse.json(\r\n        { error: `Tipo de reporte inv\xE1lido. Tipos v\xE1lidos: ${validReportTypes.join(', ')}` },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Generar reporte seg\xFAn el tipo\r\n    let reportData;\r\n    switch (report_type) {\r\n      case 'sales_summary':\r\n        reportData = await generateSalesSummaryReport(filters);\r\n        break;\r\n      case 'customer_analysis':\r\n        reportData = await generateCustomerAnalysisReport(filters);\r\n        break;\r\n      case 'product_performance':\r\n        reportData = await generateProductPerformanceReport(filters);\r\n        break;\r\n      case 'status_timeline':\r\n        reportData = await generateStatusTimelineReport(filters);\r\n        break;\r\n      default:\r\n        return NextResponse.json(\r\n          { error: 'Tipo de reporte no implementado' },\r\n          { status: 501 }\r\n        );\r\n    }\r\n\r\n    // M\xE9tricas de performance\r\n    const responseTime = Date.now() - startTime;\r\n    metricsCollector.recordApiCall('admin-orders-custom-report', responseTime, 200);\r\n\r\n    const response: ApiResponse<{\r\n      report_type: string;\r\n      generated_at: string;\r\n      data: any;\r\n      filters: any;\r\n    }> = {\r\n      data: {\r\n        report_type,\r\n        generated_at: new Date().toISOString(),\r\n        data: reportData,\r\n        filters,\r\n      },\r\n      success: true,\r\n      error: null,\r\n    };\r\n\r\n    logger.log(LogLevel.INFO, LogCategory.API, 'Reporte personalizado generado', {\r\n      reportType: report_type,\r\n      format,\r\n      responseTime,\r\n    });\r\n\r\n    return NextResponse.json(response);\r\n\r\n  } catch (error) {\r\n    const responseTime = Date.now() - startTime;\r\n    metricsCollector.recordApiCall('admin-orders-custom-report', responseTime, 500);\r\n    \r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en POST /api/admin/orders/analytics', { error });\r\n    \r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// ===================================\r\n// FUNCIONES DE GENERACI\xD3N DE REPORTES\r\n// ===================================\r\n\r\nasync function generateSalesSummaryReport(filters: any) {\r\n  // TODO: Implementar reporte de resumen de ventas\r\n  return { message: 'Sales summary report - To be implemented' };\r\n}\r\n\r\nasync function generateCustomerAnalysisReport(filters: any) {\r\n  // TODO: Implementar an\xE1lisis de clientes\r\n  return { message: 'Customer analysis report - To be implemented' };\r\n}\r\n\r\nasync function generateProductPerformanceReport(filters: any) {\r\n  // TODO: Implementar reporte de performance de productos\r\n  return { message: 'Product performance report - To be implemented' };\r\n}\r\n\r\nasync function generateStatusTimelineReport(filters: any) {\r\n  // TODO: Implementar timeline de estados\r\n  return { message: 'Status timeline report - To be implemented' };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "AnalyticsFiltersSchema", "z", "object", "period", "enum", "default", "date_from", "string", "optional", "date_to", "group_by", "include_details", "boolean", "validateAdminAuth", "session", "auth", "user", "error", "status", "isAdmin", "email", "userId", "id", "logger", "log", "LogLevel", "ERROR", "LogCategory", "AUTH", "getDateRange", "customFrom", "customTo", "now", "Date", "startDate", "endDate", "getFullYear", "getMonth", "getDate", "getTime", "quarterStart", "Math", "floor", "toISOString", "request", "startTime", "rateLimitResult", "checkRateLimit", "maxRequests", "RATE_LIMIT_CONFIGS", "admin", "requests", "windowMs", "window", "allowed", "response", "NextResponse", "json", "addRateLimitHeaders", "standardHeaders", "legacyHeaders", "authResult", "searchParams", "URL", "url", "filtersResult", "safeParse", "get", "success", "details", "errors", "filters", "data", "totalOrdersResult", "supabaseAdmin", "from", "select", "count", "head", "totalOrders", "revenue", "averageOrderValue", "statusDistribution", "topProducts", "revenueGrowth", "responseTime", "metricsCollector", "recordApiCall", "console", "warn", "summary", "total_orders", "total_revenue", "average_order_value", "revenue_growth_percentage", "start_date", "end_date", "period_type", "status_distribution", "top_products", "daily_trends", "nextResponse", "INFO", "API", "errorDetails", "message", "Error", "stack", "undefined", "name", "cause", "recordRequest", "metricsError", "timestamp", "logError", "debug", "process", "env", "NODE_ENV", "body", "report_type", "format", "validReportTypes", "includes", "join", "reportData", "generateSalesSummaryReport", "generateCustomerAnalysisReport", "generateProductPerformanceReport", "generateStatusTimelineReport", "generated_at", "reportType"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "06799263697296176f0f59e00eece1e989bb8c57"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2e4h1mzvw7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2e4h1mzvw7();
cov_2e4h1mzvw7().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2e4h1mzvw7().f[0]++;
  cov_2e4h1mzvw7().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2e4h1mzvw7().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2e4h1mzvw7().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_2e4h1mzvw7().f[1]++;
    cov_2e4h1mzvw7().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_2e4h1mzvw7().f[2]++;
    cov_2e4h1mzvw7().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_2e4h1mzvw7().f[3]++;
    cov_2e4h1mzvw7().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_2e4h1mzvw7().s[7]++, require("next/server"));
const _supabase =
/* istanbul ignore next */
(cov_2e4h1mzvw7().s[8]++, require("../../../../../lib/integrations/supabase"));
const _config =
/* istanbul ignore next */
(cov_2e4h1mzvw7().s[9]++, require("../../../../../lib/auth/config"));
const _zod =
/* istanbul ignore next */
(cov_2e4h1mzvw7().s[10]++, require("zod"));
const _logger =
/* istanbul ignore next */
(cov_2e4h1mzvw7().s[11]++, require("../../../../../lib/enterprise/logger"));
const _ratelimiting =
/* istanbul ignore next */
(cov_2e4h1mzvw7().s[12]++, require("../../../../../lib/auth/rate-limiting"));
const _ratelimiter =
/* istanbul ignore next */
(cov_2e4h1mzvw7().s[13]++, require("../../../../../lib/enterprise/rate-limiter"));
const _metrics =
/* istanbul ignore next */
(cov_2e4h1mzvw7().s[14]++, require("../../../../../lib/enterprise/metrics"));
const runtime =
/* istanbul ignore next */
(cov_2e4h1mzvw7().s[15]++, 'nodejs');
// ===================================
// SCHEMAS DE VALIDACIÃN
// ===================================
const AnalyticsFiltersSchema =
/* istanbul ignore next */
(cov_2e4h1mzvw7().s[16]++, _zod.z.object({
  period: _zod.z.enum(['today', 'week', 'month', 'quarter', 'year', 'custom']).default('month'),
  date_from: _zod.z.string().optional(),
  date_to: _zod.z.string().optional(),
  group_by: _zod.z.enum(['day', 'week', 'month']).default('day'),
  include_details: _zod.z.boolean().default(false)
}));
// ===================================
// MIDDLEWARE DE AUTENTICACIÃN ADMIN
// ===================================
async function validateAdminAuth() {
  /* istanbul ignore next */
  cov_2e4h1mzvw7().f[4]++;
  cov_2e4h1mzvw7().s[17]++;
  try {
    const session =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[18]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_2e4h1mzvw7().s[19]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_2e4h1mzvw7().b[0][0]++;
      cov_2e4h1mzvw7().s[20]++;
      return {
        error: 'Usuario no autenticado',
        status: 401
      };
    } else
    /* istanbul ignore next */
    {
      cov_2e4h1mzvw7().b[0][1]++;
    }
    const user =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[21]++, session.user);
    // Verificar si es admin
    const isAdmin =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[22]++, session.user.email === 'santiago@xor.com.ar');
    /* istanbul ignore next */
    cov_2e4h1mzvw7().s[23]++;
    if (!isAdmin) {
      /* istanbul ignore next */
      cov_2e4h1mzvw7().b[1][0]++;
      cov_2e4h1mzvw7().s[24]++;
      return {
        error: 'Acceso denegado - Se requieren permisos de administrador',
        status: 403
      };
    } else
    /* istanbul ignore next */
    {
      cov_2e4h1mzvw7().b[1][1]++;
    }
    cov_2e4h1mzvw7().s[25]++;
    return {
      user: session.user,
      userId: session.user.id
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_2e4h1mzvw7().s[26]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.AUTH, 'Error en validaciÃ³n admin', {
      error
    });
    /* istanbul ignore next */
    cov_2e4h1mzvw7().s[27]++;
    return {
      error: 'Error de autenticaciÃ³n',
      status: 500
    };
  }
}
// ===================================
// UTILIDADES DE FECHAS
// ===================================
function getDateRange(period, customFrom, customTo) {
  /* istanbul ignore next */
  cov_2e4h1mzvw7().f[5]++;
  const now =
  /* istanbul ignore next */
  (cov_2e4h1mzvw7().s[28]++, new Date());
  let startDate;
  let endDate =
  /* istanbul ignore next */
  (cov_2e4h1mzvw7().s[29]++, now);
  /* istanbul ignore next */
  cov_2e4h1mzvw7().s[30]++;
  switch (period) {
    case 'today':
      /* istanbul ignore next */
      cov_2e4h1mzvw7().b[2][0]++;
      cov_2e4h1mzvw7().s[31]++;
      startDate = new Date(now.getFullYear(), now.getMonth(), now.getDate());
      /* istanbul ignore next */
      cov_2e4h1mzvw7().s[32]++;
      break;
    case 'week':
      /* istanbul ignore next */
      cov_2e4h1mzvw7().b[2][1]++;
      cov_2e4h1mzvw7().s[33]++;
      startDate = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);
      /* istanbul ignore next */
      cov_2e4h1mzvw7().s[34]++;
      break;
    case 'month':
      /* istanbul ignore next */
      cov_2e4h1mzvw7().b[2][2]++;
      cov_2e4h1mzvw7().s[35]++;
      startDate = new Date(now.getFullYear(), now.getMonth(), 1);
      /* istanbul ignore next */
      cov_2e4h1mzvw7().s[36]++;
      break;
    case 'quarter':
      /* istanbul ignore next */
      cov_2e4h1mzvw7().b[2][3]++;
      const quarterStart =
      /* istanbul ignore next */
      (cov_2e4h1mzvw7().s[37]++, Math.floor(now.getMonth() / 3) * 3);
      /* istanbul ignore next */
      cov_2e4h1mzvw7().s[38]++;
      startDate = new Date(now.getFullYear(), quarterStart, 1);
      /* istanbul ignore next */
      cov_2e4h1mzvw7().s[39]++;
      break;
    case 'year':
      /* istanbul ignore next */
      cov_2e4h1mzvw7().b[2][4]++;
      cov_2e4h1mzvw7().s[40]++;
      startDate = new Date(now.getFullYear(), 0, 1);
      /* istanbul ignore next */
      cov_2e4h1mzvw7().s[41]++;
      break;
    case 'custom':
      /* istanbul ignore next */
      cov_2e4h1mzvw7().b[2][5]++;
      cov_2e4h1mzvw7().s[42]++;
      startDate = customFrom ?
      /* istanbul ignore next */
      (cov_2e4h1mzvw7().b[3][0]++, new Date(customFrom)) :
      /* istanbul ignore next */
      (cov_2e4h1mzvw7().b[3][1]++, new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000));
      /* istanbul ignore next */
      cov_2e4h1mzvw7().s[43]++;
      endDate = customTo ?
      /* istanbul ignore next */
      (cov_2e4h1mzvw7().b[4][0]++, new Date(customTo)) :
      /* istanbul ignore next */
      (cov_2e4h1mzvw7().b[4][1]++, now);
      /* istanbul ignore next */
      cov_2e4h1mzvw7().s[44]++;
      break;
    default:
      /* istanbul ignore next */
      cov_2e4h1mzvw7().b[2][6]++;
      cov_2e4h1mzvw7().s[45]++;
      startDate = new Date(now.getFullYear(), now.getMonth(), 1);
  }
  /* istanbul ignore next */
  cov_2e4h1mzvw7().s[46]++;
  return {
    startDate: startDate.toISOString(),
    endDate: endDate.toISOString()
  };
}
async function GET(request) {
  /* istanbul ignore next */
  cov_2e4h1mzvw7().f[6]++;
  const startTime =
  /* istanbul ignore next */
  (cov_2e4h1mzvw7().s[47]++, Date.now());
  /* istanbul ignore next */
  cov_2e4h1mzvw7().s[48]++;
  try {
    // Rate limiting
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[49]++, await (0, _ratelimiting.checkRateLimit)(request, {
      maxRequests: _ratelimiter.RATE_LIMIT_CONFIGS.admin.requests,
      windowMs: _ratelimiter.RATE_LIMIT_CONFIGS.admin.window
    }, 'admin-orders-analytics'));
    /* istanbul ignore next */
    cov_2e4h1mzvw7().s[50]++;
    if (!rateLimitResult.allowed) {
      /* istanbul ignore next */
      cov_2e4h1mzvw7().b[5][0]++;
      const response =
      /* istanbul ignore next */
      (cov_2e4h1mzvw7().s[51]++, _server.NextResponse.json({
        error: 'Demasiadas solicitudes'
      }, {
        status: 429
      }));
      /* istanbul ignore next */
      cov_2e4h1mzvw7().s[52]++;
      (0, _ratelimiter.addRateLimitHeaders)(response, rateLimitResult, {
        maxRequests: _ratelimiter.RATE_LIMIT_CONFIGS.admin.requests,
        windowMs: _ratelimiter.RATE_LIMIT_CONFIGS.admin.window,
        standardHeaders: true,
        legacyHeaders: false
      });
      /* istanbul ignore next */
      cov_2e4h1mzvw7().s[53]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_2e4h1mzvw7().b[5][1]++;
    }
    // Validar autenticaciÃ³n admin
    const authResult =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[54]++, await validateAdminAuth());
    /* istanbul ignore next */
    cov_2e4h1mzvw7().s[55]++;
    if ('error' in authResult) {
      /* istanbul ignore next */
      cov_2e4h1mzvw7().b[6][0]++;
      cov_2e4h1mzvw7().s[56]++;
      return _server.NextResponse.json({
        error: authResult.error
      }, {
        status: authResult.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e4h1mzvw7().b[6][1]++;
    }
    // Validar parÃ¡metros de consulta
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[57]++, new URL(request.url));
    const filtersResult =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[58]++, AnalyticsFiltersSchema.safeParse({
      period: searchParams.get('period'),
      date_from: searchParams.get('date_from'),
      date_to: searchParams.get('date_to'),
      group_by: searchParams.get('group_by'),
      include_details: searchParams.get('include_details') === 'true'
    }));
    /* istanbul ignore next */
    cov_2e4h1mzvw7().s[59]++;
    if (!filtersResult.success) {
      /* istanbul ignore next */
      cov_2e4h1mzvw7().b[7][0]++;
      cov_2e4h1mzvw7().s[60]++;
      return _server.NextResponse.json({
        error: 'ParÃ¡metros de analytics invÃ¡lidos',
        details: filtersResult.error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e4h1mzvw7().b[7][1]++;
    }
    const filters =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[61]++, filtersResult.data);
    const {
      startDate,
      endDate
    } =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[62]++, getDateRange(filters.period, filters.date_from, filters.date_to));
    // Obtener mÃ©tricas bÃ¡sicas de prueba
    const totalOrdersResult =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[63]++, await _supabase.supabaseAdmin.from('orders').select('id', {
      count: 'exact',
      head: true
    }));
    const totalOrders =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[64]++,
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().b[8][0]++, totalOrdersResult.count) ||
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().b[8][1]++, 0));
    // Datos simplificados para prueba
    const revenue =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[65]++, 0);
    const averageOrderValue =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[66]++, 0);
    const statusDistribution =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[67]++, {});
    const topProducts =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[68]++, []);
    const revenueGrowth =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[69]++, 0);
    // MÃ©tricas de performance
    const responseTime =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[70]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_2e4h1mzvw7().s[71]++;
    try {
      /* istanbul ignore next */
      cov_2e4h1mzvw7().s[72]++;
      _metrics.metricsCollector.recordApiCall('admin-orders-analytics', responseTime, 200);
    } catch (error) {
      /* istanbul ignore next */
      cov_2e4h1mzvw7().s[73]++;
      // Ignorar errores de mÃ©tricas en desarrollo
      console.warn('Metrics collection failed:', error);
    }
    const response =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[74]++, {
      data: {
        summary: {
          total_orders: totalOrders,
          total_revenue: revenue,
          average_order_value: averageOrderValue,
          revenue_growth_percentage: revenueGrowth,
          period: {
            start_date: startDate,
            end_date: endDate,
            period_type: filters.period
          }
        },
        status_distribution: statusDistribution,
        top_products: topProducts,
        daily_trends: [],
        filters
      },
      success: true,
      error: null
    });
    const nextResponse =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[75]++, _server.NextResponse.json(response));
    /* istanbul ignore next */
    cov_2e4h1mzvw7().s[76]++;
    (0, _ratelimiter.addRateLimitHeaders)(nextResponse, rateLimitResult, {
      maxRequests: _ratelimiter.RATE_LIMIT_CONFIGS.admin.requests,
      windowMs: _ratelimiter.RATE_LIMIT_CONFIGS.admin.window,
      standardHeaders: true,
      legacyHeaders: false
    });
    /* istanbul ignore next */
    cov_2e4h1mzvw7().s[77]++;
    _logger.logger.log(_logger.LogLevel.INFO, _logger.LogCategory.API, 'Analytics de Ã³rdenes obtenidas exitosamente', {
      period: filters.period,
      totalOrders,
      revenue,
      responseTime
    });
    /* istanbul ignore next */
    cov_2e4h1mzvw7().s[78]++;
    return nextResponse;
  } catch (error) {
    const responseTime =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[79]++, Date.now() - startTime);
    // Logging detallado del error
    const errorDetails =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[80]++, {
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2e4h1mzvw7().b[9][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2e4h1mzvw7().b[9][1]++, 'Unknown error'),
      stack: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2e4h1mzvw7().b[10][0]++, error.stack) :
      /* istanbul ignore next */
      (cov_2e4h1mzvw7().b[10][1]++, undefined),
      name: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2e4h1mzvw7().b[11][0]++, error.name) :
      /* istanbul ignore next */
      (cov_2e4h1mzvw7().b[11][1]++, 'UnknownError'),
      cause: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2e4h1mzvw7().b[12][0]++, error.cause) :
      /* istanbul ignore next */
      (cov_2e4h1mzvw7().b[12][1]++, undefined)
    });
    /* istanbul ignore next */
    cov_2e4h1mzvw7().s[81]++;
    console.error('â [Orders Analytics API] Error detallado:', errorDetails);
    /* istanbul ignore next */
    cov_2e4h1mzvw7().s[82]++;
    try {
      /* istanbul ignore next */
      cov_2e4h1mzvw7().s[83]++;
      await _metrics.metricsCollector.recordRequest('admin-orders-analytics', 'GET', 500, responseTime);
    } catch (metricsError) {
      /* istanbul ignore next */
      cov_2e4h1mzvw7().s[84]++;
      // Ignorar errores de mÃ©tricas en desarrollo
      console.warn('Metrics collection failed:', metricsError);
    }
    /* istanbul ignore next */
    cov_2e4h1mzvw7().s[85]++;
    try {
      /* istanbul ignore next */
      cov_2e4h1mzvw7().s[86]++;
      _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en GET /api/admin/orders/analytics', {
        error: errorDetails,
        timestamp: new Date().toISOString()
      });
    } catch (logError) {
      /* istanbul ignore next */
      cov_2e4h1mzvw7().s[87]++;
      // Ignorar errores de logging en desarrollo
      console.error('Logging failed:', logError);
    }
    /* istanbul ignore next */
    cov_2e4h1mzvw7().s[88]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor',
      details: errorDetails.message,
      debug: process.env.NODE_ENV === 'development' ?
      /* istanbul ignore next */
      (cov_2e4h1mzvw7().b[13][0]++, errorDetails) :
      /* istanbul ignore next */
      (cov_2e4h1mzvw7().b[13][1]++, undefined)
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_2e4h1mzvw7().f[7]++;
  const startTime =
  /* istanbul ignore next */
  (cov_2e4h1mzvw7().s[89]++, Date.now());
  /* istanbul ignore next */
  cov_2e4h1mzvw7().s[90]++;
  try {
    // Validar autenticaciÃ³n admin
    const authResult =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[91]++, await validateAdminAuth());
    /* istanbul ignore next */
    cov_2e4h1mzvw7().s[92]++;
    if ('error' in authResult) {
      /* istanbul ignore next */
      cov_2e4h1mzvw7().b[14][0]++;
      cov_2e4h1mzvw7().s[93]++;
      return _server.NextResponse.json({
        error: authResult.error
      }, {
        status: authResult.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e4h1mzvw7().b[14][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[94]++, await request.json());
    const {
      report_type,
      filters,
      format =
      /* istanbul ignore next */
      (cov_2e4h1mzvw7().b[15][0]++, 'json')
    } =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[95]++, body);
    // Validar tipo de reporte
    const validReportTypes =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[96]++, ['sales_summary', 'customer_analysis', 'product_performance', 'status_timeline']);
    /* istanbul ignore next */
    cov_2e4h1mzvw7().s[97]++;
    if (!validReportTypes.includes(report_type)) {
      /* istanbul ignore next */
      cov_2e4h1mzvw7().b[16][0]++;
      cov_2e4h1mzvw7().s[98]++;
      return _server.NextResponse.json({
        error: `Tipo de reporte invÃ¡lido. Tipos vÃ¡lidos: ${validReportTypes.join(', ')}`
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e4h1mzvw7().b[16][1]++;
    }
    // Generar reporte segÃºn el tipo
    let reportData;
    /* istanbul ignore next */
    cov_2e4h1mzvw7().s[99]++;
    switch (report_type) {
      case 'sales_summary':
        /* istanbul ignore next */
        cov_2e4h1mzvw7().b[17][0]++;
        cov_2e4h1mzvw7().s[100]++;
        reportData = await generateSalesSummaryReport(filters);
        /* istanbul ignore next */
        cov_2e4h1mzvw7().s[101]++;
        break;
      case 'customer_analysis':
        /* istanbul ignore next */
        cov_2e4h1mzvw7().b[17][1]++;
        cov_2e4h1mzvw7().s[102]++;
        reportData = await generateCustomerAnalysisReport(filters);
        /* istanbul ignore next */
        cov_2e4h1mzvw7().s[103]++;
        break;
      case 'product_performance':
        /* istanbul ignore next */
        cov_2e4h1mzvw7().b[17][2]++;
        cov_2e4h1mzvw7().s[104]++;
        reportData = await generateProductPerformanceReport(filters);
        /* istanbul ignore next */
        cov_2e4h1mzvw7().s[105]++;
        break;
      case 'status_timeline':
        /* istanbul ignore next */
        cov_2e4h1mzvw7().b[17][3]++;
        cov_2e4h1mzvw7().s[106]++;
        reportData = await generateStatusTimelineReport(filters);
        /* istanbul ignore next */
        cov_2e4h1mzvw7().s[107]++;
        break;
      default:
        /* istanbul ignore next */
        cov_2e4h1mzvw7().b[17][4]++;
        cov_2e4h1mzvw7().s[108]++;
        return _server.NextResponse.json({
          error: 'Tipo de reporte no implementado'
        }, {
          status: 501
        });
    }
    // MÃ©tricas de performance
    const responseTime =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[109]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_2e4h1mzvw7().s[110]++;
    _metrics.metricsCollector.recordApiCall('admin-orders-custom-report', responseTime, 200);
    const response =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[111]++, {
      data: {
        report_type,
        generated_at: new Date().toISOString(),
        data: reportData,
        filters
      },
      success: true,
      error: null
    });
    /* istanbul ignore next */
    cov_2e4h1mzvw7().s[112]++;
    _logger.logger.log(_logger.LogLevel.INFO, _logger.LogCategory.API, 'Reporte personalizado generado', {
      reportType: report_type,
      format,
      responseTime
    });
    /* istanbul ignore next */
    cov_2e4h1mzvw7().s[113]++;
    return _server.NextResponse.json(response);
  } catch (error) {
    const responseTime =
    /* istanbul ignore next */
    (cov_2e4h1mzvw7().s[114]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_2e4h1mzvw7().s[115]++;
    _metrics.metricsCollector.recordApiCall('admin-orders-custom-report', responseTime, 500);
    /* istanbul ignore next */
    cov_2e4h1mzvw7().s[116]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en POST /api/admin/orders/analytics', {
      error
    });
    /* istanbul ignore next */
    cov_2e4h1mzvw7().s[117]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
// ===================================
// FUNCIONES DE GENERACIÃN DE REPORTES
// ===================================
async function generateSalesSummaryReport(filters) {
  /* istanbul ignore next */
  cov_2e4h1mzvw7().f[8]++;
  cov_2e4h1mzvw7().s[118]++;
  // TODO: Implementar reporte de resumen de ventas
  return {
    message: 'Sales summary report - To be implemented'
  };
}
async function generateCustomerAnalysisReport(filters) {
  /* istanbul ignore next */
  cov_2e4h1mzvw7().f[9]++;
  cov_2e4h1mzvw7().s[119]++;
  // TODO: Implementar anÃ¡lisis de clientes
  return {
    message: 'Customer analysis report - To be implemented'
  };
}
async function generateProductPerformanceReport(filters) {
  /* istanbul ignore next */
  cov_2e4h1mzvw7().f[10]++;
  cov_2e4h1mzvw7().s[120]++;
  // TODO: Implementar reporte de performance de productos
  return {
    message: 'Product performance report - To be implemented'
  };
}
async function generateStatusTimelineReport(filters) {
  /* istanbul ignore next */
  cov_2e4h1mzvw7().f[11]++;
  cov_2e4h1mzvw7().s[121]++;
  // TODO: Implementar timeline de estados
  return {
    message: 'Status timeline report - To be implemented'
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmU0aDFtenZ3NyIsImFjdHVhbENvdmVyYWdlIiwicyIsIkdFVCIsImYiLCJQT1NUIiwicnVudGltZSIsIkFuYWx5dGljc0ZpbHRlcnNTY2hlbWEiLCJfem9kIiwieiIsIm9iamVjdCIsInBlcmlvZCIsImVudW0iLCJkZWZhdWx0IiwiZGF0ZV9mcm9tIiwic3RyaW5nIiwib3B0aW9uYWwiLCJkYXRlX3RvIiwiZ3JvdXBfYnkiLCJpbmNsdWRlX2RldGFpbHMiLCJib29sZWFuIiwidmFsaWRhdGVBZG1pbkF1dGgiLCJzZXNzaW9uIiwiX2NvbmZpZyIsImF1dGgiLCJ1c2VyIiwiYiIsImVycm9yIiwic3RhdHVzIiwiaXNBZG1pbiIsImVtYWlsIiwidXNlcklkIiwiaWQiLCJfbG9nZ2VyIiwibG9nZ2VyIiwibG9nIiwiTG9nTGV2ZWwiLCJFUlJPUiIsIkxvZ0NhdGVnb3J5IiwiQVVUSCIsImdldERhdGVSYW5nZSIsImN1c3RvbUZyb20iLCJjdXN0b21UbyIsIm5vdyIsIkRhdGUiLCJzdGFydERhdGUiLCJlbmREYXRlIiwiZ2V0RnVsbFllYXIiLCJnZXRNb250aCIsImdldERhdGUiLCJnZXRUaW1lIiwicXVhcnRlclN0YXJ0IiwiTWF0aCIsImZsb29yIiwidG9JU09TdHJpbmciLCJyZXF1ZXN0Iiwic3RhcnRUaW1lIiwicmF0ZUxpbWl0UmVzdWx0IiwiX3JhdGVsaW1pdGluZyIsImNoZWNrUmF0ZUxpbWl0IiwibWF4UmVxdWVzdHMiLCJfcmF0ZWxpbWl0ZXIiLCJSQVRFX0xJTUlUX0NPTkZJR1MiLCJhZG1pbiIsInJlcXVlc3RzIiwid2luZG93TXMiLCJ3aW5kb3ciLCJhbGxvd2VkIiwicmVzcG9uc2UiLCJfc2VydmVyIiwiTmV4dFJlc3BvbnNlIiwianNvbiIsImFkZFJhdGVMaW1pdEhlYWRlcnMiLCJzdGFuZGFyZEhlYWRlcnMiLCJsZWdhY3lIZWFkZXJzIiwiYXV0aFJlc3VsdCIsInNlYXJjaFBhcmFtcyIsIlVSTCIsInVybCIsImZpbHRlcnNSZXN1bHQiLCJzYWZlUGFyc2UiLCJnZXQiLCJzdWNjZXNzIiwiZGV0YWlscyIsImVycm9ycyIsImZpbHRlcnMiLCJkYXRhIiwidG90YWxPcmRlcnNSZXN1bHQiLCJfc3VwYWJhc2UiLCJzdXBhYmFzZUFkbWluIiwiZnJvbSIsInNlbGVjdCIsImNvdW50IiwiaGVhZCIsInRvdGFsT3JkZXJzIiwicmV2ZW51ZSIsImF2ZXJhZ2VPcmRlclZhbHVlIiwic3RhdHVzRGlzdHJpYnV0aW9uIiwidG9wUHJvZHVjdHMiLCJyZXZlbnVlR3Jvd3RoIiwicmVzcG9uc2VUaW1lIiwiX21ldHJpY3MiLCJtZXRyaWNzQ29sbGVjdG9yIiwicmVjb3JkQXBpQ2FsbCIsImNvbnNvbGUiLCJ3YXJuIiwic3VtbWFyeSIsInRvdGFsX29yZGVycyIsInRvdGFsX3JldmVudWUiLCJhdmVyYWdlX29yZGVyX3ZhbHVlIiwicmV2ZW51ZV9ncm93dGhfcGVyY2VudGFnZSIsInN0YXJ0X2RhdGUiLCJlbmRfZGF0ZSIsInBlcmlvZF90eXBlIiwic3RhdHVzX2Rpc3RyaWJ1dGlvbiIsInRvcF9wcm9kdWN0cyIsImRhaWx5X3RyZW5kcyIsIm5leHRSZXNwb25zZSIsIklORk8iLCJBUEkiLCJlcnJvckRldGFpbHMiLCJtZXNzYWdlIiwiRXJyb3IiLCJzdGFjayIsInVuZGVmaW5lZCIsIm5hbWUiLCJjYXVzZSIsInJlY29yZFJlcXVlc3QiLCJtZXRyaWNzRXJyb3IiLCJ0aW1lc3RhbXAiLCJsb2dFcnJvciIsImRlYnVnIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiYm9keSIsInJlcG9ydF90eXBlIiwiZm9ybWF0IiwidmFsaWRSZXBvcnRUeXBlcyIsImluY2x1ZGVzIiwiam9pbiIsInJlcG9ydERhdGEiLCJnZW5lcmF0ZVNhbGVzU3VtbWFyeVJlcG9ydCIsImdlbmVyYXRlQ3VzdG9tZXJBbmFseXNpc1JlcG9ydCIsImdlbmVyYXRlUHJvZHVjdFBlcmZvcm1hbmNlUmVwb3J0IiwiZ2VuZXJhdGVTdGF0dXNUaW1lbGluZVJlcG9ydCIsImdlbmVyYXRlZF9hdCIsInJlcG9ydFR5cGUiXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXG1hcnRpXFxEZXNrdG9wXFxERVNBUlJPTExPU1dcXEJPSUxFUlBMQVRURSBFLUNPTU1FUkNFXFxzcmNcXGFwcFxcYXBpXFxhZG1pblxcb3JkZXJzXFxhbmFseXRpY3NcXHJvdXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvbmZpZ3VyYWNpw7NuIHBhcmEgTm9kZS5qcyBSdW50aW1lXHJcbmV4cG9ydCBjb25zdCBydW50aW1lID0gJ25vZGVqcyc7XHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyBQSU5URVlBIEUtQ09NTUVSQ0UgLSBBRE1JTiBPUkRFUlMgQU5BTFlUSUNTIEFQSSBFTlRFUlBSSVNFXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG5pbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xyXG5pbXBvcnQgeyBzdXBhYmFzZUFkbWluIH0gZnJvbSAnQC9saWIvaW50ZWdyYXRpb25zL3N1cGFiYXNlJztcclxuaW1wb3J0IHsgYXV0aCB9IGZyb20gJ0AvbGliL2F1dGgvY29uZmlnJztcclxuaW1wb3J0IHsgQXBpUmVzcG9uc2UgfSBmcm9tICdAL3R5cGVzL2FwaSc7XHJcbmltcG9ydCB7IHogfSBmcm9tICd6b2QnO1xyXG5pbXBvcnQgeyBsb2dnZXIsIExvZ0xldmVsLCBMb2dDYXRlZ29yeSB9IGZyb20gJ0AvbGliL2VudGVycHJpc2UvbG9nZ2VyJztcclxuaW1wb3J0IHsgY2hlY2tSYXRlTGltaXQsIHR5cGUgUmF0ZUxpbWl0UmVzdWx0IH0gZnJvbSAnQC9saWIvYXV0aC9yYXRlLWxpbWl0aW5nJztcclxuaW1wb3J0IHsgYWRkUmF0ZUxpbWl0SGVhZGVycywgUkFURV9MSU1JVF9DT05GSUdTIH0gZnJvbSAnQC9saWIvZW50ZXJwcmlzZS9yYXRlLWxpbWl0ZXInO1xyXG5pbXBvcnQgeyBtZXRyaWNzQ29sbGVjdG9yIH0gZnJvbSAnQC9saWIvZW50ZXJwcmlzZS9tZXRyaWNzJztcclxuXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vIFNDSEVNQVMgREUgVkFMSURBQ0nDk05cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbmNvbnN0IEFuYWx5dGljc0ZpbHRlcnNTY2hlbWEgPSB6Lm9iamVjdCh7XHJcbiAgcGVyaW9kOiB6LmVudW0oWyd0b2RheScsICd3ZWVrJywgJ21vbnRoJywgJ3F1YXJ0ZXInLCAneWVhcicsICdjdXN0b20nXSkuZGVmYXVsdCgnbW9udGgnKSxcclxuICBkYXRlX2Zyb206IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcclxuICBkYXRlX3RvOiB6LnN0cmluZygpLm9wdGlvbmFsKCksXHJcbiAgZ3JvdXBfYnk6IHouZW51bShbJ2RheScsICd3ZWVrJywgJ21vbnRoJ10pLmRlZmF1bHQoJ2RheScpLFxyXG4gIGluY2x1ZGVfZGV0YWlsczogei5ib29sZWFuKCkuZGVmYXVsdChmYWxzZSksXHJcbn0pO1xyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gTUlERExFV0FSRSBERSBBVVRFTlRJQ0FDScOTTiBBRE1JTlxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gdmFsaWRhdGVBZG1pbkF1dGgoKSB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHNlc3Npb24gPSBhd2FpdCBhdXRoKCk7XHJcbiAgICBpZiAoIXNlc3Npb24/LnVzZXIpIHtcclxuICAgICAgcmV0dXJuIHsgZXJyb3I6ICdVc3VhcmlvIG5vIGF1dGVudGljYWRvJywgc3RhdHVzOiA0MDEgfTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCB1c2VyID0gc2Vzc2lvbi51c2VyO1xyXG5cclxuICAgIC8vIFZlcmlmaWNhciBzaSBlcyBhZG1pblxyXG4gICAgY29uc3QgaXNBZG1pbiA9IHNlc3Npb24udXNlci5lbWFpbCA9PT0gJ3NhbnRpYWdvQHhvci5jb20uYXInO1xyXG4gICAgaWYgKCFpc0FkbWluKSB7XHJcbiAgICAgIHJldHVybiB7IGVycm9yOiAnQWNjZXNvIGRlbmVnYWRvIC0gU2UgcmVxdWllcmVuIHBlcm1pc29zIGRlIGFkbWluaXN0cmFkb3InLCBzdGF0dXM6IDQwMyB9O1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB7IHVzZXI6IHNlc3Npb24udXNlciwgdXNlcklkOiBzZXNzaW9uLnVzZXIuaWQgfTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgbG9nZ2VyLmxvZyhMb2dMZXZlbC5FUlJPUiwgTG9nQ2F0ZWdvcnkuQVVUSCwgJ0Vycm9yIGVuIHZhbGlkYWNpw7NuIGFkbWluJywgeyBlcnJvciB9KTtcclxuICAgIHJldHVybiB7IGVycm9yOiAnRXJyb3IgZGUgYXV0ZW50aWNhY2nDs24nLCBzdGF0dXM6IDUwMCB9O1xyXG4gIH1cclxufVxyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gVVRJTElEQURFUyBERSBGRUNIQVNcclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbmZ1bmN0aW9uIGdldERhdGVSYW5nZShwZXJpb2Q6IHN0cmluZywgY3VzdG9tRnJvbT86IHN0cmluZywgY3VzdG9tVG8/OiBzdHJpbmcpIHtcclxuICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpO1xyXG4gIGxldCBzdGFydERhdGU6IERhdGU7XHJcbiAgbGV0IGVuZERhdGUgPSBub3c7XHJcblxyXG4gIHN3aXRjaCAocGVyaW9kKSB7XHJcbiAgICBjYXNlICd0b2RheSc6XHJcbiAgICAgIHN0YXJ0RGF0ZSA9IG5ldyBEYXRlKG5vdy5nZXRGdWxsWWVhcigpLCBub3cuZ2V0TW9udGgoKSwgbm93LmdldERhdGUoKSk7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgY2FzZSAnd2Vlayc6XHJcbiAgICAgIHN0YXJ0RGF0ZSA9IG5ldyBEYXRlKG5vdy5nZXRUaW1lKCkgLSA3ICogMjQgKiA2MCAqIDYwICogMTAwMCk7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgY2FzZSAnbW9udGgnOlxyXG4gICAgICBzdGFydERhdGUgPSBuZXcgRGF0ZShub3cuZ2V0RnVsbFllYXIoKSwgbm93LmdldE1vbnRoKCksIDEpO1xyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgJ3F1YXJ0ZXInOlxyXG4gICAgICBjb25zdCBxdWFydGVyU3RhcnQgPSBNYXRoLmZsb29yKG5vdy5nZXRNb250aCgpIC8gMykgKiAzO1xyXG4gICAgICBzdGFydERhdGUgPSBuZXcgRGF0ZShub3cuZ2V0RnVsbFllYXIoKSwgcXVhcnRlclN0YXJ0LCAxKTtcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlICd5ZWFyJzpcclxuICAgICAgc3RhcnREYXRlID0gbmV3IERhdGUobm93LmdldEZ1bGxZZWFyKCksIDAsIDEpO1xyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgJ2N1c3RvbSc6XHJcbiAgICAgIHN0YXJ0RGF0ZSA9IGN1c3RvbUZyb20gPyBuZXcgRGF0ZShjdXN0b21Gcm9tKSA6IG5ldyBEYXRlKG5vdy5nZXRUaW1lKCkgLSAzMCAqIDI0ICogNjAgKiA2MCAqIDEwMDApO1xyXG4gICAgICBlbmREYXRlID0gY3VzdG9tVG8gPyBuZXcgRGF0ZShjdXN0b21UbykgOiBub3c7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgZGVmYXVsdDpcclxuICAgICAgc3RhcnREYXRlID0gbmV3IERhdGUobm93LmdldEZ1bGxZZWFyKCksIG5vdy5nZXRNb250aCgpLCAxKTtcclxuICB9XHJcblxyXG4gIHJldHVybiB7XHJcbiAgICBzdGFydERhdGU6IHN0YXJ0RGF0ZS50b0lTT1N0cmluZygpLFxyXG4gICAgZW5kRGF0ZTogZW5kRGF0ZS50b0lTT1N0cmluZygpLFxyXG4gIH07XHJcbn1cclxuXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vIEdFVCAtIE9idGVuZXIgYW5hbHl0aWNzIGRlIMOzcmRlbmVzXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcclxuICBjb25zdCBzdGFydFRpbWUgPSBEYXRlLm5vdygpO1xyXG4gIFxyXG4gIHRyeSB7XHJcbiAgICAvLyBSYXRlIGxpbWl0aW5nXHJcbiAgICBjb25zdCByYXRlTGltaXRSZXN1bHQgPSBhd2FpdCBjaGVja1JhdGVMaW1pdChcclxuICAgICAgcmVxdWVzdCxcclxuICAgICAge1xyXG4gICAgICAgIG1heFJlcXVlc3RzOiBSQVRFX0xJTUlUX0NPTkZJR1MuYWRtaW4ucmVxdWVzdHMsXHJcbiAgICAgICAgd2luZG93TXM6IFJBVEVfTElNSVRfQ09ORklHUy5hZG1pbi53aW5kb3dcclxuICAgICAgfSxcclxuICAgICAgJ2FkbWluLW9yZGVycy1hbmFseXRpY3MnXHJcbiAgICApO1xyXG5cclxuICAgIGlmICghcmF0ZUxpbWl0UmVzdWx0LmFsbG93ZWQpIHtcclxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBOZXh0UmVzcG9uc2UuanNvbihcclxuICAgICAgICB7IGVycm9yOiAnRGVtYXNpYWRhcyBzb2xpY2l0dWRlcycgfSxcclxuICAgICAgICB7IHN0YXR1czogNDI5IH1cclxuICAgICAgKTtcclxuICAgICAgYWRkUmF0ZUxpbWl0SGVhZGVycyhyZXNwb25zZSwgcmF0ZUxpbWl0UmVzdWx0LCB7XHJcbiAgICAgICAgbWF4UmVxdWVzdHM6IFJBVEVfTElNSVRfQ09ORklHUy5hZG1pbi5yZXF1ZXN0cyxcclxuICAgICAgICB3aW5kb3dNczogUkFURV9MSU1JVF9DT05GSUdTLmFkbWluLndpbmRvdyxcclxuICAgICAgICBzdGFuZGFyZEhlYWRlcnM6IHRydWUsXHJcbiAgICAgICAgbGVnYWN5SGVhZGVyczogZmFsc2VcclxuICAgICAgfSk7XHJcbiAgICAgIHJldHVybiByZXNwb25zZTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBWYWxpZGFyIGF1dGVudGljYWNpw7NuIGFkbWluXHJcbiAgICBjb25zdCBhdXRoUmVzdWx0ID0gYXdhaXQgdmFsaWRhdGVBZG1pbkF1dGgoKTtcclxuICAgIGlmICgnZXJyb3InIGluIGF1dGhSZXN1bHQpIHtcclxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICAgIHsgZXJyb3I6IGF1dGhSZXN1bHQuZXJyb3IgfSxcclxuICAgICAgICB7IHN0YXR1czogYXV0aFJlc3VsdC5zdGF0dXMgfVxyXG4gICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFZhbGlkYXIgcGFyw6FtZXRyb3MgZGUgY29uc3VsdGFcclxuICAgIGNvbnN0IHsgc2VhcmNoUGFyYW1zIH0gPSBuZXcgVVJMKHJlcXVlc3QudXJsKTtcclxuICAgIGNvbnN0IGZpbHRlcnNSZXN1bHQgPSBBbmFseXRpY3NGaWx0ZXJzU2NoZW1hLnNhZmVQYXJzZSh7XHJcbiAgICAgIHBlcmlvZDogc2VhcmNoUGFyYW1zLmdldCgncGVyaW9kJyksXHJcbiAgICAgIGRhdGVfZnJvbTogc2VhcmNoUGFyYW1zLmdldCgnZGF0ZV9mcm9tJyksXHJcbiAgICAgIGRhdGVfdG86IHNlYXJjaFBhcmFtcy5nZXQoJ2RhdGVfdG8nKSxcclxuICAgICAgZ3JvdXBfYnk6IHNlYXJjaFBhcmFtcy5nZXQoJ2dyb3VwX2J5JyksXHJcbiAgICAgIGluY2x1ZGVfZGV0YWlsczogc2VhcmNoUGFyYW1zLmdldCgnaW5jbHVkZV9kZXRhaWxzJykgPT09ICd0cnVlJyxcclxuICAgIH0pO1xyXG5cclxuICAgIGlmICghZmlsdGVyc1Jlc3VsdC5zdWNjZXNzKSB7XHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcclxuICAgICAgICB7IGVycm9yOiAnUGFyw6FtZXRyb3MgZGUgYW5hbHl0aWNzIGludsOhbGlkb3MnLCBkZXRhaWxzOiBmaWx0ZXJzUmVzdWx0LmVycm9yLmVycm9ycyB9LFxyXG4gICAgICAgIHsgc3RhdHVzOiA0MDAgfVxyXG4gICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGZpbHRlcnMgPSBmaWx0ZXJzUmVzdWx0LmRhdGE7XHJcbiAgICBjb25zdCB7IHN0YXJ0RGF0ZSwgZW5kRGF0ZSB9ID0gZ2V0RGF0ZVJhbmdlKGZpbHRlcnMucGVyaW9kLCBmaWx0ZXJzLmRhdGVfZnJvbSwgZmlsdGVycy5kYXRlX3RvKTtcclxuXHJcbiAgICAvLyBPYnRlbmVyIG3DqXRyaWNhcyBiw6FzaWNhcyBkZSBwcnVlYmFcclxuICAgIGNvbnN0IHRvdGFsT3JkZXJzUmVzdWx0ID0gYXdhaXQgc3VwYWJhc2VBZG1pblxyXG4gICAgICAuZnJvbSgnb3JkZXJzJylcclxuICAgICAgLnNlbGVjdCgnaWQnLCB7IGNvdW50OiAnZXhhY3QnLCBoZWFkOiB0cnVlIH0pO1xyXG4gICAgXHJcbiAgICBjb25zdCB0b3RhbE9yZGVycyA9IHRvdGFsT3JkZXJzUmVzdWx0LmNvdW50IHx8IDA7XHJcblxyXG4gICAgLy8gRGF0b3Mgc2ltcGxpZmljYWRvcyBwYXJhIHBydWViYVxyXG4gICAgY29uc3QgcmV2ZW51ZSA9IDA7XHJcbiAgICBjb25zdCBhdmVyYWdlT3JkZXJWYWx1ZSA9IDA7XHJcbiAgICBjb25zdCBzdGF0dXNEaXN0cmlidXRpb24gPSB7fTtcclxuICAgIGNvbnN0IHRvcFByb2R1Y3RzOiBhbnlbXSA9IFtdO1xyXG4gICAgY29uc3QgcmV2ZW51ZUdyb3d0aCA9IDA7XHJcblxyXG4gICAgLy8gTcOpdHJpY2FzIGRlIHBlcmZvcm1hbmNlXHJcbiAgICBjb25zdCByZXNwb25zZVRpbWUgPSBEYXRlLm5vdygpIC0gc3RhcnRUaW1lO1xyXG4gICAgdHJ5IHtcclxuICAgICAgbWV0cmljc0NvbGxlY3Rvci5yZWNvcmRBcGlDYWxsKCdhZG1pbi1vcmRlcnMtYW5hbHl0aWNzJywgcmVzcG9uc2VUaW1lLCAyMDApO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgLy8gSWdub3JhciBlcnJvcmVzIGRlIG3DqXRyaWNhcyBlbiBkZXNhcnJvbGxvXHJcbiAgICAgIGNvbnNvbGUud2FybignTWV0cmljcyBjb2xsZWN0aW9uIGZhaWxlZDonLCBlcnJvcik7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgcmVzcG9uc2U6IEFwaVJlc3BvbnNlPHtcclxuICAgICAgc3VtbWFyeToge1xyXG4gICAgICAgIHRvdGFsX29yZGVyczogbnVtYmVyO1xyXG4gICAgICAgIHRvdGFsX3JldmVudWU6IG51bWJlcjtcclxuICAgICAgICBhdmVyYWdlX29yZGVyX3ZhbHVlOiBudW1iZXI7XHJcbiAgICAgICAgcmV2ZW51ZV9ncm93dGhfcGVyY2VudGFnZTogbnVtYmVyO1xyXG4gICAgICAgIHBlcmlvZDoge1xyXG4gICAgICAgICAgc3RhcnRfZGF0ZTogc3RyaW5nO1xyXG4gICAgICAgICAgZW5kX2RhdGU6IHN0cmluZztcclxuICAgICAgICAgIHBlcmlvZF90eXBlOiBzdHJpbmc7XHJcbiAgICAgICAgfTtcclxuICAgICAgfTtcclxuICAgICAgc3RhdHVzX2Rpc3RyaWJ1dGlvbjogUmVjb3JkPHN0cmluZywgbnVtYmVyPjtcclxuICAgICAgdG9wX3Byb2R1Y3RzOiB0eXBlb2YgdG9wUHJvZHVjdHM7XHJcbiAgICAgIGRhaWx5X3RyZW5kczogYW55O1xyXG4gICAgICBmaWx0ZXJzOiB0eXBlb2YgZmlsdGVycztcclxuICAgIH0+ID0ge1xyXG4gICAgICBkYXRhOiB7XHJcbiAgICAgICAgc3VtbWFyeToge1xyXG4gICAgICAgICAgdG90YWxfb3JkZXJzOiB0b3RhbE9yZGVycyxcclxuICAgICAgICAgIHRvdGFsX3JldmVudWU6IHJldmVudWUsXHJcbiAgICAgICAgICBhdmVyYWdlX29yZGVyX3ZhbHVlOiBhdmVyYWdlT3JkZXJWYWx1ZSxcclxuICAgICAgICAgIHJldmVudWVfZ3Jvd3RoX3BlcmNlbnRhZ2U6IHJldmVudWVHcm93dGgsXHJcbiAgICAgICAgICBwZXJpb2Q6IHtcclxuICAgICAgICAgICAgc3RhcnRfZGF0ZTogc3RhcnREYXRlLFxyXG4gICAgICAgICAgICBlbmRfZGF0ZTogZW5kRGF0ZSxcclxuICAgICAgICAgICAgcGVyaW9kX3R5cGU6IGZpbHRlcnMucGVyaW9kLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9LFxyXG4gICAgICAgIHN0YXR1c19kaXN0cmlidXRpb246IHN0YXR1c0Rpc3RyaWJ1dGlvbixcclxuICAgICAgICB0b3BfcHJvZHVjdHM6IHRvcFByb2R1Y3RzLFxyXG4gICAgICAgIGRhaWx5X3RyZW5kczogW10sXHJcbiAgICAgICAgZmlsdGVycyxcclxuICAgICAgfSxcclxuICAgICAgc3VjY2VzczogdHJ1ZSxcclxuICAgICAgZXJyb3I6IG51bGwsXHJcbiAgICB9O1xyXG5cclxuICAgIGNvbnN0IG5leHRSZXNwb25zZSA9IE5leHRSZXNwb25zZS5qc29uKHJlc3BvbnNlKTtcclxuICAgIGFkZFJhdGVMaW1pdEhlYWRlcnMobmV4dFJlc3BvbnNlLCByYXRlTGltaXRSZXN1bHQsIHtcclxuICAgICAgbWF4UmVxdWVzdHM6IFJBVEVfTElNSVRfQ09ORklHUy5hZG1pbi5yZXF1ZXN0cyxcclxuICAgICAgd2luZG93TXM6IFJBVEVfTElNSVRfQ09ORklHUy5hZG1pbi53aW5kb3csXHJcbiAgICAgIHN0YW5kYXJkSGVhZGVyczogdHJ1ZSxcclxuICAgICAgbGVnYWN5SGVhZGVyczogZmFsc2VcclxuICAgIH0pO1xyXG5cclxuICAgIGxvZ2dlci5sb2coTG9nTGV2ZWwuSU5GTywgTG9nQ2F0ZWdvcnkuQVBJLCAnQW5hbHl0aWNzIGRlIMOzcmRlbmVzIG9idGVuaWRhcyBleGl0b3NhbWVudGUnLCB7XHJcbiAgICAgIHBlcmlvZDogZmlsdGVycy5wZXJpb2QsXHJcbiAgICAgIHRvdGFsT3JkZXJzLFxyXG4gICAgICByZXZlbnVlLFxyXG4gICAgICByZXNwb25zZVRpbWUsXHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gbmV4dFJlc3BvbnNlO1xyXG5cclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc3QgcmVzcG9uc2VUaW1lID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZTtcclxuXHJcbiAgICAvLyBMb2dnaW5nIGRldGFsbGFkbyBkZWwgZXJyb3JcclxuICAgIGNvbnN0IGVycm9yRGV0YWlscyA9IHtcclxuICAgICAgbWVzc2FnZTogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnVW5rbm93biBlcnJvcicsXHJcbiAgICAgIHN0YWNrOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3Iuc3RhY2sgOiB1bmRlZmluZWQsXHJcbiAgICAgIG5hbWU6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5uYW1lIDogJ1Vua25vd25FcnJvcicsXHJcbiAgICAgIGNhdXNlOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IuY2F1c2UgOiB1bmRlZmluZWRcclxuICAgIH07XHJcblxyXG4gICAgY29uc29sZS5lcnJvcign4p2MIFtPcmRlcnMgQW5hbHl0aWNzIEFQSV0gRXJyb3IgZGV0YWxsYWRvOicsIGVycm9yRGV0YWlscyk7XHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgYXdhaXQgbWV0cmljc0NvbGxlY3Rvci5yZWNvcmRSZXF1ZXN0KCdhZG1pbi1vcmRlcnMtYW5hbHl0aWNzJywgJ0dFVCcsIDUwMCwgcmVzcG9uc2VUaW1lKTtcclxuICAgIH0gY2F0Y2ggKG1ldHJpY3NFcnJvcikge1xyXG4gICAgICAvLyBJZ25vcmFyIGVycm9yZXMgZGUgbcOpdHJpY2FzIGVuIGRlc2Fycm9sbG9cclxuICAgICAgY29uc29sZS53YXJuKCdNZXRyaWNzIGNvbGxlY3Rpb24gZmFpbGVkOicsIG1ldHJpY3NFcnJvcik7XHJcbiAgICB9XHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgbG9nZ2VyLmxvZyhMb2dMZXZlbC5FUlJPUiwgTG9nQ2F0ZWdvcnkuQVBJLCAnRXJyb3IgZW4gR0VUIC9hcGkvYWRtaW4vb3JkZXJzL2FuYWx5dGljcycsIHtcclxuICAgICAgICBlcnJvcjogZXJyb3JEZXRhaWxzLFxyXG4gICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXHJcbiAgICAgIH0pO1xyXG4gICAgfSBjYXRjaCAobG9nRXJyb3IpIHtcclxuICAgICAgLy8gSWdub3JhciBlcnJvcmVzIGRlIGxvZ2dpbmcgZW4gZGVzYXJyb2xsb1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdMb2dnaW5nIGZhaWxlZDonLCBsb2dFcnJvcik7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICB7XHJcbiAgICAgICAgZXJyb3I6ICdFcnJvciBpbnRlcm5vIGRlbCBzZXJ2aWRvcicsXHJcbiAgICAgICAgZGV0YWlsczogZXJyb3JEZXRhaWxzLm1lc3NhZ2UsXHJcbiAgICAgICAgZGVidWc6IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnID8gZXJyb3JEZXRhaWxzIDogdW5kZWZpbmVkXHJcbiAgICAgIH0sXHJcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vIFBPU1QgLSBHZW5lcmFyIHJlcG9ydGUgcGVyc29uYWxpemFkb1xyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xyXG4gIGNvbnN0IHN0YXJ0VGltZSA9IERhdGUubm93KCk7XHJcbiAgXHJcbiAgdHJ5IHtcclxuICAgIC8vIFZhbGlkYXIgYXV0ZW50aWNhY2nDs24gYWRtaW5cclxuICAgIGNvbnN0IGF1dGhSZXN1bHQgPSBhd2FpdCB2YWxpZGF0ZUFkbWluQXV0aCgpO1xyXG4gICAgaWYgKCdlcnJvcicgaW4gYXV0aFJlc3VsdCkge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgICAgeyBlcnJvcjogYXV0aFJlc3VsdC5lcnJvciB9LFxyXG4gICAgICAgIHsgc3RhdHVzOiBhdXRoUmVzdWx0LnN0YXR1cyB9XHJcbiAgICAgICk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgYm9keSA9IGF3YWl0IHJlcXVlc3QuanNvbigpO1xyXG4gICAgY29uc3QgeyByZXBvcnRfdHlwZSwgZmlsdGVycywgZm9ybWF0ID0gJ2pzb24nIH0gPSBib2R5O1xyXG5cclxuICAgIC8vIFZhbGlkYXIgdGlwbyBkZSByZXBvcnRlXHJcbiAgICBjb25zdCB2YWxpZFJlcG9ydFR5cGVzID0gWydzYWxlc19zdW1tYXJ5JywgJ2N1c3RvbWVyX2FuYWx5c2lzJywgJ3Byb2R1Y3RfcGVyZm9ybWFuY2UnLCAnc3RhdHVzX3RpbWVsaW5lJ107XHJcbiAgICBpZiAoIXZhbGlkUmVwb3J0VHlwZXMuaW5jbHVkZXMocmVwb3J0X3R5cGUpKSB7XHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcclxuICAgICAgICB7IGVycm9yOiBgVGlwbyBkZSByZXBvcnRlIGludsOhbGlkby4gVGlwb3MgdsOhbGlkb3M6ICR7dmFsaWRSZXBvcnRUeXBlcy5qb2luKCcsICcpfWAgfSxcclxuICAgICAgICB7IHN0YXR1czogNDAwIH1cclxuICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBHZW5lcmFyIHJlcG9ydGUgc2Vnw7puIGVsIHRpcG9cclxuICAgIGxldCByZXBvcnREYXRhO1xyXG4gICAgc3dpdGNoIChyZXBvcnRfdHlwZSkge1xyXG4gICAgICBjYXNlICdzYWxlc19zdW1tYXJ5JzpcclxuICAgICAgICByZXBvcnREYXRhID0gYXdhaXQgZ2VuZXJhdGVTYWxlc1N1bW1hcnlSZXBvcnQoZmlsdGVycyk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgJ2N1c3RvbWVyX2FuYWx5c2lzJzpcclxuICAgICAgICByZXBvcnREYXRhID0gYXdhaXQgZ2VuZXJhdGVDdXN0b21lckFuYWx5c2lzUmVwb3J0KGZpbHRlcnMpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlICdwcm9kdWN0X3BlcmZvcm1hbmNlJzpcclxuICAgICAgICByZXBvcnREYXRhID0gYXdhaXQgZ2VuZXJhdGVQcm9kdWN0UGVyZm9ybWFuY2VSZXBvcnQoZmlsdGVycyk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgJ3N0YXR1c190aW1lbGluZSc6XHJcbiAgICAgICAgcmVwb3J0RGF0YSA9IGF3YWl0IGdlbmVyYXRlU3RhdHVzVGltZWxpbmVSZXBvcnQoZmlsdGVycyk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICAgICAgeyBlcnJvcjogJ1RpcG8gZGUgcmVwb3J0ZSBubyBpbXBsZW1lbnRhZG8nIH0sXHJcbiAgICAgICAgICB7IHN0YXR1czogNTAxIH1cclxuICAgICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIE3DqXRyaWNhcyBkZSBwZXJmb3JtYW5jZVxyXG4gICAgY29uc3QgcmVzcG9uc2VUaW1lID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZTtcclxuICAgIG1ldHJpY3NDb2xsZWN0b3IucmVjb3JkQXBpQ2FsbCgnYWRtaW4tb3JkZXJzLWN1c3RvbS1yZXBvcnQnLCByZXNwb25zZVRpbWUsIDIwMCk7XHJcblxyXG4gICAgY29uc3QgcmVzcG9uc2U6IEFwaVJlc3BvbnNlPHtcclxuICAgICAgcmVwb3J0X3R5cGU6IHN0cmluZztcclxuICAgICAgZ2VuZXJhdGVkX2F0OiBzdHJpbmc7XHJcbiAgICAgIGRhdGE6IGFueTtcclxuICAgICAgZmlsdGVyczogYW55O1xyXG4gICAgfT4gPSB7XHJcbiAgICAgIGRhdGE6IHtcclxuICAgICAgICByZXBvcnRfdHlwZSxcclxuICAgICAgICBnZW5lcmF0ZWRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcclxuICAgICAgICBkYXRhOiByZXBvcnREYXRhLFxyXG4gICAgICAgIGZpbHRlcnMsXHJcbiAgICAgIH0sXHJcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgIGVycm9yOiBudWxsLFxyXG4gICAgfTtcclxuXHJcbiAgICBsb2dnZXIubG9nKExvZ0xldmVsLklORk8sIExvZ0NhdGVnb3J5LkFQSSwgJ1JlcG9ydGUgcGVyc29uYWxpemFkbyBnZW5lcmFkbycsIHtcclxuICAgICAgcmVwb3J0VHlwZTogcmVwb3J0X3R5cGUsXHJcbiAgICAgIGZvcm1hdCxcclxuICAgICAgcmVzcG9uc2VUaW1lLFxyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHJlc3BvbnNlKTtcclxuXHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnN0IHJlc3BvbnNlVGltZSA9IERhdGUubm93KCkgLSBzdGFydFRpbWU7XHJcbiAgICBtZXRyaWNzQ29sbGVjdG9yLnJlY29yZEFwaUNhbGwoJ2FkbWluLW9yZGVycy1jdXN0b20tcmVwb3J0JywgcmVzcG9uc2VUaW1lLCA1MDApO1xyXG4gICAgXHJcbiAgICBsb2dnZXIubG9nKExvZ0xldmVsLkVSUk9SLCBMb2dDYXRlZ29yeS5BUEksICdFcnJvciBlbiBQT1NUIC9hcGkvYWRtaW4vb3JkZXJzL2FuYWx5dGljcycsIHsgZXJyb3IgfSk7XHJcbiAgICBcclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcclxuICAgICAgeyBlcnJvcjogJ0Vycm9yIGludGVybm8gZGVsIHNlcnZpZG9yJyB9LFxyXG4gICAgICB7IHN0YXR1czogNTAwIH1cclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyBGVU5DSU9ORVMgREUgR0VORVJBQ0nDk04gREUgUkVQT1JURVNcclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGdlbmVyYXRlU2FsZXNTdW1tYXJ5UmVwb3J0KGZpbHRlcnM6IGFueSkge1xyXG4gIC8vIFRPRE86IEltcGxlbWVudGFyIHJlcG9ydGUgZGUgcmVzdW1lbiBkZSB2ZW50YXNcclxuICByZXR1cm4geyBtZXNzYWdlOiAnU2FsZXMgc3VtbWFyeSByZXBvcnQgLSBUbyBiZSBpbXBsZW1lbnRlZCcgfTtcclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVDdXN0b21lckFuYWx5c2lzUmVwb3J0KGZpbHRlcnM6IGFueSkge1xyXG4gIC8vIFRPRE86IEltcGxlbWVudGFyIGFuw6FsaXNpcyBkZSBjbGllbnRlc1xyXG4gIHJldHVybiB7IG1lc3NhZ2U6ICdDdXN0b21lciBhbmFseXNpcyByZXBvcnQgLSBUbyBiZSBpbXBsZW1lbnRlZCcgfTtcclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVQcm9kdWN0UGVyZm9ybWFuY2VSZXBvcnQoZmlsdGVyczogYW55KSB7XHJcbiAgLy8gVE9ETzogSW1wbGVtZW50YXIgcmVwb3J0ZSBkZSBwZXJmb3JtYW5jZSBkZSBwcm9kdWN0b3NcclxuICByZXR1cm4geyBtZXNzYWdlOiAnUHJvZHVjdCBwZXJmb3JtYW5jZSByZXBvcnQgLSBUbyBiZSBpbXBsZW1lbnRlZCcgfTtcclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVTdGF0dXNUaW1lbGluZVJlcG9ydChmaWx0ZXJzOiBhbnkpIHtcclxuICAvLyBUT0RPOiBJbXBsZW1lbnRhciB0aW1lbGluZSBkZSBlc3RhZG9zXHJcbiAgcmV0dXJuIHsgbWVzc2FnZTogJ1N0YXR1cyB0aW1lbGluZSByZXBvcnQgLSBUbyBiZSBpbXBsZW1lbnRlZCcgfTtcclxufVxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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