{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\__tests__\\cart-summary.test.tsx"],"sourcesContent":["import React from 'react'\r\nimport { render, screen, fireEvent } from '@testing-library/react'\r\nimport '@testing-library/jest-dom'\r\nimport { CartSummary } from '../cart-summary'\r\n\r\ninterface PriceDisplayProps {\r\n  amount: number;\r\n  originalAmount?: number;\r\n  className?: string;\r\n}\r\n\r\ninterface ShippingInfoProps {\r\n  options: string[];\r\n  selectedOption: string;\r\n}\r\n\r\ninterface EnhancedProductCardProps {\r\n  title: string;\r\n  context: string;\r\n}\r\n\r\n// Mock de los componentes del Design System\r\njest.mock('../price-display', () => ({\r\n  PriceDisplay: ({ amount, originalAmount, className }: PriceDisplayProps) => (\r\n    <div data-testid=\"price-display\" className={className}>\r\n      ${(amount / 100).toFixed(2)}\r\n      {originalAmount && ` (was $${(originalAmount / 100).toFixed(2)})`}\r\n    </div>\r\n  )\r\n}))\r\n\r\njest.mock('../shipping-info', () => ({\r\n  ShippingInfo: ({ options, selectedOption }: ShippingInfoProps) => (\r\n    <div data-testid=\"shipping-info\">\r\n      Shipping: {selectedOption}\r\n    </div>\r\n  )\r\n}))\r\n\r\njest.mock('../product-card-enhanced', () => ({\r\n  EnhancedProductCard: ({ title, context }: EnhancedProductCardProps) => (\r\n    <div data-testid=\"enhanced-product-card\">\r\n      {title} - {context}\r\n    </div>\r\n  )\r\n}))\r\n\r\nconst mockCartItems = [\r\n  {\r\n    id: 1,\r\n    title: 'Pintura Sherwin Williams 4L',\r\n    price: 10000,\r\n    discountedPrice: 8500,\r\n    quantity: 2,\r\n    image: '/test-image.jpg',\r\n    category: 'pinturas'\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Esmalte Petrilac 1L',\r\n    price: 2300,\r\n    discountedPrice: 2300,\r\n    quantity: 1,\r\n    category: 'esmaltes'\r\n  }\r\n]\r\n\r\ndescribe('CartSummary', () => {\r\n  const defaultProps = {\r\n    cartItems: mockCartItems,\r\n    totalPrice: 19300,\r\n    shippingCost: 2500,\r\n    discount: 0,\r\n    finalTotal: 21800\r\n  }\r\n\r\n  it('renders cart summary with items', () => {\r\n    render(<CartSummary {...defaultProps} />)\r\n    \r\n    expect(screen.getByText('Resumen del Pedido')).toBeInTheDocument()\r\n    expect(screen.getByText('2 items')).toBeInTheDocument()\r\n    expect(screen.getByText('Pintura Sherwin Williams 4L')).toBeInTheDocument()\r\n    expect(screen.getByText('Esmalte Petrilac 1L')).toBeInTheDocument()\r\n  })\r\n\r\n  it('shows empty cart message when no items', () => {\r\n    render(<CartSummary {...defaultProps} cartItems={[]} />)\r\n    \r\n    expect(screen.getByText('No hay productos en el carrito')).toBeInTheDocument()\r\n  })\r\n\r\n  it('displays price calculations correctly', () => {\r\n    render(<CartSummary {...defaultProps} />)\r\n    \r\n    expect(screen.getByText('Subtotal')).toBeInTheDocument()\r\n    expect(screen.getByText('Envío')).toBeInTheDocument()\r\n    expect(screen.getByText('Total')).toBeInTheDocument()\r\n  })\r\n\r\n  it('shows free shipping badge when applicable', () => {\r\n    const propsWithFreeShipping = {\r\n      ...defaultProps,\r\n      totalPrice: 60000,\r\n      shippingCost: 0\r\n    }\r\n\r\n    render(<CartSummary {...propsWithFreeShipping} />)\r\n\r\n    // Buscar específicamente el badge de envío gratis\r\n    expect(screen.getByText('Gratis', { selector: '.bg-success' })).toBeInTheDocument()\r\n  })\r\n\r\n  it('displays discount when applied', () => {\r\n    const propsWithDiscount = {\r\n      ...defaultProps,\r\n      discount: 1000,\r\n      appliedCoupon: {\r\n        code: 'PROMO10',\r\n        discount: 1000,\r\n        type: 'fixed' as const\r\n      }\r\n    }\r\n    \r\n    render(<CartSummary {...propsWithDiscount} />)\r\n    \r\n    expect(screen.getByText('Descuento')).toBeInTheDocument()\r\n    expect(screen.getByText('PROMO10')).toBeInTheDocument()\r\n  })\r\n\r\n  it('calls onCheckout when checkout button is clicked', () => {\r\n    const mockOnCheckout = jest.fn()\r\n    \r\n    render(<CartSummary {...defaultProps} onCheckout={mockOnCheckout} />)\r\n    \r\n    const checkoutButton = screen.getByText('Proceder al Pago')\r\n    fireEvent.click(checkoutButton)\r\n    \r\n    expect(mockOnCheckout).toHaveBeenCalledTimes(1)\r\n  })\r\n\r\n  it('renders in compact variant', () => {\r\n    render(<CartSummary {...defaultProps} variant=\"compact\" />)\r\n    \r\n    // En variante compact, debería tener altura máxima reducida\r\n    const itemsContainer = screen.getByText('Pintura Sherwin Williams 4L').closest('.max-h-40')\r\n    expect(itemsContainer).toBeInTheDocument()\r\n  })\r\n\r\n  it('shows product cards when enabled', () => {\r\n    render(\r\n      <CartSummary \r\n        {...defaultProps} \r\n        showProductCards={true}\r\n        productCardContext=\"checkout\"\r\n      />\r\n    )\r\n    \r\n    expect(screen.getAllByTestId('enhanced-product-card')).toHaveLength(2)\r\n    expect(screen.getByText('Pintura Sherwin Williams 4L - checkout')).toBeInTheDocument()\r\n  })\r\n\r\n  it('shows shipping details in detailed variant', () => {\r\n    render(\r\n      <CartSummary \r\n        {...defaultProps} \r\n        variant=\"detailed\"\r\n        showShippingDetails={true}\r\n      />\r\n    )\r\n    \r\n    expect(screen.getByTestId('shipping-info')).toBeInTheDocument()\r\n  })\r\n\r\n  it('disables checkout button when cart is empty', () => {\r\n    const mockOnCheckout = jest.fn()\r\n\r\n    render(\r\n      <CartSummary\r\n        {...defaultProps}\r\n        cartItems={[]}\r\n        onCheckout={mockOnCheckout}\r\n      />\r\n    )\r\n\r\n    // El botón de checkout no debería aparecer cuando el carrito está vacío\r\n    expect(screen.queryByText('Proceder al Pago')).not.toBeInTheDocument()\r\n  })\r\n\r\n  it('calculates final total correctly when not provided', () => {\r\n    const propsWithoutFinalTotal = {\r\n      cartItems: mockCartItems,\r\n      totalPrice: 19300,\r\n      shippingCost: 2500,\r\n      discount: 1000\r\n      // finalTotal no proporcionado\r\n    }\r\n    \r\n    render(<CartSummary {...propsWithoutFinalTotal} />)\r\n    \r\n    // Debería calcular: 19300 + 2500 - 1000 = 20800\r\n    expect(screen.getByText('Total')).toBeInTheDocument()\r\n  })\r\n\r\n  it('shows benefits section when not compact', () => {\r\n    render(<CartSummary {...defaultProps} variant=\"default\" />)\r\n    \r\n    expect(screen.getByText('Compra protegida')).toBeInTheDocument()\r\n    expect(screen.getByText('Tu dinero está protegido con MercadoPago')).toBeInTheDocument()\r\n  })\r\n\r\n  it('handles single item correctly', () => {\r\n    const singleItemProps = {\r\n      ...defaultProps,\r\n      cartItems: [mockCartItems[0]]\r\n    }\r\n    \r\n    render(<CartSummary {...singleItemProps} />)\r\n    \r\n    expect(screen.getByText('1 item')).toBeInTheDocument()\r\n  })\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["jest","mock","PriceDisplay","amount","originalAmount","className","div","data-testid","toFixed","ShippingInfo","options","selectedOption","EnhancedProductCard","title","context","mockCartItems","id","price","discountedPrice","quantity","image","category","describe","defaultProps","cartItems","totalPrice","shippingCost","discount","finalTotal","it","render","CartSummary","expect","screen","getByText","toBeInTheDocument","propsWithFreeShipping","selector","propsWithDiscount","appliedCoupon","code","type","mockOnCheckout","fn","onCheckout","checkoutButton","fireEvent","click","toHaveBeenCalledTimes","variant","itemsContainer","closest","showProductCards","productCardContext","getAllByTestId","toHaveLength","showShippingDetails","getByTestId","queryByText","not","propsWithoutFinalTotal","singleItemProps"],"mappings":";AAqBA,4CAA4C;AAC5CA,KAAKC,IAAI,CAAC,oBAAoB,IAAO,CAAA;QACnCC,cAAc,CAAC,EAAEC,MAAM,EAAEC,cAAc,EAAEC,SAAS,EAAqB,iBACrE,sBAACC;gBAAIC,eAAY;gBAAgBF,WAAWA;;oBAAW;oBAClDF,CAAAA,SAAS,GAAE,EAAGK,OAAO,CAAC;oBACxBJ,kBAAkB,CAAC,OAAO,EAAE,AAACA,CAAAA,iBAAiB,GAAE,EAAGI,OAAO,CAAC,GAAG,CAAC,CAAC;;;IAGvE,CAAA;AAEAR,KAAKC,IAAI,CAAC,oBAAoB,IAAO,CAAA;QACnCQ,cAAc,CAAC,EAAEC,OAAO,EAAEC,cAAc,EAAqB,iBAC3D,sBAACL;gBAAIC,eAAY;;oBAAgB;oBACpBI;;;IAGjB,CAAA;AAEAX,KAAKC,IAAI,CAAC,4BAA4B,IAAO,CAAA;QAC3CW,qBAAqB,CAAC,EAAEC,KAAK,EAAEC,OAAO,EAA4B,iBAChE,sBAACR;gBAAIC,eAAY;;oBACdM;oBAAM;oBAAIC;;;IAGjB,CAAA;;;;;8DA7CkB;wBACwB;QACnC;6BACqB;;;;;;AA4C5B,MAAMC,gBAAgB;IACpB;QACEC,IAAI;QACJH,OAAO;QACPI,OAAO;QACPC,iBAAiB;QACjBC,UAAU;QACVC,OAAO;QACPC,UAAU;IACZ;IACA;QACEL,IAAI;QACJH,OAAO;QACPI,OAAO;QACPC,iBAAiB;QACjBC,UAAU;QACVE,UAAU;IACZ;CACD;AAEDC,SAAS,eAAe;IACtB,MAAMC,eAAe;QACnBC,WAAWT;QACXU,YAAY;QACZC,cAAc;QACdC,UAAU;QACVC,YAAY;IACd;IAEAC,GAAG,mCAAmC;QACpCC,IAAAA,cAAM,gBAAC,qBAACC,wBAAW;YAAE,GAAGR,YAAY;;QAEpCS,OAAOC,cAAM,CAACC,SAAS,CAAC,uBAAuBC,iBAAiB;QAChEH,OAAOC,cAAM,CAACC,SAAS,CAAC,YAAYC,iBAAiB;QACrDH,OAAOC,cAAM,CAACC,SAAS,CAAC,gCAAgCC,iBAAiB;QACzEH,OAAOC,cAAM,CAACC,SAAS,CAAC,wBAAwBC,iBAAiB;IACnE;IAEAN,GAAG,0CAA0C;QAC3CC,IAAAA,cAAM,gBAAC,qBAACC,wBAAW;YAAE,GAAGR,YAAY;YAAEC,WAAW,EAAE;;QAEnDQ,OAAOC,cAAM,CAACC,SAAS,CAAC,mCAAmCC,iBAAiB;IAC9E;IAEAN,GAAG,yCAAyC;QAC1CC,IAAAA,cAAM,gBAAC,qBAACC,wBAAW;YAAE,GAAGR,YAAY;;QAEpCS,OAAOC,cAAM,CAACC,SAAS,CAAC,aAAaC,iBAAiB;QACtDH,OAAOC,cAAM,CAACC,SAAS,CAAC,UAAUC,iBAAiB;QACnDH,OAAOC,cAAM,CAACC,SAAS,CAAC,UAAUC,iBAAiB;IACrD;IAEAN,GAAG,6CAA6C;QAC9C,MAAMO,wBAAwB;YAC5B,GAAGb,YAAY;YACfE,YAAY;YACZC,cAAc;QAChB;QAEAI,IAAAA,cAAM,gBAAC,qBAACC,wBAAW;YAAE,GAAGK,qBAAqB;;QAE7C,kDAAkD;QAClDJ,OAAOC,cAAM,CAACC,SAAS,CAAC,UAAU;YAAEG,UAAU;QAAc,IAAIF,iBAAiB;IACnF;IAEAN,GAAG,kCAAkC;QACnC,MAAMS,oBAAoB;YACxB,GAAGf,YAAY;YACfI,UAAU;YACVY,eAAe;gBACbC,MAAM;gBACNb,UAAU;gBACVc,MAAM;YACR;QACF;QAEAX,IAAAA,cAAM,gBAAC,qBAACC,wBAAW;YAAE,GAAGO,iBAAiB;;QAEzCN,OAAOC,cAAM,CAACC,SAAS,CAAC,cAAcC,iBAAiB;QACvDH,OAAOC,cAAM,CAACC,SAAS,CAAC,YAAYC,iBAAiB;IACvD;IAEAN,GAAG,oDAAoD;QACrD,MAAMa,iBAAiB1C,KAAK2C,EAAE;QAE9Bb,IAAAA,cAAM,gBAAC,qBAACC,wBAAW;YAAE,GAAGR,YAAY;YAAEqB,YAAYF;;QAElD,MAAMG,iBAAiBZ,cAAM,CAACC,SAAS,CAAC;QACxCY,iBAAS,CAACC,KAAK,CAACF;QAEhBb,OAAOU,gBAAgBM,qBAAqB,CAAC;IAC/C;IAEAnB,GAAG,8BAA8B;QAC/BC,IAAAA,cAAM,gBAAC,qBAACC,wBAAW;YAAE,GAAGR,YAAY;YAAE0B,SAAQ;;QAE9C,4DAA4D;QAC5D,MAAMC,iBAAiBjB,cAAM,CAACC,SAAS,CAAC,+BAA+BiB,OAAO,CAAC;QAC/EnB,OAAOkB,gBAAgBf,iBAAiB;IAC1C;IAEAN,GAAG,oCAAoC;QACrCC,IAAAA,cAAM,gBACJ,qBAACC,wBAAW;YACT,GAAGR,YAAY;YAChB6B,kBAAkB;YAClBC,oBAAmB;;QAIvBrB,OAAOC,cAAM,CAACqB,cAAc,CAAC,0BAA0BC,YAAY,CAAC;QACpEvB,OAAOC,cAAM,CAACC,SAAS,CAAC,2CAA2CC,iBAAiB;IACtF;IAEAN,GAAG,8CAA8C;QAC/CC,IAAAA,cAAM,gBACJ,qBAACC,wBAAW;YACT,GAAGR,YAAY;YAChB0B,SAAQ;YACRO,qBAAqB;;QAIzBxB,OAAOC,cAAM,CAACwB,WAAW,CAAC,kBAAkBtB,iBAAiB;IAC/D;IAEAN,GAAG,+CAA+C;QAChD,MAAMa,iBAAiB1C,KAAK2C,EAAE;QAE9Bb,IAAAA,cAAM,gBACJ,qBAACC,wBAAW;YACT,GAAGR,YAAY;YAChBC,WAAW,EAAE;YACboB,YAAYF;;QAIhB,wEAAwE;QACxEV,OAAOC,cAAM,CAACyB,WAAW,CAAC,qBAAqBC,GAAG,CAACxB,iBAAiB;IACtE;IAEAN,GAAG,sDAAsD;QACvD,MAAM+B,yBAAyB;YAC7BpC,WAAWT;YACXU,YAAY;YACZC,cAAc;YACdC,UAAU;QAEZ;QAEAG,IAAAA,cAAM,gBAAC,qBAACC,wBAAW;YAAE,GAAG6B,sBAAsB;;QAE9C,gDAAgD;QAChD5B,OAAOC,cAAM,CAACC,SAAS,CAAC,UAAUC,iBAAiB;IACrD;IAEAN,GAAG,2CAA2C;QAC5CC,IAAAA,cAAM,gBAAC,qBAACC,wBAAW;YAAE,GAAGR,YAAY;YAAE0B,SAAQ;;QAE9CjB,OAAOC,cAAM,CAACC,SAAS,CAAC,qBAAqBC,iBAAiB;QAC9DH,OAAOC,cAAM,CAACC,SAAS,CAAC,6CAA6CC,iBAAiB;IACxF;IAEAN,GAAG,iCAAiC;QAClC,MAAMgC,kBAAkB;YACtB,GAAGtC,YAAY;YACfC,WAAW;gBAACT,aAAa,CAAC,EAAE;aAAC;QAC/B;QAEAe,IAAAA,cAAM,gBAAC,qBAACC,wBAAW;YAAE,GAAG8B,eAAe;;QAEvC7B,OAAOC,cAAM,CAACC,SAAS,CAAC,WAAWC,iBAAiB;IACtD;AACF"}