ed2909852dc4566b3dbd64c7187ccf6d
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_1neayhassc() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\analytics\\events\\route.ts";
  var hash = "beabcad807844331cb0f560435b774576ddaceb4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\analytics\\events\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 20
        },
        end: {
          line: 24,
          column: 52
        }
      },
      "9": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 24
        }
      },
      "10": {
        start: {
          line: 26,
          column: 17
        },
        end: {
          line: 26,
          column: 123
        }
      },
      "11": {
        start: {
          line: 28,
          column: 19
        },
        end: {
          line: 28,
          column: 28
        }
      },
      "12": {
        start: {
          line: 29,
          column: 18
        },
        end: {
          line: 29,
          column: 22
        }
      },
      "13": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "14": {
        start: {
          line: 32,
          column: 22
        },
        end: {
          line: 32,
          column: 42
        }
      },
      "15": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "16": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 39,
          column: 15
        }
      },
      "17": {
        start: {
          line: 42,
          column: 25
        },
        end: {
          line: 42,
          column: 94
        }
      },
      "18": {
        start: {
          line: 43,
          column: 20
        },
        end: {
          line: 43,
          column: 30
        }
      },
      "19": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "20": {
        start: {
          line: 46,
          column: 29
        },
        end: {
          line: 46,
          column: 53
        }
      },
      "21": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 52,
          column: 13
        }
      },
      "22": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 51,
          column: 19
        }
      },
      "23": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 38
        }
      },
      "24": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "25": {
        start: {
          line: 58,
          column: 27
        },
        end: {
          line: 58,
          column: 42
        }
      },
      "26": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 63,
          column: 13
        }
      },
      "27": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 62,
          column: 17
        }
      },
      "28": {
        start: {
          line: 61,
          column: 20
        },
        end: {
          line: 61,
          column: 43
        }
      },
      "29": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 82,
          column: 11
        }
      },
      "30": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 81,
          column: 13
        }
      },
      "31": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 78,
          column: 19
        }
      },
      "32": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 94
        }
      },
      "33": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 92,
          column: 11
        }
      },
      "34": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 57
        }
      },
      "35": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 99,
          column: 11
        }
      },
      "36": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 144,
          column: 5
        }
      },
      "37": {
        start: {
          line: 104,
          column: 33
        },
        end: {
          line: 104,
          column: 53
        }
      },
      "38": {
        start: {
          line: 105,
          column: 26
        },
        end: {
          line: 105,
          column: 55
        }
      },
      "39": {
        start: {
          line: 106,
          column: 23
        },
        end: {
          line: 106,
          column: 49
        }
      },
      "40": {
        start: {
          line: 107,
          column: 26
        },
        end: {
          line: 107,
          column: 55
        }
      },
      "41": {
        start: {
          line: 108,
          column: 24
        },
        end: {
          line: 108,
          column: 51
        }
      },
      "42": {
        start: {
          line: 109,
          column: 22
        },
        end: {
          line: 109,
          column: 66
        }
      },
      "43": {
        start: {
          line: 110,
          column: 20
        },
        end: {
          line: 112,
          column: 23
        }
      },
      "44": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 115,
          column: 9
        }
      },
      "45": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 54
        }
      },
      "46": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "47": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 48
        }
      },
      "48": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 121,
          column: 9
        }
      },
      "49": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 55
        }
      },
      "50": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "51": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 53
        }
      },
      "52": {
        start: {
          line: 125,
          column: 32
        },
        end: {
          line: 125,
          column: 43
        }
      },
      "53": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "54": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 62
        }
      },
      "55": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 132,
          column: 15
        }
      },
      "56": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 136,
          column: 11
        }
      },
      "57": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 60
        }
      },
      "58": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 143,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "POST",
        decl: {
          start: {
            line: 30,
            column: 15
          },
          end: {
            line: 30,
            column: 19
          }
        },
        loc: {
          start: {
            line: 30,
            column: 29
          },
          end: {
            line: 101,
            column: 1
          }
        },
        line: 30
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 66,
            column: 21
          },
          end: {
            line: 66,
            column: 22
          }
        },
        loc: {
          start: {
            line: 66,
            column: 31
          },
          end: {
            line: 82,
            column: 9
          }
        },
        line: 66
      },
      "6": {
        name: "GET",
        decl: {
          start: {
            line: 102,
            column: 15
          },
          end: {
            line: 102,
            column: 18
          }
        },
        loc: {
          start: {
            line: 102,
            column: 28
          },
          end: {
            line: 145,
            column: 1
          }
        },
        line: 102
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 34,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 34,
            column: 24
          }
        }, {
          start: {
            line: 34,
            column: 28
          },
          end: {
            line: 34,
            column: 43
          }
        }, {
          start: {
            line: 34,
            column: 47
          },
          end: {
            line: 34,
            column: 60
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "3": {
        loc: {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 52,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 52,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "4": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "5": {
        loc: {
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 62,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 62,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "6": {
        loc: {
          start: {
            line: 109,
            column: 31
          },
          end: {
            line: 109,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 31
          },
          end: {
            line: 109,
            column: 56
          }
        }, {
          start: {
            line: 109,
            column: 60
          },
          end: {
            line: 109,
            column: 65
          }
        }],
        line: 109
      },
      "7": {
        loc: {
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 115,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 115,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "8": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "9": {
        loc: {
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "10": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "11": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\analytics\\events\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n/**\r\n * API Route para recibir eventos de analytics\r\n * Optimizado para procesamiento as\xEDncrono y cache\r\n */\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabase = createClient(\r\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\r\n);\r\n\r\n// Cache simple en memoria para eventos recientes (evita duplicados)\r\nconst eventCache = new Map<string, number>();\r\nconst CACHE_TTL = 5000; // 5 segundos\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const event = await request.json();\r\n\r\n    // Validaci\xF3n r\xE1pida y simple\r\n    if (!event.event || !event.category || !event.action) {\r\n      return NextResponse.json(\r\n        { error: 'Evento inv\xE1lido: faltan campos requeridos' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Cache key para evitar eventos duplicados\r\n    const cacheKey = `${event.event}-${event.category}-${event.action}-${event.sessionId}`;\r\n    const now = Date.now();\r\n\r\n    // Verificar cache para evitar duplicados recientes\r\n    if (eventCache.has(cacheKey)) {\r\n      const lastTime = eventCache.get(cacheKey)!;\r\n      if (now - lastTime < CACHE_TTL) {\r\n        return NextResponse.json({ success: true, cached: true });\r\n      }\r\n    }\r\n\r\n    // Actualizar cache\r\n    eventCache.set(cacheKey, now);\r\n\r\n    // Limpiar cache viejo peri\xF3dicamente\r\n    if (eventCache.size > 1000) {\r\n      const cutoff = now - CACHE_TTL;\r\n      for (const [key, time] of eventCache.entries()) {\r\n        if (time < cutoff) {\r\n          eventCache.delete(key);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Procesar evento de forma as\xEDncrona usando funci\xF3n optimizada\r\n    setImmediate(async () => {\r\n      try {\r\n        await supabase.rpc('insert_analytics_event_optimized', {\r\n          p_event_name: event.event,\r\n          p_category: event.category,\r\n          p_action: event.action,\r\n          p_label: event.label,\r\n          p_value: event.value,\r\n          p_user_id: event.userId,\r\n          p_session_id: event.sessionId,\r\n          p_page: event.page,\r\n          p_user_agent: event.userAgent\r\n        });\r\n      } catch (error) {\r\n        console.error('Error procesando evento analytics optimizado (async):', error);\r\n      }\r\n    });\r\n\r\n    // Respuesta inmediata\r\n    return NextResponse.json(\r\n      { success: true },\r\n      {\r\n        status: 200,\r\n        headers: {\r\n          'Cache-Control': 'no-cache, no-store, must-revalidate',\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n    );\r\n  } catch (error) {\r\n    console.error('Error procesando evento:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const sessionId = searchParams.get('sessionId');\r\n    const userId = searchParams.get('userId');\r\n    const startDate = searchParams.get('startDate');\r\n    const endDate = searchParams.get('endDate');\r\n    const limit = parseInt(searchParams.get('limit') || '100');\r\n\r\n    let query = supabase\r\n      .from('analytics_events_view')\r\n      .select('*')\r\n      .order('created_at', { ascending: false })\r\n      .limit(limit);\r\n\r\n    if (sessionId) {\r\n      query = query.eq('session_id', sessionId);\r\n    }\r\n\r\n    if (userId) {\r\n      query = query.eq('user_id', userId);\r\n    }\r\n\r\n    if (startDate) {\r\n      query = query.gte('created_at', startDate);\r\n    }\r\n\r\n    if (endDate) {\r\n      query = query.lte('created_at', endDate);\r\n    }\r\n\r\n    const { data, error } = await query;\r\n\r\n    if (error) {\r\n      console.error('Error obteniendo eventos:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error obteniendo eventos' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({ events: data });\r\n  } catch (error) {\r\n    console.error('Error procesando solicitud:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "supabase", "createClient", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "SUPABASE_SERVICE_ROLE_KEY", "eventCache", "Map", "CACHE_TTL", "request", "event", "json", "category", "action", "NextResponse", "error", "status", "cacheKey", "sessionId", "now", "Date", "has", "lastTime", "get", "success", "cached", "set", "size", "cutoff", "key", "time", "entries", "delete", "setImmediate", "rpc", "p_event_name", "p_category", "p_action", "p_label", "label", "p_value", "value", "p_user_id", "userId", "p_session_id", "p_page", "page", "p_user_agent", "userAgent", "console", "headers", "searchParams", "URL", "url", "startDate", "endDate", "limit", "parseInt", "query", "from", "select", "order", "ascending", "eq", "gte", "lte", "data", "events"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QAgGfA;eAAAA;;QA5EAC;eAAAA;;QAnBTC;eAAAA;;;wBAO6B;4BACb;AARtB,MAAMA,UAAU;AAUvB,MAAMC,WAAWC,IAAAA,wBAAY,EAC3BC,QAAQC,GAAG,CAACC,wBAAwB,EACpCF,QAAQC,GAAG,CAACE,yBAAyB;AAGvC,oEAAoE;AACpE,MAAMC,aAAa,IAAIC;AACvB,MAAMC,YAAY,MAAM,aAAa;AAE9B,eAAeV,KAAKW,OAAoB;IAC7C,IAAI;QACF,MAAMC,QAAQ,MAAMD,QAAQE,IAAI;QAEhC,6BAA6B;QAC7B,IAAI,CAACD,MAAMA,KAAK,IAAI,CAACA,MAAME,QAAQ,IAAI,CAACF,MAAMG,MAAM,EAAE;YACpD,OAAOC,oBAAY,CAACH,IAAI,CACtB;gBAAEI,OAAO;YAA4C,GACrD;gBAAEC,QAAQ;YAAI;QAElB;QAEA,2CAA2C;QAC3C,MAAMC,WAAW,GAAGP,MAAMA,KAAK,CAAC,CAAC,EAAEA,MAAME,QAAQ,CAAC,CAAC,EAAEF,MAAMG,MAAM,CAAC,CAAC,EAAEH,MAAMQ,SAAS,EAAE;QACtF,MAAMC,MAAMC,KAAKD,GAAG;QAEpB,mDAAmD;QACnD,IAAIb,WAAWe,GAAG,CAACJ,WAAW;YAC5B,MAAMK,WAAWhB,WAAWiB,GAAG,CAACN;YAChC,IAAIE,MAAMG,WAAWd,WAAW;gBAC9B,OAAOM,oBAAY,CAACH,IAAI,CAAC;oBAAEa,SAAS;oBAAMC,QAAQ;gBAAK;YACzD;QACF;QAEA,mBAAmB;QACnBnB,WAAWoB,GAAG,CAACT,UAAUE;QAEzB,qCAAqC;QACrC,IAAIb,WAAWqB,IAAI,GAAG,MAAM;YAC1B,MAAMC,SAAST,MAAMX;YACrB,KAAK,MAAM,CAACqB,KAAKC,KAAK,IAAIxB,WAAWyB,OAAO,GAAI;gBAC9C,IAAID,OAAOF,QAAQ;oBACjBtB,WAAW0B,MAAM,CAACH;gBACpB;YACF;QACF;QAEA,+DAA+D;QAC/DI,aAAa;YACX,IAAI;gBACF,MAAMjC,SAASkC,GAAG,CAAC,oCAAoC;oBACrDC,cAAczB,MAAMA,KAAK;oBACzB0B,YAAY1B,MAAME,QAAQ;oBAC1ByB,UAAU3B,MAAMG,MAAM;oBACtByB,SAAS5B,MAAM6B,KAAK;oBACpBC,SAAS9B,MAAM+B,KAAK;oBACpBC,WAAWhC,MAAMiC,MAAM;oBACvBC,cAAclC,MAAMQ,SAAS;oBAC7B2B,QAAQnC,MAAMoC,IAAI;oBAClBC,cAAcrC,MAAMsC,SAAS;gBAC/B;YACF,EAAE,OAAOjC,OAAO;gBACdkC,QAAQlC,KAAK,CAAC,yDAAyDA;YACzE;QACF;QAEA,sBAAsB;QACtB,OAAOD,oBAAY,CAACH,IAAI,CACtB;YAAEa,SAAS;QAAK,GAChB;YACER,QAAQ;YACRkC,SAAS;gBACP,iBAAiB;gBACjB,gBAAgB;YAClB;QACF;IAEJ,EAAE,OAAOnC,OAAO;QACdkC,QAAQlC,KAAK,CAAC,4BAA4BA;QAC1C,OAAOD,oBAAY,CAACH,IAAI,CACtB;YAAEI,OAAO;QAA6B,GACtC;YAAEC,QAAQ;QAAI;IAElB;AACF;AAEO,eAAenB,IAAIY,OAAoB;IAC5C,IAAI;QACF,MAAM,EAAE0C,YAAY,EAAE,GAAG,IAAIC,IAAI3C,QAAQ4C,GAAG;QAC5C,MAAMnC,YAAYiC,aAAa5B,GAAG,CAAC;QACnC,MAAMoB,SAASQ,aAAa5B,GAAG,CAAC;QAChC,MAAM+B,YAAYH,aAAa5B,GAAG,CAAC;QACnC,MAAMgC,UAAUJ,aAAa5B,GAAG,CAAC;QACjC,MAAMiC,QAAQC,SAASN,aAAa5B,GAAG,CAAC,YAAY;QAEpD,IAAImC,QAAQ1D,SACT2D,IAAI,CAAC,yBACLC,MAAM,CAAC,KACPC,KAAK,CAAC,cAAc;YAAEC,WAAW;QAAM,GACvCN,KAAK,CAACA;QAET,IAAItC,WAAW;YACbwC,QAAQA,MAAMK,EAAE,CAAC,cAAc7C;QACjC;QAEA,IAAIyB,QAAQ;YACVe,QAAQA,MAAMK,EAAE,CAAC,WAAWpB;QAC9B;QAEA,IAAIW,WAAW;YACbI,QAAQA,MAAMM,GAAG,CAAC,cAAcV;QAClC;QAEA,IAAIC,SAAS;YACXG,QAAQA,MAAMO,GAAG,CAAC,cAAcV;QAClC;QAEA,MAAM,EAAEW,IAAI,EAAEnD,KAAK,EAAE,GAAG,MAAM2C;QAE9B,IAAI3C,OAAO;YACTkC,QAAQlC,KAAK,CAAC,6BAA6BA;YAC3C,OAAOD,oBAAY,CAACH,IAAI,CACtB;gBAAEI,OAAO;YAA2B,GACpC;gBAAEC,QAAQ;YAAI;QAElB;QAEA,OAAOF,oBAAY,CAACH,IAAI,CAAC;YAAEwD,QAAQD;QAAK;IAC1C,EAAE,OAAOnD,OAAO;QACdkC,QAAQlC,KAAK,CAAC,+BAA+BA;QAC7C,OAAOD,oBAAY,CAACH,IAAI,CACtB;YAAEI,OAAO;QAA6B,GACtC;YAAEC,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "beabcad807844331cb0f560435b774576ddaceb4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1neayhassc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1neayhassc();
cov_1neayhassc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1neayhassc().f[0]++;
  cov_1neayhassc().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1neayhassc().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1neayhassc().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_1neayhassc().f[1]++;
    cov_1neayhassc().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_1neayhassc().f[2]++;
    cov_1neayhassc().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_1neayhassc().f[3]++;
    cov_1neayhassc().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_1neayhassc().s[7]++, require("next/server"));
const _supabasejs =
/* istanbul ignore next */
(cov_1neayhassc().s[8]++, require("@supabase/supabase-js"));
const runtime =
/* istanbul ignore next */
(cov_1neayhassc().s[9]++, 'nodejs');
const supabase =
/* istanbul ignore next */
(cov_1neayhassc().s[10]++, (0, _supabasejs.createClient)(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.SUPABASE_SERVICE_ROLE_KEY));
// Cache simple en memoria para eventos recientes (evita duplicados)
const eventCache =
/* istanbul ignore next */
(cov_1neayhassc().s[11]++, new Map());
const CACHE_TTL =
/* istanbul ignore next */
(cov_1neayhassc().s[12]++, 5000); // 5 segundos
async function POST(request) {
  /* istanbul ignore next */
  cov_1neayhassc().f[4]++;
  cov_1neayhassc().s[13]++;
  try {
    const event =
    /* istanbul ignore next */
    (cov_1neayhassc().s[14]++, await request.json());
    // ValidaciÃ³n rÃ¡pida y simple
    /* istanbul ignore next */
    cov_1neayhassc().s[15]++;
    if (
    /* istanbul ignore next */
    (cov_1neayhassc().b[1][0]++, !event.event) ||
    /* istanbul ignore next */
    (cov_1neayhassc().b[1][1]++, !event.category) ||
    /* istanbul ignore next */
    (cov_1neayhassc().b[1][2]++, !event.action)) {
      /* istanbul ignore next */
      cov_1neayhassc().b[0][0]++;
      cov_1neayhassc().s[16]++;
      return _server.NextResponse.json({
        error: 'Evento invÃ¡lido: faltan campos requeridos'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1neayhassc().b[0][1]++;
    }
    // Cache key para evitar eventos duplicados
    const cacheKey =
    /* istanbul ignore next */
    (cov_1neayhassc().s[17]++, `${event.event}-${event.category}-${event.action}-${event.sessionId}`);
    const now =
    /* istanbul ignore next */
    (cov_1neayhassc().s[18]++, Date.now());
    // Verificar cache para evitar duplicados recientes
    /* istanbul ignore next */
    cov_1neayhassc().s[19]++;
    if (eventCache.has(cacheKey)) {
      /* istanbul ignore next */
      cov_1neayhassc().b[2][0]++;
      const lastTime =
      /* istanbul ignore next */
      (cov_1neayhassc().s[20]++, eventCache.get(cacheKey));
      /* istanbul ignore next */
      cov_1neayhassc().s[21]++;
      if (now - lastTime < CACHE_TTL) {
        /* istanbul ignore next */
        cov_1neayhassc().b[3][0]++;
        cov_1neayhassc().s[22]++;
        return _server.NextResponse.json({
          success: true,
          cached: true
        });
      } else
      /* istanbul ignore next */
      {
        cov_1neayhassc().b[3][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1neayhassc().b[2][1]++;
    }
    // Actualizar cache
    cov_1neayhassc().s[23]++;
    eventCache.set(cacheKey, now);
    // Limpiar cache viejo periÃ³dicamente
    /* istanbul ignore next */
    cov_1neayhassc().s[24]++;
    if (eventCache.size > 1000) {
      /* istanbul ignore next */
      cov_1neayhassc().b[4][0]++;
      const cutoff =
      /* istanbul ignore next */
      (cov_1neayhassc().s[25]++, now - CACHE_TTL);
      /* istanbul ignore next */
      cov_1neayhassc().s[26]++;
      for (const [key, time] of eventCache.entries()) {
        /* istanbul ignore next */
        cov_1neayhassc().s[27]++;
        if (time < cutoff) {
          /* istanbul ignore next */
          cov_1neayhassc().b[5][0]++;
          cov_1neayhassc().s[28]++;
          eventCache.delete(key);
        } else
        /* istanbul ignore next */
        {
          cov_1neayhassc().b[5][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_1neayhassc().b[4][1]++;
    }
    // Procesar evento de forma asÃ­ncrona usando funciÃ³n optimizada
    cov_1neayhassc().s[29]++;
    setImmediate(async () => {
      /* istanbul ignore next */
      cov_1neayhassc().f[5]++;
      cov_1neayhassc().s[30]++;
      try {
        /* istanbul ignore next */
        cov_1neayhassc().s[31]++;
        await supabase.rpc('insert_analytics_event_optimized', {
          p_event_name: event.event,
          p_category: event.category,
          p_action: event.action,
          p_label: event.label,
          p_value: event.value,
          p_user_id: event.userId,
          p_session_id: event.sessionId,
          p_page: event.page,
          p_user_agent: event.userAgent
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_1neayhassc().s[32]++;
        console.error('Error procesando evento analytics optimizado (async):', error);
      }
    });
    // Respuesta inmediata
    /* istanbul ignore next */
    cov_1neayhassc().s[33]++;
    return _server.NextResponse.json({
      success: true
    }, {
      status: 200,
      headers: {
        'Cache-Control': 'no-cache, no-store, must-revalidate',
        'Content-Type': 'application/json'
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1neayhassc().s[34]++;
    console.error('Error procesando evento:', error);
    /* istanbul ignore next */
    cov_1neayhassc().s[35]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_1neayhassc().f[6]++;
  cov_1neayhassc().s[36]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_1neayhassc().s[37]++, new URL(request.url));
    const sessionId =
    /* istanbul ignore next */
    (cov_1neayhassc().s[38]++, searchParams.get('sessionId'));
    const userId =
    /* istanbul ignore next */
    (cov_1neayhassc().s[39]++, searchParams.get('userId'));
    const startDate =
    /* istanbul ignore next */
    (cov_1neayhassc().s[40]++, searchParams.get('startDate'));
    const endDate =
    /* istanbul ignore next */
    (cov_1neayhassc().s[41]++, searchParams.get('endDate'));
    const limit =
    /* istanbul ignore next */
    (cov_1neayhassc().s[42]++, parseInt(
    /* istanbul ignore next */
    (cov_1neayhassc().b[6][0]++, searchParams.get('limit')) ||
    /* istanbul ignore next */
    (cov_1neayhassc().b[6][1]++, '100')));
    let query =
    /* istanbul ignore next */
    (cov_1neayhassc().s[43]++, supabase.from('analytics_events_view').select('*').order('created_at', {
      ascending: false
    }).limit(limit));
    /* istanbul ignore next */
    cov_1neayhassc().s[44]++;
    if (sessionId) {
      /* istanbul ignore next */
      cov_1neayhassc().b[7][0]++;
      cov_1neayhassc().s[45]++;
      query = query.eq('session_id', sessionId);
    } else
    /* istanbul ignore next */
    {
      cov_1neayhassc().b[7][1]++;
    }
    cov_1neayhassc().s[46]++;
    if (userId) {
      /* istanbul ignore next */
      cov_1neayhassc().b[8][0]++;
      cov_1neayhassc().s[47]++;
      query = query.eq('user_id', userId);
    } else
    /* istanbul ignore next */
    {
      cov_1neayhassc().b[8][1]++;
    }
    cov_1neayhassc().s[48]++;
    if (startDate) {
      /* istanbul ignore next */
      cov_1neayhassc().b[9][0]++;
      cov_1neayhassc().s[49]++;
      query = query.gte('created_at', startDate);
    } else
    /* istanbul ignore next */
    {
      cov_1neayhassc().b[9][1]++;
    }
    cov_1neayhassc().s[50]++;
    if (endDate) {
      /* istanbul ignore next */
      cov_1neayhassc().b[10][0]++;
      cov_1neayhassc().s[51]++;
      query = query.lte('created_at', endDate);
    } else
    /* istanbul ignore next */
    {
      cov_1neayhassc().b[10][1]++;
    }
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_1neayhassc().s[52]++, await query);
    /* istanbul ignore next */
    cov_1neayhassc().s[53]++;
    if (error) {
      /* istanbul ignore next */
      cov_1neayhassc().b[11][0]++;
      cov_1neayhassc().s[54]++;
      console.error('Error obteniendo eventos:', error);
      /* istanbul ignore next */
      cov_1neayhassc().s[55]++;
      return _server.NextResponse.json({
        error: 'Error obteniendo eventos'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_1neayhassc().b[11][1]++;
    }
    cov_1neayhassc().s[56]++;
    return _server.NextResponse.json({
      events: data
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1neayhassc().s[57]++;
    console.error('Error procesando solicitud:', error);
    /* istanbul ignore next */
    cov_1neayhassc().s[58]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,