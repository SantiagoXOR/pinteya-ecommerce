a8b57b43c84ddfd90e54ce80d7cd4b70
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_271v1vxdke() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\cart\\remove\\route.ts";
  var hash = "3a14e846b11505bd4ff6cdf494e9098da7b0728c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\cart\\remove\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 22
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 20
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 23
        }
      },
      "8": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "9": {
        start: {
          line: 27,
          column: 18
        },
        end: {
          line: 27,
          column: 66
        }
      },
      "10": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 54
        }
      },
      "11": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 24
        }
      },
      "12": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 162,
          column: 5
        }
      },
      "13": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 73
        }
      },
      "14": {
        start: {
          line: 34,
          column: 24
        },
        end: {
          line: 34,
          column: 49
        }
      },
      "15": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "16": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 69
        }
      },
      "17": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 43,
          column: 15
        }
      },
      "18": {
        start: {
          line: 45,
          column: 23
        },
        end: {
          line: 45,
          column: 38
        }
      },
      "19": {
        start: {
          line: 47,
          column: 21
        },
        end: {
          line: 47,
          column: 41
        }
      },
      "20": {
        start: {
          line: 48,
          column: 40
        },
        end: {
          line: 48,
          column: 44
        }
      },
      "21": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "22": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 57,
          column: 15
        }
      },
      "23": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 99
        }
      },
      "24": {
        start: {
          line: 61,
          column: 25
        },
        end: {
          line: 61,
          column: 63
        }
      },
      "25": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "26": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 82
        }
      },
      "27": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 69,
          column: 15
        }
      },
      "28": {
        start: {
          line: 72,
          column: 61
        },
        end: {
          line: 81,
          column: 67
        }
      },
      "29": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "30": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 90
        }
      },
      "31": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 90,
          column: 15
        }
      },
      "32": {
        start: {
          line: 92,
          column: 24
        },
        end: {
          line: 92,
          column: 33
        }
      },
      "33": {
        start: {
          line: 93,
          column: 30
        },
        end: {
          line: 93,
          column: 32
        }
      },
      "34": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "35": {
        start: {
          line: 96,
          column: 32
        },
        end: {
          line: 96,
          column: 64
        }
      },
      "36": {
        start: {
          line: 97,
          column: 62
        },
        end: {
          line: 99,
          column: 58
        }
      },
      "37": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 109,
          column: 13
        }
      },
      "38": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 94
        }
      },
      "39": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 108,
          column: 19
        }
      },
      "40": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 43
        }
      },
      "41": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 137
        }
      },
      "42": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 85
        }
      },
      "43": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 125,
          column: 15
        }
      },
      "44": {
        start: {
          line: 128,
          column: 43
        },
        end: {
          line: 128,
          column: 111
        }
      },
      "45": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 138,
          column: 13
        }
      },
      "46": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 95
        }
      },
      "47": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 137,
          column: 19
        }
      },
      "48": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 45
        }
      },
      "49": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 83
        }
      },
      "50": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 99
        }
      },
      "51": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 151,
          column: 15
        }
      },
      "52": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 69
        }
      },
      "53": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 161,
          column: 11
        }
      },
      "54": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 165,
          column: 27
        }
      },
      "55": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 196,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "DELETE",
        decl: {
          start: {
            line: 30,
            column: 15
          },
          end: {
            line: 30,
            column: 21
          }
        },
        loc: {
          start: {
            line: 30,
            column: 31
          },
          end: {
            line: 163,
            column: 1
          }
        },
        line: 30
      },
      "6": {
        name: "POST",
        decl: {
          start: {
            line: 164,
            column: 15
          },
          end: {
            line: 164,
            column: 19
          }
        },
        loc: {
          start: {
            line: 164,
            column: 29
          },
          end: {
            line: 166,
            column: 1
          }
        },
        line: 164
      },
      "7": {
        name: "GET",
        decl: {
          start: {
            line: 167,
            column: 15
          },
          end: {
            line: 167,
            column: 18
          }
        },
        loc: {
          start: {
            line: 167,
            column: 21
          },
          end: {
            line: 197,
            column: 1
          }
        },
        line: 167
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "2": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "3": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "4": {
        loc: {
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 82,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 82,
            column: 25
          }
        }, {
          start: {
            line: 82,
            column: 29
          },
          end: {
            line: 82,
            column: 42
          }
        }],
        line: 82
      },
      "5": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        }, {
          start: {
            line: 126,
            column: 15
          },
          end: {
            line: 152,
            column: 9
          }
        }],
        line: 94
      },
      "6": {
        loc: {
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 94,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 94,
            column: 20
          }
        }, {
          start: {
            line: 94,
            column: 24
          },
          end: {
            line: 94,
            column: 36
          }
        }, {
          start: {
            line: 94,
            column: 40
          },
          end: {
            line: 94,
            column: 72
          }
        }],
        line: 94
      },
      "7": {
        loc: {
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "8": {
        loc: {
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\cart\\remove\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API REMOVER DEL CARRITO\r\n// ===================================\r\n// Endpoint para remover productos del carrito\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getSupabaseClient } from '@/lib/integrations/supabase';\r\nimport { auth } from '@/lib/auth/config';\r\n\r\n/**\r\n * DELETE /api/cart/remove\r\n * Remover un producto espec\xEDfico del carrito\r\n */\r\nexport async function DELETE(request: NextRequest) {\r\n  try {\r\n    console.log('\uD83D\uDED2 Cart Remove API: Iniciando proceso de remoci\xF3n');\r\n\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user?.id) {\r\n      console.log('\u274C Cart Remove API: Usuario no autenticado');\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'Usuario no autenticado',\r\n          requiresAuth: true\r\n        }, \r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n\r\n    // Obtener datos del request\r\n    const body = await request.json();\r\n    const { productId, quantity } = body;\r\n\r\n    // Validaciones\r\n    if (!productId) {\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'ID del producto es requerido',\r\n          field: 'productId'\r\n        }, \r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    console.log(`\uD83D\uDD0D Cart Remove API: Removiendo producto ${productId} para usuario ${userId}`);\r\n\r\n    // Obtener cliente de Supabase\r\n    const supabase = getSupabaseClient(true);\r\n    if (!supabase) {\r\n      console.error('\u274C Cart Remove API: Cliente de Supabase no disponible');\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'Servicio de base de datos no disponible'\r\n        }, \r\n        { status: 503 }\r\n      );\r\n    }\r\n\r\n    // Verificar que el item existe en el carrito\r\n    const { data: existingItem, error: existingError } = await supabase\r\n      .from('cart_items')\r\n      .select(`\r\n        id,\r\n        quantity,\r\n        products (\r\n          id,\r\n          name,\r\n          price,\r\n          discounted_price\r\n        )\r\n      `)\r\n      .eq('user_id', userId)\r\n      .eq('product_id', productId)\r\n      .single();\r\n\r\n    if (existingError || !existingItem) {\r\n      console.log(`\u274C Cart Remove API: Producto ${productId} no est\xE1 en el carrito`);\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'El producto no est\xE1 en tu carrito',\r\n          productId\r\n        }, \r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    let operation = 'removed';\r\n    let responseMessage = '';\r\n\r\n    if (quantity && quantity > 0 && quantity < existingItem.quantity) {\r\n      // Reducir cantidad espec\xEDfica\r\n      const newQuantity = existingItem.quantity - quantity;\r\n      \r\n      const { data: updatedItem, error: updateError } = await supabase\r\n        .from('cart_items')\r\n        .update({ quantity: newQuantity })\r\n        .eq('id', existingItem.id)\r\n        .select()\r\n        .single();\r\n\r\n      if (updateError) {\r\n        console.error('\u274C Cart Remove API: Error actualizando cantidad:', updateError);\r\n        return NextResponse.json(\r\n          { \r\n            success: false, \r\n            error: 'Error actualizando cantidad en el carrito',\r\n            details: updateError.message\r\n          }, \r\n          { status: 500 }\r\n        );\r\n      }\r\n\r\n      operation = 'quantity_reduced';\r\n      responseMessage = `Se removieron ${quantity} unidades de ${existingItem.products.name}. Quedan ${newQuantity} en el carrito`;\r\n      \r\n      console.log(`\u2705 Cart Remove API: Cantidad reducida - ${responseMessage}`);\r\n\r\n      return NextResponse.json({\r\n        success: true,\r\n        message: responseMessage,\r\n        operation,\r\n        item: {\r\n          id: updatedItem.id,\r\n          productId: productId,\r\n          productName: existingItem.products.name,\r\n          previousQuantity: existingItem.quantity,\r\n          newQuantity: newQuantity,\r\n          removedQuantity: quantity\r\n        }\r\n      });\r\n\r\n    } else {\r\n      // Remover completamente del carrito\r\n      const { error: deleteError } = await supabase\r\n        .from('cart_items')\r\n        .delete()\r\n        .eq('id', existingItem.id);\r\n\r\n      if (deleteError) {\r\n        console.error('\u274C Cart Remove API: Error removiendo del carrito:', deleteError);\r\n        return NextResponse.json(\r\n          { \r\n            success: false, \r\n            error: 'Error removiendo producto del carrito',\r\n            details: deleteError.message\r\n          }, \r\n          { status: 500 }\r\n        );\r\n      }\r\n\r\n      operation = 'completely_removed';\r\n      responseMessage = `${existingItem.products.name} removido del carrito`;\r\n      \r\n      console.log(`\u2705 Cart Remove API: Producto removido completamente - ${responseMessage}`);\r\n\r\n      return NextResponse.json({\r\n        success: true,\r\n        message: responseMessage,\r\n        operation,\r\n        item: {\r\n          productId: productId,\r\n          productName: existingItem.products.name,\r\n          removedQuantity: existingItem.quantity\r\n        }\r\n      });\r\n    }\r\n\r\n  } catch (error: any) {\r\n    console.error('\u274C Cart Remove API: Error inesperado:', error);\r\n    return NextResponse.json(\r\n      { \r\n        success: false, \r\n        error: 'Error interno del servidor',\r\n        details: error.message\r\n      }, \r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * POST /api/cart/remove\r\n * Alias para DELETE (para compatibilidad)\r\n */\r\nexport async function POST(request: NextRequest) {\r\n  return DELETE(request);\r\n}\r\n\r\n/**\r\n * GET /api/cart/remove\r\n * Informaci\xF3n sobre c\xF3mo usar este endpoint\r\n */\r\nexport async function GET() {\r\n  return NextResponse.json({\r\n    endpoint: '/api/cart/remove',\r\n    methods: ['DELETE', 'POST'],\r\n    description: 'Remover productos del carrito de compras',\r\n    parameters: {\r\n      productId: 'number - ID del producto a remover (requerido)',\r\n      quantity: 'number - Cantidad espec\xEDfica a remover (opcional). Si no se especifica o es mayor/igual a la cantidad actual, se remueve completamente'\r\n    },\r\n    examples: {\r\n      removeCompletely: {\r\n        productId: 123\r\n      },\r\n      reduceQuantity: {\r\n        productId: 123,\r\n        quantity: 1\r\n      }\r\n    },\r\n    authentication: 'Requerida - Usuario debe estar autenticado',\r\n    responses: {\r\n      200: 'Producto removido exitosamente',\r\n      400: 'Datos inv\xE1lidos',\r\n      401: 'Usuario no autenticado',\r\n      404: 'Producto no est\xE1 en el carrito',\r\n      500: 'Error interno del servidor'\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["DELETE", "GET", "POST", "runtime", "request", "console", "log", "session", "auth", "user", "id", "NextResponse", "json", "success", "error", "requiresAuth", "status", "userId", "body", "productId", "quantity", "field", "supabase", "getSupabaseClient", "data", "existingItem", "existingError", "from", "select", "eq", "single", "operation", "responseMessage", "newQuantity", "updatedItem", "updateError", "update", "details", "message", "products", "name", "item", "productName", "previousQuantity", "removedQuantity", "deleteError", "delete", "endpoint", "methods", "description", "parameters", "examples", "removeCompletely", "reduceQuantity", "authentication", "responses"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3a14e846b11505bd4ff6cdf494e9098da7b0728c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_271v1vxdke = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_271v1vxdke();
cov_271v1vxdke().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_271v1vxdke().f[0]++;
  cov_271v1vxdke().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_271v1vxdke().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_271v1vxdke().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_271v1vxdke().f[1]++;
    cov_271v1vxdke().s[4]++;
    return DELETE;
  },
  get GET() {
    /* istanbul ignore next */
    cov_271v1vxdke().f[2]++;
    cov_271v1vxdke().s[5]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_271v1vxdke().f[3]++;
    cov_271v1vxdke().s[6]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_271v1vxdke().f[4]++;
    cov_271v1vxdke().s[7]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_271v1vxdke().s[8]++, require("next/server"));
const _supabase =
/* istanbul ignore next */
(cov_271v1vxdke().s[9]++, require("../../../../lib/integrations/supabase"));
const _config =
/* istanbul ignore next */
(cov_271v1vxdke().s[10]++, require("../../../../lib/auth/config"));
const runtime =
/* istanbul ignore next */
(cov_271v1vxdke().s[11]++, 'nodejs');
async function DELETE(request) {
  /* istanbul ignore next */
  cov_271v1vxdke().f[5]++;
  cov_271v1vxdke().s[12]++;
  try {
    /* istanbul ignore next */
    cov_271v1vxdke().s[13]++;
    console.log('ğ Cart Remove API: Iniciando proceso de remociÃ³n');
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_271v1vxdke().s[14]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_271v1vxdke().s[15]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_271v1vxdke().b[0][0]++;
      cov_271v1vxdke().s[16]++;
      console.log('â Cart Remove API: Usuario no autenticado');
      /* istanbul ignore next */
      cov_271v1vxdke().s[17]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Usuario no autenticado',
        requiresAuth: true
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_271v1vxdke().b[0][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_271v1vxdke().s[18]++, session.user.id);
    // Obtener datos del request
    const body =
    /* istanbul ignore next */
    (cov_271v1vxdke().s[19]++, await request.json());
    const {
      productId,
      quantity
    } =
    /* istanbul ignore next */
    (cov_271v1vxdke().s[20]++, body);
    // Validaciones
    /* istanbul ignore next */
    cov_271v1vxdke().s[21]++;
    if (!productId) {
      /* istanbul ignore next */
      cov_271v1vxdke().b[1][0]++;
      cov_271v1vxdke().s[22]++;
      return _server.NextResponse.json({
        success: false,
        error: 'ID del producto es requerido',
        field: 'productId'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_271v1vxdke().b[1][1]++;
    }
    cov_271v1vxdke().s[23]++;
    console.log(`ğ Cart Remove API: Removiendo producto ${productId} para usuario ${userId}`);
    // Obtener cliente de Supabase
    const supabase =
    /* istanbul ignore next */
    (cov_271v1vxdke().s[24]++, (0, _supabase.getSupabaseClient)(true));
    /* istanbul ignore next */
    cov_271v1vxdke().s[25]++;
    if (!supabase) {
      /* istanbul ignore next */
      cov_271v1vxdke().b[2][0]++;
      cov_271v1vxdke().s[26]++;
      console.error('â Cart Remove API: Cliente de Supabase no disponible');
      /* istanbul ignore next */
      cov_271v1vxdke().s[27]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Servicio de base de datos no disponible'
      }, {
        status: 503
      });
    } else
    /* istanbul ignore next */
    {
      cov_271v1vxdke().b[2][1]++;
    }
    // Verificar que el item existe en el carrito
    const {
      data: existingItem,
      error: existingError
    } =
    /* istanbul ignore next */
    (cov_271v1vxdke().s[28]++, await supabase.from('cart_items').select(`
        id,
        quantity,
        products (
          id,
          name,
          price,
          discounted_price
        )
      `).eq('user_id', userId).eq('product_id', productId).single());
    /* istanbul ignore next */
    cov_271v1vxdke().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_271v1vxdke().b[4][0]++, existingError) ||
    /* istanbul ignore next */
    (cov_271v1vxdke().b[4][1]++, !existingItem)) {
      /* istanbul ignore next */
      cov_271v1vxdke().b[3][0]++;
      cov_271v1vxdke().s[30]++;
      console.log(`â Cart Remove API: Producto ${productId} no estÃ¡ en el carrito`);
      /* istanbul ignore next */
      cov_271v1vxdke().s[31]++;
      return _server.NextResponse.json({
        success: false,
        error: 'El producto no estÃ¡ en tu carrito',
        productId
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_271v1vxdke().b[3][1]++;
    }
    let operation =
    /* istanbul ignore next */
    (cov_271v1vxdke().s[32]++, 'removed');
    let responseMessage =
    /* istanbul ignore next */
    (cov_271v1vxdke().s[33]++, '');
    /* istanbul ignore next */
    cov_271v1vxdke().s[34]++;
    if (
    /* istanbul ignore next */
    (cov_271v1vxdke().b[6][0]++, quantity) &&
    /* istanbul ignore next */
    (cov_271v1vxdke().b[6][1]++, quantity > 0) &&
    /* istanbul ignore next */
    (cov_271v1vxdke().b[6][2]++, quantity < existingItem.quantity)) {
      /* istanbul ignore next */
      cov_271v1vxdke().b[5][0]++;
      // Reducir cantidad especÃ­fica
      const newQuantity =
      /* istanbul ignore next */
      (cov_271v1vxdke().s[35]++, existingItem.quantity - quantity);
      const {
        data: updatedItem,
        error: updateError
      } =
      /* istanbul ignore next */
      (cov_271v1vxdke().s[36]++, await supabase.from('cart_items').update({
        quantity: newQuantity
      }).eq('id', existingItem.id).select().single());
      /* istanbul ignore next */
      cov_271v1vxdke().s[37]++;
      if (updateError) {
        /* istanbul ignore next */
        cov_271v1vxdke().b[7][0]++;
        cov_271v1vxdke().s[38]++;
        console.error('â Cart Remove API: Error actualizando cantidad:', updateError);
        /* istanbul ignore next */
        cov_271v1vxdke().s[39]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Error actualizando cantidad en el carrito',
          details: updateError.message
        }, {
          status: 500
        });
      } else
      /* istanbul ignore next */
      {
        cov_271v1vxdke().b[7][1]++;
      }
      cov_271v1vxdke().s[40]++;
      operation = 'quantity_reduced';
      /* istanbul ignore next */
      cov_271v1vxdke().s[41]++;
      responseMessage = `Se removieron ${quantity} unidades de ${existingItem.products.name}. Quedan ${newQuantity} en el carrito`;
      /* istanbul ignore next */
      cov_271v1vxdke().s[42]++;
      console.log(`â Cart Remove API: Cantidad reducida - ${responseMessage}`);
      /* istanbul ignore next */
      cov_271v1vxdke().s[43]++;
      return _server.NextResponse.json({
        success: true,
        message: responseMessage,
        operation,
        item: {
          id: updatedItem.id,
          productId: productId,
          productName: existingItem.products.name,
          previousQuantity: existingItem.quantity,
          newQuantity: newQuantity,
          removedQuantity: quantity
        }
      });
    } else {
      /* istanbul ignore next */
      cov_271v1vxdke().b[5][1]++;
      // Remover completamente del carrito
      const {
        error: deleteError
      } =
      /* istanbul ignore next */
      (cov_271v1vxdke().s[44]++, await supabase.from('cart_items').delete().eq('id', existingItem.id));
      /* istanbul ignore next */
      cov_271v1vxdke().s[45]++;
      if (deleteError) {
        /* istanbul ignore next */
        cov_271v1vxdke().b[8][0]++;
        cov_271v1vxdke().s[46]++;
        console.error('â Cart Remove API: Error removiendo del carrito:', deleteError);
        /* istanbul ignore next */
        cov_271v1vxdke().s[47]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Error removiendo producto del carrito',
          details: deleteError.message
        }, {
          status: 500
        });
      } else
      /* istanbul ignore next */
      {
        cov_271v1vxdke().b[8][1]++;
      }
      cov_271v1vxdke().s[48]++;
      operation = 'completely_removed';
      /* istanbul ignore next */
      cov_271v1vxdke().s[49]++;
      responseMessage = `${existingItem.products.name} removido del carrito`;
      /* istanbul ignore next */
      cov_271v1vxdke().s[50]++;
      console.log(`â Cart Remove API: Producto removido completamente - ${responseMessage}`);
      /* istanbul ignore next */
      cov_271v1vxdke().s[51]++;
      return _server.NextResponse.json({
        success: true,
        message: responseMessage,
        operation,
        item: {
          productId: productId,
          productName: existingItem.products.name,
          removedQuantity: existingItem.quantity
        }
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_271v1vxdke().s[52]++;
    console.error('â Cart Remove API: Error inesperado:', error);
    /* istanbul ignore next */
    cov_271v1vxdke().s[53]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor',
      details: error.message
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_271v1vxdke().f[6]++;
  cov_271v1vxdke().s[54]++;
  return DELETE(request);
}
async function GET() {
  /* istanbul ignore next */
  cov_271v1vxdke().f[7]++;
  cov_271v1vxdke().s[55]++;
  return _server.NextResponse.json({
    endpoint: '/api/cart/remove',
    methods: ['DELETE', 'POST'],
    description: 'Remover productos del carrito de compras',
    parameters: {
      productId: 'number - ID del producto a remover (requerido)',
      quantity: 'number - Cantidad especÃ­fica a remover (opcional). Si no se especifica o es mayor/igual a la cantidad actual, se remueve completamente'
    },
    examples: {
      removeCompletely: {
        productId: 123
      },
      reduceQuantity: {
        productId: 123,
        quantity: 1
      }
    },
    authentication: 'Requerida - Usuario debe estar autenticado',
    responses: {
      200: 'Producto removido exitosamente',
      400: 'Datos invÃ¡lidos',
      401: 'Usuario no autenticado',
      404: 'Producto no estÃ¡ en el carrito',
      500: 'Error interno del servidor'
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,