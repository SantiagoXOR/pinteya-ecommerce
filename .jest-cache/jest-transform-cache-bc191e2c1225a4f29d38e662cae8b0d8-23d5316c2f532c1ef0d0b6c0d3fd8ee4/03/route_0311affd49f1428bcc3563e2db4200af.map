{"version":3,"names":["cov_psr6jtles","actualCoverage","s","GET","f","POST","runtime","request","body","json","type","email","userName","config","_email","getEmailServiceConfig","isReady","b","_server","NextResponse","success","error","hasApiKey","fromEmail","status","result","sendWelcomeEmail","userEmail","sendOrderConfirmationEmail","orderNumber","orderTotal","orderItems","name","quantity","price","sendPasswordResetEmail","resetLink","messageId","sentTo","console","Error","message","supportEmail","provider"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\email\\test\\route.ts"],"sourcesContent":["// Configuración para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API TEST EMAIL\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { \r\n  sendWelcomeEmail, \r\n  sendOrderConfirmationEmail, \r\n  sendPasswordResetEmail,\r\n  getEmailServiceConfig \r\n} from '../../../../../lib/email';\r\n\r\n// ===================================\r\n// POST - ENVIAR EMAIL DE PRUEBA\r\n// ===================================\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { type, email, userName } = body;\r\n\r\n    // Verificar configuración\r\n    const config = getEmailServiceConfig();\r\n    if (!config.isReady) {\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'Servicio de email no configurado',\r\n          config: {\r\n            hasApiKey: config.hasApiKey,\r\n            fromEmail: config.fromEmail\r\n          }\r\n        },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Validar parámetros\r\n    if (!email || !userName) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'Email y userName son requeridos' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    let result;\r\n\r\n    switch (type) {\r\n      case 'welcome':\r\n        result = await sendWelcomeEmail({\r\n          userName,\r\n          userEmail: email\r\n        });\r\n        break;\r\n\r\n      case 'order':\r\n        result = await sendOrderConfirmationEmail({\r\n          userName,\r\n          userEmail: email,\r\n          orderNumber: 'TEST-001',\r\n          orderTotal: '$15.990',\r\n          orderItems: [\r\n            { name: 'Pintura Sherwin Williams Blanco', quantity: 2, price: '$8.990' },\r\n            { name: 'Rodillo Profesional', quantity: 1, price: '$6.990' }\r\n          ]\r\n        });\r\n        break;\r\n\r\n      case 'reset':\r\n        result = await sendPasswordResetEmail({\r\n          userName,\r\n          userEmail: email,\r\n          resetLink: 'https://www.pinteya.com/reset-password?token=test-token-123'\r\n        });\r\n        break;\r\n\r\n      default:\r\n        return NextResponse.json(\r\n          { success: false, error: 'Tipo de email no válido. Usa: welcome, order, reset' },\r\n          { status: 400 }\r\n        );\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: result.success,\r\n      messageId: result.messageId,\r\n      error: result.error,\r\n      type,\r\n      sentTo: email\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error en API test email:', error);\r\n    return NextResponse.json(\r\n      { \r\n        success: false, \r\n        error: error instanceof Error ? error.message : 'Error interno del servidor' \r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// ===================================\r\n// GET - VERIFICAR CONFIGURACIÓN\r\n// ===================================\r\n\r\nexport async function GET() {\r\n  try {\r\n    const config = getEmailServiceConfig();\r\n    \r\n    return NextResponse.json({\r\n      success: true,\r\n      config: {\r\n        isReady: config.isReady,\r\n        fromEmail: config.fromEmail,\r\n        supportEmail: config.supportEmail,\r\n        hasApiKey: config.hasApiKey,\r\n        provider: 'Resend'\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error verificando configuración email:', error);\r\n    return NextResponse.json(\r\n      { \r\n        success: false, \r\n        error: error instanceof Error ? error.message : 'Error interno del servidor' \r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}