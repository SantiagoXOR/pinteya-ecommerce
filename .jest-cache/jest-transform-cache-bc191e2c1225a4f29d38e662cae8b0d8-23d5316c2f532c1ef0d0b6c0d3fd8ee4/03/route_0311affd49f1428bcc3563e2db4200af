08ced4537333440bfe8df3f189cffafd
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_psr6jtles() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\email\\test\\route.ts";
  var hash = "50a5939f499079eecbae8a9de8ce3ea640a3d8dc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\email\\test\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 15
        },
        end: {
          line: 24,
          column: 50
        }
      },
      "9": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 24
        }
      },
      "10": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "11": {
        start: {
          line: 28,
          column: 21
        },
        end: {
          line: 28,
          column: 41
        }
      },
      "12": {
        start: {
          line: 29,
          column: 42
        },
        end: {
          line: 29,
          column: 46
        }
      },
      "13": {
        start: {
          line: 31,
          column: 23
        },
        end: {
          line: 31,
          column: 58
        }
      },
      "14": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "15": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 42,
          column: 15
        }
      },
      "16": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "17": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 51,
          column: 15
        }
      },
      "18": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "19": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 59,
          column: 19
        }
      },
      "20": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 22
        }
      },
      "21": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 79,
          column: 19
        }
      },
      "22": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 22
        }
      },
      "23": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 86,
          column: 19
        }
      },
      "24": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 22
        }
      },
      "25": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 94,
          column: 19
        }
      },
      "26": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 102,
          column: 11
        }
      },
      "27": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 57
        }
      },
      "28": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 110,
          column: 11
        }
      },
      "29": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 134,
          column: 5
        }
      },
      "30": {
        start: {
          line: 115,
          column: 23
        },
        end: {
          line: 115,
          column: 58
        }
      },
      "31": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 125,
          column: 11
        }
      },
      "32": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 71
        }
      },
      "33": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 133,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "POST",
        decl: {
          start: {
            line: 26,
            column: 15
          },
          end: {
            line: 26,
            column: 19
          }
        },
        loc: {
          start: {
            line: 26,
            column: 29
          },
          end: {
            line: 112,
            column: 1
          }
        },
        line: 26
      },
      "5": {
        name: "GET",
        decl: {
          start: {
            line: 113,
            column: 15
          },
          end: {
            line: 113,
            column: 18
          }
        },
        loc: {
          start: {
            line: 113,
            column: 21
          },
          end: {
            line: 135,
            column: 1
          }
        },
        line: 113
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "2": {
        loc: {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 45,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 45,
            column: 18
          }
        }, {
          start: {
            line: 45,
            column: 22
          },
          end: {
            line: 45,
            column: 31
          }
        }],
        line: 45
      },
      "3": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 60,
            column: 22
          }
        }, {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 80,
            column: 22
          }
        }, {
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 87,
            column: 22
          }
        }, {
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 94,
            column: 19
          }
        }],
        line: 54
      },
      "4": {
        loc: {
          start: {
            line: 107,
            column: 19
          },
          end: {
            line: 107,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 44
          },
          end: {
            line: 107,
            column: 57
          }
        }, {
          start: {
            line: 107,
            column: 60
          },
          end: {
            line: 107,
            column: 88
          }
        }],
        line: 107
      },
      "5": {
        loc: {
          start: {
            line: 130,
            column: 19
          },
          end: {
            line: 130,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 130,
            column: 44
          },
          end: {
            line: 130,
            column: 57
          }
        }, {
          start: {
            line: 130,
            column: 60
          },
          end: {
            line: 130,
            column: 88
          }
        }],
        line: 130
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\email\\test\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API TEST EMAIL\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { \r\n  sendWelcomeEmail, \r\n  sendOrderConfirmationEmail, \r\n  sendPasswordResetEmail,\r\n  getEmailServiceConfig \r\n} from '../../../../../lib/email';\r\n\r\n// ===================================\r\n// POST - ENVIAR EMAIL DE PRUEBA\r\n// ===================================\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { type, email, userName } = body;\r\n\r\n    // Verificar configuraci\xF3n\r\n    const config = getEmailServiceConfig();\r\n    if (!config.isReady) {\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'Servicio de email no configurado',\r\n          config: {\r\n            hasApiKey: config.hasApiKey,\r\n            fromEmail: config.fromEmail\r\n          }\r\n        },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Validar par\xE1metros\r\n    if (!email || !userName) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'Email y userName son requeridos' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    let result;\r\n\r\n    switch (type) {\r\n      case 'welcome':\r\n        result = await sendWelcomeEmail({\r\n          userName,\r\n          userEmail: email\r\n        });\r\n        break;\r\n\r\n      case 'order':\r\n        result = await sendOrderConfirmationEmail({\r\n          userName,\r\n          userEmail: email,\r\n          orderNumber: 'TEST-001',\r\n          orderTotal: '$15.990',\r\n          orderItems: [\r\n            { name: 'Pintura Sherwin Williams Blanco', quantity: 2, price: '$8.990' },\r\n            { name: 'Rodillo Profesional', quantity: 1, price: '$6.990' }\r\n          ]\r\n        });\r\n        break;\r\n\r\n      case 'reset':\r\n        result = await sendPasswordResetEmail({\r\n          userName,\r\n          userEmail: email,\r\n          resetLink: 'https://www.pinteya.com/reset-password?token=test-token-123'\r\n        });\r\n        break;\r\n\r\n      default:\r\n        return NextResponse.json(\r\n          { success: false, error: 'Tipo de email no v\xE1lido. Usa: welcome, order, reset' },\r\n          { status: 400 }\r\n        );\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: result.success,\r\n      messageId: result.messageId,\r\n      error: result.error,\r\n      type,\r\n      sentTo: email\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error en API test email:', error);\r\n    return NextResponse.json(\r\n      { \r\n        success: false, \r\n        error: error instanceof Error ? error.message : 'Error interno del servidor' \r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// ===================================\r\n// GET - VERIFICAR CONFIGURACI\xD3N\r\n// ===================================\r\n\r\nexport async function GET() {\r\n  try {\r\n    const config = getEmailServiceConfig();\r\n    \r\n    return NextResponse.json({\r\n      success: true,\r\n      config: {\r\n        isReady: config.isReady,\r\n        fromEmail: config.fromEmail,\r\n        supportEmail: config.supportEmail,\r\n        hasApiKey: config.hasApiKey,\r\n        provider: 'Resend'\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error verificando configuraci\xF3n email:', error);\r\n    return NextResponse.json(\r\n      { \r\n        success: false, \r\n        error: error instanceof Error ? error.message : 'Error interno del servidor' \r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "request", "body", "json", "type", "email", "userName", "config", "getEmailServiceConfig", "isReady", "NextResponse", "success", "error", "hasApiKey", "fromEmail", "status", "result", "sendWelcomeEmail", "userEmail", "sendOrderConfirmationEmail", "orderNumber", "orderTotal", "orderItems", "name", "quantity", "price", "sendPasswordResetEmail", "resetLink", "messageId", "sentTo", "console", "Error", "message", "supportEmail", "provider"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QA8GfA;eAAAA;;QA3FAC;eAAAA;;QAlBTC;eAAAA;;;wBAM6B;uBAMnC;AAZA,MAAMA,UAAU;AAkBhB,eAAeD,KAAKE,OAAoB;IAC7C,IAAI;QACF,MAAMC,OAAO,MAAMD,QAAQE,IAAI;QAC/B,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAE,GAAGJ;QAElC,0BAA0B;QAC1B,MAAMK,SAASC,IAAAA,4BAAqB;QACpC,IAAI,CAACD,OAAOE,OAAO,EAAE;YACnB,OAAOC,oBAAY,CAACP,IAAI,CACtB;gBACEQ,SAAS;gBACTC,OAAO;gBACPL,QAAQ;oBACNM,WAAWN,OAAOM,SAAS;oBAC3BC,WAAWP,OAAOO,SAAS;gBAC7B;YACF,GACA;gBAAEC,QAAQ;YAAI;QAElB;QAEA,qBAAqB;QACrB,IAAI,CAACV,SAAS,CAACC,UAAU;YACvB,OAAOI,oBAAY,CAACP,IAAI,CACtB;gBAAEQ,SAAS;gBAAOC,OAAO;YAAkC,GAC3D;gBAAEG,QAAQ;YAAI;QAElB;QAEA,IAAIC;QAEJ,OAAQZ;YACN,KAAK;gBACHY,SAAS,MAAMC,IAAAA,uBAAgB,EAAC;oBAC9BX;oBACAY,WAAWb;gBACb;gBACA;YAEF,KAAK;gBACHW,SAAS,MAAMG,IAAAA,iCAA0B,EAAC;oBACxCb;oBACAY,WAAWb;oBACXe,aAAa;oBACbC,YAAY;oBACZC,YAAY;wBACV;4BAAEC,MAAM;4BAAmCC,UAAU;4BAAGC,OAAO;wBAAS;wBACxE;4BAAEF,MAAM;4BAAuBC,UAAU;4BAAGC,OAAO;wBAAS;qBAC7D;gBACH;gBACA;YAEF,KAAK;gBACHT,SAAS,MAAMU,IAAAA,6BAAsB,EAAC;oBACpCpB;oBACAY,WAAWb;oBACXsB,WAAW;gBACb;gBACA;YAEF;gBACE,OAAOjB,oBAAY,CAACP,IAAI,CACtB;oBAAEQ,SAAS;oBAAOC,OAAO;gBAAsD,GAC/E;oBAAEG,QAAQ;gBAAI;QAEpB;QAEA,OAAOL,oBAAY,CAACP,IAAI,CAAC;YACvBQ,SAASK,OAAOL,OAAO;YACvBiB,WAAWZ,OAAOY,SAAS;YAC3BhB,OAAOI,OAAOJ,KAAK;YACnBR;YACAyB,QAAQxB;QACV;IAEF,EAAE,OAAOO,OAAO;QACdkB,QAAQlB,KAAK,CAAC,4BAA4BA;QAC1C,OAAOF,oBAAY,CAACP,IAAI,CACtB;YACEQ,SAAS;YACTC,OAAOA,iBAAiBmB,QAAQnB,MAAMoB,OAAO,GAAG;QAClD,GACA;YAAEjB,QAAQ;QAAI;IAElB;AACF;AAMO,eAAejB;IACpB,IAAI;QACF,MAAMS,SAASC,IAAAA,4BAAqB;QAEpC,OAAOE,oBAAY,CAACP,IAAI,CAAC;YACvBQ,SAAS;YACTJ,QAAQ;gBACNE,SAASF,OAAOE,OAAO;gBACvBK,WAAWP,OAAOO,SAAS;gBAC3BmB,cAAc1B,OAAO0B,YAAY;gBACjCpB,WAAWN,OAAOM,SAAS;gBAC3BqB,UAAU;YACZ;QACF;IAEF,EAAE,OAAOtB,OAAO;QACdkB,QAAQlB,KAAK,CAAC,0CAA0CA;QACxD,OAAOF,oBAAY,CAACP,IAAI,CACtB;YACEQ,SAAS;YACTC,OAAOA,iBAAiBmB,QAAQnB,MAAMoB,OAAO,GAAG;QAClD,GACA;YAAEjB,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "50a5939f499079eecbae8a9de8ce3ea640a3d8dc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_psr6jtles = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_psr6jtles();
cov_psr6jtles().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_psr6jtles().f[0]++;
  cov_psr6jtles().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_psr6jtles().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_psr6jtles().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_psr6jtles().f[1]++;
    cov_psr6jtles().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_psr6jtles().f[2]++;
    cov_psr6jtles().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_psr6jtles().f[3]++;
    cov_psr6jtles().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_psr6jtles().s[7]++, require("next/server"));
const _email =
/* istanbul ignore next */
(cov_psr6jtles().s[8]++, require("../../../../../lib/email"));
const runtime =
/* istanbul ignore next */
(cov_psr6jtles().s[9]++, 'nodejs');
async function POST(request) {
  /* istanbul ignore next */
  cov_psr6jtles().f[4]++;
  cov_psr6jtles().s[10]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_psr6jtles().s[11]++, await request.json());
    const {
      type,
      email,
      userName
    } =
    /* istanbul ignore next */
    (cov_psr6jtles().s[12]++, body);
    // Verificar configuraciÃ³n
    const config =
    /* istanbul ignore next */
    (cov_psr6jtles().s[13]++, (0, _email.getEmailServiceConfig)());
    /* istanbul ignore next */
    cov_psr6jtles().s[14]++;
    if (!config.isReady) {
      /* istanbul ignore next */
      cov_psr6jtles().b[0][0]++;
      cov_psr6jtles().s[15]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Servicio de email no configurado',
        config: {
          hasApiKey: config.hasApiKey,
          fromEmail: config.fromEmail
        }
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_psr6jtles().b[0][1]++;
    }
    // Validar parÃ¡metros
    cov_psr6jtles().s[16]++;
    if (
    /* istanbul ignore next */
    (cov_psr6jtles().b[2][0]++, !email) ||
    /* istanbul ignore next */
    (cov_psr6jtles().b[2][1]++, !userName)) {
      /* istanbul ignore next */
      cov_psr6jtles().b[1][0]++;
      cov_psr6jtles().s[17]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Email y userName son requeridos'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_psr6jtles().b[1][1]++;
    }
    let result;
    /* istanbul ignore next */
    cov_psr6jtles().s[18]++;
    switch (type) {
      case 'welcome':
        /* istanbul ignore next */
        cov_psr6jtles().b[3][0]++;
        cov_psr6jtles().s[19]++;
        result = await (0, _email.sendWelcomeEmail)({
          userName,
          userEmail: email
        });
        /* istanbul ignore next */
        cov_psr6jtles().s[20]++;
        break;
      case 'order':
        /* istanbul ignore next */
        cov_psr6jtles().b[3][1]++;
        cov_psr6jtles().s[21]++;
        result = await (0, _email.sendOrderConfirmationEmail)({
          userName,
          userEmail: email,
          orderNumber: 'TEST-001',
          orderTotal: '$15.990',
          orderItems: [{
            name: 'Pintura Sherwin Williams Blanco',
            quantity: 2,
            price: '$8.990'
          }, {
            name: 'Rodillo Profesional',
            quantity: 1,
            price: '$6.990'
          }]
        });
        /* istanbul ignore next */
        cov_psr6jtles().s[22]++;
        break;
      case 'reset':
        /* istanbul ignore next */
        cov_psr6jtles().b[3][2]++;
        cov_psr6jtles().s[23]++;
        result = await (0, _email.sendPasswordResetEmail)({
          userName,
          userEmail: email,
          resetLink: 'https://www.pinteya.com/reset-password?token=test-token-123'
        });
        /* istanbul ignore next */
        cov_psr6jtles().s[24]++;
        break;
      default:
        /* istanbul ignore next */
        cov_psr6jtles().b[3][3]++;
        cov_psr6jtles().s[25]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Tipo de email no vÃ¡lido. Usa: welcome, order, reset'
        }, {
          status: 400
        });
    }
    /* istanbul ignore next */
    cov_psr6jtles().s[26]++;
    return _server.NextResponse.json({
      success: result.success,
      messageId: result.messageId,
      error: result.error,
      type,
      sentTo: email
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_psr6jtles().s[27]++;
    console.error('Error en API test email:', error);
    /* istanbul ignore next */
    cov_psr6jtles().s[28]++;
    return _server.NextResponse.json({
      success: false,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_psr6jtles().b[4][0]++, error.message) :
      /* istanbul ignore next */
      (cov_psr6jtles().b[4][1]++, 'Error interno del servidor')
    }, {
      status: 500
    });
  }
}
async function GET() {
  /* istanbul ignore next */
  cov_psr6jtles().f[5]++;
  cov_psr6jtles().s[29]++;
  try {
    const config =
    /* istanbul ignore next */
    (cov_psr6jtles().s[30]++, (0, _email.getEmailServiceConfig)());
    /* istanbul ignore next */
    cov_psr6jtles().s[31]++;
    return _server.NextResponse.json({
      success: true,
      config: {
        isReady: config.isReady,
        fromEmail: config.fromEmail,
        supportEmail: config.supportEmail,
        hasApiKey: config.hasApiKey,
        provider: 'Resend'
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_psr6jtles().s[32]++;
    console.error('Error verificando configuraciÃ³n email:', error);
    /* istanbul ignore next */
    cov_psr6jtles().s[33]++;
    return _server.NextResponse.json({
      success: false,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_psr6jtles().b[5][0]++, error.message) :
      /* istanbul ignore next */
      (cov_psr6jtles().b[5][1]++, 'Error interno del servidor')
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,