186278f616c032380f85a2eb5211a702
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_tyqwf5x4q() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products-rls\\route.ts";
  var hash = "680931f77a163e9dc031f4f297c4ba2a6818c41b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products-rls\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 19
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 23
        }
      },
      "8": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "9": {
        start: {
          line: 27,
          column: 29
        },
        end: {
          line: 27,
          column: 82
        }
      },
      "10": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 28,
          column: 80
        }
      },
      "11": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 24
        }
      },
      "12": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 148,
          column: 5
        }
      },
      "13": {
        start: {
          line: 33,
          column: 27
        },
        end: {
          line: 35,
          column: 10
        }
      },
      "14": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "15": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 43,
          column: 15
        }
      },
      "16": {
        start: {
          line: 45,
          column: 24
        },
        end: {
          line: 45,
          column: 42
        }
      },
      "17": {
        start: {
          line: 46,
          column: 20
        },
        end: {
          line: 46,
          column: 40
        }
      },
      "18": {
        start: {
          line: 48,
          column: 22
        },
        end: {
          line: 48,
          column: 69
        }
      },
      "19": {
        start: {
          line: 49,
          column: 23
        },
        end: {
          line: 49,
          column: 70
        }
      },
      "20": {
        start: {
          line: 50,
          column: 23
        },
        end: {
          line: 50,
          column: 59
        }
      },
      "21": {
        start: {
          line: 51,
          column: 27
        },
        end: {
          line: 51,
          column: 61
        }
      },
      "22": {
        start: {
          line: 52,
          column: 25
        },
        end: {
          line: 52,
          column: 55
        }
      },
      "23": {
        start: {
          line: 54,
          column: 23
        },
        end: {
          line: 113,
          column: 10
        }
      },
      "24": {
        start: {
          line: 56,
          column: 31
        },
        end: {
          line: 56,
          column: 96
        }
      },
      "25": {
        start: {
          line: 57,
          column: 24
        },
        end: {
          line: 78,
          column: 14
        }
      },
      "26": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 82,
          column: 15
        }
      },
      "27": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 45
        }
      },
      "28": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 86,
          column: 13
        }
      },
      "29": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 85,
          column: 89
        }
      },
      "30": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 89,
          column: 13
        }
      },
      "31": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 70
        }
      },
      "32": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 92,
          column: 13
        }
      },
      "33": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 67
        }
      },
      "34": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 96,
          column: 15
        }
      },
      "35": {
        start: {
          line: 97,
          column: 53
        },
        end: {
          line: 97,
          column: 64
        }
      },
      "36": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 100,
          column: 13
        }
      },
      "37": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 99,
          column: 81
        }
      },
      "38": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 109,
          column: 14
        }
      },
      "39": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "40": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 122,
          column: 15
        }
      },
      "41": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 137,
          column: 11
        }
      },
      "42": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 76
        }
      },
      "43": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 147,
          column: 11
        }
      },
      "44": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 268,
          column: 5
        }
      },
      "45": {
        start: {
          line: 152,
          column: 27
        },
        end: {
          line: 154,
          column: 10
        }
      },
      "46": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "47": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 162,
          column: 15
        }
      },
      "48": {
        start: {
          line: 164,
          column: 24
        },
        end: {
          line: 164,
          column: 42
        }
      },
      "49": {
        start: {
          line: 165,
          column: 21
        },
        end: {
          line: 165,
          column: 41
        }
      },
      "50": {
        start: {
          line: 167,
          column: 31
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "51": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 182,
          column: 9
        }
      },
      "52": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 181,
          column: 13
        }
      },
      "53": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 180,
          column: 19
        }
      },
      "54": {
        start: {
          line: 184,
          column: 23
        },
        end: {
          line: 228,
          column: 10
        }
      },
      "55": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 188,
          column: 13
        }
      },
      "56": {
        start: {
          line: 187,
          column: 16
        },
        end: {
          line: 187,
          column: 79
        }
      },
      "57": {
        start: {
          line: 190,
          column: 25
        },
        end: {
          line: 190,
          column: 125
        }
      },
      "58": {
        start: {
          line: 191,
          column: 32
        },
        end: {
          line: 205,
          column: 13
        }
      },
      "59": {
        start: {
          line: 206,
          column: 45
        },
        end: {
          line: 220,
          column: 21
        }
      },
      "60": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 223,
          column: 13
        }
      },
      "61": {
        start: {
          line: 222,
          column: 16
        },
        end: {
          line: 222,
          column: 76
        }
      },
      "62": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 27
        }
      },
      "63": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "64": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 237,
          column: 15
        }
      },
      "65": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 257,
          column: 11
        }
      },
      "66": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 259,
          column: 77
        }
      },
      "67": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 267,
          column: 11
        }
      },
      "68": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 397,
          column: 5
        }
      },
      "69": {
        start: {
          line: 272,
          column: 27
        },
        end: {
          line: 274,
          column: 10
        }
      },
      "70": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "71": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 282,
          column: 15
        }
      },
      "72": {
        start: {
          line: 284,
          column: 24
        },
        end: {
          line: 284,
          column: 42
        }
      },
      "73": {
        start: {
          line: 285,
          column: 21
        },
        end: {
          line: 285,
          column: 41
        }
      },
      "74": {
        start: {
          line: 286,
          column: 20
        },
        end: {
          line: 286,
          column: 40
        }
      },
      "75": {
        start: {
          line: 287,
          column: 26
        },
        end: {
          line: 287,
          column: 52
        }
      },
      "76": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 296,
          column: 9
        }
      },
      "77": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 295,
          column: 15
        }
      },
      "78": {
        start: {
          line: 298,
          column: 23
        },
        end: {
          line: 359,
          column: 10
        }
      },
      "79": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 302,
          column: 13
        }
      },
      "80": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 301,
          column: 84
        }
      },
      "81": {
        start: {
          line: 304,
          column: 31
        },
        end: {
          line: 306,
          column: 13
        }
      },
      "82": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 310,
          column: 13
        }
      },
      "83": {
        start: {
          line: 309,
          column: 16
        },
        end: {
          line: 309,
          column: 44
        }
      },
      "84": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 313,
          column: 13
        }
      },
      "85": {
        start: {
          line: 312,
          column: 16
        },
        end: {
          line: 312,
          column: 58
        }
      },
      "86": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 316,
          column: 13
        }
      },
      "87": {
        start: {
          line: 315,
          column: 16
        },
        end: {
          line: 315,
          column: 58
        }
      },
      "88": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 319,
          column: 13
        }
      },
      "89": {
        start: {
          line: 318,
          column: 16
        },
        end: {
          line: 318,
          column: 111
        }
      },
      "90": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 322,
          column: 13
        }
      },
      "91": {
        start: {
          line: 321,
          column: 16
        },
        end: {
          line: 321,
          column: 56
        }
      },
      "92": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 325,
          column: 13
        }
      },
      "93": {
        start: {
          line: 324,
          column: 16
        },
        end: {
          line: 324,
          column: 68
        }
      },
      "94": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 328,
          column: 13
        }
      },
      "95": {
        start: {
          line: 327,
          column: 16
        },
        end: {
          line: 327,
          column: 46
        }
      },
      "96": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 331,
          column: 13
        }
      },
      "97": {
        start: {
          line: 330,
          column: 16
        },
        end: {
          line: 330,
          column: 54
        }
      },
      "98": {
        start: {
          line: 332,
          column: 12
        },
        end: {
          line: 334,
          column: 13
        }
      },
      "99": {
        start: {
          line: 333,
          column: 16
        },
        end: {
          line: 333,
          column: 58
        }
      },
      "100": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 337,
          column: 13
        }
      },
      "101": {
        start: {
          line: 336,
          column: 16
        },
        end: {
          line: 336,
          column: 48
        }
      },
      "102": {
        start: {
          line: 338,
          column: 45
        },
        end: {
          line: 351,
          column: 21
        }
      },
      "103": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 354,
          column: 13
        }
      },
      "104": {
        start: {
          line: 353,
          column: 16
        },
        end: {
          line: 353,
          column: 81
        }
      },
      "105": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 355,
          column: 27
        }
      },
      "106": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 369,
          column: 9
        }
      },
      "107": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 368,
          column: 15
        }
      },
      "108": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 386,
          column: 11
        }
      },
      "109": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 388,
          column: 76
        }
      },
      "110": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 396,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "GET",
        decl: {
          start: {
            line: 30,
            column: 15
          },
          end: {
            line: 30,
            column: 18
          }
        },
        loc: {
          start: {
            line: 30,
            column: 28
          },
          end: {
            line: 149,
            column: 1
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 54,
            column: 78
          },
          end: {
            line: 54,
            column: 79
          }
        },
        loc: {
          start: {
            line: 54,
            column: 106
          },
          end: {
            line: 110,
            column: 9
          }
        },
        line: 54
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 80,
            column: 47
          },
          end: {
            line: 80,
            column: 48
          }
        },
        loc: {
          start: {
            line: 80,
            column: 63
          },
          end: {
            line: 82,
            column: 13
          }
        },
        line: 80
      },
      "8": {
        name: "POST",
        decl: {
          start: {
            line: 150,
            column: 15
          },
          end: {
            line: 150,
            column: 19
          }
        },
        loc: {
          start: {
            line: 150,
            column: 29
          },
          end: {
            line: 269,
            column: 1
          }
        },
        line: 150
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 184,
            column: 78
          },
          end: {
            line: 184,
            column: 79
          }
        },
        loc: {
          start: {
            line: 184,
            column: 106
          },
          end: {
            line: 225,
            column: 9
          }
        },
        line: 184
      },
      "10": {
        name: "PUT",
        decl: {
          start: {
            line: 270,
            column: 15
          },
          end: {
            line: 270,
            column: 18
          }
        },
        loc: {
          start: {
            line: 270,
            column: 28
          },
          end: {
            line: 398,
            column: 1
          }
        },
        line: 270
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 298,
            column: 78
          },
          end: {
            line: 298,
            column: 79
          }
        },
        loc: {
          start: {
            line: 298,
            column: 106
          },
          end: {
            line: 356,
            column: 9
          }
        },
        line: 298
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "1": {
        loc: {
          start: {
            line: 42,
            column: 24
          },
          end: {
            line: 42,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 24
          },
          end: {
            line: 42,
            column: 41
          }
        }, {
          start: {
            line: 42,
            column: 45
          },
          end: {
            line: 42,
            column: 48
          }
        }],
        line: 42
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 48,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 48,
            column: 60
          }
        }, {
          start: {
            line: 48,
            column: 64
          },
          end: {
            line: 48,
            column: 68
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 49,
            column: 32
          },
          end: {
            line: 49,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 32
          },
          end: {
            line: 49,
            column: 62
          }
        }, {
          start: {
            line: 49,
            column: 66
          },
          end: {
            line: 49,
            column: 69
          }
        }],
        line: 49
      },
      "4": {
        loc: {
          start: {
            line: 50,
            column: 23
          },
          end: {
            line: 50,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 23
          },
          end: {
            line: 50,
            column: 53
          }
        }, {
          start: {
            line: 50,
            column: 57
          },
          end: {
            line: 50,
            column: 59
          }
        }],
        line: 50
      },
      "5": {
        loc: {
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 86,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 86,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "6": {
        loc: {
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "7": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "8": {
        loc: {
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 90,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 90,
            column: 33
          }
        }, {
          start: {
            line: 90,
            column: 37
          },
          end: {
            line: 90,
            column: 59
          }
        }],
        line: 90
      },
      "9": {
        loc: {
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "10": {
        loc: {
          start: {
            line: 102,
            column: 26
          },
          end: {
            line: 102,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 26
          },
          end: {
            line: 102,
            column: 34
          }
        }, {
          start: {
            line: 102,
            column: 38
          },
          end: {
            line: 102,
            column: 40
          }
        }],
        line: 102
      },
      "11": {
        loc: {
          start: {
            line: 103,
            column: 23
          },
          end: {
            line: 103,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 23
          },
          end: {
            line: 103,
            column: 28
          }
        }, {
          start: {
            line: 103,
            column: 32
          },
          end: {
            line: 103,
            column: 33
          }
        }],
        line: 103
      },
      "12": {
        loc: {
          start: {
            line: 107,
            column: 30
          },
          end: {
            line: 107,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 30
          },
          end: {
            line: 107,
            column: 35
          }
        }, {
          start: {
            line: 107,
            column: 39
          },
          end: {
            line: 107,
            column: 40
          }
        }],
        line: 107
      },
      "13": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "14": {
        loc: {
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "15": {
        loc: {
          start: {
            line: 161,
            column: 24
          },
          end: {
            line: 161,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 24
          },
          end: {
            line: 161,
            column: 41
          }
        }, {
          start: {
            line: 161,
            column: 45
          },
          end: {
            line: 161,
            column: 48
          }
        }],
        line: 161
      },
      "16": {
        loc: {
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "17": {
        loc: {
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 188,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 188,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "18": {
        loc: {
          start: {
            line: 194,
            column: 29
          },
          end: {
            line: 194,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 29
          },
          end: {
            line: 194,
            column: 45
          }
        }, {
          start: {
            line: 194,
            column: 49
          },
          end: {
            line: 194,
            column: 51
          }
        }],
        line: 194
      },
      "19": {
        loc: {
          start: {
            line: 196,
            column: 34
          },
          end: {
            line: 196,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 196,
            column: 58
          },
          end: {
            line: 196,
            column: 91
          }
        }, {
          start: {
            line: 196,
            column: 94
          },
          end: {
            line: 196,
            column: 98
          }
        }],
        line: 196
      },
      "20": {
        loc: {
          start: {
            line: 197,
            column: 32
          },
          end: {
            line: 197,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 197,
            column: 32
          },
          end: {
            line: 197,
            column: 42
          }
        }, {
          start: {
            line: 197,
            column: 46
          },
          end: {
            line: 197,
            column: 49
          }
        }],
        line: 197
      },
      "21": {
        loc: {
          start: {
            line: 199,
            column: 23
          },
          end: {
            line: 199,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 23
          },
          end: {
            line: 199,
            column: 33
          }
        }, {
          start: {
            line: 199,
            column: 37
          },
          end: {
            line: 199,
            column: 39
          }
        }],
        line: 199
      },
      "22": {
        loc: {
          start: {
            line: 202,
            column: 24
          },
          end: {
            line: 202,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 24
          },
          end: {
            line: 202,
            column: 35
          }
        }, {
          start: {
            line: 202,
            column: 39
          },
          end: {
            line: 202,
            column: 41
          }
        }],
        line: 202
      },
      "23": {
        loc: {
          start: {
            line: 221,
            column: 12
          },
          end: {
            line: 223,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 12
          },
          end: {
            line: 223,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "24": {
        loc: {
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "25": {
        loc: {
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 283,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 283,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 275
      },
      "26": {
        loc: {
          start: {
            line: 281,
            column: 24
          },
          end: {
            line: 281,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 281,
            column: 24
          },
          end: {
            line: 281,
            column: 41
          }
        }, {
          start: {
            line: 281,
            column: 45
          },
          end: {
            line: 281,
            column: 48
          }
        }],
        line: 281
      },
      "27": {
        loc: {
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 296,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 296,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 288
      },
      "28": {
        loc: {
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 302,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 302,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "29": {
        loc: {
          start: {
            line: 308,
            column: 12
          },
          end: {
            line: 310,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 308,
            column: 12
          },
          end: {
            line: 310,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 308
      },
      "30": {
        loc: {
          start: {
            line: 311,
            column: 12
          },
          end: {
            line: 313,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 12
          },
          end: {
            line: 313,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "31": {
        loc: {
          start: {
            line: 314,
            column: 12
          },
          end: {
            line: 316,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 12
          },
          end: {
            line: 316,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 314
      },
      "32": {
        loc: {
          start: {
            line: 317,
            column: 12
          },
          end: {
            line: 319,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 12
          },
          end: {
            line: 319,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "33": {
        loc: {
          start: {
            line: 318,
            column: 46
          },
          end: {
            line: 318,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 318,
            column: 70
          },
          end: {
            line: 318,
            column: 103
          }
        }, {
          start: {
            line: 318,
            column: 106
          },
          end: {
            line: 318,
            column: 110
          }
        }],
        line: 318
      },
      "34": {
        loc: {
          start: {
            line: 320,
            column: 12
          },
          end: {
            line: 322,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 320,
            column: 12
          },
          end: {
            line: 322,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 320
      },
      "35": {
        loc: {
          start: {
            line: 323,
            column: 12
          },
          end: {
            line: 325,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 323,
            column: 12
          },
          end: {
            line: 325,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 323
      },
      "36": {
        loc: {
          start: {
            line: 326,
            column: 12
          },
          end: {
            line: 328,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 12
          },
          end: {
            line: 328,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "37": {
        loc: {
          start: {
            line: 329,
            column: 12
          },
          end: {
            line: 331,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 329,
            column: 12
          },
          end: {
            line: 331,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 329
      },
      "38": {
        loc: {
          start: {
            line: 332,
            column: 12
          },
          end: {
            line: 334,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 12
          },
          end: {
            line: 334,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 332
      },
      "39": {
        loc: {
          start: {
            line: 335,
            column: 12
          },
          end: {
            line: 337,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 335,
            column: 12
          },
          end: {
            line: 337,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 335
      },
      "40": {
        loc: {
          start: {
            line: 352,
            column: 12
          },
          end: {
            line: 354,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 352,
            column: 12
          },
          end: {
            line: 354,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 352
      },
      "41": {
        loc: {
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 369,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 369,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 360
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products-rls\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n/**\r\n * API de Productos con RLS Enterprise\r\n * Demuestra la integraci\xF3n completa de Row Level Security con utilidades enterprise\r\n */\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { \r\n  requireAdminAuth,\r\n  withAdminAuth \r\n} from '@/lib/auth/enterprise-auth-utils';\r\nimport {\r\n  executeWithRLS,\r\n  withRLS,\r\n  createRLSFilters,\r\n  checkRLSPermission\r\n} from '@/lib/auth/enterprise-rls-utils';\r\n\r\n// ===================================\r\n// GET /api/admin/products-rls - Listar productos con RLS\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Autenticaci\xF3n enterprise\r\n    const authResult = await requireAdminAuth(request, ['products_read']);\r\n\r\n    if (!authResult.success) {\r\n      return NextResponse.json(\r\n        { \r\n          error: authResult.error,\r\n          code: authResult.code,\r\n          enterprise: true\r\n        },\r\n        { status: authResult.status || 401 }\r\n      );\r\n    }\r\n\r\n    const context = authResult.context!;\r\n    const url = new URL(request.url);\r\n    \r\n    // Par\xE1metros de consulta\r\n    const limit = parseInt(url.searchParams.get('limit') || '20');\r\n    const offset = parseInt(url.searchParams.get('offset') || '0');\r\n    const search = url.searchParams.get('search') || '';\r\n    const categoryId = url.searchParams.get('categoryId');\r\n    const isActive = url.searchParams.get('active');\r\n\r\n    // Ejecutar consulta con RLS\r\n    const result = await executeWithRLS(\r\n      context,\r\n      async (client, rlsContext) => {\r\n        // Crear filtros RLS autom\xE1ticos\r\n        const rlsFilters = createRLSFilters(rlsContext, 'products');\r\n        \r\n        let query = client\r\n          .from('products')\r\n          .select(`\r\n            id,\r\n            name,\r\n            slug,\r\n            description,\r\n            price,\r\n            discounted_price,\r\n            stock,\r\n            category_id,\r\n            brand,\r\n            is_active,\r\n            is_featured,\r\n            created_at,\r\n            updated_at,\r\n            categories (\r\n              id,\r\n              name,\r\n              slug\r\n            )\r\n          `, { count: 'exact' });\r\n\r\n        // Aplicar filtros RLS autom\xE1ticos\r\n        Object.entries(rlsFilters).forEach(([key, value]) => {\r\n          query = query.eq(key, value);\r\n        });\r\n\r\n        // Aplicar filtros de b\xFAsqueda\r\n        if (search) {\r\n          query = query.or(`name.ilike.%${search}%,description.ilike.%${search}%`);\r\n        }\r\n\r\n        if (categoryId) {\r\n          query = query.eq('category_id', parseInt(categoryId));\r\n        }\r\n\r\n        if (isActive !== null && isActive !== undefined) {\r\n          query = query.eq('is_active', isActive === 'true');\r\n        }\r\n\r\n        // Aplicar paginaci\xF3n\r\n        query = query\r\n          .range(offset, offset + limit - 1)\r\n          .order('created_at', { ascending: false });\r\n\r\n        const { data: products, error, count } = await query;\r\n\r\n        if (error) {\r\n          throw new Error(`Error consultando productos: ${error.message}`);\r\n        }\r\n\r\n        return {\r\n          products: products || [],\r\n          total: count || 0,\r\n          pagination: {\r\n            limit,\r\n            offset,\r\n            hasMore: (count || 0) > offset + limit\r\n          }\r\n        };\r\n      },\r\n      {\r\n        enforceRLS: true,\r\n        auditLog: true\r\n      }\r\n    );\r\n\r\n    if (!result.success) {\r\n      return NextResponse.json(\r\n        { \r\n          error: result.error,\r\n          code: result.code,\r\n          rls: true,\r\n          enterprise: true\r\n        },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: result.data,\r\n      rls: {\r\n        enabled: true,\r\n        context: {\r\n          role: context.role,\r\n          permissions: context.permissions,\r\n          securityLevel: context.securityLevel\r\n        }\r\n      },\r\n      enterprise: true,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('[API] Error en GET /api/admin/products-rls:', error);\r\n    return NextResponse.json(\r\n      { \r\n        error: 'Error interno del servidor',\r\n        code: 'INTERNAL_SERVER_ERROR',\r\n        rls: true,\r\n        enterprise: true\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// ===================================\r\n// POST /api/admin/products-rls - Crear producto con RLS\r\n// ===================================\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const authResult = await requireAdminAuth(request, ['products_create']);\r\n\r\n    if (!authResult.success) {\r\n      return NextResponse.json(\r\n        { \r\n          error: authResult.error,\r\n          code: authResult.code,\r\n          enterprise: true\r\n        },\r\n        { status: authResult.status || 401 }\r\n      );\r\n    }\r\n\r\n    const context = authResult.context!;\r\n    const body = await request.json();\r\n\r\n    // Validar datos del producto\r\n    const requiredFields = ['name', 'price', 'category_id'];\r\n    for (const field of requiredFields) {\r\n      if (!body[field]) {\r\n        return NextResponse.json(\r\n          { \r\n            error: `Campo requerido: ${field}`,\r\n            code: 'MISSING_FIELD',\r\n            enterprise: true\r\n          },\r\n          { status: 400 }\r\n        );\r\n      }\r\n    }\r\n\r\n    // Ejecutar creaci\xF3n con RLS\r\n    const result = await executeWithRLS(\r\n      context,\r\n      async (client, rlsContext) => {\r\n        // Verificar permisos espec\xEDficos\r\n        if (!checkRLSPermission(rlsContext, 'products_create')) {\r\n          throw new Error('Permisos insuficientes para crear productos');\r\n        }\r\n\r\n        // Crear slug autom\xE1tico\r\n        const slug = body.name\r\n          .toLowerCase()\r\n          .replace(/[^a-z0-9\\s-]/g, '')\r\n          .replace(/\\s+/g, '-')\r\n          .replace(/-+/g, '-')\r\n          .trim();\r\n\r\n        const productData = {\r\n          name: body.name,\r\n          slug: `${slug}-${Date.now()}`, // Asegurar unicidad\r\n          description: body.description || '',\r\n          price: parseFloat(body.price),\r\n          discounted_price: body.discounted_price ? parseFloat(body.discounted_price) : null,\r\n          stock: parseInt(body.stock || '0'),\r\n          category_id: parseInt(body.category_id),\r\n          brand: body.brand || '',\r\n          is_active: body.is_active !== false,\r\n          is_featured: body.is_featured === true,\r\n          images: body.images || {},\r\n          created_at: new Date().toISOString(),\r\n          updated_at: new Date().toISOString()\r\n        };\r\n\r\n        const { data: product, error } = await client\r\n          .from('products')\r\n          .insert(productData)\r\n          .select(`\r\n            id,\r\n            name,\r\n            slug,\r\n            description,\r\n            price,\r\n            discounted_price,\r\n            stock,\r\n            category_id,\r\n            brand,\r\n            is_active,\r\n            is_featured,\r\n            created_at,\r\n            updated_at\r\n          `)\r\n          .single();\r\n\r\n        if (error) {\r\n          throw new Error(`Error creando producto: ${error.message}`);\r\n        }\r\n\r\n        return product;\r\n      },\r\n      {\r\n        enforceRLS: true,\r\n        auditLog: true\r\n      }\r\n    );\r\n\r\n    if (!result.success) {\r\n      return NextResponse.json(\r\n        { \r\n          error: result.error,\r\n          code: result.code,\r\n          rls: true,\r\n          enterprise: true\r\n        },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        product: result.data,\r\n        message: 'Producto creado exitosamente'\r\n      },\r\n      rls: {\r\n        enabled: true,\r\n        operation: 'CREATE',\r\n        context: {\r\n          role: context.role,\r\n          permissions: context.permissions\r\n        }\r\n      },\r\n      enterprise: true,\r\n      timestamp: new Date().toISOString()\r\n    }, { status: 201 });\r\n\r\n  } catch (error) {\r\n    console.error('[API] Error en POST /api/admin/products-rls:', error);\r\n    return NextResponse.json(\r\n      { \r\n        error: 'Error interno del servidor',\r\n        code: 'INTERNAL_SERVER_ERROR',\r\n        rls: true,\r\n        enterprise: true\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// ===================================\r\n// PUT /api/admin/products-rls - Actualizar producto con RLS\r\n// ===================================\r\nexport async function PUT(request: NextRequest) {\r\n  try {\r\n    const authResult = await requireAdminAuth(request, ['products_update']);\r\n\r\n    if (!authResult.success) {\r\n      return NextResponse.json(\r\n        { \r\n          error: authResult.error,\r\n          code: authResult.code,\r\n          enterprise: true\r\n        },\r\n        { status: authResult.status || 401 }\r\n      );\r\n    }\r\n\r\n    const context = authResult.context!;\r\n    const body = await request.json();\r\n    const url = new URL(request.url);\r\n    const productId = url.searchParams.get('id');\r\n\r\n    if (!productId) {\r\n      return NextResponse.json(\r\n        { \r\n          error: 'ID de producto requerido',\r\n          code: 'MISSING_PRODUCT_ID',\r\n          enterprise: true\r\n        },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Ejecutar actualizaci\xF3n con RLS\r\n    const result = await executeWithRLS(\r\n      context,\r\n      async (client, rlsContext) => {\r\n        // Verificar permisos espec\xEDficos\r\n        if (!checkRLSPermission(rlsContext, 'products_update')) {\r\n          throw new Error('Permisos insuficientes para actualizar productos');\r\n        }\r\n\r\n        // Preparar datos de actualizaci\xF3n\r\n        const updateData: any = {\r\n          updated_at: new Date().toISOString()\r\n        };\r\n\r\n        // Solo actualizar campos proporcionados\r\n        if (body.name !== undefined) {updateData.name = body.name;}\r\n        if (body.description !== undefined) {updateData.description = body.description;}\r\n        if (body.price !== undefined) {updateData.price = parseFloat(body.price);}\r\n        if (body.discounted_price !== undefined) {\r\n          updateData.discounted_price = body.discounted_price ? parseFloat(body.discounted_price) : null;\r\n        }\r\n        if (body.stock !== undefined) {updateData.stock = parseInt(body.stock);}\r\n        if (body.category_id !== undefined) {updateData.category_id = parseInt(body.category_id);}\r\n        if (body.brand !== undefined) {updateData.brand = body.brand;}\r\n        if (body.is_active !== undefined) {updateData.is_active = body.is_active;}\r\n        if (body.is_featured !== undefined) {updateData.is_featured = body.is_featured;}\r\n        if (body.images !== undefined) {updateData.images = body.images;}\r\n\r\n        const { data: product, error } = await client\r\n          .from('products')\r\n          .update(updateData)\r\n          .eq('id', parseInt(productId))\r\n          .select(`\r\n            id,\r\n            name,\r\n            slug,\r\n            description,\r\n            price,\r\n            discounted_price,\r\n            stock,\r\n            category_id,\r\n            brand,\r\n            is_active,\r\n            is_featured,\r\n            updated_at\r\n          `)\r\n          .single();\r\n\r\n        if (error) {\r\n          throw new Error(`Error actualizando producto: ${error.message}`);\r\n        }\r\n\r\n        return product;\r\n      },\r\n      {\r\n        enforceRLS: true,\r\n        auditLog: true\r\n      }\r\n    );\r\n\r\n    if (!result.success) {\r\n      return NextResponse.json(\r\n        { \r\n          error: result.error,\r\n          code: result.code,\r\n          rls: true,\r\n          enterprise: true\r\n        },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        product: result.data,\r\n        message: 'Producto actualizado exitosamente'\r\n      },\r\n      rls: {\r\n        enabled: true,\r\n        operation: 'UPDATE',\r\n        context: {\r\n          role: context.role,\r\n          permissions: context.permissions\r\n        }\r\n      },\r\n      enterprise: true,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('[API] Error en PUT /api/admin/products-rls:', error);\r\n    return NextResponse.json(\r\n      { \r\n        error: 'Error interno del servidor',\r\n        code: 'INTERNAL_SERVER_ERROR',\r\n        rls: true,\r\n        enterprise: true\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "PUT", "runtime", "request", "authResult", "requireAdminAuth", "success", "NextResponse", "json", "error", "code", "enterprise", "status", "context", "url", "URL", "limit", "parseInt", "searchParams", "get", "offset", "search", "categoryId", "isActive", "result", "executeWithRLS", "client", "rlsContext", "rlsFilters", "createRLSFilters", "query", "from", "select", "count", "Object", "entries", "forEach", "key", "value", "eq", "or", "undefined", "range", "order", "ascending", "data", "products", "Error", "message", "total", "pagination", "hasMore", "enforceRLS", "auditLog", "rls", "enabled", "role", "permissions", "securityLevel", "timestamp", "Date", "toISOString", "console", "body", "requiredFields", "field", "checkRLSPermission", "slug", "name", "toLowerCase", "replace", "trim", "productData", "now", "description", "price", "parseFloat", "discounted_price", "stock", "category_id", "brand", "is_active", "is_featured", "images", "created_at", "updated_at", "product", "insert", "single", "operation", "productId", "updateData", "update"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "680931f77a163e9dc031f4f297c4ba2a6818c41b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_tyqwf5x4q = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_tyqwf5x4q();
cov_tyqwf5x4q().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_tyqwf5x4q().f[0]++;
  cov_tyqwf5x4q().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_tyqwf5x4q().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_tyqwf5x4q().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_tyqwf5x4q().f[1]++;
    cov_tyqwf5x4q().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_tyqwf5x4q().f[2]++;
    cov_tyqwf5x4q().s[5]++;
    return POST;
  },
  get PUT() {
    /* istanbul ignore next */
    cov_tyqwf5x4q().f[3]++;
    cov_tyqwf5x4q().s[6]++;
    return PUT;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_tyqwf5x4q().f[4]++;
    cov_tyqwf5x4q().s[7]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_tyqwf5x4q().s[8]++, require("next/server"));
const _enterpriseauthutils =
/* istanbul ignore next */
(cov_tyqwf5x4q().s[9]++, require("../../../../lib/auth/enterprise-auth-utils"));
const _enterpriserlsutils =
/* istanbul ignore next */
(cov_tyqwf5x4q().s[10]++, require("../../../../lib/auth/enterprise-rls-utils"));
const runtime =
/* istanbul ignore next */
(cov_tyqwf5x4q().s[11]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_tyqwf5x4q().f[5]++;
  cov_tyqwf5x4q().s[12]++;
  try {
    // AutenticaciÃ³n enterprise
    const authResult =
    /* istanbul ignore next */
    (cov_tyqwf5x4q().s[13]++, await (0, _enterpriseauthutils.requireAdminAuth)(request, ['products_read']));
    /* istanbul ignore next */
    cov_tyqwf5x4q().s[14]++;
    if (!authResult.success) {
      /* istanbul ignore next */
      cov_tyqwf5x4q().b[0][0]++;
      cov_tyqwf5x4q().s[15]++;
      return _server.NextResponse.json({
        error: authResult.error,
        code: authResult.code,
        enterprise: true
      }, {
        status:
        /* istanbul ignore next */
        (cov_tyqwf5x4q().b[1][0]++, authResult.status) ||
        /* istanbul ignore next */
        (cov_tyqwf5x4q().b[1][1]++, 401)
      });
    } else
    /* istanbul ignore next */
    {
      cov_tyqwf5x4q().b[0][1]++;
    }
    const context =
    /* istanbul ignore next */
    (cov_tyqwf5x4q().s[16]++, authResult.context);
    const url =
    /* istanbul ignore next */
    (cov_tyqwf5x4q().s[17]++, new URL(request.url));
    // ParÃ¡metros de consulta
    const limit =
    /* istanbul ignore next */
    (cov_tyqwf5x4q().s[18]++, parseInt(
    /* istanbul ignore next */
    (cov_tyqwf5x4q().b[2][0]++, url.searchParams.get('limit')) ||
    /* istanbul ignore next */
    (cov_tyqwf5x4q().b[2][1]++, '20')));
    const offset =
    /* istanbul ignore next */
    (cov_tyqwf5x4q().s[19]++, parseInt(
    /* istanbul ignore next */
    (cov_tyqwf5x4q().b[3][0]++, url.searchParams.get('offset')) ||
    /* istanbul ignore next */
    (cov_tyqwf5x4q().b[3][1]++, '0')));
    const search =
    /* istanbul ignore next */
    (cov_tyqwf5x4q().s[20]++,
    /* istanbul ignore next */
    (cov_tyqwf5x4q().b[4][0]++, url.searchParams.get('search')) ||
    /* istanbul ignore next */
    (cov_tyqwf5x4q().b[4][1]++, ''));
    const categoryId =
    /* istanbul ignore next */
    (cov_tyqwf5x4q().s[21]++, url.searchParams.get('categoryId'));
    const isActive =
    /* istanbul ignore next */
    (cov_tyqwf5x4q().s[22]++, url.searchParams.get('active'));
    // Ejecutar consulta con RLS
    const result =
    /* istanbul ignore next */
    (cov_tyqwf5x4q().s[23]++, await (0, _enterpriserlsutils.executeWithRLS)(context, async (client, rlsContext) => {
      /* istanbul ignore next */
      cov_tyqwf5x4q().f[6]++;
      // Crear filtros RLS automÃ¡ticos
      const rlsFilters =
      /* istanbul ignore next */
      (cov_tyqwf5x4q().s[24]++, (0, _enterpriserlsutils.createRLSFilters)(rlsContext, 'products'));
      let query =
      /* istanbul ignore next */
      (cov_tyqwf5x4q().s[25]++, client.from('products').select(`
            id,
            name,
            slug,
            description,
            price,
            discounted_price,
            stock,
            category_id,
            brand,
            is_active,
            is_featured,
            created_at,
            updated_at,
            categories (
              id,
              name,
              slug
            )
          `, {
        count: 'exact'
      }));
      // Aplicar filtros RLS automÃ¡ticos
      /* istanbul ignore next */
      cov_tyqwf5x4q().s[26]++;
      Object.entries(rlsFilters).forEach(([key, value]) => {
        /* istanbul ignore next */
        cov_tyqwf5x4q().f[7]++;
        cov_tyqwf5x4q().s[27]++;
        query = query.eq(key, value);
      });
      // Aplicar filtros de bÃºsqueda
      /* istanbul ignore next */
      cov_tyqwf5x4q().s[28]++;
      if (search) {
        /* istanbul ignore next */
        cov_tyqwf5x4q().b[5][0]++;
        cov_tyqwf5x4q().s[29]++;
        query = query.or(`name.ilike.%${search}%,description.ilike.%${search}%`);
      } else
      /* istanbul ignore next */
      {
        cov_tyqwf5x4q().b[5][1]++;
      }
      cov_tyqwf5x4q().s[30]++;
      if (categoryId) {
        /* istanbul ignore next */
        cov_tyqwf5x4q().b[6][0]++;
        cov_tyqwf5x4q().s[31]++;
        query = query.eq('category_id', parseInt(categoryId));
      } else
      /* istanbul ignore next */
      {
        cov_tyqwf5x4q().b[6][1]++;
      }
      cov_tyqwf5x4q().s[32]++;
      if (
      /* istanbul ignore next */
      (cov_tyqwf5x4q().b[8][0]++, isActive !== null) &&
      /* istanbul ignore next */
      (cov_tyqwf5x4q().b[8][1]++, isActive !== undefined)) {
        /* istanbul ignore next */
        cov_tyqwf5x4q().b[7][0]++;
        cov_tyqwf5x4q().s[33]++;
        query = query.eq('is_active', isActive === 'true');
      } else
      /* istanbul ignore next */
      {
        cov_tyqwf5x4q().b[7][1]++;
      }
      // Aplicar paginaciÃ³n
      cov_tyqwf5x4q().s[34]++;
      query = query.range(offset, offset + limit - 1).order('created_at', {
        ascending: false
      });
      const {
        data: products,
        error,
        count
      } =
      /* istanbul ignore next */
      (cov_tyqwf5x4q().s[35]++, await query);
      /* istanbul ignore next */
      cov_tyqwf5x4q().s[36]++;
      if (error) {
        /* istanbul ignore next */
        cov_tyqwf5x4q().b[9][0]++;
        cov_tyqwf5x4q().s[37]++;
        throw new Error(`Error consultando productos: ${error.message}`);
      } else
      /* istanbul ignore next */
      {
        cov_tyqwf5x4q().b[9][1]++;
      }
      cov_tyqwf5x4q().s[38]++;
      return {
        products:
        /* istanbul ignore next */
        (cov_tyqwf5x4q().b[10][0]++, products) ||
        /* istanbul ignore next */
        (cov_tyqwf5x4q().b[10][1]++, []),
        total:
        /* istanbul ignore next */
        (cov_tyqwf5x4q().b[11][0]++, count) ||
        /* istanbul ignore next */
        (cov_tyqwf5x4q().b[11][1]++, 0),
        pagination: {
          limit,
          offset,
          hasMore: (
          /* istanbul ignore next */
          (cov_tyqwf5x4q().b[12][0]++, count) ||
          /* istanbul ignore next */
          (cov_tyqwf5x4q().b[12][1]++, 0)) > offset + limit
        }
      };
    }, {
      enforceRLS: true,
      auditLog: true
    }));
    /* istanbul ignore next */
    cov_tyqwf5x4q().s[39]++;
    if (!result.success) {
      /* istanbul ignore next */
      cov_tyqwf5x4q().b[13][0]++;
      cov_tyqwf5x4q().s[40]++;
      return _server.NextResponse.json({
        error: result.error,
        code: result.code,
        rls: true,
        enterprise: true
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_tyqwf5x4q().b[13][1]++;
    }
    cov_tyqwf5x4q().s[41]++;
    return _server.NextResponse.json({
      success: true,
      data: result.data,
      rls: {
        enabled: true,
        context: {
          role: context.role,
          permissions: context.permissions,
          securityLevel: context.securityLevel
        }
      },
      enterprise: true,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_tyqwf5x4q().s[42]++;
    console.error('[API] Error en GET /api/admin/products-rls:', error);
    /* istanbul ignore next */
    cov_tyqwf5x4q().s[43]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor',
      code: 'INTERNAL_SERVER_ERROR',
      rls: true,
      enterprise: true
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_tyqwf5x4q().f[8]++;
  cov_tyqwf5x4q().s[44]++;
  try {
    const authResult =
    /* istanbul ignore next */
    (cov_tyqwf5x4q().s[45]++, await (0, _enterpriseauthutils.requireAdminAuth)(request, ['products_create']));
    /* istanbul ignore next */
    cov_tyqwf5x4q().s[46]++;
    if (!authResult.success) {
      /* istanbul ignore next */
      cov_tyqwf5x4q().b[14][0]++;
      cov_tyqwf5x4q().s[47]++;
      return _server.NextResponse.json({
        error: authResult.error,
        code: authResult.code,
        enterprise: true
      }, {
        status:
        /* istanbul ignore next */
        (cov_tyqwf5x4q().b[15][0]++, authResult.status) ||
        /* istanbul ignore next */
        (cov_tyqwf5x4q().b[15][1]++, 401)
      });
    } else
    /* istanbul ignore next */
    {
      cov_tyqwf5x4q().b[14][1]++;
    }
    const context =
    /* istanbul ignore next */
    (cov_tyqwf5x4q().s[48]++, authResult.context);
    const body =
    /* istanbul ignore next */
    (cov_tyqwf5x4q().s[49]++, await request.json());
    // Validar datos del producto
    const requiredFields =
    /* istanbul ignore next */
    (cov_tyqwf5x4q().s[50]++, ['name', 'price', 'category_id']);
    /* istanbul ignore next */
    cov_tyqwf5x4q().s[51]++;
    for (const field of requiredFields) {
      /* istanbul ignore next */
      cov_tyqwf5x4q().s[52]++;
      if (!body[field]) {
        /* istanbul ignore next */
        cov_tyqwf5x4q().b[16][0]++;
        cov_tyqwf5x4q().s[53]++;
        return _server.NextResponse.json({
          error: `Campo requerido: ${field}`,
          code: 'MISSING_FIELD',
          enterprise: true
        }, {
          status: 400
        });
      } else
      /* istanbul ignore next */
      {
        cov_tyqwf5x4q().b[16][1]++;
      }
    }
    // Ejecutar creaciÃ³n con RLS
    const result =
    /* istanbul ignore next */
    (cov_tyqwf5x4q().s[54]++, await (0, _enterpriserlsutils.executeWithRLS)(context, async (client, rlsContext) => {
      /* istanbul ignore next */
      cov_tyqwf5x4q().f[9]++;
      cov_tyqwf5x4q().s[55]++;
      // Verificar permisos especÃ­ficos
      if (!(0, _enterpriserlsutils.checkRLSPermission)(rlsContext, 'products_create')) {
        /* istanbul ignore next */
        cov_tyqwf5x4q().b[17][0]++;
        cov_tyqwf5x4q().s[56]++;
        throw new Error('Permisos insuficientes para crear productos');
      } else
      /* istanbul ignore next */
      {
        cov_tyqwf5x4q().b[17][1]++;
      }
      // Crear slug automÃ¡tico
      const slug =
      /* istanbul ignore next */
      (cov_tyqwf5x4q().s[57]++, body.name.toLowerCase().replace(/[^a-z0-9\s-]/g, '').replace(/\s+/g, '-').replace(/-+/g, '-').trim());
      const productData =
      /* istanbul ignore next */
      (cov_tyqwf5x4q().s[58]++, {
        name: body.name,
        slug: `${slug}-${Date.now()}`,
        description:
        /* istanbul ignore next */
        (cov_tyqwf5x4q().b[18][0]++, body.description) ||
        /* istanbul ignore next */
        (cov_tyqwf5x4q().b[18][1]++, ''),
        price: parseFloat(body.price),
        discounted_price: body.discounted_price ?
        /* istanbul ignore next */
        (cov_tyqwf5x4q().b[19][0]++, parseFloat(body.discounted_price)) :
        /* istanbul ignore next */
        (cov_tyqwf5x4q().b[19][1]++, null),
        stock: parseInt(
        /* istanbul ignore next */
        (cov_tyqwf5x4q().b[20][0]++, body.stock) ||
        /* istanbul ignore next */
        (cov_tyqwf5x4q().b[20][1]++, '0')),
        category_id: parseInt(body.category_id),
        brand:
        /* istanbul ignore next */
        (cov_tyqwf5x4q().b[21][0]++, body.brand) ||
        /* istanbul ignore next */
        (cov_tyqwf5x4q().b[21][1]++, ''),
        is_active: body.is_active !== false,
        is_featured: body.is_featured === true,
        images:
        /* istanbul ignore next */
        (cov_tyqwf5x4q().b[22][0]++, body.images) ||
        /* istanbul ignore next */
        (cov_tyqwf5x4q().b[22][1]++, {}),
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString()
      });
      const {
        data: product,
        error
      } =
      /* istanbul ignore next */
      (cov_tyqwf5x4q().s[59]++, await client.from('products').insert(productData).select(`
            id,
            name,
            slug,
            description,
            price,
            discounted_price,
            stock,
            category_id,
            brand,
            is_active,
            is_featured,
            created_at,
            updated_at
          `).single());
      /* istanbul ignore next */
      cov_tyqwf5x4q().s[60]++;
      if (error) {
        /* istanbul ignore next */
        cov_tyqwf5x4q().b[23][0]++;
        cov_tyqwf5x4q().s[61]++;
        throw new Error(`Error creando producto: ${error.message}`);
      } else
      /* istanbul ignore next */
      {
        cov_tyqwf5x4q().b[23][1]++;
      }
      cov_tyqwf5x4q().s[62]++;
      return product;
    }, {
      enforceRLS: true,
      auditLog: true
    }));
    /* istanbul ignore next */
    cov_tyqwf5x4q().s[63]++;
    if (!result.success) {
      /* istanbul ignore next */
      cov_tyqwf5x4q().b[24][0]++;
      cov_tyqwf5x4q().s[64]++;
      return _server.NextResponse.json({
        error: result.error,
        code: result.code,
        rls: true,
        enterprise: true
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_tyqwf5x4q().b[24][1]++;
    }
    cov_tyqwf5x4q().s[65]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        product: result.data,
        message: 'Producto creado exitosamente'
      },
      rls: {
        enabled: true,
        operation: 'CREATE',
        context: {
          role: context.role,
          permissions: context.permissions
        }
      },
      enterprise: true,
      timestamp: new Date().toISOString()
    }, {
      status: 201
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_tyqwf5x4q().s[66]++;
    console.error('[API] Error en POST /api/admin/products-rls:', error);
    /* istanbul ignore next */
    cov_tyqwf5x4q().s[67]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor',
      code: 'INTERNAL_SERVER_ERROR',
      rls: true,
      enterprise: true
    }, {
      status: 500
    });
  }
}
async function PUT(request) {
  /* istanbul ignore next */
  cov_tyqwf5x4q().f[10]++;
  cov_tyqwf5x4q().s[68]++;
  try {
    const authResult =
    /* istanbul ignore next */
    (cov_tyqwf5x4q().s[69]++, await (0, _enterpriseauthutils.requireAdminAuth)(request, ['products_update']));
    /* istanbul ignore next */
    cov_tyqwf5x4q().s[70]++;
    if (!authResult.success) {
      /* istanbul ignore next */
      cov_tyqwf5x4q().b[25][0]++;
      cov_tyqwf5x4q().s[71]++;
      return _server.NextResponse.json({
        error: authResult.error,
        code: authResult.code,
        enterprise: true
      }, {
        status:
        /* istanbul ignore next */
        (cov_tyqwf5x4q().b[26][0]++, authResult.status) ||
        /* istanbul ignore next */
        (cov_tyqwf5x4q().b[26][1]++, 401)
      });
    } else
    /* istanbul ignore next */
    {
      cov_tyqwf5x4q().b[25][1]++;
    }
    const context =
    /* istanbul ignore next */
    (cov_tyqwf5x4q().s[72]++, authResult.context);
    const body =
    /* istanbul ignore next */
    (cov_tyqwf5x4q().s[73]++, await request.json());
    const url =
    /* istanbul ignore next */
    (cov_tyqwf5x4q().s[74]++, new URL(request.url));
    const productId =
    /* istanbul ignore next */
    (cov_tyqwf5x4q().s[75]++, url.searchParams.get('id'));
    /* istanbul ignore next */
    cov_tyqwf5x4q().s[76]++;
    if (!productId) {
      /* istanbul ignore next */
      cov_tyqwf5x4q().b[27][0]++;
      cov_tyqwf5x4q().s[77]++;
      return _server.NextResponse.json({
        error: 'ID de producto requerido',
        code: 'MISSING_PRODUCT_ID',
        enterprise: true
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_tyqwf5x4q().b[27][1]++;
    }
    // Ejecutar actualizaciÃ³n con RLS
    const result =
    /* istanbul ignore next */
    (cov_tyqwf5x4q().s[78]++, await (0, _enterpriserlsutils.executeWithRLS)(context, async (client, rlsContext) => {
      /* istanbul ignore next */
      cov_tyqwf5x4q().f[11]++;
      cov_tyqwf5x4q().s[79]++;
      // Verificar permisos especÃ­ficos
      if (!(0, _enterpriserlsutils.checkRLSPermission)(rlsContext, 'products_update')) {
        /* istanbul ignore next */
        cov_tyqwf5x4q().b[28][0]++;
        cov_tyqwf5x4q().s[80]++;
        throw new Error('Permisos insuficientes para actualizar productos');
      } else
      /* istanbul ignore next */
      {
        cov_tyqwf5x4q().b[28][1]++;
      }
      // Preparar datos de actualizaciÃ³n
      const updateData =
      /* istanbul ignore next */
      (cov_tyqwf5x4q().s[81]++, {
        updated_at: new Date().toISOString()
      });
      // Solo actualizar campos proporcionados
      /* istanbul ignore next */
      cov_tyqwf5x4q().s[82]++;
      if (body.name !== undefined) {
        /* istanbul ignore next */
        cov_tyqwf5x4q().b[29][0]++;
        cov_tyqwf5x4q().s[83]++;
        updateData.name = body.name;
      } else
      /* istanbul ignore next */
      {
        cov_tyqwf5x4q().b[29][1]++;
      }
      cov_tyqwf5x4q().s[84]++;
      if (body.description !== undefined) {
        /* istanbul ignore next */
        cov_tyqwf5x4q().b[30][0]++;
        cov_tyqwf5x4q().s[85]++;
        updateData.description = body.description;
      } else
      /* istanbul ignore next */
      {
        cov_tyqwf5x4q().b[30][1]++;
      }
      cov_tyqwf5x4q().s[86]++;
      if (body.price !== undefined) {
        /* istanbul ignore next */
        cov_tyqwf5x4q().b[31][0]++;
        cov_tyqwf5x4q().s[87]++;
        updateData.price = parseFloat(body.price);
      } else
      /* istanbul ignore next */
      {
        cov_tyqwf5x4q().b[31][1]++;
      }
      cov_tyqwf5x4q().s[88]++;
      if (body.discounted_price !== undefined) {
        /* istanbul ignore next */
        cov_tyqwf5x4q().b[32][0]++;
        cov_tyqwf5x4q().s[89]++;
        updateData.discounted_price = body.discounted_price ?
        /* istanbul ignore next */
        (cov_tyqwf5x4q().b[33][0]++, parseFloat(body.discounted_price)) :
        /* istanbul ignore next */
        (cov_tyqwf5x4q().b[33][1]++, null);
      } else
      /* istanbul ignore next */
      {
        cov_tyqwf5x4q().b[32][1]++;
      }
      cov_tyqwf5x4q().s[90]++;
      if (body.stock !== undefined) {
        /* istanbul ignore next */
        cov_tyqwf5x4q().b[34][0]++;
        cov_tyqwf5x4q().s[91]++;
        updateData.stock = parseInt(body.stock);
      } else
      /* istanbul ignore next */
      {
        cov_tyqwf5x4q().b[34][1]++;
      }
      cov_tyqwf5x4q().s[92]++;
      if (body.category_id !== undefined) {
        /* istanbul ignore next */
        cov_tyqwf5x4q().b[35][0]++;
        cov_tyqwf5x4q().s[93]++;
        updateData.category_id = parseInt(body.category_id);
      } else
      /* istanbul ignore next */
      {
        cov_tyqwf5x4q().b[35][1]++;
      }
      cov_tyqwf5x4q().s[94]++;
      if (body.brand !== undefined) {
        /* istanbul ignore next */
        cov_tyqwf5x4q().b[36][0]++;
        cov_tyqwf5x4q().s[95]++;
        updateData.brand = body.brand;
      } else
      /* istanbul ignore next */
      {
        cov_tyqwf5x4q().b[36][1]++;
      }
      cov_tyqwf5x4q().s[96]++;
      if (body.is_active !== undefined) {
        /* istanbul ignore next */
        cov_tyqwf5x4q().b[37][0]++;
        cov_tyqwf5x4q().s[97]++;
        updateData.is_active = body.is_active;
      } else
      /* istanbul ignore next */
      {
        cov_tyqwf5x4q().b[37][1]++;
      }
      cov_tyqwf5x4q().s[98]++;
      if (body.is_featured !== undefined) {
        /* istanbul ignore next */
        cov_tyqwf5x4q().b[38][0]++;
        cov_tyqwf5x4q().s[99]++;
        updateData.is_featured = body.is_featured;
      } else
      /* istanbul ignore next */
      {
        cov_tyqwf5x4q().b[38][1]++;
      }
      cov_tyqwf5x4q().s[100]++;
      if (body.images !== undefined) {
        /* istanbul ignore next */
        cov_tyqwf5x4q().b[39][0]++;
        cov_tyqwf5x4q().s[101]++;
        updateData.images = body.images;
      } else
      /* istanbul ignore next */
      {
        cov_tyqwf5x4q().b[39][1]++;
      }
      const {
        data: product,
        error
      } =
      /* istanbul ignore next */
      (cov_tyqwf5x4q().s[102]++, await client.from('products').update(updateData).eq('id', parseInt(productId)).select(`
            id,
            name,
            slug,
            description,
            price,
            discounted_price,
            stock,
            category_id,
            brand,
            is_active,
            is_featured,
            updated_at
          `).single());
      /* istanbul ignore next */
      cov_tyqwf5x4q().s[103]++;
      if (error) {
        /* istanbul ignore next */
        cov_tyqwf5x4q().b[40][0]++;
        cov_tyqwf5x4q().s[104]++;
        throw new Error(`Error actualizando producto: ${error.message}`);
      } else
      /* istanbul ignore next */
      {
        cov_tyqwf5x4q().b[40][1]++;
      }
      cov_tyqwf5x4q().s[105]++;
      return product;
    }, {
      enforceRLS: true,
      auditLog: true
    }));
    /* istanbul ignore next */
    cov_tyqwf5x4q().s[106]++;
    if (!result.success) {
      /* istanbul ignore next */
      cov_tyqwf5x4q().b[41][0]++;
      cov_tyqwf5x4q().s[107]++;
      return _server.NextResponse.json({
        error: result.error,
        code: result.code,
        rls: true,
        enterprise: true
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_tyqwf5x4q().b[41][1]++;
    }
    cov_tyqwf5x4q().s[108]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        product: result.data,
        message: 'Producto actualizado exitosamente'
      },
      rls: {
        enabled: true,
        operation: 'UPDATE',
        context: {
          role: context.role,
          permissions: context.permissions
        }
      },
      enterprise: true,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_tyqwf5x4q().s[109]++;
    console.error('[API] Error en PUT /api/admin/products-rls:', error);
    /* istanbul ignore next */
    cov_tyqwf5x4q().s[110]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor',
      code: 'INTERNAL_SERVER_ERROR',
      rls: true,
      enterprise: true
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,