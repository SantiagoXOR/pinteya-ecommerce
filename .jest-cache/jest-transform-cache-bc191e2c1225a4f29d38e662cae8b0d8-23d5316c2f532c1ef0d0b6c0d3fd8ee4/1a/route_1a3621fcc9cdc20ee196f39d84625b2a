5695f389f84993416d6d13b92e452bdb
// ===================================
// PINTEYA E-COMMERCE - API DE GESTIÓN DE SESIÓN ESPECÍFICA
// ===================================
"use strict";

/* istanbul ignore next */
function cov_2mnobogmkd() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\sessions\\[id]\\route.ts";
  var hash = "274dddba5883868fc32784a0fc89630395cd90e5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\sessions\\[id]\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 22
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 19
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 19
        }
      },
      "7": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 38
        }
      },
      "8": {
        start: {
          line: 26,
          column: 14
        },
        end: {
          line: 26,
          column: 44
        }
      },
      "9": {
        start: {
          line: 27,
          column: 18
        },
        end: {
          line: 27,
          column: 69
        }
      },
      "10": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "11": {
        start: {
          line: 31,
          column: 24
        },
        end: {
          line: 31,
          column: 47
        }
      },
      "12": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "13": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 37,
          column: 15
        }
      },
      "14": {
        start: {
          line: 40,
          column: 26
        },
        end: {
          line: 40,
          column: 44
        }
      },
      "15": {
        start: {
          line: 41,
          column: 31
        },
        end: {
          line: 41,
          column: 119
        }
      },
      "16": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "17": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 47,
          column: 15
        }
      },
      "18": {
        start: {
          line: 50,
          column: 45
        },
        end: {
          line: 50,
          column: 160
        }
      },
      "19": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "20": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 56,
          column: 15
        }
      },
      "21": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 61,
          column: 11
        }
      },
      "22": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 70
        }
      },
      "23": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 68,
          column: 11
        }
      },
      "24": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 138,
          column: 5
        }
      },
      "25": {
        start: {
          line: 74,
          column: 24
        },
        end: {
          line: 74,
          column: 47
        }
      },
      "26": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "27": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 80,
          column: 15
        }
      },
      "28": {
        start: {
          line: 83,
          column: 26
        },
        end: {
          line: 83,
          column: 44
        }
      },
      "29": {
        start: {
          line: 84,
          column: 31
        },
        end: {
          line: 84,
          column: 119
        }
      },
      "30": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "31": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 90,
          column: 15
        }
      },
      "32": {
        start: {
          line: 93,
          column: 57
        },
        end: {
          line: 93,
          column: 172
        }
      },
      "33": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "34": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 99,
          column: 15
        }
      },
      "35": {
        start: {
          line: 102,
          column: 26
        },
        end: {
          line: 102,
          column: 46
        }
      },
      "36": {
        start: {
          line: 103,
          column: 33
        },
        end: {
          line: 103,
          column: 72
        }
      },
      "37": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "38": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 109,
          column: 15
        }
      },
      "39": {
        start: {
          line: 112,
          column: 39
        },
        end: {
          line: 112,
          column: 142
        }
      },
      "40": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "41": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 68
        }
      },
      "42": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 119,
          column: 15
        }
      },
      "43": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 126,
          column: 11
        }
      },
      "44": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 130,
          column: 11
        }
      },
      "45": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 73
        }
      },
      "46": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 137,
          column: 11
        }
      },
      "47": {
        start: {
          line: 141,
          column: 4
        },
        end: {
          line: 203,
          column: 5
        }
      },
      "48": {
        start: {
          line: 143,
          column: 24
        },
        end: {
          line: 143,
          column: 47
        }
      },
      "49": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 150,
          column: 9
        }
      },
      "50": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 149,
          column: 15
        }
      },
      "51": {
        start: {
          line: 152,
          column: 26
        },
        end: {
          line: 152,
          column: 44
        }
      },
      "52": {
        start: {
          line: 153,
          column: 31
        },
        end: {
          line: 153,
          column: 119
        }
      },
      "53": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 160,
          column: 9
        }
      },
      "54": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 159,
          column: 15
        }
      },
      "55": {
        start: {
          line: 161,
          column: 21
        },
        end: {
          line: 161,
          column: 41
        }
      },
      "56": {
        start: {
          line: 162,
          column: 41
        },
        end: {
          line: 162,
          column: 45
        }
      },
      "57": {
        start: {
          line: 164,
          column: 57
        },
        end: {
          line: 164,
          column: 172
        }
      },
      "58": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "59": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 170,
          column: 15
        }
      },
      "60": {
        start: {
          line: 173,
          column: 27
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "61": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "62": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 47
        }
      },
      "63": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "64": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 43
        }
      },
      "65": {
        start: {
          line: 182,
          column: 61
        },
        end: {
          line: 182,
          column: 192
        }
      },
      "66": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 190,
          column: 9
        }
      },
      "67": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 70
        }
      },
      "68": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 189,
          column: 15
        }
      },
      "69": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 195,
          column: 11
        }
      },
      "70": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 70
        }
      },
      "71": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 202,
          column: 11
        }
      },
      "72": {
        start: {
          line: 207,
          column: 22
        },
        end: {
          line: 207,
          column: 60
        }
      },
      "73": {
        start: {
          line: 208,
          column: 19
        },
        end: {
          line: 208,
          column: 51
        }
      },
      "74": {
        start: {
          line: 209,
          column: 4
        },
        end: {
          line: 211,
          column: 5
        }
      },
      "75": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 46
        }
      },
      "76": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 214,
          column: 5
        }
      },
      "77": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 22
        }
      },
      "78": {
        start: {
          line: 215,
          column: 4
        },
        end: {
          line: 215,
          column: 35
        }
      },
      "79": {
        start: {
          line: 219,
          column: 4
        },
        end: {
          line: 229,
          column: 5
        }
      },
      "80": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 226,
          column: 11
        }
      },
      "81": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 228,
          column: 75
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 15
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "GET",
        decl: {
          start: {
            line: 28,
            column: 15
          },
          end: {
            line: 28,
            column: 18
          }
        },
        loc: {
          start: {
            line: 28,
            column: 40
          },
          end: {
            line: 70,
            column: 1
          }
        },
        line: 28
      },
      "5": {
        name: "DELETE",
        decl: {
          start: {
            line: 71,
            column: 15
          },
          end: {
            line: 71,
            column: 21
          }
        },
        loc: {
          start: {
            line: 71,
            column: 43
          },
          end: {
            line: 139,
            column: 1
          }
        },
        line: 71
      },
      "6": {
        name: "PUT",
        decl: {
          start: {
            line: 140,
            column: 15
          },
          end: {
            line: 140,
            column: 18
          }
        },
        loc: {
          start: {
            line: 140,
            column: 40
          },
          end: {
            line: 204,
            column: 1
          }
        },
        line: 140
      },
      "7": {
        name: "getClientIP",
        decl: {
          start: {
            line: 206,
            column: 9
          },
          end: {
            line: 206,
            column: 20
          }
        },
        loc: {
          start: {
            line: 206,
            column: 30
          },
          end: {
            line: 216,
            column: 1
          }
        },
        line: 206
      },
      "8": {
        name: "logSecurityActivity",
        decl: {
          start: {
            line: 218,
            column: 15
          },
          end: {
            line: 218,
            column: 34
          }
        },
        loc: {
          start: {
            line: 218,
            column: 61
          },
          end: {
            line: 230,
            column: 1
          }
        },
        line: 218
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "2": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "3": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 17
          }
        }, {
          start: {
            line: 51,
            column: 21
          },
          end: {
            line: 51,
            column: 33
          }
        }],
        line: 51
      },
      "4": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "5": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "6": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "7": {
        loc: {
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 94,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 94,
            column: 22
          }
        }, {
          start: {
            line: 94,
            column: 26
          },
          end: {
            line: 94,
            column: 38
          }
        }],
        line: 94
      },
      "8": {
        loc: {
          start: {
            line: 103,
            column: 33
          },
          end: {
            line: 103,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 33
          },
          end: {
            line: 103,
            column: 66
          }
        }, {
          start: {
            line: 103,
            column: 70
          },
          end: {
            line: 103,
            column: 72
          }
        }],
        line: 103
      },
      "9": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "10": {
        loc: {
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 104,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 104,
            column: 48
          }
        }, {
          start: {
            line: 104,
            column: 52
          },
          end: {
            line: 104,
            column: 95
          }
        }],
        line: 104
      },
      "11": {
        loc: {
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "12": {
        loc: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "13": {
        loc: {
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "14": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "15": {
        loc: {
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 165,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 165,
            column: 22
          }
        }, {
          start: {
            line: 165,
            column: 26
          },
          end: {
            line: 165,
            column: 38
          }
        }],
        line: 165
      },
      "16": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "17": {
        loc: {
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "18": {
        loc: {
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "19": {
        loc: {
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "20": {
        loc: {
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 214,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 214,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "21": {
        loc: {
          start: {
            line: 215,
            column: 11
          },
          end: {
            line: 215,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 215,
            column: 11
          },
          end: {
            line: 215,
            column: 21
          }
        }, {
          start: {
            line: 215,
            column: 25
          },
          end: {
            line: 215,
            column: 34
          }
        }],
        line: 215
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\sessions\\[id]\\route.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - API DE GESTI\xD3N DE SESI\xD3N ESPEC\xCDFICA\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/auth';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\n\r\ninterface RouteParams {\r\n  params: {\r\n    id: string;\r\n  };\r\n}\r\n\r\n// GET - Obtener informaci\xF3n de una sesi\xF3n espec\xEDfica\r\nexport async function GET(\r\n  request: NextRequest,\r\n  { params }: RouteParams\r\n) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { error: 'Usuario no autenticado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Obtener usuario por email\r\n    const userEmail = session.user.email;\r\n    const { data: user } = await supabaseAdmin\r\n      .from('users')\r\n      .select('id')\r\n      .eq('email', userEmail)\r\n      .single();\r\n\r\n    if (!user) {\r\n      return NextResponse.json(\r\n        { error: 'Usuario no encontrado' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Obtener la sesi\xF3n espec\xEDfica\r\n    const { data: userSession, error } = await supabaseAdmin\r\n      .from('user_sessions')\r\n      .select('*')\r\n      .eq('id', params.id)\r\n      .eq('user_id', user.id)\r\n      .single();\r\n\r\n    if (error || !userSession) {\r\n      return NextResponse.json(\r\n        { error: 'Sesi\xF3n no encontrada' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      session: userSession,\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en GET /api/user/sessions/[id]:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// DELETE - Cerrar una sesi\xF3n espec\xEDfica\r\nexport async function DELETE(\r\n  request: NextRequest,\r\n  { params }: RouteParams\r\n) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { error: 'Usuario no autenticado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Obtener usuario por email\r\n    const userEmail = session.user.email;\r\n    const { data: user } = await supabaseAdmin\r\n      .from('users')\r\n      .select('id')\r\n      .eq('email', userEmail)\r\n      .single();\r\n\r\n    if (!user) {\r\n      return NextResponse.json(\r\n        { error: 'Usuario no encontrado' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Verificar que la sesi\xF3n pertenece al usuario\r\n    const { data: userSession, error: fetchError } = await supabaseAdmin\r\n      .from('user_sessions')\r\n      .select('*')\r\n      .eq('id', params.id)\r\n      .eq('user_id', user.id)\r\n      .single();\r\n\r\n    if (fetchError || !userSession) {\r\n      return NextResponse.json(\r\n        { error: 'Sesi\xF3n no encontrada' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Verificar que no sea la sesi\xF3n actual\r\n    const currentIP = getClientIP(request);\r\n    const currentUserAgent = request.headers.get('user-agent') || '';\r\n    \r\n    if (userSession.ip_address === currentIP && \r\n        userSession.user_agent === currentUserAgent) {\r\n      return NextResponse.json(\r\n        { error: 'No puedes cerrar tu sesi\xF3n actual' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Eliminar la sesi\xF3n\r\n    const { error: deleteError } = await supabaseAdmin\r\n      .from('user_sessions')\r\n      .delete()\r\n      .eq('id', params.id)\r\n      .eq('user_id', user.id);\r\n\r\n    if (deleteError) {\r\n      console.error('Error al eliminar sesi\xF3n:', deleteError);\r\n      return NextResponse.json(\r\n        { error: 'Error al cerrar sesi\xF3n' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Registrar actividad de seguridad\r\n    await logSecurityActivity(user.id, 'session_terminated', {\r\n      session_id: params.id,\r\n      device_name: userSession.device_name,\r\n      ip_address: userSession.ip_address,\r\n    });\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: 'Sesi\xF3n cerrada exitosamente',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en DELETE /api/user/sessions/[id]:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// PUT - Actualizar informaci\xF3n de una sesi\xF3n (marcar como confiable, etc.)\r\nexport async function PUT(\r\n  request: NextRequest,\r\n  { params }: RouteParams\r\n) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { error: 'Usuario no autenticado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Obtener usuario por email\r\n    const userEmail = session.user.email;\r\n    const { data: user } = await supabaseAdmin\r\n      .from('users')\r\n      .select('id')\r\n      .eq('email', userEmail)\r\n      .single();\r\n\r\n    if (!user) {\r\n      return NextResponse.json(\r\n        { error: 'Usuario no encontrado' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    const body = await request.json();\r\n    const { is_trusted, location } = body;\r\n\r\n    // Verificar que la sesi\xF3n pertenece al usuario\r\n    const { data: userSession, error: fetchError } = await supabaseAdmin\r\n      .from('user_sessions')\r\n      .select('*')\r\n      .eq('id', params.id)\r\n      .eq('user_id', user.id)\r\n      .single();\r\n\r\n    if (fetchError || !userSession) {\r\n      return NextResponse.json(\r\n        { error: 'Sesi\xF3n no encontrada' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Actualizar la sesi\xF3n\r\n    const updateData: any = {\r\n      last_activity: new Date().toISOString(),\r\n    };\r\n\r\n    if (typeof is_trusted === 'boolean') {\r\n      updateData.is_trusted = is_trusted;\r\n    }\r\n\r\n    if (location) {\r\n      updateData.location = location;\r\n    }\r\n\r\n    const { data: updatedSession, error: updateError } = await supabaseAdmin\r\n      .from('user_sessions')\r\n      .update(updateData)\r\n      .eq('id', params.id)\r\n      .eq('user_id', user.id)\r\n      .select()\r\n      .single();\r\n\r\n    if (updateError) {\r\n      console.error('Error al actualizar sesi\xF3n:', updateError);\r\n      return NextResponse.json(\r\n        { error: 'Error al actualizar sesi\xF3n' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      session: updatedSession,\r\n      message: 'Sesi\xF3n actualizada exitosamente',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en PUT /api/user/sessions/[id]:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// Funci\xF3n auxiliar para obtener IP del cliente\r\nfunction getClientIP(request: NextRequest): string {\r\n  const forwarded = request.headers.get('x-forwarded-for');\r\n  const realIP = request.headers.get('x-real-ip');\r\n  \r\n  if (forwarded) {\r\n    return forwarded.split(',')[0].trim();\r\n  }\r\n  \r\n  if (realIP) {\r\n    return realIP;\r\n  }\r\n  \r\n  return request.ip || 'unknown';\r\n}\r\n\r\n// Funci\xF3n auxiliar para registrar actividad de seguridad\r\nasync function logSecurityActivity(\r\n  userId: string, \r\n  action: string, \r\n  metadata: any\r\n) {\r\n  try {\r\n    await supabaseAdmin\r\n      .from('user_activity')\r\n      .insert({\r\n        user_id: userId,\r\n        action,\r\n        category: 'security',\r\n        metadata,\r\n        created_at: new Date().toISOString(),\r\n      });\r\n  } catch (error) {\r\n    console.error('Error al registrar actividad de seguridad:', error);\r\n  }\r\n}\r\n"],
      names: ["DELETE", "GET", "PUT", "request", "params", "session", "auth", "user", "NextResponse", "json", "error", "status", "userEmail", "email", "data", "supabaseAdmin", "from", "select", "eq", "single", "userSession", "id", "success", "console", "fetchError", "currentIP", "getClientIP", "currentUserAgent", "headers", "get", "ip_address", "user_agent", "deleteError", "delete", "logSecurityActivity", "session_id", "device_name", "message", "body", "is_trusted", "location", "updateData", "last_activity", "Date", "toISOString", "updatedSession", "updateError", "update", "forwarded", "realIP", "split", "trim", "ip", "userId", "action", "metadata", "insert", "user_id", "category", "created_at"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "274dddba5883868fc32784a0fc89630395cd90e5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2mnobogmkd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2mnobogmkd();
cov_2mnobogmkd().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2mnobogmkd().f[0]++;
  cov_2mnobogmkd().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2mnobogmkd().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2mnobogmkd().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_2mnobogmkd().f[1]++;
    cov_2mnobogmkd().s[4]++;
    return DELETE;
  },
  get GET() {
    /* istanbul ignore next */
    cov_2mnobogmkd().f[2]++;
    cov_2mnobogmkd().s[5]++;
    return GET;
  },
  get PUT() {
    /* istanbul ignore next */
    cov_2mnobogmkd().f[3]++;
    cov_2mnobogmkd().s[6]++;
    return PUT;
  }
});
const _server =
/* istanbul ignore next */
(cov_2mnobogmkd().s[7]++, require("next/server"));
const _auth =
/* istanbul ignore next */
(cov_2mnobogmkd().s[8]++, require("../../../../../auth"));
const _supabase =
/* istanbul ignore next */
(cov_2mnobogmkd().s[9]++, require("../../../../../lib/integrations/supabase"));
async function GET(request, {
  params
}) {
  /* istanbul ignore next */
  cov_2mnobogmkd().f[4]++;
  cov_2mnobogmkd().s[10]++;
  try {
    // Verificar autenticación
    const session =
    /* istanbul ignore next */
    (cov_2mnobogmkd().s[11]++, await (0, _auth.auth)());
    /* istanbul ignore next */
    cov_2mnobogmkd().s[12]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_2mnobogmkd().b[0][0]++;
      cov_2mnobogmkd().s[13]++;
      return _server.NextResponse.json({
        error: 'Usuario no autenticado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2mnobogmkd().b[0][1]++;
    }
    // Obtener usuario por email
    const userEmail =
    /* istanbul ignore next */
    (cov_2mnobogmkd().s[14]++, session.user.email);
    const {
      data: user
    } =
    /* istanbul ignore next */
    (cov_2mnobogmkd().s[15]++, await _supabase.supabaseAdmin.from('users').select('id').eq('email', userEmail).single());
    /* istanbul ignore next */
    cov_2mnobogmkd().s[16]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2mnobogmkd().b[1][0]++;
      cov_2mnobogmkd().s[17]++;
      return _server.NextResponse.json({
        error: 'Usuario no encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_2mnobogmkd().b[1][1]++;
    }
    // Obtener la sesión específica
    const {
      data: userSession,
      error
    } =
    /* istanbul ignore next */
    (cov_2mnobogmkd().s[18]++, await _supabase.supabaseAdmin.from('user_sessions').select('*').eq('id', params.id).eq('user_id', user.id).single());
    /* istanbul ignore next */
    cov_2mnobogmkd().s[19]++;
    if (
    /* istanbul ignore next */
    (cov_2mnobogmkd().b[3][0]++, error) ||
    /* istanbul ignore next */
    (cov_2mnobogmkd().b[3][1]++, !userSession)) {
      /* istanbul ignore next */
      cov_2mnobogmkd().b[2][0]++;
      cov_2mnobogmkd().s[20]++;
      return _server.NextResponse.json({
        error: 'Sesión no encontrada'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_2mnobogmkd().b[2][1]++;
    }
    cov_2mnobogmkd().s[21]++;
    return _server.NextResponse.json({
      success: true,
      session: userSession
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2mnobogmkd().s[22]++;
    console.error('Error en GET /api/user/sessions/[id]:', error);
    /* istanbul ignore next */
    cov_2mnobogmkd().s[23]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function DELETE(request, {
  params
}) {
  /* istanbul ignore next */
  cov_2mnobogmkd().f[5]++;
  cov_2mnobogmkd().s[24]++;
  try {
    // Verificar autenticación
    const session =
    /* istanbul ignore next */
    (cov_2mnobogmkd().s[25]++, await (0, _auth.auth)());
    /* istanbul ignore next */
    cov_2mnobogmkd().s[26]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_2mnobogmkd().b[4][0]++;
      cov_2mnobogmkd().s[27]++;
      return _server.NextResponse.json({
        error: 'Usuario no autenticado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2mnobogmkd().b[4][1]++;
    }
    // Obtener usuario por email
    const userEmail =
    /* istanbul ignore next */
    (cov_2mnobogmkd().s[28]++, session.user.email);
    const {
      data: user
    } =
    /* istanbul ignore next */
    (cov_2mnobogmkd().s[29]++, await _supabase.supabaseAdmin.from('users').select('id').eq('email', userEmail).single());
    /* istanbul ignore next */
    cov_2mnobogmkd().s[30]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2mnobogmkd().b[5][0]++;
      cov_2mnobogmkd().s[31]++;
      return _server.NextResponse.json({
        error: 'Usuario no encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_2mnobogmkd().b[5][1]++;
    }
    // Verificar que la sesión pertenece al usuario
    const {
      data: userSession,
      error: fetchError
    } =
    /* istanbul ignore next */
    (cov_2mnobogmkd().s[32]++, await _supabase.supabaseAdmin.from('user_sessions').select('*').eq('id', params.id).eq('user_id', user.id).single());
    /* istanbul ignore next */
    cov_2mnobogmkd().s[33]++;
    if (
    /* istanbul ignore next */
    (cov_2mnobogmkd().b[7][0]++, fetchError) ||
    /* istanbul ignore next */
    (cov_2mnobogmkd().b[7][1]++, !userSession)) {
      /* istanbul ignore next */
      cov_2mnobogmkd().b[6][0]++;
      cov_2mnobogmkd().s[34]++;
      return _server.NextResponse.json({
        error: 'Sesión no encontrada'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_2mnobogmkd().b[6][1]++;
    }
    // Verificar que no sea la sesión actual
    const currentIP =
    /* istanbul ignore next */
    (cov_2mnobogmkd().s[35]++, getClientIP(request));
    const currentUserAgent =
    /* istanbul ignore next */
    (cov_2mnobogmkd().s[36]++,
    /* istanbul ignore next */
    (cov_2mnobogmkd().b[8][0]++, request.headers.get('user-agent')) ||
    /* istanbul ignore next */
    (cov_2mnobogmkd().b[8][1]++, ''));
    /* istanbul ignore next */
    cov_2mnobogmkd().s[37]++;
    if (
    /* istanbul ignore next */
    (cov_2mnobogmkd().b[10][0]++, userSession.ip_address === currentIP) &&
    /* istanbul ignore next */
    (cov_2mnobogmkd().b[10][1]++, userSession.user_agent === currentUserAgent)) {
      /* istanbul ignore next */
      cov_2mnobogmkd().b[9][0]++;
      cov_2mnobogmkd().s[38]++;
      return _server.NextResponse.json({
        error: 'No puedes cerrar tu sesión actual'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2mnobogmkd().b[9][1]++;
    }
    // Eliminar la sesión
    const {
      error: deleteError
    } =
    /* istanbul ignore next */
    (cov_2mnobogmkd().s[39]++, await _supabase.supabaseAdmin.from('user_sessions').delete().eq('id', params.id).eq('user_id', user.id));
    /* istanbul ignore next */
    cov_2mnobogmkd().s[40]++;
    if (deleteError) {
      /* istanbul ignore next */
      cov_2mnobogmkd().b[11][0]++;
      cov_2mnobogmkd().s[41]++;
      console.error('Error al eliminar sesión:', deleteError);
      /* istanbul ignore next */
      cov_2mnobogmkd().s[42]++;
      return _server.NextResponse.json({
        error: 'Error al cerrar sesión'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2mnobogmkd().b[11][1]++;
    }
    // Registrar actividad de seguridad
    cov_2mnobogmkd().s[43]++;
    await logSecurityActivity(user.id, 'session_terminated', {
      session_id: params.id,
      device_name: userSession.device_name,
      ip_address: userSession.ip_address
    });
    /* istanbul ignore next */
    cov_2mnobogmkd().s[44]++;
    return _server.NextResponse.json({
      success: true,
      message: 'Sesión cerrada exitosamente'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2mnobogmkd().s[45]++;
    console.error('Error en DELETE /api/user/sessions/[id]:', error);
    /* istanbul ignore next */
    cov_2mnobogmkd().s[46]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function PUT(request, {
  params
}) {
  /* istanbul ignore next */
  cov_2mnobogmkd().f[6]++;
  cov_2mnobogmkd().s[47]++;
  try {
    // Verificar autenticación
    const session =
    /* istanbul ignore next */
    (cov_2mnobogmkd().s[48]++, await (0, _auth.auth)());
    /* istanbul ignore next */
    cov_2mnobogmkd().s[49]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_2mnobogmkd().b[12][0]++;
      cov_2mnobogmkd().s[50]++;
      return _server.NextResponse.json({
        error: 'Usuario no autenticado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2mnobogmkd().b[12][1]++;
    }
    // Obtener usuario por email
    const userEmail =
    /* istanbul ignore next */
    (cov_2mnobogmkd().s[51]++, session.user.email);
    const {
      data: user
    } =
    /* istanbul ignore next */
    (cov_2mnobogmkd().s[52]++, await _supabase.supabaseAdmin.from('users').select('id').eq('email', userEmail).single());
    /* istanbul ignore next */
    cov_2mnobogmkd().s[53]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2mnobogmkd().b[13][0]++;
      cov_2mnobogmkd().s[54]++;
      return _server.NextResponse.json({
        error: 'Usuario no encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_2mnobogmkd().b[13][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_2mnobogmkd().s[55]++, await request.json());
    const {
      is_trusted,
      location
    } =
    /* istanbul ignore next */
    (cov_2mnobogmkd().s[56]++, body);
    // Verificar que la sesión pertenece al usuario
    const {
      data: userSession,
      error: fetchError
    } =
    /* istanbul ignore next */
    (cov_2mnobogmkd().s[57]++, await _supabase.supabaseAdmin.from('user_sessions').select('*').eq('id', params.id).eq('user_id', user.id).single());
    /* istanbul ignore next */
    cov_2mnobogmkd().s[58]++;
    if (
    /* istanbul ignore next */
    (cov_2mnobogmkd().b[15][0]++, fetchError) ||
    /* istanbul ignore next */
    (cov_2mnobogmkd().b[15][1]++, !userSession)) {
      /* istanbul ignore next */
      cov_2mnobogmkd().b[14][0]++;
      cov_2mnobogmkd().s[59]++;
      return _server.NextResponse.json({
        error: 'Sesión no encontrada'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_2mnobogmkd().b[14][1]++;
    }
    // Actualizar la sesión
    const updateData =
    /* istanbul ignore next */
    (cov_2mnobogmkd().s[60]++, {
      last_activity: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_2mnobogmkd().s[61]++;
    if (typeof is_trusted === 'boolean') {
      /* istanbul ignore next */
      cov_2mnobogmkd().b[16][0]++;
      cov_2mnobogmkd().s[62]++;
      updateData.is_trusted = is_trusted;
    } else
    /* istanbul ignore next */
    {
      cov_2mnobogmkd().b[16][1]++;
    }
    cov_2mnobogmkd().s[63]++;
    if (location) {
      /* istanbul ignore next */
      cov_2mnobogmkd().b[17][0]++;
      cov_2mnobogmkd().s[64]++;
      updateData.location = location;
    } else
    /* istanbul ignore next */
    {
      cov_2mnobogmkd().b[17][1]++;
    }
    const {
      data: updatedSession,
      error: updateError
    } =
    /* istanbul ignore next */
    (cov_2mnobogmkd().s[65]++, await _supabase.supabaseAdmin.from('user_sessions').update(updateData).eq('id', params.id).eq('user_id', user.id).select().single());
    /* istanbul ignore next */
    cov_2mnobogmkd().s[66]++;
    if (updateError) {
      /* istanbul ignore next */
      cov_2mnobogmkd().b[18][0]++;
      cov_2mnobogmkd().s[67]++;
      console.error('Error al actualizar sesión:', updateError);
      /* istanbul ignore next */
      cov_2mnobogmkd().s[68]++;
      return _server.NextResponse.json({
        error: 'Error al actualizar sesión'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2mnobogmkd().b[18][1]++;
    }
    cov_2mnobogmkd().s[69]++;
    return _server.NextResponse.json({
      success: true,
      session: updatedSession,
      message: 'Sesión actualizada exitosamente'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2mnobogmkd().s[70]++;
    console.error('Error en PUT /api/user/sessions/[id]:', error);
    /* istanbul ignore next */
    cov_2mnobogmkd().s[71]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
// Función auxiliar para obtener IP del cliente
function getClientIP(request) {
  /* istanbul ignore next */
  cov_2mnobogmkd().f[7]++;
  const forwarded =
  /* istanbul ignore next */
  (cov_2mnobogmkd().s[72]++, request.headers.get('x-forwarded-for'));
  const realIP =
  /* istanbul ignore next */
  (cov_2mnobogmkd().s[73]++, request.headers.get('x-real-ip'));
  /* istanbul ignore next */
  cov_2mnobogmkd().s[74]++;
  if (forwarded) {
    /* istanbul ignore next */
    cov_2mnobogmkd().b[19][0]++;
    cov_2mnobogmkd().s[75]++;
    return forwarded.split(',')[0].trim();
  } else
  /* istanbul ignore next */
  {
    cov_2mnobogmkd().b[19][1]++;
  }
  cov_2mnobogmkd().s[76]++;
  if (realIP) {
    /* istanbul ignore next */
    cov_2mnobogmkd().b[20][0]++;
    cov_2mnobogmkd().s[77]++;
    return realIP;
  } else
  /* istanbul ignore next */
  {
    cov_2mnobogmkd().b[20][1]++;
  }
  cov_2mnobogmkd().s[78]++;
  return /* istanbul ignore next */(cov_2mnobogmkd().b[21][0]++, request.ip) ||
  /* istanbul ignore next */
  (cov_2mnobogmkd().b[21][1]++, 'unknown');
}
// Función auxiliar para registrar actividad de seguridad
async function logSecurityActivity(userId, action, metadata) {
  /* istanbul ignore next */
  cov_2mnobogmkd().f[8]++;
  cov_2mnobogmkd().s[79]++;
  try {
    /* istanbul ignore next */
    cov_2mnobogmkd().s[80]++;
    await _supabase.supabaseAdmin.from('user_activity').insert({
      user_id: userId,
      action,
      category: 'security',
      metadata,
      created_at: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2mnobogmkd().s[81]++;
    console.error('Error al registrar actividad de seguridad:', error);
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,