{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\__tests__\\hooks\\useCartWithClerk.test.ts"],"sourcesContent":["/**\r\n * Tests completos para useCartWithClerk\r\n * Cubre funcionalidades de migración, persistencia y autenticación\r\n */\r\n\r\nimport React from 'react'\r\nimport { renderHook, act, waitFor } from '@testing-library/react'\r\nimport { Provider } from 'react-redux'\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport { useAuth } from '@/hooks/useAuth'\r\nimport cartReducer, { addItemToCart } from '@/redux/features/cart-slice'\r\nimport { useCartWithClerk } from '@/hooks/useCartWithClerk'\r\nimport * as cartPersistence from '@/redux/middleware/cartPersistence'\r\n\r\n// Mock para evitar problemas de dependencias\r\njest.mock('@/hooks/useAuth', () => ({\r\n  useAuth: jest.fn()\r\n}))\r\n\r\n// Mock cart persistence functions\r\njest.mock('@/redux/middleware/cartPersistence', () => ({\r\n  loadCartFromStorage: jest.fn(() => []),\r\n  clearCartFromStorage: jest.fn(),\r\n  migrateTemporaryCart: jest.fn(() => Promise.resolve(true)),\r\n  loadUserCart: jest.fn(() => Promise.resolve([])),\r\n  saveUserCart: jest.fn(() => Promise.resolve()),\r\n  cartPersistenceMiddleware: jest.fn(() => (next) => (action) => next(action))\r\n}))\r\n\r\n// Mock localStorage\r\nconst localStorageMock = {\r\n  getItem: jest.fn(() => null),\r\n  setItem: jest.fn(),\r\n  removeItem: jest.fn(),\r\n  clear: jest.fn()\r\n}\r\nObject.defineProperty(window, 'localStorage', { value: localStorageMock })\r\n\r\n// Mock console.error to avoid noise in tests\r\nconst originalConsoleError = console.error\r\nbeforeAll(() => {\r\n  console.error = jest.fn()\r\n})\r\n\r\nafterAll(() => {\r\n  console.error = originalConsoleError\r\n})\r\n\r\n// Mock user data\r\nconst mockUser = {\r\n  id: 'user_123',\r\n  name: 'Juan Pérez',\r\n  email: 'juan@example.com'\r\n}\r\n\r\n// Mock product data\r\nconst mockProduct = {\r\n  id: 1,\r\n  name: 'Pintura Latex Interior',\r\n  price: 5000,\r\n  category: 'Pinturas'\r\n}\r\n\r\ndescribe('useCartWithClerk Hook', () => {\r\n  let store: any\r\n  const mockUseAuth = useAuth as jest.MockedFunction<typeof useAuth>\r\n  const mockCartPersistence = cartPersistence as jest.Mocked<typeof cartPersistence>\r\n\r\n  const renderHookWithStore = () => {\r\n    store = configureStore({\r\n      reducer: {\r\n        cartReducer\r\n      },\r\n      middleware: (getDefaultMiddleware) => getDefaultMiddleware()\r\n    })\r\n\r\n    const wrapper = ({ children }: { children: React.ReactNode }) =>\r\n      React.createElement(Provider, { store }, children)\r\n\r\n    return renderHook(() => useCartWithClerk(), { wrapper })\r\n  }\r\n\r\n  beforeEach(() => {\r\n    jest.clearAllMocks()\r\n    localStorageMock.getItem.mockReturnValue(null)\r\n    mockCartPersistence.loadCartFromStorage.mockReturnValue([])\r\n    mockCartPersistence.migrateTemporaryCart.mockResolvedValue(true)\r\n    mockCartPersistence.loadUserCart.mockResolvedValue([])\r\n    mockCartPersistence.saveUserCart.mockResolvedValue()\r\n  })\r\n\r\n  describe('Unauthenticated User', () => {\r\n    beforeEach(() => {\r\n      mockUseAuth.mockReturnValue({\r\n        user: null,\r\n        isLoaded: true,\r\n        isSignedIn: false,\r\n        signIn: jest.fn(),\r\n        signOut: jest.fn(),\r\n        session: null,\r\n        status: 'unauthenticated'\r\n      } as any)\r\n    })\r\n\r\n    it('should handle unauthenticated user correctly', () => {\r\n      const { result } = renderHookWithStore()\r\n\r\n      expect(result.current.isAuthenticated).toBe(false)\r\n      expect(result.current.userId).toBeUndefined()\r\n      expect(Array.isArray(result.current.cartItems)).toBe(true)\r\n    })\r\n  })\r\n\r\n  describe('Authenticated User', () => {\r\n    beforeEach(() => {\r\n      mockUseAuth.mockReturnValue({\r\n        user: mockUser,\r\n        isLoaded: true,\r\n        isSignedIn: true,\r\n        signIn: jest.fn(),\r\n        signOut: jest.fn(),\r\n        session: { user: mockUser },\r\n        status: 'authenticated'\r\n      } as any)\r\n    })\r\n\r\n    it('should identify authenticated user correctly', () => {\r\n      const { result } = renderHookWithStore()\r\n\r\n      expect(result.current.isAuthenticated).toBe(true)\r\n      expect(result.current.userId).toBe(mockUser.id)\r\n      expect(Array.isArray(result.current.cartItems)).toBe(true)\r\n    })\r\n\r\n    it('should handle cart changes for authenticated user', () => {\r\n      const { result } = renderHookWithStore()\r\n\r\n      // Verificar estado inicial\r\n      expect(result.current.isAuthenticated).toBe(true)\r\n      expect(result.current.cartItems).toHaveLength(0)\r\n\r\n      // Agregar item al carrito usando Redux dispatch\r\n      act(() => {\r\n        store.dispatch(addItemToCart(mockProduct))\r\n      })\r\n\r\n      // Verificar que el item se agregó correctamente\r\n      expect(result.current.cartItems).toHaveLength(1)\r\n      expect(result.current.cartItems[0]).toEqual(expect.objectContaining({\r\n        id: mockProduct.id,\r\n        price: mockProduct.price\r\n      }))\r\n    })\r\n  })\r\n\r\n  describe('Loading State', () => {\r\n    beforeEach(() => {\r\n      mockUseAuth.mockReturnValue({\r\n        user: null,\r\n        isLoaded: false,\r\n        isSignedIn: false,\r\n        signIn: jest.fn(),\r\n        signOut: jest.fn(),\r\n        session: null,\r\n        status: 'loading'\r\n      } as any)\r\n    })\r\n\r\n    it('should handle loading state correctly', () => {\r\n      const { result } = renderHookWithStore()\r\n\r\n      expect(result.current.isAuthenticated).toBe(false)\r\n      expect(Array.isArray(result.current.cartItems)).toBe(true)\r\n    })\r\n\r\n    it('should not trigger effects during loading', () => {\r\n      renderHookWithStore()\r\n\r\n      expect(mockCartPersistence.loadCartFromStorage).not.toHaveBeenCalled()\r\n      expect(mockCartPersistence.migrateTemporaryCart).not.toHaveBeenCalled()\r\n    })\r\n  })\r\n\r\n  describe('Cart Migration', () => {\r\n    beforeEach(() => {\r\n      mockUseAuth.mockReturnValue({\r\n        user: mockUser,\r\n        isLoaded: true,\r\n        isSignedIn: true,\r\n        signIn: jest.fn(),\r\n        signOut: jest.fn(),\r\n        session: { user: mockUser },\r\n        status: 'authenticated'\r\n      } as any)\r\n    })\r\n\r\n    it('should migrate temporary cart when user logs in', async () => {\r\n      const temporaryItems = [mockProduct]\r\n      mockCartPersistence.loadCartFromStorage.mockReturnValue(temporaryItems)\r\n      mockCartPersistence.loadUserCart.mockResolvedValue([])\r\n\r\n      const { result } = renderHookWithStore()\r\n\r\n      await waitFor(() => {\r\n        expect(mockCartPersistence.migrateTemporaryCart).toHaveBeenCalledWith(\r\n          temporaryItems,\r\n          mockUser.id\r\n        )\r\n      })\r\n\r\n      expect(mockCartPersistence.clearCartFromStorage).toHaveBeenCalled()\r\n      expect(mockCartPersistence.loadUserCart).toHaveBeenCalledWith(mockUser.id)\r\n    })\r\n\r\n    it('should load user cart after migration', async () => {\r\n      const userCartItems = [{ ...mockProduct, id: 2 }]\r\n      mockCartPersistence.loadUserCart.mockResolvedValue(userCartItems)\r\n\r\n      const { result } = renderHookWithStore()\r\n\r\n      await waitFor(() => {\r\n        expect(result.current.cartItems).toHaveLength(1)\r\n        expect(result.current.cartItems[0].id).toBe(2)\r\n      })\r\n    })\r\n\r\n    it('should handle migration errors gracefully', async () => {\r\n      mockCartPersistence.migrateTemporaryCart.mockRejectedValue(new Error('Migration failed'))\r\n      mockCartPersistence.loadCartFromStorage.mockReturnValue([mockProduct])\r\n\r\n      const { result } = renderHookWithStore()\r\n\r\n      // Wait for the effect to run\r\n      await waitFor(() => {\r\n        expect(mockCartPersistence.migrateTemporaryCart).toHaveBeenCalled()\r\n      })\r\n\r\n      // Verify console.error was called\r\n      await waitFor(() => {\r\n        expect(console.error).toHaveBeenCalledWith(\r\n          'Error during cart migration:',\r\n          expect.any(Error)\r\n        )\r\n      })\r\n\r\n      // Hook should still work despite migration error\r\n      expect(result.current.isAuthenticated).toBe(true)\r\n    })\r\n  })\r\n\r\n  describe('Cart Persistence', () => {\r\n    beforeEach(() => {\r\n      mockUseAuth.mockReturnValue({\r\n        user: mockUser,\r\n        isLoaded: true,\r\n        isSignedIn: true,\r\n        signIn: jest.fn(),\r\n        signOut: jest.fn(),\r\n        session: { user: mockUser },\r\n        status: 'authenticated'\r\n      } as any)\r\n    })\r\n\r\n    it('should save cart when items change', async () => {\r\n      const { result } = renderHookWithStore()\r\n\r\n      act(() => {\r\n        store.dispatch(addItemToCart(mockProduct))\r\n      })\r\n\r\n      await waitFor(() => {\r\n        expect(mockCartPersistence.saveUserCart).toHaveBeenCalledWith(\r\n          mockUser.id,\r\n          expect.arrayContaining([expect.objectContaining({ id: mockProduct.id })])\r\n        )\r\n      }, { timeout: 2000 })\r\n    })\r\n\r\n    it('should handle save errors gracefully', async () => {\r\n      mockCartPersistence.saveUserCart.mockRejectedValue(new Error('Save failed'))\r\n\r\n      const { result } = renderHookWithStore()\r\n\r\n      // Add item to trigger save\r\n      act(() => {\r\n        store.dispatch(addItemToCart(mockProduct))\r\n      })\r\n\r\n      // Wait for the debounced save to be called\r\n      await waitFor(() => {\r\n        expect(mockCartPersistence.saveUserCart).toHaveBeenCalled()\r\n      }, { timeout: 2000 })\r\n\r\n      // Wait for error to be logged\r\n      await waitFor(() => {\r\n        expect(console.error).toHaveBeenCalledWith(\r\n          'Error saving user cart:',\r\n          expect.any(Error)\r\n        )\r\n      }, { timeout: 2000 })\r\n    })\r\n  })\r\n\r\n  describe('Sign Out Handling', () => {\r\n    beforeEach(() => {\r\n      mockUseAuth.mockReturnValue({\r\n        user: mockUser,\r\n        isLoaded: true,\r\n        isSignedIn: true,\r\n        signIn: jest.fn(),\r\n        signOut: jest.fn(),\r\n        session: { user: mockUser },\r\n        status: 'authenticated'\r\n      } as any)\r\n    })\r\n\r\n    it('should clear cart and storage on sign out', () => {\r\n      const { result } = renderHookWithStore()\r\n\r\n      // Add item first\r\n      act(() => {\r\n        store.dispatch(addItemToCart(mockProduct))\r\n      })\r\n\r\n      expect(result.current.cartItems).toHaveLength(1)\r\n\r\n      // Sign out\r\n      act(() => {\r\n        result.current.handleSignOut()\r\n      })\r\n\r\n      expect(result.current.cartItems).toHaveLength(0)\r\n      expect(mockCartPersistence.clearCartFromStorage).toHaveBeenCalled()\r\n    })\r\n  })\r\n\r\n  describe('Hook Functions', () => {\r\n    beforeEach(() => {\r\n      mockUseAuth.mockReturnValue({\r\n        user: mockUser,\r\n        isLoaded: true,\r\n        isSignedIn: true,\r\n        signIn: jest.fn(),\r\n        signOut: jest.fn(),\r\n        session: { user: mockUser },\r\n        status: 'authenticated'\r\n      } as any)\r\n    })\r\n\r\n    it('should provide migrateCart function', async () => {\r\n      const { result } = renderHookWithStore()\r\n\r\n      expect(typeof result.current.migrateCart).toBe('function')\r\n\r\n      await act(async () => {\r\n        await result.current.migrateCart('test-user-id')\r\n      })\r\n\r\n      expect(mockCartPersistence.loadCartFromStorage).toHaveBeenCalled()\r\n      expect(mockCartPersistence.loadUserCart).toHaveBeenCalledWith('test-user-id')\r\n    })\r\n\r\n    it('should provide saveCart function', async () => {\r\n      const { result } = renderHookWithStore()\r\n\r\n      expect(typeof result.current.saveCart).toBe('function')\r\n\r\n      // Add item to cart first\r\n      act(() => {\r\n        store.dispatch(addItemToCart(mockProduct))\r\n      })\r\n\r\n      await act(async () => {\r\n        await result.current.saveCart('test-user-id')\r\n      })\r\n\r\n      expect(mockCartPersistence.saveUserCart).toHaveBeenCalledWith(\r\n        'test-user-id',\r\n        expect.arrayContaining([expect.objectContaining({ id: mockProduct.id })])\r\n      )\r\n    })\r\n  })\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["jest","mock","useAuth","fn","loadCartFromStorage","clearCartFromStorage","migrateTemporaryCart","Promise","resolve","loadUserCart","saveUserCart","cartPersistenceMiddleware","next","action","localStorageMock","getItem","setItem","removeItem","clear","Object","defineProperty","window","value","originalConsoleError","console","error","beforeAll","afterAll","mockUser","id","name","email","mockProduct","price","category","describe","store","mockUseAuth","mockCartPersistence","cartPersistence","renderHookWithStore","configureStore","reducer","cartReducer","middleware","getDefaultMiddleware","wrapper","children","React","createElement","Provider","renderHook","useCartWithClerk","beforeEach","clearAllMocks","mockReturnValue","mockResolvedValue","user","isLoaded","isSignedIn","signIn","signOut","session","status","it","result","expect","current","isAuthenticated","toBe","userId","toBeUndefined","Array","isArray","cartItems","toHaveLength","act","dispatch","addItemToCart","toEqual","objectContaining","not","toHaveBeenCalled","temporaryItems","waitFor","toHaveBeenCalledWith","userCartItems","mockRejectedValue","Error","any","arrayContaining","timeout","handleSignOut","migrateCart","saveCart"],"mappings":"AAAA;;;CAGC;AAWD,6CAA6C;AAC7CA,KAAKC,IAAI,CAAC,mBAAmB,IAAO,CAAA;QAClCC,SAASF,KAAKG,EAAE;IAClB,CAAA;AAEA,kCAAkC;AAClCH,KAAKC,IAAI,CAAC,sCAAsC,IAAO,CAAA;QACrDG,qBAAqBJ,KAAKG,EAAE,CAAC,IAAM,EAAE;QACrCE,sBAAsBL,KAAKG,EAAE;QAC7BG,sBAAsBN,KAAKG,EAAE,CAAC,IAAMI,QAAQC,OAAO,CAAC;QACpDC,cAAcT,KAAKG,EAAE,CAAC,IAAMI,QAAQC,OAAO,CAAC,EAAE;QAC9CE,cAAcV,KAAKG,EAAE,CAAC,IAAMI,QAAQC,OAAO;QAC3CG,2BAA2BX,KAAKG,EAAE,CAAC,IAAM,CAACS,OAAS,CAACC,SAAWD,KAAKC;IACtE,CAAA;;;;8DAtBkB;wBACuB;4BAChB;yBACM;yBACP;mEACmB;kCACV;yEACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBjC,oBAAoB;AACpB,MAAMC,mBAAmB;IACvBC,SAASf,KAAKG,EAAE,CAAC,IAAM;IACvBa,SAAShB,KAAKG,EAAE;IAChBc,YAAYjB,KAAKG,EAAE;IACnBe,OAAOlB,KAAKG,EAAE;AAChB;AACAgB,OAAOC,cAAc,CAACC,QAAQ,gBAAgB;IAAEC,OAAOR;AAAiB;AAExE,6CAA6C;AAC7C,MAAMS,uBAAuBC,QAAQC,KAAK;AAC1CC,UAAU;IACRF,QAAQC,KAAK,GAAGzB,KAAKG,EAAE;AACzB;AAEAwB,SAAS;IACPH,QAAQC,KAAK,GAAGF;AAClB;AAEA,iBAAiB;AACjB,MAAMK,WAAW;IACfC,IAAI;IACJC,MAAM;IACNC,OAAO;AACT;AAEA,oBAAoB;AACpB,MAAMC,cAAc;IAClBH,IAAI;IACJC,MAAM;IACNG,OAAO;IACPC,UAAU;AACZ;AAEAC,SAAS,yBAAyB;IAChC,IAAIC;IACJ,MAAMC,cAAcnC,gBAAO;IAC3B,MAAMoC,sBAAsBC;IAE5B,MAAMC,sBAAsB;QAC1BJ,QAAQK,IAAAA,uBAAc,EAAC;YACrBC,SAAS;gBACPC,aAAAA,kBAAW;YACb;YACAC,YAAY,CAACC,uBAAyBA;QACxC;QAEA,MAAMC,UAAU,CAAC,EAAEC,QAAQ,EAAiC,GAC1DC,cAAK,CAACC,aAAa,CAACC,oBAAQ,EAAE;gBAAEd;YAAM,GAAGW;QAE3C,OAAOI,IAAAA,kBAAU,EAAC,IAAMC,IAAAA,kCAAgB,KAAI;YAAEN;QAAQ;IACxD;IAEAO,WAAW;QACTrD,KAAKsD,aAAa;QAClBxC,iBAAiBC,OAAO,CAACwC,eAAe,CAAC;QACzCjB,oBAAoBlC,mBAAmB,CAACmD,eAAe,CAAC,EAAE;QAC1DjB,oBAAoBhC,oBAAoB,CAACkD,iBAAiB,CAAC;QAC3DlB,oBAAoB7B,YAAY,CAAC+C,iBAAiB,CAAC,EAAE;QACrDlB,oBAAoB5B,YAAY,CAAC8C,iBAAiB;IACpD;IAEArB,SAAS,wBAAwB;QAC/BkB,WAAW;YACThB,YAAYkB,eAAe,CAAC;gBAC1BE,MAAM;gBACNC,UAAU;gBACVC,YAAY;gBACZC,QAAQ5D,KAAKG,EAAE;gBACf0D,SAAS7D,KAAKG,EAAE;gBAChB2D,SAAS;gBACTC,QAAQ;YACV;QACF;QAEAC,GAAG,gDAAgD;YACjD,MAAM,EAAEC,MAAM,EAAE,GAAGzB;YAEnB0B,OAAOD,OAAOE,OAAO,CAACC,eAAe,EAAEC,IAAI,CAAC;YAC5CH,OAAOD,OAAOE,OAAO,CAACG,MAAM,EAAEC,aAAa;YAC3CL,OAAOM,MAAMC,OAAO,CAACR,OAAOE,OAAO,CAACO,SAAS,GAAGL,IAAI,CAAC;QACvD;IACF;IAEAlC,SAAS,sBAAsB;QAC7BkB,WAAW;YACThB,YAAYkB,eAAe,CAAC;gBAC1BE,MAAM7B;gBACN8B,UAAU;gBACVC,YAAY;gBACZC,QAAQ5D,KAAKG,EAAE;gBACf0D,SAAS7D,KAAKG,EAAE;gBAChB2D,SAAS;oBAAEL,MAAM7B;gBAAS;gBAC1BmC,QAAQ;YACV;QACF;QAEAC,GAAG,gDAAgD;YACjD,MAAM,EAAEC,MAAM,EAAE,GAAGzB;YAEnB0B,OAAOD,OAAOE,OAAO,CAACC,eAAe,EAAEC,IAAI,CAAC;YAC5CH,OAAOD,OAAOE,OAAO,CAACG,MAAM,EAAED,IAAI,CAACzC,SAASC,EAAE;YAC9CqC,OAAOM,MAAMC,OAAO,CAACR,OAAOE,OAAO,CAACO,SAAS,GAAGL,IAAI,CAAC;QACvD;QAEAL,GAAG,qDAAqD;YACtD,MAAM,EAAEC,MAAM,EAAE,GAAGzB;YAEnB,2BAA2B;YAC3B0B,OAAOD,OAAOE,OAAO,CAACC,eAAe,EAAEC,IAAI,CAAC;YAC5CH,OAAOD,OAAOE,OAAO,CAACO,SAAS,EAAEC,YAAY,CAAC;YAE9C,gDAAgD;YAChDC,IAAAA,WAAG,EAAC;gBACFxC,MAAMyC,QAAQ,CAACC,IAAAA,wBAAa,EAAC9C;YAC/B;YAEA,gDAAgD;YAChDkC,OAAOD,OAAOE,OAAO,CAACO,SAAS,EAAEC,YAAY,CAAC;YAC9CT,OAAOD,OAAOE,OAAO,CAACO,SAAS,CAAC,EAAE,EAAEK,OAAO,CAACb,OAAOc,gBAAgB,CAAC;gBAClEnD,IAAIG,YAAYH,EAAE;gBAClBI,OAAOD,YAAYC,KAAK;YAC1B;QACF;IACF;IAEAE,SAAS,iBAAiB;QACxBkB,WAAW;YACThB,YAAYkB,eAAe,CAAC;gBAC1BE,MAAM;gBACNC,UAAU;gBACVC,YAAY;gBACZC,QAAQ5D,KAAKG,EAAE;gBACf0D,SAAS7D,KAAKG,EAAE;gBAChB2D,SAAS;gBACTC,QAAQ;YACV;QACF;QAEAC,GAAG,yCAAyC;YAC1C,MAAM,EAAEC,MAAM,EAAE,GAAGzB;YAEnB0B,OAAOD,OAAOE,OAAO,CAACC,eAAe,EAAEC,IAAI,CAAC;YAC5CH,OAAOM,MAAMC,OAAO,CAACR,OAAOE,OAAO,CAACO,SAAS,GAAGL,IAAI,CAAC;QACvD;QAEAL,GAAG,6CAA6C;YAC9CxB;YAEA0B,OAAO5B,oBAAoBlC,mBAAmB,EAAE6E,GAAG,CAACC,gBAAgB;YACpEhB,OAAO5B,oBAAoBhC,oBAAoB,EAAE2E,GAAG,CAACC,gBAAgB;QACvE;IACF;IAEA/C,SAAS,kBAAkB;QACzBkB,WAAW;YACThB,YAAYkB,eAAe,CAAC;gBAC1BE,MAAM7B;gBACN8B,UAAU;gBACVC,YAAY;gBACZC,QAAQ5D,KAAKG,EAAE;gBACf0D,SAAS7D,KAAKG,EAAE;gBAChB2D,SAAS;oBAAEL,MAAM7B;gBAAS;gBAC1BmC,QAAQ;YACV;QACF;QAEAC,GAAG,mDAAmD;YACpD,MAAMmB,iBAAiB;gBAACnD;aAAY;YACpCM,oBAAoBlC,mBAAmB,CAACmD,eAAe,CAAC4B;YACxD7C,oBAAoB7B,YAAY,CAAC+C,iBAAiB,CAAC,EAAE;YAErD,MAAM,EAAES,MAAM,EAAE,GAAGzB;YAEnB,MAAM4C,IAAAA,eAAO,EAAC;gBACZlB,OAAO5B,oBAAoBhC,oBAAoB,EAAE+E,oBAAoB,CACnEF,gBACAvD,SAASC,EAAE;YAEf;YAEAqC,OAAO5B,oBAAoBjC,oBAAoB,EAAE6E,gBAAgB;YACjEhB,OAAO5B,oBAAoB7B,YAAY,EAAE4E,oBAAoB,CAACzD,SAASC,EAAE;QAC3E;QAEAmC,GAAG,yCAAyC;YAC1C,MAAMsB,gBAAgB;gBAAC;oBAAE,GAAGtD,WAAW;oBAAEH,IAAI;gBAAE;aAAE;YACjDS,oBAAoB7B,YAAY,CAAC+C,iBAAiB,CAAC8B;YAEnD,MAAM,EAAErB,MAAM,EAAE,GAAGzB;YAEnB,MAAM4C,IAAAA,eAAO,EAAC;gBACZlB,OAAOD,OAAOE,OAAO,CAACO,SAAS,EAAEC,YAAY,CAAC;gBAC9CT,OAAOD,OAAOE,OAAO,CAACO,SAAS,CAAC,EAAE,CAAC7C,EAAE,EAAEwC,IAAI,CAAC;YAC9C;QACF;QAEAL,GAAG,6CAA6C;YAC9C1B,oBAAoBhC,oBAAoB,CAACiF,iBAAiB,CAAC,IAAIC,MAAM;YACrElD,oBAAoBlC,mBAAmB,CAACmD,eAAe,CAAC;gBAACvB;aAAY;YAErE,MAAM,EAAEiC,MAAM,EAAE,GAAGzB;YAEnB,6BAA6B;YAC7B,MAAM4C,IAAAA,eAAO,EAAC;gBACZlB,OAAO5B,oBAAoBhC,oBAAoB,EAAE4E,gBAAgB;YACnE;YAEA,kCAAkC;YAClC,MAAME,IAAAA,eAAO,EAAC;gBACZlB,OAAO1C,QAAQC,KAAK,EAAE4D,oBAAoB,CACxC,gCACAnB,OAAOuB,GAAG,CAACD;YAEf;YAEA,iDAAiD;YACjDtB,OAAOD,OAAOE,OAAO,CAACC,eAAe,EAAEC,IAAI,CAAC;QAC9C;IACF;IAEAlC,SAAS,oBAAoB;QAC3BkB,WAAW;YACThB,YAAYkB,eAAe,CAAC;gBAC1BE,MAAM7B;gBACN8B,UAAU;gBACVC,YAAY;gBACZC,QAAQ5D,KAAKG,EAAE;gBACf0D,SAAS7D,KAAKG,EAAE;gBAChB2D,SAAS;oBAAEL,MAAM7B;gBAAS;gBAC1BmC,QAAQ;YACV;QACF;QAEAC,GAAG,sCAAsC;YACvC,MAAM,EAAEC,MAAM,EAAE,GAAGzB;YAEnBoC,IAAAA,WAAG,EAAC;gBACFxC,MAAMyC,QAAQ,CAACC,IAAAA,wBAAa,EAAC9C;YAC/B;YAEA,MAAMoD,IAAAA,eAAO,EAAC;gBACZlB,OAAO5B,oBAAoB5B,YAAY,EAAE2E,oBAAoB,CAC3DzD,SAASC,EAAE,EACXqC,OAAOwB,eAAe,CAAC;oBAACxB,OAAOc,gBAAgB,CAAC;wBAAEnD,IAAIG,YAAYH,EAAE;oBAAC;iBAAG;YAE5E,GAAG;gBAAE8D,SAAS;YAAK;QACrB;QAEA3B,GAAG,wCAAwC;YACzC1B,oBAAoB5B,YAAY,CAAC6E,iBAAiB,CAAC,IAAIC,MAAM;YAE7D,MAAM,EAAEvB,MAAM,EAAE,GAAGzB;YAEnB,2BAA2B;YAC3BoC,IAAAA,WAAG,EAAC;gBACFxC,MAAMyC,QAAQ,CAACC,IAAAA,wBAAa,EAAC9C;YAC/B;YAEA,2CAA2C;YAC3C,MAAMoD,IAAAA,eAAO,EAAC;gBACZlB,OAAO5B,oBAAoB5B,YAAY,EAAEwE,gBAAgB;YAC3D,GAAG;gBAAES,SAAS;YAAK;YAEnB,8BAA8B;YAC9B,MAAMP,IAAAA,eAAO,EAAC;gBACZlB,OAAO1C,QAAQC,KAAK,EAAE4D,oBAAoB,CACxC,2BACAnB,OAAOuB,GAAG,CAACD;YAEf,GAAG;gBAAEG,SAAS;YAAK;QACrB;IACF;IAEAxD,SAAS,qBAAqB;QAC5BkB,WAAW;YACThB,YAAYkB,eAAe,CAAC;gBAC1BE,MAAM7B;gBACN8B,UAAU;gBACVC,YAAY;gBACZC,QAAQ5D,KAAKG,EAAE;gBACf0D,SAAS7D,KAAKG,EAAE;gBAChB2D,SAAS;oBAAEL,MAAM7B;gBAAS;gBAC1BmC,QAAQ;YACV;QACF;QAEAC,GAAG,6CAA6C;YAC9C,MAAM,EAAEC,MAAM,EAAE,GAAGzB;YAEnB,iBAAiB;YACjBoC,IAAAA,WAAG,EAAC;gBACFxC,MAAMyC,QAAQ,CAACC,IAAAA,wBAAa,EAAC9C;YAC/B;YAEAkC,OAAOD,OAAOE,OAAO,CAACO,SAAS,EAAEC,YAAY,CAAC;YAE9C,WAAW;YACXC,IAAAA,WAAG,EAAC;gBACFX,OAAOE,OAAO,CAACyB,aAAa;YAC9B;YAEA1B,OAAOD,OAAOE,OAAO,CAACO,SAAS,EAAEC,YAAY,CAAC;YAC9CT,OAAO5B,oBAAoBjC,oBAAoB,EAAE6E,gBAAgB;QACnE;IACF;IAEA/C,SAAS,kBAAkB;QACzBkB,WAAW;YACThB,YAAYkB,eAAe,CAAC;gBAC1BE,MAAM7B;gBACN8B,UAAU;gBACVC,YAAY;gBACZC,QAAQ5D,KAAKG,EAAE;gBACf0D,SAAS7D,KAAKG,EAAE;gBAChB2D,SAAS;oBAAEL,MAAM7B;gBAAS;gBAC1BmC,QAAQ;YACV;QACF;QAEAC,GAAG,uCAAuC;YACxC,MAAM,EAAEC,MAAM,EAAE,GAAGzB;YAEnB0B,OAAO,OAAOD,OAAOE,OAAO,CAAC0B,WAAW,EAAExB,IAAI,CAAC;YAE/C,MAAMO,IAAAA,WAAG,EAAC;gBACR,MAAMX,OAAOE,OAAO,CAAC0B,WAAW,CAAC;YACnC;YAEA3B,OAAO5B,oBAAoBlC,mBAAmB,EAAE8E,gBAAgB;YAChEhB,OAAO5B,oBAAoB7B,YAAY,EAAE4E,oBAAoB,CAAC;QAChE;QAEArB,GAAG,oCAAoC;YACrC,MAAM,EAAEC,MAAM,EAAE,GAAGzB;YAEnB0B,OAAO,OAAOD,OAAOE,OAAO,CAAC2B,QAAQ,EAAEzB,IAAI,CAAC;YAE5C,yBAAyB;YACzBO,IAAAA,WAAG,EAAC;gBACFxC,MAAMyC,QAAQ,CAACC,IAAAA,wBAAa,EAAC9C;YAC/B;YAEA,MAAM4C,IAAAA,WAAG,EAAC;gBACR,MAAMX,OAAOE,OAAO,CAAC2B,QAAQ,CAAC;YAChC;YAEA5B,OAAO5B,oBAAoB5B,YAAY,EAAE2E,oBAAoB,CAC3D,gBACAnB,OAAOwB,eAAe,CAAC;gBAACxB,OAAOc,gBAAgB,CAAC;oBAAEnD,IAAIG,YAAYH,EAAE;gBAAC;aAAG;QAE5E;IACF;AACF"}