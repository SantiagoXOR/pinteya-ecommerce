{"version":3,"names":["cov_1neayhassc","actualCoverage","s","GET","f","POST","runtime","supabase","_supabasejs","createClient","process","env","NEXT_PUBLIC_SUPABASE_URL","SUPABASE_SERVICE_ROLE_KEY","eventCache","Map","CACHE_TTL","request","event","json","b","category","action","_server","NextResponse","error","status","cacheKey","sessionId","now","Date","has","lastTime","get","success","cached","set","size","cutoff","key","time","entries","delete","setImmediate","rpc","p_event_name","p_category","p_action","p_label","label","p_value","value","p_user_id","userId","p_session_id","p_page","page","p_user_agent","userAgent","console","headers","searchParams","URL","url","startDate","endDate","limit","parseInt","query","from","select","order","ascending","eq","gte","lte","data","events"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\analytics\\events\\route.ts"],"sourcesContent":["// Configuración para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n/**\r\n * API Route para recibir eventos de analytics\r\n * Optimizado para procesamiento asíncrono y cache\r\n */\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabase = createClient(\r\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\r\n);\r\n\r\n// Cache simple en memoria para eventos recientes (evita duplicados)\r\nconst eventCache = new Map<string, number>();\r\nconst CACHE_TTL = 5000; // 5 segundos\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const event = await request.json();\r\n\r\n    // Validación rápida y simple\r\n    if (!event.event || !event.category || !event.action) {\r\n      return NextResponse.json(\r\n        { error: 'Evento inválido: faltan campos requeridos' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Cache key para evitar eventos duplicados\r\n    const cacheKey = `${event.event}-${event.category}-${event.action}-${event.sessionId}`;\r\n    const now = Date.now();\r\n\r\n    // Verificar cache para evitar duplicados recientes\r\n    if (eventCache.has(cacheKey)) {\r\n      const lastTime = eventCache.get(cacheKey)!;\r\n      if (now - lastTime < CACHE_TTL) {\r\n        return NextResponse.json({ success: true, cached: true });\r\n      }\r\n    }\r\n\r\n    // Actualizar cache\r\n    eventCache.set(cacheKey, now);\r\n\r\n    // Limpiar cache viejo periódicamente\r\n    if (eventCache.size > 1000) {\r\n      const cutoff = now - CACHE_TTL;\r\n      for (const [key, time] of eventCache.entries()) {\r\n        if (time < cutoff) {\r\n          eventCache.delete(key);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Procesar evento de forma asíncrona usando función optimizada\r\n    setImmediate(async () => {\r\n      try {\r\n        await supabase.rpc('insert_analytics_event_optimized', {\r\n          p_event_name: event.event,\r\n          p_category: event.category,\r\n          p_action: event.action,\r\n          p_label: event.label,\r\n          p_value: event.value,\r\n          p_user_id: event.userId,\r\n          p_session_id: event.sessionId,\r\n          p_page: event.page,\r\n          p_user_agent: event.userAgent\r\n        });\r\n      } catch (error) {\r\n        console.error('Error procesando evento analytics optimizado (async):', error);\r\n      }\r\n    });\r\n\r\n    // Respuesta inmediata\r\n    return NextResponse.json(\r\n      { success: true },\r\n      {\r\n        status: 200,\r\n        headers: {\r\n          'Cache-Control': 'no-cache, no-store, must-revalidate',\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n    );\r\n  } catch (error) {\r\n    console.error('Error procesando evento:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const sessionId = searchParams.get('sessionId');\r\n    const userId = searchParams.get('userId');\r\n    const startDate = searchParams.get('startDate');\r\n    const endDate = searchParams.get('endDate');\r\n    const limit = parseInt(searchParams.get('limit') || '100');\r\n\r\n    let query = supabase\r\n      .from('analytics_events_view')\r\n      .select('*')\r\n      .order('created_at', { ascending: false })\r\n      .limit(limit);\r\n\r\n    if (sessionId) {\r\n      query = query.eq('session_id', sessionId);\r\n    }\r\n\r\n    if (userId) {\r\n      query = query.eq('user_id', userId);\r\n    }\r\n\r\n    if (startDate) {\r\n      query = query.gte('created_at', startDate);\r\n    }\r\n\r\n    if (endDate) {\r\n      query = query.lte('created_at', endDate);\r\n    }\r\n\r\n    const { data, error } = await query;\r\n\r\n    if (error) {\r\n      console.error('Error obteniendo eventos:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error obteniendo eventos' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({ events: data });\r\n  } catch (error) {\r\n    console.error('Error procesando solicitud:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}