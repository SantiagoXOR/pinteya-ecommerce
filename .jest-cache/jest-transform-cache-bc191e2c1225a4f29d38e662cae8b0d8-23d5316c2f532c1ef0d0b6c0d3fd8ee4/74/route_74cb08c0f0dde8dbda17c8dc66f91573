d24e2c5518e6d7ad46af9b155aa64a2e
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_2jmf26t0zl() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products\\import\\route.ts";
  var hash = "42fe630d93221f055da38307f0dc651e31a6b4e0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products\\import\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 20
        },
        end: {
          line: 24,
          column: 52
        }
      },
      "9": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 57
        }
      },
      "10": {
        start: {
          line: 26,
          column: 13
        },
        end: {
          line: 26,
          column: 27
        }
      },
      "11": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 24
        }
      },
      "12": {
        start: {
          line: 31,
          column: 17
        },
        end: {
          line: 31,
          column: 123
        }
      },
      "13": {
        start: {
          line: 35,
          column: 28
        },
        end: {
          line: 45,
          column: 2
        }
      },
      "14": {
        start: {
          line: 50,
          column: 18
        },
        end: {
          line: 50,
          column: 44
        }
      },
      "15": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "16": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 106
        }
      },
      "17": {
        start: {
          line: 54,
          column: 20
        },
        end: {
          line: 54,
          column: 76
        }
      },
      "18": {
        start: {
          line: 54,
          column: 49
        },
        end: {
          line: 54,
          column: 75
        }
      },
      "19": {
        start: {
          line: 55,
          column: 17
        },
        end: {
          line: 55,
          column: 19
        }
      },
      "20": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "21": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 17
        }
      },
      "22": {
        start: {
          line: 57,
          column: 23
        },
        end: {
          line: 57,
          column: 79
        }
      },
      "23": {
        start: {
          line: 57,
          column: 52
        },
        end: {
          line: 57,
          column: 78
        }
      },
      "24": {
        start: {
          line: 58,
          column: 20
        },
        end: {
          line: 58,
          column: 22
        }
      },
      "25": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 61,
          column: 11
        }
      },
      "26": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 46
        }
      },
      "27": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 23
        }
      },
      "28": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 16
        }
      },
      "29": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 77,
          column: 6
        }
      },
      "30": {
        start: {
          line: 81,
          column: 59
        },
        end: {
          line: 81,
          column: 142
        }
      },
      "31": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 84,
          column: 5
        }
      },
      "32": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 35
        }
      },
      "33": {
        start: {
          line: 86,
          column: 54
        },
        end: {
          line: 91,
          column: 28
        }
      },
      "34": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "35": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 93
        }
      },
      "36": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 95,
          column: 26
        }
      },
      "37": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 247,
          column: 5
        }
      },
      "38": {
        start: {
          line: 100,
          column: 24
        },
        end: {
          line: 100,
          column: 49
        }
      },
      "39": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "40": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 106,
          column: 15
        }
      },
      "41": {
        start: {
          line: 109,
          column: 25
        },
        end: {
          line: 109,
          column: 49
        }
      },
      "42": {
        start: {
          line: 110,
          column: 21
        },
        end: {
          line: 110,
          column: 41
        }
      },
      "43": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "44": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 116,
          column: 15
        }
      },
      "45": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "46": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 123,
          column: 15
        }
      },
      "47": {
        start: {
          line: 126,
          column: 24
        },
        end: {
          line: 126,
          column: 41
        }
      },
      "48": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "49": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 37
        }
      },
      "50": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 137,
          column: 15
        }
      },
      "51": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "52": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 144,
          column: 15
        }
      },
      "53": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "54": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 151,
          column: 15
        }
      },
      "55": {
        start: {
          line: 154,
          column: 24
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "56": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 226,
          column: 9
        }
      },
      "57": {
        start: {
          line: 159,
          column: 20
        },
        end: {
          line: 159,
          column: 21
        }
      },
      "58": {
        start: {
          line: 160,
          column: 30
        },
        end: {
          line: 160,
          column: 35
        }
      },
      "59": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 225,
          column: 13
        }
      },
      "60": {
        start: {
          line: 163,
          column: 39
        },
        end: {
          line: 163,
          column: 68
        }
      },
      "61": {
        start: {
          line: 165,
          column: 41
        },
        end: {
          line: 165,
          column: 86
        }
      },
      "62": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 174,
          column: 17
        }
      },
      "63": {
        start: {
          line: 167,
          column: 20
        },
        end: {
          line: 171,
          column: 23
        }
      },
      "64": {
        start: {
          line: 169,
          column: 90
        },
        end: {
          line: 169,
          column: 99
        }
      },
      "65": {
        start: {
          line: 172,
          column: 20
        },
        end: {
          line: 172,
          column: 43
        }
      },
      "66": {
        start: {
          line: 173,
          column: 20
        },
        end: {
          line: 173,
          column: 29
        }
      },
      "67": {
        start: {
          line: 175,
          column: 36
        },
        end: {
          line: 175,
          column: 57
        }
      },
      "68": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 188,
          column: 17
        }
      },
      "69": {
        start: {
          line: 179,
          column: 20
        },
        end: {
          line: 179,
          column: 82
        }
      },
      "70": {
        start: {
          line: 181,
          column: 20
        },
        end: {
          line: 185,
          column: 23
        }
      },
      "71": {
        start: {
          line: 186,
          column: 20
        },
        end: {
          line: 186,
          column: 43
        }
      },
      "72": {
        start: {
          line: 187,
          column: 20
        },
        end: {
          line: 187,
          column: 29
        }
      },
      "73": {
        start: {
          line: 190,
          column: 33
        },
        end: {
          line: 190,
          column: 140
        }
      },
      "74": {
        start: {
          line: 191,
          column: 29
        },
        end: {
          line: 191,
          column: 99
        }
      },
      "75": {
        start: {
          line: 193,
          column: 62
        },
        end: {
          line: 207,
          column: 40
        }
      },
      "76": {
        start: {
          line: 208,
          column: 16
        },
        end: {
          line: 216,
          column: 17
        }
      },
      "77": {
        start: {
          line: 209,
          column: 20
        },
        end: {
          line: 213,
          column: 23
        }
      },
      "78": {
        start: {
          line: 214,
          column: 20
        },
        end: {
          line: 214,
          column: 43
        }
      },
      "79": {
        start: {
          line: 215,
          column: 20
        },
        end: {
          line: 215,
          column: 29
        }
      },
      "80": {
        start: {
          line: 217,
          column: 16
        },
        end: {
          line: 217,
          column: 41
        }
      },
      "81": {
        start: {
          line: 219,
          column: 16
        },
        end: {
          line: 223,
          column: 19
        }
      },
      "82": {
        start: {
          line: 224,
          column: 16
        },
        end: {
          line: 224,
          column: 39
        }
      },
      "83": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 233,
          column: 11
        }
      },
      "84": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 238,
          column: 11
        }
      },
      "85": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 240,
          column: 69
        }
      },
      "86": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 246,
          column: 11
        }
      },
      "87": {
        start: {
          line: 250,
          column: 4
        },
        end: {
          line: 293,
          column: 5
        }
      },
      "88": {
        start: {
          line: 252,
          column: 24
        },
        end: {
          line: 252,
          column: 49
        }
      },
      "89": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 259,
          column: 9
        }
      },
      "90": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 258,
          column: 15
        }
      },
      "91": {
        start: {
          line: 260,
          column: 27
        },
        end: {
          line: 281,
          column: 9
        }
      },
      "92": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 285,
          column: 11
        }
      },
      "93": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 287,
          column: 79
        }
      },
      "94": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 292,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "parseCSV",
        decl: {
          start: {
            line: 49,
            column: 9
          },
          end: {
            line: 49,
            column: 17
          }
        },
        loc: {
          start: {
            line: 49,
            column: 27
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 49
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 54,
            column: 44
          },
          end: {
            line: 54,
            column: 45
          }
        },
        loc: {
          start: {
            line: 54,
            column: 49
          },
          end: {
            line: 54,
            column: 75
          }
        },
        line: 54
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 57,
            column: 47
          },
          end: {
            line: 57,
            column: 48
          }
        },
        loc: {
          start: {
            line: 57,
            column: 52
          },
          end: {
            line: 57,
            column: 78
          }
        },
        line: 57
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 59,
            column: 24
          },
          end: {
            line: 59,
            column: 25
          }
        },
        loc: {
          start: {
            line: 59,
            column: 41
          },
          end: {
            line: 61,
            column: 9
          }
        },
        line: 59
      },
      "8": {
        name: "normalizeProductData",
        decl: {
          start: {
            line: 66,
            column: 9
          },
          end: {
            line: 66,
            column: 29
          }
        },
        loc: {
          start: {
            line: 66,
            column: 35
          },
          end: {
            line: 78,
            column: 1
          }
        },
        line: 66
      },
      "9": {
        name: "findOrCreateCategory",
        decl: {
          start: {
            line: 79,
            column: 15
          },
          end: {
            line: 79,
            column: 35
          }
        },
        loc: {
          start: {
            line: 79,
            column: 50
          },
          end: {
            line: 96,
            column: 1
          }
        },
        line: 79
      },
      "10": {
        name: "POST",
        decl: {
          start: {
            line: 97,
            column: 15
          },
          end: {
            line: 97,
            column: 19
          }
        },
        loc: {
          start: {
            line: 97,
            column: 29
          },
          end: {
            line: 248,
            column: 1
          }
        },
        line: 97
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 169,
            column: 85
          },
          end: {
            line: 169,
            column: 86
          }
        },
        loc: {
          start: {
            line: 169,
            column: 90
          },
          end: {
            line: 169,
            column: 99
          }
        },
        line: 169
      },
      "12": {
        name: "GET",
        decl: {
          start: {
            line: 249,
            column: 15
          },
          end: {
            line: 249,
            column: 18
          }
        },
        loc: {
          start: {
            line: 249,
            column: 28
          },
          end: {
            line: 294,
            column: 1
          }
        },
        line: 249
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "1": {
        loc: {
          start: {
            line: 60,
            column: 26
          },
          end: {
            line: 60,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 26
          },
          end: {
            line: 60,
            column: 39
          }
        }, {
          start: {
            line: 60,
            column: 43
          },
          end: {
            line: 60,
            column: 45
          }
        }],
        line: 60
      },
      "2": {
        loc: {
          start: {
            line: 68,
            column: 14
          },
          end: {
            line: 68,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 14
          },
          end: {
            line: 68,
            column: 24
          }
        }, {
          start: {
            line: 68,
            column: 28
          },
          end: {
            line: 68,
            column: 36
          }
        }, {
          start: {
            line: 68,
            column: 40
          },
          end: {
            line: 68,
            column: 42
          }
        }],
        line: 68
      },
      "3": {
        loc: {
          start: {
            line: 69,
            column: 21
          },
          end: {
            line: 69,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 21
          },
          end: {
            line: 69,
            column: 36
          }
        }, {
          start: {
            line: 69,
            column: 40
          },
          end: {
            line: 69,
            column: 55
          }
        }, {
          start: {
            line: 69,
            column: 59
          },
          end: {
            line: 69,
            column: 61
          }
        }],
        line: 69
      },
      "4": {
        loc: {
          start: {
            line: 70,
            column: 26
          },
          end: {
            line: 70,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 26
          },
          end: {
            line: 70,
            column: 36
          }
        }, {
          start: {
            line: 70,
            column: 40
          },
          end: {
            line: 70,
            column: 49
          }
        }, {
          start: {
            line: 70,
            column: 53
          },
          end: {
            line: 70,
            column: 56
          }
        }],
        line: 70
      },
      "5": {
        loc: {
          start: {
            line: 71,
            column: 24
          },
          end: {
            line: 71,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 24
          },
          end: {
            line: 71,
            column: 33
          }
        }, {
          start: {
            line: 71,
            column: 37
          },
          end: {
            line: 71,
            column: 49
          }
        }, {
          start: {
            line: 71,
            column: 53
          },
          end: {
            line: 71,
            column: 56
          }
        }],
        line: 71
      },
      "6": {
        loc: {
          start: {
            line: 72,
            column: 18
          },
          end: {
            line: 72,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 18
          },
          end: {
            line: 72,
            column: 31
          }
        }, {
          start: {
            line: 72,
            column: 35
          },
          end: {
            line: 72,
            column: 47
          }
        }, {
          start: {
            line: 72,
            column: 51
          },
          end: {
            line: 72,
            column: 53
          }
        }],
        line: 72
      },
      "7": {
        loc: {
          start: {
            line: 73,
            column: 15
          },
          end: {
            line: 73,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 15
          },
          end: {
            line: 73,
            column: 24
          }
        }, {
          start: {
            line: 73,
            column: 28
          },
          end: {
            line: 73,
            column: 37
          }
        }, {
          start: {
            line: 73,
            column: 41
          },
          end: {
            line: 73,
            column: 43
          }
        }],
        line: 73
      },
      "8": {
        loc: {
          start: {
            line: 74,
            column: 13
          },
          end: {
            line: 74,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 13
          },
          end: {
            line: 74,
            column: 20
          }
        }, {
          start: {
            line: 74,
            column: 24
          },
          end: {
            line: 74,
            column: 34
          }
        }, {
          start: {
            line: 74,
            column: 38
          },
          end: {
            line: 74,
            column: 40
          }
        }],
        line: 74
      },
      "9": {
        loc: {
          start: {
            line: 75,
            column: 19
          },
          end: {
            line: 75,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 19
          },
          end: {
            line: 75,
            column: 40
          }
        }, {
          start: {
            line: 75,
            column: 44
          },
          end: {
            line: 75,
            column: 68
          }
        }, {
          start: {
            line: 75,
            column: 72
          },
          end: {
            line: 75,
            column: 76
          }
        }],
        line: 75
      },
      "10": {
        loc: {
          start: {
            line: 76,
            column: 21
          },
          end: {
            line: 76,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 21
          },
          end: {
            line: 76,
            column: 45
          }
        }, {
          start: {
            line: 76,
            column: 49
          },
          end: {
            line: 76,
            column: 75
          }
        }, {
          start: {
            line: 76,
            column: 79
          },
          end: {
            line: 76,
            column: 84
          }
        }],
        line: 76
      },
      "11": {
        loc: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "12": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 82,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 82,
            column: 24
          }
        }, {
          start: {
            line: 82,
            column: 28
          },
          end: {
            line: 82,
            column: 40
          }
        }],
        line: 82
      },
      "13": {
        loc: {
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "14": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "15": {
        loc: {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "16": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "17": {
        loc: {
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 118,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 118,
            column: 36
          }
        }, {
          start: {
            line: 118,
            column: 40
          },
          end: {
            line: 118,
            column: 67
          }
        }],
        line: 118
      },
      "18": {
        loc: {
          start: {
            line: 134,
            column: 25
          },
          end: {
            line: 134,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 134,
            column: 55
          },
          end: {
            line: 134,
            column: 73
          }
        }, {
          start: {
            line: 134,
            column: 76
          },
          end: {
            line: 134,
            column: 95
          }
        }],
        line: 134
      },
      "19": {
        loc: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "20": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "21": {
        loc: {
          start: {
            line: 166,
            column: 16
          },
          end: {
            line: 174,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 16
          },
          end: {
            line: 174,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "22": {
        loc: {
          start: {
            line: 183,
            column: 55
          },
          end: {
            line: 183,
            column: 131
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 183,
            column: 88
          },
          end: {
            line: 183,
            column: 109
          }
        }, {
          start: {
            line: 183,
            column: 112
          },
          end: {
            line: 183,
            column: 131
          }
        }],
        line: 183
      },
      "23": {
        loc: {
          start: {
            line: 196,
            column: 33
          },
          end: {
            line: 196,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 33
          },
          end: {
            line: 196,
            column: 56
          }
        }, {
          start: {
            line: 196,
            column: 60
          },
          end: {
            line: 196,
            column: 62
          }
        }],
        line: 196
      },
      "24": {
        loc: {
          start: {
            line: 200,
            column: 27
          },
          end: {
            line: 200,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 27
          },
          end: {
            line: 200,
            column: 44
          }
        }, {
          start: {
            line: 200,
            column: 48
          },
          end: {
            line: 200,
            column: 50
          }
        }],
        line: 200
      },
      "25": {
        loc: {
          start: {
            line: 201,
            column: 25
          },
          end: {
            line: 201,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 201,
            column: 25
          },
          end: {
            line: 201,
            column: 40
          }
        }, {
          start: {
            line: 201,
            column: 44
          },
          end: {
            line: 201,
            column: 46
          }
        }],
        line: 201
      },
      "26": {
        loc: {
          start: {
            line: 208,
            column: 16
          },
          end: {
            line: 216,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 16
          },
          end: {
            line: 216,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "27": {
        loc: {
          start: {
            line: 221,
            column: 48
          },
          end: {
            line: 221,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 221,
            column: 73
          },
          end: {
            line: 221,
            column: 86
          }
        }, {
          start: {
            line: 221,
            column: 89
          },
          end: {
            line: 221,
            column: 108
          }
        }],
        line: 221
      },
      "28": {
        loc: {
          start: {
            line: 243,
            column: 21
          },
          end: {
            line: 243,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 243,
            column: 46
          },
          end: {
            line: 243,
            column: 59
          }
        }, {
          start: {
            line: 243,
            column: 62
          },
          end: {
            line: 243,
            column: 77
          }
        }],
        line: 243
      },
      "29": {
        loc: {
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 259,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 259,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0, 0],
      "4": [0, 0, 0],
      "5": [0, 0, 0],
      "6": [0, 0, 0],
      "7": [0, 0, 0],
      "8": [0, 0, 0],
      "9": [0, 0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products\\import\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// =====================================================\r\n// API: IMPORTACI\xD3N DE PRODUCTOS CSV\r\n// Ruta: /api/admin/products/import\r\n// Descripci\xF3n: Importaci\xF3n masiva de productos desde CSV\r\n// =====================================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { z } from 'zod';\r\n\r\n// =====================================================\r\n// CONFIGURACI\xD3N\r\n// =====================================================\r\n\r\nconst supabase = createClient(\r\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\r\n);\r\n\r\n// =====================================================\r\n// ESQUEMAS DE VALIDACI\xD3N\r\n// =====================================================\r\n\r\nconst ProductImportSchema = z.object({\r\n  name: z.string().min(1, 'Nombre es requerido'),\r\n  description: z.string().optional(),\r\n  price: z.number().min(0, 'Precio debe ser positivo'),\r\n  stock: z.number().int().min(0, 'Stock debe ser un n\xFAmero entero positivo'),\r\n  category: z.string().min(1, 'Categor\xEDa es requerida'),\r\n  brand: z.string().optional(),\r\n  sku: z.string().optional(),\r\n  is_active: z.boolean().optional(),\r\n  is_featured: z.boolean().optional()\r\n});\r\n\r\n// =====================================================\r\n// FUNCIONES AUXILIARES\r\n// =====================================================\r\n\r\nfunction parseCSV(csvText: string): any[] {\r\n  const lines = csvText.trim().split('\\n');\r\n  if (lines.length < 2) {\r\n    throw new Error('El archivo CSV debe tener al menos una fila de encabezados y una fila de datos');\r\n  }\r\n\r\n  const headers = lines[0].split(',').map(h => h.trim().replace(/\"/g, ''));\r\n  const rows = [];\r\n\r\n  for (let i = 1; i < lines.length; i++) {\r\n    const values = lines[i].split(',').map(v => v.trim().replace(/\"/g, ''));\r\n    const row: any = {};\r\n    \r\n    headers.forEach((header, index) => {\r\n      row[header] = values[index] || '';\r\n    });\r\n    \r\n    rows.push(row);\r\n  }\r\n\r\n  return rows;\r\n}\r\n\r\nfunction normalizeProductData(row: any): any {\r\n  return {\r\n    name: row.nombre || row.name || '',\r\n    description: row.descripcion || row.description || '',\r\n    price: parseFloat(row.precio || row.price || '0'),\r\n    stock: parseInt(row.stock || row.cantidad || '0'),\r\n    category: row.categoria || row.category || '',\r\n    brand: row.marca || row.brand || '',\r\n    sku: row.sku || row.codigo || '',\r\n    is_active: row.activo === 'true' || row.is_active === 'true' || true,\r\n    is_featured: row.destacado === 'true' || row.is_featured === 'true' || false\r\n  };\r\n}\r\n\r\nasync function findOrCreateCategory(categoryName: string): Promise<number> {\r\n  // Buscar categor\xEDa existente\r\n  const { data: existingCategory, error: searchError } = await supabase\r\n    .from('categories')\r\n    .select('id')\r\n    .ilike('name', categoryName)\r\n    .single();\r\n\r\n  if (existingCategory && !searchError) {\r\n    return existingCategory.id;\r\n  }\r\n\r\n  // Crear nueva categor\xEDa\r\n  const { data: newCategory, error: createError } = await supabase\r\n    .from('categories')\r\n    .insert({\r\n      name: categoryName,\r\n      slug: categoryName.toLowerCase().replace(/\\s+/g, '-'),\r\n      created_at: new Date().toISOString(),\r\n      updated_at: new Date().toISOString()\r\n    })\r\n    .select('id')\r\n    .single();\r\n\r\n  if (createError) {\r\n    throw new Error(`Error creando categor\xEDa \"${categoryName}\": ${createError.message}`);\r\n  }\r\n\r\n  return newCategory.id;\r\n}\r\n\r\n// =====================================================\r\n// HANDLER POST - IMPORTAR PRODUCTOS\r\n// =====================================================\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Obtener archivo del FormData\r\n    const formData = await request.formData();\r\n    const file = formData.get('file') as File;\r\n\r\n    if (!file) {\r\n      return NextResponse.json(\r\n        { error: 'No se proporcion\xF3 archivo' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    if (file.type !== 'text/csv' && !file.name.endsWith('.csv')) {\r\n      return NextResponse.json(\r\n        { error: 'El archivo debe ser un CSV' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Leer contenido del archivo\r\n    const csvText = await file.text();\r\n    \r\n    // Parsear CSV\r\n    let rows;\r\n    try {\r\n      rows = parseCSV(csvText);\r\n    } catch (parseError) {\r\n      return NextResponse.json(\r\n        { \r\n          error: 'Error parseando CSV',\r\n          details: parseError instanceof Error ? parseError.message : 'Error desconocido'\r\n        },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    if (rows.length === 0) {\r\n      return NextResponse.json(\r\n        { error: 'El archivo CSV est\xE1 vac\xEDo' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    if (rows.length > 1000) {\r\n      return NextResponse.json(\r\n        { error: 'M\xE1ximo 1000 productos por importaci\xF3n' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Procesar productos\r\n    const results = {\r\n      imported_count: 0,\r\n      failed_count: 0,\r\n      errors: [] as Array<{ row: number; error: string; data?: any }>\r\n    };\r\n\r\n    for (let i = 0; i < rows.length; i++) {\r\n      const rowNumber = i + 2; // +2 porque empezamos en fila 1 y hay header\r\n      \r\n      try {\r\n        // Normalizar datos\r\n        const normalizedData = normalizeProductData(rows[i]);\r\n        \r\n        // Validar datos\r\n        const validationResult = ProductImportSchema.safeParse(normalizedData);\r\n        if (!validationResult.success) {\r\n          results.errors.push({\r\n            row: rowNumber,\r\n            error: `Datos inv\xE1lidos: ${validationResult.error.errors.map(e => e.message).join(', ')}`,\r\n            data: normalizedData\r\n          });\r\n          results.failed_count++;\r\n          continue;\r\n        }\r\n\r\n        const productData = validationResult.data;\r\n\r\n        // Buscar o crear categor\xEDa\r\n        let categoryId;\r\n        try {\r\n          categoryId = await findOrCreateCategory(productData.category);\r\n        } catch (categoryError) {\r\n          results.errors.push({\r\n            row: rowNumber,\r\n            error: `Error con categor\xEDa: ${categoryError instanceof Error ? categoryError.message : 'Error desconocido'}`,\r\n            data: productData\r\n          });\r\n          results.failed_count++;\r\n          continue;\r\n        }\r\n\r\n        // Generar slug \xFAnico\r\n        const baseSlug = productData.name\r\n          .toLowerCase()\r\n          .replace(/[^a-z0-9\\s-]/g, '')\r\n          .replace(/\\s+/g, '-')\r\n          .replace(/-+/g, '-')\r\n          .trim();\r\n        \r\n        const slug = `${baseSlug}-${Date.now()}-${Math.random().toString(36).substr(2, 5)}`;\r\n\r\n        // Crear producto\r\n        const { data: product, error: createError } = await supabase\r\n          .from('products')\r\n          .insert({\r\n            name: productData.name,\r\n            slug: slug,\r\n            description: productData.description || '',\r\n            price: productData.price,\r\n            stock: productData.stock,\r\n            category_id: categoryId,\r\n            brand: productData.brand || '',\r\n            sku: productData.sku || '',\r\n            is_active: productData.is_active !== false,\r\n            is_featured: productData.is_featured === true,\r\n            images: {},\r\n            created_at: new Date().toISOString(),\r\n            updated_at: new Date().toISOString()\r\n          })\r\n          .select('id')\r\n          .single();\r\n\r\n        if (createError) {\r\n          results.errors.push({\r\n            row: rowNumber,\r\n            error: `Error creando producto: ${createError.message}`,\r\n            data: productData\r\n          });\r\n          results.failed_count++;\r\n          continue;\r\n        }\r\n\r\n        results.imported_count++;\r\n\r\n      } catch (error) {\r\n        results.errors.push({\r\n          row: rowNumber,\r\n          error: `Error inesperado: ${error instanceof Error ? error.message : 'Error desconocido'}`,\r\n          data: rows[i]\r\n        });\r\n        results.failed_count++;\r\n      }\r\n    }\r\n\r\n    // Log del resultado\r\n    console.log('\u2705 Importaci\xF3n completada:', {\r\n      total_rows: rows.length,\r\n      imported: results.imported_count,\r\n      failed: results.failed_count,\r\n      user_id: session.user.id\r\n    });\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: `Importaci\xF3n completada: ${results.imported_count} productos importados, ${results.failed_count} fallidos`,\r\n      data: results\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('\u274C Error en importaci\xF3n de productos:', error);\r\n    \r\n    return NextResponse.json(\r\n      { \r\n        error: 'Error interno del servidor',\r\n        details: error instanceof Error ? error.message : 'Unknown error'\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// =====================================================\r\n// HANDLER GET - INFORMACI\xD3N DE IMPORTACI\xD3N\r\n// =====================================================\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const importInfo = {\r\n      max_products_per_import: 1000,\r\n      supported_formats: ['CSV'],\r\n      required_columns: ['nombre/name', 'precio/price', 'stock', 'categoria/category'],\r\n      optional_columns: ['descripcion/description', 'marca/brand', 'sku', 'activo/is_active', 'destacado/is_featured'],\r\n      example_csv: `nombre,descripcion,precio,stock,categoria,marca,sku\r\n\"Pintura L\xE1tex Blanca\",\"Pintura l\xE1tex interior blanca 4L\",1500,50,\"Pinturas\",\"Alba\",\"ALB-LAT-BL-4L\"\r\n\"Brocha 2 pulgadas\",\"Brocha profesional para pintura\",250,100,\"Herramientas\",\"ProBrush\",\"PB-2IN\"`\r\n    };\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: importInfo\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('\u274C Error obteniendo informaci\xF3n de importaci\xF3n:', error);\r\n    \r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "supabase", "createClient", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "SUPABASE_SERVICE_ROLE_KEY", "ProductImportSchema", "z", "object", "name", "string", "min", "description", "optional", "price", "number", "stock", "int", "category", "brand", "sku", "is_active", "boolean", "is_featured", "parseCSV", "csvText", "lines", "trim", "split", "length", "Error", "headers", "map", "h", "replace", "rows", "i", "values", "v", "row", "forEach", "header", "index", "push", "normalizeProductData", "nombre", "descripcion", "parseFloat", "precio", "parseInt", "cantidad", "categoria", "marca", "codigo", "activo", "destacado", "findOrCreateCategory", "categoryName", "data", "existingCategory", "error", "searchError", "from", "select", "ilike", "single", "id", "newCategory", "createError", "insert", "slug", "toLowerCase", "created_at", "Date", "toISOString", "updated_at", "message", "request", "session", "auth", "user", "NextResponse", "json", "status", "formData", "file", "get", "type", "endsWith", "text", "parseError", "details", "results", "imported_count", "failed_count", "errors", "rowNumber", "normalizedData", "validationResult", "safeParse", "success", "e", "join", "productData", "categoryId", "categoryError", "baseSlug", "now", "Math", "random", "toString", "substr", "product", "category_id", "images", "console", "log", "total_rows", "imported", "failed", "user_id", "importInfo", "max_products_per_import", "supported_formats", "required_columns", "optional_columns", "example_csv"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "42fe630d93221f055da38307f0dc651e31a6b4e0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2jmf26t0zl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2jmf26t0zl();
cov_2jmf26t0zl().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2jmf26t0zl().f[0]++;
  cov_2jmf26t0zl().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2jmf26t0zl().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2jmf26t0zl().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_2jmf26t0zl().f[1]++;
    cov_2jmf26t0zl().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_2jmf26t0zl().f[2]++;
    cov_2jmf26t0zl().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_2jmf26t0zl().f[3]++;
    cov_2jmf26t0zl().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_2jmf26t0zl().s[7]++, require("next/server"));
const _supabasejs =
/* istanbul ignore next */
(cov_2jmf26t0zl().s[8]++, require("@supabase/supabase-js"));
const _config =
/* istanbul ignore next */
(cov_2jmf26t0zl().s[9]++, require("../../../../../lib/auth/config"));
const _zod =
/* istanbul ignore next */
(cov_2jmf26t0zl().s[10]++, require("zod"));
const runtime =
/* istanbul ignore next */
(cov_2jmf26t0zl().s[11]++, 'nodejs');
// =====================================================
// CONFIGURACIÃN
// =====================================================
const supabase =
/* istanbul ignore next */
(cov_2jmf26t0zl().s[12]++, (0, _supabasejs.createClient)(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.SUPABASE_SERVICE_ROLE_KEY));
// =====================================================
// ESQUEMAS DE VALIDACIÃN
// =====================================================
const ProductImportSchema =
/* istanbul ignore next */
(cov_2jmf26t0zl().s[13]++, _zod.z.object({
  name: _zod.z.string().min(1, 'Nombre es requerido'),
  description: _zod.z.string().optional(),
  price: _zod.z.number().min(0, 'Precio debe ser positivo'),
  stock: _zod.z.number().int().min(0, 'Stock debe ser un nÃºmero entero positivo'),
  category: _zod.z.string().min(1, 'CategorÃ­a es requerida'),
  brand: _zod.z.string().optional(),
  sku: _zod.z.string().optional(),
  is_active: _zod.z.boolean().optional(),
  is_featured: _zod.z.boolean().optional()
}));
// =====================================================
// FUNCIONES AUXILIARES
// =====================================================
function parseCSV(csvText) {
  /* istanbul ignore next */
  cov_2jmf26t0zl().f[4]++;
  const lines =
  /* istanbul ignore next */
  (cov_2jmf26t0zl().s[14]++, csvText.trim().split('\n'));
  /* istanbul ignore next */
  cov_2jmf26t0zl().s[15]++;
  if (lines.length < 2) {
    /* istanbul ignore next */
    cov_2jmf26t0zl().b[0][0]++;
    cov_2jmf26t0zl().s[16]++;
    throw new Error('El archivo CSV debe tener al menos una fila de encabezados y una fila de datos');
  } else
  /* istanbul ignore next */
  {
    cov_2jmf26t0zl().b[0][1]++;
  }
  const headers =
  /* istanbul ignore next */
  (cov_2jmf26t0zl().s[17]++, lines[0].split(',').map(h => {
    /* istanbul ignore next */
    cov_2jmf26t0zl().f[5]++;
    cov_2jmf26t0zl().s[18]++;
    return h.trim().replace(/"/g, '');
  }));
  const rows =
  /* istanbul ignore next */
  (cov_2jmf26t0zl().s[19]++, []);
  /* istanbul ignore next */
  cov_2jmf26t0zl().s[20]++;
  for (let i =
  /* istanbul ignore next */
  (cov_2jmf26t0zl().s[21]++, 1); i < lines.length; i++) {
    const values =
    /* istanbul ignore next */
    (cov_2jmf26t0zl().s[22]++, lines[i].split(',').map(v => {
      /* istanbul ignore next */
      cov_2jmf26t0zl().f[6]++;
      cov_2jmf26t0zl().s[23]++;
      return v.trim().replace(/"/g, '');
    }));
    const row =
    /* istanbul ignore next */
    (cov_2jmf26t0zl().s[24]++, {});
    /* istanbul ignore next */
    cov_2jmf26t0zl().s[25]++;
    headers.forEach((header, index) => {
      /* istanbul ignore next */
      cov_2jmf26t0zl().f[7]++;
      cov_2jmf26t0zl().s[26]++;
      row[header] =
      /* istanbul ignore next */
      (cov_2jmf26t0zl().b[1][0]++, values[index]) ||
      /* istanbul ignore next */
      (cov_2jmf26t0zl().b[1][1]++, '');
    });
    /* istanbul ignore next */
    cov_2jmf26t0zl().s[27]++;
    rows.push(row);
  }
  /* istanbul ignore next */
  cov_2jmf26t0zl().s[28]++;
  return rows;
}
function normalizeProductData(row) {
  /* istanbul ignore next */
  cov_2jmf26t0zl().f[8]++;
  cov_2jmf26t0zl().s[29]++;
  return {
    name:
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[2][0]++, row.nombre) ||
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[2][1]++, row.name) ||
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[2][2]++, ''),
    description:
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[3][0]++, row.descripcion) ||
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[3][1]++, row.description) ||
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[3][2]++, ''),
    price: parseFloat(
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[4][0]++, row.precio) ||
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[4][1]++, row.price) ||
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[4][2]++, '0')),
    stock: parseInt(
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[5][0]++, row.stock) ||
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[5][1]++, row.cantidad) ||
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[5][2]++, '0')),
    category:
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[6][0]++, row.categoria) ||
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[6][1]++, row.category) ||
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[6][2]++, ''),
    brand:
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[7][0]++, row.marca) ||
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[7][1]++, row.brand) ||
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[7][2]++, ''),
    sku:
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[8][0]++, row.sku) ||
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[8][1]++, row.codigo) ||
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[8][2]++, ''),
    is_active:
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[9][0]++, row.activo === 'true') ||
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[9][1]++, row.is_active === 'true') ||
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[9][2]++, true),
    is_featured:
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[10][0]++, row.destacado === 'true') ||
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[10][1]++, row.is_featured === 'true') ||
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[10][2]++, false)
  };
}
async function findOrCreateCategory(categoryName) {
  /* istanbul ignore next */
  cov_2jmf26t0zl().f[9]++;
  // Buscar categorÃ­a existente
  const {
    data: existingCategory,
    error: searchError
  } =
  /* istanbul ignore next */
  (cov_2jmf26t0zl().s[30]++, await supabase.from('categories').select('id').ilike('name', categoryName).single());
  /* istanbul ignore next */
  cov_2jmf26t0zl().s[31]++;
  if (
  /* istanbul ignore next */
  (cov_2jmf26t0zl().b[12][0]++, existingCategory) &&
  /* istanbul ignore next */
  (cov_2jmf26t0zl().b[12][1]++, !searchError)) {
    /* istanbul ignore next */
    cov_2jmf26t0zl().b[11][0]++;
    cov_2jmf26t0zl().s[32]++;
    return existingCategory.id;
  } else
  /* istanbul ignore next */
  {
    cov_2jmf26t0zl().b[11][1]++;
  }
  // Crear nueva categorÃ­a
  const {
    data: newCategory,
    error: createError
  } =
  /* istanbul ignore next */
  (cov_2jmf26t0zl().s[33]++, await supabase.from('categories').insert({
    name: categoryName,
    slug: categoryName.toLowerCase().replace(/\s+/g, '-'),
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString()
  }).select('id').single());
  /* istanbul ignore next */
  cov_2jmf26t0zl().s[34]++;
  if (createError) {
    /* istanbul ignore next */
    cov_2jmf26t0zl().b[13][0]++;
    cov_2jmf26t0zl().s[35]++;
    throw new Error(`Error creando categorÃ­a "${categoryName}": ${createError.message}`);
  } else
  /* istanbul ignore next */
  {
    cov_2jmf26t0zl().b[13][1]++;
  }
  cov_2jmf26t0zl().s[36]++;
  return newCategory.id;
}
async function POST(request) {
  /* istanbul ignore next */
  cov_2jmf26t0zl().f[10]++;
  cov_2jmf26t0zl().s[37]++;
  try {
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_2jmf26t0zl().s[38]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_2jmf26t0zl().s[39]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_2jmf26t0zl().b[14][0]++;
      cov_2jmf26t0zl().s[40]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jmf26t0zl().b[14][1]++;
    }
    // Obtener archivo del FormData
    const formData =
    /* istanbul ignore next */
    (cov_2jmf26t0zl().s[41]++, await request.formData());
    const file =
    /* istanbul ignore next */
    (cov_2jmf26t0zl().s[42]++, formData.get('file'));
    /* istanbul ignore next */
    cov_2jmf26t0zl().s[43]++;
    if (!file) {
      /* istanbul ignore next */
      cov_2jmf26t0zl().b[15][0]++;
      cov_2jmf26t0zl().s[44]++;
      return _server.NextResponse.json({
        error: 'No se proporcionÃ³ archivo'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jmf26t0zl().b[15][1]++;
    }
    cov_2jmf26t0zl().s[45]++;
    if (
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[17][0]++, file.type !== 'text/csv') &&
    /* istanbul ignore next */
    (cov_2jmf26t0zl().b[17][1]++, !file.name.endsWith('.csv'))) {
      /* istanbul ignore next */
      cov_2jmf26t0zl().b[16][0]++;
      cov_2jmf26t0zl().s[46]++;
      return _server.NextResponse.json({
        error: 'El archivo debe ser un CSV'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jmf26t0zl().b[16][1]++;
    }
    // Leer contenido del archivo
    const csvText =
    /* istanbul ignore next */
    (cov_2jmf26t0zl().s[47]++, await file.text());
    // Parsear CSV
    let rows;
    /* istanbul ignore next */
    cov_2jmf26t0zl().s[48]++;
    try {
      /* istanbul ignore next */
      cov_2jmf26t0zl().s[49]++;
      rows = parseCSV(csvText);
    } catch (parseError) {
      /* istanbul ignore next */
      cov_2jmf26t0zl().s[50]++;
      return _server.NextResponse.json({
        error: 'Error parseando CSV',
        details: parseError instanceof Error ?
        /* istanbul ignore next */
        (cov_2jmf26t0zl().b[18][0]++, parseError.message) :
        /* istanbul ignore next */
        (cov_2jmf26t0zl().b[18][1]++, 'Error desconocido')
      }, {
        status: 400
      });
    }
    /* istanbul ignore next */
    cov_2jmf26t0zl().s[51]++;
    if (rows.length === 0) {
      /* istanbul ignore next */
      cov_2jmf26t0zl().b[19][0]++;
      cov_2jmf26t0zl().s[52]++;
      return _server.NextResponse.json({
        error: 'El archivo CSV estÃ¡ vacÃ­o'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jmf26t0zl().b[19][1]++;
    }
    cov_2jmf26t0zl().s[53]++;
    if (rows.length > 1000) {
      /* istanbul ignore next */
      cov_2jmf26t0zl().b[20][0]++;
      cov_2jmf26t0zl().s[54]++;
      return _server.NextResponse.json({
        error: 'MÃ¡ximo 1000 productos por importaciÃ³n'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jmf26t0zl().b[20][1]++;
    }
    // Procesar productos
    const results =
    /* istanbul ignore next */
    (cov_2jmf26t0zl().s[55]++, {
      imported_count: 0,
      failed_count: 0,
      errors: []
    });
    /* istanbul ignore next */
    cov_2jmf26t0zl().s[56]++;
    for (let i =
    /* istanbul ignore next */
    (cov_2jmf26t0zl().s[57]++, 0); i < rows.length; i++) {
      const rowNumber =
      /* istanbul ignore next */
      (cov_2jmf26t0zl().s[58]++, i + 2); // +2 porque empezamos en fila 1 y hay header
      /* istanbul ignore next */
      cov_2jmf26t0zl().s[59]++;
      try {
        // Normalizar datos
        const normalizedData =
        /* istanbul ignore next */
        (cov_2jmf26t0zl().s[60]++, normalizeProductData(rows[i]));
        // Validar datos
        const validationResult =
        /* istanbul ignore next */
        (cov_2jmf26t0zl().s[61]++, ProductImportSchema.safeParse(normalizedData));
        /* istanbul ignore next */
        cov_2jmf26t0zl().s[62]++;
        if (!validationResult.success) {
          /* istanbul ignore next */
          cov_2jmf26t0zl().b[21][0]++;
          cov_2jmf26t0zl().s[63]++;
          results.errors.push({
            row: rowNumber,
            error: `Datos invÃ¡lidos: ${validationResult.error.errors.map(e => {
              /* istanbul ignore next */
              cov_2jmf26t0zl().f[11]++;
              cov_2jmf26t0zl().s[64]++;
              return e.message;
            }).join(', ')}`,
            data: normalizedData
          });
          /* istanbul ignore next */
          cov_2jmf26t0zl().s[65]++;
          results.failed_count++;
          /* istanbul ignore next */
          cov_2jmf26t0zl().s[66]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_2jmf26t0zl().b[21][1]++;
        }
        const productData =
        /* istanbul ignore next */
        (cov_2jmf26t0zl().s[67]++, validationResult.data);
        // Buscar o crear categorÃ­a
        let categoryId;
        /* istanbul ignore next */
        cov_2jmf26t0zl().s[68]++;
        try {
          /* istanbul ignore next */
          cov_2jmf26t0zl().s[69]++;
          categoryId = await findOrCreateCategory(productData.category);
        } catch (categoryError) {
          /* istanbul ignore next */
          cov_2jmf26t0zl().s[70]++;
          results.errors.push({
            row: rowNumber,
            error: `Error con categorÃ­a: ${categoryError instanceof Error ?
            /* istanbul ignore next */
            (cov_2jmf26t0zl().b[22][0]++, categoryError.message) :
            /* istanbul ignore next */
            (cov_2jmf26t0zl().b[22][1]++, 'Error desconocido')}`,
            data: productData
          });
          /* istanbul ignore next */
          cov_2jmf26t0zl().s[71]++;
          results.failed_count++;
          /* istanbul ignore next */
          cov_2jmf26t0zl().s[72]++;
          continue;
        }
        // Generar slug Ãºnico
        const baseSlug =
        /* istanbul ignore next */
        (cov_2jmf26t0zl().s[73]++, productData.name.toLowerCase().replace(/[^a-z0-9\s-]/g, '').replace(/\s+/g, '-').replace(/-+/g, '-').trim());
        const slug =
        /* istanbul ignore next */
        (cov_2jmf26t0zl().s[74]++, `${baseSlug}-${Date.now()}-${Math.random().toString(36).substr(2, 5)}`);
        // Crear producto
        const {
          data: product,
          error: createError
        } =
        /* istanbul ignore next */
        (cov_2jmf26t0zl().s[75]++, await supabase.from('products').insert({
          name: productData.name,
          slug: slug,
          description:
          /* istanbul ignore next */
          (cov_2jmf26t0zl().b[23][0]++, productData.description) ||
          /* istanbul ignore next */
          (cov_2jmf26t0zl().b[23][1]++, ''),
          price: productData.price,
          stock: productData.stock,
          category_id: categoryId,
          brand:
          /* istanbul ignore next */
          (cov_2jmf26t0zl().b[24][0]++, productData.brand) ||
          /* istanbul ignore next */
          (cov_2jmf26t0zl().b[24][1]++, ''),
          sku:
          /* istanbul ignore next */
          (cov_2jmf26t0zl().b[25][0]++, productData.sku) ||
          /* istanbul ignore next */
          (cov_2jmf26t0zl().b[25][1]++, ''),
          is_active: productData.is_active !== false,
          is_featured: productData.is_featured === true,
          images: {},
          created_at: new Date().toISOString(),
          updated_at: new Date().toISOString()
        }).select('id').single());
        /* istanbul ignore next */
        cov_2jmf26t0zl().s[76]++;
        if (createError) {
          /* istanbul ignore next */
          cov_2jmf26t0zl().b[26][0]++;
          cov_2jmf26t0zl().s[77]++;
          results.errors.push({
            row: rowNumber,
            error: `Error creando producto: ${createError.message}`,
            data: productData
          });
          /* istanbul ignore next */
          cov_2jmf26t0zl().s[78]++;
          results.failed_count++;
          /* istanbul ignore next */
          cov_2jmf26t0zl().s[79]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_2jmf26t0zl().b[26][1]++;
        }
        cov_2jmf26t0zl().s[80]++;
        results.imported_count++;
      } catch (error) {
        /* istanbul ignore next */
        cov_2jmf26t0zl().s[81]++;
        results.errors.push({
          row: rowNumber,
          error: `Error inesperado: ${error instanceof Error ?
          /* istanbul ignore next */
          (cov_2jmf26t0zl().b[27][0]++, error.message) :
          /* istanbul ignore next */
          (cov_2jmf26t0zl().b[27][1]++, 'Error desconocido')}`,
          data: rows[i]
        });
        /* istanbul ignore next */
        cov_2jmf26t0zl().s[82]++;
        results.failed_count++;
      }
    }
    // Log del resultado
    /* istanbul ignore next */
    cov_2jmf26t0zl().s[83]++;
    console.log('â ImportaciÃ³n completada:', {
      total_rows: rows.length,
      imported: results.imported_count,
      failed: results.failed_count,
      user_id: session.user.id
    });
    /* istanbul ignore next */
    cov_2jmf26t0zl().s[84]++;
    return _server.NextResponse.json({
      success: true,
      message: `ImportaciÃ³n completada: ${results.imported_count} productos importados, ${results.failed_count} fallidos`,
      data: results
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2jmf26t0zl().s[85]++;
    console.error('â Error en importaciÃ³n de productos:', error);
    /* istanbul ignore next */
    cov_2jmf26t0zl().s[86]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2jmf26t0zl().b[28][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2jmf26t0zl().b[28][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_2jmf26t0zl().f[12]++;
  cov_2jmf26t0zl().s[87]++;
  try {
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_2jmf26t0zl().s[88]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_2jmf26t0zl().s[89]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_2jmf26t0zl().b[29][0]++;
      cov_2jmf26t0zl().s[90]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jmf26t0zl().b[29][1]++;
    }
    const importInfo =
    /* istanbul ignore next */
    (cov_2jmf26t0zl().s[91]++, {
      max_products_per_import: 1000,
      supported_formats: ['CSV'],
      required_columns: ['nombre/name', 'precio/price', 'stock', 'categoria/category'],
      optional_columns: ['descripcion/description', 'marca/brand', 'sku', 'activo/is_active', 'destacado/is_featured'],
      example_csv: `nombre,descripcion,precio,stock,categoria,marca,sku
"Pintura LÃ¡tex Blanca","Pintura lÃ¡tex interior blanca 4L",1500,50,"Pinturas","Alba","ALB-LAT-BL-4L"
"Brocha 2 pulgadas","Brocha profesional para pintura",250,100,"Herramientas","ProBrush","PB-2IN"`
    });
    /* istanbul ignore next */
    cov_2jmf26t0zl().s[92]++;
    return _server.NextResponse.json({
      success: true,
      data: importInfo
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2jmf26t0zl().s[93]++;
    console.error('â Error obteniendo informaciÃ³n de importaciÃ³n:', error);
    /* istanbul ignore next */
    cov_2jmf26t0zl().s[94]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,