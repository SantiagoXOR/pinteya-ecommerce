af700a2315c41816dd13d5c2f1616e56
// ===================================
// PINTEYA E-COMMERCE - SISTEMA DE DETECCIÓN DE ANOMALÍAS
// ===================================
"use strict";

/* istanbul ignore next */
function cov_8r5qg2g7() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\security\\anomalyDetection.ts";
  var hash = "c7abfb9989fea6f1494166ff11d71d24ea1fb699";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\security\\anomalyDetection.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 31
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "6": {
        start: {
          line: 22,
          column: 18
        },
        end: {
          line: 22,
          column: 53
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "8": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 61
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 40
        }
      },
      "10": {
        start: {
          line: 32,
          column: 26
        },
        end: {
          line: 32,
          column: 28
        }
      },
      "11": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "12": {
        start: {
          line: 35,
          column: 32
        },
        end: {
          line: 35,
          column: 85
        }
      },
      "13": {
        start: {
          line: 37,
          column: 30
        },
        end: {
          line: 37,
          column: 82
        }
      },
      "14": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 40,
          column: 13
        }
      },
      "15": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 42
        }
      },
      "16": {
        start: {
          line: 42,
          column: 34
        },
        end: {
          line: 42,
          column: 90
        }
      },
      "17": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 45,
          column: 13
        }
      },
      "18": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 46
        }
      },
      "19": {
        start: {
          line: 47,
          column: 32
        },
        end: {
          line: 47,
          column: 86
        }
      },
      "20": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 50,
          column: 13
        }
      },
      "21": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 44
        }
      },
      "22": {
        start: {
          line: 52,
          column: 38
        },
        end: {
          line: 52,
          column: 93
        }
      },
      "23": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "24": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 50
        }
      },
      "25": {
        start: {
          line: 57,
          column: 34
        },
        end: {
          line: 57,
          column: 100
        }
      },
      "26": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "27": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 46
        }
      },
      "28": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 69
        }
      },
      "29": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 25
        }
      },
      "30": {
        start: {
          line: 68,
          column: 30
        },
        end: {
          line: 68,
          column: 91
        }
      },
      "31": {
        start: {
          line: 70,
          column: 35
        },
        end: {
          line: 70,
          column: 153
        }
      },
      "32": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "33": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 80,
          column: 14
        }
      },
      "34": {
        start: {
          line: 83,
          column: 25
        },
        end: {
          line: 86,
          column: 14
        }
      },
      "35": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 73
        }
      },
      "36": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 23
        }
      },
      "37": {
        start: {
          line: 87,
          column: 26
        },
        end: {
          line: 87,
          column: 99
        }
      },
      "38": {
        start: {
          line: 87,
          column: 72
        },
        end: {
          line: 87,
          column: 82
        }
      },
      "39": {
        start: {
          line: 87,
          column: 96
        },
        end: {
          line: 87,
          column: 98
        }
      },
      "40": {
        start: {
          line: 89,
          column: 29
        },
        end: {
          line: 92,
          column: 14
        }
      },
      "41": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 75
        }
      },
      "42": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 23
        }
      },
      "43": {
        start: {
          line: 93,
          column: 30
        },
        end: {
          line: 93,
          column: 115
        }
      },
      "44": {
        start: {
          line: 93,
          column: 80
        },
        end: {
          line: 93,
          column: 90
        }
      },
      "45": {
        start: {
          line: 93,
          column: 108
        },
        end: {
          line: 93,
          column: 114
        }
      },
      "46": {
        start: {
          line: 95,
          column: 27
        },
        end: {
          line: 95,
          column: 91
        }
      },
      "47": {
        start: {
          line: 95,
          column: 51
        },
        end: {
          line: 95,
          column: 90
        }
      },
      "48": {
        start: {
          line: 96,
          column: 27
        },
        end: {
          line: 99,
          column: 14
        }
      },
      "49": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 45
        }
      },
      "50": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 23
        }
      },
      "51": {
        start: {
          line: 100,
          column: 34
        },
        end: {
          line: 100,
          column: 123
        }
      },
      "52": {
        start: {
          line: 100,
          column: 82
        },
        end: {
          line: 100,
          column: 92
        }
      },
      "53": {
        start: {
          line: 100,
          column: 108
        },
        end: {
          line: 100,
          column: 122
        }
      },
      "54": {
        start: {
          line: 102,
          column: 33
        },
        end: {
          line: 106,
          column: 10
        }
      },
      "55": {
        start: {
          line: 103,
          column: 28
        },
        end: {
          line: 103,
          column: 66
        }
      },
      "56": {
        start: {
          line: 104,
          column: 33
        },
        end: {
          line: 104,
          column: 74
        }
      },
      "57": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 42
        }
      },
      "58": {
        start: {
          line: 107,
          column: 39
        },
        end: {
          line: 107,
          column: 140
        }
      },
      "59": {
        start: {
          line: 107,
          column: 101
        },
        end: {
          line: 107,
          column: 106
        }
      },
      "60": {
        start: {
          line: 109,
          column: 32
        },
        end: {
          line: 113,
          column: 93
        }
      },
      "61": {
        start: {
          line: 109,
          column: 85
        },
        end: {
          line: 113,
          column: 13
        }
      },
      "62": {
        start: {
          line: 111,
          column: 47
        },
        end: {
          line: 111,
          column: 71
        }
      },
      "63": {
        start: {
          line: 111,
          column: 86
        },
        end: {
          line: 111,
          column: 159
        }
      },
      "64": {
        start: {
          line: 113,
          column: 29
        },
        end: {
          line: 113,
          column: 92
        }
      },
      "65": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 122,
          column: 10
        }
      },
      "66": {
        start: {
          line: 126,
          column: 24
        },
        end: {
          line: 126,
          column: 78
        }
      },
      "67": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "68": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 143,
          column: 14
        }
      },
      "69": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 152,
          column: 10
        }
      },
      "70": {
        start: {
          line: 156,
          column: 27
        },
        end: {
          line: 156,
          column: 93
        }
      },
      "71": {
        start: {
          line: 157,
          column: 28
        },
        end: {
          line: 157,
          column: 138
        }
      },
      "72": {
        start: {
          line: 157,
          column: 70
        },
        end: {
          line: 157,
          column: 137
        }
      },
      "73": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "74": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 175,
          column: 14
        }
      },
      "75": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 184,
          column: 10
        }
      },
      "76": {
        start: {
          line: 188,
          column: 26
        },
        end: {
          line: 188,
          column: 68
        }
      },
      "77": {
        start: {
          line: 189,
          column: 30
        },
        end: {
          line: 189,
          column: 124
        }
      },
      "78": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "79": {
        start: {
          line: 192,
          column: 36
        },
        end: {
          line: 192,
          column: 148
        }
      },
      "80": {
        start: {
          line: 192,
          column: 78
        },
        end: {
          line: 192,
          column: 147
        }
      },
      "81": {
        start: {
          line: 193,
          column: 34
        },
        end: {
          line: 193,
          column: 62
        }
      },
      "82": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 210,
          column: 13
        }
      },
      "83": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 209,
          column: 18
        }
      },
      "84": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 219,
          column: 10
        }
      },
      "85": {
        start: {
          line: 223,
          column: 41
        },
        end: {
          line: 223,
          column: 238
        }
      },
      "86": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "87": {
        start: {
          line: 225,
          column: 30
        },
        end: {
          line: 225,
          column: 81
        }
      },
      "88": {
        start: {
          line: 225,
          column: 62
        },
        end: {
          line: 225,
          column: 74
        }
      },
      "89": {
        start: {
          line: 226,
          column: 34
        },
        end: {
          line: 226,
          column: 86
        }
      },
      "90": {
        start: {
          line: 226,
          column: 66
        },
        end: {
          line: 226,
          column: 79
        }
      },
      "91": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 246,
          column: 13
        }
      },
      "92": {
        start: {
          line: 228,
          column: 16
        },
        end: {
          line: 245,
          column: 18
        }
      },
      "93": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 255,
          column: 10
        }
      },
      "94": {
        start: {
          line: 261,
          column: 41
        },
        end: {
          line: 264,
          column: 19
        }
      },
      "95": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 288,
          column: 9
        }
      },
      "96": {
        start: {
          line: 266,
          column: 32
        },
        end: {
          line: 266,
          column: 49
        }
      },
      "97": {
        start: {
          line: 267,
          column: 29
        },
        end: {
          line: 267,
          column: 115
        }
      },
      "98": {
        start: {
          line: 268,
          column: 36
        },
        end: {
          line: 268,
          column: 58
        }
      },
      "99": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 287,
          column: 13
        }
      },
      "100": {
        start: {
          line: 271,
          column: 16
        },
        end: {
          line: 286,
          column: 18
        }
      },
      "101": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 296,
          column: 10
        }
      },
      "102": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 311,
          column: 9
        }
      },
      "103": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 308,
          column: 15
        }
      },
      "104": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 310,
          column: 71
        }
      },
      "105": {
        start: {
          line: 315,
          column: 21
        },
        end: {
          line: 315,
          column: 50
        }
      },
      "106": {
        start: {
          line: 316,
          column: 22
        },
        end: {
          line: 316,
          column: 64
        }
      },
      "107": {
        start: {
          line: 318,
          column: 4
        },
        end: {
          line: 328,
          column: 5
        }
      },
      "108": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 327,
          column: 9
        }
      },
      "109": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 320,
          column: 76
        }
      },
      "110": {
        start: {
          line: 322,
          column: 12
        },
        end: {
          line: 326,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 27
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 38
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 25
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 24
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 38
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 31
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        loc: {
          start: {
            line: 67,
            column: 41
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 67
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 83,
            column: 41
          },
          end: {
            line: 83,
            column: 42
          }
        },
        loc: {
          start: {
            line: 83,
            column: 57
          },
          end: {
            line: 86,
            column: 9
          }
        },
        line: 83
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 87,
            column: 58
          },
          end: {
            line: 87,
            column: 59
          }
        },
        loc: {
          start: {
            line: 87,
            column: 72
          },
          end: {
            line: 87,
            column: 82
          }
        },
        line: 87
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 87,
            column: 88
          },
          end: {
            line: 87,
            column: 89
          }
        },
        loc: {
          start: {
            line: 87,
            column: 96
          },
          end: {
            line: 87,
            column: 98
          }
        },
        line: 87
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 89,
            column: 45
          },
          end: {
            line: 89,
            column: 46
          }
        },
        loc: {
          start: {
            line: 89,
            column: 61
          },
          end: {
            line: 92,
            column: 9
          }
        },
        line: 89
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 93,
            column: 66
          },
          end: {
            line: 93,
            column: 67
          }
        },
        loc: {
          start: {
            line: 93,
            column: 80
          },
          end: {
            line: 93,
            column: 90
          }
        },
        line: 93
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 93,
            column: 96
          },
          end: {
            line: 93,
            column: 97
          }
        },
        loc: {
          start: {
            line: 93,
            column: 108
          },
          end: {
            line: 93,
            column: 114
          }
        },
        line: 93
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 95,
            column: 40
          },
          end: {
            line: 95,
            column: 41
          }
        },
        loc: {
          start: {
            line: 95,
            column: 51
          },
          end: {
            line: 95,
            column: 90
          }
        },
        line: 95
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 96,
            column: 45
          },
          end: {
            line: 96,
            column: 46
          }
        },
        loc: {
          start: {
            line: 96,
            column: 58
          },
          end: {
            line: 99,
            column: 9
          }
        },
        line: 96
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 100,
            column: 68
          },
          end: {
            line: 100,
            column: 69
          }
        },
        loc: {
          start: {
            line: 100,
            column: 82
          },
          end: {
            line: 100,
            column: 92
          }
        },
        line: 100
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 100,
            column: 98
          },
          end: {
            line: 100,
            column: 99
          }
        },
        loc: {
          start: {
            line: 100,
            column: 108
          },
          end: {
            line: 100,
            column: 122
          }
        },
        line: 100
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 102,
            column: 46
          },
          end: {
            line: 102,
            column: 47
          }
        },
        loc: {
          start: {
            line: 102,
            column: 57
          },
          end: {
            line: 106,
            column: 9
          }
        },
        line: 102
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 107,
            column: 93
          },
          end: {
            line: 107,
            column: 94
          }
        },
        loc: {
          start: {
            line: 107,
            column: 101
          },
          end: {
            line: 107,
            column: 106
          }
        },
        line: 107
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 109,
            column: 65
          },
          end: {
            line: 109,
            column: 66
          }
        },
        loc: {
          start: {
            line: 109,
            column: 85
          },
          end: {
            line: 113,
            column: 13
          }
        },
        line: 109
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 111,
            column: 42
          },
          end: {
            line: 111,
            column: 43
          }
        },
        loc: {
          start: {
            line: 111,
            column: 47
          },
          end: {
            line: 111,
            column: 71
          }
        },
        line: 111
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 111,
            column: 78
          },
          end: {
            line: 111,
            column: 79
          }
        },
        loc: {
          start: {
            line: 111,
            column: 86
          },
          end: {
            line: 111,
            column: 159
          }
        },
        line: 111
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 113,
            column: 21
          },
          end: {
            line: 113,
            column: 22
          }
        },
        loc: {
          start: {
            line: 113,
            column: 29
          },
          end: {
            line: 113,
            column: 92
          }
        },
        line: 113
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        loc: {
          start: {
            line: 125,
            column: 52
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 125
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 155,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        },
        loc: {
          start: {
            line: 155,
            column: 56
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 155
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 157,
            column: 60
          },
          end: {
            line: 157,
            column: 61
          }
        },
        loc: {
          start: {
            line: 157,
            column: 70
          },
          end: {
            line: 157,
            column: 137
          }
        },
        line: 157
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        },
        loc: {
          start: {
            line: 187,
            column: 54
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 187
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 192,
            column: 70
          },
          end: {
            line: 192,
            column: 71
          }
        },
        loc: {
          start: {
            line: 192,
            column: 78
          },
          end: {
            line: 192,
            column: 147
          }
        },
        line: 192
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        },
        loc: {
          start: {
            line: 222,
            column: 55
          },
          end: {
            line: 256,
            column: 5
          }
        },
        line: 222
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 225,
            column: 57
          },
          end: {
            line: 225,
            column: 58
          }
        },
        loc: {
          start: {
            line: 225,
            column: 62
          },
          end: {
            line: 225,
            column: 74
          }
        },
        line: 225
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 226,
            column: 61
          },
          end: {
            line: 226,
            column: 62
          }
        },
        loc: {
          start: {
            line: 226,
            column: 66
          },
          end: {
            line: 226,
            column: 79
          }
        },
        line: 226
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 258,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        },
        loc: {
          start: {
            line: 258,
            column: 66
          },
          end: {
            line: 297,
            column: 5
          }
        },
        line: 258
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 299,
            column: 4
          },
          end: {
            line: 299,
            column: 5
          }
        },
        loc: {
          start: {
            line: 299,
            column: 47
          },
          end: {
            line: 312,
            column: 5
          }
        },
        line: 299
      },
      "32": {
        name: "analyzeSessionForAnomalies",
        decl: {
          start: {
            line: 314,
            column: 15
          },
          end: {
            line: 314,
            column: 41
          }
        },
        loc: {
          start: {
            line: 314,
            column: 55
          },
          end: {
            line: 329,
            column: 1
          }
        },
        line: 314
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "3": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "4": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "5": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "6": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "7": {
        loc: {
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 71,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 71,
            column: 21
          }
        }, {
          start: {
            line: 71,
            column: 25
          },
          end: {
            line: 71,
            column: 46
          }
        }],
        line: 71
      },
      "8": {
        loc: {
          start: {
            line: 84,
            column: 39
          },
          end: {
            line: 84,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 39
          },
          end: {
            line: 84,
            column: 62
          }
        }, {
          start: {
            line: 84,
            column: 66
          },
          end: {
            line: 84,
            column: 67
          }
        }],
        line: 84
      },
      "9": {
        loc: {
          start: {
            line: 90,
            column: 40
          },
          end: {
            line: 90,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 40
          },
          end: {
            line: 90,
            column: 64
          }
        }, {
          start: {
            line: 90,
            column: 68
          },
          end: {
            line: 90,
            column: 69
          }
        }],
        line: 90
      },
      "10": {
        loc: {
          start: {
            line: 97,
            column: 25
          },
          end: {
            line: 97,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 25
          },
          end: {
            line: 97,
            column: 34
          }
        }, {
          start: {
            line: 97,
            column: 38
          },
          end: {
            line: 97,
            column: 39
          }
        }],
        line: 97
      },
      "11": {
        loc: {
          start: {
            line: 107,
            column: 39
          },
          end: {
            line: 107,
            column: 140
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 69
          },
          end: {
            line: 107,
            column: 136
          }
        }, {
          start: {
            line: 107,
            column: 139
          },
          end: {
            line: 107,
            column: 140
          }
        }],
        line: 107
      },
      "12": {
        loc: {
          start: {
            line: 111,
            column: 26
          },
          end: {
            line: 111,
            column: 184
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 26
          },
          end: {
            line: 111,
            column: 178
          }
        }, {
          start: {
            line: 111,
            column: 182
          },
          end: {
            line: 111,
            column: 184
          }
        }],
        line: 111
      },
      "13": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "14": {
        loc: {
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 127,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 127,
            column: 19
          }
        }, {
          start: {
            line: 127,
            column: 23
          },
          end: {
            line: 127,
            column: 55
          }
        }],
        line: 127
      },
      "15": {
        loc: {
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "16": {
        loc: {
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 158,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 158,
            column: 23
          }
        }, {
          start: {
            line: 158,
            column: 27
          },
          end: {
            line: 158,
            column: 63
          }
        }],
        line: 158
      },
      "17": {
        loc: {
          start: {
            line: 189,
            column: 30
          },
          end: {
            line: 189,
            column: 124
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 30
          },
          end: {
            line: 189,
            column: 70
          }
        }, {
          start: {
            line: 189,
            column: 74
          },
          end: {
            line: 189,
            column: 124
          }
        }],
        line: 189
      },
      "18": {
        loc: {
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "19": {
        loc: {
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 191,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 191,
            column: 25
          }
        }, {
          start: {
            line: 191,
            column: 29
          },
          end: {
            line: 191,
            column: 70
          }
        }],
        line: 191
      },
      "20": {
        loc: {
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 210,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 210,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "21": {
        loc: {
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "22": {
        loc: {
          start: {
            line: 224,
            column: 12
          },
          end: {
            line: 224,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 12
          },
          end: {
            line: 224,
            column: 26
          }
        }, {
          start: {
            line: 224,
            column: 30
          },
          end: {
            line: 224,
            column: 55
          }
        }],
        line: 224
      },
      "23": {
        loc: {
          start: {
            line: 227,
            column: 12
          },
          end: {
            line: 246,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 12
          },
          end: {
            line: 246,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "24": {
        loc: {
          start: {
            line: 227,
            column: 16
          },
          end: {
            line: 227,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 227,
            column: 16
          },
          end: {
            line: 227,
            column: 29
          }
        }, {
          start: {
            line: 227,
            column: 33
          },
          end: {
            line: 227,
            column: 50
          }
        }],
        line: 227
      },
      "25": {
        loc: {
          start: {
            line: 265,
            column: 8
          },
          end: {
            line: 288,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 265,
            column: 8
          },
          end: {
            line: 288,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 265
      },
      "26": {
        loc: {
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 265,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 265,
            column: 26
          }
        }, {
          start: {
            line: 265,
            column: 30
          },
          end: {
            line: 265,
            column: 55
          }
        }],
        line: 265
      },
      "27": {
        loc: {
          start: {
            line: 270,
            column: 12
          },
          end: {
            line: 287,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 12
          },
          end: {
            line: 287,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "28": {
        loc: {
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 327,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 327,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 319
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\security\\anomalyDetection.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - SISTEMA DE DETECCI\xD3N DE ANOMAL\xCDAS\r\n// ===================================\r\n\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\n\r\n// Tipos para detecci\xF3n de anomal\xEDas\r\nexport interface AnomalyDetectionResult {\r\n  isAnomalous: boolean;\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  type: string;\r\n  description: string;\r\n  metadata: Record<string, any>;\r\n  recommendations: string[];\r\n}\r\n\r\nexport interface SessionAnalysis {\r\n  userId: string;\r\n  sessionId: string;\r\n  ipAddress: string;\r\n  userAgent: string;\r\n  deviceType: string;\r\n  location?: string;\r\n  timestamp: string;\r\n}\r\n\r\nexport interface UserBehaviorPattern {\r\n  userId: string;\r\n  commonIPs: string[];\r\n  commonDevices: string[];\r\n  commonLocations: string[];\r\n  typicalLoginHours: number[];\r\n  averageSessionDuration: number;\r\n  lastSeenDevices: Array<{\r\n    deviceName: string;\r\n    lastSeen: string;\r\n    trustLevel: number;\r\n  }>;\r\n}\r\n\r\n// Clase principal para detecci\xF3n de anomal\xEDas\r\nexport class AnomalyDetector {\r\n  private static instance: AnomalyDetector;\r\n  \r\n  public static getInstance(): AnomalyDetector {\r\n    if (!AnomalyDetector.instance) {\r\n      AnomalyDetector.instance = new AnomalyDetector();\r\n    }\r\n    return AnomalyDetector.instance;\r\n  }\r\n\r\n  // Analizar nueva sesi\xF3n para detectar anomal\xEDas\r\n  async analyzeSession(sessionData: SessionAnalysis): Promise<AnomalyDetectionResult[]> {\r\n    const anomalies: AnomalyDetectionResult[] = [];\r\n    \r\n    try {\r\n      // Obtener patr\xF3n de comportamiento del usuario\r\n      const userPattern = await this.getUserBehaviorPattern(sessionData.userId);\r\n      \r\n      // Detectar IP nueva o sospechosa\r\n      const ipAnomaly = await this.detectIPAnomaly(sessionData, userPattern);\r\n      if (ipAnomaly.isAnomalous) {\r\n        anomalies.push(ipAnomaly);\r\n      }\r\n      \r\n      // Detectar dispositivo nuevo\r\n      const deviceAnomaly = await this.detectDeviceAnomaly(sessionData, userPattern);\r\n      if (deviceAnomaly.isAnomalous) {\r\n        anomalies.push(deviceAnomaly);\r\n      }\r\n      \r\n      // Detectar horario inusual\r\n      const timeAnomaly = await this.detectTimeAnomaly(sessionData, userPattern);\r\n      if (timeAnomaly.isAnomalous) {\r\n        anomalies.push(timeAnomaly);\r\n      }\r\n      \r\n      // Detectar m\xFAltiples sesiones simult\xE1neas\r\n      const concurrentAnomaly = await this.detectConcurrentSessionsAnomaly(sessionData);\r\n      if (concurrentAnomaly.isAnomalous) {\r\n        anomalies.push(concurrentAnomaly);\r\n      }\r\n      \r\n      // Detectar velocidad de viaje imposible\r\n      const travelAnomaly = await this.detectImpossibleTravelAnomaly(sessionData, userPattern);\r\n      if (travelAnomaly.isAnomalous) {\r\n        anomalies.push(travelAnomaly);\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Error en detecci\xF3n de anomal\xEDas:', error);\r\n    }\r\n    \r\n    return anomalies;\r\n  }\r\n\r\n  // Obtener patr\xF3n de comportamiento del usuario\r\n  private async getUserBehaviorPattern(userId: string): Promise<UserBehaviorPattern> {\r\n    const thirtyDaysAgo = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString();\r\n    \r\n    // Obtener sesiones de los \xFAltimos 30 d\xEDas\r\n    const { data: sessions } = await supabaseAdmin\r\n      .from('user_sessions')\r\n      .select('*')\r\n      .eq('user_id', userId)\r\n      .gte('created_at', thirtyDaysAgo);\r\n    \r\n    if (!sessions || sessions.length === 0) {\r\n      return {\r\n        userId,\r\n        commonIPs: [],\r\n        commonDevices: [],\r\n        commonLocations: [],\r\n        typicalLoginHours: [],\r\n        averageSessionDuration: 0,\r\n        lastSeenDevices: [],\r\n      };\r\n    }\r\n    \r\n    // Analizar IPs comunes\r\n    const ipCounts = sessions.reduce((acc, session) => {\r\n      acc[session.ip_address] = (acc[session.ip_address] || 0) + 1;\r\n      return acc;\r\n    }, {} as Record<string, number>);\r\n    \r\n    const commonIPs = Object.entries(ipCounts)\r\n      .filter(([_, count]) => count >= 3)\r\n      .map(([ip]) => ip);\r\n    \r\n    // Analizar dispositivos comunes\r\n    const deviceCounts = sessions.reduce((acc, session) => {\r\n      acc[session.device_name] = (acc[session.device_name] || 0) + 1;\r\n      return acc;\r\n    }, {} as Record<string, number>);\r\n    \r\n    const commonDevices = Object.entries(deviceCounts)\r\n      .filter(([_, count]) => count >= 2)\r\n      .map(([device]) => device);\r\n    \r\n    // Analizar horarios t\xEDpicos\r\n    const loginHours = sessions.map(session => \r\n      new Date(session.created_at).getHours()\r\n    );\r\n    \r\n    const hourCounts = loginHours.reduce((acc, hour) => {\r\n      acc[hour] = (acc[hour] || 0) + 1;\r\n      return acc;\r\n    }, {} as Record<number, number>);\r\n    \r\n    const typicalLoginHours = Object.entries(hourCounts)\r\n      .filter(([_, count]) => count >= 2)\r\n      .map(([hour]) => parseInt(hour));\r\n    \r\n    // Calcular duraci\xF3n promedio de sesi\xF3n\r\n    const sessionDurations = sessions.map(session => {\r\n      const created = new Date(session.created_at).getTime();\r\n      const lastActivity = new Date(session.last_activity).getTime();\r\n      return lastActivity - created;\r\n    });\r\n    \r\n    const averageSessionDuration = sessionDurations.length > 0 \r\n      ? sessionDurations.reduce((a, b) => a + b, 0) / sessionDurations.length \r\n      : 0;\r\n    \r\n    // Dispositivos vistos recientemente\r\n    const lastSeenDevices = Object.entries(deviceCounts)\r\n      .map(([device, count]) => ({\r\n        deviceName: device,\r\n        lastSeen: sessions\r\n          .filter(s => s.device_name === device)\r\n          .sort((a, b) => new Date(b.last_activity).getTime() - new Date(a.last_activity).getTime())[0]\r\n          ?.last_activity || '',\r\n        trustLevel: Math.min(count / 10, 1), // Nivel de confianza basado en frecuencia\r\n      }))\r\n      .sort((a, b) => new Date(b.lastSeen).getTime() - new Date(a.lastSeen).getTime());\r\n    \r\n    return {\r\n      userId,\r\n      commonIPs,\r\n      commonDevices,\r\n      commonLocations: [], // TODO: Implementar geolocalizaci\xF3n\r\n      typicalLoginHours,\r\n      averageSessionDuration,\r\n      lastSeenDevices,\r\n    };\r\n  }\r\n\r\n  // Detectar anomal\xEDa de IP\r\n  private async detectIPAnomaly(\r\n    sessionData: SessionAnalysis, \r\n    userPattern: UserBehaviorPattern\r\n  ): Promise<AnomalyDetectionResult> {\r\n    const isNewIP = !userPattern.commonIPs.includes(sessionData.ipAddress);\r\n    \r\n    if (isNewIP && userPattern.commonIPs.length > 0) {\r\n      return {\r\n        isAnomalous: true,\r\n        severity: 'medium',\r\n        type: 'new_ip_address',\r\n        description: 'Inicio de sesi\xF3n desde una nueva direcci\xF3n IP',\r\n        metadata: {\r\n          newIP: sessionData.ipAddress,\r\n          knownIPs: userPattern.commonIPs,\r\n          sessionId: sessionData.sessionId,\r\n        },\r\n        recommendations: [\r\n          'Verificar si el inicio de sesi\xF3n fue autorizado',\r\n          'Considerar marcar el dispositivo como confiable si es leg\xEDtimo',\r\n          'Revisar actividad reciente en la cuenta',\r\n        ],\r\n      };\r\n    }\r\n    \r\n    return { isAnomalous: false, severity: 'low', type: '', description: '', metadata: {}, recommendations: [] };\r\n  }\r\n\r\n  // Detectar anomal\xEDa de dispositivo\r\n  private async detectDeviceAnomaly(\r\n    sessionData: SessionAnalysis, \r\n    userPattern: UserBehaviorPattern\r\n  ): Promise<AnomalyDetectionResult> {\r\n    const deviceName = `${sessionData.deviceType} ${sessionData.userAgent.split(' ')[0]}`;\r\n    const isNewDevice = !userPattern.commonDevices.some(device => \r\n      device.toLowerCase().includes(sessionData.deviceType.toLowerCase())\r\n    );\r\n    \r\n    if (isNewDevice && userPattern.commonDevices.length > 0) {\r\n      return {\r\n        isAnomalous: true,\r\n        severity: 'medium',\r\n        type: 'new_device',\r\n        description: 'Inicio de sesi\xF3n desde un nuevo dispositivo',\r\n        metadata: {\r\n          newDevice: deviceName,\r\n          deviceType: sessionData.deviceType,\r\n          userAgent: sessionData.userAgent,\r\n          knownDevices: userPattern.commonDevices,\r\n        },\r\n        recommendations: [\r\n          'Verificar si el dispositivo es de confianza',\r\n          'Considerar activar autenticaci\xF3n de dos factores',\r\n          'Revisar configuraci\xF3n de alertas de seguridad',\r\n        ],\r\n      };\r\n    }\r\n    \r\n    return { isAnomalous: false, severity: 'low', type: '', description: '', metadata: {}, recommendations: [] };\r\n  }\r\n\r\n  // Detectar anomal\xEDa de horario\r\n  private async detectTimeAnomaly(\r\n    sessionData: SessionAnalysis, \r\n    userPattern: UserBehaviorPattern\r\n  ): Promise<AnomalyDetectionResult> {\r\n    const loginHour = new Date(sessionData.timestamp).getHours();\r\n    const isUnusualTime = userPattern.typicalLoginHours.length > 0 && \r\n                         !userPattern.typicalLoginHours.includes(loginHour);\r\n    \r\n    // Solo considerar an\xF3malo si es muy fuera del patr\xF3n (m\xE1s de 6 horas de diferencia)\r\n    if (isUnusualTime && userPattern.typicalLoginHours.length >= 5) {\r\n      const hourDifferences = userPattern.typicalLoginHours.map(hour => \r\n        Math.min(Math.abs(hour - loginHour), 24 - Math.abs(hour - loginHour))\r\n      );\r\n      const minDifference = Math.min(...hourDifferences);\r\n      \r\n      if (minDifference >= 6) {\r\n        return {\r\n          isAnomalous: true,\r\n          severity: 'low',\r\n          type: 'unusual_time',\r\n          description: 'Inicio de sesi\xF3n en horario inusual',\r\n          metadata: {\r\n            loginHour,\r\n            typicalHours: userPattern.typicalLoginHours,\r\n            hourDifference: minDifference,\r\n          },\r\n          recommendations: [\r\n            'Verificar si el horario corresponde a tu zona horaria',\r\n            'Considerar si est\xE1s viajando o en una ubicaci\xF3n diferente',\r\n          ],\r\n        };\r\n      }\r\n    }\r\n    \r\n    return { isAnomalous: false, severity: 'low', type: '', description: '', metadata: {}, recommendations: [] };\r\n  }\r\n\r\n  // Detectar m\xFAltiples sesiones concurrentes\r\n  private async detectConcurrentSessionsAnomaly(\r\n    sessionData: SessionAnalysis\r\n  ): Promise<AnomalyDetectionResult> {\r\n    const { data: activeSessions } = await supabaseAdmin\r\n      .from('user_sessions')\r\n      .select('id, ip_address, device_name')\r\n      .eq('user_id', sessionData.userId)\r\n      .gte('last_activity', new Date(Date.now() - 60 * 60 * 1000).toISOString()); // \xDAltimas 1 hora\r\n    \r\n    if (activeSessions && activeSessions.length > 3) {\r\n      const uniqueIPs = new Set(activeSessions.map(s => s.ip_address)).size;\r\n      const uniqueDevices = new Set(activeSessions.map(s => s.device_name)).size;\r\n      \r\n      if (uniqueIPs > 2 || uniqueDevices > 3) {\r\n        return {\r\n          isAnomalous: true,\r\n          severity: 'high',\r\n          type: 'multiple_concurrent_sessions',\r\n          description: 'M\xFAltiples sesiones activas desde diferentes ubicaciones o dispositivos',\r\n          metadata: {\r\n            totalSessions: activeSessions.length,\r\n            uniqueIPs,\r\n            uniqueDevices,\r\n            sessions: activeSessions,\r\n          },\r\n          recommendations: [\r\n            'Revisar todas las sesiones activas',\r\n            'Cerrar sesiones no autorizadas',\r\n            'Cambiar contrase\xF1a si es necesario',\r\n            'Activar autenticaci\xF3n de dos factores',\r\n          ],\r\n        };\r\n      }\r\n    }\r\n    \r\n    return { isAnomalous: false, severity: 'low', type: '', description: '', metadata: {}, recommendations: [] };\r\n  }\r\n\r\n  // Detectar viaje imposible (placeholder - requiere geolocalizaci\xF3n)\r\n  private async detectImpossibleTravelAnomaly(\r\n    sessionData: SessionAnalysis, \r\n    userPattern: UserBehaviorPattern\r\n  ): Promise<AnomalyDetectionResult> {\r\n    // TODO: Implementar detecci\xF3n de viaje imposible con geolocalizaci\xF3n\r\n    // Por ahora, solo detectamos cambios r\xE1pidos de IP\r\n    \r\n    const { data: recentSessions } = await supabaseAdmin\r\n      .from('user_sessions')\r\n      .select('ip_address, created_at')\r\n      .eq('user_id', sessionData.userId)\r\n      .gte('created_at', new Date(Date.now() - 60 * 60 * 1000).toISOString()) // \xDAltima hora\r\n      .neq('ip_address', sessionData.ipAddress)\r\n      .order('created_at', { ascending: false })\r\n      .limit(1);\r\n    \r\n    if (recentSessions && recentSessions.length > 0) {\r\n      const lastSession = recentSessions[0];\r\n      const timeDiff = new Date(sessionData.timestamp).getTime() - new Date(lastSession.created_at).getTime();\r\n      const timeDiffMinutes = timeDiff / (1000 * 60);\r\n      \r\n      // Si hay cambio de IP en menos de 30 minutos, podr\xEDa ser sospechoso\r\n      if (timeDiffMinutes < 30) {\r\n        return {\r\n          isAnomalous: true,\r\n          severity: 'medium',\r\n          type: 'rapid_location_change',\r\n          description: 'Cambio r\xE1pido de ubicaci\xF3n detectado',\r\n          metadata: {\r\n            previousIP: lastSession.ip_address,\r\n            currentIP: sessionData.ipAddress,\r\n            timeDifferenceMinutes: Math.round(timeDiffMinutes),\r\n          },\r\n          recommendations: [\r\n            'Verificar si est\xE1s usando VPN o proxy',\r\n            'Confirmar que ambos inicios de sesi\xF3n son leg\xEDtimos',\r\n            'Revisar configuraci\xF3n de red',\r\n          ],\r\n        };\r\n      }\r\n    }\r\n    \r\n    return { isAnomalous: false, severity: 'low', type: '', description: '', metadata: {}, recommendations: [] };\r\n  }\r\n\r\n  // Crear alerta de seguridad\r\n  async createSecurityAlert(\r\n    userId: string, \r\n    anomaly: AnomalyDetectionResult\r\n  ): Promise<void> {\r\n    try {\r\n      await supabaseAdmin\r\n        .from('user_security_alerts')\r\n        .insert({\r\n          user_id: userId,\r\n          type: anomaly.type,\r\n          severity: anomaly.severity,\r\n          title: anomaly.description,\r\n          description: `${anomaly.description}. ${anomaly.recommendations.join(' ')}`,\r\n          metadata: anomaly.metadata,\r\n        });\r\n    } catch (error) {\r\n      console.error('Error creando alerta de seguridad:', error);\r\n    }\r\n  }\r\n}\r\n\r\n// Funci\xF3n de utilidad para analizar sesi\xF3n\r\nexport async function analyzeSessionForAnomalies(sessionData: SessionAnalysis): Promise<void> {\r\n  const detector = AnomalyDetector.getInstance();\r\n  const anomalies = await detector.analyzeSession(sessionData);\r\n  \r\n  // Crear alertas para anomal\xEDas detectadas\r\n  for (const anomaly of anomalies) {\r\n    if (anomaly.isAnomalous) {\r\n      await detector.createSecurityAlert(sessionData.userId, anomaly);\r\n      \r\n      // Log para debugging\r\n      console.log(`[ANOMALY DETECTED] ${anomaly.type} - ${anomaly.description}`, {\r\n        userId: sessionData.userId,\r\n        severity: anomaly.severity,\r\n        metadata: anomaly.metadata,\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["AnomalyDetector", "analyzeSessionForAnomalies", "getInstance", "instance", "analyzeSession", "sessionData", "anomalies", "userPattern", "getUserBehaviorPattern", "userId", "ipAnomaly", "detectIPAnomaly", "isAnomalous", "push", "deviceAnomaly", "detectDeviceAnomaly", "timeAnomaly", "detectTimeAnomaly", "concurrentAnomaly", "detectConcurrentSessionsAnomaly", "travelAnomaly", "detectImpossibleTravelAnomaly", "error", "console", "thirtyDaysAgo", "Date", "now", "toISOString", "data", "sessions", "supabaseAdmin", "from", "select", "eq", "gte", "length", "commonIPs", "commonDevices", "commonLocations", "typicalLoginHours", "averageSessionDuration", "lastSeenDevices", "ipCounts", "reduce", "acc", "session", "ip_address", "Object", "entries", "filter", "_", "count", "map", "ip", "deviceCounts", "device_name", "device", "loginHours", "created_at", "getHours", "hourCounts", "hour", "parseInt", "sessionDurations", "created", "getTime", "lastActivity", "last_activity", "a", "b", "deviceName", "lastSeen", "s", "sort", "trustLevel", "Math", "min", "isNewIP", "includes", "ipAddress", "severity", "type", "description", "metadata", "newIP", "knownIPs", "sessionId", "recommendations", "deviceType", "userAgent", "split", "isNewDevice", "some", "toLowerCase", "newDevice", "knownDevices", "loginHour", "timestamp", "isUnusualTime", "hourDifferences", "abs", "minDifference", "typicalHours", "hourDifference", "activeSessions", "uniqueIPs", "Set", "size", "uniqueDevices", "totalSessions", "recentSessions", "neq", "order", "ascending", "limit", "lastSession", "timeDiff", "timeDiffMinutes", "previousIP", "currentIP", "timeDifferenceMinutes", "round", "createSecurityAlert", "anomaly", "insert", "user_id", "title", "join", "detector", "log"],
      mappings: "AAAA,sCAAsC;AACtC,yDAAyD;AACzD,sCAAsC;;;;;;;;;;;;QAuCzBA;eAAAA;;QAkWSC;eAAAA;;;0BAvYQ;AAqCvB,MAAMD;IAGX,OAAcE,cAA+B;QAC3C,IAAI,CAACF,gBAAgBG,QAAQ,EAAE;YAC7BH,gBAAgBG,QAAQ,GAAG,IAAIH;QACjC;QACA,OAAOA,gBAAgBG,QAAQ;IACjC;IAEA,gDAAgD;IAChD,MAAMC,eAAeC,WAA4B,EAAqC;QACpF,MAAMC,YAAsC,EAAE;QAE9C,IAAI;YACF,+CAA+C;YAC/C,MAAMC,cAAc,MAAM,IAAI,CAACC,sBAAsB,CAACH,YAAYI,MAAM;YAExE,iCAAiC;YACjC,MAAMC,YAAY,MAAM,IAAI,CAACC,eAAe,CAACN,aAAaE;YAC1D,IAAIG,UAAUE,WAAW,EAAE;gBACzBN,UAAUO,IAAI,CAACH;YACjB;YAEA,6BAA6B;YAC7B,MAAMI,gBAAgB,MAAM,IAAI,CAACC,mBAAmB,CAACV,aAAaE;YAClE,IAAIO,cAAcF,WAAW,EAAE;gBAC7BN,UAAUO,IAAI,CAACC;YACjB;YAEA,2BAA2B;YAC3B,MAAME,cAAc,MAAM,IAAI,CAACC,iBAAiB,CAACZ,aAAaE;YAC9D,IAAIS,YAAYJ,WAAW,EAAE;gBAC3BN,UAAUO,IAAI,CAACG;YACjB;YAEA,0CAA0C;YAC1C,MAAME,oBAAoB,MAAM,IAAI,CAACC,+BAA+B,CAACd;YACrE,IAAIa,kBAAkBN,WAAW,EAAE;gBACjCN,UAAUO,IAAI,CAACK;YACjB;YAEA,wCAAwC;YACxC,MAAME,gBAAgB,MAAM,IAAI,CAACC,6BAA6B,CAAChB,aAAaE;YAC5E,IAAIa,cAAcR,WAAW,EAAE;gBAC7BN,UAAUO,IAAI,CAACO;YACjB;QAEF,EAAE,OAAOE,OAAO;YACdC,QAAQD,KAAK,CAAC,oCAAoCA;QACpD;QAEA,OAAOhB;IACT;IAEA,+CAA+C;IAC/C,MAAcE,uBAAuBC,MAAc,EAAgC;QACjF,MAAMe,gBAAgB,IAAIC,KAAKA,KAAKC,GAAG,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,WAAW;QAEjF,0CAA0C;QAC1C,MAAM,EAAEC,MAAMC,QAAQ,EAAE,GAAG,MAAMC,uBAAa,CAC3CC,IAAI,CAAC,iBACLC,MAAM,CAAC,KACPC,EAAE,CAAC,WAAWxB,QACdyB,GAAG,CAAC,cAAcV;QAErB,IAAI,CAACK,YAAYA,SAASM,MAAM,KAAK,GAAG;YACtC,OAAO;gBACL1B;gBACA2B,WAAW,EAAE;gBACbC,eAAe,EAAE;gBACjBC,iBAAiB,EAAE;gBACnBC,mBAAmB,EAAE;gBACrBC,wBAAwB;gBACxBC,iBAAiB,EAAE;YACrB;QACF;QAEA,uBAAuB;QACvB,MAAMC,WAAWb,SAASc,MAAM,CAAC,CAACC,KAAKC;YACrCD,GAAG,CAACC,QAAQC,UAAU,CAAC,GAAG,AAACF,CAAAA,GAAG,CAACC,QAAQC,UAAU,CAAC,IAAI,CAAA,IAAK;YAC3D,OAAOF;QACT,GAAG,CAAC;QAEJ,MAAMR,YAAYW,OAAOC,OAAO,CAACN,UAC9BO,MAAM,CAAC,CAAC,CAACC,GAAGC,MAAM,GAAKA,SAAS,GAChCC,GAAG,CAAC,CAAC,CAACC,GAAG,GAAKA;QAEjB,gCAAgC;QAChC,MAAMC,eAAezB,SAASc,MAAM,CAAC,CAACC,KAAKC;YACzCD,GAAG,CAACC,QAAQU,WAAW,CAAC,GAAG,AAACX,CAAAA,GAAG,CAACC,QAAQU,WAAW,CAAC,IAAI,CAAA,IAAK;YAC7D,OAAOX;QACT,GAAG,CAAC;QAEJ,MAAMP,gBAAgBU,OAAOC,OAAO,CAACM,cAClCL,MAAM,CAAC,CAAC,CAACC,GAAGC,MAAM,GAAKA,SAAS,GAChCC,GAAG,CAAC,CAAC,CAACI,OAAO,GAAKA;QAErB,4BAA4B;QAC5B,MAAMC,aAAa5B,SAASuB,GAAG,CAACP,CAAAA,UAC9B,IAAIpB,KAAKoB,QAAQa,UAAU,EAAEC,QAAQ;QAGvC,MAAMC,aAAaH,WAAWd,MAAM,CAAC,CAACC,KAAKiB;YACzCjB,GAAG,CAACiB,KAAK,GAAG,AAACjB,CAAAA,GAAG,CAACiB,KAAK,IAAI,CAAA,IAAK;YAC/B,OAAOjB;QACT,GAAG,CAAC;QAEJ,MAAML,oBAAoBQ,OAAOC,OAAO,CAACY,YACtCX,MAAM,CAAC,CAAC,CAACC,GAAGC,MAAM,GAAKA,SAAS,GAChCC,GAAG,CAAC,CAAC,CAACS,KAAK,GAAKC,SAASD;QAE5B,uCAAuC;QACvC,MAAME,mBAAmBlC,SAASuB,GAAG,CAACP,CAAAA;YACpC,MAAMmB,UAAU,IAAIvC,KAAKoB,QAAQa,UAAU,EAAEO,OAAO;YACpD,MAAMC,eAAe,IAAIzC,KAAKoB,QAAQsB,aAAa,EAAEF,OAAO;YAC5D,OAAOC,eAAeF;QACxB;QAEA,MAAMxB,yBAAyBuB,iBAAiB5B,MAAM,GAAG,IACrD4B,iBAAiBpB,MAAM,CAAC,CAACyB,GAAGC,IAAMD,IAAIC,GAAG,KAAKN,iBAAiB5B,MAAM,GACrE;QAEJ,oCAAoC;QACpC,MAAMM,kBAAkBM,OAAOC,OAAO,CAACM,cACpCF,GAAG,CAAC,CAAC,CAACI,QAAQL,MAAM,GAAM,CAAA;gBACzBmB,YAAYd;gBACZe,UAAU1C,SACPoB,MAAM,CAACuB,CAAAA,IAAKA,EAAEjB,WAAW,KAAKC,QAC9BiB,IAAI,CAAC,CAACL,GAAGC,IAAM,IAAI5C,KAAK4C,EAAEF,aAAa,EAAEF,OAAO,KAAK,IAAIxC,KAAK2C,EAAED,aAAa,EAAEF,OAAO,GAAG,CAAC,EAAE,EAC3FE,iBAAiB;gBACrBO,YAAYC,KAAKC,GAAG,CAACzB,QAAQ,IAAI;YACnC,CAAA,GACCsB,IAAI,CAAC,CAACL,GAAGC,IAAM,IAAI5C,KAAK4C,EAAEE,QAAQ,EAAEN,OAAO,KAAK,IAAIxC,KAAK2C,EAAEG,QAAQ,EAAEN,OAAO;QAE/E,OAAO;YACLxD;YACA2B;YACAC;YACAC,iBAAiB,EAAE;YACnBC;YACAC;YACAC;QACF;IACF;IAEA,0BAA0B;IAC1B,MAAc9B,gBACZN,WAA4B,EAC5BE,WAAgC,EACC;QACjC,MAAMsE,UAAU,CAACtE,YAAY6B,SAAS,CAAC0C,QAAQ,CAACzE,YAAY0E,SAAS;QAErE,IAAIF,WAAWtE,YAAY6B,SAAS,CAACD,MAAM,GAAG,GAAG;YAC/C,OAAO;gBACLvB,aAAa;gBACboE,UAAU;gBACVC,MAAM;gBACNC,aAAa;gBACbC,UAAU;oBACRC,OAAO/E,YAAY0E,SAAS;oBAC5BM,UAAU9E,YAAY6B,SAAS;oBAC/BkD,WAAWjF,YAAYiF,SAAS;gBAClC;gBACAC,iBAAiB;oBACf;oBACA;oBACA;iBACD;YACH;QACF;QAEA,OAAO;YAAE3E,aAAa;YAAOoE,UAAU;YAAOC,MAAM;YAAIC,aAAa;YAAIC,UAAU,CAAC;YAAGI,iBAAiB,EAAE;QAAC;IAC7G;IAEA,mCAAmC;IACnC,MAAcxE,oBACZV,WAA4B,EAC5BE,WAAgC,EACC;QACjC,MAAM+D,aAAa,GAAGjE,YAAYmF,UAAU,CAAC,CAAC,EAAEnF,YAAYoF,SAAS,CAACC,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE;QACrF,MAAMC,cAAc,CAACpF,YAAY8B,aAAa,CAACuD,IAAI,CAACpC,CAAAA,SAClDA,OAAOqC,WAAW,GAAGf,QAAQ,CAACzE,YAAYmF,UAAU,CAACK,WAAW;QAGlE,IAAIF,eAAepF,YAAY8B,aAAa,CAACF,MAAM,GAAG,GAAG;YACvD,OAAO;gBACLvB,aAAa;gBACboE,UAAU;gBACVC,MAAM;gBACNC,aAAa;gBACbC,UAAU;oBACRW,WAAWxB;oBACXkB,YAAYnF,YAAYmF,UAAU;oBAClCC,WAAWpF,YAAYoF,SAAS;oBAChCM,cAAcxF,YAAY8B,aAAa;gBACzC;gBACAkD,iBAAiB;oBACf;oBACA;oBACA;iBACD;YACH;QACF;QAEA,OAAO;YAAE3E,aAAa;YAAOoE,UAAU;YAAOC,MAAM;YAAIC,aAAa;YAAIC,UAAU,CAAC;YAAGI,iBAAiB,EAAE;QAAC;IAC7G;IAEA,+BAA+B;IAC/B,MAActE,kBACZZ,WAA4B,EAC5BE,WAAgC,EACC;QACjC,MAAMyF,YAAY,IAAIvE,KAAKpB,YAAY4F,SAAS,EAAEtC,QAAQ;QAC1D,MAAMuC,gBAAgB3F,YAAYgC,iBAAiB,CAACJ,MAAM,GAAG,KACxC,CAAC5B,YAAYgC,iBAAiB,CAACuC,QAAQ,CAACkB;QAE7D,oFAAoF;QACpF,IAAIE,iBAAiB3F,YAAYgC,iBAAiB,CAACJ,MAAM,IAAI,GAAG;YAC9D,MAAMgE,kBAAkB5F,YAAYgC,iBAAiB,CAACa,GAAG,CAACS,CAAAA,OACxDc,KAAKC,GAAG,CAACD,KAAKyB,GAAG,CAACvC,OAAOmC,YAAY,KAAKrB,KAAKyB,GAAG,CAACvC,OAAOmC;YAE5D,MAAMK,gBAAgB1B,KAAKC,GAAG,IAAIuB;YAElC,IAAIE,iBAAiB,GAAG;gBACtB,OAAO;oBACLzF,aAAa;oBACboE,UAAU;oBACVC,MAAM;oBACNC,aAAa;oBACbC,UAAU;wBACRa;wBACAM,cAAc/F,YAAYgC,iBAAiB;wBAC3CgE,gBAAgBF;oBAClB;oBACAd,iBAAiB;wBACf;wBACA;qBACD;gBACH;YACF;QACF;QAEA,OAAO;YAAE3E,aAAa;YAAOoE,UAAU;YAAOC,MAAM;YAAIC,aAAa;YAAIC,UAAU,CAAC;YAAGI,iBAAiB,EAAE;QAAC;IAC7G;IAEA,2CAA2C;IAC3C,MAAcpE,gCACZd,WAA4B,EACK;QACjC,MAAM,EAAEuB,MAAM4E,cAAc,EAAE,GAAG,MAAM1E,uBAAa,CACjDC,IAAI,CAAC,iBACLC,MAAM,CAAC,+BACPC,EAAE,CAAC,WAAW5B,YAAYI,MAAM,EAChCyB,GAAG,CAAC,iBAAiB,IAAIT,KAAKA,KAAKC,GAAG,KAAK,KAAK,KAAK,MAAMC,WAAW,KAAK,iBAAiB;QAE/F,IAAI6E,kBAAkBA,eAAerE,MAAM,GAAG,GAAG;YAC/C,MAAMsE,YAAY,IAAIC,IAAIF,eAAepD,GAAG,CAACoB,CAAAA,IAAKA,EAAE1B,UAAU,GAAG6D,IAAI;YACrE,MAAMC,gBAAgB,IAAIF,IAAIF,eAAepD,GAAG,CAACoB,CAAAA,IAAKA,EAAEjB,WAAW,GAAGoD,IAAI;YAE1E,IAAIF,YAAY,KAAKG,gBAAgB,GAAG;gBACtC,OAAO;oBACLhG,aAAa;oBACboE,UAAU;oBACVC,MAAM;oBACNC,aAAa;oBACbC,UAAU;wBACR0B,eAAeL,eAAerE,MAAM;wBACpCsE;wBACAG;wBACA/E,UAAU2E;oBACZ;oBACAjB,iBAAiB;wBACf;wBACA;wBACA;wBACA;qBACD;gBACH;YACF;QACF;QAEA,OAAO;YAAE3E,aAAa;YAAOoE,UAAU;YAAOC,MAAM;YAAIC,aAAa;YAAIC,UAAU,CAAC;YAAGI,iBAAiB,EAAE;QAAC;IAC7G;IAEA,oEAAoE;IACpE,MAAclE,8BACZhB,WAA4B,EAC5BE,WAAgC,EACC;QACjC,qEAAqE;QACrE,mDAAmD;QAEnD,MAAM,EAAEqB,MAAMkF,cAAc,EAAE,GAAG,MAAMhF,uBAAa,CACjDC,IAAI,CAAC,iBACLC,MAAM,CAAC,0BACPC,EAAE,CAAC,WAAW5B,YAAYI,MAAM,EAChCyB,GAAG,CAAC,cAAc,IAAIT,KAAKA,KAAKC,GAAG,KAAK,KAAK,KAAK,MAAMC,WAAW,IAAI,cAAc;SACrFoF,GAAG,CAAC,cAAc1G,YAAY0E,SAAS,EACvCiC,KAAK,CAAC,cAAc;YAAEC,WAAW;QAAM,GACvCC,KAAK,CAAC;QAET,IAAIJ,kBAAkBA,eAAe3E,MAAM,GAAG,GAAG;YAC/C,MAAMgF,cAAcL,cAAc,CAAC,EAAE;YACrC,MAAMM,WAAW,IAAI3F,KAAKpB,YAAY4F,SAAS,EAAEhC,OAAO,KAAK,IAAIxC,KAAK0F,YAAYzD,UAAU,EAAEO,OAAO;YACrG,MAAMoD,kBAAkBD,WAAY,CAAA,OAAO,EAAC;YAE5C,oEAAoE;YACpE,IAAIC,kBAAkB,IAAI;gBACxB,OAAO;oBACLzG,aAAa;oBACboE,UAAU;oBACVC,MAAM;oBACNC,aAAa;oBACbC,UAAU;wBACRmC,YAAYH,YAAYrE,UAAU;wBAClCyE,WAAWlH,YAAY0E,SAAS;wBAChCyC,uBAAuB7C,KAAK8C,KAAK,CAACJ;oBACpC;oBACA9B,iBAAiB;wBACf;wBACA;wBACA;qBACD;gBACH;YACF;QACF;QAEA,OAAO;YAAE3E,aAAa;YAAOoE,UAAU;YAAOC,MAAM;YAAIC,aAAa;YAAIC,UAAU,CAAC;YAAGI,iBAAiB,EAAE;QAAC;IAC7G;IAEA,4BAA4B;IAC5B,MAAMmC,oBACJjH,MAAc,EACdkH,OAA+B,EAChB;QACf,IAAI;YACF,MAAM7F,uBAAa,CAChBC,IAAI,CAAC,wBACL6F,MAAM,CAAC;gBACNC,SAASpH;gBACTwE,MAAM0C,QAAQ1C,IAAI;gBAClBD,UAAU2C,QAAQ3C,QAAQ;gBAC1B8C,OAAOH,QAAQzC,WAAW;gBAC1BA,aAAa,GAAGyC,QAAQzC,WAAW,CAAC,EAAE,EAAEyC,QAAQpC,eAAe,CAACwC,IAAI,CAAC,MAAM;gBAC3E5C,UAAUwC,QAAQxC,QAAQ;YAC5B;QACJ,EAAE,OAAO7D,OAAO;YACdC,QAAQD,KAAK,CAAC,sCAAsCA;QACtD;IACF;AACF;AAGO,eAAerB,2BAA2BI,WAA4B;IAC3E,MAAM2H,WAAWhI,gBAAgBE,WAAW;IAC5C,MAAMI,YAAY,MAAM0H,SAAS5H,cAAc,CAACC;IAEhD,0CAA0C;IAC1C,KAAK,MAAMsH,WAAWrH,UAAW;QAC/B,IAAIqH,QAAQ/G,WAAW,EAAE;YACvB,MAAMoH,SAASN,mBAAmB,CAACrH,YAAYI,MAAM,EAAEkH;YAEvD,qBAAqB;YACrBpG,QAAQ0G,GAAG,CAAC,CAAC,mBAAmB,EAAEN,QAAQ1C,IAAI,CAAC,GAAG,EAAE0C,QAAQzC,WAAW,EAAE,EAAE;gBACzEzE,QAAQJ,YAAYI,MAAM;gBAC1BuE,UAAU2C,QAAQ3C,QAAQ;gBAC1BG,UAAUwC,QAAQxC,QAAQ;YAC5B;QACF;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c7abfb9989fea6f1494166ff11d71d24ea1fb699"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_8r5qg2g7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_8r5qg2g7();
cov_8r5qg2g7().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_8r5qg2g7().f[0]++;
  cov_8r5qg2g7().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_8r5qg2g7().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_8r5qg2g7().s[3]++;
_export(exports, {
  get AnomalyDetector() {
    /* istanbul ignore next */
    cov_8r5qg2g7().f[1]++;
    cov_8r5qg2g7().s[4]++;
    return AnomalyDetector;
  },
  get analyzeSessionForAnomalies() {
    /* istanbul ignore next */
    cov_8r5qg2g7().f[2]++;
    cov_8r5qg2g7().s[5]++;
    return analyzeSessionForAnomalies;
  }
});
const _supabase =
/* istanbul ignore next */
(cov_8r5qg2g7().s[6]++, require("../integrations/supabase"));
class AnomalyDetector {
  static getInstance() {
    /* istanbul ignore next */
    cov_8r5qg2g7().f[3]++;
    cov_8r5qg2g7().s[7]++;
    if (!AnomalyDetector.instance) {
      /* istanbul ignore next */
      cov_8r5qg2g7().b[0][0]++;
      cov_8r5qg2g7().s[8]++;
      AnomalyDetector.instance = new AnomalyDetector();
    } else
    /* istanbul ignore next */
    {
      cov_8r5qg2g7().b[0][1]++;
    }
    cov_8r5qg2g7().s[9]++;
    return AnomalyDetector.instance;
  }
  // Analizar nueva sesión para detectar anomalías
  async analyzeSession(sessionData) {
    /* istanbul ignore next */
    cov_8r5qg2g7().f[4]++;
    const anomalies =
    /* istanbul ignore next */
    (cov_8r5qg2g7().s[10]++, []);
    /* istanbul ignore next */
    cov_8r5qg2g7().s[11]++;
    try {
      // Obtener patrón de comportamiento del usuario
      const userPattern =
      /* istanbul ignore next */
      (cov_8r5qg2g7().s[12]++, await this.getUserBehaviorPattern(sessionData.userId));
      // Detectar IP nueva o sospechosa
      const ipAnomaly =
      /* istanbul ignore next */
      (cov_8r5qg2g7().s[13]++, await this.detectIPAnomaly(sessionData, userPattern));
      /* istanbul ignore next */
      cov_8r5qg2g7().s[14]++;
      if (ipAnomaly.isAnomalous) {
        /* istanbul ignore next */
        cov_8r5qg2g7().b[1][0]++;
        cov_8r5qg2g7().s[15]++;
        anomalies.push(ipAnomaly);
      } else
      /* istanbul ignore next */
      {
        cov_8r5qg2g7().b[1][1]++;
      }
      // Detectar dispositivo nuevo
      const deviceAnomaly =
      /* istanbul ignore next */
      (cov_8r5qg2g7().s[16]++, await this.detectDeviceAnomaly(sessionData, userPattern));
      /* istanbul ignore next */
      cov_8r5qg2g7().s[17]++;
      if (deviceAnomaly.isAnomalous) {
        /* istanbul ignore next */
        cov_8r5qg2g7().b[2][0]++;
        cov_8r5qg2g7().s[18]++;
        anomalies.push(deviceAnomaly);
      } else
      /* istanbul ignore next */
      {
        cov_8r5qg2g7().b[2][1]++;
      }
      // Detectar horario inusual
      const timeAnomaly =
      /* istanbul ignore next */
      (cov_8r5qg2g7().s[19]++, await this.detectTimeAnomaly(sessionData, userPattern));
      /* istanbul ignore next */
      cov_8r5qg2g7().s[20]++;
      if (timeAnomaly.isAnomalous) {
        /* istanbul ignore next */
        cov_8r5qg2g7().b[3][0]++;
        cov_8r5qg2g7().s[21]++;
        anomalies.push(timeAnomaly);
      } else
      /* istanbul ignore next */
      {
        cov_8r5qg2g7().b[3][1]++;
      }
      // Detectar múltiples sesiones simultáneas
      const concurrentAnomaly =
      /* istanbul ignore next */
      (cov_8r5qg2g7().s[22]++, await this.detectConcurrentSessionsAnomaly(sessionData));
      /* istanbul ignore next */
      cov_8r5qg2g7().s[23]++;
      if (concurrentAnomaly.isAnomalous) {
        /* istanbul ignore next */
        cov_8r5qg2g7().b[4][0]++;
        cov_8r5qg2g7().s[24]++;
        anomalies.push(concurrentAnomaly);
      } else
      /* istanbul ignore next */
      {
        cov_8r5qg2g7().b[4][1]++;
      }
      // Detectar velocidad de viaje imposible
      const travelAnomaly =
      /* istanbul ignore next */
      (cov_8r5qg2g7().s[25]++, await this.detectImpossibleTravelAnomaly(sessionData, userPattern));
      /* istanbul ignore next */
      cov_8r5qg2g7().s[26]++;
      if (travelAnomaly.isAnomalous) {
        /* istanbul ignore next */
        cov_8r5qg2g7().b[5][0]++;
        cov_8r5qg2g7().s[27]++;
        anomalies.push(travelAnomaly);
      } else
      /* istanbul ignore next */
      {
        cov_8r5qg2g7().b[5][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_8r5qg2g7().s[28]++;
      console.error('Error en detección de anomalías:', error);
    }
    /* istanbul ignore next */
    cov_8r5qg2g7().s[29]++;
    return anomalies;
  }
  // Obtener patrón de comportamiento del usuario
  async getUserBehaviorPattern(userId) {
    /* istanbul ignore next */
    cov_8r5qg2g7().f[5]++;
    const thirtyDaysAgo =
    /* istanbul ignore next */
    (cov_8r5qg2g7().s[30]++, new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString());
    // Obtener sesiones de los últimos 30 días
    const {
      data: sessions
    } =
    /* istanbul ignore next */
    (cov_8r5qg2g7().s[31]++, await _supabase.supabaseAdmin.from('user_sessions').select('*').eq('user_id', userId).gte('created_at', thirtyDaysAgo));
    /* istanbul ignore next */
    cov_8r5qg2g7().s[32]++;
    if (
    /* istanbul ignore next */
    (cov_8r5qg2g7().b[7][0]++, !sessions) ||
    /* istanbul ignore next */
    (cov_8r5qg2g7().b[7][1]++, sessions.length === 0)) {
      /* istanbul ignore next */
      cov_8r5qg2g7().b[6][0]++;
      cov_8r5qg2g7().s[33]++;
      return {
        userId,
        commonIPs: [],
        commonDevices: [],
        commonLocations: [],
        typicalLoginHours: [],
        averageSessionDuration: 0,
        lastSeenDevices: []
      };
    } else
    /* istanbul ignore next */
    {
      cov_8r5qg2g7().b[6][1]++;
    }
    // Analizar IPs comunes
    const ipCounts =
    /* istanbul ignore next */
    (cov_8r5qg2g7().s[34]++, sessions.reduce((acc, session) => {
      /* istanbul ignore next */
      cov_8r5qg2g7().f[6]++;
      cov_8r5qg2g7().s[35]++;
      acc[session.ip_address] = (
      /* istanbul ignore next */
      (cov_8r5qg2g7().b[8][0]++, acc[session.ip_address]) ||
      /* istanbul ignore next */
      (cov_8r5qg2g7().b[8][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_8r5qg2g7().s[36]++;
      return acc;
    }, {}));
    const commonIPs =
    /* istanbul ignore next */
    (cov_8r5qg2g7().s[37]++, Object.entries(ipCounts).filter(([_, count]) => {
      /* istanbul ignore next */
      cov_8r5qg2g7().f[7]++;
      cov_8r5qg2g7().s[38]++;
      return count >= 3;
    }).map(([ip]) => {
      /* istanbul ignore next */
      cov_8r5qg2g7().f[8]++;
      cov_8r5qg2g7().s[39]++;
      return ip;
    }));
    // Analizar dispositivos comunes
    const deviceCounts =
    /* istanbul ignore next */
    (cov_8r5qg2g7().s[40]++, sessions.reduce((acc, session) => {
      /* istanbul ignore next */
      cov_8r5qg2g7().f[9]++;
      cov_8r5qg2g7().s[41]++;
      acc[session.device_name] = (
      /* istanbul ignore next */
      (cov_8r5qg2g7().b[9][0]++, acc[session.device_name]) ||
      /* istanbul ignore next */
      (cov_8r5qg2g7().b[9][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_8r5qg2g7().s[42]++;
      return acc;
    }, {}));
    const commonDevices =
    /* istanbul ignore next */
    (cov_8r5qg2g7().s[43]++, Object.entries(deviceCounts).filter(([_, count]) => {
      /* istanbul ignore next */
      cov_8r5qg2g7().f[10]++;
      cov_8r5qg2g7().s[44]++;
      return count >= 2;
    }).map(([device]) => {
      /* istanbul ignore next */
      cov_8r5qg2g7().f[11]++;
      cov_8r5qg2g7().s[45]++;
      return device;
    }));
    // Analizar horarios típicos
    const loginHours =
    /* istanbul ignore next */
    (cov_8r5qg2g7().s[46]++, sessions.map(session => {
      /* istanbul ignore next */
      cov_8r5qg2g7().f[12]++;
      cov_8r5qg2g7().s[47]++;
      return new Date(session.created_at).getHours();
    }));
    const hourCounts =
    /* istanbul ignore next */
    (cov_8r5qg2g7().s[48]++, loginHours.reduce((acc, hour) => {
      /* istanbul ignore next */
      cov_8r5qg2g7().f[13]++;
      cov_8r5qg2g7().s[49]++;
      acc[hour] = (
      /* istanbul ignore next */
      (cov_8r5qg2g7().b[10][0]++, acc[hour]) ||
      /* istanbul ignore next */
      (cov_8r5qg2g7().b[10][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_8r5qg2g7().s[50]++;
      return acc;
    }, {}));
    const typicalLoginHours =
    /* istanbul ignore next */
    (cov_8r5qg2g7().s[51]++, Object.entries(hourCounts).filter(([_, count]) => {
      /* istanbul ignore next */
      cov_8r5qg2g7().f[14]++;
      cov_8r5qg2g7().s[52]++;
      return count >= 2;
    }).map(([hour]) => {
      /* istanbul ignore next */
      cov_8r5qg2g7().f[15]++;
      cov_8r5qg2g7().s[53]++;
      return parseInt(hour);
    }));
    // Calcular duración promedio de sesión
    const sessionDurations =
    /* istanbul ignore next */
    (cov_8r5qg2g7().s[54]++, sessions.map(session => {
      /* istanbul ignore next */
      cov_8r5qg2g7().f[16]++;
      const created =
      /* istanbul ignore next */
      (cov_8r5qg2g7().s[55]++, new Date(session.created_at).getTime());
      const lastActivity =
      /* istanbul ignore next */
      (cov_8r5qg2g7().s[56]++, new Date(session.last_activity).getTime());
      /* istanbul ignore next */
      cov_8r5qg2g7().s[57]++;
      return lastActivity - created;
    }));
    const averageSessionDuration =
    /* istanbul ignore next */
    (cov_8r5qg2g7().s[58]++, sessionDurations.length > 0 ?
    /* istanbul ignore next */
    (cov_8r5qg2g7().b[11][0]++, sessionDurations.reduce((a, b) => {
      /* istanbul ignore next */
      cov_8r5qg2g7().f[17]++;
      cov_8r5qg2g7().s[59]++;
      return a + b;
    }, 0) / sessionDurations.length) :
    /* istanbul ignore next */
    (cov_8r5qg2g7().b[11][1]++, 0));
    // Dispositivos vistos recientemente
    const lastSeenDevices =
    /* istanbul ignore next */
    (cov_8r5qg2g7().s[60]++, Object.entries(deviceCounts).map(([device, count]) => {
      /* istanbul ignore next */
      cov_8r5qg2g7().f[18]++;
      cov_8r5qg2g7().s[61]++;
      return {
        deviceName: device,
        lastSeen:
        /* istanbul ignore next */
        (cov_8r5qg2g7().b[12][0]++, sessions.filter(s => {
          /* istanbul ignore next */
          cov_8r5qg2g7().f[19]++;
          cov_8r5qg2g7().s[62]++;
          return s.device_name === device;
        }).sort((a, b) => {
          /* istanbul ignore next */
          cov_8r5qg2g7().f[20]++;
          cov_8r5qg2g7().s[63]++;
          return new Date(b.last_activity).getTime() - new Date(a.last_activity).getTime();
        })[0]?.last_activity) ||
        /* istanbul ignore next */
        (cov_8r5qg2g7().b[12][1]++, ''),
        trustLevel: Math.min(count / 10, 1)
      };
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_8r5qg2g7().f[21]++;
      cov_8r5qg2g7().s[64]++;
      return new Date(b.lastSeen).getTime() - new Date(a.lastSeen).getTime();
    }));
    /* istanbul ignore next */
    cov_8r5qg2g7().s[65]++;
    return {
      userId,
      commonIPs,
      commonDevices,
      commonLocations: [],
      typicalLoginHours,
      averageSessionDuration,
      lastSeenDevices
    };
  }
  // Detectar anomalía de IP
  async detectIPAnomaly(sessionData, userPattern) {
    /* istanbul ignore next */
    cov_8r5qg2g7().f[22]++;
    const isNewIP =
    /* istanbul ignore next */
    (cov_8r5qg2g7().s[66]++, !userPattern.commonIPs.includes(sessionData.ipAddress));
    /* istanbul ignore next */
    cov_8r5qg2g7().s[67]++;
    if (
    /* istanbul ignore next */
    (cov_8r5qg2g7().b[14][0]++, isNewIP) &&
    /* istanbul ignore next */
    (cov_8r5qg2g7().b[14][1]++, userPattern.commonIPs.length > 0)) {
      /* istanbul ignore next */
      cov_8r5qg2g7().b[13][0]++;
      cov_8r5qg2g7().s[68]++;
      return {
        isAnomalous: true,
        severity: 'medium',
        type: 'new_ip_address',
        description: 'Inicio de sesión desde una nueva dirección IP',
        metadata: {
          newIP: sessionData.ipAddress,
          knownIPs: userPattern.commonIPs,
          sessionId: sessionData.sessionId
        },
        recommendations: ['Verificar si el inicio de sesión fue autorizado', 'Considerar marcar el dispositivo como confiable si es legítimo', 'Revisar actividad reciente en la cuenta']
      };
    } else
    /* istanbul ignore next */
    {
      cov_8r5qg2g7().b[13][1]++;
    }
    cov_8r5qg2g7().s[69]++;
    return {
      isAnomalous: false,
      severity: 'low',
      type: '',
      description: '',
      metadata: {},
      recommendations: []
    };
  }
  // Detectar anomalía de dispositivo
  async detectDeviceAnomaly(sessionData, userPattern) {
    /* istanbul ignore next */
    cov_8r5qg2g7().f[23]++;
    const deviceName =
    /* istanbul ignore next */
    (cov_8r5qg2g7().s[70]++, `${sessionData.deviceType} ${sessionData.userAgent.split(' ')[0]}`);
    const isNewDevice =
    /* istanbul ignore next */
    (cov_8r5qg2g7().s[71]++, !userPattern.commonDevices.some(device => {
      /* istanbul ignore next */
      cov_8r5qg2g7().f[24]++;
      cov_8r5qg2g7().s[72]++;
      return device.toLowerCase().includes(sessionData.deviceType.toLowerCase());
    }));
    /* istanbul ignore next */
    cov_8r5qg2g7().s[73]++;
    if (
    /* istanbul ignore next */
    (cov_8r5qg2g7().b[16][0]++, isNewDevice) &&
    /* istanbul ignore next */
    (cov_8r5qg2g7().b[16][1]++, userPattern.commonDevices.length > 0)) {
      /* istanbul ignore next */
      cov_8r5qg2g7().b[15][0]++;
      cov_8r5qg2g7().s[74]++;
      return {
        isAnomalous: true,
        severity: 'medium',
        type: 'new_device',
        description: 'Inicio de sesión desde un nuevo dispositivo',
        metadata: {
          newDevice: deviceName,
          deviceType: sessionData.deviceType,
          userAgent: sessionData.userAgent,
          knownDevices: userPattern.commonDevices
        },
        recommendations: ['Verificar si el dispositivo es de confianza', 'Considerar activar autenticación de dos factores', 'Revisar configuración de alertas de seguridad']
      };
    } else
    /* istanbul ignore next */
    {
      cov_8r5qg2g7().b[15][1]++;
    }
    cov_8r5qg2g7().s[75]++;
    return {
      isAnomalous: false,
      severity: 'low',
      type: '',
      description: '',
      metadata: {},
      recommendations: []
    };
  }
  // Detectar anomalía de horario
  async detectTimeAnomaly(sessionData, userPattern) {
    /* istanbul ignore next */
    cov_8r5qg2g7().f[25]++;
    const loginHour =
    /* istanbul ignore next */
    (cov_8r5qg2g7().s[76]++, new Date(sessionData.timestamp).getHours());
    const isUnusualTime =
    /* istanbul ignore next */
    (cov_8r5qg2g7().s[77]++,
    /* istanbul ignore next */
    (cov_8r5qg2g7().b[17][0]++, userPattern.typicalLoginHours.length > 0) &&
    /* istanbul ignore next */
    (cov_8r5qg2g7().b[17][1]++, !userPattern.typicalLoginHours.includes(loginHour)));
    // Solo considerar anómalo si es muy fuera del patrón (más de 6 horas de diferencia)
    /* istanbul ignore next */
    cov_8r5qg2g7().s[78]++;
    if (
    /* istanbul ignore next */
    (cov_8r5qg2g7().b[19][0]++, isUnusualTime) &&
    /* istanbul ignore next */
    (cov_8r5qg2g7().b[19][1]++, userPattern.typicalLoginHours.length >= 5)) {
      /* istanbul ignore next */
      cov_8r5qg2g7().b[18][0]++;
      const hourDifferences =
      /* istanbul ignore next */
      (cov_8r5qg2g7().s[79]++, userPattern.typicalLoginHours.map(hour => {
        /* istanbul ignore next */
        cov_8r5qg2g7().f[26]++;
        cov_8r5qg2g7().s[80]++;
        return Math.min(Math.abs(hour - loginHour), 24 - Math.abs(hour - loginHour));
      }));
      const minDifference =
      /* istanbul ignore next */
      (cov_8r5qg2g7().s[81]++, Math.min(...hourDifferences));
      /* istanbul ignore next */
      cov_8r5qg2g7().s[82]++;
      if (minDifference >= 6) {
        /* istanbul ignore next */
        cov_8r5qg2g7().b[20][0]++;
        cov_8r5qg2g7().s[83]++;
        return {
          isAnomalous: true,
          severity: 'low',
          type: 'unusual_time',
          description: 'Inicio de sesión en horario inusual',
          metadata: {
            loginHour,
            typicalHours: userPattern.typicalLoginHours,
            hourDifference: minDifference
          },
          recommendations: ['Verificar si el horario corresponde a tu zona horaria', 'Considerar si estás viajando o en una ubicación diferente']
        };
      } else
      /* istanbul ignore next */
      {
        cov_8r5qg2g7().b[20][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_8r5qg2g7().b[18][1]++;
    }
    cov_8r5qg2g7().s[84]++;
    return {
      isAnomalous: false,
      severity: 'low',
      type: '',
      description: '',
      metadata: {},
      recommendations: []
    };
  }
  // Detectar múltiples sesiones concurrentes
  async detectConcurrentSessionsAnomaly(sessionData) {
    /* istanbul ignore next */
    cov_8r5qg2g7().f[27]++;
    const {
      data: activeSessions
    } =
    /* istanbul ignore next */
    (cov_8r5qg2g7().s[85]++, await _supabase.supabaseAdmin.from('user_sessions').select('id, ip_address, device_name').eq('user_id', sessionData.userId).gte('last_activity', new Date(Date.now() - 60 * 60 * 1000).toISOString())); // Últimas 1 hora
    /* istanbul ignore next */
    cov_8r5qg2g7().s[86]++;
    if (
    /* istanbul ignore next */
    (cov_8r5qg2g7().b[22][0]++, activeSessions) &&
    /* istanbul ignore next */
    (cov_8r5qg2g7().b[22][1]++, activeSessions.length > 3)) {
      /* istanbul ignore next */
      cov_8r5qg2g7().b[21][0]++;
      const uniqueIPs =
      /* istanbul ignore next */
      (cov_8r5qg2g7().s[87]++, new Set(activeSessions.map(s => {
        /* istanbul ignore next */
        cov_8r5qg2g7().f[28]++;
        cov_8r5qg2g7().s[88]++;
        return s.ip_address;
      })).size);
      const uniqueDevices =
      /* istanbul ignore next */
      (cov_8r5qg2g7().s[89]++, new Set(activeSessions.map(s => {
        /* istanbul ignore next */
        cov_8r5qg2g7().f[29]++;
        cov_8r5qg2g7().s[90]++;
        return s.device_name;
      })).size);
      /* istanbul ignore next */
      cov_8r5qg2g7().s[91]++;
      if (
      /* istanbul ignore next */
      (cov_8r5qg2g7().b[24][0]++, uniqueIPs > 2) ||
      /* istanbul ignore next */
      (cov_8r5qg2g7().b[24][1]++, uniqueDevices > 3)) {
        /* istanbul ignore next */
        cov_8r5qg2g7().b[23][0]++;
        cov_8r5qg2g7().s[92]++;
        return {
          isAnomalous: true,
          severity: 'high',
          type: 'multiple_concurrent_sessions',
          description: 'Múltiples sesiones activas desde diferentes ubicaciones o dispositivos',
          metadata: {
            totalSessions: activeSessions.length,
            uniqueIPs,
            uniqueDevices,
            sessions: activeSessions
          },
          recommendations: ['Revisar todas las sesiones activas', 'Cerrar sesiones no autorizadas', 'Cambiar contraseña si es necesario', 'Activar autenticación de dos factores']
        };
      } else
      /* istanbul ignore next */
      {
        cov_8r5qg2g7().b[23][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_8r5qg2g7().b[21][1]++;
    }
    cov_8r5qg2g7().s[93]++;
    return {
      isAnomalous: false,
      severity: 'low',
      type: '',
      description: '',
      metadata: {},
      recommendations: []
    };
  }
  // Detectar viaje imposible (placeholder - requiere geolocalización)
  async detectImpossibleTravelAnomaly(sessionData, userPattern) {
    /* istanbul ignore next */
    cov_8r5qg2g7().f[30]++;
    // TODO: Implementar detección de viaje imposible con geolocalización
    // Por ahora, solo detectamos cambios rápidos de IP
    const {
      data: recentSessions
    } =
    /* istanbul ignore next */
    (cov_8r5qg2g7().s[94]++, await _supabase.supabaseAdmin.from('user_sessions').select('ip_address, created_at').eq('user_id', sessionData.userId).gte('created_at', new Date(Date.now() - 60 * 60 * 1000).toISOString()) // Última hora
    .neq('ip_address', sessionData.ipAddress).order('created_at', {
      ascending: false
    }).limit(1));
    /* istanbul ignore next */
    cov_8r5qg2g7().s[95]++;
    if (
    /* istanbul ignore next */
    (cov_8r5qg2g7().b[26][0]++, recentSessions) &&
    /* istanbul ignore next */
    (cov_8r5qg2g7().b[26][1]++, recentSessions.length > 0)) {
      /* istanbul ignore next */
      cov_8r5qg2g7().b[25][0]++;
      const lastSession =
      /* istanbul ignore next */
      (cov_8r5qg2g7().s[96]++, recentSessions[0]);
      const timeDiff =
      /* istanbul ignore next */
      (cov_8r5qg2g7().s[97]++, new Date(sessionData.timestamp).getTime() - new Date(lastSession.created_at).getTime());
      const timeDiffMinutes =
      /* istanbul ignore next */
      (cov_8r5qg2g7().s[98]++, timeDiff / (1000 * 60));
      // Si hay cambio de IP en menos de 30 minutos, podría ser sospechoso
      /* istanbul ignore next */
      cov_8r5qg2g7().s[99]++;
      if (timeDiffMinutes < 30) {
        /* istanbul ignore next */
        cov_8r5qg2g7().b[27][0]++;
        cov_8r5qg2g7().s[100]++;
        return {
          isAnomalous: true,
          severity: 'medium',
          type: 'rapid_location_change',
          description: 'Cambio rápido de ubicación detectado',
          metadata: {
            previousIP: lastSession.ip_address,
            currentIP: sessionData.ipAddress,
            timeDifferenceMinutes: Math.round(timeDiffMinutes)
          },
          recommendations: ['Verificar si estás usando VPN o proxy', 'Confirmar que ambos inicios de sesión son legítimos', 'Revisar configuración de red']
        };
      } else
      /* istanbul ignore next */
      {
        cov_8r5qg2g7().b[27][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_8r5qg2g7().b[25][1]++;
    }
    cov_8r5qg2g7().s[101]++;
    return {
      isAnomalous: false,
      severity: 'low',
      type: '',
      description: '',
      metadata: {},
      recommendations: []
    };
  }
  // Crear alerta de seguridad
  async createSecurityAlert(userId, anomaly) {
    /* istanbul ignore next */
    cov_8r5qg2g7().f[31]++;
    cov_8r5qg2g7().s[102]++;
    try {
      /* istanbul ignore next */
      cov_8r5qg2g7().s[103]++;
      await _supabase.supabaseAdmin.from('user_security_alerts').insert({
        user_id: userId,
        type: anomaly.type,
        severity: anomaly.severity,
        title: anomaly.description,
        description: `${anomaly.description}. ${anomaly.recommendations.join(' ')}`,
        metadata: anomaly.metadata
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_8r5qg2g7().s[104]++;
      console.error('Error creando alerta de seguridad:', error);
    }
  }
}
async function analyzeSessionForAnomalies(sessionData) {
  /* istanbul ignore next */
  cov_8r5qg2g7().f[32]++;
  const detector =
  /* istanbul ignore next */
  (cov_8r5qg2g7().s[105]++, AnomalyDetector.getInstance());
  const anomalies =
  /* istanbul ignore next */
  (cov_8r5qg2g7().s[106]++, await detector.analyzeSession(sessionData));
  // Crear alertas para anomalías detectadas
  /* istanbul ignore next */
  cov_8r5qg2g7().s[107]++;
  for (const anomaly of anomalies) {
    /* istanbul ignore next */
    cov_8r5qg2g7().s[108]++;
    if (anomaly.isAnomalous) {
      /* istanbul ignore next */
      cov_8r5qg2g7().b[28][0]++;
      cov_8r5qg2g7().s[109]++;
      await detector.createSecurityAlert(sessionData.userId, anomaly);
      // Log para debugging
      /* istanbul ignore next */
      cov_8r5qg2g7().s[110]++;
      console.log(`[ANOMALY DETECTED] ${anomaly.type} - ${anomaly.description}`, {
        userId: sessionData.userId,
        severity: anomaly.severity,
        metadata: anomaly.metadata
      });
    } else
    /* istanbul ignore next */
    {
      cov_8r5qg2g7().b[28][1]++;
    }
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,