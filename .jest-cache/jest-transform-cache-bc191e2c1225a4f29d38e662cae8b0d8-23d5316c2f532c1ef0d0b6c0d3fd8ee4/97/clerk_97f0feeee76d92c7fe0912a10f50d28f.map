{"version":3,"names":["cov_dqrf62h3d","actualCoverage","s","deleteUserFromSupabase","f","getAuthUser","getAuthUserId","getUserFromSupabase","isUserAuthenticated","protectedApiRoutes","protectedRoutes","publicRoutes","syncUserWithSupabase","session","_config","auth","b","user","error","console","id","_supabase","supabaseAdmin","Error","userData","email","name","image","updated_at","Date","toISOString","from","upsert","onConflict","ignoreDuplicates","userId","data","select","eq","single","code","delete"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\clerk.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - CONFIGURACIÓN NEXTAUTH.JS\r\n// ===================================\r\n// 🚨 MIGRADO DE CLERK A NEXTAUTH.JS - 21/08/2025\r\n\r\nimport { auth } from '@/lib/auth/config';\r\nimport { supabaseAdmin } from './supabase';\r\n\r\n// ===================================\r\n// FUNCIONES DE AUTENTICACIÓN\r\n// ===================================\r\n\r\n/**\r\n * Obtiene el usuario autenticado actual\r\n * @returns Promise<any | null>\r\n */\r\nexport async function getAuthUser(): Promise<any | null> {\r\n  try {\r\n    const session = await auth();\r\n    return session?.user || null;\r\n  } catch (error) {\r\n    console.error('Error obteniendo usuario autenticado:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Obtiene el ID del usuario autenticado\r\n * @returns string | null\r\n */\r\nexport async function getAuthUserId(): Promise<string | null> {\r\n  try {\r\n    const session = await auth();\r\n    return session?.user?.id || null;\r\n  } catch (error) {\r\n    console.error('Error obteniendo ID de usuario:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Verifica si el usuario está autenticado\r\n * @returns boolean\r\n */\r\nexport async function isUserAuthenticated(): Promise<boolean> {\r\n  try {\r\n    const session = await auth();\r\n    return !!session?.user;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\n// ===================================\r\n// SINCRONIZACIÓN CON SUPABASE\r\n// ===================================\r\n// 🚨 FUNCIONES TEMPORALMENTE DESHABILITADAS - Migración a NextAuth.js\r\n\r\ninterface NextAuthUser {\r\n  id: string;\r\n  email: string;\r\n  name?: string | null;\r\n  image?: string | null;\r\n}\r\n\r\n/**\r\n * Sincroniza un usuario de NextAuth.js con Supabase\r\n * @param user - Usuario de NextAuth.js\r\n * @returns Promise<void>\r\n */\r\nexport async function syncUserWithSupabase(user: NextAuthUser): Promise<void> {\r\n  if (!supabaseAdmin) {\r\n    throw new Error('Cliente administrativo de Supabase no disponible');\r\n  }\r\n\r\n  try {\r\n    const userData = {\r\n      id: user.id,\r\n      email: user.email,\r\n      name: user.name,\r\n      image: user.image,\r\n      updated_at: new Date().toISOString(),\r\n    };\r\n\r\n    // Intentar insertar o actualizar el usuario\r\n    const { error } = await supabaseAdmin\r\n      .from('users')\r\n      .upsert(userData, {\r\n        onConflict: 'id',\r\n        ignoreDuplicates: false,\r\n      });\r\n\r\n    if (error) {\r\n      console.error('Error sincronizando usuario con Supabase:', error);\r\n      throw error;\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Error en sincronización de usuario:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Obtiene los datos del usuario desde Supabase usando el ID de NextAuth\r\n * @param userId - ID del usuario en NextAuth\r\n * @returns Promise<any>\r\n */\r\nexport async function getUserFromSupabase(userId: string) {\r\n  if (!supabaseAdmin) {\r\n    throw new Error('Cliente administrativo de Supabase no disponible');\r\n  }\r\n\r\n  try {\r\n    const { data, error } = await supabaseAdmin\r\n      .from('users')\r\n      .select('*')\r\n      .eq('id', userId)\r\n      .single();\r\n\r\n    if (error && error.code !== 'PGRST116') {\r\n      throw error;\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error obteniendo usuario de Supabase:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Elimina un usuario de Supabase usando el ID de NextAuth\r\n * @param userId - ID del usuario en NextAuth\r\n * @returns Promise<void>\r\n */\r\nexport async function deleteUserFromSupabase(userId: string): Promise<void> {\r\n  if (!supabaseAdmin) {\r\n    throw new Error('Cliente administrativo de Supabase no disponible');\r\n  }\r\n\r\n  try {\r\n    const { error } = await supabaseAdmin\r\n      .from('users')\r\n      .delete()\r\n      .eq('id', userId);\r\n\r\n    if (error) {\r\n      console.error('Error eliminando usuario de Supabase:', error);\r\n      throw error;\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Error en eliminación de usuario:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// ===================================\r\n// MIDDLEWARE HELPERS\r\n// ===================================\r\n\r\n/**\r\n * Rutas públicas que no requieren autenticación\r\n */\r\nexport const publicRoutes = [\r\n  '/',\r\n  '/shop',\r\n  '/shop/(.*)',\r\n  '/products/(.*)',\r\n  '/signin',\r\n  '/signup',\r\n  '/api/products',\r\n  '/api/products/(.*)',\r\n  '/api/categories',\r\n  '/api/auth/webhook',\r\n];\r\n\r\n/**\r\n * Rutas que requieren autenticación\r\n */\r\nexport const protectedRoutes = [\r\n  '/checkout',\r\n  // ELIMINADO: '/my-account' y '/my-account/(.*)' - Ruta completamente removida del sistema\r\n  '/orders',\r\n  '/orders/(.*)',\r\n  '/wishlist',\r\n];\r\n\r\n/**\r\n * Rutas de API que requieren autenticación\r\n */\r\nexport const protectedApiRoutes = [\r\n  '/api/orders',\r\n  '/api/orders/(.*)',\r\n  '/api/user/(.*)',\r\n  '/api/payments/(.*)',\r\n];\r\n\r\n// ===================================\r\n// TIPOS\r\n// ===================================\r\nexport interface AuthenticatedUser {\r\n  id: string;\r\n  email: string;\r\n  name?: string;\r\n  image?: string;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappingsqIsB;IAAAA,aAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;AAAAA,aAAA,GAAAE,CAAA;;;;;;;;;;;;;;;;;;;;MAAAC,uBAAA;IAAA;IAAAH,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAAC,sBAAA;;MAxHAE,YAAA;IAAA;IAAAL,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAAG,WAAA;;MAcAC,cAAA;IAAA;IAAAN,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAAI,aAAA;;MA8EAC,oBAAA;IAAA;IAAAP,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAAK,mBAAA;;MAhEAC,oBAAA;IAAA;IAAAR,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAAM,mBAAA;;MAoJTC,mBAAA;IAAA;IAAAT,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAAO,kBAAA;;MAXAC,gBAAA;IAAA;IAAAV,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAAQ,eAAA;;MAhBAC,aAAA;IAAA;IAAAX,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAAS,YAAA;;MA/FSC,qBAAA;IAAA;IAAAZ,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAAU,oBAAA;;;;;kCAjED;;;kCACS;AAUvB,eAAeP,YAAA;EAAA;EAAAL,aAAA,GAAAI,CAAA;EAAAJ,aAAA,GAAAE,CAAA;EACpB,IAAI;IACF,MAAMW,OAAA;IAAA;IAAA,CAAAb,aAAA,GAAAE,CAAA,QAAU,MAAM,IAAAY,OAAA,CAAAC,IAAI;IAAA;IAAAf,aAAA,GAAAE,CAAA;IAC1B,OAAO,2BAAAF,aAAA,GAAAgB,CAAA,UAAAH,OAAA,EAASI,IAAA;IAAA;IAAA,CAAAjB,aAAA,GAAAgB,CAAA,UAAQ;EAC1B,EAAE,OAAOE,KAAA,EAAO;IAAA;IAAAlB,aAAA,GAAAE,CAAA;IACdiB,OAAA,CAAQD,KAAK,CAAC,yCAAyCA,KAAA;IAAA;IAAAlB,aAAA,GAAAE,CAAA;IACvD,OAAO;EACT;AACF;AAMO,eAAeI,cAAA;EAAA;EAAAN,aAAA,GAAAI,CAAA;EAAAJ,aAAA,GAAAE,CAAA;EACpB,IAAI;IACF,MAAMW,OAAA;IAAA;IAAA,CAAAb,aAAA,GAAAE,CAAA,QAAU,MAAM,IAAAY,OAAA,CAAAC,IAAI;IAAA;IAAAf,aAAA,GAAAE,CAAA;IAC1B,OAAO,2BAAAF,aAAA,GAAAgB,CAAA,UAAAH,OAAA,EAASI,IAAA,EAAMG,EAAA;IAAA;IAAA,CAAApB,aAAA,GAAAgB,CAAA,UAAM;EAC9B,EAAE,OAAOE,KAAA,EAAO;IAAA;IAAAlB,aAAA,GAAAE,CAAA;IACdiB,OAAA,CAAQD,KAAK,CAAC,mCAAmCA,KAAA;IAAA;IAAAlB,aAAA,GAAAE,CAAA;IACjD,OAAO;EACT;AACF;AAMO,eAAeM,oBAAA;EAAA;EAAAR,aAAA,GAAAI,CAAA;EAAAJ,aAAA,GAAAE,CAAA;EACpB,IAAI;IACF,MAAMW,OAAA;IAAA;IAAA,CAAAb,aAAA,GAAAE,CAAA,QAAU,MAAM,IAAAY,OAAA,CAAAC,IAAI;IAAA;IAAAf,aAAA,GAAAE,CAAA;IAC1B,OAAO,CAAC,CAACW,OAAA,EAASI,IAAA;EACpB,EAAE,MAAM;IAAA;IAAAjB,aAAA,GAAAE,CAAA;IACN,OAAO;EACT;AACF;AAmBO,eAAeU,qBAAqBK,IAAkB;EAAA;EAAAjB,aAAA,GAAAI,CAAA;EAAAJ,aAAA,GAAAE,CAAA;EAC3D,IAAI,CAACmB,SAAA,CAAAC,aAAa,EAAE;IAAA;IAAAtB,aAAA,GAAAgB,CAAA;IAAAhB,aAAA,GAAAE,CAAA;IAClB,MAAM,IAAIqB,KAAA,CAAM;EAClB;EAAA;EAAA;IAAAvB,aAAA,GAAAgB,CAAA;EAAA;EAAAhB,aAAA,GAAAE,CAAA;EAEA,IAAI;IACF,MAAMsB,QAAA;IAAA;IAAA,CAAAxB,aAAA,GAAAE,CAAA,QAAW;MACfkB,EAAA,EAAIH,IAAA,CAAKG,EAAE;MACXK,KAAA,EAAOR,IAAA,CAAKQ,KAAK;MACjBC,IAAA,EAAMT,IAAA,CAAKS,IAAI;MACfC,KAAA,EAAOV,IAAA,CAAKU,KAAK;MACjBC,UAAA,EAAY,IAAIC,IAAA,GAAOC,WAAW;IACpC;IAEA;IACA,MAAM;MAAEZ;IAAK,CAAE;IAAA;IAAA,CAAAlB,aAAA,GAAAE,CAAA,QAAG,MAAMmB,SAAA,CAAAC,aAAa,CAClCS,IAAI,CAAC,SACLC,MAAM,CAACR,QAAA,EAAU;MAChBS,UAAA,EAAY;MACZC,gBAAA,EAAkB;IACpB;IAAA;IAAAlC,aAAA,GAAAE,CAAA;IAEF,IAAIgB,KAAA,EAAO;MAAA;MAAAlB,aAAA,GAAAgB,CAAA;MAAAhB,aAAA,GAAAE,CAAA;MACTiB,OAAA,CAAQD,KAAK,CAAC,6CAA6CA,KAAA;MAAA;MAAAlB,aAAA,GAAAE,CAAA;MAC3D,MAAMgB,KAAA;IACR;IAAA;IAAA;MAAAlB,aAAA,GAAAgB,CAAA;IAAA;EAEF,EAAE,OAAOE,KAAA,EAAO;IAAA;IAAAlB,aAAA,GAAAE,CAAA;IACdiB,OAAA,CAAQD,KAAK,CAAC,uCAAuCA,KAAA;IAAA;IAAAlB,aAAA,GAAAE,CAAA;IACrD,MAAMgB,KAAA;EACR;AACF;AAOO,eAAeX,oBAAoB4B,MAAc;EAAA;EAAAnC,aAAA,GAAAI,CAAA;EAAAJ,aAAA,GAAAE,CAAA;EACtD,IAAI,CAACmB,SAAA,CAAAC,aAAa,EAAE;IAAA;IAAAtB,aAAA,GAAAgB,CAAA;IAAAhB,aAAA,GAAAE,CAAA;IAClB,MAAM,IAAIqB,KAAA,CAAM;EAClB;EAAA;EAAA;IAAAvB,aAAA,GAAAgB,CAAA;EAAA;EAAAhB,aAAA,GAAAE,CAAA;EAEA,IAAI;IACF,MAAM;MAAEkC,IAAI;MAAElB;IAAK,CAAE;IAAA;IAAA,CAAAlB,aAAA,GAAAE,CAAA,QAAG,MAAMmB,SAAA,CAAAC,aAAa,CACxCS,IAAI,CAAC,SACLM,MAAM,CAAC,KACPC,EAAE,CAAC,MAAMH,MAAA,EACTI,MAAM;IAAA;IAAAvC,aAAA,GAAAE,CAAA;IAET;IAAI;IAAA,CAAAF,aAAA,GAAAgB,CAAA,UAAAE,KAAA;IAAA;IAAA,CAAAlB,aAAA,GAAAgB,CAAA,UAASE,KAAA,CAAMsB,IAAI,KAAK,aAAY;MAAA;MAAAxC,aAAA,GAAAgB,CAAA;MAAAhB,aAAA,GAAAE,CAAA;MACtC,MAAMgB,KAAA;IACR;IAAA;IAAA;MAAAlB,aAAA,GAAAgB,CAAA;IAAA;IAAAhB,aAAA,GAAAE,CAAA;IAEA,OAAOkC,IAAA;EACT,EAAE,OAAOlB,KAAA,EAAO;IAAA;IAAAlB,aAAA,GAAAE,CAAA;IACdiB,OAAA,CAAQD,KAAK,CAAC,yCAAyCA,KAAA;IAAA;IAAAlB,aAAA,GAAAE,CAAA;IACvD,OAAO;EACT;AACF;AAOO,eAAeC,uBAAuBgC,MAAc;EAAA;EAAAnC,aAAA,GAAAI,CAAA;EAAAJ,aAAA,GAAAE,CAAA;EACzD,IAAI,CAACmB,SAAA,CAAAC,aAAa,EAAE;IAAA;IAAAtB,aAAA,GAAAgB,CAAA;IAAAhB,aAAA,GAAAE,CAAA;IAClB,MAAM,IAAIqB,KAAA,CAAM;EAClB;EAAA;EAAA;IAAAvB,aAAA,GAAAgB,CAAA;EAAA;EAAAhB,aAAA,GAAAE,CAAA;EAEA,IAAI;IACF,MAAM;MAAEgB;IAAK,CAAE;IAAA;IAAA,CAAAlB,aAAA,GAAAE,CAAA,QAAG,MAAMmB,SAAA,CAAAC,aAAa,CAClCS,IAAI,CAAC,SACLU,MAAM,GACNH,EAAE,CAAC,MAAMH,MAAA;IAAA;IAAAnC,aAAA,GAAAE,CAAA;IAEZ,IAAIgB,KAAA,EAAO;MAAA;MAAAlB,aAAA,GAAAgB,CAAA;MAAAhB,aAAA,GAAAE,CAAA;MACTiB,OAAA,CAAQD,KAAK,CAAC,yCAAyCA,KAAA;MAAA;MAAAlB,aAAA,GAAAE,CAAA;MACvD,MAAMgB,KAAA;IACR;IAAA;IAAA;MAAAlB,aAAA,GAAAgB,CAAA;IAAA;EAEF,EAAE,OAAOE,KAAA,EAAO;IAAA;IAAAlB,aAAA,GAAAE,CAAA;IACdiB,OAAA,CAAQD,KAAK,CAAC,oCAAoCA,KAAA;IAAA;IAAAlB,aAAA,GAAAE,CAAA;IAClD,MAAMgB,KAAA;EACR;AACF;AASO,MAAMP,YAAA;AAAA;AAAA,CAAAX,aAAA,GAAAE,CAAA,QAAe,CAC1B,KACA,SACA,cACA,kBACA,WACA,WACA,iBACA,sBACA,mBACA,oBACD;AAKM,MAAMQ,eAAA;AAAA;AAAA,CAAAV,aAAA,GAAAE,CAAA,QAAkB,CAC7B;AACA;AACA,WACA,gBACA,YACD;AAKM,MAAMO,kBAAA;AAAA;AAAA,CAAAT,aAAA,GAAAE,CAAA,QAAqB,CAChC,eACA,oBACA,kBACA,qBACD","ignoreList":[]}