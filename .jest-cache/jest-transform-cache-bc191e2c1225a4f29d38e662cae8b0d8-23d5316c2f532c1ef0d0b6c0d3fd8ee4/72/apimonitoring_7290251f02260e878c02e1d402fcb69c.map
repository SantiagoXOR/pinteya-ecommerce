{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\utils\\api-monitoring.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - API MONITORING SYSTEM\r\n// Sistema de monitoreo para detectar problemas de renderizado y API\r\n// ===================================\r\n\r\ninterface ApiMonitoringEvent {\r\n  timestamp: string;\r\n  endpoint: string;\r\n  expectedCount: number;\r\n  actualCount: number;\r\n  discrepancy: number;\r\n  userAgent: string;\r\n  sessionId: string;\r\n}\r\n\r\ninterface RenderingIssue {\r\n  timestamp: string;\r\n  component: string;\r\n  expectedItems: number;\r\n  renderedItems: number;\r\n  filterCriteria?: Record<string, unknown>;\r\n  errorDetails?: string;\r\n}\r\n\r\nclass ApiMonitoringService {\r\n  private static instance: ApiMonitoringService;\r\n  private events: ApiMonitoringEvent[] = [];\r\n  private renderingIssues: RenderingIssue[] = [];\r\n  private sessionId: string;\r\n\r\n  constructor() {\r\n    this.sessionId = this.generateSessionId();\r\n  }\r\n\r\n  static getInstance(): ApiMonitoringService {\r\n    if (!ApiMonitoringService.instance) {\r\n      ApiMonitoringService.instance = new ApiMonitoringService();\r\n    }\r\n    return ApiMonitoringService.instance;\r\n  }\r\n\r\n  private generateSessionId(): string {\r\n    return `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  /**\r\n   * Registra una discrepancia entre datos de API y renderizado\r\n   */\r\n  recordApiDiscrepancy(\r\n    endpoint: string,\r\n    expectedCount: number,\r\n    actualCount: number\r\n  ): void {\r\n    const event: ApiMonitoringEvent = {\r\n      timestamp: new Date().toISOString(),\r\n      endpoint,\r\n      expectedCount,\r\n      actualCount,\r\n      discrepancy: expectedCount - actualCount,\r\n      userAgent: navigator.userAgent,\r\n      sessionId: this.sessionId\r\n    };\r\n\r\n    this.events.push(event);\r\n    \r\n    // Log cr칤tico si hay discrepancia significativa\r\n    if (event.discrepancy > 0) {\r\n      console.error('游뚿 API Discrepancy Detected:', {\r\n        endpoint: event.endpoint,\r\n        expected: event.expectedCount,\r\n        actual: event.actualCount,\r\n        lost: event.discrepancy,\r\n        percentage: ((event.discrepancy / event.expectedCount) * 100).toFixed(2) + '%'\r\n      });\r\n      \r\n      // Enviar alerta si la discrepancia es mayor al 20%\r\n      if (event.discrepancy / event.expectedCount > 0.2) {\r\n        this.sendCriticalAlert(event);\r\n      }\r\n    }\r\n\r\n    // Mantener solo los 칰ltimos 100 eventos\r\n    if (this.events.length > 100) {\r\n      this.events = this.events.slice(-100);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registra un problema de renderizado\r\n   */\r\n  recordRenderingIssue(\r\n    component: string,\r\n    expectedItems: number,\r\n    renderedItems: number,\r\n    filterCriteria?: Record<string, unknown>,\r\n    errorDetails?: string\r\n  ): void {\r\n    const issue: RenderingIssue = {\r\n      timestamp: new Date().toISOString(),\r\n      component,\r\n      expectedItems,\r\n      renderedItems,\r\n      filterCriteria,\r\n      errorDetails\r\n    };\r\n\r\n    this.renderingIssues.push(issue);\r\n\r\n    console.warn('丘멆잺 Rendering Issue Detected:', {\r\n      component: issue.component,\r\n      expected: issue.expectedItems,\r\n      rendered: issue.renderedItems,\r\n      filters: issue.filterCriteria,\r\n      error: issue.errorDetails\r\n    });\r\n\r\n    // Mantener solo los 칰ltimos 50 problemas\r\n    if (this.renderingIssues.length > 50) {\r\n      this.renderingIssues = this.renderingIssues.slice(-50);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Env칤a una alerta cr칤tica (en producci칩n se enviar칤a a un servicio de monitoreo)\r\n   */\r\n  private sendCriticalAlert(event: ApiMonitoringEvent): void {\r\n    // En desarrollo, solo log\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.error('游뚿 CRITICAL ALERT:', {\r\n        message: 'Significant data loss detected',\r\n        event,\r\n        recommendation: 'Check API validation logic and data filtering'\r\n      });\r\n      \r\n    }\r\n\r\n    // En producci칩n, enviar a servicio de monitoreo\r\n    // fetch('/api/monitoring/alerts', {\r\n    //   method: 'POST',\r\n    //   headers: { 'Content-Type': 'application/json' },\r\n    //   body: JSON.stringify({ type: 'api_discrepancy', event })\r\n    // }).catch(console.error);\r\n  }\r\n\r\n  /**\r\n   * Obtiene estad칤sticas de monitoreo\r\n   */\r\n  getMonitoringStats(): {\r\n    totalEvents: number;\r\n    totalIssues: number;\r\n    criticalEvents: number;\r\n    averageDiscrepancy: number;\r\n    recentEvents: ApiMonitoringEvent[];\r\n    recentIssues: RenderingIssue[];\r\n  } {\r\n    const criticalEvents = this.events.filter(e => e.discrepancy > 0).length;\r\n    const totalDiscrepancy = this.events.reduce((sum, e) => sum + Math.abs(e.discrepancy), 0);\r\n    const averageDiscrepancy = this.events.length > 0 ? totalDiscrepancy / this.events.length : 0;\r\n\r\n    return {\r\n      totalEvents: this.events.length,\r\n      totalIssues: this.renderingIssues.length,\r\n      criticalEvents,\r\n      averageDiscrepancy,\r\n      recentEvents: this.events.slice(-10),\r\n      recentIssues: this.renderingIssues.slice(-10)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Limpia los datos de monitoreo\r\n   */\r\n  clearMonitoringData(): void {\r\n    this.events = [];\r\n    this.renderingIssues = [];\r\n    console.log('游빛 Monitoring data cleared');\r\n  }\r\n\r\n  /**\r\n   * Exporta datos de monitoreo para an치lisis\r\n   */\r\n  exportMonitoringData(): string {\r\n    const data = {\r\n      sessionId: this.sessionId,\r\n      exportTimestamp: new Date().toISOString(),\r\n      events: this.events,\r\n      renderingIssues: this.renderingIssues,\r\n      stats: this.getMonitoringStats()\r\n    };\r\n\r\n    return JSON.stringify(data, null, 2);\r\n  }\r\n}\r\n\r\n// Instancia singleton\r\nexport const apiMonitoring = ApiMonitoringService.getInstance();\r\n\r\n// Hook para usar el monitoreo en componentes React\r\nexport function useApiMonitoring() {\r\n  return {\r\n    recordDiscrepancy: apiMonitoring.recordApiDiscrepancy.bind(apiMonitoring),\r\n    recordRenderingIssue: apiMonitoring.recordRenderingIssue.bind(apiMonitoring),\r\n    getStats: apiMonitoring.getMonitoringStats.bind(apiMonitoring),\r\n    clearData: apiMonitoring.clearMonitoringData.bind(apiMonitoring),\r\n    exportData: apiMonitoring.exportMonitoringData.bind(apiMonitoring)\r\n  };\r\n}\r\n\r\n// Utilidad para detectar autom치ticamente discrepancias\r\nexport function detectApiDiscrepancy(\r\n  endpoint: string,\r\n  apiResponse: { total?: number; count?: number; length?: number },\r\n  renderedItems: unknown[]\r\n): void {\r\n  const expectedCount = apiResponse.total || apiResponse.count || apiResponse.length || 0;\r\n  const actualCount = Array.isArray(renderedItems) ? renderedItems.length : 0;\r\n  \r\n  if (expectedCount !== actualCount) {\r\n    apiMonitoring.recordApiDiscrepancy(endpoint, expectedCount, actualCount);\r\n  }\r\n}\r\n\r\n// Decorator para monitorear autom치ticamente funciones de API\r\nexport function monitorApiCall(endpoint: string) {\r\n  return function (target: unknown, propertyName: string, descriptor: PropertyDescriptor) {\r\n    const method = descriptor.value;\r\n    \r\n    descriptor.value = async function (...args: unknown[]) {\r\n      const startTime = Date.now();\r\n      \r\n      try {\r\n        const result = await method.apply(this, args);\r\n        \r\n        // Si el resultado tiene datos paginados, verificar discrepancias\r\n        if (result && typeof result === 'object') {\r\n          if ('data' in result && 'pagination' in result.data) {\r\n            const { data } = result;\r\n            detectApiDiscrepancy(endpoint, data.pagination, data.orders || data.items || []);\r\n          }\r\n        }\r\n        \r\n        return result;\r\n      } catch (error) {\r\n        const duration = Date.now() - startTime;\r\n        console.error(`API call failed for ${endpoint} after ${duration}ms:`, error);\r\n        throw error;\r\n      }\r\n    };\r\n    \r\n    return descriptor;\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["apiMonitoring","detectApiDiscrepancy","monitorApiCall","useApiMonitoring","ApiMonitoringService","events","renderingIssues","sessionId","generateSessionId","getInstance","instance","Date","now","Math","random","toString","substr","recordApiDiscrepancy","endpoint","expectedCount","actualCount","event","timestamp","toISOString","discrepancy","userAgent","navigator","push","console","error","expected","actual","lost","percentage","toFixed","sendCriticalAlert","length","slice","recordRenderingIssue","component","expectedItems","renderedItems","filterCriteria","errorDetails","issue","warn","rendered","filters","process","env","NODE_ENV","message","recommendation","getMonitoringStats","criticalEvents","filter","e","totalDiscrepancy","reduce","sum","abs","averageDiscrepancy","totalEvents","totalIssues","recentEvents","recentIssues","clearMonitoringData","log","exportMonitoringData","data","exportTimestamp","stats","JSON","stringify","recordDiscrepancy","bind","getStats","clearData","exportData","apiResponse","total","count","Array","isArray","target","propertyName","descriptor","method","value","args","startTime","result","apply","pagination","orders","items","duration"],"mappings":"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"}