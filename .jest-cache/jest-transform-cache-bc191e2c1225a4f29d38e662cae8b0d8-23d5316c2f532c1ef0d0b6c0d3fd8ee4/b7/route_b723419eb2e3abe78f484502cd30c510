5ac903626d25411ecce455585017d7db
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_uv8nynb65() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\security\\route.ts";
  var hash = "0d94f47a5a4025c9b78d63c8856150652a63f660";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\security\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 54
        }
      },
      "9": {
        start: {
          line: 25,
          column: 18
        },
        end: {
          line: 25,
          column: 66
        }
      },
      "10": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 24
        }
      },
      "11": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 104,
          column: 5
        }
      },
      "12": {
        start: {
          line: 30,
          column: 24
        },
        end: {
          line: 30,
          column: 49
        }
      },
      "13": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "14": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 36,
          column: 15
        }
      },
      "15": {
        start: {
          line: 39,
          column: 26
        },
        end: {
          line: 39,
          column: 44
        }
      },
      "16": {
        start: {
          line: 40,
          column: 31
        },
        end: {
          line: 40,
          column: 119
        }
      },
      "17": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "18": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 46,
          column: 15
        }
      },
      "19": {
        start: {
          line: 49,
          column: 50
        },
        end: {
          line: 49,
          column: 154
        }
      },
      "20": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "21": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 81
        }
      },
      "22": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 56,
          column: 15
        }
      },
      "23": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "24": {
        start: {
          line: 60,
          column: 36
        },
        end: {
          line: 70,
          column: 13
        }
      },
      "25": {
        start: {
          line: 71,
          column: 62
        },
        end: {
          line: 71,
          column: 164
        }
      },
      "26": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 79,
          column: 13
        }
      },
      "27": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 88
        }
      },
      "28": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 78,
          column: 19
        }
      },
      "29": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 83,
          column: 15
        }
      },
      "30": {
        start: {
          line: 86,
          column: 33
        },
        end: {
          line: 88,
          column: 20
        }
      },
      "31": {
        start: {
          line: 90,
          column: 22
        },
        end: {
          line: 90,
          column: 53
        }
      },
      "32": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 96,
          column: 11
        }
      },
      "33": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 65
        }
      },
      "34": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 103,
          column: 11
        }
      },
      "35": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 199,
          column: 5
        }
      },
      "36": {
        start: {
          line: 109,
          column: 24
        },
        end: {
          line: 109,
          column: 49
        }
      },
      "37": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "38": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 115,
          column: 15
        }
      },
      "39": {
        start: {
          line: 118,
          column: 26
        },
        end: {
          line: 118,
          column: 44
        }
      },
      "40": {
        start: {
          line: 119,
          column: 31
        },
        end: {
          line: 119,
          column: 119
        }
      },
      "41": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "42": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 125,
          column: 15
        }
      },
      "43": {
        start: {
          line: 127,
          column: 21
        },
        end: {
          line: 127,
          column: 41
        }
      },
      "44": {
        start: {
          line: 128,
          column: 188
        },
        end: {
          line: 128,
          column: 192
        }
      },
      "45": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "46": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 135,
          column: 15
        }
      },
      "47": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 143,
          column: 9
        }
      },
      "48": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 142,
          column: 15
        }
      },
      "49": {
        start: {
          line: 145,
          column: 27
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "50": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 150,
          column: 9
        }
      },
      "51": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 63
        }
      },
      "52": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "53": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 51
        }
      },
      "54": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 156,
          column: 9
        }
      },
      "55": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 79
        }
      },
      "56": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "57": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 61
        }
      },
      "58": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "59": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 71
        }
      },
      "60": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "61": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 67
        }
      },
      "62": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "63": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 57
        }
      },
      "64": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "65": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 73
        }
      },
      "66": {
        start: {
          line: 173,
          column: 49
        },
        end: {
          line: 173,
          column: 169
        }
      },
      "67": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "68": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 84
        }
      },
      "69": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 180,
          column: 15
        }
      },
      "70": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 186,
          column: 11
        }
      },
      "71": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 191,
          column: 11
        }
      },
      "72": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 65
        }
      },
      "73": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 198,
          column: 11
        }
      },
      "74": {
        start: {
          line: 203,
          column: 4
        },
        end: {
          line: 236,
          column: 5
        }
      },
      "75": {
        start: {
          line: 205,
          column: 42
        },
        end: {
          line: 208,
          column: 32
        }
      },
      "76": {
        start: {
          line: 210,
          column: 44
        },
        end: {
          line: 213,
          column: 57
        }
      },
      "77": {
        start: {
          line: 215,
          column: 49
        },
        end: {
          line: 217,
          column: 19
        }
      },
      "78": {
        start: {
          line: 219,
          column: 30
        },
        end: {
          line: 219,
          column: 91
        }
      },
      "79": {
        start: {
          line: 220,
          column: 41
        },
        end: {
          line: 220,
          column: 184
        }
      },
      "80": {
        start: {
          line: 221,
          column: 30
        },
        end: {
          line: 221,
          column: 104
        }
      },
      "81": {
        start: {
          line: 221,
          column: 63
        },
        end: {
          line: 221,
          column: 97
        }
      },
      "82": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 227,
          column: 10
        }
      },
      "83": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 76
        }
      },
      "84": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 235,
          column: 10
        }
      },
      "85": {
        start: {
          line: 240,
          column: 4
        },
        end: {
          line: 250,
          column: 5
        }
      },
      "86": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 247,
          column: 11
        }
      },
      "87": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 75
        }
      },
      "88": {
        start: {
          line: 254,
          column: 22
        },
        end: {
          line: 254,
          column: 60
        }
      },
      "89": {
        start: {
          line: 255,
          column: 19
        },
        end: {
          line: 255,
          column: 51
        }
      },
      "90": {
        start: {
          line: 256,
          column: 4
        },
        end: {
          line: 258,
          column: 5
        }
      },
      "91": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 257,
          column: 46
        }
      },
      "92": {
        start: {
          line: 259,
          column: 4
        },
        end: {
          line: 261,
          column: 5
        }
      },
      "93": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 260,
          column: 22
        }
      },
      "94": {
        start: {
          line: 262,
          column: 4
        },
        end: {
          line: 262,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "GET",
        decl: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 18
          }
        },
        loc: {
          start: {
            line: 27,
            column: 28
          },
          end: {
            line: 105,
            column: 1
          }
        },
        line: 27
      },
      "5": {
        name: "PUT",
        decl: {
          start: {
            line: 106,
            column: 15
          },
          end: {
            line: 106,
            column: 18
          }
        },
        loc: {
          start: {
            line: 106,
            column: 28
          },
          end: {
            line: 200,
            column: 1
          }
        },
        line: 106
      },
      "6": {
        name: "getSecurityStats",
        decl: {
          start: {
            line: 202,
            column: 15
          },
          end: {
            line: 202,
            column: 31
          }
        },
        loc: {
          start: {
            line: 202,
            column: 40
          },
          end: {
            line: 237,
            column: 1
          }
        },
        line: 202
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 221,
            column: 58
          },
          end: {
            line: 221,
            column: 59
          }
        },
        loc: {
          start: {
            line: 221,
            column: 63
          },
          end: {
            line: 221,
            column: 97
          }
        },
        line: 221
      },
      "8": {
        name: "logSecurityActivity",
        decl: {
          start: {
            line: 239,
            column: 15
          },
          end: {
            line: 239,
            column: 34
          }
        },
        loc: {
          start: {
            line: 239,
            column: 61
          },
          end: {
            line: 251,
            column: 1
          }
        },
        line: 239
      },
      "9": {
        name: "getClientIP",
        decl: {
          start: {
            line: 253,
            column: 9
          },
          end: {
            line: 253,
            column: 20
          }
        },
        loc: {
          start: {
            line: 253,
            column: 30
          },
          end: {
            line: 263,
            column: 1
          }
        },
        line: 253
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "2": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "3": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 17
          }
        }, {
          start: {
            line: 50,
            column: 21
          },
          end: {
            line: 50,
            column: 46
          }
        }],
        line: 50
      },
      "4": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "5": {
        loc: {
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "6": {
        loc: {
          start: {
            line: 94,
            column: 20
          },
          end: {
            line: 94,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 20
          },
          end: {
            line: 94,
            column: 26
          }
        }, {
          start: {
            line: 94,
            column: 30
          },
          end: {
            line: 94,
            column: 32
          }
        }],
        line: 94
      },
      "7": {
        loc: {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "8": {
        loc: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "9": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "10": {
        loc: {
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 130,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 130,
            column: 27
          }
        }, {
          start: {
            line: 130,
            column: 32
          },
          end: {
            line: 130,
            column: 51
          }
        }, {
          start: {
            line: 130,
            column: 55
          },
          end: {
            line: 130,
            column: 78
          }
        }],
        line: 130
      },
      "11": {
        loc: {
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "12": {
        loc: {
          start: {
            line: 137,
            column: 12
          },
          end: {
            line: 137,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 12
          },
          end: {
            line: 137,
            column: 35
          }
        }, {
          start: {
            line: 137,
            column: 40
          },
          end: {
            line: 137,
            column: 67
          }
        }, {
          start: {
            line: 137,
            column: 71
          },
          end: {
            line: 137,
            column: 99
          }
        }],
        line: 137
      },
      "13": {
        loc: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "14": {
        loc: {
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "15": {
        loc: {
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 156,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 156,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "16": {
        loc: {
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "17": {
        loc: {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "18": {
        loc: {
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "19": {
        loc: {
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "20": {
        loc: {
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "21": {
        loc: {
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "22": {
        loc: {
          start: {
            line: 223,
            column: 28
          },
          end: {
            line: 223,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 223,
            column: 28
          },
          end: {
            line: 223,
            column: 42
          }
        }, {
          start: {
            line: 223,
            column: 46
          },
          end: {
            line: 223,
            column: 47
          }
        }],
        line: 223
      },
      "23": {
        loc: {
          start: {
            line: 224,
            column: 30
          },
          end: {
            line: 224,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 30
          },
          end: {
            line: 224,
            column: 46
          }
        }, {
          start: {
            line: 224,
            column: 50
          },
          end: {
            line: 224,
            column: 51
          }
        }],
        line: 224
      },
      "24": {
        loc: {
          start: {
            line: 225,
            column: 36
          },
          end: {
            line: 225,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 36
          },
          end: {
            line: 225,
            column: 75
          }
        }, {
          start: {
            line: 225,
            column: 79
          },
          end: {
            line: 225,
            column: 83
          }
        }],
        line: 225
      },
      "25": {
        loc: {
          start: {
            line: 226,
            column: 37
          },
          end: {
            line: 226,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 226,
            column: 37
          },
          end: {
            line: 226,
            column: 50
          }
        }, {
          start: {
            line: 226,
            column: 54
          },
          end: {
            line: 226,
            column: 55
          }
        }],
        line: 226
      },
      "26": {
        loc: {
          start: {
            line: 256,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 256
      },
      "27": {
        loc: {
          start: {
            line: 259,
            column: 4
          },
          end: {
            line: 261,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 4
          },
          end: {
            line: 261,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 259
      },
      "28": {
        loc: {
          start: {
            line: 262,
            column: 11
          },
          end: {
            line: 262,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 262,
            column: 11
          },
          end: {
            line: 262,
            column: 21
          }
        }, {
          start: {
            line: 262,
            column: 25
          },
          end: {
            line: 262,
            column: 34
          }
        }],
        line: 262
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\security\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API DE CONFIGURACI\xD3N DE SEGURIDAD\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\n\r\n// Tipos para configuraci\xF3n de seguridad\r\nexport interface SecuritySettings {\r\n  id: string;\r\n  user_id: string;\r\n  two_factor_enabled: boolean;\r\n  login_alerts: boolean;\r\n  suspicious_activity_alerts: boolean;\r\n  new_device_alerts: boolean;\r\n  password_change_alerts: boolean;\r\n  trusted_devices_only: boolean;\r\n  session_timeout: number; // en minutos\r\n  max_concurrent_sessions: number;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nexport interface SecurityAlert {\r\n  id: string;\r\n  user_id: string;\r\n  type: 'login' | 'suspicious_activity' | 'new_device' | 'password_change' | 'session_timeout';\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  title: string;\r\n  description: string;\r\n  metadata?: Record<string, any>;\r\n  is_read: boolean;\r\n  is_resolved: boolean;\r\n  created_at: string;\r\n}\r\n\r\n// GET - Obtener configuraci\xF3n de seguridad del usuario\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { error: 'Usuario no autenticado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Obtener usuario por email\r\n    const userEmail = session.user.email;\r\n    const { data: user } = await supabaseAdmin\r\n      .from('users')\r\n      .select('id')\r\n      .eq('email', userEmail)\r\n      .single();\r\n\r\n    if (!user) {\r\n      return NextResponse.json(\r\n        { error: 'Usuario no encontrado' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Obtener configuraci\xF3n de seguridad\r\n    const { data: securitySettings, error } = await supabaseAdmin\r\n      .from('user_security_settings')\r\n      .select('*')\r\n      .eq('user_id', user.id)\r\n      .single();\r\n\r\n    if (error && error.code !== 'PGRST116') { // PGRST116 = no rows found\r\n      console.error('Error al obtener configuraci\xF3n de seguridad:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al obtener configuraci\xF3n de seguridad' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Si no existe configuraci\xF3n, crear una por defecto\r\n    if (!securitySettings) {\r\n      const defaultSettings: Omit<SecuritySettings, 'id' | 'created_at' | 'updated_at'> = {\r\n        user_id: user.id,\r\n        two_factor_enabled: false,\r\n        login_alerts: true,\r\n        suspicious_activity_alerts: true,\r\n        new_device_alerts: true,\r\n        password_change_alerts: true,\r\n        trusted_devices_only: false,\r\n        session_timeout: 30, // 30 d\xEDas\r\n        max_concurrent_sessions: 5,\r\n      };\r\n\r\n      const { data: newSettings, error: createError } = await supabaseAdmin\r\n        .from('user_security_settings')\r\n        .insert(defaultSettings)\r\n        .select()\r\n        .single();\r\n\r\n      if (createError) {\r\n        console.error('Error al crear configuraci\xF3n por defecto:', createError);\r\n        return NextResponse.json(\r\n          { error: 'Error al crear configuraci\xF3n de seguridad' },\r\n          { status: 500 }\r\n        );\r\n      }\r\n\r\n      return NextResponse.json({\r\n        success: true,\r\n        settings: newSettings,\r\n      });\r\n    }\r\n\r\n    // Obtener alertas de seguridad recientes\r\n    const { data: alerts } = await supabaseAdmin\r\n      .from('user_security_alerts')\r\n      .select('*')\r\n      .eq('user_id', user.id)\r\n      .eq('is_resolved', false)\r\n      .order('created_at', { ascending: false })\r\n      .limit(10);\r\n\r\n    // Obtener estad\xEDsticas de seguridad\r\n    const stats = await getSecurityStats(user.id);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      settings: securitySettings,\r\n      alerts: alerts || [],\r\n      stats,\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en GET /api/user/security:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// PUT - Actualizar configuraci\xF3n de seguridad\r\nexport async function PUT(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { error: 'Usuario no autenticado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Obtener usuario por email\r\n    const userEmail = session.user.email;\r\n    const { data: user } = await supabaseAdmin\r\n      .from('users')\r\n      .select('id')\r\n      .eq('email', userEmail)\r\n      .single();\r\n\r\n    if (!user) {\r\n      return NextResponse.json(\r\n        { error: 'Usuario no encontrado' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    const body = await request.json();\r\n    const {\r\n      two_factor_enabled,\r\n      login_alerts,\r\n      suspicious_activity_alerts,\r\n      new_device_alerts,\r\n      password_change_alerts,\r\n      trusted_devices_only,\r\n      session_timeout,\r\n      max_concurrent_sessions,\r\n    } = body;\r\n\r\n    // Validar datos\r\n    if (session_timeout && (session_timeout < 1 || session_timeout > 43200)) { // m\xE1ximo 30 d\xEDas\r\n      return NextResponse.json(\r\n        { error: 'Timeout de sesi\xF3n debe estar entre 1 y 43200 minutos' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    if (max_concurrent_sessions && (max_concurrent_sessions < 1 || max_concurrent_sessions > 20)) {\r\n      return NextResponse.json(\r\n        { error: 'M\xE1ximo de sesiones concurrentes debe estar entre 1 y 20' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Preparar datos de actualizaci\xF3n\r\n    const updateData: any = {\r\n      updated_at: new Date().toISOString(),\r\n    };\r\n\r\n    if (typeof two_factor_enabled === 'boolean') {\r\n      updateData.two_factor_enabled = two_factor_enabled;\r\n    }\r\n    if (typeof login_alerts === 'boolean') {\r\n      updateData.login_alerts = login_alerts;\r\n    }\r\n    if (typeof suspicious_activity_alerts === 'boolean') {\r\n      updateData.suspicious_activity_alerts = suspicious_activity_alerts;\r\n    }\r\n    if (typeof new_device_alerts === 'boolean') {\r\n      updateData.new_device_alerts = new_device_alerts;\r\n    }\r\n    if (typeof password_change_alerts === 'boolean') {\r\n      updateData.password_change_alerts = password_change_alerts;\r\n    }\r\n    if (typeof trusted_devices_only === 'boolean') {\r\n      updateData.trusted_devices_only = trusted_devices_only;\r\n    }\r\n    if (session_timeout) {\r\n      updateData.session_timeout = session_timeout;\r\n    }\r\n    if (max_concurrent_sessions) {\r\n      updateData.max_concurrent_sessions = max_concurrent_sessions;\r\n    }\r\n\r\n    // Actualizar configuraci\xF3n\r\n    const { data: updatedSettings, error } = await supabaseAdmin\r\n      .from('user_security_settings')\r\n      .update(updateData)\r\n      .eq('user_id', user.id)\r\n      .select()\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('Error al actualizar configuraci\xF3n de seguridad:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al actualizar configuraci\xF3n de seguridad' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Registrar actividad\r\n    await logSecurityActivity(user.id, 'security_settings_updated', {\r\n      changes: updateData,\r\n      ip_address: getClientIP(request),\r\n    });\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      settings: updatedSettings,\r\n      message: 'Configuraci\xF3n de seguridad actualizada exitosamente',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en PUT /api/user/security:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// Funci\xF3n auxiliar para obtener estad\xEDsticas de seguridad\r\nasync function getSecurityStats(userId: string) {\r\n  try {\r\n    // Contar sesiones activas\r\n    const { count: activeSessions } = await supabaseAdmin\r\n      .from('user_sessions')\r\n      .select('*', { count: 'exact', head: true })\r\n      .eq('user_id', userId);\r\n\r\n    // Contar alertas no resueltas\r\n    const { count: unresolvedAlerts } = await supabaseAdmin\r\n      .from('user_security_alerts')\r\n      .select('*', { count: 'exact', head: true })\r\n      .eq('user_id', userId)\r\n      .eq('is_resolved', false);\r\n\r\n    // \xDAltima actividad sospechosa\r\n    const { data: lastSuspiciousActivity } = await supabaseAdmin\r\n      .from('user_activity')\r\n      .select('created_at')\r\n      .eq('user_id', userId)\r\n      .eq('category', 'security')\r\n      .order('created_at', { ascending: false })\r\n      .limit(1);\r\n\r\n    // Dispositivos \xFAnicos (\xFAltimos 30 d\xEDas)\r\n    const thirtyDaysAgo = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString();\r\n    const { data: recentSessions } = await supabaseAdmin\r\n      .from('user_sessions')\r\n      .select('device_name, ip_address')\r\n      .eq('user_id', userId)\r\n      .gte('last_activity', thirtyDaysAgo);\r\n\r\n    const uniqueDevices = new Set(\r\n      recentSessions?.map(s => `${s.device_name}-${s.ip_address}`)\r\n    ).size;\r\n\r\n    return {\r\n      activeSessions: activeSessions || 0,\r\n      unresolvedAlerts: unresolvedAlerts || 0,\r\n      lastSuspiciousActivity: lastSuspiciousActivity?.[0]?.created_at || null,\r\n      uniqueDevicesLast30Days: uniqueDevices || 0,\r\n    };\r\n  } catch (error) {\r\n    console.error('Error al obtener estad\xEDsticas de seguridad:', error);\r\n    return {\r\n      activeSessions: 0,\r\n      unresolvedAlerts: 0,\r\n      lastSuspiciousActivity: null,\r\n      uniqueDevicesLast30Days: 0,\r\n    };\r\n  }\r\n}\r\n\r\n// Funci\xF3n auxiliar para registrar actividad de seguridad\r\nasync function logSecurityActivity(\r\n  userId: string, \r\n  action: string, \r\n  metadata: any\r\n) {\r\n  try {\r\n    await supabaseAdmin\r\n      .from('user_activity')\r\n      .insert({\r\n        user_id: userId,\r\n        action,\r\n        category: 'security',\r\n        metadata,\r\n        created_at: new Date().toISOString(),\r\n      });\r\n  } catch (error) {\r\n    console.error('Error al registrar actividad de seguridad:', error);\r\n  }\r\n}\r\n\r\n// Funci\xF3n auxiliar para obtener IP del cliente\r\nfunction getClientIP(request: NextRequest): string {\r\n  const forwarded = request.headers.get('x-forwarded-for');\r\n  const realIP = request.headers.get('x-real-ip');\r\n  \r\n  if (forwarded) {\r\n    return forwarded.split(',')[0].trim();\r\n  }\r\n  \r\n  if (realIP) {\r\n    return realIP;\r\n  }\r\n  \r\n  return request.ip || 'unknown';\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "PUT", "runtime", "request", "session", "auth", "user", "NextResponse", "json", "error", "status", "userEmail", "email", "data", "supabaseAdmin", "from", "select", "eq", "single", "securitySettings", "id", "code", "console", "defaultSettings", "user_id", "two_factor_enabled", "login_alerts", "suspicious_activity_alerts", "new_device_alerts", "password_change_alerts", "trusted_devices_only", "session_timeout", "max_concurrent_sessions", "newSettings", "createError", "insert", "success", "settings", "alerts", "order", "ascending", "limit", "stats", "getSecurityStats", "body", "updateData", "updated_at", "Date", "toISOString", "updatedSettings", "update", "logSecurityActivity", "changes", "ip_address", "getClientIP", "message", "userId", "count", "activeSessions", "head", "unresolvedAlerts", "lastSuspiciousActivity", "thirtyDaysAgo", "now", "recentSessions", "gte", "uniqueDevices", "Set", "map", "s", "device_name", "size", "created_at", "uniqueDevicesLast30Days", "action", "metadata", "category", "forwarded", "headers", "get", "realIP", "split", "trim", "ip"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0d94f47a5a4025c9b78d63c8856150652a63f660"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_uv8nynb65 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_uv8nynb65();
cov_uv8nynb65().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_uv8nynb65().f[0]++;
  cov_uv8nynb65().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_uv8nynb65().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_uv8nynb65().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_uv8nynb65().f[1]++;
    cov_uv8nynb65().s[4]++;
    return GET;
  },
  get PUT() {
    /* istanbul ignore next */
    cov_uv8nynb65().f[2]++;
    cov_uv8nynb65().s[5]++;
    return PUT;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_uv8nynb65().f[3]++;
    cov_uv8nynb65().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_uv8nynb65().s[7]++, require("next/server"));
const _config =
/* istanbul ignore next */
(cov_uv8nynb65().s[8]++, require("../../../../lib/auth/config"));
const _supabase =
/* istanbul ignore next */
(cov_uv8nynb65().s[9]++, require("../../../../lib/integrations/supabase"));
const runtime =
/* istanbul ignore next */
(cov_uv8nynb65().s[10]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_uv8nynb65().f[4]++;
  cov_uv8nynb65().s[11]++;
  try {
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_uv8nynb65().s[12]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_uv8nynb65().s[13]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_uv8nynb65().b[0][0]++;
      cov_uv8nynb65().s[14]++;
      return _server.NextResponse.json({
        error: 'Usuario no autenticado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_uv8nynb65().b[0][1]++;
    }
    // Obtener usuario por email
    const userEmail =
    /* istanbul ignore next */
    (cov_uv8nynb65().s[15]++, session.user.email);
    const {
      data: user
    } =
    /* istanbul ignore next */
    (cov_uv8nynb65().s[16]++, await _supabase.supabaseAdmin.from('users').select('id').eq('email', userEmail).single());
    /* istanbul ignore next */
    cov_uv8nynb65().s[17]++;
    if (!user) {
      /* istanbul ignore next */
      cov_uv8nynb65().b[1][0]++;
      cov_uv8nynb65().s[18]++;
      return _server.NextResponse.json({
        error: 'Usuario no encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_uv8nynb65().b[1][1]++;
    }
    // Obtener configuraciÃ³n de seguridad
    const {
      data: securitySettings,
      error
    } =
    /* istanbul ignore next */
    (cov_uv8nynb65().s[19]++, await _supabase.supabaseAdmin.from('user_security_settings').select('*').eq('user_id', user.id).single());
    /* istanbul ignore next */
    cov_uv8nynb65().s[20]++;
    if (
    /* istanbul ignore next */
    (cov_uv8nynb65().b[3][0]++, error) &&
    /* istanbul ignore next */
    (cov_uv8nynb65().b[3][1]++, error.code !== 'PGRST116')) {
      /* istanbul ignore next */
      cov_uv8nynb65().b[2][0]++;
      cov_uv8nynb65().s[21]++;
      console.error('Error al obtener configuraciÃ³n de seguridad:', error);
      /* istanbul ignore next */
      cov_uv8nynb65().s[22]++;
      return _server.NextResponse.json({
        error: 'Error al obtener configuraciÃ³n de seguridad'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_uv8nynb65().b[2][1]++;
    }
    // Si no existe configuraciÃ³n, crear una por defecto
    cov_uv8nynb65().s[23]++;
    if (!securitySettings) {
      /* istanbul ignore next */
      cov_uv8nynb65().b[4][0]++;
      const defaultSettings =
      /* istanbul ignore next */
      (cov_uv8nynb65().s[24]++, {
        user_id: user.id,
        two_factor_enabled: false,
        login_alerts: true,
        suspicious_activity_alerts: true,
        new_device_alerts: true,
        password_change_alerts: true,
        trusted_devices_only: false,
        session_timeout: 30,
        max_concurrent_sessions: 5
      });
      const {
        data: newSettings,
        error: createError
      } =
      /* istanbul ignore next */
      (cov_uv8nynb65().s[25]++, await _supabase.supabaseAdmin.from('user_security_settings').insert(defaultSettings).select().single());
      /* istanbul ignore next */
      cov_uv8nynb65().s[26]++;
      if (createError) {
        /* istanbul ignore next */
        cov_uv8nynb65().b[5][0]++;
        cov_uv8nynb65().s[27]++;
        console.error('Error al crear configuraciÃ³n por defecto:', createError);
        /* istanbul ignore next */
        cov_uv8nynb65().s[28]++;
        return _server.NextResponse.json({
          error: 'Error al crear configuraciÃ³n de seguridad'
        }, {
          status: 500
        });
      } else
      /* istanbul ignore next */
      {
        cov_uv8nynb65().b[5][1]++;
      }
      cov_uv8nynb65().s[29]++;
      return _server.NextResponse.json({
        success: true,
        settings: newSettings
      });
    } else
    /* istanbul ignore next */
    {
      cov_uv8nynb65().b[4][1]++;
    }
    // Obtener alertas de seguridad recientes
    const {
      data: alerts
    } =
    /* istanbul ignore next */
    (cov_uv8nynb65().s[30]++, await _supabase.supabaseAdmin.from('user_security_alerts').select('*').eq('user_id', user.id).eq('is_resolved', false).order('created_at', {
      ascending: false
    }).limit(10));
    // Obtener estadÃ­sticas de seguridad
    const stats =
    /* istanbul ignore next */
    (cov_uv8nynb65().s[31]++, await getSecurityStats(user.id));
    /* istanbul ignore next */
    cov_uv8nynb65().s[32]++;
    return _server.NextResponse.json({
      success: true,
      settings: securitySettings,
      alerts:
      /* istanbul ignore next */
      (cov_uv8nynb65().b[6][0]++, alerts) ||
      /* istanbul ignore next */
      (cov_uv8nynb65().b[6][1]++, []),
      stats
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_uv8nynb65().s[33]++;
    console.error('Error en GET /api/user/security:', error);
    /* istanbul ignore next */
    cov_uv8nynb65().s[34]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function PUT(request) {
  /* istanbul ignore next */
  cov_uv8nynb65().f[5]++;
  cov_uv8nynb65().s[35]++;
  try {
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_uv8nynb65().s[36]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_uv8nynb65().s[37]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_uv8nynb65().b[7][0]++;
      cov_uv8nynb65().s[38]++;
      return _server.NextResponse.json({
        error: 'Usuario no autenticado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_uv8nynb65().b[7][1]++;
    }
    // Obtener usuario por email
    const userEmail =
    /* istanbul ignore next */
    (cov_uv8nynb65().s[39]++, session.user.email);
    const {
      data: user
    } =
    /* istanbul ignore next */
    (cov_uv8nynb65().s[40]++, await _supabase.supabaseAdmin.from('users').select('id').eq('email', userEmail).single());
    /* istanbul ignore next */
    cov_uv8nynb65().s[41]++;
    if (!user) {
      /* istanbul ignore next */
      cov_uv8nynb65().b[8][0]++;
      cov_uv8nynb65().s[42]++;
      return _server.NextResponse.json({
        error: 'Usuario no encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_uv8nynb65().b[8][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_uv8nynb65().s[43]++, await request.json());
    const {
      two_factor_enabled,
      login_alerts,
      suspicious_activity_alerts,
      new_device_alerts,
      password_change_alerts,
      trusted_devices_only,
      session_timeout,
      max_concurrent_sessions
    } =
    /* istanbul ignore next */
    (cov_uv8nynb65().s[44]++, body);
    // Validar datos
    /* istanbul ignore next */
    cov_uv8nynb65().s[45]++;
    if (
    /* istanbul ignore next */
    (cov_uv8nynb65().b[10][0]++, session_timeout) && (
    /* istanbul ignore next */
    (cov_uv8nynb65().b[10][1]++, session_timeout < 1) ||
    /* istanbul ignore next */
    (cov_uv8nynb65().b[10][2]++, session_timeout > 43200))) {
      /* istanbul ignore next */
      cov_uv8nynb65().b[9][0]++;
      cov_uv8nynb65().s[46]++;
      return _server.NextResponse.json({
        error: 'Timeout de sesiÃ³n debe estar entre 1 y 43200 minutos'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_uv8nynb65().b[9][1]++;
    }
    cov_uv8nynb65().s[47]++;
    if (
    /* istanbul ignore next */
    (cov_uv8nynb65().b[12][0]++, max_concurrent_sessions) && (
    /* istanbul ignore next */
    (cov_uv8nynb65().b[12][1]++, max_concurrent_sessions < 1) ||
    /* istanbul ignore next */
    (cov_uv8nynb65().b[12][2]++, max_concurrent_sessions > 20))) {
      /* istanbul ignore next */
      cov_uv8nynb65().b[11][0]++;
      cov_uv8nynb65().s[48]++;
      return _server.NextResponse.json({
        error: 'MÃ¡ximo de sesiones concurrentes debe estar entre 1 y 20'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_uv8nynb65().b[11][1]++;
    }
    // Preparar datos de actualizaciÃ³n
    const updateData =
    /* istanbul ignore next */
    (cov_uv8nynb65().s[49]++, {
      updated_at: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_uv8nynb65().s[50]++;
    if (typeof two_factor_enabled === 'boolean') {
      /* istanbul ignore next */
      cov_uv8nynb65().b[13][0]++;
      cov_uv8nynb65().s[51]++;
      updateData.two_factor_enabled = two_factor_enabled;
    } else
    /* istanbul ignore next */
    {
      cov_uv8nynb65().b[13][1]++;
    }
    cov_uv8nynb65().s[52]++;
    if (typeof login_alerts === 'boolean') {
      /* istanbul ignore next */
      cov_uv8nynb65().b[14][0]++;
      cov_uv8nynb65().s[53]++;
      updateData.login_alerts = login_alerts;
    } else
    /* istanbul ignore next */
    {
      cov_uv8nynb65().b[14][1]++;
    }
    cov_uv8nynb65().s[54]++;
    if (typeof suspicious_activity_alerts === 'boolean') {
      /* istanbul ignore next */
      cov_uv8nynb65().b[15][0]++;
      cov_uv8nynb65().s[55]++;
      updateData.suspicious_activity_alerts = suspicious_activity_alerts;
    } else
    /* istanbul ignore next */
    {
      cov_uv8nynb65().b[15][1]++;
    }
    cov_uv8nynb65().s[56]++;
    if (typeof new_device_alerts === 'boolean') {
      /* istanbul ignore next */
      cov_uv8nynb65().b[16][0]++;
      cov_uv8nynb65().s[57]++;
      updateData.new_device_alerts = new_device_alerts;
    } else
    /* istanbul ignore next */
    {
      cov_uv8nynb65().b[16][1]++;
    }
    cov_uv8nynb65().s[58]++;
    if (typeof password_change_alerts === 'boolean') {
      /* istanbul ignore next */
      cov_uv8nynb65().b[17][0]++;
      cov_uv8nynb65().s[59]++;
      updateData.password_change_alerts = password_change_alerts;
    } else
    /* istanbul ignore next */
    {
      cov_uv8nynb65().b[17][1]++;
    }
    cov_uv8nynb65().s[60]++;
    if (typeof trusted_devices_only === 'boolean') {
      /* istanbul ignore next */
      cov_uv8nynb65().b[18][0]++;
      cov_uv8nynb65().s[61]++;
      updateData.trusted_devices_only = trusted_devices_only;
    } else
    /* istanbul ignore next */
    {
      cov_uv8nynb65().b[18][1]++;
    }
    cov_uv8nynb65().s[62]++;
    if (session_timeout) {
      /* istanbul ignore next */
      cov_uv8nynb65().b[19][0]++;
      cov_uv8nynb65().s[63]++;
      updateData.session_timeout = session_timeout;
    } else
    /* istanbul ignore next */
    {
      cov_uv8nynb65().b[19][1]++;
    }
    cov_uv8nynb65().s[64]++;
    if (max_concurrent_sessions) {
      /* istanbul ignore next */
      cov_uv8nynb65().b[20][0]++;
      cov_uv8nynb65().s[65]++;
      updateData.max_concurrent_sessions = max_concurrent_sessions;
    } else
    /* istanbul ignore next */
    {
      cov_uv8nynb65().b[20][1]++;
    }
    // Actualizar configuraciÃ³n
    const {
      data: updatedSettings,
      error
    } =
    /* istanbul ignore next */
    (cov_uv8nynb65().s[66]++, await _supabase.supabaseAdmin.from('user_security_settings').update(updateData).eq('user_id', user.id).select().single());
    /* istanbul ignore next */
    cov_uv8nynb65().s[67]++;
    if (error) {
      /* istanbul ignore next */
      cov_uv8nynb65().b[21][0]++;
      cov_uv8nynb65().s[68]++;
      console.error('Error al actualizar configuraciÃ³n de seguridad:', error);
      /* istanbul ignore next */
      cov_uv8nynb65().s[69]++;
      return _server.NextResponse.json({
        error: 'Error al actualizar configuraciÃ³n de seguridad'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_uv8nynb65().b[21][1]++;
    }
    // Registrar actividad
    cov_uv8nynb65().s[70]++;
    await logSecurityActivity(user.id, 'security_settings_updated', {
      changes: updateData,
      ip_address: getClientIP(request)
    });
    /* istanbul ignore next */
    cov_uv8nynb65().s[71]++;
    return _server.NextResponse.json({
      success: true,
      settings: updatedSettings,
      message: 'ConfiguraciÃ³n de seguridad actualizada exitosamente'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_uv8nynb65().s[72]++;
    console.error('Error en PUT /api/user/security:', error);
    /* istanbul ignore next */
    cov_uv8nynb65().s[73]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
// FunciÃ³n auxiliar para obtener estadÃ­sticas de seguridad
async function getSecurityStats(userId) {
  /* istanbul ignore next */
  cov_uv8nynb65().f[6]++;
  cov_uv8nynb65().s[74]++;
  try {
    // Contar sesiones activas
    const {
      count: activeSessions
    } =
    /* istanbul ignore next */
    (cov_uv8nynb65().s[75]++, await _supabase.supabaseAdmin.from('user_sessions').select('*', {
      count: 'exact',
      head: true
    }).eq('user_id', userId));
    // Contar alertas no resueltas
    const {
      count: unresolvedAlerts
    } =
    /* istanbul ignore next */
    (cov_uv8nynb65().s[76]++, await _supabase.supabaseAdmin.from('user_security_alerts').select('*', {
      count: 'exact',
      head: true
    }).eq('user_id', userId).eq('is_resolved', false));
    // Ãltima actividad sospechosa
    const {
      data: lastSuspiciousActivity
    } =
    /* istanbul ignore next */
    (cov_uv8nynb65().s[77]++, await _supabase.supabaseAdmin.from('user_activity').select('created_at').eq('user_id', userId).eq('category', 'security').order('created_at', {
      ascending: false
    }).limit(1));
    // Dispositivos Ãºnicos (Ãºltimos 30 dÃ­as)
    const thirtyDaysAgo =
    /* istanbul ignore next */
    (cov_uv8nynb65().s[78]++, new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString());
    const {
      data: recentSessions
    } =
    /* istanbul ignore next */
    (cov_uv8nynb65().s[79]++, await _supabase.supabaseAdmin.from('user_sessions').select('device_name, ip_address').eq('user_id', userId).gte('last_activity', thirtyDaysAgo));
    const uniqueDevices =
    /* istanbul ignore next */
    (cov_uv8nynb65().s[80]++, new Set(recentSessions?.map(s => {
      /* istanbul ignore next */
      cov_uv8nynb65().f[7]++;
      cov_uv8nynb65().s[81]++;
      return `${s.device_name}-${s.ip_address}`;
    })).size);
    /* istanbul ignore next */
    cov_uv8nynb65().s[82]++;
    return {
      activeSessions:
      /* istanbul ignore next */
      (cov_uv8nynb65().b[22][0]++, activeSessions) ||
      /* istanbul ignore next */
      (cov_uv8nynb65().b[22][1]++, 0),
      unresolvedAlerts:
      /* istanbul ignore next */
      (cov_uv8nynb65().b[23][0]++, unresolvedAlerts) ||
      /* istanbul ignore next */
      (cov_uv8nynb65().b[23][1]++, 0),
      lastSuspiciousActivity:
      /* istanbul ignore next */
      (cov_uv8nynb65().b[24][0]++, lastSuspiciousActivity?.[0]?.created_at) ||
      /* istanbul ignore next */
      (cov_uv8nynb65().b[24][1]++, null),
      uniqueDevicesLast30Days:
      /* istanbul ignore next */
      (cov_uv8nynb65().b[25][0]++, uniqueDevices) ||
      /* istanbul ignore next */
      (cov_uv8nynb65().b[25][1]++, 0)
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_uv8nynb65().s[83]++;
    console.error('Error al obtener estadÃ­sticas de seguridad:', error);
    /* istanbul ignore next */
    cov_uv8nynb65().s[84]++;
    return {
      activeSessions: 0,
      unresolvedAlerts: 0,
      lastSuspiciousActivity: null,
      uniqueDevicesLast30Days: 0
    };
  }
}
// FunciÃ³n auxiliar para registrar actividad de seguridad
async function logSecurityActivity(userId, action, metadata) {
  /* istanbul ignore next */
  cov_uv8nynb65().f[8]++;
  cov_uv8nynb65().s[85]++;
  try {
    /* istanbul ignore next */
    cov_uv8nynb65().s[86]++;
    await _supabase.supabaseAdmin.from('user_activity').insert({
      user_id: userId,
      action,
      category: 'security',
      metadata,
      created_at: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_uv8nynb65().s[87]++;
    console.error('Error al registrar actividad de seguridad:', error);
  }
}
// FunciÃ³n auxiliar para obtener IP del cliente
function getClientIP(request) {
  /* istanbul ignore next */
  cov_uv8nynb65().f[9]++;
  const forwarded =
  /* istanbul ignore next */
  (cov_uv8nynb65().s[88]++, request.headers.get('x-forwarded-for'));
  const realIP =
  /* istanbul ignore next */
  (cov_uv8nynb65().s[89]++, request.headers.get('x-real-ip'));
  /* istanbul ignore next */
  cov_uv8nynb65().s[90]++;
  if (forwarded) {
    /* istanbul ignore next */
    cov_uv8nynb65().b[26][0]++;
    cov_uv8nynb65().s[91]++;
    return forwarded.split(',')[0].trim();
  } else
  /* istanbul ignore next */
  {
    cov_uv8nynb65().b[26][1]++;
  }
  cov_uv8nynb65().s[92]++;
  if (realIP) {
    /* istanbul ignore next */
    cov_uv8nynb65().b[27][0]++;
    cov_uv8nynb65().s[93]++;
    return realIP;
  } else
  /* istanbul ignore next */
  {
    cov_uv8nynb65().b[27][1]++;
  }
  cov_uv8nynb65().s[94]++;
  return /* istanbul ignore next */(cov_uv8nynb65().b[28][0]++, request.ip) ||
  /* istanbul ignore next */
  (cov_uv8nynb65().b[28][1]++, 'unknown');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,