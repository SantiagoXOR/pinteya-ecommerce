{"version":3,"names":["cartPersistenceMiddleware","cov_vuto0wppk","f","s","clearCartFromStorage","loadCartFromStorage","loadUserCart","migrateTemporaryCart","saveUserCart","useCartPersistence","CART_STORAGE_KEY","window","b","stored","localStorage","getItem","trim","includes","length","console","warn","removeItem","parsed","JSON","parse","maxAge","isExpired","timestamp","Date","now","items","error","saveCartToStorage","cartItems","dataToStore","version","setItem","stringify","saveTimeout","store","next","action","result","type","startsWith","state","getState","cartReducer","clearTimeout","setTimeout","loadCart","clearCart","temporaryCartItems","userId"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\redux\\middleware\\cartPersistence.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - CART PERSISTENCE MIDDLEWARE\r\n// ===================================\r\n\r\nimport { Middleware, AnyAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../store';\r\n\r\n// Clave para localStorage\r\nconst CART_STORAGE_KEY = 'pinteya-cart';\r\n\r\n// Definición de CartItem (importada desde cart-slice)\r\nexport interface CartItem {\r\n  id: number;\r\n  title: string;\r\n  price: number;\r\n  discountedPrice: number;\r\n  quantity: number;\r\n  imgs?: {\r\n    thumbnails: string[];\r\n    previews: string[];\r\n  };\r\n}\r\n\r\n// Tipos para el estado persistido\r\ninterface PersistedCartState {\r\n  items: CartItem[];\r\n  timestamp: number;\r\n  version: string;\r\n}\r\n\r\n// Función para cargar el carrito desde localStorage\r\nexport const loadCartFromStorage = (): CartItem[] => {\r\n  // Solo ejecutar en el cliente\r\n  if (typeof window === 'undefined') {\r\n    return [];\r\n  }\r\n\r\n  try {\r\n    const stored = localStorage.getItem(CART_STORAGE_KEY);\r\n    if (!stored || stored.trim() === '' || stored === '\"\"' || stored === \"''\") {\r\n      return [];\r\n    }\r\n\r\n    // Validar que el string no esté corrupto\r\n    if (stored.includes('\"\"') && stored.length < 5) {\r\n      console.warn('Detected corrupted cart localStorage data, cleaning up');\r\n      localStorage.removeItem(CART_STORAGE_KEY);\r\n      return [];\r\n    }\r\n\r\n    const parsed: PersistedCartState = JSON.parse(stored);\r\n\r\n    // Verificar estructura válida\r\n    if (!parsed || typeof parsed !== 'object') {\r\n      console.warn('Invalid cart data structure, cleaning up');\r\n      localStorage.removeItem(CART_STORAGE_KEY);\r\n      return [];\r\n    }\r\n\r\n    // Verificar que no sea muy antiguo (7 días)\r\n    const maxAge = 7 * 24 * 60 * 60 * 1000; // 7 días en ms\r\n    const isExpired = parsed.timestamp && (Date.now() - parsed.timestamp > maxAge);\r\n\r\n    if (isExpired) {\r\n      localStorage.removeItem(CART_STORAGE_KEY);\r\n      return [];\r\n    }\r\n\r\n    return parsed.items || [];\r\n  } catch (error) {\r\n    console.warn('Error loading cart from localStorage:', error);\r\n    // Limpiar localStorage corrupto\r\n    localStorage.removeItem(CART_STORAGE_KEY);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Función para guardar el carrito en localStorage\r\nconst saveCartToStorage = (cartItems: CartItem[]): void => {\r\n  // Solo ejecutar en el cliente\r\n  if (typeof window === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // Si el carrito está vacío, limpiar localStorage\r\n    if (cartItems.length === 0) {\r\n      localStorage.removeItem(CART_STORAGE_KEY);\r\n      return;\r\n    }\r\n\r\n    const dataToStore: PersistedCartState = {\r\n      items: cartItems,\r\n      timestamp: Date.now(),\r\n      version: '1.0.0'\r\n    };\r\n\r\n    localStorage.setItem(CART_STORAGE_KEY, JSON.stringify(dataToStore));\r\n  } catch (error) {\r\n    console.warn('Error saving cart to localStorage:', error);\r\n  }\r\n};\r\n\r\n// Función para limpiar el carrito del localStorage\r\nexport const clearCartFromStorage = (): void => {\r\n  if (typeof window === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  try {\r\n    localStorage.removeItem(CART_STORAGE_KEY);\r\n  } catch (error) {\r\n    console.warn('Error clearing cart from localStorage:', error);\r\n  }\r\n};\r\n\r\n// Variable para manejar debounce\r\nlet saveTimeout: NodeJS.Timeout | null = null;\r\n\r\n// Middleware para persistir el carrito automáticamente\r\nexport const cartPersistenceMiddleware: Middleware =\r\n  (store) => (next) => (action: AnyAction) => {\r\n    // Ejecutar la acción primero\r\n    const result = next(action);\r\n\r\n    // Solo persistir acciones relacionadas con el carrito\r\n    if (action.type?.startsWith('cart/')) {\r\n      const state = store.getState() as RootState;\r\n      const cartItems = state.cartReducer.items;\r\n\r\n      // Limpiar timeout anterior si existe\r\n      if (saveTimeout) {\r\n        clearTimeout(saveTimeout);\r\n      }\r\n\r\n      // Guardar en localStorage con debounce más largo para evitar escrituras excesivas\r\n      saveTimeout = setTimeout(() => {\r\n        // Solo guardar si hay items o si se está vaciando el carrito\r\n        if (cartItems.length > 0 || action.type === 'cart/removeAllItemsFromCart') {\r\n          saveCartToStorage(cartItems);\r\n        }\r\n        saveTimeout = null;\r\n      }, 500); // Aumentado de 100ms a 500ms\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n// Hook personalizado para manejar la persistencia del carrito\r\nexport const useCartPersistence = () => {\r\n  const loadCart = () => loadCartFromStorage();\r\n  const clearCart = () => clearCartFromStorage();\r\n\r\n  return {\r\n    loadCart,\r\n    clearCart\r\n  };\r\n};\r\n\r\n// Función para migrar carrito temporal a usuario autenticado\r\nexport const migrateTemporaryCart = async (\r\n  temporaryCartItems: CartItem[],\r\n  userId: string\r\n): Promise<boolean> => {\r\n  try {\r\n    // Aquí se podría implementar la lógica para guardar el carrito\r\n    // en la base de datos asociado al usuario\r\n    // Por ahora, simplemente limpiamos el localStorage\r\n    // ya que el carrito se mantendrá en Redux\r\n    \r\n    \r\n    // En una implementación completa, aquí haríamos:\r\n    // 1. Enviar los items al backend para asociarlos al usuario\r\n    // 2. Limpiar el localStorage\r\n    // 3. Cargar el carrito del usuario desde el backend\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error migrating temporary cart:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Función para cargar carrito de usuario autenticado\r\nexport const loadUserCart = async (userId: string): Promise<CartItem[]> => {\r\n  try {\r\n    // Aquí se implementaría la lógica para cargar el carrito\r\n    // del usuario desde la base de datos\r\n    \r\n    \r\n    // En una implementación completa, aquí haríamos:\r\n    // 1. Hacer una petición al backend para obtener el carrito del usuario\r\n    // 2. Retornar los items del carrito\r\n    \r\n    // Por ahora, retornamos un array vacío\r\n    return [];\r\n  } catch (error) {\r\n    console.error('Error loading user cart:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Función para guardar carrito de usuario autenticado\r\nexport const saveUserCart = async (\r\n  userId: string, \r\n  cartItems: CartItem[]\r\n): Promise<boolean> => {\r\n  try {\r\n    // Aquí se implementaría la lógica para guardar el carrito\r\n    // del usuario en la base de datos\r\n    \r\n    \r\n    // En una implementación completa, aquí haríamos:\r\n    // 1. Enviar los items al backend para guardarlos asociados al usuario\r\n    // 2. Manejar la respuesta del backend\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error saving user cart:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}