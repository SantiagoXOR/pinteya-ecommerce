{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\admin\\seo\\page.tsx"],"sourcesContent":["'use client'\n\n// ===================================\n// PINTEYA E-COMMERCE - SEO ADMINISTRATIVE DASHBOARD\n// Dashboard principal para gestión completa de SEO\n// ===================================\n\nimport React, { useState, useEffect } from 'react'\nimport { AdminLayout } from '@/components/admin/layout/AdminLayout'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport { Progress } from '@/components/ui/progress'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\nimport {\n  Search,\n  TrendingUp,\n  TrendingDown,\n  AlertTriangle,\n  CheckCircle,\n  BarChart3,\n  Globe,\n  Zap,\n  Settings,\n  RefreshCw,\n  Download,\n  Eye,\n  Target,\n  Activity,\n  Clock,\n  Users,\n  MousePointer,\n} from 'lucide-react'\nimport Link from 'next/link'\n\n// ===================================\n// INTERFACES\n// ===================================\n\ninterface SEOOverviewData {\n  overallScore: number\n  organicTraffic: number\n  averagePosition: number\n  indexationRate: number\n  coreWebVitalsScore: string\n  unresolvedAlerts: number\n  lastUpdated: Date\n}\n\ninterface SEOMetricCard {\n  title: string\n  value: string | number\n  change?: number\n  trend?: 'up' | 'down' | 'stable'\n  icon: React.ReactNode\n  color: string\n  description?: string\n}\n\ninterface SEOAlert {\n  id: string\n  type: 'critical' | 'warning' | 'info'\n  title: string\n  description: string\n  url?: string\n  timestamp: Date\n}\n\n// ===================================\n// COMPONENTE PRINCIPAL\n// ===================================\n\nexport default function SEOAdminDashboard() {\n  const [loading, setLoading] = useState(true)\n  const [refreshing, setRefreshing] = useState(false)\n  const [overview, setOverview] = useState<SEOOverviewData | null>(null)\n  const [alerts, setAlerts] = useState<SEOAlert[]>([])\n  const [activeTab, setActiveTab] = useState('overview')\n\n  // ===================================\n  // EFECTOS\n  // ===================================\n\n  useEffect(() => {\n    loadDashboardData()\n  }, [])\n\n  // ===================================\n  // FUNCIONES\n  // ===================================\n\n  const loadDashboardData = async () => {\n    try {\n      setLoading(true)\n\n      // Simular carga de datos (en producción vendría de las APIs)\n      await new Promise(resolve => setTimeout(resolve, 1000))\n\n      const mockOverview: SEOOverviewData = {\n        overallScore: 87,\n        organicTraffic: 12450,\n        averagePosition: 3.2,\n        indexationRate: 94.5,\n        coreWebVitalsScore: 'good',\n        unresolvedAlerts: 3,\n        lastUpdated: new Date(),\n      }\n\n      const mockAlerts: SEOAlert[] = [\n        {\n          id: '1',\n          type: 'warning',\n          title: 'Meta descriptions faltantes',\n          description: '5 páginas no tienen meta description',\n          url: '/admin/seo/metadata',\n          timestamp: new Date(),\n        },\n        {\n          id: '2',\n          type: 'critical',\n          title: 'Structured data inválido',\n          description: 'Error en schema de productos',\n          url: '/admin/seo/schema',\n          timestamp: new Date(),\n        },\n        {\n          id: '3',\n          type: 'info',\n          title: 'Sitemap actualizado',\n          description: 'Se agregaron 15 nuevas URLs',\n          timestamp: new Date(),\n        },\n      ]\n\n      setOverview(mockOverview)\n      setAlerts(mockAlerts)\n    } catch (error) {\n      console.error('Error loading SEO dashboard data:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const refreshData = async () => {\n    setRefreshing(true)\n    await loadDashboardData()\n    setRefreshing(false)\n  }\n\n  const getScoreColor = (score: number) => {\n    if (score >= 80) {\n      return 'text-green-600'\n    }\n    if (score >= 60) {\n      return 'text-yellow-600'\n    }\n    return 'text-red-600'\n  }\n\n  const getScoreBadgeColor = (score: number) => {\n    if (score >= 80) {\n      return 'bg-green-100 text-green-800'\n    }\n    if (score >= 60) {\n      return 'bg-yellow-100 text-yellow-800'\n    }\n    return 'bg-red-100 text-red-800'\n  }\n\n  const getAlertIcon = (type: SEOAlert['type']) => {\n    switch (type) {\n      case 'critical':\n        return <AlertTriangle className='h-4 w-4 text-red-500' />\n      case 'warning':\n        return <AlertTriangle className='h-4 w-4 text-yellow-500' />\n      case 'info':\n        return <CheckCircle className='h-4 w-4 text-blue-500' />\n    }\n  }\n\n  // ===================================\n  // MÉTRICAS PRINCIPALES\n  // ===================================\n\n  const getMainMetrics = (): SEOMetricCard[] => {\n    if (!overview) {\n      return []\n    }\n\n    return [\n      {\n        title: 'SEO Score General',\n        value: overview.overallScore,\n        change: 5,\n        trend: 'up',\n        icon: <Target className='h-5 w-5' />,\n        color: 'text-blue-600',\n        description: 'Puntuación general de SEO',\n      },\n      {\n        title: 'Tráfico Orgánico',\n        value: overview.organicTraffic.toLocaleString(),\n        change: 12,\n        trend: 'up',\n        icon: <Users className='h-5 w-5' />,\n        color: 'text-green-600',\n        description: 'Visitantes desde búsquedas',\n      },\n      {\n        title: 'Posición Promedio',\n        value: overview.averagePosition.toFixed(1),\n        change: -0.3,\n        trend: 'up',\n        icon: <TrendingUp className='h-5 w-5' />,\n        color: 'text-purple-600',\n        description: 'Posición promedio en SERPs',\n      },\n      {\n        title: 'Indexación',\n        value: `${overview.indexationRate}%`,\n        change: 2,\n        trend: 'up',\n        icon: <Globe className='h-5 w-5' />,\n        color: 'text-indigo-600',\n        description: 'Páginas indexadas por Google',\n      },\n      {\n        title: 'Core Web Vitals',\n        value: overview.coreWebVitalsScore,\n        icon: <Zap className='h-5 w-5' />,\n        color: overview.coreWebVitalsScore === 'good' ? 'text-green-600' : 'text-yellow-600',\n        description: 'Estado de métricas de rendimiento',\n      },\n      {\n        title: 'Alertas Activas',\n        value: overview.unresolvedAlerts,\n        icon: <AlertTriangle className='h-5 w-5' />,\n        color: overview.unresolvedAlerts > 0 ? 'text-red-600' : 'text-green-600',\n        description: 'Issues que requieren atención',\n      },\n    ]\n  }\n\n  // ===================================\n  // SECCIONES RÁPIDAS\n  // ===================================\n\n  const quickActions = [\n    {\n      title: 'Analytics SEO',\n      description: 'Métricas detalladas y reportes',\n      href: '/admin/seo/analytics',\n      icon: <BarChart3 className='h-6 w-6' />,\n      color: 'bg-blue-500',\n      badge: 'Enterprise',\n    },\n    {\n      title: 'Testing Suite',\n      description: 'Tests automatizados de SEO',\n      href: '/admin/seo/testing',\n      icon: <CheckCircle className='h-6 w-6' />,\n      color: 'bg-green-500',\n      badge: 'New',\n    },\n    {\n      title: 'Optimization Tools',\n      description: 'Herramientas de optimización',\n      href: '/admin/seo/optimization',\n      icon: <Zap className='h-6 w-6' />,\n      color: 'bg-purple-500',\n    },\n    {\n      title: 'Sitemap Manager',\n      description: 'Gestión de sitemaps XML',\n      href: '/admin/seo/sitemap',\n      icon: <Globe className='h-6 w-6' />,\n      color: 'bg-indigo-500',\n    },\n    {\n      title: 'Schema Markup',\n      description: 'Structured data y validación',\n      href: '/admin/seo/schema',\n      icon: <Activity className='h-6 w-6' />,\n      color: 'bg-orange-500',\n    },\n    {\n      title: 'Configuración',\n      description: 'Settings y configuración SEO',\n      href: '/admin/seo/settings',\n      icon: <Settings className='h-6 w-6' />,\n      color: 'bg-gray-500',\n    },\n  ]\n\n  // ===================================\n  // RENDER\n  // ===================================\n\n  if (loading) {\n    return (\n      <AdminLayout\n        title='SEO Dashboard'\n        breadcrumbs={[{ label: 'Admin', href: '/admin' }, { label: 'SEO Dashboard' }]}\n      >\n        <div className='space-y-6'>\n          <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6'>\n            {[...Array(6)].map((_, i) => (\n              <Card key={i} className='animate-pulse'>\n                <CardHeader className='space-y-2'>\n                  <div className='h-4 bg-gray-200 rounded w-3/4'></div>\n                  <div className='h-8 bg-gray-200 rounded w-1/2'></div>\n                </CardHeader>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </AdminLayout>\n    )\n  }\n\n  return (\n    <AdminLayout\n      title='SEO Dashboard'\n      breadcrumbs={[{ label: 'Admin', href: '/admin' }, { label: 'SEO Dashboard' }]}\n      actions={\n        <div className='flex gap-2'>\n          <Button variant='outline' size='sm' onClick={refreshData} disabled={refreshing}>\n            <RefreshCw className={`h-4 w-4 mr-2 ${refreshing ? 'animate-spin' : ''}`} />\n            Actualizar\n          </Button>\n          <Button size='sm'>\n            <Download className='h-4 w-4 mr-2' />\n            Exportar Reporte\n          </Button>\n        </div>\n      }\n    >\n      <div className='space-y-6'>\n        {/* Header con Score General */}\n        {overview && (\n          <Card className='border-l-4 border-l-blue-500'>\n            <CardHeader>\n              <div className='flex items-center justify-between'>\n                <div>\n                  <CardTitle className='text-2xl'>SEO Score General</CardTitle>\n                  <CardDescription>\n                    Última actualización: {overview.lastUpdated.toLocaleString()}\n                  </CardDescription>\n                </div>\n                <div className='text-right'>\n                  <div className={`text-4xl font-bold ${getScoreColor(overview.overallScore)}`}>\n                    {overview.overallScore}/100\n                  </div>\n                  <Badge className={getScoreBadgeColor(overview.overallScore)}>\n                    {overview.overallScore >= 80\n                      ? 'Excelente'\n                      : overview.overallScore >= 60\n                        ? 'Bueno'\n                        : 'Necesita Mejoras'}\n                  </Badge>\n                </div>\n              </div>\n              <Progress value={overview.overallScore} className='mt-4' />\n            </CardHeader>\n          </Card>\n        )}\n\n        {/* Métricas Principales */}\n        <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6'>\n          {getMainMetrics().map((metric, index) => (\n            <Card key={index} className='hover:shadow-md transition-shadow'>\n              <CardHeader className='flex flex-row items-center justify-between space-y-0 pb-2'>\n                <CardTitle className='text-sm font-medium text-gray-600'>{metric.title}</CardTitle>\n                <div className={metric.color}>{metric.icon}</div>\n              </CardHeader>\n              <CardContent>\n                <div className='flex items-center justify-between'>\n                  <div className='text-2xl font-bold'>{metric.value}</div>\n                  {metric.change !== undefined && (\n                    <div\n                      className={`flex items-center text-sm ${\n                        metric.trend === 'up'\n                          ? 'text-green-600'\n                          : metric.trend === 'down'\n                            ? 'text-red-600'\n                            : 'text-gray-600'\n                      }`}\n                    >\n                      {metric.trend === 'up' ? (\n                        <TrendingUp className='h-4 w-4 mr-1' />\n                      ) : metric.trend === 'down' ? (\n                        <TrendingDown className='h-4 w-4 mr-1' />\n                      ) : null}\n                      {Math.abs(metric.change)}%\n                    </div>\n                  )}\n                </div>\n                {metric.description && (\n                  <p className='text-xs text-gray-500 mt-1'>{metric.description}</p>\n                )}\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        {/* Alertas Recientes */}\n        {alerts.length > 0 && (\n          <Card>\n            <CardHeader>\n              <CardTitle className='flex items-center gap-2'>\n                <AlertTriangle className='h-5 w-5' />\n                Alertas Recientes\n              </CardTitle>\n              <CardDescription>Issues que requieren atención inmediata</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className='space-y-3'>\n                {alerts.slice(0, 5).map(alert => (\n                  <Alert key={alert.id} className='border-l-4 border-l-gray-200'>\n                    <div className='flex items-start gap-3'>\n                      {getAlertIcon(alert.type)}\n                      <div className='flex-1'>\n                        <div className='flex items-center justify-between'>\n                          <h4 className='font-medium'>{alert.title}</h4>\n                          <span className='text-xs text-gray-500'>\n                            {alert.timestamp.toLocaleTimeString()}\n                          </span>\n                        </div>\n                        <AlertDescription className='mt-1'>{alert.description}</AlertDescription>\n                        {alert.url && (\n                          <Link\n                            href={alert.url}\n                            className='text-sm text-blue-600 hover:underline mt-2 inline-block'\n                          >\n                            Ver detalles →\n                          </Link>\n                        )}\n                      </div>\n                    </div>\n                  </Alert>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Acciones Rápidas */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Herramientas SEO</CardTitle>\n            <CardDescription>Acceso rápido a todas las funcionalidades de SEO</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4'>\n              {quickActions.map((action, index) => (\n                <Link key={index} href={action.href}>\n                  <Card className='hover:shadow-md transition-all cursor-pointer border-2 hover:border-blue-200'>\n                    <CardHeader className='pb-3'>\n                      <div className='flex items-center justify-between'>\n                        <div className={`p-2 rounded-lg ${action.color} text-white`}>\n                          {action.icon}\n                        </div>\n                        {action.badge && (\n                          <Badge variant='secondary' className='text-xs'>\n                            {action.badge}\n                          </Badge>\n                        )}\n                      </div>\n                      <CardTitle className='text-lg'>{action.title}</CardTitle>\n                      <CardDescription>{action.description}</CardDescription>\n                    </CardHeader>\n                  </Card>\n                </Link>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </AdminLayout>\n  )\n}\n"],"names":["SEOAdminDashboard","loading","setLoading","useState","refreshing","setRefreshing","overview","setOverview","alerts","setAlerts","activeTab","setActiveTab","useEffect","loadDashboardData","Promise","resolve","setTimeout","mockOverview","overallScore","organicTraffic","averagePosition","indexationRate","coreWebVitalsScore","unresolvedAlerts","lastUpdated","Date","mockAlerts","id","type","title","description","url","timestamp","error","console","refreshData","getScoreColor","score","getScoreBadgeColor","getAlertIcon","AlertTriangle","className","CheckCircle","getMainMetrics","value","change","trend","icon","Target","color","toLocaleString","Users","toFixed","TrendingUp","Globe","Zap","quickActions","href","BarChart3","badge","Activity","Settings","AdminLayout","breadcrumbs","label","div","Array","map","_","i","Card","CardHeader","actions","Button","variant","size","onClick","disabled","RefreshCw","Download","CardTitle","CardDescription","Badge","Progress","metric","index","CardContent","undefined","TrendingDown","Math","abs","p","length","slice","alert","Alert","h4","span","toLocaleTimeString","AlertDescription","Link","action"],"mappings":"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"}