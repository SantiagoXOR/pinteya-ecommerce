fcdecb566c02d970846d9bf6ce5cd18e
'use client';
"use strict";

/* istanbul ignore next */
function cov_1d1tmkjsiq() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\test\\TestModal.tsx";
  var hash = "071223018e1b7586b5c52ed5ffd61d7e099ff3ce";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\test\\TestModal.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 25
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 39
        }
      },
      "6": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 39
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 51
        }
      },
      "8": {
        start: {
          line: 17,
          column: 39
        },
        end: {
          line: 17,
          column: 51
        }
      },
      "9": {
        start: {
          line: 18,
          column: 28
        },
        end: {
          line: 18,
          column: 41
        }
      },
      "10": {
        start: {
          line: 19,
          column: 27
        },
        end: {
          line: 19,
          column: 40
        }
      },
      "11": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 22,
          column: 20
        }
      },
      "12": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 66
        }
      },
      "13": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "14": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 19
        }
      },
      "15": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "16": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 31,
          column: 10
        }
      },
      "17": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 53
        }
      },
      "18": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "19": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 30
        }
      },
      "20": {
        start: {
          line: 37,
          column: 17
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "21": {
        start: {
          line: 40,
          column: 32
        },
        end: {
          line: 40,
          column: 88
        }
      },
      "22": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "23": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "24": {
        start: {
          line: 43,
          column: 23
        },
        end: {
          line: 43,
          column: 95
        }
      },
      "25": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 48,
          column: 13
        }
      },
      "26": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 57
        }
      },
      "27": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 39
        }
      },
      "28": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 25
        }
      },
      "29": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "30": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 31
        }
      },
      "31": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 18
        }
      },
      "32": {
        start: {
          line: 58,
          column: 28
        },
        end: {
          line: 58,
          column: 55
        }
      },
      "33": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 94,
          column: 7
        }
      },
      "34": {
        start: {
          line: 85,
          column: 45
        },
        end: {
          line: 85,
          column: 59
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 33
          }
        },
        loc: {
          start: {
            line: 16,
            column: 47
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 39
          },
          end: {
            line: 20,
            column: 40
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 34
          }
        },
        loc: {
          start: {
            line: 24,
            column: 53
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 24
      },
      "4": {
        name: "TestModal",
        decl: {
          start: {
            line: 57,
            column: 9
          },
          end: {
            line: 57,
            column: 18
          }
        },
        loc: {
          start: {
            line: 57,
            column: 21
          },
          end: {
            line: 95,
            column: 1
          }
        },
        line: 57
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 85,
            column: 41
          },
          end: {
            line: 85,
            column: 42
          }
        },
        loc: {
          start: {
            line: 85,
            column: 45
          },
          end: {
            line: 85,
            column: 59
          }
        },
        line: 85
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 15
          },
          end: {
            line: 21,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 21,
            column: 45
          }
        }, {
          start: {
            line: 21,
            column: 48
          },
          end: {
            line: 21,
            column: 65
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 20
          }
        }, {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 25,
            column: 27
          }
        }, {
          start: {
            line: 25,
            column: 31
          },
          end: {
            line: 25,
            column: 45
          }
        }],
        line: 25
      },
      "4": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "5": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 20
          }
        }, {
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 28,
            column: 47
          }
        }, {
          start: {
            line: 28,
            column: 51
          },
          end: {
            line: 28,
            column: 76
          }
        }],
        line: 28
      },
      "6": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "7": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 13
          }
        }, {
          start: {
            line: 34,
            column: 17
          },
          end: {
            line: 34,
            column: 31
          }
        }],
        line: 34
      },
      "8": {
        loc: {
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 53
          }
        }, {
          start: {
            line: 40,
            column: 57
          },
          end: {
            line: 40,
            column: 88
          }
        }],
        line: 40
      },
      "9": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "10": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 42,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 42,
            column: 29
          }
        }, {
          start: {
            line: 42,
            column: 33
          },
          end: {
            line: 42,
            column: 79
          }
        }],
        line: 42
      },
      "11": {
        loc: {
          start: {
            line: 43,
            column: 23
          },
          end: {
            line: 43,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 47
          },
          end: {
            line: 43,
            column: 88
          }
        }, {
          start: {
            line: 43,
            column: 91
          },
          end: {
            line: 43,
            column: 95
          }
        }],
        line: 43
      },
      "12": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        }, {
          start: {
            line: 46,
            column: 19
          },
          end: {
            line: 48,
            column: 13
          }
        }],
        line: 44
      },
      "13": {
        loc: {
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 20
          }
        }, {
          start: {
            line: 44,
            column: 25
          },
          end: {
            line: 44,
            column: 33
          }
        }, {
          start: {
            line: 44,
            column: 37
          },
          end: {
            line: 44,
            column: 45
          }
        }],
        line: 44
      },
      "14": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\test\\TestModal.tsx"],
      sourcesContent: ["'use client'\n\nimport React, { useState } from 'react'\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog'\nimport { Button } from '@/components/ui/button'\n\nexport function TestModal() {\n  const [open, setOpen] = useState(false)\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>\n        <Button variant=\"outline\">Abrir Modal de Prueba</Button>\n      </DialogTrigger>\n      <DialogContent showCloseButton={true}>\n        <DialogHeader>\n          <DialogTitle>Modal de Prueba</DialogTitle>\n        </DialogHeader>\n        <div className=\"p-4\">\n          <p>Este es un modal de prueba para verificar que el bot\xF3n de cerrar funciona correctamente.</p>\n          <Button \n            onClick={() => setOpen(false)}\n            className=\"mt-4\"\n          >\n            Cerrar con bot\xF3n\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}"],
      names: ["TestModal", "open", "setOpen", "useState", "Dialog", "onOpenChange", "DialogTrigger", "asChild", "Button", "variant", "DialogContent", "showCloseButton", "DialogHeader", "DialogTitle", "div", "className", "p", "onClick"],
      mappings: "AAAA;;;;;+BAMgBA;;;eAAAA;;;;+DAJgB;wBACgD;wBACzD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEhB,SAASA;IACd,MAAM,CAACC,MAAMC,QAAQ,GAAGC,IAAAA,eAAQ,EAAC;IAEjC,qBACE,sBAACC,cAAM;QAACH,MAAMA;QAAMI,cAAcH;;0BAChC,qBAACI,qBAAa;gBAACC,OAAO;0BACpB,cAAA,qBAACC,cAAM;oBAACC,SAAQ;8BAAU;;;0BAE5B,sBAACC,qBAAa;gBAACC,iBAAiB;;kCAC9B,qBAACC,oBAAY;kCACX,cAAA,qBAACC,mBAAW;sCAAC;;;kCAEf,sBAACC;wBAAIC,WAAU;;0CACb,qBAACC;0CAAE;;0CACH,qBAACR,cAAM;gCACLS,SAAS,IAAMf,QAAQ;gCACvBa,WAAU;0CACX;;;;;;;;AAOX"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "071223018e1b7586b5c52ed5ffd61d7e099ff3ce"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1d1tmkjsiq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1d1tmkjsiq();
cov_1d1tmkjsiq().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1d1tmkjsiq().s[1]++;
Object.defineProperty(exports, "TestModal", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1d1tmkjsiq().f[0]++;
    cov_1d1tmkjsiq().s[2]++;
    return TestModal;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1d1tmkjsiq().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1d1tmkjsiq().s[4]++, _interop_require_wildcard(require("react")));
const _dialog =
/* istanbul ignore next */
(cov_1d1tmkjsiq().s[5]++, require("../ui/dialog"));
const _button =
/* istanbul ignore next */
(cov_1d1tmkjsiq().s[6]++, require("../ui/button"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1d1tmkjsiq().f[1]++;
  cov_1d1tmkjsiq().s[7]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1d1tmkjsiq().b[0][0]++;
    cov_1d1tmkjsiq().s[8]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1d1tmkjsiq().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1d1tmkjsiq().s[9]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1d1tmkjsiq().s[10]++, new WeakMap());
  /* istanbul ignore next */
  cov_1d1tmkjsiq().s[11]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1d1tmkjsiq().f[2]++;
    cov_1d1tmkjsiq().s[12]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1d1tmkjsiq().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1d1tmkjsiq().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1d1tmkjsiq().f[3]++;
  cov_1d1tmkjsiq().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_1d1tmkjsiq().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1d1tmkjsiq().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1d1tmkjsiq().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1d1tmkjsiq().b[2][0]++;
    cov_1d1tmkjsiq().s[14]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1d1tmkjsiq().b[2][1]++;
  }
  cov_1d1tmkjsiq().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_1d1tmkjsiq().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1d1tmkjsiq().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1d1tmkjsiq().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1d1tmkjsiq().b[4][0]++;
    cov_1d1tmkjsiq().s[16]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1d1tmkjsiq().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1d1tmkjsiq().s[17]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1d1tmkjsiq().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_1d1tmkjsiq().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1d1tmkjsiq().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1d1tmkjsiq().b[6][0]++;
    cov_1d1tmkjsiq().s[19]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1d1tmkjsiq().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1d1tmkjsiq().s[20]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1d1tmkjsiq().s[21]++,
  /* istanbul ignore next */
  (cov_1d1tmkjsiq().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1d1tmkjsiq().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1d1tmkjsiq().s[22]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1d1tmkjsiq().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_1d1tmkjsiq().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1d1tmkjsiq().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1d1tmkjsiq().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1d1tmkjsiq().s[24]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1d1tmkjsiq().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1d1tmkjsiq().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1d1tmkjsiq().s[25]++;
      if (
      /* istanbul ignore next */
      (cov_1d1tmkjsiq().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1d1tmkjsiq().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1d1tmkjsiq().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1d1tmkjsiq().b[12][0]++;
        cov_1d1tmkjsiq().s[26]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1d1tmkjsiq().b[12][1]++;
        cov_1d1tmkjsiq().s[27]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1d1tmkjsiq().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1d1tmkjsiq().s[28]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1d1tmkjsiq().s[29]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1d1tmkjsiq().b[14][0]++;
    cov_1d1tmkjsiq().s[30]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1d1tmkjsiq().b[14][1]++;
  }
  cov_1d1tmkjsiq().s[31]++;
  return newObj;
}
function TestModal() {
  /* istanbul ignore next */
  cov_1d1tmkjsiq().f[4]++;
  const [open, setOpen] =
  /* istanbul ignore next */
  (cov_1d1tmkjsiq().s[32]++, (0, _react.useState)(false));
  /* istanbul ignore next */
  cov_1d1tmkjsiq().s[33]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_dialog.Dialog, {
    open: open,
    onOpenChange: setOpen,
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_dialog.DialogTrigger, {
      asChild: true,
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
        variant: "outline",
        children: "Abrir Modal de Prueba"
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_dialog.DialogContent, {
      showCloseButton: true,
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_dialog.DialogHeader, {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_dialog.DialogTitle, {
          children: "Modal de Prueba"
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "p-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          children: "Este es un modal de prueba para verificar que el bot\xf3n de cerrar funciona correctamente."
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
          onClick: () => {
            /* istanbul ignore next */
            cov_1d1tmkjsiq().f[5]++;
            cov_1d1tmkjsiq().s[34]++;
            return setOpen(false);
          },
          className: "mt-4",
          children: "Cerrar con bot\xf3n"
        })]
      })]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUZXN0TW9kYWwiLCJjb3ZfMWQxdG1ranNpcSIsImYiLCJvcGVuIiwic2V0T3BlbiIsInMiLCJfcmVhY3QiLCJ1c2VTdGF0ZSIsIl9qc3hydW50aW1lIiwianN4cyIsIl9kaWFsb2ciLCJEaWFsb2ciLCJvbk9wZW5DaGFuZ2UiLCJqc3giLCJEaWFsb2dUcmlnZ2VyIiwiYXNDaGlsZCIsIl9idXR0b24iLCJCdXR0b24iLCJ2YXJpYW50IiwiRGlhbG9nQ29udGVudCIsInNob3dDbG9zZUJ1dHRvbiIsIkRpYWxvZ0hlYWRlciIsIkRpYWxvZ1RpdGxlIiwiY2xhc3NOYW1lIiwib25DbGljayJdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXHNyY1xcY29tcG9uZW50c1xcdGVzdFxcVGVzdE1vZGFsLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCdcblxuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBEaWFsb2csIERpYWxvZ0NvbnRlbnQsIERpYWxvZ0hlYWRlciwgRGlhbG9nVGl0bGUsIERpYWxvZ1RyaWdnZXIgfSBmcm9tICdAL2NvbXBvbmVudHMvdWkvZGlhbG9nJ1xuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnQC9jb21wb25lbnRzL3VpL2J1dHRvbidcblxuZXhwb3J0IGZ1bmN0aW9uIFRlc3RNb2RhbCgpIHtcbiAgY29uc3QgW29wZW4sIHNldE9wZW5dID0gdXNlU3RhdGUoZmFsc2UpXG5cbiAgcmV0dXJuIChcbiAgICA8RGlhbG9nIG9wZW49e29wZW59IG9uT3BlbkNoYW5nZT17c2V0T3Blbn0+XG4gICAgICA8RGlhbG9nVHJpZ2dlciBhc0NoaWxkPlxuICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJvdXRsaW5lXCI+QWJyaXIgTW9kYWwgZGUgUHJ1ZWJhPC9CdXR0b24+XG4gICAgICA8L0RpYWxvZ1RyaWdnZXI+XG4gICAgICA8RGlhbG9nQ29udGVudCBzaG93Q2xvc2VCdXR0b249e3RydWV9PlxuICAgICAgICA8RGlhbG9nSGVhZGVyPlxuICAgICAgICAgIDxEaWFsb2dUaXRsZT5Nb2RhbCBkZSBQcnVlYmE8L0RpYWxvZ1RpdGxlPlxuICAgICAgICA8L0RpYWxvZ0hlYWRlcj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwLTRcIj5cbiAgICAgICAgICA8cD5Fc3RlIGVzIHVuIG1vZGFsIGRlIHBydWViYSBwYXJhIHZlcmlmaWNhciBxdWUgZWwgYm90w7NuIGRlIGNlcnJhciBmdW5jaW9uYSBjb3JyZWN0YW1lbnRlLjwvcD5cbiAgICAgICAgICA8QnV0dG9uIFxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0T3BlbihmYWxzZSl9XG4gICAgICAgICAgICBjbGFzc05hbWU9XCJtdC00XCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICBDZXJyYXIgY29uIGJvdMOzblxuICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvRGlhbG9nQ29udGVudD5cbiAgICA8L0RpYWxvZz5cbiAgKVxufSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrQkFNZ0I7Ozs7OztXQUFBQSxTQUFBOzs7Ozs7Ozt5RUFKZ0I7OztrQ0FDZ0Q7OztrQ0FDekQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFaEIsU0FBU0EsVUFBQTtFQUFBO0VBQUFDLGNBQUEsR0FBQUMsQ0FBQTtFQUNkLE1BQU0sQ0FBQ0MsSUFBQSxFQUFNQyxPQUFBLENBQVE7RUFBQTtFQUFBLENBQUFILGNBQUEsR0FBQUksQ0FBQSxRQUFHLElBQUFDLE1BQUEsQ0FBQUMsUUFBUSxFQUFDO0VBQUE7RUFBQU4sY0FBQSxHQUFBSSxDQUFBO0VBRWpDLG9CQUNFLElBQUFHLFdBQUEsQ0FBQUMsSUFBQSxFQUFDQyxPQUFBLENBQUFDLE1BQU07SUFBQ1IsSUFBQSxFQUFNQSxJQUFBO0lBQU1TLFlBQUEsRUFBY1IsT0FBQTs0QkFDaEMsSUFBQUksV0FBQSxDQUFBSyxHQUFBLEVBQUNILE9BQUEsQ0FBQUksYUFBYTtNQUFDQyxPQUFPO2dCQUNwQixpQkFBQVAsV0FBQSxDQUFBSyxHQUFBLEVBQUNHLE9BQUEsQ0FBQUMsTUFBTTtRQUFDQyxPQUFBLEVBQVE7a0JBQVU7O3FCQUU1QixJQUFBVixXQUFBLENBQUFDLElBQUEsRUFBQ0MsT0FBQSxDQUFBUyxhQUFhO01BQUNDLGVBQUEsRUFBaUI7OEJBQzlCLElBQUFaLFdBQUEsQ0FBQUssR0FBQSxFQUFDSCxPQUFBLENBQUFXLFlBQVk7a0JBQ1gsaUJBQUFiLFdBQUEsQ0FBQUssR0FBQSxFQUFDSCxPQUFBLENBQUFZLFdBQVc7b0JBQUM7O3VCQUVmLElBQUFkLFdBQUEsQ0FBQUMsSUFBQSxFQUFDO1FBQUljLFNBQUEsRUFBVTtnQ0FDYixJQUFBZixXQUFBLENBQUFLLEdBQUEsRUFBQztvQkFBRTt5QkFDSCxJQUFBTCxXQUFBLENBQUFLLEdBQUEsRUFBQ0csT0FBQSxDQUFBQyxNQUFNO1VBQ0xPLE9BQUEsRUFBU0EsQ0FBQSxLQUFNO1lBQUE7WUFBQXZCLGNBQUEsR0FBQUMsQ0FBQTtZQUFBRCxjQUFBLEdBQUFJLENBQUE7WUFBQSxPQUFBRCxPQUFBLENBQVE7VUFBQTtVQUN2Qm1CLFNBQUEsRUFBVTtvQkFDWDs7Ozs7QUFPWCIsImlnbm9yZUxpc3QiOltdfQ==