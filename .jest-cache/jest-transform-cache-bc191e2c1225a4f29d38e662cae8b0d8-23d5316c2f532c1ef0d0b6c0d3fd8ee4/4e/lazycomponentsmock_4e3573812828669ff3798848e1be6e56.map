{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\__tests__\\mocks\\lazy-components.mock.tsx"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - LAZY COMPONENTS MOCKS\r\n// Mocks para componentes lazy loading en tests\r\n// ===================================\r\n\r\nimport React from 'react';\r\nimport { jest } from '@jest/globals';\r\n\r\n// ===================================\r\n// MOCK COMPONENTS\r\n// ===================================\r\n\r\n// Mock de componente admin dashboard\r\nconst MockAdminDashboard = React.forwardRef<HTMLDivElement, any>((props, ref) => (\r\n  <div ref={ref} data-testid=\"mock-admin-dashboard\" {...props}>\r\n    <h1>Mock Admin Dashboard</h1>\r\n    <div>Dashboard content loaded</div>\r\n  </div>\r\n));\r\nMockAdminDashboard.displayName = 'MockAdminDashboard';\r\n\r\n// Mock de componente product list\r\nconst MockProductList = React.forwardRef<HTMLDivElement, any>((props, ref) => (\r\n  <div ref={ref} data-testid=\"mock-product-list\" {...props}>\r\n    <h2>Mock Product List</h2>\r\n    <div>Products loaded</div>\r\n  </div>\r\n));\r\nMockProductList.displayName = 'MockProductList';\r\n\r\n// Mock de componente product form\r\nconst MockProductForm = React.forwardRef<HTMLDivElement, any>((props, ref) => (\r\n  <div ref={ref} data-testid=\"mock-product-form\" {...props}>\r\n    <h2>Mock Product Form</h2>\r\n    <form>Form loaded</form>\r\n  </div>\r\n));\r\nMockProductForm.displayName = 'MockProductForm';\r\n\r\n// Mock de componente logistics map\r\nconst MockLogisticsMap = React.forwardRef<HTMLDivElement, any>((props, ref) => (\r\n  <div ref={ref} data-testid=\"mock-logistics-map\" {...props}>\r\n    <h2>Mock Logistics Map</h2>\r\n    <div>Map loaded</div>\r\n  </div>\r\n));\r\nMockLogisticsMap.displayName = 'MockLogisticsMap';\r\n\r\n// Mock de componente real time dashboard\r\nconst MockRealTimeDashboard = React.forwardRef<HTMLDivElement, any>((props, ref) => (\r\n  <div ref={ref} data-testid=\"mock-realtime-dashboard\" {...props}>\r\n    <h2>Mock Real Time Dashboard</h2>\r\n    <div>Real time data loaded</div>\r\n  </div>\r\n));\r\nMockRealTimeDashboard.displayName = 'MockRealTimeDashboard';\r\n\r\n// ===================================\r\n// MOCK IMPLEMENTATIONS\r\n// ===================================\r\n\r\n// Mock de React.lazy\r\nexport const mockLazy = jest.fn((importFn: () => Promise<any>) => {\r\n  return React.forwardRef((props: any, ref: any) => {\r\n    const [Component, setComponent] = React.useState<React.ComponentType | null>(null);\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [error, setError] = React.useState<Error | null>(null);\r\n\r\n    React.useEffect(() => {\r\n      importFn()\r\n        .then((module) => {\r\n          setComponent(() => module.default || module);\r\n          setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          setError(err);\r\n          setLoading(false);\r\n        });\r\n    }, []);\r\n\r\n    if (loading) {\r\n      return React.createElement('div', { \r\n        'data-testid': 'lazy-loading',\r\n        children: 'Loading...' \r\n      });\r\n    }\r\n\r\n    if (error) {\r\n      return React.createElement('div', { \r\n        'data-testid': 'lazy-error',\r\n        children: `Error: ${error.message}` \r\n      });\r\n    }\r\n\r\n    if (Component) {\r\n      return React.createElement(Component, { ...props, ref });\r\n    }\r\n\r\n    return null;\r\n  });\r\n});\r\n\r\n// Mock de React.Suspense\r\nexport const mockSuspense = jest.fn(({ children, fallback }: any) => {\r\n  return React.createElement('div', {\r\n    'data-testid': 'suspense-boundary',\r\n    children: [\r\n      React.createElement('div', {\r\n        key: 'fallback',\r\n        'data-testid': 'suspense-fallback',\r\n        children: fallback\r\n      }),\r\n      React.createElement('div', {\r\n        key: 'content',\r\n        'data-testid': 'suspense-content',\r\n        children\r\n      })\r\n    ]\r\n  });\r\n});\r\n\r\n// ===================================\r\n// MOCK MODULES\r\n// ===================================\r\n\r\n// Mock del módulo admin page\r\nexport const mockAdminPageModule = {\r\n  default: MockAdminDashboard,\r\n  AdminPage: MockAdminDashboard\r\n};\r\n\r\n// Mock del módulo product list\r\nexport const mockProductListModule = {\r\n  default: MockProductList,\r\n  ProductList: MockProductList\r\n};\r\n\r\n// Mock del módulo product form\r\nexport const mockProductFormModule = {\r\n  default: MockProductForm,\r\n  ProductForm: MockProductForm\r\n};\r\n\r\n// Mock del módulo logistics map\r\nexport const mockLogisticsMapModule = {\r\n  default: MockLogisticsMap,\r\n  LogisticsMap: MockLogisticsMap\r\n};\r\n\r\n// Mock del módulo real time dashboard\r\nexport const mockRealTimeDashboardModule = {\r\n  default: MockRealTimeDashboard,\r\n  RealTimeDashboard: MockRealTimeDashboard\r\n};\r\n\r\n// ===================================\r\n// MOCK FACTORIES\r\n// ===================================\r\n\r\n// Factory para crear mocks de import dinámico\r\nexport const createMockDynamicImport = (component: React.ComponentType, delay = 100) => {\r\n  return jest.fn(() => \r\n    new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve({ default: component });\r\n      }, delay);\r\n    })\r\n  );\r\n};\r\n\r\n// Factory para crear mocks de import que fallan\r\nexport const createFailingMockDynamicImport = (errorMessage = 'Failed to load component') => {\r\n  return jest.fn(() => \r\n    new Promise((_, reject) => {\r\n      setTimeout(() => {\r\n        reject(new Error(errorMessage));\r\n      }, 100);\r\n    })\r\n  );\r\n};\r\n\r\n// ===================================\r\n// MOCK SETUP HELPERS\r\n// ===================================\r\n\r\n// Helper para configurar mocks de lazy loading exitosos\r\nexport const setupSuccessfulLazyMocks = () => {\r\n  // Mock de dynamic imports\r\n  jest.doMock('@/app/admin/page', () => mockAdminPageModule);\r\n  jest.doMock('@/components/admin/products/ProductList', () => mockProductListModule);\r\n  jest.doMock('@/components/admin/products/ProductForm', () => mockProductFormModule);\r\n  jest.doMock('@/components/admin/logistics/LogisticsMap', () => mockLogisticsMapModule);\r\n  jest.doMock('@/components/admin/logistics/RealTimeDashboard', () => mockRealTimeDashboardModule);\r\n\r\n  // Mock de React.lazy\r\n  const originalLazy = React.lazy;\r\n  React.lazy = mockLazy;\r\n\r\n  // Mock de React.Suspense\r\n  const originalSuspense = React.Suspense;\r\n  React.Suspense = mockSuspense as any;\r\n\r\n  return () => {\r\n    // Cleanup function\r\n    React.lazy = originalLazy;\r\n    React.Suspense = originalSuspense;\r\n    jest.dontMock('@/app/admin/page');\r\n    jest.dontMock('@/components/admin/products/ProductList');\r\n    jest.dontMock('@/components/admin/products/ProductForm');\r\n    jest.dontMock('@/components/admin/logistics/LogisticsMap');\r\n    jest.dontMock('@/components/admin/logistics/RealTimeDashboard');\r\n  };\r\n};\r\n\r\n// Helper para configurar mocks de lazy loading que fallan\r\nexport const setupFailingLazyMocks = () => {\r\n  // Mock de dynamic imports que fallan\r\n  jest.doMock('@/app/admin/page', () => {\r\n    throw new Error('Failed to load admin page');\r\n  });\r\n  jest.doMock('@/components/admin/products/ProductList', () => {\r\n    throw new Error('Failed to load product list');\r\n  });\r\n\r\n  const originalLazy = React.lazy;\r\n  React.lazy = jest.fn((importFn) => {\r\n    return React.forwardRef((props: any, ref: any) => {\r\n      React.useEffect(() => {\r\n        importFn().catch(() => {\r\n          // Error será manejado por error boundary\r\n        });\r\n      }, []);\r\n\r\n      throw new Error('Component failed to load');\r\n    });\r\n  });\r\n\r\n  return () => {\r\n    React.lazy = originalLazy;\r\n    jest.dontMock('@/app/admin/page');\r\n    jest.dontMock('@/components/admin/products/ProductList');\r\n  };\r\n};\r\n\r\n// ===================================\r\n// MOCK UTILITIES\r\n// ===================================\r\n\r\n// Utility para simular tiempo de carga\r\nexport const simulateLoadingTime = (ms: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n};\r\n\r\n// Utility para verificar que un componente lazy se cargó\r\nexport const waitForLazyComponent = async (testId: string, timeout = 5000) => {\r\n  const startTime = Date.now();\r\n  \r\n  while (Date.now() - startTime < timeout) {\r\n    const element = document.querySelector(`[data-testid=\"${testId}\"]`);\r\n    if (element) {\r\n      return element;\r\n    }\r\n    await simulateLoadingTime(100);\r\n  }\r\n  \r\n  throw new Error(`Lazy component with testId \"${testId}\" did not load within ${timeout}ms`);\r\n};\r\n\r\n// Utility para verificar estados de loading\r\nexport const checkLoadingStates = () => {\r\n  const loadingElements = document.querySelectorAll('[data-testid=\"lazy-loading\"]');\r\n  const errorElements = document.querySelectorAll('[data-testid=\"lazy-error\"]');\r\n  const suspenseElements = document.querySelectorAll('[data-testid=\"suspense-boundary\"]');\r\n  \r\n  return {\r\n    loading: loadingElements.length,\r\n    errors: errorElements.length,\r\n    suspense: suspenseElements.length,\r\n    hasLoading: loadingElements.length > 0,\r\n    hasErrors: errorElements.length > 0,\r\n    hasSuspense: suspenseElements.length > 0\r\n  };\r\n};\r\n\r\n// ===================================\r\n// EXPORT DEFAULT\r\n// ===================================\r\n\r\nexport default {\r\n  mockLazy,\r\n  mockSuspense,\r\n  setupSuccessfulLazyMocks,\r\n  setupFailingLazyMocks,\r\n  createMockDynamicImport,\r\n  createFailingMockDynamicImport,\r\n  simulateLoadingTime,\r\n  waitForLazyComponent,\r\n  checkLoadingStates,\r\n  components: {\r\n    MockAdminDashboard,\r\n    MockProductList,\r\n    MockProductForm,\r\n    MockLogisticsMap,\r\n    MockRealTimeDashboard\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["checkLoadingStates","createFailingMockDynamicImport","createMockDynamicImport","mockAdminPageModule","mockLazy","mockLogisticsMapModule","mockProductFormModule","mockProductListModule","mockRealTimeDashboardModule","mockSuspense","setupFailingLazyMocks","setupSuccessfulLazyMocks","simulateLoadingTime","waitForLazyComponent","MockAdminDashboard","React","forwardRef","props","ref","div","data-testid","h1","displayName","MockProductList","h2","MockProductForm","form","MockLogisticsMap","MockRealTimeDashboard","jest","fn","importFn","Component","setComponent","useState","loading","setLoading","error","setError","useEffect","then","module","default","catch","err","createElement","children","message","fallback","key","AdminPage","ProductList","ProductForm","LogisticsMap","RealTimeDashboard","component","delay","Promise","resolve","setTimeout","errorMessage","_","reject","Error","doMock","originalLazy","lazy","originalSuspense","Suspense","dontMock","ms","testId","timeout","startTime","Date","now","element","document","querySelector","loadingElements","querySelectorAll","errorElements","suspenseElements","length","errors","suspense","hasLoading","hasErrors","hasSuspense","components"],"mappings":"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"}