{"version":3,"names":["cov_20pkrbsnd2","actualCoverage","s","GET","f","runtime","request","startTime","Date","now","clientIP","b","headers","get","session","_config","auth","user","_server","NextResponse","json","success","error","status","rateLimitResult1","_ratelimiter","checkRateLimit","RATE_LIMIT_CONFIGS","QUERY_API","response","addRateLimitHeaders","_logger","logger","info","LogCategory","API","userId","availableConfigurations","payment_methods","excluded_payment_methods","id","name","excluded_payment_types","installments","options","default","max_allowed","shipments","modes","free_shipping_threshold","expiration","min_hours","max_hours","default_hours","processing_modes","purposes","currentConfig","default_installments","max_installments","min_installments","mode","free_shipping","expires","expiration_date_to","toISOString","binary_mode","back_urls","process","env","NEXT_PUBLIC_BASE_URL","failure","pending","notification_url","_metrics","metricsCollector","recordRequest","processingTime","data","available_configurations","current_config","documentation","timestamp","processing_time","performance","LogLevel","ERROR","operation","duration","statusCode","message","postHandler","authResult","getEnterpriseAuthContext","securityLevel","enableJWTValidation","enableCSRFProtection","enableRateLimit","code","enterprise","context","userId1","config","JSON","stringify","validationResult","validatePreferenceConfig","valid","updatedConfig","updated_at","updated_by","configKeys","Object","keys","join","rateLimitResult","PAYMENT_API","cost","includes","expiration_date_from","dateFrom","dateTo","marketplace_fee"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\payments\\preferences\\route.ts"],"sourcesContent":["// Configuración para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - MERCADOPAGO ADVANCED PREFERENCES API\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\nimport { checkRateLimit, addRateLimitHeaders, RATE_LIMIT_CONFIGS } from '@/lib/enterprise/rate-limiter';\r\nimport { metricsCollector } from '@/lib/enterprise/metrics';\r\n\r\n// Configuraciones avanzadas de preferencias según documentación oficial\r\ninterface AdvancedPreferenceConfig {\r\n  // Exclusión de medios de pago\r\n  excluded_payment_methods?: Array<{\r\n    id: string;\r\n  }>;\r\n  excluded_payment_types?: Array<{\r\n    id: string;\r\n  }>;\r\n  \r\n  // Configuración de cuotas\r\n  installments?: {\r\n    default_installments?: number;\r\n    max_installments?: number;\r\n    min_installments?: number;\r\n  };\r\n  \r\n  // Configuración de envío\r\n  shipments?: {\r\n    mode?: 'not_specified' | 'custom' | 'me2';\r\n    cost?: number;\r\n    free_shipping?: boolean;\r\n    receiver_address?: {\r\n      zip_code?: string;\r\n      street_name?: string;\r\n      street_number?: string;\r\n      floor?: string;\r\n      apartment?: string;\r\n      city_name?: string;\r\n      state_name?: string;\r\n      country_name?: string;\r\n    };\r\n  };\r\n  \r\n  // Configuración de descuentos\r\n  differential_pricing?: {\r\n    id: number;\r\n  };\r\n  \r\n  // Configuración de marketplace\r\n  marketplace_fee?: number;\r\n  \r\n  // Configuración de notificaciones\r\n  notification_url?: string;\r\n  \r\n  // Configuración de URLs de retorno\r\n  back_urls?: {\r\n    success?: string;\r\n    failure?: string;\r\n    pending?: string;\r\n  };\r\n  \r\n  // Configuración de expiración\r\n  expires?: boolean;\r\n  expiration_date_from?: string;\r\n  expiration_date_to?: string;\r\n  \r\n  // Configuración de modo binario\r\n  binary_mode?: boolean;\r\n  \r\n  // Configuración de procesamiento externo\r\n  processing_modes?: string[];\r\n  \r\n  // Configuración de propósito\r\n  purpose?: string;\r\n  \r\n  // Configuración de sponsor\r\n  sponsor_id?: number;\r\n}\r\n\r\n/**\r\n * GET /api/payments/preferences\r\n * Obtiene configuraciones de preferencias disponibles\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  const startTime = Date.now();\r\n  const clientIP = request.headers.get('x-forwarded-for') || 'unknown';\r\n\r\n  try {\r\n    // Verificar autenticación\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      RATE_LIMIT_CONFIGS.QUERY_API\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { success: false, error: 'Demasiadas solicitudes' },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult, RATE_LIMIT_CONFIGS.QUERY_API);\r\n      return response;\r\n    }\r\n\r\n    logger.info(LogCategory.API, 'Preferences config request', {\r\n      userId,\r\n      clientIP,\r\n    });\r\n\r\n    // Configuraciones disponibles según documentación de MercadoPago\r\n    const availableConfigurations = {\r\n      payment_methods: {\r\n        excluded_payment_methods: [\r\n          { id: 'visa', name: 'Visa' },\r\n          { id: 'master', name: 'Mastercard' },\r\n          { id: 'amex', name: 'American Express' },\r\n          { id: 'naranja', name: 'Naranja' },\r\n          { id: 'cabal', name: 'Cabal' },\r\n          { id: 'cencosud', name: 'Cencosud' },\r\n          { id: 'cordobesa', name: 'Cordobesa' },\r\n          { id: 'argencard', name: 'Argencard' },\r\n        ],\r\n        excluded_payment_types: [\r\n          { id: 'credit_card', name: 'Tarjetas de Crédito' },\r\n          { id: 'debit_card', name: 'Tarjetas de Débito' },\r\n          { id: 'ticket', name: 'Efectivo' },\r\n          { id: 'bank_transfer', name: 'Transferencia Bancaria' },\r\n          { id: 'digital_currency', name: 'Dinero en Cuenta' },\r\n        ],\r\n      },\r\n      installments: {\r\n        options: [1, 3, 6, 9, 12, 18, 24],\r\n        default: 1,\r\n        max_allowed: 24,\r\n      },\r\n      shipments: {\r\n        modes: [\r\n          { id: 'not_specified', name: 'No especificado' },\r\n          { id: 'custom', name: 'Personalizado' },\r\n          { id: 'me2', name: 'MercadoEnvíos' },\r\n        ],\r\n        free_shipping_threshold: 50000, // ARS\r\n      },\r\n      expiration: {\r\n        min_hours: 1,\r\n        max_hours: 720, // 30 días\r\n        default_hours: 24,\r\n      },\r\n      processing_modes: [\r\n        { id: 'aggregator', name: 'Agregador' },\r\n        { id: 'gateway', name: 'Gateway' },\r\n      ],\r\n      purposes: [\r\n        { id: 'onboarding_credits', name: 'Créditos de Onboarding' },\r\n        { id: 'wallet_purchase', name: 'Compra con Wallet' },\r\n      ],\r\n    };\r\n\r\n    // Configuración actual del sistema\r\n    const currentConfig: AdvancedPreferenceConfig = {\r\n      excluded_payment_methods: [],\r\n      excluded_payment_types: [],\r\n      installments: {\r\n        default_installments: 1,\r\n        max_installments: 12,\r\n        min_installments: 1,\r\n      },\r\n      shipments: {\r\n        mode: 'custom',\r\n        free_shipping: true,\r\n      },\r\n      expires: true,\r\n      expiration_date_to: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),\r\n      binary_mode: false,\r\n      back_urls: {\r\n        success: `${process.env.NEXT_PUBLIC_BASE_URL}/checkout/success`,\r\n        failure: `${process.env.NEXT_PUBLIC_BASE_URL}/checkout/failure`,\r\n        pending: `${process.env.NEXT_PUBLIC_BASE_URL}/checkout/pending`,\r\n      },\r\n      notification_url: `${process.env.NEXT_PUBLIC_BASE_URL}/api/payments/webhook`,\r\n    };\r\n\r\n    // Registrar métricas\r\n    await metricsCollector.recordRequest(\r\n      '/api/payments/preferences',\r\n      'GET',\r\n      200,\r\n      Date.now() - startTime,\r\n      { userId }\r\n    );\r\n\r\n    logger.info(LogCategory.API, 'Preferences config retrieved', {\r\n      userId,\r\n      processingTime: Date.now() - startTime,\r\n    });\r\n\r\n    const response = NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        available_configurations: availableConfigurations,\r\n        current_config: currentConfig,\r\n        documentation: {\r\n          excluded_payment_methods: 'Excluir métodos de pago específicos (ej: Visa, Mastercard)',\r\n          excluded_payment_types: 'Excluir tipos de pago (ej: tarjetas de crédito, efectivo)',\r\n          installments: 'Configurar cuotas mínimas, máximas y por defecto',\r\n          shipments: 'Configurar envíos y costos de shipping',\r\n          expiration: 'Configurar fecha de expiración de preferencias',\r\n          binary_mode: 'Modo binario para aprobación/rechazo inmediato',\r\n          back_urls: 'URLs de retorno después del pago',\r\n          notification_url: 'URL para recibir notificaciones de webhook',\r\n        },\r\n      },\r\n      timestamp: Date.now(),\r\n      processing_time: Date.now() - startTime,\r\n    });\r\n\r\n    addRateLimitHeaders(response, rateLimitResult, RATE_LIMIT_CONFIGS.QUERY_API);\r\n    return response;\r\n\r\n  } catch (error) {\r\n    const processingTime = Date.now() - startTime;\r\n    \r\n    logger.performance(LogLevel.ERROR, 'Preferences config failed', {\r\n      operation: 'preferences-config-api',\r\n      duration: processingTime,\r\n      statusCode: 500,\r\n    }, {\r\n      clientIP,\r\n    });\r\n\r\n    await metricsCollector.recordRequest(\r\n      '/api/payments/preferences',\r\n      'GET',\r\n      500,\r\n      processingTime,\r\n      { error: (error as Error).message }\r\n    );\r\n\r\n    return NextResponse.json(\r\n      { success: false, error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * POST /api/payments/preferences\r\n * Actualiza configuraciones de preferencias (ENTERPRISE)\r\n */\r\nconst postHandler = async (request: NextRequest) => {\r\n  const startTime = Date.now();\r\n  const clientIP = request.headers.get('x-forwarded-for') || 'unknown';\r\n\r\n  try {\r\n    // ENTERPRISE: Verificar autenticación con contexto completo\r\n    const authResult = await getEnterpriseAuthContext(request, {\r\n      securityLevel: 'high',\r\n      enableJWTValidation: true,\r\n      enableCSRFProtection: true,\r\n      enableRateLimit: false // Rate limiting manejado por middleware\r\n    });\r\n\r\n    if (!authResult.success) {\r\n      return NextResponse.json(\r\n        {\r\n          error: authResult.error,\r\n          code: authResult.code,\r\n          enterprise: true\r\n        },\r\n        { status: authResult.status || 401 }\r\n      );\r\n    }\r\n\r\n    const context = authResult.context!;\r\n    const userId = context.userId;\r\n\r\n    // Rate limiting manejado por middleware enterprise\r\n\r\n    const config: AdvancedPreferenceConfig = await request.json();\r\n\r\n    logger.info(LogCategory.API, 'Preferences config update started', {\r\n      userId,\r\n      config: JSON.stringify(config),\r\n      clientIP,\r\n    });\r\n\r\n    // Validar configuración\r\n    const validationResult = validatePreferenceConfig(config);\r\n    if (!validationResult.valid) {\r\n      return NextResponse.json(\r\n        { success: false, error: validationResult.error },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // En una implementación real, aquí se guardaría la configuración en base de datos\r\n    // Por ahora simulamos la actualización\r\n    const updatedConfig = {\r\n      ...config,\r\n      updated_at: new Date().toISOString(),\r\n      updated_by: userId,\r\n    };\r\n\r\n    // Registrar métricas\r\n    await metricsCollector.recordRequest(\r\n      '/api/payments/preferences',\r\n      'POST',\r\n      200,\r\n      Date.now() - startTime,\r\n      { userId, configKeys: Object.keys(config).join(',') }\r\n    );\r\n\r\n    logger.info(LogCategory.API, 'Preferences config updated successfully', {\r\n      userId,\r\n      configKeys: Object.keys(config),\r\n      processingTime: Date.now() - startTime,\r\n    });\r\n\r\n    const response = NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        config: updatedConfig,\r\n        message: 'Configuración actualizada exitosamente',\r\n      },\r\n      timestamp: Date.now(),\r\n      processing_time: Date.now() - startTime,\r\n    });\r\n\r\n    addRateLimitHeaders(response, rateLimitResult, RATE_LIMIT_CONFIGS.PAYMENT_API);\r\n    return response;\r\n\r\n  } catch (error) {\r\n    const processingTime = Date.now() - startTime;\r\n    \r\n    logger.performance(LogLevel.ERROR, 'Preferences config update failed', {\r\n      operation: 'preferences-config-update-api',\r\n      duration: processingTime,\r\n      statusCode: 500,\r\n    }, {\r\n      clientIP,\r\n    });\r\n\r\n    await metricsCollector.recordRequest(\r\n      '/api/payments/preferences',\r\n      'POST',\r\n      500,\r\n      processingTime,\r\n      { error: (error as Error).message }\r\n    );\r\n\r\n    return NextResponse.json(\r\n      { success: false, error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Valida la configuración de preferencias\r\n */\r\nfunction validatePreferenceConfig(config: AdvancedPreferenceConfig): { valid: boolean; error?: string } {\r\n  // Validar cuotas\r\n  if (config.installments) {\r\n    const { min_installments, max_installments, default_installments } = config.installments;\r\n    \r\n    if (min_installments && min_installments < 1) {\r\n      return { valid: false, error: 'Las cuotas mínimas deben ser al menos 1' };\r\n    }\r\n    \r\n    if (max_installments && max_installments > 24) {\r\n      return { valid: false, error: 'Las cuotas máximas no pueden ser más de 24' };\r\n    }\r\n    \r\n    if (min_installments && max_installments && min_installments > max_installments) {\r\n      return { valid: false, error: 'Las cuotas mínimas no pueden ser mayores a las máximas' };\r\n    }\r\n    \r\n    if (default_installments && min_installments && default_installments < min_installments) {\r\n      return { valid: false, error: 'Las cuotas por defecto no pueden ser menores a las mínimas' };\r\n    }\r\n    \r\n    if (default_installments && max_installments && default_installments > max_installments) {\r\n      return { valid: false, error: 'Las cuotas por defecto no pueden ser mayores a las máximas' };\r\n    }\r\n  }\r\n\r\n  // Validar envíos\r\n  if (config.shipments) {\r\n    const { mode, cost } = config.shipments;\r\n    \r\n    if (mode && !['not_specified', 'custom', 'me2'].includes(mode)) {\r\n      return { valid: false, error: 'Modo de envío inválido' };\r\n    }\r\n    \r\n    if (cost && cost < 0) {\r\n      return { valid: false, error: 'El costo de envío no puede ser negativo' };\r\n    }\r\n  }\r\n\r\n  // Validar fechas de expiración\r\n  if (config.expiration_date_from && config.expiration_date_to) {\r\n    const dateFrom = new Date(config.expiration_date_from);\r\n    const dateTo = new Date(config.expiration_date_to);\r\n    \r\n    if (dateFrom >= dateTo) {\r\n      return { valid: false, error: 'La fecha de inicio debe ser anterior a la fecha de fin' };\r\n    }\r\n    \r\n    if (dateTo <= new Date()) {\r\n      return { valid: false, error: 'La fecha de expiración debe ser futura' };\r\n    }\r\n  }\r\n\r\n  // Validar marketplace fee\r\n  if (config.marketplace_fee && (config.marketplace_fee < 0 || config.marketplace_fee > 100)) {\r\n    return { valid: false, error: 'La comisión de marketplace debe estar entre 0 y 100%' };\r\n  }\r\n\r\n  return { valid: true };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}