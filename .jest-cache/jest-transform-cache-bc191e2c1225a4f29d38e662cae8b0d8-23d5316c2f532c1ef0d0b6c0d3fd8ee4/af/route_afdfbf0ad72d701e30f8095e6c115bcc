ad2b8c9478fcdf020663540f8727d37e
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_2jjfg70d96() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\monitoring\\metrics\\custom\\route.ts";
  var hash = "998b4ef183bf5781dc3208c852805f8bf2373b8c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\monitoring\\metrics\\custom\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 28,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 22
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 20
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 19
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 23
        }
      },
      "9": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 38
        }
      },
      "10": {
        start: {
          line: 30,
          column: 19
        },
        end: {
          line: 30,
          column: 67
        }
      },
      "11": {
        start: {
          line: 31,
          column: 27
        },
        end: {
          line: 31,
          column: 89
        }
      },
      "12": {
        start: {
          line: 32,
          column: 18
        },
        end: {
          line: 32,
          column: 72
        }
      },
      "13": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 66
        }
      },
      "14": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 24
        }
      },
      "15": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 146,
          column: 5
        }
      },
      "16": {
        start: {
          line: 38,
          column: 27
        },
        end: {
          line: 38,
          column: 79
        }
      },
      "17": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "18": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 45,
          column: 15
        }
      },
      "19": {
        start: {
          line: 47,
          column: 29
        },
        end: {
          line: 47,
          column: 57
        }
      },
      "20": {
        start: {
          line: 48,
          column: 23
        },
        end: {
          line: 48,
          column: 59
        }
      },
      "21": {
        start: {
          line: 49,
          column: 25
        },
        end: {
          line: 49,
          column: 53
        }
      },
      "22": {
        start: {
          line: 50,
          column: 26
        },
        end: {
          line: 50,
          column: 55
        }
      },
      "23": {
        start: {
          line: 51,
          column: 24
        },
        end: {
          line: 51,
          column: 51
        }
      },
      "24": {
        start: {
          line: 52,
          column: 28
        },
        end: {
          line: 52,
          column: 67
        }
      },
      "25": {
        start: {
          line: 53,
          column: 25
        },
        end: {
          line: 53,
          column: 63
        }
      },
      "26": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "27": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 61
        }
      },
      "28": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "29": {
        start: {
          line: 60,
          column: 46
        },
        end: {
          line: 62,
          column: 18
        }
      },
      "30": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 69,
          column: 19
        }
      },
      "31": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 78,
          column: 17
        }
      },
      "32": {
        start: {
          line: 72,
          column: 20
        },
        end: {
          line: 77,
          column: 23
        }
      },
      "33": {
        start: {
          line: 80,
          column: 28
        },
        end: {
          line: 82,
          column: 30
        }
      },
      "34": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 85,
          column: 17
        }
      },
      "35": {
        start: {
          line: 84,
          column: 20
        },
        end: {
          line: 84,
          column: 62
        }
      },
      "36": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 88,
          column: 17
        }
      },
      "37": {
        start: {
          line: 87,
          column: 20
        },
        end: {
          line: 87,
          column: 60
        }
      },
      "38": {
        start: {
          line: 89,
          column: 41
        },
        end: {
          line: 89,
          column: 52
        }
      },
      "39": {
        start: {
          line: 91,
          column: 37
        },
        end: {
          line: 91,
          column: 43
        }
      },
      "40": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 94,
          column: 17
        }
      },
      "41": {
        start: {
          line: 93,
          column: 20
        },
        end: {
          line: 93,
          column: 86
        }
      },
      "42": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 103,
          column: 19
        }
      },
      "43": {
        start: {
          line: 106,
          column: 52
        },
        end: {
          line: 109,
          column: 18
        }
      },
      "44": {
        start: {
          line: 110,
          column: 47
        },
        end: {
          line: 113,
          column: 43
        }
      },
      "45": {
        start: {
          line: 114,
          column: 32
        },
        end: {
          line: 114,
          column: 88
        }
      },
      "46": {
        start: {
          line: 115,
          column: 48
        },
        end: {
          line: 118,
          column: 69
        }
      },
      "47": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 127,
          column: 19
        }
      },
      "48": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 134,
          column: 19
        }
      },
      "49": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 139,
          column: 39
        }
      },
      "50": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 145,
          column: 11
        }
      },
      "51": {
        start: {
          line: 149,
          column: 4
        },
        end: {
          line: 344,
          column: 5
        }
      },
      "52": {
        start: {
          line: 151,
          column: 27
        },
        end: {
          line: 151,
          column: 79
        }
      },
      "53": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "54": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 158,
          column: 15
        }
      },
      "55": {
        start: {
          line: 160,
          column: 21
        },
        end: {
          line: 160,
          column: 41
        }
      },
      "56": {
        start: {
          line: 161,
          column: 33
        },
        end: {
          line: 161,
          column: 37
        }
      },
      "57": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "58": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 168,
          column: 15
        }
      },
      "59": {
        start: {
          line: 170,
          column: 25
        },
        end: {
          line: 170,
          column: 63
        }
      },
      "60": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "61": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 61
        }
      },
      "62": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 333,
          column: 9
        }
      },
      "63": {
        start: {
          line: 177,
          column: 35
        },
        end: {
          line: 190,
          column: 17
        }
      },
      "64": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 199,
          column: 17
        }
      },
      "65": {
        start: {
          line: 193,
          column: 20
        },
        end: {
          line: 198,
          column: 23
        }
      },
      "66": {
        start: {
          line: 201,
          column: 43
        },
        end: {
          line: 201,
          column: 137
        }
      },
      "67": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 209,
          column: 17
        }
      },
      "68": {
        start: {
          line: 203,
          column: 20
        },
        end: {
          line: 208,
          column: 23
        }
      },
      "69": {
        start: {
          line: 211,
          column: 47
        },
        end: {
          line: 211,
          column: 114
        }
      },
      "70": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 214,
          column: 17
        }
      },
      "71": {
        start: {
          line: 213,
          column: 20
        },
        end: {
          line: 213,
          column: 38
        }
      },
      "72": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 219,
          column: 47
        }
      },
      "73": {
        start: {
          line: 220,
          column: 16
        },
        end: {
          line: 227,
          column: 19
        }
      },
      "74": {
        start: {
          line: 230,
          column: 36
        },
        end: {
          line: 230,
          column: 40
        }
      },
      "75": {
        start: {
          line: 231,
          column: 16
        },
        end: {
          line: 238,
          column: 17
        }
      },
      "76": {
        start: {
          line: 232,
          column: 20
        },
        end: {
          line: 237,
          column: 23
        }
      },
      "77": {
        start: {
          line: 240,
          column: 44
        },
        end: {
          line: 240,
          column: 144
        }
      },
      "78": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 248,
          column: 17
        }
      },
      "79": {
        start: {
          line: 242,
          column: 20
        },
        end: {
          line: 247,
          column: 23
        }
      },
      "80": {
        start: {
          line: 249,
          column: 16
        },
        end: {
          line: 256,
          column: 17
        }
      },
      "81": {
        start: {
          line: 250,
          column: 20
        },
        end: {
          line: 255,
          column: 23
        }
      },
      "82": {
        start: {
          line: 258,
          column: 16
        },
        end: {
          line: 258,
          column: 207
        }
      },
      "83": {
        start: {
          line: 259,
          column: 16
        },
        end: {
          line: 263,
          column: 47
        }
      },
      "84": {
        start: {
          line: 264,
          column: 16
        },
        end: {
          line: 272,
          column: 19
        }
      },
      "85": {
        start: {
          line: 275,
          column: 36
        },
        end: {
          line: 275,
          column: 53
        }
      },
      "86": {
        start: {
          line: 276,
          column: 16
        },
        end: {
          line: 283,
          column: 17
        }
      },
      "87": {
        start: {
          line: 277,
          column: 20
        },
        end: {
          line: 282,
          column: 23
        }
      },
      "88": {
        start: {
          line: 284,
          column: 32
        },
        end: {
          line: 284,
          column: 34
        }
      },
      "89": {
        start: {
          line: 285,
          column: 16
        },
        end: {
          line: 309,
          column: 17
        }
      },
      "90": {
        start: {
          line: 286,
          column: 20
        },
        end: {
          line: 308,
          column: 21
        }
      },
      "91": {
        start: {
          line: 288,
          column: 46
        },
        end: {
          line: 288,
          column: 140
        }
      },
      "92": {
        start: {
          line: 289,
          column: 24
        },
        end: {
          line: 301,
          column: 25
        }
      },
      "93": {
        start: {
          line: 290,
          column: 28
        },
        end: {
          line: 290,
          column: 177
        }
      },
      "94": {
        start: {
          line: 291,
          column: 28
        },
        end: {
          line: 294,
          column: 31
        }
      },
      "95": {
        start: {
          line: 296,
          column: 28
        },
        end: {
          line: 300,
          column: 31
        }
      },
      "96": {
        start: {
          line: 303,
          column: 24
        },
        end: {
          line: 307,
          column: 27
        }
      },
      "97": {
        start: {
          line: 310,
          column: 37
        },
        end: {
          line: 310,
          column: 74
        }
      },
      "98": {
        start: {
          line: 310,
          column: 57
        },
        end: {
          line: 310,
          column: 66
        }
      },
      "99": {
        start: {
          line: 311,
          column: 16
        },
        end: {
          line: 316,
          column: 47
        }
      },
      "100": {
        start: {
          line: 317,
          column: 16
        },
        end: {
          line: 325,
          column: 19
        }
      },
      "101": {
        start: {
          line: 327,
          column: 16
        },
        end: {
          line: 332,
          column: 19
        }
      },
      "102": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 337,
          column: 39
        }
      },
      "103": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 343,
          column: 11
        }
      },
      "104": {
        start: {
          line: 347,
          column: 4
        },
        end: {
          line: 433,
          column: 5
        }
      },
      "105": {
        start: {
          line: 349,
          column: 27
        },
        end: {
          line: 349,
          column: 79
        }
      },
      "106": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 357,
          column: 9
        }
      },
      "107": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 356,
          column: 15
        }
      },
      "108": {
        start: {
          line: 358,
          column: 21
        },
        end: {
          line: 358,
          column: 41
        }
      },
      "109": {
        start: {
          line: 359,
          column: 38
        },
        end: {
          line: 359,
          column: 42
        }
      },
      "110": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 367,
          column: 9
        }
      },
      "111": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 366,
          column: 15
        }
      },
      "112": {
        start: {
          line: 368,
          column: 25
        },
        end: {
          line: 368,
          column: 63
        }
      },
      "113": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 371,
          column: 9
        }
      },
      "114": {
        start: {
          line: 370,
          column: 12
        },
        end: {
          line: 370,
          column: 61
        }
      },
      "115": {
        start: {
          line: 373,
          column: 35
        },
        end: {
          line: 373,
          column: 123
        }
      },
      "116": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 381,
          column: 9
        }
      },
      "117": {
        start: {
          line: 375,
          column: 12
        },
        end: {
          line: 380,
          column: 15
        }
      },
      "118": {
        start: {
          line: 383,
          column: 30
        },
        end: {
          line: 390,
          column: 9
        }
      },
      "119": {
        start: {
          line: 391,
          column: 27
        },
        end: {
          line: 391,
          column: 29
        }
      },
      "120": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 396,
          column: 9
        }
      },
      "121": {
        start: {
          line: 393,
          column: 12
        },
        end: {
          line: 395,
          column: 13
        }
      },
      "122": {
        start: {
          line: 394,
          column: 16
        },
        end: {
          line: 394,
          column: 51
        }
      },
      "123": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 404,
          column: 9
        }
      },
      "124": {
        start: {
          line: 398,
          column: 12
        },
        end: {
          line: 403,
          column: 15
        }
      },
      "125": {
        start: {
          line: 406,
          column: 39
        },
        end: {
          line: 406,
          column: 125
        }
      },
      "126": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 409,
          column: 9
        }
      },
      "127": {
        start: {
          line: 408,
          column: 12
        },
        end: {
          line: 408,
          column: 30
        }
      },
      "128": {
        start: {
          line: 410,
          column: 8
        },
        end: {
          line: 414,
          column: 39
        }
      },
      "129": {
        start: {
          line: 415,
          column: 8
        },
        end: {
          line: 422,
          column: 11
        }
      },
      "130": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 426,
          column: 39
        }
      },
      "131": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 432,
          column: 11
        }
      },
      "132": {
        start: {
          line: 436,
          column: 4
        },
        end: {
          line: 499,
          column: 5
        }
      },
      "133": {
        start: {
          line: 438,
          column: 27
        },
        end: {
          line: 438,
          column: 79
        }
      },
      "134": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 446,
          column: 9
        }
      },
      "135": {
        start: {
          line: 440,
          column: 12
        },
        end: {
          line: 445,
          column: 15
        }
      },
      "136": {
        start: {
          line: 447,
          column: 29
        },
        end: {
          line: 447,
          column: 57
        }
      },
      "137": {
        start: {
          line: 448,
          column: 25
        },
        end: {
          line: 448,
          column: 53
        }
      },
      "138": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 456,
          column: 9
        }
      },
      "139": {
        start: {
          line: 450,
          column: 12
        },
        end: {
          line: 455,
          column: 15
        }
      },
      "140": {
        start: {
          line: 457,
          column: 25
        },
        end: {
          line: 457,
          column: 63
        }
      },
      "141": {
        start: {
          line: 458,
          column: 8
        },
        end: {
          line: 460,
          column: 9
        }
      },
      "142": {
        start: {
          line: 459,
          column: 12
        },
        end: {
          line: 459,
          column: 61
        }
      },
      "143": {
        start: {
          line: 462,
          column: 35
        },
        end: {
          line: 462,
          column: 123
        }
      },
      "144": {
        start: {
          line: 463,
          column: 8
        },
        end: {
          line: 470,
          column: 9
        }
      },
      "145": {
        start: {
          line: 464,
          column: 12
        },
        end: {
          line: 469,
          column: 15
        }
      },
      "146": {
        start: {
          line: 472,
          column: 39
        },
        end: {
          line: 472,
          column: 115
        }
      },
      "147": {
        start: {
          line: 473,
          column: 8
        },
        end: {
          line: 475,
          column: 9
        }
      },
      "148": {
        start: {
          line: 474,
          column: 12
        },
        end: {
          line: 474,
          column: 30
        }
      },
      "149": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 480,
          column: 39
        }
      },
      "150": {
        start: {
          line: 481,
          column: 8
        },
        end: {
          line: 488,
          column: 11
        }
      },
      "151": {
        start: {
          line: 490,
          column: 8
        },
        end: {
          line: 492,
          column: 39
        }
      },
      "152": {
        start: {
          line: 493,
          column: 8
        },
        end: {
          line: 498,
          column: 11
        }
      },
      "153": {
        start: {
          line: 504,
          column: 23
        },
        end: {
          line: 504,
          column: 25
        }
      },
      "154": {
        start: {
          line: 505,
          column: 4
        },
        end: {
          line: 537,
          column: 7
        }
      },
      "155": {
        start: {
          line: 507,
          column: 21
        },
        end: {
          line: 507,
          column: 46
        }
      },
      "156": {
        start: {
          line: 508,
          column: 8
        },
        end: {
          line: 524,
          column: 9
        }
      },
      "157": {
        start: {
          line: 510,
          column: 16
        },
        end: {
          line: 510,
          column: 71
        }
      },
      "158": {
        start: {
          line: 511,
          column: 16
        },
        end: {
          line: 511,
          column: 22
        }
      },
      "159": {
        start: {
          line: 513,
          column: 32
        },
        end: {
          line: 513,
          column: 69
        }
      },
      "160": {
        start: {
          line: 514,
          column: 16
        },
        end: {
          line: 514,
          column: 124
        }
      },
      "161": {
        start: {
          line: 515,
          column: 16
        },
        end: {
          line: 515,
          column: 22
        }
      },
      "162": {
        start: {
          line: 517,
          column: 16
        },
        end: {
          line: 517,
          column: 74
        }
      },
      "163": {
        start: {
          line: 518,
          column: 16
        },
        end: {
          line: 518,
          column: 22
        }
      },
      "164": {
        start: {
          line: 520,
          column: 16
        },
        end: {
          line: 520,
          column: 77
        }
      },
      "165": {
        start: {
          line: 521,
          column: 16
        },
        end: {
          line: 521,
          column: 22
        }
      },
      "166": {
        start: {
          line: 523,
          column: 16
        },
        end: {
          line: 523,
          column: 38
        }
      },
      "167": {
        start: {
          line: 525,
          column: 8
        },
        end: {
          line: 532,
          column: 9
        }
      },
      "168": {
        start: {
          line: 526,
          column: 12
        },
        end: {
          line: 531,
          column: 14
        }
      },
      "169": {
        start: {
          line: 533,
          column: 8
        },
        end: {
          line: 533,
          column: 43
        }
      },
      "170": {
        start: {
          line: 534,
          column: 8
        },
        end: {
          line: 534,
          column: 35
        }
      },
      "171": {
        start: {
          line: 535,
          column: 8
        },
        end: {
          line: 535,
          column: 73
        }
      },
      "172": {
        start: {
          line: 536,
          column: 8
        },
        end: {
          line: 536,
          column: 73
        }
      },
      "173": {
        start: {
          line: 538,
          column: 4
        },
        end: {
          line: 545,
          column: 12
        }
      },
      "174": {
        start: {
          line: 538,
          column: 64
        },
        end: {
          line: 545,
          column: 9
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 15
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 19
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "GET",
        decl: {
          start: {
            line: 35,
            column: 15
          },
          end: {
            line: 35,
            column: 18
          }
        },
        loc: {
          start: {
            line: 35,
            column: 28
          },
          end: {
            line: 147,
            column: 1
          }
        },
        line: 35
      },
      "7": {
        name: "POST",
        decl: {
          start: {
            line: 148,
            column: 15
          },
          end: {
            line: 148,
            column: 19
          }
        },
        loc: {
          start: {
            line: 148,
            column: 29
          },
          end: {
            line: 345,
            column: 1
          }
        },
        line: 148
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 310,
            column: 52
          },
          end: {
            line: 310,
            column: 53
          }
        },
        loc: {
          start: {
            line: 310,
            column: 57
          },
          end: {
            line: 310,
            column: 66
          }
        },
        line: 310
      },
      "9": {
        name: "PUT",
        decl: {
          start: {
            line: 346,
            column: 15
          },
          end: {
            line: 346,
            column: 18
          }
        },
        loc: {
          start: {
            line: 346,
            column: 28
          },
          end: {
            line: 434,
            column: 1
          }
        },
        line: 346
      },
      "10": {
        name: "DELETE",
        decl: {
          start: {
            line: 435,
            column: 15
          },
          end: {
            line: 435,
            column: 21
          }
        },
        loc: {
          start: {
            line: 435,
            column: 31
          },
          end: {
            line: 500,
            column: 1
          }
        },
        line: 435
      },
      "11": {
        name: "aggregateMetricValues",
        decl: {
          start: {
            line: 503,
            column: 19
          },
          end: {
            line: 503,
            column: 40
          }
        },
        loc: {
          start: {
            line: 503,
            column: 57
          },
          end: {
            line: 546,
            column: 1
          }
        },
        line: 503
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 505,
            column: 19
          },
          end: {
            line: 505,
            column: 20
          }
        },
        loc: {
          start: {
            line: 505,
            column: 28
          },
          end: {
            line: 537,
            column: 5
          }
        },
        line: 505
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 538,
            column: 42
          },
          end: {
            line: 538,
            column: 43
          }
        },
        loc: {
          start: {
            line: 538,
            column: 64
          },
          end: {
            line: 545,
            column: 9
          }
        },
        line: 538
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "1": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 31
          }
        }, {
          start: {
            line: 39,
            column: 35
          },
          end: {
            line: 39,
            column: 53
          }
        }],
        line: 39
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 23
          },
          end: {
            line: 48,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 23
          },
          end: {
            line: 48,
            column: 49
          }
        }, {
          start: {
            line: 48,
            column: 53
          },
          end: {
            line: 48,
            column: 59
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 52,
            column: 28
          },
          end: {
            line: 52,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 28
          },
          end: {
            line: 52,
            column: 59
          }
        }, {
          start: {
            line: 52,
            column: 63
          },
          end: {
            line: 52,
            column: 67
          }
        }],
        line: 52
      },
      "4": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "5": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 69,
            column: 19
          }
        }, {
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 103,
            column: 19
          }
        }, {
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 127,
            column: 19
          }
        }, {
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 134,
            column: 19
          }
        }],
        line: 57
      },
      "6": {
        loc: {
          start: {
            line: 66,
            column: 37
          },
          end: {
            line: 66,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 37
          },
          end: {
            line: 66,
            column: 48
          }
        }, {
          start: {
            line: 66,
            column: 52
          },
          end: {
            line: 66,
            column: 54
          }
        }],
        line: 66
      },
      "7": {
        loc: {
          start: {
            line: 67,
            column: 31
          },
          end: {
            line: 67,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 31
          },
          end: {
            line: 67,
            column: 50
          }
        }, {
          start: {
            line: 67,
            column: 54
          },
          end: {
            line: 67,
            column: 55
          }
        }],
        line: 67
      },
      "8": {
        loc: {
          start: {
            line: 71,
            column: 16
          },
          end: {
            line: 78,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 16
          },
          end: {
            line: 78,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "9": {
        loc: {
          start: {
            line: 83,
            column: 16
          },
          end: {
            line: 85,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 16
          },
          end: {
            line: 85,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "10": {
        loc: {
          start: {
            line: 86,
            column: 16
          },
          end: {
            line: 88,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 16
          },
          end: {
            line: 88,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "11": {
        loc: {
          start: {
            line: 92,
            column: 16
          },
          end: {
            line: 94,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 16
          },
          end: {
            line: 94,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "12": {
        loc: {
          start: {
            line: 92,
            column: 20
          },
          end: {
            line: 92,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 20
          },
          end: {
            line: 92,
            column: 41
          }
        }, {
          start: {
            line: 92,
            column: 45
          },
          end: {
            line: 92,
            column: 51
          }
        }],
        line: 92
      },
      "13": {
        loc: {
          start: {
            line: 99,
            column: 32
          },
          end: {
            line: 99,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 32
          },
          end: {
            line: 99,
            column: 46
          }
        }, {
          start: {
            line: 99,
            column: 50
          },
          end: {
            line: 99,
            column: 52
          }
        }],
        line: 99
      },
      "14": {
        loc: {
          start: {
            line: 101,
            column: 31
          },
          end: {
            line: 101,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 31
          },
          end: {
            line: 101,
            column: 53
          }
        }, {
          start: {
            line: 101,
            column: 57
          },
          end: {
            line: 101,
            column: 58
          }
        }],
        line: 101
      },
      "15": {
        loc: {
          start: {
            line: 122,
            column: 42
          },
          end: {
            line: 122,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 42
          },
          end: {
            line: 122,
            column: 58
          }
        }, {
          start: {
            line: 122,
            column: 62
          },
          end: {
            line: 122,
            column: 63
          }
        }],
        line: 122
      },
      "16": {
        loc: {
          start: {
            line: 123,
            column: 37
          },
          end: {
            line: 123,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 37
          },
          end: {
            line: 123,
            column: 48
          }
        }, {
          start: {
            line: 123,
            column: 52
          },
          end: {
            line: 123,
            column: 53
          }
        }],
        line: 123
      },
      "17": {
        loc: {
          start: {
            line: 124,
            column: 38
          },
          end: {
            line: 124,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 38
          },
          end: {
            line: 124,
            column: 50
          }
        }, {
          start: {
            line: 124,
            column: 54
          },
          end: {
            line: 124,
            column: 55
          }
        }],
        line: 124
      },
      "18": {
        loc: {
          start: {
            line: 138,
            column: 19
          },
          end: {
            line: 138,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 44
          },
          end: {
            line: 138,
            column: 57
          }
        }, {
          start: {
            line: 138,
            column: 60
          },
          end: {
            line: 138,
            column: 75
          }
        }],
        line: 138
      },
      "19": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "20": {
        loc: {
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 152,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 152,
            column: 31
          }
        }, {
          start: {
            line: 152,
            column: 35
          },
          end: {
            line: 152,
            column: 53
          }
        }],
        line: 152
      },
      "21": {
        loc: {
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "22": {
        loc: {
          start: {
            line: 162,
            column: 12
          },
          end: {
            line: 162,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 12
          },
          end: {
            line: 162,
            column: 19
          }
        }, {
          start: {
            line: 162,
            column: 23
          },
          end: {
            line: 162,
            column: 28
          }
        }],
        line: 162
      },
      "23": {
        loc: {
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "24": {
        loc: {
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 333,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 227,
            column: 19
          }
        }, {
          start: {
            line: 228,
            column: 12
          },
          end: {
            line: 272,
            column: 19
          }
        }, {
          start: {
            line: 273,
            column: 12
          },
          end: {
            line: 325,
            column: 19
          }
        }, {
          start: {
            line: 326,
            column: 12
          },
          end: {
            line: 332,
            column: 19
          }
        }],
        line: 174
      },
      "25": {
        loc: {
          start: {
            line: 180,
            column: 33
          },
          end: {
            line: 180,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 180,
            column: 33
          },
          end: {
            line: 180,
            column: 49
          }
        }, {
          start: {
            line: 180,
            column: 53
          },
          end: {
            line: 180,
            column: 55
          }
        }],
        line: 180
      },
      "26": {
        loc: {
          start: {
            line: 181,
            column: 26
          },
          end: {
            line: 181,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 181,
            column: 26
          },
          end: {
            line: 181,
            column: 35
          }
        }, {
          start: {
            line: 181,
            column: 39
          },
          end: {
            line: 181,
            column: 74
          }
        }],
        line: 181
      },
      "27": {
        loc: {
          start: {
            line: 182,
            column: 30
          },
          end: {
            line: 182,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 182,
            column: 30
          },
          end: {
            line: 182,
            column: 43
          }
        }, {
          start: {
            line: 182,
            column: 47
          },
          end: {
            line: 182,
            column: 97
          }
        }],
        line: 182
      },
      "28": {
        loc: {
          start: {
            line: 183,
            column: 26
          },
          end: {
            line: 183,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 26
          },
          end: {
            line: 183,
            column: 35
          }
        }, {
          start: {
            line: 183,
            column: 39
          },
          end: {
            line: 183,
            column: 41
          }
        }],
        line: 183
      },
      "29": {
        loc: {
          start: {
            line: 184,
            column: 26
          },
          end: {
            line: 184,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 26
          },
          end: {
            line: 184,
            column: 35
          }
        }, {
          start: {
            line: 184,
            column: 39
          },
          end: {
            line: 184,
            column: 41
          }
        }],
        line: 184
      },
      "30": {
        loc: {
          start: {
            line: 185,
            column: 39
          },
          end: {
            line: 185,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 39
          },
          end: {
            line: 185,
            column: 61
          }
        }, {
          start: {
            line: 185,
            column: 65
          },
          end: {
            line: 185,
            column: 70
          }
        }],
        line: 185
      },
      "31": {
        loc: {
          start: {
            line: 186,
            column: 35
          },
          end: {
            line: 186,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 35
          },
          end: {
            line: 186,
            column: 53
          }
        }, {
          start: {
            line: 186,
            column: 57
          },
          end: {
            line: 186,
            column: 59
          }
        }],
        line: 186
      },
      "32": {
        loc: {
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 199,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 199,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "33": {
        loc: {
          start: {
            line: 202,
            column: 16
          },
          end: {
            line: 209,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 16
          },
          end: {
            line: 209,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "34": {
        loc: {
          start: {
            line: 212,
            column: 16
          },
          end: {
            line: 214,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 16
          },
          end: {
            line: 214,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "35": {
        loc: {
          start: {
            line: 231,
            column: 16
          },
          end: {
            line: 238,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 16
          },
          end: {
            line: 238,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      },
      "36": {
        loc: {
          start: {
            line: 231,
            column: 20
          },
          end: {
            line: 231,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 20
          },
          end: {
            line: 231,
            column: 41
          }
        }, {
          start: {
            line: 231,
            column: 45
          },
          end: {
            line: 231,
            column: 76
          }
        }],
        line: 231
      },
      "37": {
        loc: {
          start: {
            line: 241,
            column: 16
          },
          end: {
            line: 248,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 16
          },
          end: {
            line: 248,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "38": {
        loc: {
          start: {
            line: 249,
            column: 16
          },
          end: {
            line: 256,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 16
          },
          end: {
            line: 256,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "39": {
        loc: {
          start: {
            line: 258,
            column: 149
          },
          end: {
            line: 258,
            column: 183
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 258,
            column: 149
          },
          end: {
            line: 258,
            column: 165
          }
        }, {
          start: {
            line: 258,
            column: 169
          },
          end: {
            line: 258,
            column: 183
          }
        }],
        line: 258
      },
      "40": {
        loc: {
          start: {
            line: 275,
            column: 36
          },
          end: {
            line: 275,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 275,
            column: 36
          },
          end: {
            line: 275,
            column: 47
          }
        }, {
          start: {
            line: 275,
            column: 51
          },
          end: {
            line: 275,
            column: 53
          }
        }],
        line: 275
      },
      "41": {
        loc: {
          start: {
            line: 276,
            column: 16
          },
          end: {
            line: 283,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 16
          },
          end: {
            line: 283,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 276
      },
      "42": {
        loc: {
          start: {
            line: 276,
            column: 20
          },
          end: {
            line: 276,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 276,
            column: 20
          },
          end: {
            line: 276,
            column: 47
          }
        }, {
          start: {
            line: 276,
            column: 51
          },
          end: {
            line: 276,
            column: 75
          }
        }],
        line: 276
      },
      "43": {
        loc: {
          start: {
            line: 289,
            column: 24
          },
          end: {
            line: 301,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 24
          },
          end: {
            line: 301,
            column: 25
          }
        }, {
          start: {
            line: 295,
            column: 31
          },
          end: {
            line: 301,
            column: 25
          }
        }],
        line: 289
      },
      "44": {
        loc: {
          start: {
            line: 289,
            column: 28
          },
          end: {
            line: 289,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 289,
            column: 28
          },
          end: {
            line: 289,
            column: 31
          }
        }, {
          start: {
            line: 289,
            column: 35
          },
          end: {
            line: 289,
            column: 46
          }
        }],
        line: 289
      },
      "45": {
        loc: {
          start: {
            line: 290,
            column: 137
          },
          end: {
            line: 290,
            column: 159
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 290,
            column: 137
          },
          end: {
            line: 290,
            column: 147
          }
        }, {
          start: {
            line: 290,
            column: 151
          },
          end: {
            line: 290,
            column: 159
          }
        }],
        line: 290
      },
      "46": {
        loc: {
          start: {
            line: 306,
            column: 35
          },
          end: {
            line: 306,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 306,
            column: 60
          },
          end: {
            line: 306,
            column: 73
          }
        }, {
          start: {
            line: 306,
            column: 76
          },
          end: {
            line: 306,
            column: 91
          }
        }],
        line: 306
      },
      "47": {
        loc: {
          start: {
            line: 336,
            column: 19
          },
          end: {
            line: 336,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 336,
            column: 44
          },
          end: {
            line: 336,
            column: 57
          }
        }, {
          start: {
            line: 336,
            column: 60
          },
          end: {
            line: 336,
            column: 75
          }
        }],
        line: 336
      },
      "48": {
        loc: {
          start: {
            line: 350,
            column: 8
          },
          end: {
            line: 357,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 350,
            column: 8
          },
          end: {
            line: 357,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 350
      },
      "49": {
        loc: {
          start: {
            line: 350,
            column: 12
          },
          end: {
            line: 350,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 350,
            column: 12
          },
          end: {
            line: 350,
            column: 31
          }
        }, {
          start: {
            line: 350,
            column: 35
          },
          end: {
            line: 350,
            column: 53
          }
        }],
        line: 350
      },
      "50": {
        loc: {
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 367,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 367,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 360
      },
      "51": {
        loc: {
          start: {
            line: 360,
            column: 12
          },
          end: {
            line: 360,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 360,
            column: 12
          },
          end: {
            line: 360,
            column: 21
          }
        }, {
          start: {
            line: 360,
            column: 25
          },
          end: {
            line: 360,
            column: 33
          }
        }],
        line: 360
      },
      "52": {
        loc: {
          start: {
            line: 369,
            column: 8
          },
          end: {
            line: 371,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 369,
            column: 8
          },
          end: {
            line: 371,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 369
      },
      "53": {
        loc: {
          start: {
            line: 374,
            column: 8
          },
          end: {
            line: 381,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 374,
            column: 8
          },
          end: {
            line: 381,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 374
      },
      "54": {
        loc: {
          start: {
            line: 393,
            column: 12
          },
          end: {
            line: 395,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 393,
            column: 12
          },
          end: {
            line: 395,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 393
      },
      "55": {
        loc: {
          start: {
            line: 397,
            column: 8
          },
          end: {
            line: 404,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 397,
            column: 8
          },
          end: {
            line: 404,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 397
      },
      "56": {
        loc: {
          start: {
            line: 407,
            column: 8
          },
          end: {
            line: 409,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 407,
            column: 8
          },
          end: {
            line: 409,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 407
      },
      "57": {
        loc: {
          start: {
            line: 425,
            column: 19
          },
          end: {
            line: 425,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 425,
            column: 44
          },
          end: {
            line: 425,
            column: 57
          }
        }, {
          start: {
            line: 425,
            column: 60
          },
          end: {
            line: 425,
            column: 75
          }
        }],
        line: 425
      },
      "58": {
        loc: {
          start: {
            line: 439,
            column: 8
          },
          end: {
            line: 446,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 439,
            column: 8
          },
          end: {
            line: 446,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 439
      },
      "59": {
        loc: {
          start: {
            line: 439,
            column: 12
          },
          end: {
            line: 439,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 439,
            column: 12
          },
          end: {
            line: 439,
            column: 31
          }
        }, {
          start: {
            line: 439,
            column: 35
          },
          end: {
            line: 439,
            column: 53
          }
        }],
        line: 439
      },
      "60": {
        loc: {
          start: {
            line: 449,
            column: 8
          },
          end: {
            line: 456,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 449,
            column: 8
          },
          end: {
            line: 456,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 449
      },
      "61": {
        loc: {
          start: {
            line: 458,
            column: 8
          },
          end: {
            line: 460,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 458,
            column: 8
          },
          end: {
            line: 460,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 458
      },
      "62": {
        loc: {
          start: {
            line: 463,
            column: 8
          },
          end: {
            line: 470,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 463,
            column: 8
          },
          end: {
            line: 470,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 463
      },
      "63": {
        loc: {
          start: {
            line: 473,
            column: 8
          },
          end: {
            line: 475,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 473,
            column: 8
          },
          end: {
            line: 475,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 473
      },
      "64": {
        loc: {
          start: {
            line: 491,
            column: 19
          },
          end: {
            line: 491,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 491,
            column: 44
          },
          end: {
            line: 491,
            column: 57
          }
        }, {
          start: {
            line: 491,
            column: 60
          },
          end: {
            line: 491,
            column: 75
          }
        }],
        line: 491
      },
      "65": {
        loc: {
          start: {
            line: 508,
            column: 8
          },
          end: {
            line: 524,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 509,
            column: 12
          },
          end: {
            line: 511,
            column: 22
          }
        }, {
          start: {
            line: 512,
            column: 12
          },
          end: {
            line: 515,
            column: 22
          }
        }, {
          start: {
            line: 516,
            column: 12
          },
          end: {
            line: 518,
            column: 22
          }
        }, {
          start: {
            line: 519,
            column: 12
          },
          end: {
            line: 521,
            column: 22
          }
        }, {
          start: {
            line: 522,
            column: 12
          },
          end: {
            line: 523,
            column: 38
          }
        }],
        line: 508
      },
      "66": {
        loc: {
          start: {
            line: 525,
            column: 8
          },
          end: {
            line: 532,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 525,
            column: 8
          },
          end: {
            line: 532,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 525
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0, 0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0, 0, 0, 0],
      "66": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\monitoring\\metrics\\custom\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - CUSTOM METRICS API\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getAuthenticatedAdmin } from '@/lib/auth/admin-auth';\r\nimport { \r\n  enterpriseMetrics,\r\n  MetricType,\r\n  BusinessMetricCategory,\r\n  recordPerformanceMetric,\r\n  recordBusinessMetric,\r\n  recordSecurityMetric,\r\n  recordUserExperienceMetric\r\n} from '@/lib/monitoring/enterprise-metrics';\r\nimport { getSupabaseClient } from '@/lib/integrations/supabase';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\n\r\ninterface CustomMetricDefinition {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  type: MetricType;\r\n  category: BusinessMetricCategory;\r\n  unit: string;\r\n  tags: Record<string, string>;\r\n  aggregationMethod: 'sum' | 'avg' | 'min' | 'max' | 'count';\r\n  retentionDays: number;\r\n  enabled: boolean;\r\n  createdBy: string;\r\n  createdAt: string;\r\n}\r\n\r\ninterface MetricValue {\r\n  metricId: string;\r\n  value: number;\r\n  timestamp?: string;\r\n  tags?: Record<string, string>;\r\n  metadata?: Record<string, any>;\r\n}\r\n\r\n/**\r\n * GET /api/admin/monitoring/metrics/custom\r\n * Obtiene m\xE9tricas personalizadas y sus definiciones\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n de admin\r\n    const authResult = await getAuthenticatedAdmin(request);\r\n    \r\n    if (!authResult.isAdmin || !authResult.userId) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Acceso no autorizado'\r\n      }, { status: 401 });\r\n    }\r\n\r\n    const searchParams = request.nextUrl.searchParams;\r\n    const action = searchParams.get('action') || 'list';\r\n    const metricId = searchParams.get('metricId');\r\n    const startDate = searchParams.get('startDate');\r\n    const endDate = searchParams.get('endDate');\r\n    const aggregation = searchParams.get('aggregation') || '1h';\r\n\r\n    const supabase = getSupabaseClient(true);\r\n    if (!supabase) {\r\n      throw new Error('Supabase client not available');\r\n    }\r\n\r\n    switch (action) {\r\n      case 'list':\r\n        // Listar definiciones de m\xE9tricas personalizadas\r\n        const { data: definitions } = await supabase\r\n          .from('custom_metric_definitions')\r\n          .select('*')\r\n          .order('created_at', { ascending: false });\r\n\r\n        return NextResponse.json({\r\n          success: true,\r\n          data: {\r\n            definitions: definitions || [],\r\n            count: definitions?.length || 0\r\n          }\r\n        });\r\n\r\n      case 'values':\r\n        if (!metricId) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'metricId requerido para obtener valores'\r\n          }, { status: 400 });\r\n        }\r\n\r\n        // Obtener valores de m\xE9trica espec\xEDfica\r\n        let query = supabase\r\n          .from('enterprise_metrics')\r\n          .select('*')\r\n          .eq('name', metricId)\r\n          .order('timestamp', { ascending: false })\r\n          .limit(1000);\r\n\r\n        if (startDate) {\r\n          query = query.gte('timestamp', startDate);\r\n        }\r\n        if (endDate) {\r\n          query = query.lte('timestamp', endDate);\r\n        }\r\n\r\n        const { data: values } = await query;\r\n\r\n        // Agregar datos si se solicita\r\n        let aggregatedData = values;\r\n        if (aggregation !== 'raw' && values) {\r\n          aggregatedData = await aggregateMetricValues(values, aggregation);\r\n        }\r\n\r\n        return NextResponse.json({\r\n          success: true,\r\n          data: {\r\n            metricId,\r\n            values: aggregatedData || [],\r\n            aggregation,\r\n            count: aggregatedData?.length || 0\r\n          }\r\n        });\r\n\r\n      case 'stats':\r\n        // Estad\xEDsticas generales de m\xE9tricas personalizadas\r\n        const { count: totalDefinitions } = await supabase\r\n          .from('custom_metric_definitions')\r\n          .select('*', { count: 'exact', head: true });\r\n\r\n        const { count: totalValues } = await supabase\r\n          .from('enterprise_metrics')\r\n          .select('*', { count: 'exact', head: true })\r\n          .like('name', 'custom.%');\r\n\r\n        const last24h = new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString();\r\n        const { count: recentValues } = await supabase\r\n          .from('enterprise_metrics')\r\n          .select('*', { count: 'exact', head: true })\r\n          .like('name', 'custom.%')\r\n          .gte('timestamp', last24h);\r\n\r\n        return NextResponse.json({\r\n          success: true,\r\n          data: {\r\n            totalDefinitions: totalDefinitions || 0,\r\n            totalValues: totalValues || 0,\r\n            recentValues: recentValues || 0,\r\n            period: '24h'\r\n          }\r\n        });\r\n\r\n      default:\r\n        return NextResponse.json({\r\n          success: false,\r\n          error: 'Acci\xF3n no v\xE1lida'\r\n        }, { status: 400 });\r\n    }\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Failed to get custom metrics', {\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    }, LogCategory.SYSTEM);\r\n\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error interno del servidor'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n/**\r\n * POST /api/admin/monitoring/metrics/custom\r\n * Crea nueva m\xE9trica personalizada o registra valores\r\n */\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n de admin\r\n    const authResult = await getAuthenticatedAdmin(request);\r\n    \r\n    if (!authResult.isAdmin || !authResult.userId) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Acceso no autorizado'\r\n      }, { status: 401 });\r\n    }\r\n\r\n    const body = await request.json();\r\n    const { action, data } = body;\r\n\r\n    if (!action || !data) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Faltan par\xE1metros: action y data'\r\n      }, { status: 400 });\r\n    }\r\n\r\n    const supabase = getSupabaseClient(true);\r\n    if (!supabase) {\r\n      throw new Error('Supabase client not available');\r\n    }\r\n\r\n    switch (action) {\r\n      case 'create_definition':\r\n        // Crear nueva definici\xF3n de m\xE9trica\r\n        const definition: Partial<CustomMetricDefinition> = {\r\n          id: `custom.${data.name.toLowerCase().replace(/[^a-z0-9]/g, '_')}`,\r\n          name: data.name,\r\n          description: data.description || '',\r\n          type: data.type || MetricType.GAUGE,\r\n          category: data.category || BusinessMetricCategory.BUSINESS,\r\n          unit: data.unit || '',\r\n          tags: data.tags || {},\r\n          aggregationMethod: data.aggregationMethod || 'avg',\r\n          retentionDays: data.retentionDays || 30,\r\n          enabled: data.enabled !== false,\r\n          createdBy: authResult.userId,\r\n          createdAt: new Date().toISOString()\r\n        };\r\n\r\n        // Validar campos requeridos\r\n        if (!definition.name) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'Nombre de m\xE9trica requerido'\r\n          }, { status: 400 });\r\n        }\r\n\r\n        // Verificar que no exista\r\n        const { data: existing } = await supabase\r\n          .from('custom_metric_definitions')\r\n          .select('id')\r\n          .eq('id', definition.id)\r\n          .single();\r\n\r\n        if (existing) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'Ya existe una m\xE9trica con ese nombre'\r\n          }, { status: 409 });\r\n        }\r\n\r\n        // Crear definici\xF3n\r\n        const { error: createError } = await supabase\r\n          .from('custom_metric_definitions')\r\n          .insert(definition);\r\n\r\n        if (createError) {\r\n          throw createError;\r\n        }\r\n\r\n        logger.info(LogLevel.INFO, 'Custom metric definition created', {\r\n          metricId: definition.id,\r\n          name: definition.name,\r\n          createdBy: authResult.userId\r\n        }, LogCategory.SYSTEM);\r\n\r\n        return NextResponse.json({\r\n          success: true,\r\n          data: {\r\n            metricId: definition.id,\r\n            name: definition.name,\r\n            created: true\r\n          }\r\n        });\r\n\r\n      case 'record_value':\r\n        // Registrar valor de m\xE9trica\r\n        const metricValue: MetricValue = data;\r\n\r\n        if (!metricValue.metricId || metricValue.value === undefined) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'metricId y value son requeridos'\r\n          }, { status: 400 });\r\n        }\r\n\r\n        // Verificar que la m\xE9trica existe\r\n        const { data: metricDef } = await supabase\r\n          .from('custom_metric_definitions')\r\n          .select('*')\r\n          .eq('id', metricValue.metricId)\r\n          .single();\r\n\r\n        if (!metricDef) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'M\xE9trica no encontrada'\r\n          }, { status: 404 });\r\n        }\r\n\r\n        if (!metricDef.enabled) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'M\xE9trica deshabilitada'\r\n          }, { status: 400 });\r\n        }\r\n\r\n        // Registrar valor usando el sistema de m\xE9tricas enterprise\r\n        await enterpriseMetrics.recordMetric(\r\n          metricValue.metricId,\r\n          metricValue.value,\r\n          metricDef.type,\r\n          metricDef.category,\r\n          metricValue.tags || metricDef.tags,\r\n          metricValue.metadata\r\n        );\r\n\r\n        logger.info(LogLevel.INFO, 'Custom metric value recorded', {\r\n          metricId: metricValue.metricId,\r\n          value: metricValue.value,\r\n          recordedBy: authResult.userId\r\n        }, LogCategory.SYSTEM);\r\n\r\n        return NextResponse.json({\r\n          success: true,\r\n          data: {\r\n            metricId: metricValue.metricId,\r\n            value: metricValue.value,\r\n            recorded: true,\r\n            timestamp: new Date().toISOString()\r\n          }\r\n        });\r\n\r\n      case 'record_batch':\r\n        // Registrar m\xFAltiples valores\r\n        const batchValues: MetricValue[] = data.values || [];\r\n\r\n        if (!Array.isArray(batchValues) || batchValues.length === 0) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'Array de valores requerido'\r\n          }, { status: 400 });\r\n        }\r\n\r\n        const results = [];\r\n        for (const value of batchValues) {\r\n          try {\r\n            // Verificar m\xE9trica\r\n            const { data: def } = await supabase\r\n              .from('custom_metric_definitions')\r\n              .select('*')\r\n              .eq('id', value.metricId)\r\n              .single();\r\n\r\n            if (def && def.enabled) {\r\n              await enterpriseMetrics.recordMetric(\r\n                value.metricId,\r\n                value.value,\r\n                def.type,\r\n                def.category,\r\n                value.tags || def.tags,\r\n                value.metadata\r\n              );\r\n              results.push({ metricId: value.metricId, success: true });\r\n            } else {\r\n              results.push({ metricId: value.metricId, success: false, error: 'Metric not found or disabled' });\r\n            }\r\n          } catch (error) {\r\n            results.push({ \r\n              metricId: value.metricId, \r\n              success: false, \r\n              error: error instanceof Error ? error.message : 'Unknown error' \r\n            });\r\n          }\r\n        }\r\n\r\n        const successCount = results.filter(r => r.success).length;\r\n\r\n        logger.info(LogLevel.INFO, 'Custom metrics batch recorded', {\r\n          totalValues: batchValues.length,\r\n          successCount,\r\n          failureCount: batchValues.length - successCount,\r\n          recordedBy: authResult.userId\r\n        }, LogCategory.SYSTEM);\r\n\r\n        return NextResponse.json({\r\n          success: true,\r\n          data: {\r\n            totalValues: batchValues.length,\r\n            successCount,\r\n            failureCount: batchValues.length - successCount,\r\n            results\r\n          }\r\n        });\r\n\r\n      default:\r\n        return NextResponse.json({\r\n          success: false,\r\n          error: 'Acci\xF3n no v\xE1lida'\r\n        }, { status: 400 });\r\n    }\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Failed to process custom metrics request', {\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    }, LogCategory.SYSTEM);\r\n\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error interno del servidor'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n/**\r\n * PUT /api/admin/monitoring/metrics/custom\r\n * Actualiza definici\xF3n de m\xE9trica personalizada\r\n */\r\nexport async function PUT(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n de admin\r\n    const authResult = await getAuthenticatedAdmin(request);\r\n    \r\n    if (!authResult.isAdmin || !authResult.userId) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Acceso no autorizado'\r\n      }, { status: 401 });\r\n    }\r\n\r\n    const body = await request.json();\r\n    const { metricId, updates } = body;\r\n\r\n    if (!metricId || !updates) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'metricId y updates requeridos'\r\n      }, { status: 400 });\r\n    }\r\n\r\n    const supabase = getSupabaseClient(true);\r\n    if (!supabase) {\r\n      throw new Error('Supabase client not available');\r\n    }\r\n\r\n    // Verificar que la m\xE9trica existe\r\n    const { data: existing } = await supabase\r\n      .from('custom_metric_definitions')\r\n      .select('*')\r\n      .eq('id', metricId)\r\n      .single();\r\n\r\n    if (!existing) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'M\xE9trica no encontrada'\r\n      }, { status: 404 });\r\n    }\r\n\r\n    // Campos permitidos para actualizaci\xF3n\r\n    const allowedFields = [\r\n      'description', 'unit', 'tags', 'aggregationMethod', \r\n      'retentionDays', 'enabled'\r\n    ];\r\n\r\n    const updateData: Record<string, any> = {};\r\n    for (const field of allowedFields) {\r\n      if (updates[field] !== undefined) {\r\n        updateData[field] = updates[field];\r\n      }\r\n    }\r\n\r\n    if (Object.keys(updateData).length === 0) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'No hay campos v\xE1lidos para actualizar'\r\n      }, { status: 400 });\r\n    }\r\n\r\n    // Actualizar\r\n    const { error: updateError } = await supabase\r\n      .from('custom_metric_definitions')\r\n      .update(updateData)\r\n      .eq('id', metricId);\r\n\r\n    if (updateError) {\r\n      throw updateError;\r\n    }\r\n\r\n    logger.info(LogLevel.INFO, 'Custom metric definition updated', {\r\n      metricId,\r\n      updatedFields: Object.keys(updateData),\r\n      updatedBy: authResult.userId\r\n    }, LogCategory.SYSTEM);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        metricId,\r\n        updated: updateData,\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Failed to update custom metric', {\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    }, LogCategory.SYSTEM);\r\n\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error interno del servidor'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n/**\r\n * DELETE /api/admin/monitoring/metrics/custom\r\n * Elimina definici\xF3n de m\xE9trica personalizada\r\n */\r\nexport async function DELETE(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n de admin\r\n    const authResult = await getAuthenticatedAdmin(request);\r\n    \r\n    if (!authResult.isAdmin || !authResult.userId) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Acceso no autorizado'\r\n      }, { status: 401 });\r\n    }\r\n\r\n    const searchParams = request.nextUrl.searchParams;\r\n    const metricId = searchParams.get('metricId');\r\n\r\n    if (!metricId) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'metricId requerido'\r\n      }, { status: 400 });\r\n    }\r\n\r\n    const supabase = getSupabaseClient(true);\r\n    if (!supabase) {\r\n      throw new Error('Supabase client not available');\r\n    }\r\n\r\n    // Verificar que la m\xE9trica existe\r\n    const { data: existing } = await supabase\r\n      .from('custom_metric_definitions')\r\n      .select('*')\r\n      .eq('id', metricId)\r\n      .single();\r\n\r\n    if (!existing) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'M\xE9trica no encontrada'\r\n      }, { status: 404 });\r\n    }\r\n\r\n    // Eliminar definici\xF3n\r\n    const { error: deleteError } = await supabase\r\n      .from('custom_metric_definitions')\r\n      .delete()\r\n      .eq('id', metricId);\r\n\r\n    if (deleteError) {\r\n      throw deleteError;\r\n    }\r\n\r\n    logger.info(LogLevel.INFO, 'Custom metric definition deleted', {\r\n      metricId,\r\n      name: existing.name,\r\n      deletedBy: authResult.userId\r\n    }, LogCategory.SYSTEM);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        metricId,\r\n        deleted: true,\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Failed to delete custom metric', {\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    }, LogCategory.SYSTEM);\r\n\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error interno del servidor'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n/**\r\n * Agrega valores de m\xE9trica seg\xFAn el per\xEDodo especificado\r\n */\r\nasync function aggregateMetricValues(values: any[], period: string) {\r\n  const aggregated: Record<string, { sum: number; count: number; min: number; max: number }> = {};\r\n  \r\n  values.forEach(value => {\r\n    let key: string;\r\n    const date = new Date(value.timestamp);\r\n    \r\n    switch (period) {\r\n      case '1m':\r\n        key = date.toISOString().substring(0, 16) + ':00.000Z';\r\n        break;\r\n      case '5m':\r\n        const minutes = Math.floor(date.getMinutes() / 5) * 5;\r\n        key = new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), minutes).toISOString();\r\n        break;\r\n      case '1h':\r\n        key = date.toISOString().substring(0, 13) + ':00:00.000Z';\r\n        break;\r\n      case '1d':\r\n        key = date.toISOString().substring(0, 10) + 'T00:00:00.000Z';\r\n        break;\r\n      default:\r\n        key = value.timestamp;\r\n    }\r\n    \r\n    if (!aggregated[key]) {\r\n      aggregated[key] = { sum: 0, count: 0, min: value.value, max: value.value };\r\n    }\r\n    \r\n    aggregated[key].sum += value.value;\r\n    aggregated[key].count += 1;\r\n    aggregated[key].min = Math.min(aggregated[key].min, value.value);\r\n    aggregated[key].max = Math.max(aggregated[key].max, value.value);\r\n  });\r\n  \r\n  return Object.entries(aggregated).map(([timestamp, data]) => ({\r\n    timestamp,\r\n    value: data.sum / data.count, // Promedio\r\n    sum: data.sum,\r\n    count: data.count,\r\n    min: data.min,\r\n    max: data.max\r\n  }));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["DELETE", "GET", "POST", "PUT", "runtime", "request", "authResult", "getAuthenticatedAdmin", "isAdmin", "userId", "NextResponse", "json", "success", "error", "status", "searchParams", "nextUrl", "action", "get", "metricId", "startDate", "endDate", "aggregation", "supabase", "getSupabaseClient", "Error", "data", "definitions", "from", "select", "order", "ascending", "count", "length", "query", "eq", "limit", "gte", "lte", "values", "aggregatedData", "aggregateMetricValues", "totalDefinitions", "head", "totalValues", "like", "last24h", "Date", "now", "toISOString", "recentValues", "period", "logger", "LogLevel", "ERROR", "message", "LogCategory", "SYSTEM", "body", "definition", "id", "name", "toLowerCase", "replace", "description", "type", "MetricType", "GAUGE", "category", "BusinessMetricCategory", "BUSINESS", "unit", "tags", "aggregationMethod", "retentionDays", "enabled", "createdBy", "createdAt", "existing", "single", "createError", "insert", "info", "INFO", "created", "metricValue", "value", "undefined", "metricDef", "enterpriseMetrics", "recordMetric", "metadata", "recordedBy", "recorded", "timestamp", "batchValues", "Array", "isArray", "results", "def", "push", "successCount", "filter", "r", "failureCount", "updates", "allowedFields", "updateData", "field", "Object", "keys", "updateError", "update", "updatedFields", "updatedBy", "updated", "deleteError", "delete", "deletedBy", "deleted", "aggregated", "forEach", "key", "date", "substring", "minutes", "Math", "floor", "getMinutes", "getFullYear", "getMonth", "getDate", "getHours", "sum", "min", "max", "entries", "map"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "998b4ef183bf5781dc3208c852805f8bf2373b8c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2jjfg70d96 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2jjfg70d96();
cov_2jjfg70d96().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2jjfg70d96().f[0]++;
  cov_2jjfg70d96().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2jjfg70d96().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2jjfg70d96().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_2jjfg70d96().f[1]++;
    cov_2jjfg70d96().s[4]++;
    return DELETE;
  },
  get GET() {
    /* istanbul ignore next */
    cov_2jjfg70d96().f[2]++;
    cov_2jjfg70d96().s[5]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_2jjfg70d96().f[3]++;
    cov_2jjfg70d96().s[6]++;
    return POST;
  },
  get PUT() {
    /* istanbul ignore next */
    cov_2jjfg70d96().f[4]++;
    cov_2jjfg70d96().s[7]++;
    return PUT;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_2jjfg70d96().f[5]++;
    cov_2jjfg70d96().s[8]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_2jjfg70d96().s[9]++, require("next/server"));
const _adminauth =
/* istanbul ignore next */
(cov_2jjfg70d96().s[10]++, require("../../../../../../lib/auth/admin-auth"));
const _enterprisemetrics =
/* istanbul ignore next */
(cov_2jjfg70d96().s[11]++, require("../../../../../../lib/monitoring/enterprise-metrics"));
const _supabase =
/* istanbul ignore next */
(cov_2jjfg70d96().s[12]++, require("../../../../../../lib/integrations/supabase"));
const _logger =
/* istanbul ignore next */
(cov_2jjfg70d96().s[13]++, require("../../../../../../lib/enterprise/logger"));
const runtime =
/* istanbul ignore next */
(cov_2jjfg70d96().s[14]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_2jjfg70d96().f[6]++;
  cov_2jjfg70d96().s[15]++;
  try {
    // Verificar autenticaciÃ³n de admin
    const authResult =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[16]++, await (0, _adminauth.getAuthenticatedAdmin)(request));
    /* istanbul ignore next */
    cov_2jjfg70d96().s[17]++;
    if (
    /* istanbul ignore next */
    (cov_2jjfg70d96().b[1][0]++, !authResult.isAdmin) ||
    /* istanbul ignore next */
    (cov_2jjfg70d96().b[1][1]++, !authResult.userId)) {
      /* istanbul ignore next */
      cov_2jjfg70d96().b[0][0]++;
      cov_2jjfg70d96().s[18]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Acceso no autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jjfg70d96().b[0][1]++;
    }
    const searchParams =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[19]++, request.nextUrl.searchParams);
    const action =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[20]++,
    /* istanbul ignore next */
    (cov_2jjfg70d96().b[2][0]++, searchParams.get('action')) ||
    /* istanbul ignore next */
    (cov_2jjfg70d96().b[2][1]++, 'list'));
    const metricId =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[21]++, searchParams.get('metricId'));
    const startDate =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[22]++, searchParams.get('startDate'));
    const endDate =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[23]++, searchParams.get('endDate'));
    const aggregation =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[24]++,
    /* istanbul ignore next */
    (cov_2jjfg70d96().b[3][0]++, searchParams.get('aggregation')) ||
    /* istanbul ignore next */
    (cov_2jjfg70d96().b[3][1]++, '1h'));
    const supabase =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[25]++, (0, _supabase.getSupabaseClient)(true));
    /* istanbul ignore next */
    cov_2jjfg70d96().s[26]++;
    if (!supabase) {
      /* istanbul ignore next */
      cov_2jjfg70d96().b[4][0]++;
      cov_2jjfg70d96().s[27]++;
      throw new Error('Supabase client not available');
    } else
    /* istanbul ignore next */
    {
      cov_2jjfg70d96().b[4][1]++;
    }
    cov_2jjfg70d96().s[28]++;
    switch (action) {
      case 'list':
        /* istanbul ignore next */
        cov_2jjfg70d96().b[5][0]++;
        // Listar definiciones de mÃ©tricas personalizadas
        const {
          data: definitions
        } =
        /* istanbul ignore next */
        (cov_2jjfg70d96().s[29]++, await supabase.from('custom_metric_definitions').select('*').order('created_at', {
          ascending: false
        }));
        /* istanbul ignore next */
        cov_2jjfg70d96().s[30]++;
        return _server.NextResponse.json({
          success: true,
          data: {
            definitions:
            /* istanbul ignore next */
            (cov_2jjfg70d96().b[6][0]++, definitions) ||
            /* istanbul ignore next */
            (cov_2jjfg70d96().b[6][1]++, []),
            count:
            /* istanbul ignore next */
            (cov_2jjfg70d96().b[7][0]++, definitions?.length) ||
            /* istanbul ignore next */
            (cov_2jjfg70d96().b[7][1]++, 0)
          }
        });
      case 'values':
        /* istanbul ignore next */
        cov_2jjfg70d96().b[5][1]++;
        cov_2jjfg70d96().s[31]++;
        if (!metricId) {
          /* istanbul ignore next */
          cov_2jjfg70d96().b[8][0]++;
          cov_2jjfg70d96().s[32]++;
          return _server.NextResponse.json({
            success: false,
            error: 'metricId requerido para obtener valores'
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_2jjfg70d96().b[8][1]++;
        }
        // Obtener valores de mÃ©trica especÃ­fica
        let query =
        /* istanbul ignore next */
        (cov_2jjfg70d96().s[33]++, supabase.from('enterprise_metrics').select('*').eq('name', metricId).order('timestamp', {
          ascending: false
        }).limit(1000));
        /* istanbul ignore next */
        cov_2jjfg70d96().s[34]++;
        if (startDate) {
          /* istanbul ignore next */
          cov_2jjfg70d96().b[9][0]++;
          cov_2jjfg70d96().s[35]++;
          query = query.gte('timestamp', startDate);
        } else
        /* istanbul ignore next */
        {
          cov_2jjfg70d96().b[9][1]++;
        }
        cov_2jjfg70d96().s[36]++;
        if (endDate) {
          /* istanbul ignore next */
          cov_2jjfg70d96().b[10][0]++;
          cov_2jjfg70d96().s[37]++;
          query = query.lte('timestamp', endDate);
        } else
        /* istanbul ignore next */
        {
          cov_2jjfg70d96().b[10][1]++;
        }
        const {
          data: values
        } =
        /* istanbul ignore next */
        (cov_2jjfg70d96().s[38]++, await query);
        // Agregar datos si se solicita
        let aggregatedData =
        /* istanbul ignore next */
        (cov_2jjfg70d96().s[39]++, values);
        /* istanbul ignore next */
        cov_2jjfg70d96().s[40]++;
        if (
        /* istanbul ignore next */
        (cov_2jjfg70d96().b[12][0]++, aggregation !== 'raw') &&
        /* istanbul ignore next */
        (cov_2jjfg70d96().b[12][1]++, values)) {
          /* istanbul ignore next */
          cov_2jjfg70d96().b[11][0]++;
          cov_2jjfg70d96().s[41]++;
          aggregatedData = await aggregateMetricValues(values, aggregation);
        } else
        /* istanbul ignore next */
        {
          cov_2jjfg70d96().b[11][1]++;
        }
        cov_2jjfg70d96().s[42]++;
        return _server.NextResponse.json({
          success: true,
          data: {
            metricId,
            values:
            /* istanbul ignore next */
            (cov_2jjfg70d96().b[13][0]++, aggregatedData) ||
            /* istanbul ignore next */
            (cov_2jjfg70d96().b[13][1]++, []),
            aggregation,
            count:
            /* istanbul ignore next */
            (cov_2jjfg70d96().b[14][0]++, aggregatedData?.length) ||
            /* istanbul ignore next */
            (cov_2jjfg70d96().b[14][1]++, 0)
          }
        });
      case 'stats':
        /* istanbul ignore next */
        cov_2jjfg70d96().b[5][2]++;
        // EstadÃ­sticas generales de mÃ©tricas personalizadas
        const {
          count: totalDefinitions
        } =
        /* istanbul ignore next */
        (cov_2jjfg70d96().s[43]++, await supabase.from('custom_metric_definitions').select('*', {
          count: 'exact',
          head: true
        }));
        const {
          count: totalValues
        } =
        /* istanbul ignore next */
        (cov_2jjfg70d96().s[44]++, await supabase.from('enterprise_metrics').select('*', {
          count: 'exact',
          head: true
        }).like('name', 'custom.%'));
        const last24h =
        /* istanbul ignore next */
        (cov_2jjfg70d96().s[45]++, new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString());
        const {
          count: recentValues
        } =
        /* istanbul ignore next */
        (cov_2jjfg70d96().s[46]++, await supabase.from('enterprise_metrics').select('*', {
          count: 'exact',
          head: true
        }).like('name', 'custom.%').gte('timestamp', last24h));
        /* istanbul ignore next */
        cov_2jjfg70d96().s[47]++;
        return _server.NextResponse.json({
          success: true,
          data: {
            totalDefinitions:
            /* istanbul ignore next */
            (cov_2jjfg70d96().b[15][0]++, totalDefinitions) ||
            /* istanbul ignore next */
            (cov_2jjfg70d96().b[15][1]++, 0),
            totalValues:
            /* istanbul ignore next */
            (cov_2jjfg70d96().b[16][0]++, totalValues) ||
            /* istanbul ignore next */
            (cov_2jjfg70d96().b[16][1]++, 0),
            recentValues:
            /* istanbul ignore next */
            (cov_2jjfg70d96().b[17][0]++, recentValues) ||
            /* istanbul ignore next */
            (cov_2jjfg70d96().b[17][1]++, 0),
            period: '24h'
          }
        });
      default:
        /* istanbul ignore next */
        cov_2jjfg70d96().b[5][3]++;
        cov_2jjfg70d96().s[48]++;
        return _server.NextResponse.json({
          success: false,
          error: 'AcciÃ³n no vÃ¡lida'
        }, {
          status: 400
        });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_2jjfg70d96().s[49]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Failed to get custom metrics', {
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2jjfg70d96().b[18][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2jjfg70d96().b[18][1]++, 'Unknown error')
    }, _logger.LogCategory.SYSTEM);
    /* istanbul ignore next */
    cov_2jjfg70d96().s[50]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_2jjfg70d96().f[7]++;
  cov_2jjfg70d96().s[51]++;
  try {
    // Verificar autenticaciÃ³n de admin
    const authResult =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[52]++, await (0, _adminauth.getAuthenticatedAdmin)(request));
    /* istanbul ignore next */
    cov_2jjfg70d96().s[53]++;
    if (
    /* istanbul ignore next */
    (cov_2jjfg70d96().b[20][0]++, !authResult.isAdmin) ||
    /* istanbul ignore next */
    (cov_2jjfg70d96().b[20][1]++, !authResult.userId)) {
      /* istanbul ignore next */
      cov_2jjfg70d96().b[19][0]++;
      cov_2jjfg70d96().s[54]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Acceso no autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jjfg70d96().b[19][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[55]++, await request.json());
    const {
      action,
      data
    } =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[56]++, body);
    /* istanbul ignore next */
    cov_2jjfg70d96().s[57]++;
    if (
    /* istanbul ignore next */
    (cov_2jjfg70d96().b[22][0]++, !action) ||
    /* istanbul ignore next */
    (cov_2jjfg70d96().b[22][1]++, !data)) {
      /* istanbul ignore next */
      cov_2jjfg70d96().b[21][0]++;
      cov_2jjfg70d96().s[58]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Faltan parÃ¡metros: action y data'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jjfg70d96().b[21][1]++;
    }
    const supabase =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[59]++, (0, _supabase.getSupabaseClient)(true));
    /* istanbul ignore next */
    cov_2jjfg70d96().s[60]++;
    if (!supabase) {
      /* istanbul ignore next */
      cov_2jjfg70d96().b[23][0]++;
      cov_2jjfg70d96().s[61]++;
      throw new Error('Supabase client not available');
    } else
    /* istanbul ignore next */
    {
      cov_2jjfg70d96().b[23][1]++;
    }
    cov_2jjfg70d96().s[62]++;
    switch (action) {
      case 'create_definition':
        /* istanbul ignore next */
        cov_2jjfg70d96().b[24][0]++;
        // Crear nueva definiciÃ³n de mÃ©trica
        const definition =
        /* istanbul ignore next */
        (cov_2jjfg70d96().s[63]++, {
          id: `custom.${data.name.toLowerCase().replace(/[^a-z0-9]/g, '_')}`,
          name: data.name,
          description:
          /* istanbul ignore next */
          (cov_2jjfg70d96().b[25][0]++, data.description) ||
          /* istanbul ignore next */
          (cov_2jjfg70d96().b[25][1]++, ''),
          type:
          /* istanbul ignore next */
          (cov_2jjfg70d96().b[26][0]++, data.type) ||
          /* istanbul ignore next */
          (cov_2jjfg70d96().b[26][1]++, _enterprisemetrics.MetricType.GAUGE),
          category:
          /* istanbul ignore next */
          (cov_2jjfg70d96().b[27][0]++, data.category) ||
          /* istanbul ignore next */
          (cov_2jjfg70d96().b[27][1]++, _enterprisemetrics.BusinessMetricCategory.BUSINESS),
          unit:
          /* istanbul ignore next */
          (cov_2jjfg70d96().b[28][0]++, data.unit) ||
          /* istanbul ignore next */
          (cov_2jjfg70d96().b[28][1]++, ''),
          tags:
          /* istanbul ignore next */
          (cov_2jjfg70d96().b[29][0]++, data.tags) ||
          /* istanbul ignore next */
          (cov_2jjfg70d96().b[29][1]++, {}),
          aggregationMethod:
          /* istanbul ignore next */
          (cov_2jjfg70d96().b[30][0]++, data.aggregationMethod) ||
          /* istanbul ignore next */
          (cov_2jjfg70d96().b[30][1]++, 'avg'),
          retentionDays:
          /* istanbul ignore next */
          (cov_2jjfg70d96().b[31][0]++, data.retentionDays) ||
          /* istanbul ignore next */
          (cov_2jjfg70d96().b[31][1]++, 30),
          enabled: data.enabled !== false,
          createdBy: authResult.userId,
          createdAt: new Date().toISOString()
        });
        // Validar campos requeridos
        /* istanbul ignore next */
        cov_2jjfg70d96().s[64]++;
        if (!definition.name) {
          /* istanbul ignore next */
          cov_2jjfg70d96().b[32][0]++;
          cov_2jjfg70d96().s[65]++;
          return _server.NextResponse.json({
            success: false,
            error: 'Nombre de mÃ©trica requerido'
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_2jjfg70d96().b[32][1]++;
        }
        // Verificar que no exista
        const {
          data: existing
        } =
        /* istanbul ignore next */
        (cov_2jjfg70d96().s[66]++, await supabase.from('custom_metric_definitions').select('id').eq('id', definition.id).single());
        /* istanbul ignore next */
        cov_2jjfg70d96().s[67]++;
        if (existing) {
          /* istanbul ignore next */
          cov_2jjfg70d96().b[33][0]++;
          cov_2jjfg70d96().s[68]++;
          return _server.NextResponse.json({
            success: false,
            error: 'Ya existe una mÃ©trica con ese nombre'
          }, {
            status: 409
          });
        } else
        /* istanbul ignore next */
        {
          cov_2jjfg70d96().b[33][1]++;
        }
        // Crear definiciÃ³n
        const {
          error: createError
        } =
        /* istanbul ignore next */
        (cov_2jjfg70d96().s[69]++, await supabase.from('custom_metric_definitions').insert(definition));
        /* istanbul ignore next */
        cov_2jjfg70d96().s[70]++;
        if (createError) {
          /* istanbul ignore next */
          cov_2jjfg70d96().b[34][0]++;
          cov_2jjfg70d96().s[71]++;
          throw createError;
        } else
        /* istanbul ignore next */
        {
          cov_2jjfg70d96().b[34][1]++;
        }
        cov_2jjfg70d96().s[72]++;
        _logger.logger.info(_logger.LogLevel.INFO, 'Custom metric definition created', {
          metricId: definition.id,
          name: definition.name,
          createdBy: authResult.userId
        }, _logger.LogCategory.SYSTEM);
        /* istanbul ignore next */
        cov_2jjfg70d96().s[73]++;
        return _server.NextResponse.json({
          success: true,
          data: {
            metricId: definition.id,
            name: definition.name,
            created: true
          }
        });
      case 'record_value':
        /* istanbul ignore next */
        cov_2jjfg70d96().b[24][1]++;
        // Registrar valor de mÃ©trica
        const metricValue =
        /* istanbul ignore next */
        (cov_2jjfg70d96().s[74]++, data);
        /* istanbul ignore next */
        cov_2jjfg70d96().s[75]++;
        if (
        /* istanbul ignore next */
        (cov_2jjfg70d96().b[36][0]++, !metricValue.metricId) ||
        /* istanbul ignore next */
        (cov_2jjfg70d96().b[36][1]++, metricValue.value === undefined)) {
          /* istanbul ignore next */
          cov_2jjfg70d96().b[35][0]++;
          cov_2jjfg70d96().s[76]++;
          return _server.NextResponse.json({
            success: false,
            error: 'metricId y value son requeridos'
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_2jjfg70d96().b[35][1]++;
        }
        // Verificar que la mÃ©trica existe
        const {
          data: metricDef
        } =
        /* istanbul ignore next */
        (cov_2jjfg70d96().s[77]++, await supabase.from('custom_metric_definitions').select('*').eq('id', metricValue.metricId).single());
        /* istanbul ignore next */
        cov_2jjfg70d96().s[78]++;
        if (!metricDef) {
          /* istanbul ignore next */
          cov_2jjfg70d96().b[37][0]++;
          cov_2jjfg70d96().s[79]++;
          return _server.NextResponse.json({
            success: false,
            error: 'MÃ©trica no encontrada'
          }, {
            status: 404
          });
        } else
        /* istanbul ignore next */
        {
          cov_2jjfg70d96().b[37][1]++;
        }
        cov_2jjfg70d96().s[80]++;
        if (!metricDef.enabled) {
          /* istanbul ignore next */
          cov_2jjfg70d96().b[38][0]++;
          cov_2jjfg70d96().s[81]++;
          return _server.NextResponse.json({
            success: false,
            error: 'MÃ©trica deshabilitada'
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_2jjfg70d96().b[38][1]++;
        }
        // Registrar valor usando el sistema de mÃ©tricas enterprise
        cov_2jjfg70d96().s[82]++;
        await _enterprisemetrics.enterpriseMetrics.recordMetric(metricValue.metricId, metricValue.value, metricDef.type, metricDef.category,
        /* istanbul ignore next */
        (cov_2jjfg70d96().b[39][0]++, metricValue.tags) ||
        /* istanbul ignore next */
        (cov_2jjfg70d96().b[39][1]++, metricDef.tags), metricValue.metadata);
        /* istanbul ignore next */
        cov_2jjfg70d96().s[83]++;
        _logger.logger.info(_logger.LogLevel.INFO, 'Custom metric value recorded', {
          metricId: metricValue.metricId,
          value: metricValue.value,
          recordedBy: authResult.userId
        }, _logger.LogCategory.SYSTEM);
        /* istanbul ignore next */
        cov_2jjfg70d96().s[84]++;
        return _server.NextResponse.json({
          success: true,
          data: {
            metricId: metricValue.metricId,
            value: metricValue.value,
            recorded: true,
            timestamp: new Date().toISOString()
          }
        });
      case 'record_batch':
        /* istanbul ignore next */
        cov_2jjfg70d96().b[24][2]++;
        // Registrar mÃºltiples valores
        const batchValues =
        /* istanbul ignore next */
        (cov_2jjfg70d96().s[85]++,
        /* istanbul ignore next */
        (cov_2jjfg70d96().b[40][0]++, data.values) ||
        /* istanbul ignore next */
        (cov_2jjfg70d96().b[40][1]++, []));
        /* istanbul ignore next */
        cov_2jjfg70d96().s[86]++;
        if (
        /* istanbul ignore next */
        (cov_2jjfg70d96().b[42][0]++, !Array.isArray(batchValues)) ||
        /* istanbul ignore next */
        (cov_2jjfg70d96().b[42][1]++, batchValues.length === 0)) {
          /* istanbul ignore next */
          cov_2jjfg70d96().b[41][0]++;
          cov_2jjfg70d96().s[87]++;
          return _server.NextResponse.json({
            success: false,
            error: 'Array de valores requerido'
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_2jjfg70d96().b[41][1]++;
        }
        const results =
        /* istanbul ignore next */
        (cov_2jjfg70d96().s[88]++, []);
        /* istanbul ignore next */
        cov_2jjfg70d96().s[89]++;
        for (const value of batchValues) {
          /* istanbul ignore next */
          cov_2jjfg70d96().s[90]++;
          try {
            // Verificar mÃ©trica
            const {
              data: def
            } =
            /* istanbul ignore next */
            (cov_2jjfg70d96().s[91]++, await supabase.from('custom_metric_definitions').select('*').eq('id', value.metricId).single());
            /* istanbul ignore next */
            cov_2jjfg70d96().s[92]++;
            if (
            /* istanbul ignore next */
            (cov_2jjfg70d96().b[44][0]++, def) &&
            /* istanbul ignore next */
            (cov_2jjfg70d96().b[44][1]++, def.enabled)) {
              /* istanbul ignore next */
              cov_2jjfg70d96().b[43][0]++;
              cov_2jjfg70d96().s[93]++;
              await _enterprisemetrics.enterpriseMetrics.recordMetric(value.metricId, value.value, def.type, def.category,
              /* istanbul ignore next */
              (cov_2jjfg70d96().b[45][0]++, value.tags) ||
              /* istanbul ignore next */
              (cov_2jjfg70d96().b[45][1]++, def.tags), value.metadata);
              /* istanbul ignore next */
              cov_2jjfg70d96().s[94]++;
              results.push({
                metricId: value.metricId,
                success: true
              });
            } else {
              /* istanbul ignore next */
              cov_2jjfg70d96().b[43][1]++;
              cov_2jjfg70d96().s[95]++;
              results.push({
                metricId: value.metricId,
                success: false,
                error: 'Metric not found or disabled'
              });
            }
          } catch (error) {
            /* istanbul ignore next */
            cov_2jjfg70d96().s[96]++;
            results.push({
              metricId: value.metricId,
              success: false,
              error: error instanceof Error ?
              /* istanbul ignore next */
              (cov_2jjfg70d96().b[46][0]++, error.message) :
              /* istanbul ignore next */
              (cov_2jjfg70d96().b[46][1]++, 'Unknown error')
            });
          }
        }
        const successCount =
        /* istanbul ignore next */
        (cov_2jjfg70d96().s[97]++, results.filter(r => {
          /* istanbul ignore next */
          cov_2jjfg70d96().f[8]++;
          cov_2jjfg70d96().s[98]++;
          return r.success;
        }).length);
        /* istanbul ignore next */
        cov_2jjfg70d96().s[99]++;
        _logger.logger.info(_logger.LogLevel.INFO, 'Custom metrics batch recorded', {
          totalValues: batchValues.length,
          successCount,
          failureCount: batchValues.length - successCount,
          recordedBy: authResult.userId
        }, _logger.LogCategory.SYSTEM);
        /* istanbul ignore next */
        cov_2jjfg70d96().s[100]++;
        return _server.NextResponse.json({
          success: true,
          data: {
            totalValues: batchValues.length,
            successCount,
            failureCount: batchValues.length - successCount,
            results
          }
        });
      default:
        /* istanbul ignore next */
        cov_2jjfg70d96().b[24][3]++;
        cov_2jjfg70d96().s[101]++;
        return _server.NextResponse.json({
          success: false,
          error: 'AcciÃ³n no vÃ¡lida'
        }, {
          status: 400
        });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_2jjfg70d96().s[102]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Failed to process custom metrics request', {
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2jjfg70d96().b[47][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2jjfg70d96().b[47][1]++, 'Unknown error')
    }, _logger.LogCategory.SYSTEM);
    /* istanbul ignore next */
    cov_2jjfg70d96().s[103]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function PUT(request) {
  /* istanbul ignore next */
  cov_2jjfg70d96().f[9]++;
  cov_2jjfg70d96().s[104]++;
  try {
    // Verificar autenticaciÃ³n de admin
    const authResult =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[105]++, await (0, _adminauth.getAuthenticatedAdmin)(request));
    /* istanbul ignore next */
    cov_2jjfg70d96().s[106]++;
    if (
    /* istanbul ignore next */
    (cov_2jjfg70d96().b[49][0]++, !authResult.isAdmin) ||
    /* istanbul ignore next */
    (cov_2jjfg70d96().b[49][1]++, !authResult.userId)) {
      /* istanbul ignore next */
      cov_2jjfg70d96().b[48][0]++;
      cov_2jjfg70d96().s[107]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Acceso no autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jjfg70d96().b[48][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[108]++, await request.json());
    const {
      metricId,
      updates
    } =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[109]++, body);
    /* istanbul ignore next */
    cov_2jjfg70d96().s[110]++;
    if (
    /* istanbul ignore next */
    (cov_2jjfg70d96().b[51][0]++, !metricId) ||
    /* istanbul ignore next */
    (cov_2jjfg70d96().b[51][1]++, !updates)) {
      /* istanbul ignore next */
      cov_2jjfg70d96().b[50][0]++;
      cov_2jjfg70d96().s[111]++;
      return _server.NextResponse.json({
        success: false,
        error: 'metricId y updates requeridos'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jjfg70d96().b[50][1]++;
    }
    const supabase =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[112]++, (0, _supabase.getSupabaseClient)(true));
    /* istanbul ignore next */
    cov_2jjfg70d96().s[113]++;
    if (!supabase) {
      /* istanbul ignore next */
      cov_2jjfg70d96().b[52][0]++;
      cov_2jjfg70d96().s[114]++;
      throw new Error('Supabase client not available');
    } else
    /* istanbul ignore next */
    {
      cov_2jjfg70d96().b[52][1]++;
    }
    // Verificar que la mÃ©trica existe
    const {
      data: existing
    } =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[115]++, await supabase.from('custom_metric_definitions').select('*').eq('id', metricId).single());
    /* istanbul ignore next */
    cov_2jjfg70d96().s[116]++;
    if (!existing) {
      /* istanbul ignore next */
      cov_2jjfg70d96().b[53][0]++;
      cov_2jjfg70d96().s[117]++;
      return _server.NextResponse.json({
        success: false,
        error: 'MÃ©trica no encontrada'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jjfg70d96().b[53][1]++;
    }
    // Campos permitidos para actualizaciÃ³n
    const allowedFields =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[118]++, ['description', 'unit', 'tags', 'aggregationMethod', 'retentionDays', 'enabled']);
    const updateData =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[119]++, {});
    /* istanbul ignore next */
    cov_2jjfg70d96().s[120]++;
    for (const field of allowedFields) {
      /* istanbul ignore next */
      cov_2jjfg70d96().s[121]++;
      if (updates[field] !== undefined) {
        /* istanbul ignore next */
        cov_2jjfg70d96().b[54][0]++;
        cov_2jjfg70d96().s[122]++;
        updateData[field] = updates[field];
      } else
      /* istanbul ignore next */
      {
        cov_2jjfg70d96().b[54][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2jjfg70d96().s[123]++;
    if (Object.keys(updateData).length === 0) {
      /* istanbul ignore next */
      cov_2jjfg70d96().b[55][0]++;
      cov_2jjfg70d96().s[124]++;
      return _server.NextResponse.json({
        success: false,
        error: 'No hay campos vÃ¡lidos para actualizar'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jjfg70d96().b[55][1]++;
    }
    // Actualizar
    const {
      error: updateError
    } =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[125]++, await supabase.from('custom_metric_definitions').update(updateData).eq('id', metricId));
    /* istanbul ignore next */
    cov_2jjfg70d96().s[126]++;
    if (updateError) {
      /* istanbul ignore next */
      cov_2jjfg70d96().b[56][0]++;
      cov_2jjfg70d96().s[127]++;
      throw updateError;
    } else
    /* istanbul ignore next */
    {
      cov_2jjfg70d96().b[56][1]++;
    }
    cov_2jjfg70d96().s[128]++;
    _logger.logger.info(_logger.LogLevel.INFO, 'Custom metric definition updated', {
      metricId,
      updatedFields: Object.keys(updateData),
      updatedBy: authResult.userId
    }, _logger.LogCategory.SYSTEM);
    /* istanbul ignore next */
    cov_2jjfg70d96().s[129]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        metricId,
        updated: updateData,
        timestamp: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2jjfg70d96().s[130]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Failed to update custom metric', {
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2jjfg70d96().b[57][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2jjfg70d96().b[57][1]++, 'Unknown error')
    }, _logger.LogCategory.SYSTEM);
    /* istanbul ignore next */
    cov_2jjfg70d96().s[131]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function DELETE(request) {
  /* istanbul ignore next */
  cov_2jjfg70d96().f[10]++;
  cov_2jjfg70d96().s[132]++;
  try {
    // Verificar autenticaciÃ³n de admin
    const authResult =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[133]++, await (0, _adminauth.getAuthenticatedAdmin)(request));
    /* istanbul ignore next */
    cov_2jjfg70d96().s[134]++;
    if (
    /* istanbul ignore next */
    (cov_2jjfg70d96().b[59][0]++, !authResult.isAdmin) ||
    /* istanbul ignore next */
    (cov_2jjfg70d96().b[59][1]++, !authResult.userId)) {
      /* istanbul ignore next */
      cov_2jjfg70d96().b[58][0]++;
      cov_2jjfg70d96().s[135]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Acceso no autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jjfg70d96().b[58][1]++;
    }
    const searchParams =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[136]++, request.nextUrl.searchParams);
    const metricId =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[137]++, searchParams.get('metricId'));
    /* istanbul ignore next */
    cov_2jjfg70d96().s[138]++;
    if (!metricId) {
      /* istanbul ignore next */
      cov_2jjfg70d96().b[60][0]++;
      cov_2jjfg70d96().s[139]++;
      return _server.NextResponse.json({
        success: false,
        error: 'metricId requerido'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jjfg70d96().b[60][1]++;
    }
    const supabase =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[140]++, (0, _supabase.getSupabaseClient)(true));
    /* istanbul ignore next */
    cov_2jjfg70d96().s[141]++;
    if (!supabase) {
      /* istanbul ignore next */
      cov_2jjfg70d96().b[61][0]++;
      cov_2jjfg70d96().s[142]++;
      throw new Error('Supabase client not available');
    } else
    /* istanbul ignore next */
    {
      cov_2jjfg70d96().b[61][1]++;
    }
    // Verificar que la mÃ©trica existe
    const {
      data: existing
    } =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[143]++, await supabase.from('custom_metric_definitions').select('*').eq('id', metricId).single());
    /* istanbul ignore next */
    cov_2jjfg70d96().s[144]++;
    if (!existing) {
      /* istanbul ignore next */
      cov_2jjfg70d96().b[62][0]++;
      cov_2jjfg70d96().s[145]++;
      return _server.NextResponse.json({
        success: false,
        error: 'MÃ©trica no encontrada'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jjfg70d96().b[62][1]++;
    }
    // Eliminar definiciÃ³n
    const {
      error: deleteError
    } =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[146]++, await supabase.from('custom_metric_definitions').delete().eq('id', metricId));
    /* istanbul ignore next */
    cov_2jjfg70d96().s[147]++;
    if (deleteError) {
      /* istanbul ignore next */
      cov_2jjfg70d96().b[63][0]++;
      cov_2jjfg70d96().s[148]++;
      throw deleteError;
    } else
    /* istanbul ignore next */
    {
      cov_2jjfg70d96().b[63][1]++;
    }
    cov_2jjfg70d96().s[149]++;
    _logger.logger.info(_logger.LogLevel.INFO, 'Custom metric definition deleted', {
      metricId,
      name: existing.name,
      deletedBy: authResult.userId
    }, _logger.LogCategory.SYSTEM);
    /* istanbul ignore next */
    cov_2jjfg70d96().s[150]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        metricId,
        deleted: true,
        timestamp: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2jjfg70d96().s[151]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Failed to delete custom metric', {
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2jjfg70d96().b[64][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2jjfg70d96().b[64][1]++, 'Unknown error')
    }, _logger.LogCategory.SYSTEM);
    /* istanbul ignore next */
    cov_2jjfg70d96().s[152]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
/**
 * Agrega valores de mÃ©trica segÃºn el perÃ­odo especificado
 */
async function aggregateMetricValues(values, period) {
  /* istanbul ignore next */
  cov_2jjfg70d96().f[11]++;
  const aggregated =
  /* istanbul ignore next */
  (cov_2jjfg70d96().s[153]++, {});
  /* istanbul ignore next */
  cov_2jjfg70d96().s[154]++;
  values.forEach(value => {
    /* istanbul ignore next */
    cov_2jjfg70d96().f[12]++;
    let key;
    const date =
    /* istanbul ignore next */
    (cov_2jjfg70d96().s[155]++, new Date(value.timestamp));
    /* istanbul ignore next */
    cov_2jjfg70d96().s[156]++;
    switch (period) {
      case '1m':
        /* istanbul ignore next */
        cov_2jjfg70d96().b[65][0]++;
        cov_2jjfg70d96().s[157]++;
        key = date.toISOString().substring(0, 16) + ':00.000Z';
        /* istanbul ignore next */
        cov_2jjfg70d96().s[158]++;
        break;
      case '5m':
        /* istanbul ignore next */
        cov_2jjfg70d96().b[65][1]++;
        const minutes =
        /* istanbul ignore next */
        (cov_2jjfg70d96().s[159]++, Math.floor(date.getMinutes() / 5) * 5);
        /* istanbul ignore next */
        cov_2jjfg70d96().s[160]++;
        key = new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), minutes).toISOString();
        /* istanbul ignore next */
        cov_2jjfg70d96().s[161]++;
        break;
      case '1h':
        /* istanbul ignore next */
        cov_2jjfg70d96().b[65][2]++;
        cov_2jjfg70d96().s[162]++;
        key = date.toISOString().substring(0, 13) + ':00:00.000Z';
        /* istanbul ignore next */
        cov_2jjfg70d96().s[163]++;
        break;
      case '1d':
        /* istanbul ignore next */
        cov_2jjfg70d96().b[65][3]++;
        cov_2jjfg70d96().s[164]++;
        key = date.toISOString().substring(0, 10) + 'T00:00:00.000Z';
        /* istanbul ignore next */
        cov_2jjfg70d96().s[165]++;
        break;
      default:
        /* istanbul ignore next */
        cov_2jjfg70d96().b[65][4]++;
        cov_2jjfg70d96().s[166]++;
        key = value.timestamp;
    }
    /* istanbul ignore next */
    cov_2jjfg70d96().s[167]++;
    if (!aggregated[key]) {
      /* istanbul ignore next */
      cov_2jjfg70d96().b[66][0]++;
      cov_2jjfg70d96().s[168]++;
      aggregated[key] = {
        sum: 0,
        count: 0,
        min: value.value,
        max: value.value
      };
    } else
    /* istanbul ignore next */
    {
      cov_2jjfg70d96().b[66][1]++;
    }
    cov_2jjfg70d96().s[169]++;
    aggregated[key].sum += value.value;
    /* istanbul ignore next */
    cov_2jjfg70d96().s[170]++;
    aggregated[key].count += 1;
    /* istanbul ignore next */
    cov_2jjfg70d96().s[171]++;
    aggregated[key].min = Math.min(aggregated[key].min, value.value);
    /* istanbul ignore next */
    cov_2jjfg70d96().s[172]++;
    aggregated[key].max = Math.max(aggregated[key].max, value.value);
  });
  /* istanbul ignore next */
  cov_2jjfg70d96().s[173]++;
  return Object.entries(aggregated).map(([timestamp, data]) => {
    /* istanbul ignore next */
    cov_2jjfg70d96().f[13]++;
    cov_2jjfg70d96().s[174]++;
    return {
      timestamp,
      value: data.sum / data.count,
      sum: data.sum,
      count: data.count,
      min: data.min,
      max: data.max
    };
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,