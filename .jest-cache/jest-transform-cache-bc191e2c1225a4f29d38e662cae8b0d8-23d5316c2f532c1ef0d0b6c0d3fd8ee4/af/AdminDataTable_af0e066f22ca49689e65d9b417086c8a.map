{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\ui\\AdminDataTable.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { cn } from '@/lib/core/utils'\nimport {\n  ChevronLeft,\n  ChevronRight,\n  ChevronsLeft,\n  ChevronsRight,\n  Search,\n  Filter,\n  Download,\n  MoreHorizontal,\n} from 'lucide-react'\n\ninterface Column<T> {\n  key: keyof T | string\n  title: string\n  render?: (value: any, row: T) => React.ReactNode\n  sortable?: boolean\n  width?: string\n  align?: 'left' | 'center' | 'right'\n}\n\ninterface FilterConfig {\n  key: string\n  label: string\n  type: 'text' | 'select' | 'date'\n  options?: { label: string; value: string }[]\n}\n\ninterface PaginationConfig {\n  page: number\n  pageSize: number\n  total: number\n  onPageChange: (page: number) => void\n  onPageSizeChange: (pageSize: number) => void\n}\n\ninterface AdminDataTableProps<T> {\n  data: T[]\n  columns: Column<T>[]\n  loading?: boolean\n  error?: string\n  pagination?: PaginationConfig\n  filters?: FilterConfig[]\n  searchable?: boolean\n  exportable?: boolean\n  selectable?: boolean\n  onRowClick?: (row: T) => void\n  onSelectionChange?: (selectedRows: T[]) => void\n  actions?: React.ReactNode\n  className?: string\n}\n\nexport function AdminDataTable<T extends Record<string, any>>({\n  data,\n  columns,\n  loading = false,\n  error,\n  pagination,\n  filters,\n  searchable = true,\n  exportable = false,\n  selectable = false,\n  onRowClick,\n  onSelectionChange,\n  actions,\n  className,\n}: AdminDataTableProps<T>) {\n  const [searchTerm, setSearchTerm] = useState('')\n  const [selectedRows, setSelectedRows] = useState<T[]>([])\n  const [sortConfig, setSortConfig] = useState<{\n    key: string\n    direction: 'asc' | 'desc'\n  } | null>(null)\n\n  // Asegurar que data siempre sea un array\n  console.log('🔍 AdminDataTable: data recibida:', {\n    data,\n    type: typeof data,\n    isArray: Array.isArray(data),\n  })\n  const safeData = Array.isArray(data) ? data : []\n\n  // Filter and search data\n  const filteredData = safeData.filter(row => {\n    if (!searchTerm) {\n      return true\n    }\n    return Object.values(row).some(value =>\n      String(value).toLowerCase().includes(searchTerm.toLowerCase())\n    )\n  })\n\n  // Sort data\n  const sortedData = sortConfig\n    ? [...filteredData].sort((a, b) => {\n        const aValue = a[sortConfig.key]\n        const bValue = b[sortConfig.key]\n\n        if (aValue < bValue) {\n          return sortConfig.direction === 'asc' ? -1 : 1\n        }\n        if (aValue > bValue) {\n          return sortConfig.direction === 'asc' ? 1 : -1\n        }\n        return 0\n      })\n    : filteredData\n\n  const handleSort = (key: string) => {\n    setSortConfig(current => {\n      if (current?.key === key) {\n        return {\n          key,\n          direction: current.direction === 'asc' ? 'desc' : 'asc',\n        }\n      }\n      return { key, direction: 'asc' }\n    })\n  }\n\n  const handleRowSelection = (row: T, checked: boolean) => {\n    const newSelection = checked ? [...selectedRows, row] : selectedRows.filter(r => r !== row)\n\n    setSelectedRows(newSelection)\n    onSelectionChange?.(newSelection)\n  }\n\n  const handleSelectAll = (checked: boolean) => {\n    const newSelection = checked ? [...sortedData] : []\n    setSelectedRows(newSelection)\n    onSelectionChange?.(newSelection)\n  }\n\n  if (error) {\n    return (\n      <div className='bg-red-50 border border-red-200 rounded-lg p-4'>\n        <p className='text-red-800'>\n          Error: {error instanceof Error ? error.message : error?.toString() || 'Error desconocido'}\n        </p>\n      </div>\n    )\n  }\n\n  return (\n    <div className={cn('bg-white rounded-lg border border-gray-200', className)}>\n      {/* Header */}\n      <div className='p-4 border-b border-gray-200'>\n        <div className='flex items-center justify-between'>\n          <div className='flex items-center space-x-4'>\n            {/* Search */}\n            {searchable && (\n              <div className='relative'>\n                <Search className='absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4' />\n                <input\n                  type='text'\n                  placeholder='Buscar...'\n                  value={searchTerm}\n                  onChange={e => setSearchTerm(e.target.value)}\n                  className='pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blaze-orange-500 focus:border-transparent'\n                />\n              </div>\n            )}\n\n            {/* Filters */}\n            {filters && filters.length > 0 && (\n              <button className='flex items-center space-x-2 px-3 py-2 border border-gray-300 rounded-lg hover:bg-gray-50'>\n                <Filter className='w-4 h-4' />\n                <span>Filtros</span>\n              </button>\n            )}\n          </div>\n\n          <div className='flex items-center space-x-2'>\n            {/* Export */}\n            {exportable && (\n              <button className='flex items-center space-x-2 px-3 py-2 border border-gray-300 rounded-lg hover:bg-gray-50'>\n                <Download className='w-4 h-4' />\n                <span>Exportar</span>\n              </button>\n            )}\n\n            {/* Actions */}\n            {actions}\n          </div>\n        </div>\n      </div>\n\n      {/* Table */}\n      <div className='overflow-x-auto'>\n        <table className='w-full'>\n          <thead className='bg-gray-50'>\n            <tr>\n              {selectable && (\n                <th className='w-12 px-4 py-3 text-left'>\n                  <input\n                    type='checkbox'\n                    checked={selectedRows.length === sortedData.length && sortedData.length > 0}\n                    onChange={e => handleSelectAll(e.target.checked)}\n                    className='rounded border-gray-300 text-blaze-orange-600 focus:ring-blaze-orange-500'\n                  />\n                </th>\n              )}\n              {columns.map(column => (\n                <th\n                  key={String(column.key)}\n                  className={cn(\n                    'px-4 py-3 text-xs font-medium text-gray-500 uppercase tracking-wider',\n                    column.align === 'center' && 'text-center',\n                    column.align === 'right' && 'text-right',\n                    column.sortable && 'cursor-pointer hover:bg-gray-100'\n                  )}\n                  style={{ width: column.width }}\n                  onClick={() => column.sortable && handleSort(String(column.key))}\n                >\n                  <div className='flex items-center space-x-1'>\n                    <span>{column.title}</span>\n                    {column.sortable && sortConfig?.key === column.key && (\n                      <span className='text-blaze-orange-600'>\n                        {sortConfig.direction === 'asc' ? '↑' : '↓'}\n                      </span>\n                    )}\n                  </div>\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody className='bg-white divide-y divide-gray-200'>\n            {loading ? (\n              <tr>\n                <td\n                  colSpan={columns.length + (selectable ? 1 : 0)}\n                  className='px-4 py-8 text-center'\n                >\n                  <div className='flex items-center justify-center'>\n                    <div className='animate-spin rounded-full h-6 w-6 border-b-2 border-blaze-orange-600'></div>\n                    <span className='ml-2 text-gray-600'>Cargando...</span>\n                  </div>\n                </td>\n              </tr>\n            ) : sortedData.length === 0 ? (\n              <tr>\n                <td\n                  colSpan={columns.length + (selectable ? 1 : 0)}\n                  className='px-4 py-8 text-center text-gray-500'\n                >\n                  No se encontraron datos\n                </td>\n              </tr>\n            ) : (\n              sortedData.map((row, index) => (\n                <tr\n                  key={index}\n                  className={cn(\n                    'hover:bg-gray-50 transition-colors',\n                    onRowClick && 'cursor-pointer',\n                    selectedRows.includes(row) && 'bg-blaze-orange-50'\n                  )}\n                  onClick={() => onRowClick?.(row)}\n                >\n                  {selectable && (\n                    <td className='px-4 py-4'>\n                      <input\n                        type='checkbox'\n                        checked={selectedRows.includes(row)}\n                        onChange={e => {\n                          e.stopPropagation()\n                          handleRowSelection(row, e.target.checked)\n                        }}\n                        className='rounded border-gray-300 text-blaze-orange-600 focus:ring-blaze-orange-500'\n                      />\n                    </td>\n                  )}\n                  {columns.map(column => (\n                    <td\n                      key={String(column.key)}\n                      className={cn(\n                        'px-4 py-4 whitespace-nowrap text-sm text-gray-900',\n                        column.align === 'center' && 'text-center',\n                        column.align === 'right' && 'text-right'\n                      )}\n                    >\n                      {column.render\n                        ? column.render(row[column.key as keyof T], row)\n                        : String(row[column.key as keyof T] || '')}\n                    </td>\n                  ))}\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Pagination */}\n      {pagination && (\n        <div className='px-4 py-3 border-t border-gray-200 flex items-center justify-between'>\n          <div className='flex items-center space-x-2 text-sm text-gray-700'>\n            <span>Mostrando</span>\n            <select\n              value={pagination.pageSize}\n              onChange={e => pagination.onPageSizeChange(Number(e.target.value))}\n              className='border border-gray-300 rounded px-2 py-1'\n            >\n              <option value={10}>10</option>\n              <option value={25}>25</option>\n              <option value={50}>50</option>\n              <option value={100}>100</option>\n            </select>\n            <span>de {pagination.total} resultados</span>\n          </div>\n\n          <div className='flex items-center space-x-2'>\n            <button\n              onClick={() => pagination.onPageChange(1)}\n              disabled={pagination.page === 1}\n              className='p-2 rounded hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed'\n            >\n              <ChevronsLeft className='w-4 h-4' />\n            </button>\n            <button\n              onClick={() => pagination.onPageChange(pagination.page - 1)}\n              disabled={pagination.page === 1}\n              className='p-2 rounded hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed'\n            >\n              <ChevronLeft className='w-4 h-4' />\n            </button>\n\n            <span className='px-3 py-1 text-sm'>\n              Página {pagination.page} de {Math.ceil(pagination.total / pagination.pageSize)}\n            </span>\n\n            <button\n              onClick={() => pagination.onPageChange(pagination.page + 1)}\n              disabled={pagination.page >= Math.ceil(pagination.total / pagination.pageSize)}\n              className='p-2 rounded hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed'\n            >\n              <ChevronRight className='w-4 h-4' />\n            </button>\n            <button\n              onClick={() =>\n                pagination.onPageChange(Math.ceil(pagination.total / pagination.pageSize))\n              }\n              disabled={pagination.page >= Math.ceil(pagination.total / pagination.pageSize)}\n              className='p-2 rounded hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed'\n            >\n              <ChevronsRight className='w-4 h-4' />\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":["AdminDataTable","data","columns","loading","error","pagination","filters","searchable","exportable","selectable","onRowClick","onSelectionChange","actions","className","searchTerm","setSearchTerm","useState","selectedRows","setSelectedRows","sortConfig","setSortConfig","console","log","type","isArray","Array","safeData","filteredData","filter","row","Object","values","some","value","String","toLowerCase","includes","sortedData","sort","a","b","aValue","key","bValue","direction","handleSort","current","handleRowSelection","checked","newSelection","r","handleSelectAll","div","p","Error","message","toString","cn","Search","input","placeholder","onChange","e","target","length","button","Filter","span","Download","table","thead","tr","th","map","column","align","sortable","style","width","onClick","title","tbody","td","colSpan","index","stopPropagation","render","select","pageSize","onPageSizeChange","Number","option","total","onPageChange","disabled","page","ChevronsLeft","ChevronLeft","Math","ceil","ChevronRight","ChevronsRight"],"mappings":"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"}