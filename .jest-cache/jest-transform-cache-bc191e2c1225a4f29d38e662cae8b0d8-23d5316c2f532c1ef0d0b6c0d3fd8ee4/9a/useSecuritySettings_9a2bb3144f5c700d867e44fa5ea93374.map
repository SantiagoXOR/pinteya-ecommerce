{"version":3,"names":["cov_10ofbem7in","actualCoverage","s","useSecurityAlerts","f","useSecuritySettings","useSecurityValidation","settings","setSettings","_react","useState","alerts","setAlerts","stats","setStats","isLoading","setIsLoading","error","setError","fetchSettings","useCallback","response","fetch","method","headers","ok","b","Error","data","json","success","err","errorMessage","message","_sonner","toast","updateSettings","updates","body","JSON","stringify","errorData","refreshSettings","toggleTwoFactor","newValue","two_factor_enabled","updateAlertSettings","alertSettings","updateSessionSettings","sessionSettings","useEffect","getSeverityColor","severity","colors","low","medium","high","critical","getSeverityIcon","icons","formatAlertType","type","typeMap","login","suspicious_activity","new_device","password_change","session_timeout","validateSessionTimeout","timeout","validateMaxSessions","maxSessions","getSecurityScore","score","login_alerts","suspicious_activity_alerts","new_device_alerts","password_change_alerts","max_concurrent_sessions","Math","min","getSecurityRecommendations","recommendations","push"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useSecuritySettings.ts"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { toast } from 'sonner';\r\n\r\n// Tipos para configuración de seguridad\r\nexport interface SecuritySettings {\r\n  id: string;\r\n  user_id: string;\r\n  two_factor_enabled: boolean;\r\n  login_alerts: boolean;\r\n  suspicious_activity_alerts: boolean;\r\n  new_device_alerts: boolean;\r\n  password_change_alerts: boolean;\r\n  trusted_devices_only: boolean;\r\n  session_timeout: number; // en minutos\r\n  max_concurrent_sessions: number;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nexport interface SecurityAlert {\r\n  id: string;\r\n  user_id: string;\r\n  type: 'login' | 'suspicious_activity' | 'new_device' | 'password_change' | 'session_timeout';\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  title: string;\r\n  description: string;\r\n  metadata?: Record<string, any>;\r\n  is_read: boolean;\r\n  is_resolved: boolean;\r\n  created_at: string;\r\n}\r\n\r\ninterface SecurityStats {\r\n  activeSessions: number;\r\n  unresolvedAlerts: number;\r\n  lastSuspiciousActivity: string | null;\r\n  uniqueDevicesLast30Days: number;\r\n}\r\n\r\ninterface SecurityResponse {\r\n  success: boolean;\r\n  settings: SecuritySettings;\r\n  alerts: SecurityAlert[];\r\n  stats: SecurityStats;\r\n}\r\n\r\ninterface UseSecuritySettingsReturn {\r\n  // Estado\r\n  settings: SecuritySettings | null;\r\n  alerts: SecurityAlert[];\r\n  stats: SecurityStats | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  \r\n  // Funciones\r\n  fetchSettings: () => Promise<void>;\r\n  updateSettings: (updates: Partial<SecuritySettings>) => Promise<boolean>;\r\n  refreshSettings: () => Promise<void>;\r\n  \r\n  // Funciones específicas\r\n  toggleTwoFactor: () => Promise<boolean>;\r\n  updateAlertSettings: (alertSettings: {\r\n    login_alerts?: boolean;\r\n    suspicious_activity_alerts?: boolean;\r\n    new_device_alerts?: boolean;\r\n    password_change_alerts?: boolean;\r\n  }) => Promise<boolean>;\r\n  updateSessionSettings: (sessionSettings: {\r\n    session_timeout?: number;\r\n    max_concurrent_sessions?: number;\r\n    trusted_devices_only?: boolean;\r\n  }) => Promise<boolean>;\r\n}\r\n\r\nexport function useSecuritySettings(): UseSecuritySettingsReturn {\r\n  const [settings, setSettings] = useState<SecuritySettings | null>(null);\r\n  const [alerts, setAlerts] = useState<SecurityAlert[]>([]);\r\n  const [stats, setStats] = useState<SecurityStats | null>(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Función para obtener configuración de seguridad\r\n  const fetchSettings = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch('/api/user/security', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al obtener configuración de seguridad');\r\n      }\r\n\r\n      const data: SecurityResponse = await response.json();\r\n      \r\n      if (data.success) {\r\n        setSettings(data.settings);\r\n        setAlerts(data.alerts);\r\n        setStats(data.stats);\r\n      } else {\r\n        throw new Error('Error en la respuesta del servidor');\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      setError(errorMessage);\r\n      toast.error('Error al cargar configuración de seguridad: ' + errorMessage);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Función para actualizar configuración\r\n  const updateSettings = useCallback(async (updates: Partial<SecuritySettings>): Promise<boolean> => {\r\n    if (!settings) return false;\r\n\r\n    try {\r\n      const response = await fetch('/api/user/security', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(updates),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Error al actualizar configuración');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        setSettings(data.settings);\r\n        toast.success('Configuración de seguridad actualizada');\r\n        return true;\r\n      } else {\r\n        throw new Error(data.error || 'Error al actualizar configuración');\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      toast.error('Error al actualizar configuración: ' + errorMessage);\r\n      return false;\r\n    }\r\n  }, [settings]);\r\n\r\n  // Función para refrescar configuración\r\n  const refreshSettings = useCallback(async () => {\r\n    await fetchSettings();\r\n  }, [fetchSettings]);\r\n\r\n  // Función específica para toggle 2FA\r\n  const toggleTwoFactor = useCallback(async (): Promise<boolean> => {\r\n    if (!settings) return false;\r\n\r\n    const newValue = !settings.two_factor_enabled;\r\n    const success = await updateSettings({ two_factor_enabled: newValue });\r\n    \r\n    if (success) {\r\n      toast.success(\r\n        newValue \r\n          ? 'Autenticación de dos factores activada' \r\n          : 'Autenticación de dos factores desactivada'\r\n      );\r\n    }\r\n    \r\n    return success;\r\n  }, [settings, updateSettings]);\r\n\r\n  // Función para actualizar configuración de alertas\r\n  const updateAlertSettings = useCallback(async (alertSettings: {\r\n    login_alerts?: boolean;\r\n    suspicious_activity_alerts?: boolean;\r\n    new_device_alerts?: boolean;\r\n    password_change_alerts?: boolean;\r\n  }): Promise<boolean> => {\r\n    const success = await updateSettings(alertSettings);\r\n    \r\n    if (success) {\r\n      toast.success('Configuración de alertas actualizada');\r\n    }\r\n    \r\n    return success;\r\n  }, [updateSettings]);\r\n\r\n  // Función para actualizar configuración de sesiones\r\n  const updateSessionSettings = useCallback(async (sessionSettings: {\r\n    session_timeout?: number;\r\n    max_concurrent_sessions?: number;\r\n    trusted_devices_only?: boolean;\r\n  }): Promise<boolean> => {\r\n    const success = await updateSettings(sessionSettings);\r\n    \r\n    if (success) {\r\n      toast.success('Configuración de sesiones actualizada');\r\n    }\r\n    \r\n    return success;\r\n  }, [updateSettings]);\r\n\r\n  // Cargar configuración al montar el componente\r\n  useEffect(() => {\r\n    fetchSettings();\r\n  }, [fetchSettings]);\r\n\r\n  return {\r\n    // Estado\r\n    settings,\r\n    alerts,\r\n    stats,\r\n    isLoading,\r\n    error,\r\n    \r\n    // Funciones\r\n    fetchSettings,\r\n    updateSettings,\r\n    refreshSettings,\r\n    \r\n    // Funciones específicas\r\n    toggleTwoFactor,\r\n    updateAlertSettings,\r\n    updateSessionSettings,\r\n  };\r\n}\r\n\r\n// Hook auxiliar para formatear alertas de seguridad\r\nexport function useSecurityAlerts() {\r\n  const getSeverityColor = useCallback((severity: SecurityAlert['severity']) => {\r\n    const colors = {\r\n      low: 'text-blue-600 bg-blue-50',\r\n      medium: 'text-yellow-600 bg-yellow-50',\r\n      high: 'text-orange-600 bg-orange-50',\r\n      critical: 'text-red-600 bg-red-50',\r\n    };\r\n    return colors[severity] || colors.low;\r\n  }, []);\r\n\r\n  const getSeverityIcon = useCallback((severity: SecurityAlert['severity']) => {\r\n    const icons = {\r\n      low: '🔵',\r\n      medium: '🟡',\r\n      high: '🟠',\r\n      critical: '🔴',\r\n    };\r\n    return icons[severity] || icons.low;\r\n  }, []);\r\n\r\n  const formatAlertType = useCallback((type: SecurityAlert['type']) => {\r\n    const typeMap = {\r\n      login: 'Inicio de sesión',\r\n      suspicious_activity: 'Actividad sospechosa',\r\n      new_device: 'Nuevo dispositivo',\r\n      password_change: 'Cambio de contraseña',\r\n      session_timeout: 'Sesión expirada',\r\n    };\r\n    return typeMap[type] || type;\r\n  }, []);\r\n\r\n  return {\r\n    getSeverityColor,\r\n    getSeverityIcon,\r\n    formatAlertType,\r\n  };\r\n}\r\n\r\n// Hook para validaciones de seguridad\r\nexport function useSecurityValidation() {\r\n  const validateSessionTimeout = useCallback((timeout: number): string | null => {\r\n    if (timeout < 1) {\r\n      return 'El timeout debe ser al menos 1 minuto';\r\n    }\r\n    if (timeout > 43200) { // 30 días\r\n      return 'El timeout no puede ser mayor a 30 días (43200 minutos)';\r\n    }\r\n    return null;\r\n  }, []);\r\n\r\n  const validateMaxSessions = useCallback((maxSessions: number): string | null => {\r\n    if (maxSessions < 1) {\r\n      return 'Debe permitir al menos 1 sesión';\r\n    }\r\n    if (maxSessions > 20) {\r\n      return 'No se pueden permitir más de 20 sesiones concurrentes';\r\n    }\r\n    return null;\r\n  }, []);\r\n\r\n  const getSecurityScore = useCallback((settings: SecuritySettings | null): number => {\r\n    if (!settings) return 0;\r\n\r\n    let score = 0;\r\n    \r\n    // 2FA vale 40 puntos\r\n    if (settings.two_factor_enabled) score += 40;\r\n    \r\n    // Alertas valen 10 puntos cada una\r\n    if (settings.login_alerts) score += 10;\r\n    if (settings.suspicious_activity_alerts) score += 10;\r\n    if (settings.new_device_alerts) score += 10;\r\n    if (settings.password_change_alerts) score += 10;\r\n    \r\n    // Configuración de sesiones vale 20 puntos\r\n    if (settings.session_timeout <= 1440) score += 10; // <= 1 día\r\n    if (settings.max_concurrent_sessions <= 3) score += 10; // <= 3 sesiones\r\n    \r\n    return Math.min(score, 100);\r\n  }, []);\r\n\r\n  const getSecurityRecommendations = useCallback((settings: SecuritySettings | null): string[] => {\r\n    if (!settings) return [];\r\n\r\n    const recommendations: string[] = [];\r\n\r\n    if (!settings.two_factor_enabled) {\r\n      recommendations.push('Activa la autenticación de dos factores para mayor seguridad');\r\n    }\r\n\r\n    if (!settings.login_alerts) {\r\n      recommendations.push('Activa las alertas de inicio de sesión');\r\n    }\r\n\r\n    if (!settings.new_device_alerts) {\r\n      recommendations.push('Activa las alertas de nuevos dispositivos');\r\n    }\r\n\r\n    if (settings.session_timeout > 1440) {\r\n      recommendations.push('Considera reducir el tiempo de sesión a menos de 24 horas');\r\n    }\r\n\r\n    if (settings.max_concurrent_sessions > 5) {\r\n      recommendations.push('Considera limitar las sesiones concurrentes a 5 o menos');\r\n    }\r\n\r\n    return recommendations;\r\n  }, []);\r\n\r\n  return {\r\n    validateSessionTimeout,\r\n    validateMaxSessions,\r\n    getSecurityScore,\r\n    getSecurityRecommendations,\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}