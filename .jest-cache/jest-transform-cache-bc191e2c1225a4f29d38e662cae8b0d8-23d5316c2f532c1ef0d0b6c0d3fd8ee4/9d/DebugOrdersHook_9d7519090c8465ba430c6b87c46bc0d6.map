{"version":3,"names":["DebugOrdersHook","cov_13zu3o6mka","f","hookData","s","_useOrdersEnterprise","useOrdersEnterprise","orders","stats","isLoading","isLoadingOrders","isLoadingStats","error","ordersError","statsError","refetchOrders","refetchStats","derivedMetrics","_jsxruntime","jsx","className","jsxs","_card","Card","CardHeader","CardTitle","_lucidereact","AlertTriangle","CardDescription","CardContent","_badge","Badge","variant","b","XCircle","message","CheckCircle","length","totalOrders","pendingOrders","completedOrders","totalRevenue","toLocaleString","hasOrders","canCreateOrder","_button","Button","size","onClick","disabled","RefreshCw","JSON","stringify","slice"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\DebugOrdersHook.tsx"],"sourcesContent":["// =====================================================\r\n// COMPONENTE: DebugOrdersHook\r\n// Descripción: Componente para debuggear el hook useOrdersEnterprise\r\n// =====================================================\r\n\r\n'use client';\r\n\r\nimport { useOrdersEnterprise } from '@/hooks/admin/useOrdersEnterprise';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { RefreshCw, AlertTriangle, CheckCircle, XCircle } from 'lucide-react';\r\n\r\nexport function DebugOrdersHook() {\r\n  const hookData = useOrdersEnterprise();\r\n\r\n  const {\r\n    // Datos\r\n    orders,\r\n    stats,\r\n    \r\n    // Estados de carga\r\n    isLoading,\r\n    isLoadingOrders,\r\n    isLoadingStats,\r\n    \r\n    // Errores\r\n    error,\r\n    ordersError,\r\n    statsError,\r\n    \r\n    // Acciones\r\n    refetchOrders,\r\n    refetchStats,\r\n    \r\n    // Métricas derivadas\r\n    derivedMetrics\r\n  } = hookData;\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <AlertTriangle className=\"w-5 h-5 text-yellow-500\" />\r\n            Debug: useOrdersEnterprise Hook\r\n          </CardTitle>\r\n          <CardDescription>\r\n            Estado interno del hook para diagnóstico\r\n          </CardDescription>\r\n        </CardHeader>\r\n        \r\n        <CardContent className=\"space-y-4\">\r\n          {/* Estados de carga */}\r\n          <div>\r\n            <h4 className=\"font-medium mb-2\">Estados de Carga</h4>\r\n            <div className=\"flex gap-2 flex-wrap\">\r\n              <Badge variant={isLoading ? \"default\" : \"secondary\"}>\r\n                General: {isLoading ? 'Cargando' : 'Listo'}\r\n              </Badge>\r\n              <Badge variant={isLoadingOrders ? \"default\" : \"secondary\"}>\r\n                Órdenes: {isLoadingOrders ? 'Cargando' : 'Listo'}\r\n              </Badge>\r\n              <Badge variant={isLoadingStats ? \"default\" : \"secondary\"}>\r\n                Stats: {isLoadingStats ? 'Cargando' : 'Listo'}\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Errores */}\r\n          <div>\r\n            <h4 className=\"font-medium mb-2\">Errores</h4>\r\n            <div className=\"space-y-2\">\r\n              {error && (\r\n                <div className=\"flex items-center gap-2 text-red-600\">\r\n                  <XCircle className=\"w-4 h-4\" />\r\n                  <span className=\"text-sm\">Error general: {error.message}</span>\r\n                </div>\r\n              )}\r\n              {ordersError && (\r\n                <div className=\"flex items-center gap-2 text-red-600\">\r\n                  <XCircle className=\"w-4 h-4\" />\r\n                  <span className=\"text-sm\">Error órdenes: {ordersError.message}</span>\r\n                </div>\r\n              )}\r\n              {statsError && (\r\n                <div className=\"flex items-center gap-2 text-red-600\">\r\n                  <XCircle className=\"w-4 h-4\" />\r\n                  <span className=\"text-sm\">Error stats: {statsError.message}</span>\r\n                </div>\r\n              )}\r\n              {!error && !ordersError && !statsError && (\r\n                <div className=\"flex items-center gap-2 text-green-600\">\r\n                  <CheckCircle className=\"w-4 h-4\" />\r\n                  <span className=\"text-sm\">Sin errores</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Datos */}\r\n          <div>\r\n            <h4 className=\"font-medium mb-2\">Datos</h4>\r\n            <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n              <div>\r\n                <span className=\"font-medium\">Órdenes:</span> {orders?.length || 0}\r\n              </div>\r\n              <div>\r\n                <span className=\"font-medium\">Stats disponibles:</span> {stats ? 'Sí' : 'No'}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Stats detalladas */}\r\n          {stats && (\r\n            <div>\r\n              <h4 className=\"font-medium mb-2\">Estadísticas</h4>\r\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n                <div>\r\n                  <span className=\"font-medium\">Total:</span> {stats.totalOrders}\r\n                </div>\r\n                <div>\r\n                  <span className=\"font-medium\">Pendientes:</span> {stats.pendingOrders}\r\n                </div>\r\n                <div>\r\n                  <span className=\"font-medium\">Completadas:</span> {stats.completedOrders}\r\n                </div>\r\n                <div>\r\n                  <span className=\"font-medium\">Revenue:</span> ${stats.totalRevenue?.toLocaleString()}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Métricas derivadas */}\r\n          {derivedMetrics && (\r\n            <div>\r\n              <h4 className=\"font-medium mb-2\">Métricas Derivadas</h4>\r\n              <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n                <div>\r\n                  <span className=\"font-medium\">Tiene órdenes:</span> {derivedMetrics.hasOrders ? 'Sí' : 'No'}\r\n                </div>\r\n                <div>\r\n                  <span className=\"font-medium\">Puede crear:</span> {derivedMetrics.canCreateOrder ? 'Sí' : 'No'}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Acciones */}\r\n          <div>\r\n            <h4 className=\"font-medium mb-2\">Acciones</h4>\r\n            <div className=\"flex gap-2\">\r\n              <Button \r\n                variant=\"outline\" \r\n                size=\"sm\" \r\n                onClick={() => refetchOrders()}\r\n                disabled={isLoadingOrders}\r\n              >\r\n                <RefreshCw className={`w-4 h-4 mr-2 ${isLoadingOrders ? 'animate-spin' : ''}`} />\r\n                Refetch Órdenes\r\n              </Button>\r\n              <Button \r\n                variant=\"outline\" \r\n                size=\"sm\" \r\n                onClick={() => refetchStats()}\r\n                disabled={isLoadingStats}\r\n              >\r\n                <RefreshCw className={`w-4 h-4 mr-2 ${isLoadingStats ? 'animate-spin' : ''}`} />\r\n                Refetch Stats\r\n              </Button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Raw data para debugging */}\r\n          <details className=\"text-xs\">\r\n            <summary className=\"cursor-pointer text-blue-600 hover:text-blue-800 font-medium\">\r\n              Ver datos raw del hook\r\n            </summary>\r\n            <pre className=\"mt-2 p-4 bg-gray-100 rounded text-xs overflow-auto max-h-96\">\r\n              {JSON.stringify({\r\n                orders: orders?.slice(0, 2), // Solo primeras 2 órdenes\r\n                stats,\r\n                derivedMetrics,\r\n                isLoading,\r\n                isLoadingOrders,\r\n                isLoadingStats,\r\n                error: error?.message,\r\n                ordersError: ordersError?.message,\r\n                statsError: statsError?.message\r\n              }, null, 2)}\r\n            </pre>\r\n          </details>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}