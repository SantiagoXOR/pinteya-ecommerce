{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\error-boundary\\advanced-error-boundary.tsx"],"sourcesContent":["'use client';\r\n\r\n// ===================================\r\n// ADVANCED ERROR BOUNDARY SYSTEM\r\n// ===================================\r\n// Sistema avanzado de manejo de errores con recuperaci√≥n autom√°tica\r\n\r\nimport React, { Component, ReactNode, ErrorInfo } from 'react';\r\nimport { AlertTriangle, RefreshCw, Home, Bug, Mail } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\r\n\r\n// ===================================\r\n// INTERFACES Y TIPOS\r\n// ===================================\r\n\r\nexport interface ErrorBoundaryState {\r\n  hasError: boolean;\r\n  error: Error | null;\r\n  errorInfo: ErrorInfo | null;\r\n  errorId: string;\r\n  retryCount: number;\r\n  lastErrorTime: number;\r\n  errorType: 'component' | 'chunk' | 'network' | 'unknown';\r\n  recoveryStrategy: 'retry' | 'fallback' | 'redirect' | 'reload';\r\n}\r\n\r\nexport interface ErrorBoundaryProps {\r\n  children: ReactNode;\r\n  fallback?: ReactNode;\r\n  onError?: (error: Error, errorInfo: ErrorInfo, errorId: string) => void;\r\n  enableRetry?: boolean;\r\n  maxRetries?: number;\r\n  retryDelay?: number;\r\n  enableAutoRecovery?: boolean;\r\n  recoveryTimeout?: number;\r\n  level?: 'page' | 'section' | 'component';\r\n  context?: string;\r\n  enableReporting?: boolean;\r\n}\r\n\r\nexport interface ErrorReport {\r\n  errorId: string;\r\n  timestamp: number;\r\n  error: {\r\n    name: string;\r\n    message: string;\r\n    stack?: string;\r\n  };\r\n  errorInfo: {\r\n    componentStack: string;\r\n  };\r\n  context: {\r\n    level: string;\r\n    component: string;\r\n    url: string;\r\n    userAgent: string;\r\n    userId?: string;\r\n  };\r\n  recovery: {\r\n    strategy: string;\r\n    retryCount: number;\r\n    successful: boolean;\r\n  };\r\n  performance: {\r\n    timeToError: number;\r\n    memoryUsage?: number;\r\n  };\r\n}\r\n\r\n// ===================================\r\n// ERROR BOUNDARY PRINCIPAL\r\n// ===================================\r\n\r\nexport class AdvancedErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n  private retryTimeoutId: NodeJS.Timeout | null = null;\r\n  private recoveryTimeoutId: NodeJS.Timeout | null = null;\r\n  private startTime: number = Date.now();\r\n\r\n  constructor(props: ErrorBoundaryProps) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      hasError: false,\r\n      error: null,\r\n      errorInfo: null,\r\n      errorId: '',\r\n      retryCount: 0,\r\n      lastErrorTime: 0,\r\n      errorType: 'unknown',\r\n      recoveryStrategy: 'retry'\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error): Partial<ErrorBoundaryState> {\r\n    const errorId = `error_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n    const errorType = AdvancedErrorBoundary.classifyError(error);\r\n    const recoveryStrategy = AdvancedErrorBoundary.determineRecoveryStrategy(error, errorType);\r\n\r\n    return {\r\n      hasError: true,\r\n      error,\r\n      errorId,\r\n      errorType,\r\n      recoveryStrategy,\r\n      lastErrorTime: Date.now()\r\n    };\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    const { onError, enableReporting = true } = this.props;\r\n    \r\n    this.setState({ errorInfo });\r\n\r\n    // Reportar error\r\n    if (enableReporting) {\r\n      this.reportError(error, errorInfo);\r\n    }\r\n\r\n    // Callback personalizado\r\n    if (onError) {\r\n      onError(error, errorInfo, this.state.errorId);\r\n    }\r\n\r\n    // Intentar recuperaci√≥n autom√°tica\r\n    if (this.props.enableAutoRecovery) {\r\n      this.attemptAutoRecovery();\r\n    }\r\n\r\n    console.error('üö® Error Boundary caught an error:', error);\r\n    console.error('üìç Error Info:', errorInfo);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.retryTimeoutId) {\r\n      clearTimeout(this.retryTimeoutId);\r\n    }\r\n    if (this.recoveryTimeoutId) {\r\n      clearTimeout(this.recoveryTimeoutId);\r\n    }\r\n  }\r\n\r\n  // ===================================\r\n  // M√âTODOS DE CLASIFICACI√ìN\r\n  // ===================================\r\n\r\n  static classifyError(error: Error): ErrorBoundaryState['errorType'] {\r\n    const message = error.message.toLowerCase();\r\n    const stack = error.stack?.toLowerCase() || '';\r\n\r\n    // Error de chunk loading (lazy loading)\r\n    if (message.includes('loading chunk') || message.includes('loading css chunk')) {\r\n      return 'chunk';\r\n    }\r\n\r\n    // Error de red\r\n    if (message.includes('network') || message.includes('fetch') || message.includes('timeout')) {\r\n      return 'network';\r\n    }\r\n\r\n    // Error de componente\r\n    if (stack.includes('react') || message.includes('render') || message.includes('component')) {\r\n      return 'component';\r\n    }\r\n\r\n    return 'unknown';\r\n  }\r\n\r\n  static determineRecoveryStrategy(\r\n    error: Error, \r\n    errorType: ErrorBoundaryState['errorType']\r\n  ): ErrorBoundaryState['recoveryStrategy'] {\r\n    switch (errorType) {\r\n      case 'chunk':\r\n        return 'reload'; // Recargar para obtener chunks actualizados\r\n      case 'network':\r\n        return 'retry'; // Reintentar operaci√≥n de red\r\n      case 'component':\r\n        return 'fallback'; // Mostrar UI de fallback\r\n      default:\r\n        return 'retry';\r\n    }\r\n  }\r\n\r\n  // ===================================\r\n  // M√âTODOS DE RECUPERACI√ìN\r\n  // ===================================\r\n\r\n  attemptAutoRecovery = () => {\r\n    const { recoveryTimeout = 5000 } = this.props;\r\n    const { recoveryStrategy } = this.state;\r\n\r\n    this.recoveryTimeoutId = setTimeout(() => {\r\n      switch (recoveryStrategy) {\r\n        case 'retry':\r\n          this.handleRetry();\r\n          break;\r\n        case 'reload':\r\n          window.location.reload();\r\n          break;\r\n        case 'redirect':\r\n          window.location.href = '/';\r\n          break;\r\n        default:\r\n          // Fallback ya se maneja en render\r\n          break;\r\n      }\r\n    }, recoveryTimeout);\r\n  };\r\n\r\n  handleRetry = () => {\r\n    const { maxRetries = 3, retryDelay = 1000 } = this.props;\r\n    const { retryCount } = this.state;\r\n\r\n    if (retryCount >= maxRetries) {\r\n      console.warn('üîÑ Max retries reached, showing fallback UI');\r\n      return;\r\n    }\r\n\r\n    this.retryTimeoutId = setTimeout(() => {\r\n      this.setState(prevState => ({\r\n        hasError: false,\r\n        error: null,\r\n        errorInfo: null,\r\n        retryCount: prevState.retryCount + 1\r\n      }));\r\n    }, retryDelay * (retryCount + 1)); // Backoff exponencial\r\n  };\r\n\r\n  handleManualRetry = () => {\r\n    this.setState({\r\n      hasError: false,\r\n      error: null,\r\n      errorInfo: null,\r\n      retryCount: 0\r\n    });\r\n  };\r\n\r\n  handleReload = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  handleGoHome = () => {\r\n    window.location.href = '/';\r\n  };\r\n\r\n  // ===================================\r\n  // REPORTE DE ERRORES\r\n  // ===================================\r\n\r\n  reportError = async (error: Error, errorInfo: ErrorInfo) => {\r\n    try {\r\n      const report: ErrorReport = {\r\n        errorId: this.state.errorId,\r\n        timestamp: Date.now(),\r\n        error: {\r\n          name: error.name,\r\n          message: error.message,\r\n          stack: error.stack\r\n        },\r\n        errorInfo: {\r\n          componentStack: errorInfo.componentStack\r\n        },\r\n        context: {\r\n          level: this.props.level || 'component',\r\n          component: this.props.context || 'unknown',\r\n          url: window.location.href,\r\n          userAgent: navigator.userAgent,\r\n          userId: this.getUserId()\r\n        },\r\n        recovery: {\r\n          strategy: this.state.recoveryStrategy,\r\n          retryCount: this.state.retryCount,\r\n          successful: false\r\n        },\r\n        performance: {\r\n          timeToError: Date.now() - this.startTime,\r\n          memoryUsage: this.getMemoryUsage()\r\n        }\r\n      };\r\n\r\n      // Enviar reporte al sistema de monitoreo\r\n      await this.sendErrorReport(report);\r\n\r\n    } catch (reportError) {\r\n      console.error('‚ùå Failed to report error:', reportError);\r\n    }\r\n  };\r\n\r\n  private getUserId(): string | undefined {\r\n    // Intentar obtener ID de usuario de diferentes fuentes\r\n    try {\r\n      // Clerk\r\n      const clerkUser = (window as any).__clerk_user;\r\n      if (clerkUser?.id) {return clerkUser.id;}\r\n\r\n      // LocalStorage\r\n      const storedUser = localStorage.getItem('user');\r\n      if (storedUser) {\r\n        const user = JSON.parse(storedUser);\r\n        return user.id;\r\n      }\r\n\r\n      return undefined;\r\n    } catch {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  private getMemoryUsage(): number | undefined {\r\n    try {\r\n      if ('memory' in performance) {\r\n        return (performance as any).memory.usedJSHeapSize;\r\n      }\r\n      return undefined;\r\n    } catch {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  private async sendErrorReport(report: ErrorReport): Promise<void> {\r\n    try {\r\n      await fetch('/api/monitoring/errors', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(report)\r\n      });\r\n    } catch (error) {\r\n      console.error('‚ùå Failed to send error report:', error);\r\n    }\r\n  }\r\n\r\n  // ===================================\r\n  // RENDER\r\n  // ===================================\r\n\r\n  render() {\r\n    const { hasError, error, errorType, recoveryStrategy, retryCount } = this.state;\r\n    const { children, fallback, enableRetry = true, maxRetries = 3, level = 'component' } = this.props;\r\n\r\n    if (hasError && error) {\r\n      // Si hay un fallback personalizado, usarlo\r\n      if (fallback) {\r\n        return fallback;\r\n      }\r\n\r\n      // Renderizar UI de error apropiada seg√∫n el nivel\r\n      return this.renderErrorUI(error, errorType, recoveryStrategy, retryCount, maxRetries, enableRetry, level);\r\n    }\r\n\r\n    return children;\r\n  }\r\n\r\n  private renderErrorUI(\r\n    error: Error,\r\n    errorType: ErrorBoundaryState['errorType'],\r\n    recoveryStrategy: ErrorBoundaryState['recoveryStrategy'],\r\n    retryCount: number,\r\n    maxRetries: number,\r\n    enableRetry: boolean,\r\n    level: string\r\n  ) {\r\n    const isPageLevel = level === 'page';\r\n    const canRetry = enableRetry && retryCount < maxRetries;\r\n\r\n    if (isPageLevel) {\r\n      return this.renderPageErrorUI(error, errorType, canRetry);\r\n    } else {\r\n      return this.renderComponentErrorUI(error, errorType, canRetry);\r\n    }\r\n  }\r\n\r\n  private renderPageErrorUI(error: Error, errorType: ErrorBoundaryState['errorType'], canRetry: boolean) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 px-4\">\r\n        <Card className=\"w-full max-w-md\">\r\n          <CardHeader className=\"text-center\">\r\n            <div className=\"mx-auto w-12 h-12 bg-red-100 rounded-full flex items-center justify-center mb-4\">\r\n              <AlertTriangle className=\"w-6 h-6 text-red-600\" />\r\n            </div>\r\n            <CardTitle className=\"text-xl\">¬°Oops! Algo sali√≥ mal</CardTitle>\r\n            <CardDescription>\r\n              {this.getErrorMessage(errorType)}\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-4\">\r\n            <Alert>\r\n              <Bug className=\"h-4 w-4\" />\r\n              <AlertTitle>Detalles del Error</AlertTitle>\r\n              <AlertDescription className=\"text-sm\">\r\n                ID: {this.state.errorId}<br />\r\n                Tipo: {errorType}<br />\r\n                {process.env.NODE_ENV === 'development' && (\r\n                  <>Mensaje: {error.message}</>\r\n                )}\r\n              </AlertDescription>\r\n            </Alert>\r\n\r\n            <div className=\"flex flex-col gap-2\">\r\n              {canRetry && (\r\n                <Button onClick={this.handleManualRetry} className=\"w-full\">\r\n                  <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n                  Intentar de nuevo\r\n                </Button>\r\n              )}\r\n              <Button variant=\"outline\" onClick={this.handleGoHome} className=\"w-full\">\r\n                <Home className=\"w-4 h-4 mr-2\" />\r\n                Ir al inicio\r\n              </Button>\r\n              <Button variant=\"outline\" onClick={this.handleReload} className=\"w-full\">\r\n                <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n                Recargar p√°gina\r\n              </Button>\r\n            </div>\r\n\r\n            <div className=\"text-center\">\r\n              <Button variant=\"link\" size=\"sm\" onClick={() => this.reportIssue()}>\r\n                <Mail className=\"w-4 h-4 mr-2\" />\r\n                Reportar problema\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderComponentErrorUI(error: Error, errorType: ErrorBoundaryState['errorType'], canRetry: boolean) {\r\n    return (\r\n      <div className=\"p-4 border border-red-200 rounded-lg bg-red-50\">\r\n        <div className=\"flex items-center gap-2 mb-2\">\r\n          <AlertTriangle className=\"w-4 h-4 text-red-600\" />\r\n          <span className=\"text-sm font-medium text-red-800\">Error en componente</span>\r\n        </div>\r\n        <p className=\"text-sm text-red-700 mb-3\">\r\n          {this.getErrorMessage(errorType)}\r\n        </p>\r\n        {canRetry && (\r\n          <Button size=\"sm\" variant=\"outline\" onClick={this.handleManualRetry}>\r\n            <RefreshCw className=\"w-3 h-3 mr-1\" />\r\n            Reintentar\r\n          </Button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private getErrorMessage(errorType: ErrorBoundaryState['errorType']): string {\r\n    switch (errorType) {\r\n      case 'chunk':\r\n        return 'Error cargando recursos. La p√°gina se recargar√° autom√°ticamente.';\r\n      case 'network':\r\n        return 'Error de conexi√≥n. Verifica tu conexi√≥n a internet.';\r\n      case 'component':\r\n        return 'Error en el componente. Intentando recuperaci√≥n autom√°tica.';\r\n      default:\r\n        return 'Ha ocurrido un error inesperado. Estamos trabajando para solucionarlo.';\r\n    }\r\n  }\r\n\r\n  private reportIssue = () => {\r\n    const subject = `Error Report - ${this.state.errorId}`;\r\n    const body = `Error ID: ${this.state.errorId}\\nTipo: ${this.state.errorType}\\nURL: ${window.location.href}\\nFecha: ${new Date().toISOString()}`;\r\n    const mailtoUrl = `mailto:soporte@pinteya.com?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;\r\n    window.open(mailtoUrl);\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["AdvancedErrorBoundary","Component","props","retryTimeoutId","recoveryTimeoutId","startTime","Date","now","attemptAutoRecovery","recoveryTimeout","recoveryStrategy","state","setTimeout","handleRetry","window","location","reload","href","maxRetries","retryDelay","retryCount","console","warn","setState","prevState","hasError","error","errorInfo","handleManualRetry","handleReload","handleGoHome","reportError","report","errorId","timestamp","name","message","stack","componentStack","context","level","component","url","userAgent","navigator","userId","getUserId","recovery","strategy","successful","performance","timeToError","memoryUsage","getMemoryUsage","sendErrorReport","reportIssue","subject","body","errorType","toISOString","mailtoUrl","encodeURIComponent","open","lastErrorTime","getDerivedStateFromError","Math","random","toString","substr","classifyError","determineRecoveryStrategy","componentDidCatch","onError","enableReporting","enableAutoRecovery","componentWillUnmount","clearTimeout","toLowerCase","includes","clerkUser","__clerk_user","id","storedUser","localStorage","getItem","user","JSON","parse","undefined","memory","usedJSHeapSize","fetch","method","headers","stringify","render","children","fallback","enableRetry","renderErrorUI","isPageLevel","canRetry","renderPageErrorUI","renderComponentErrorUI","div","className","Card","CardHeader","AlertTriangle","CardTitle","CardDescription","getErrorMessage","CardContent","Alert","Bug","AlertTitle","AlertDescription","br","process","env","NODE_ENV","Button","onClick","RefreshCw","variant","Home","size","Mail","span","p"],"mappings":"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"}