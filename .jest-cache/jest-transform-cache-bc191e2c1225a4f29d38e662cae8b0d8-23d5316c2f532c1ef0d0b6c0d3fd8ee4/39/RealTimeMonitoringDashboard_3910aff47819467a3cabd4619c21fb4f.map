{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\monitoring\\RealTimeMonitoringDashboard.tsx"],"sourcesContent":["'use client';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - REAL-TIME MONITORING DASHBOARD\r\n// ===================================\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\r\nimport { \r\n  Activity, \r\n  AlertTriangle, \r\n  CheckCircle, \r\n  Clock, \r\n  DollarSign, \r\n  Shield, \r\n  TrendingUp, \r\n  Users,\r\n  RefreshCw,\r\n  Pause,\r\n  Play\r\n} from 'lucide-react';\r\n\r\n// Tipos para el dashboard\r\ninterface DashboardMetrics {\r\n  performance: {\r\n    responseTime: number;\r\n    errorRate: number;\r\n    throughput: number;\r\n    uptime: number;\r\n  };\r\n  business: {\r\n    totalRevenue: number;\r\n    ordersToday: number;\r\n    conversionRate: number;\r\n    activeUsers: number;\r\n  };\r\n  security: {\r\n    securityEvents: number;\r\n    blockedRequests: number;\r\n    authFailures: number;\r\n    riskLevel: 'low' | 'medium' | 'high' | 'critical';\r\n  };\r\n  infrastructure: {\r\n    circuitBreakerStatus: 'closed' | 'open' | 'half-open';\r\n    cacheHitRate: number;\r\n    databaseConnections: number;\r\n    memoryUsage: number;\r\n  };\r\n}\r\n\r\ninterface ActiveAlert {\r\n  id: string;\r\n  level: 'info' | 'warning' | 'critical' | 'emergency';\r\n  message: string;\r\n  timestamp: string;\r\n  metric: string;\r\n  value: number;\r\n  threshold: number;\r\n}\r\n\r\ninterface MetricTrend {\r\n  timestamp: string;\r\n  value: number;\r\n}\r\n\r\n/**\r\n * Dashboard de Monitoreo en Tiempo Real Enterprise\r\n */\r\nexport default function RealTimeMonitoringDashboard() {\r\n  const [metrics, setMetrics] = useState<DashboardMetrics | null>(null);\r\n  const [alerts, setAlerts] = useState<ActiveAlert[]>([]);\r\n  const [trends, setTrends] = useState<Record<string, MetricTrend[]>>({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n  const [lastUpdate, setLastUpdate] = useState<Date | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Configuración de auto-refresh\r\n  const REFRESH_INTERVAL = 5000; // 5 segundos\r\n\r\n  /**\r\n   * Obtiene métricas del servidor\r\n   */\r\n  const fetchMetrics = useCallback(async () => {\r\n    if (isPaused) {return;}\r\n\r\n    try {\r\n      setError(null);\r\n      \r\n      const response = await fetch('/api/admin/monitoring/metrics', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        setMetrics(data.data.metrics);\r\n        setAlerts(data.data.alerts || []);\r\n        setTrends(prev => ({\r\n          ...prev,\r\n          ...data.data.trends\r\n        }));\r\n        setLastUpdate(new Date());\r\n      } else {\r\n        throw new Error(data.error || 'Failed to fetch metrics');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching metrics:', err);\r\n      setError(err instanceof Error ? err.message : 'Unknown error');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [isPaused]);\r\n\r\n  /**\r\n   * Efecto para auto-refresh\r\n   */\r\n  useEffect(() => {\r\n    fetchMetrics(); // Carga inicial\r\n\r\n    const interval = setInterval(fetchMetrics, REFRESH_INTERVAL);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [fetchMetrics]);\r\n\r\n  /**\r\n   * Maneja pausa/reanudación del auto-refresh\r\n   */\r\n  const togglePause = () => {\r\n    setIsPaused(!isPaused);\r\n  };\r\n\r\n  /**\r\n   * Refresh manual\r\n   */\r\n  const handleManualRefresh = () => {\r\n    setIsLoading(true);\r\n    fetchMetrics();\r\n  };\r\n\r\n  /**\r\n   * Obtiene color del badge según el nivel de alerta\r\n   */\r\n  const getAlertColor = (level: string) => {\r\n    switch (level) {\r\n      case 'emergency': return 'destructive';\r\n      case 'critical': return 'destructive';\r\n      case 'warning': return 'secondary';\r\n      case 'info': return 'default';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Obtiene color del indicador de estado\r\n   */\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'closed': return 'text-green-500';\r\n      case 'open': return 'text-red-500';\r\n      case 'half-open': return 'text-yellow-500';\r\n      default: return 'text-gray-500';\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Formatea números para display\r\n   */\r\n  const formatNumber = (num: number, decimals: number = 0) => {\r\n    return new Intl.NumberFormat('es-AR', {\r\n      minimumFractionDigits: decimals,\r\n      maximumFractionDigits: decimals\r\n    }).format(num);\r\n  };\r\n\r\n  /**\r\n   * Formatea moneda\r\n   */\r\n  const formatCurrency = (amount: number) => {\r\n    return new Intl.NumberFormat('es-AR', {\r\n      style: 'currency',\r\n      currency: 'ARS'\r\n    }).format(amount);\r\n  };\r\n\r\n  if (isLoading && !metrics) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-64\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <RefreshCw className=\"h-4 w-4 animate-spin\" />\r\n          <span>Cargando métricas...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header con controles */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold tracking-tight\">Dashboard de Monitoreo</h1>\r\n          <p className=\"text-muted-foreground\">\r\n            Métricas en tiempo real del sistema Pinteya E-commerce\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center space-x-2\">\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={togglePause}\r\n            className=\"flex items-center space-x-1\"\r\n          >\r\n            {isPaused ? <Play className=\"h-4 w-4\" /> : <Pause className=\"h-4 w-4\" />}\r\n            <span>{isPaused ? 'Reanudar' : 'Pausar'}</span>\r\n          </Button>\r\n          \r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={handleManualRefresh}\r\n            disabled={isLoading}\r\n            className=\"flex items-center space-x-1\"\r\n          >\r\n            <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\r\n            <span>Actualizar</span>\r\n          </Button>\r\n          \r\n          {lastUpdate && (\r\n            <div className=\"text-sm text-muted-foreground\">\r\n              Última actualización: {lastUpdate.toLocaleTimeString('es-AR')}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Error Alert */}\r\n      {error && (\r\n        <Alert variant=\"destructive\">\r\n          <AlertTriangle className=\"h-4 w-4\" />\r\n          <AlertTitle>Error de Conexión</AlertTitle>\r\n          <AlertDescription>{error instanceof Error ? error.message : error?.toString() || 'Error desconocido'}</AlertDescription>\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Alertas Activas */}\r\n      {alerts.length > 0 && (\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center space-x-2\">\r\n              <AlertTriangle className=\"h-5 w-5 text-red-500\" />\r\n              <span>Alertas Activas ({alerts.length})</span>\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"space-y-2\">\r\n              {alerts.slice(0, 5).map((alert) => (\r\n                <div\r\n                  key={alert.id}\r\n                  className=\"flex items-center justify-between p-3 border rounded-lg\"\r\n                >\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <Badge variant={getAlertColor(alert.level)}>\r\n                      {alert.level.toUpperCase()}\r\n                    </Badge>\r\n                    <div>\r\n                      <p className=\"font-medium\">{alert.message}</p>\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        {alert.metric}: {formatNumber(alert.value, 2)} / {formatNumber(alert.threshold, 2)}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"text-sm text-muted-foreground\">\r\n                    {new Date(alert.timestamp).toLocaleTimeString('es-AR')}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Métricas Principales */}\r\n      {metrics && (\r\n        <>\r\n          {/* Performance Metrics */}\r\n          <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Tiempo de Respuesta</CardTitle>\r\n                <Clock className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">{formatNumber(metrics.performance.responseTime)}ms</div>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  Promedio últimos 5 minutos\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Tasa de Error</CardTitle>\r\n                <AlertTriangle className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">\r\n                  {formatNumber(metrics.performance.errorRate * 100, 2)}%\r\n                </div>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  Errores por solicitud\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Throughput</CardTitle>\r\n                <Activity className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">{formatNumber(metrics.performance.throughput)}</div>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  Requests por minuto\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Uptime</CardTitle>\r\n                <CheckCircle className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">\r\n                  {formatNumber(metrics.performance.uptime * 100, 2)}%\r\n                </div>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  Disponibilidad del sistema\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Business Metrics */}\r\n          <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Ingresos Hoy</CardTitle>\r\n                <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">\r\n                  {formatCurrency(metrics.business.totalRevenue)}\r\n                </div>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  Ventas del día actual\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Órdenes Hoy</CardTitle>\r\n                <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">{formatNumber(metrics.business.ordersToday)}</div>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  Pedidos completados\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Conversión</CardTitle>\r\n                <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">\r\n                  {formatNumber(metrics.business.conversionRate * 100, 1)}%\r\n                </div>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  Tasa de conversión\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Usuarios Activos</CardTitle>\r\n                <Users className=\"h-4 w-4 text-muted-foreground\" />\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"text-2xl font-bold\">{formatNumber(metrics.business.activeUsers)}</div>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  Últimos 15 minutos\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Security & Infrastructure */}\r\n          <div className=\"grid gap-4 md:grid-cols-2\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center space-x-2\">\r\n                  <Shield className=\"h-5 w-5\" />\r\n                  <span>Seguridad</span>\r\n                </CardTitle>\r\n                <CardDescription>Estado de seguridad del sistema</CardDescription>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span>Nivel de Riesgo</span>\r\n                  <Badge variant={\r\n                    metrics.security.riskLevel === 'low' ? 'default' :\r\n                    metrics.security.riskLevel === 'medium' ? 'secondary' :\r\n                    metrics.security.riskLevel === 'high' ? 'destructive' : 'destructive'\r\n                  }>\r\n                    {metrics.security.riskLevel.toUpperCase()}\r\n                  </Badge>\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span>Eventos de Seguridad</span>\r\n                  <span className=\"font-bold\">{formatNumber(metrics.security.securityEvents)}</span>\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span>Requests Bloqueados</span>\r\n                  <span className=\"font-bold\">{formatNumber(metrics.security.blockedRequests)}</span>\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span>Fallos de Auth</span>\r\n                  <span className=\"font-bold\">{formatNumber(metrics.security.authFailures)}</span>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center space-x-2\">\r\n                  <Activity className=\"h-5 w-5\" />\r\n                  <span>Infraestructura</span>\r\n                </CardTitle>\r\n                <CardDescription>Estado de los servicios</CardDescription>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span>Circuit Breaker</span>\r\n                  <span className={`font-bold ${getStatusColor(metrics.infrastructure.circuitBreakerStatus)}`}>\r\n                    {metrics.infrastructure.circuitBreakerStatus.toUpperCase()}\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span>Cache Hit Rate</span>\r\n                  <span className=\"font-bold\">\r\n                    {formatNumber(metrics.infrastructure.cacheHitRate * 100, 1)}%\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span>DB Connections</span>\r\n                  <span className=\"font-bold\">{formatNumber(metrics.infrastructure.databaseConnections)}</span>\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span>Memory Usage</span>\r\n                  <span className=\"font-bold\">\r\n                    {formatNumber(metrics.infrastructure.memoryUsage * 100, 1)}%\r\n                  </span>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["RealTimeMonitoringDashboard","metrics","setMetrics","useState","alerts","setAlerts","trends","setTrends","isLoading","setIsLoading","isPaused","setIsPaused","lastUpdate","setLastUpdate","error","setError","REFRESH_INTERVAL","fetchMetrics","useCallback","response","fetch","method","headers","ok","Error","status","statusText","data","json","success","prev","Date","err","console","message","useEffect","interval","setInterval","clearInterval","togglePause","handleManualRefresh","getAlertColor","level","getStatusColor","formatNumber","num","decimals","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","formatCurrency","amount","style","currency","div","className","RefreshCw","span","h1","p","Button","variant","size","onClick","Play","Pause","disabled","toLocaleTimeString","Alert","AlertTriangle","AlertTitle","AlertDescription","toString","length","Card","CardHeader","CardTitle","CardContent","slice","map","alert","Badge","toUpperCase","metric","value","threshold","timestamp","id","Clock","performance","responseTime","errorRate","Activity","throughput","CheckCircle","uptime","DollarSign","business","totalRevenue","TrendingUp","ordersToday","conversionRate","Users","activeUsers","Shield","CardDescription","security","riskLevel","securityEvents","blockedRequests","authFailures","infrastructure","circuitBreakerStatus","cacheHitRate","databaseConnections","memoryUsage"],"mappings":"AAAA;;;;;+BAoEA;;CAEC,GACD;;;eAAwBA;;;;+DAjEgC;sBACkB;uBACpD;wBACC;uBAC6B;6BAa7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDQ,SAASA;IACtB,MAAM,CAACC,SAASC,WAAW,GAAGC,IAAAA,eAAQ,EAA0B;IAChE,MAAM,CAACC,QAAQC,UAAU,GAAGF,IAAAA,eAAQ,EAAgB,EAAE;IACtD,MAAM,CAACG,QAAQC,UAAU,GAAGJ,IAAAA,eAAQ,EAAgC,CAAC;IACrE,MAAM,CAACK,WAAWC,aAAa,GAAGN,IAAAA,eAAQ,EAAC;IAC3C,MAAM,CAACO,UAAUC,YAAY,GAAGR,IAAAA,eAAQ,EAAC;IACzC,MAAM,CAACS,YAAYC,cAAc,GAAGV,IAAAA,eAAQ,EAAc;IAC1D,MAAM,CAACW,OAAOC,SAAS,GAAGZ,IAAAA,eAAQ,EAAgB;IAElD,gCAAgC;IAChC,MAAMa,mBAAmB,MAAM,aAAa;IAE5C;;GAEC,GACD,MAAMC,eAAeC,IAAAA,kBAAW,EAAC;QAC/B,IAAIR,UAAU;YAAC;QAAO;QAEtB,IAAI;YACFK,SAAS;YAET,MAAMI,WAAW,MAAMC,MAAM,iCAAiC;gBAC5DC,QAAQ;gBACRC,SAAS;oBACP,gBAAgB;gBAClB;YACF;YAEA,IAAI,CAACH,SAASI,EAAE,EAAE;gBAChB,MAAM,IAAIC,MAAM,CAAC,KAAK,EAAEL,SAASM,MAAM,CAAC,EAAE,EAAEN,SAASO,UAAU,EAAE;YACnE;YAEA,MAAMC,OAAO,MAAMR,SAASS,IAAI;YAEhC,IAAID,KAAKE,OAAO,EAAE;gBAChB3B,WAAWyB,KAAKA,IAAI,CAAC1B,OAAO;gBAC5BI,UAAUsB,KAAKA,IAAI,CAACvB,MAAM,IAAI,EAAE;gBAChCG,UAAUuB,CAAAA,OAAS,CAAA;wBACjB,GAAGA,IAAI;wBACP,GAAGH,KAAKA,IAAI,CAACrB,MAAM;oBACrB,CAAA;gBACAO,cAAc,IAAIkB;YACpB,OAAO;gBACL,MAAM,IAAIP,MAAMG,KAAKb,KAAK,IAAI;YAChC;QACF,EAAE,OAAOkB,KAAK;YACZC,QAAQnB,KAAK,CAAC,2BAA2BkB;YACzCjB,SAASiB,eAAeR,QAAQQ,IAAIE,OAAO,GAAG;QAChD,SAAU;YACRzB,aAAa;QACf;IACF,GAAG;QAACC;KAAS;IAEb;;GAEC,GACDyB,IAAAA,gBAAS,EAAC;QACRlB,gBAAgB,gBAAgB;QAEhC,MAAMmB,WAAWC,YAAYpB,cAAcD;QAE3C,OAAO,IAAMsB,cAAcF;IAC7B,GAAG;QAACnB;KAAa;IAEjB;;GAEC,GACD,MAAMsB,cAAc;QAClB5B,YAAY,CAACD;IACf;IAEA;;GAEC,GACD,MAAM8B,sBAAsB;QAC1B/B,aAAa;QACbQ;IACF;IAEA;;GAEC,GACD,MAAMwB,gBAAgB,CAACC;QACrB,OAAQA;YACN,KAAK;gBAAa,OAAO;YACzB,KAAK;gBAAY,OAAO;YACxB,KAAK;gBAAW,OAAO;YACvB,KAAK;gBAAQ,OAAO;YACpB;gBAAS,OAAO;QAClB;IACF;IAEA;;GAEC,GACD,MAAMC,iBAAiB,CAAClB;QACtB,OAAQA;YACN,KAAK;gBAAU,OAAO;YACtB,KAAK;gBAAQ,OAAO;YACpB,KAAK;gBAAa,OAAO;YACzB;gBAAS,OAAO;QAClB;IACF;IAEA;;GAEC,GACD,MAAMmB,eAAe,CAACC,KAAaC,WAAmB,CAAC;QACrD,OAAO,IAAIC,KAAKC,YAAY,CAAC,SAAS;YACpCC,uBAAuBH;YACvBI,uBAAuBJ;QACzB,GAAGK,MAAM,CAACN;IACZ;IAEA;;GAEC,GACD,MAAMO,iBAAiB,CAACC;QACtB,OAAO,IAAIN,KAAKC,YAAY,CAAC,SAAS;YACpCM,OAAO;YACPC,UAAU;QACZ,GAAGJ,MAAM,CAACE;IACZ;IAEA,IAAI7C,aAAa,CAACP,SAAS;QACzB,qBACE,qBAACuD;YAAIC,WAAU;sBACb,cAAA,sBAACD;gBAAIC,WAAU;;kCACb,qBAACC,sBAAS;wBAACD,WAAU;;kCACrB,qBAACE;kCAAK;;;;;IAId;IAEA,qBACE,sBAACH;QAAIC,WAAU;;0BAEb,sBAACD;gBAAIC,WAAU;;kCACb,sBAACD;;0CACC,qBAACI;gCAAGH,WAAU;0CAAoC;;0CAClD,qBAACI;gCAAEJ,WAAU;0CAAwB;;;;kCAKvC,sBAACD;wBAAIC,WAAU;;0CACb,sBAACK,cAAM;gCACLC,SAAQ;gCACRC,MAAK;gCACLC,SAAS1B;gCACTkB,WAAU;;oCAET/C,yBAAW,qBAACwD,iBAAI;wCAACT,WAAU;uDAAe,qBAACU,kBAAK;wCAACV,WAAU;;kDAC5D,qBAACE;kDAAMjD,WAAW,aAAa;;;;0CAGjC,sBAACoD,cAAM;gCACLC,SAAQ;gCACRC,MAAK;gCACLC,SAASzB;gCACT4B,UAAU5D;gCACViD,WAAU;;kDAEV,qBAACC,sBAAS;wCAACD,WAAW,CAAC,QAAQ,EAAEjD,YAAY,iBAAiB,IAAI;;kDAClE,qBAACmD;kDAAK;;;;4BAGP/C,4BACC,sBAAC4C;gCAAIC,WAAU;;oCAAgC;oCACtB7C,WAAWyD,kBAAkB,CAAC;;;;;;;YAO5DvD,uBACC,sBAACwD,YAAK;gBAACP,SAAQ;;kCACb,qBAACQ,0BAAa;wBAACd,WAAU;;kCACzB,qBAACe,iBAAU;kCAAC;;kCACZ,qBAACC,uBAAgB;kCAAE3D,iBAAiBU,QAAQV,MAAMoB,OAAO,GAAGpB,OAAO4D,cAAc;;;;YAKpFtE,OAAOuE,MAAM,GAAG,mBACf,sBAACC,UAAI;;kCACH,qBAACC,gBAAU;kCACT,cAAA,sBAACC,eAAS;4BAACrB,WAAU;;8CACnB,qBAACc,0BAAa;oCAACd,WAAU;;8CACzB,sBAACE;;wCAAK;wCAAkBvD,OAAOuE,MAAM;wCAAC;;;;;;kCAG1C,qBAACI,iBAAW;kCACV,cAAA,qBAACvB;4BAAIC,WAAU;sCACZrD,OAAO4E,KAAK,CAAC,GAAG,GAAGC,GAAG,CAAC,CAACC,sBACvB,sBAAC1B;oCAECC,WAAU;;sDAEV,sBAACD;4CAAIC,WAAU;;8DACb,qBAAC0B,YAAK;oDAACpB,SAAStB,cAAcyC,MAAMxC,KAAK;8DACtCwC,MAAMxC,KAAK,CAAC0C,WAAW;;8DAE1B,sBAAC5B;;sEACC,qBAACK;4DAAEJ,WAAU;sEAAeyB,MAAMhD,OAAO;;sEACzC,sBAAC2B;4DAAEJ,WAAU;;gEACVyB,MAAMG,MAAM;gEAAC;gEAAGzC,aAAasC,MAAMI,KAAK,EAAE;gEAAG;gEAAI1C,aAAasC,MAAMK,SAAS,EAAE;;;;;;;sDAItF,qBAAC/B;4CAAIC,WAAU;sDACZ,IAAI1B,KAAKmD,MAAMM,SAAS,EAAEnB,kBAAkB,CAAC;;;mCAf3Ca,MAAMO,EAAE;;;;;YAyBxBxF,yBACC;;kCAEE,sBAACuD;wBAAIC,WAAU;;0CACb,sBAACmB,UAAI;;kDACH,sBAACC,gBAAU;wCAACpB,WAAU;;0DACpB,qBAACqB,eAAS;gDAACrB,WAAU;0DAAsB;;0DAC3C,qBAACiC,kBAAK;gDAACjC,WAAU;;;;kDAEnB,sBAACsB,iBAAW;;0DACV,sBAACvB;gDAAIC,WAAU;;oDAAsBb,aAAa3C,QAAQ0F,WAAW,CAACC,YAAY;oDAAE;;;0DACpF,qBAAC/B;gDAAEJ,WAAU;0DAAgC;;;;;;0CAMjD,sBAACmB,UAAI;;kDACH,sBAACC,gBAAU;wCAACpB,WAAU;;0DACpB,qBAACqB,eAAS;gDAACrB,WAAU;0DAAsB;;0DAC3C,qBAACc,0BAAa;gDAACd,WAAU;;;;kDAE3B,sBAACsB,iBAAW;;0DACV,sBAACvB;gDAAIC,WAAU;;oDACZb,aAAa3C,QAAQ0F,WAAW,CAACE,SAAS,GAAG,KAAK;oDAAG;;;0DAExD,qBAAChC;gDAAEJ,WAAU;0DAAgC;;;;;;0CAMjD,sBAACmB,UAAI;;kDACH,sBAACC,gBAAU;wCAACpB,WAAU;;0DACpB,qBAACqB,eAAS;gDAACrB,WAAU;0DAAsB;;0DAC3C,qBAACqC,qBAAQ;gDAACrC,WAAU;;;;kDAEtB,sBAACsB,iBAAW;;0DACV,qBAACvB;gDAAIC,WAAU;0DAAsBb,aAAa3C,QAAQ0F,WAAW,CAACI,UAAU;;0DAChF,qBAAClC;gDAAEJ,WAAU;0DAAgC;;;;;;0CAMjD,sBAACmB,UAAI;;kDACH,sBAACC,gBAAU;wCAACpB,WAAU;;0DACpB,qBAACqB,eAAS;gDAACrB,WAAU;0DAAsB;;0DAC3C,qBAACuC,wBAAW;gDAACvC,WAAU;;;;kDAEzB,sBAACsB,iBAAW;;0DACV,sBAACvB;gDAAIC,WAAU;;oDACZb,aAAa3C,QAAQ0F,WAAW,CAACM,MAAM,GAAG,KAAK;oDAAG;;;0DAErD,qBAACpC;gDAAEJ,WAAU;0DAAgC;;;;;;;;kCAQnD,sBAACD;wBAAIC,WAAU;;0CACb,sBAACmB,UAAI;;kDACH,sBAACC,gBAAU;wCAACpB,WAAU;;0DACpB,qBAACqB,eAAS;gDAACrB,WAAU;0DAAsB;;0DAC3C,qBAACyC,uBAAU;gDAACzC,WAAU;;;;kDAExB,sBAACsB,iBAAW;;0DACV,qBAACvB;gDAAIC,WAAU;0DACZL,eAAenD,QAAQkG,QAAQ,CAACC,YAAY;;0DAE/C,qBAACvC;gDAAEJ,WAAU;0DAAgC;;;;;;0CAMjD,sBAACmB,UAAI;;kDACH,sBAACC,gBAAU;wCAACpB,WAAU;;0DACpB,qBAACqB,eAAS;gDAACrB,WAAU;0DAAsB;;0DAC3C,qBAAC4C,uBAAU;gDAAC5C,WAAU;;;;kDAExB,sBAACsB,iBAAW;;0DACV,qBAACvB;gDAAIC,WAAU;0DAAsBb,aAAa3C,QAAQkG,QAAQ,CAACG,WAAW;;0DAC9E,qBAACzC;gDAAEJ,WAAU;0DAAgC;;;;;;0CAMjD,sBAACmB,UAAI;;kDACH,sBAACC,gBAAU;wCAACpB,WAAU;;0DACpB,qBAACqB,eAAS;gDAACrB,WAAU;0DAAsB;;0DAC3C,qBAAC4C,uBAAU;gDAAC5C,WAAU;;;;kDAExB,sBAACsB,iBAAW;;0DACV,sBAACvB;gDAAIC,WAAU;;oDACZb,aAAa3C,QAAQkG,QAAQ,CAACI,cAAc,GAAG,KAAK;oDAAG;;;0DAE1D,qBAAC1C;gDAAEJ,WAAU;0DAAgC;;;;;;0CAMjD,sBAACmB,UAAI;;kDACH,sBAACC,gBAAU;wCAACpB,WAAU;;0DACpB,qBAACqB,eAAS;gDAACrB,WAAU;0DAAsB;;0DAC3C,qBAAC+C,kBAAK;gDAAC/C,WAAU;;;;kDAEnB,sBAACsB,iBAAW;;0DACV,qBAACvB;gDAAIC,WAAU;0DAAsBb,aAAa3C,QAAQkG,QAAQ,CAACM,WAAW;;0DAC9E,qBAAC5C;gDAAEJ,WAAU;0DAAgC;;;;;;;;kCAQnD,sBAACD;wBAAIC,WAAU;;0CACb,sBAACmB,UAAI;;kDACH,sBAACC,gBAAU;;0DACT,sBAACC,eAAS;gDAACrB,WAAU;;kEACnB,qBAACiD,mBAAM;wDAACjD,WAAU;;kEAClB,qBAACE;kEAAK;;;;0DAER,qBAACgD,qBAAe;0DAAC;;;;kDAEnB,sBAAC5B,iBAAW;wCAACtB,WAAU;;0DACrB,sBAACD;gDAAIC,WAAU;;kEACb,qBAACE;kEAAK;;kEACN,qBAACwB,YAAK;wDAACpB,SACL9D,QAAQ2G,QAAQ,CAACC,SAAS,KAAK,QAAQ,YACvC5G,QAAQ2G,QAAQ,CAACC,SAAS,KAAK,WAAW,cAC1C5G,QAAQ2G,QAAQ,CAACC,SAAS,KAAK,SAAS,gBAAgB;kEAEvD5G,QAAQ2G,QAAQ,CAACC,SAAS,CAACzB,WAAW;;;;0DAG3C,sBAAC5B;gDAAIC,WAAU;;kEACb,qBAACE;kEAAK;;kEACN,qBAACA;wDAAKF,WAAU;kEAAab,aAAa3C,QAAQ2G,QAAQ,CAACE,cAAc;;;;0DAE3E,sBAACtD;gDAAIC,WAAU;;kEACb,qBAACE;kEAAK;;kEACN,qBAACA;wDAAKF,WAAU;kEAAab,aAAa3C,QAAQ2G,QAAQ,CAACG,eAAe;;;;0DAE5E,sBAACvD;gDAAIC,WAAU;;kEACb,qBAACE;kEAAK;;kEACN,qBAACA;wDAAKF,WAAU;kEAAab,aAAa3C,QAAQ2G,QAAQ,CAACI,YAAY;;;;;;;;0CAK7E,sBAACpC,UAAI;;kDACH,sBAACC,gBAAU;;0DACT,sBAACC,eAAS;gDAACrB,WAAU;;kEACnB,qBAACqC,qBAAQ;wDAACrC,WAAU;;kEACpB,qBAACE;kEAAK;;;;0DAER,qBAACgD,qBAAe;0DAAC;;;;kDAEnB,sBAAC5B,iBAAW;wCAACtB,WAAU;;0DACrB,sBAACD;gDAAIC,WAAU;;kEACb,qBAACE;kEAAK;;kEACN,qBAACA;wDAAKF,WAAW,CAAC,UAAU,EAAEd,eAAe1C,QAAQgH,cAAc,CAACC,oBAAoB,GAAG;kEACxFjH,QAAQgH,cAAc,CAACC,oBAAoB,CAAC9B,WAAW;;;;0DAG5D,sBAAC5B;gDAAIC,WAAU;;kEACb,qBAACE;kEAAK;;kEACN,sBAACA;wDAAKF,WAAU;;4DACbb,aAAa3C,QAAQgH,cAAc,CAACE,YAAY,GAAG,KAAK;4DAAG;;;;;0DAGhE,sBAAC3D;gDAAIC,WAAU;;kEACb,qBAACE;kEAAK;;kEACN,qBAACA;wDAAKF,WAAU;kEAAab,aAAa3C,QAAQgH,cAAc,CAACG,mBAAmB;;;;0DAEtF,sBAAC5D;gDAAIC,WAAU;;kEACb,qBAACE;kEAAK;;kEACN,sBAACA;wDAAKF,WAAU;;4DACbb,aAAa3C,QAAQgH,cAAc,CAACI,WAAW,GAAG,KAAK;4DAAG;;;;;;;;;;;;;;;AAU/E"}