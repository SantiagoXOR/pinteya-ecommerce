{"version":3,"names":["cov_t9ol2lrtr","actualCoverage","s","useUserRole","f","userProfile","setUserProfile","_react","useState","isLoading","setIsLoading","error","setError","user","isLoaded","isSignedIn","syncUser","useCallback","email","b","console","log","response","fetch","method","headers","body","JSON","stringify","id","name","image","ok","Error","userData","json","err","fetchUserProfile","warn","encodeURIComponent","status","errorText","text","data","success","errorMessage","message","hasPermission","permissionPath","user_roles","permissions","current","path","undefined","Boolean","hasAnyPermission","some","permission","hasAllPermissions","every","isAdmin","role_name","isCustomer","isModerator","canAccessAdminPanel","canManageProducts","canManageOrders","canManageUsers","canViewAnalytics","useEffect","role","refetch"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useUserRole.ts"],"sourcesContent":["/**\r\n * Hook personalizado para gestionar roles de usuario\r\n * Integra NextAuth.js con el sistema de roles de Supabase\r\n */\r\n\r\n'use client';\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { useAuth } from './useAuth';\r\n\r\nexport interface UserRole {\r\n  role_name: string;\r\n  description: string;\r\n  permissions: Record<string, any>;\r\n}\r\n\r\nexport interface UserProfile {\r\n  id: string;\r\n  clerk_user_id: string;\r\n  email: string;\r\n  role_id: string;\r\n  first_name?: string;\r\n  last_name?: string;\r\n  is_active: boolean;\r\n  user_roles: UserRole;\r\n}\r\n\r\nexport interface UseUserRoleReturn {\r\n  userProfile: UserProfile | null;\r\n  role: UserRole | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  hasPermission: (permission: string[]) => boolean;\r\n  hasAnyPermission: (permissions: string[][]) => boolean;\r\n  hasAllPermissions: (permissions: string[][]) => boolean;\r\n  canAccessAdminPanel: boolean;\r\n  canManageProducts: boolean;\r\n  canManageOrders: boolean;\r\n  canManageUsers: boolean;\r\n  canViewAnalytics: boolean;\r\n  isAdmin: boolean;\r\n  isCustomer: boolean;\r\n  isModerator: boolean;\r\n  syncUser: () => Promise<void>;\r\n  refetch: () => Promise<void>;\r\n}\r\n\r\nexport const useUserRole = (): UseUserRoleReturn => {\r\n  // 🚨 TEMPORAL: Hook simplificado sin autenticación durante migración\r\n  // TODO: Restaurar funcionalidad completa cuando NextAuth esté configurado\r\n  // const { user, isLoaded, isSignedIn } = useAuth();\r\n\r\n  // 🚨 TEMPORAL: Estados simplificados sin autenticación\r\n  const [userProfile, setUserProfile] = useState<UserProfile | null>(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // 🚨 TEMPORAL: Variables mock para evitar errores\r\n  const user = null;\r\n  const isLoaded = true;\r\n  const isSignedIn = false;\r\n\r\n  const syncUser = useCallback(async () => {\r\n    if (!user?.email) {\r\n      console.log('[useUserRole] No hay usuario autenticado para sincronizar');\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      // Buscar o crear usuario en Supabase\r\n      const response = await fetch('/api/admin/users/sync', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          id: user.id,\r\n          email: user.email,\r\n          name: user.name,\r\n          image: user.image,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al sincronizar usuario');\r\n      }\r\n\r\n      const userData = await response.json();\r\n      setUserProfile(userData);\r\n\r\n      console.log('[useUserRole] Usuario sincronizado exitosamente');\r\n    } catch (err) {\r\n      console.error('[useUserRole] Error al sincronizar usuario:', err);\r\n      setError('Error al sincronizar usuario');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [user]);\r\n\r\n  const fetchUserProfile = useCallback(async () => {\r\n    if (!user?.email) {\r\n      console.log('[useUserRole] No hay usuario autenticado');\r\n      setUserProfile(null);\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      const email = user.email;\r\n      if (!email) {\r\n        console.warn('Email no disponible para el usuario');\r\n        setError('Email no disponible');\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(`/api/admin/users/profile?email=${encodeURIComponent(email)}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.status === 404) {\r\n        // Usuario no existe, intentar sincronizar\r\n        await syncUser();\r\n        return;\r\n      }\r\n\r\n      if (!response.ok) {\r\n        // Manejo más específico de errores HTTP\r\n        const errorText = await response.text();\r\n        console.warn(`Error HTTP ${response.status}: ${errorText}`);\r\n\r\n        // No lanzar error para errores de red, solo logear\r\n        setError(`Error de conexión (${response.status})`);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        setUserProfile(data.user);\r\n      } else {\r\n        console.warn('Error en respuesta del servidor:', data.error);\r\n        setError(data.error || 'Error del servidor');\r\n      }\r\n    } catch (err) {\r\n      // Manejo más suave de errores para no interrumpir la aplicación\r\n      console.warn('Error fetching user profile:', err);\r\n      const errorMessage = err instanceof Error ? err.message : 'Error de conexión';\r\n      setError(errorMessage);\r\n\r\n      // No re-lanzar el error para evitar interrumpir otros componentes\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [user]);\r\n\r\n  const hasPermission = (permissionPath: string[]): boolean => {\r\n    if (!userProfile?.user_roles?.permissions) {return false;}\r\n\r\n    let current = userProfile.user_roles.permissions;\r\n    for (const path of permissionPath) {\r\n      if (current[path] === undefined) {return false;}\r\n      current = current[path];\r\n    }\r\n\r\n    // Manejar diferentes tipos de valores de permisos\r\n    if (typeof current === 'boolean') {\r\n      return current;\r\n    }\r\n\r\n    if (typeof current === 'string') {\r\n      // Para permisos como \"own\", \"own_limited\", etc.\r\n      return current !== 'false';\r\n    }\r\n\r\n    return Boolean(current);\r\n  };\r\n\r\n  const hasAnyPermission = (permissions: string[][]): boolean => {\r\n    return permissions.some(permission => hasPermission(permission));\r\n  };\r\n\r\n  const hasAllPermissions = (permissions: string[][]): boolean => {\r\n    return permissions.every(permission => hasPermission(permission));\r\n  };\r\n\r\n  // Verificaciones de roles\r\n  const isAdmin = userProfile?.user_roles?.role_name === 'admin';\r\n  const isCustomer = userProfile?.user_roles?.role_name === 'customer';\r\n  const isModerator = userProfile?.user_roles?.role_name === 'moderator';\r\n\r\n  // Verificaciones de permisos específicos\r\n  const canAccessAdminPanel = hasPermission(['admin_panel', 'access']);\r\n  const canManageProducts = hasAnyPermission([\r\n    ['products', 'create'],\r\n    ['products', 'update'],\r\n    ['products', 'delete']\r\n  ]);\r\n  const canManageOrders = hasAnyPermission([\r\n    ['orders', 'create'],\r\n    ['orders', 'update'],\r\n    ['orders', 'delete']\r\n  ]);\r\n  const canManageUsers = hasAnyPermission([\r\n    ['users', 'create'],\r\n    ['users', 'update'],\r\n    ['users', 'delete'],\r\n    ['users', 'manage_roles']\r\n  ]);\r\n  const canViewAnalytics = hasPermission(['analytics', 'read']);\r\n\r\n  useEffect(() => {\r\n    if (isLoaded && isSignedIn && user) {\r\n      console.log('[useUserRole] Usuario autenticado, obteniendo perfil...');\r\n      fetchUserProfile();\r\n    } else if (isLoaded && !isSignedIn) {\r\n      console.log('[useUserRole] Usuario no autenticado');\r\n      setUserProfile(null);\r\n      setIsLoading(false);\r\n      setError(null);\r\n    }\r\n  }, [isLoaded, isSignedIn, user, fetchUserProfile]);\r\n\r\n  return {\r\n    userProfile,\r\n    role: userProfile?.user_roles || null,\r\n    isLoading,\r\n    error,\r\n    hasPermission,\r\n    hasAnyPermission,\r\n    hasAllPermissions,\r\n    canAccessAdminPanel,\r\n    canManageProducts,\r\n    canManageOrders,\r\n    canManageUsers,\r\n    canViewAnalytics,\r\n    isAdmin,\r\n    isCustomer,\r\n    isModerator,\r\n    syncUser,\r\n    refetch: fetchUserProfile,\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;;;GAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}