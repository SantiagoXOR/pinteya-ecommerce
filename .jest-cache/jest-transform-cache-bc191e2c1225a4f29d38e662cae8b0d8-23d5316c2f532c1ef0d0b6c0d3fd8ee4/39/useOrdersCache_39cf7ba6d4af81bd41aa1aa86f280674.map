{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useOrdersCache.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - ORDERS CACHE HOOK\r\n// Hook especializado para manejo de cache de órdenes\r\n// ===================================\r\n\r\nimport { useCallback, useRef } from 'react';\r\nimport { StrictOrdersListResponse } from '@/types/api-strict';\r\nimport { StrictOrderFilters } from './useOrdersEnterpriseStrict';\r\n\r\n// ===================================\r\n// TIPOS Y CONFIGURACIÓN\r\n// ===================================\r\n\r\ninterface CacheEntry {\r\n  data: StrictOrdersListResponse;\r\n  timestamp: number;\r\n  filters: StrictOrderFilters;\r\n  requestId: string;\r\n}\r\n\r\ninterface CacheOptions {\r\n  enableCache: boolean;\r\n  cacheTimeout: number;\r\n  maxSize?: number;\r\n  cleanupInterval?: number;\r\n  minRequestInterval?: number;\r\n}\r\n\r\n// Configuración de cache\r\nconst CACHE_CONFIG = {\r\n  MAX_SIZE: 50,\r\n  CLEANUP_INTERVAL: 10 * 60 * 1000, // 10 minutos\r\n  MIN_REQUEST_INTERVAL: 1000, // 1 segundo mínimo entre peticiones idénticas\r\n} as const;\r\n\r\n// ===================================\r\n// CACHE GLOBAL\r\n// ===================================\r\n\r\n// Cache compartido entre instancias del hook\r\nconst cache = new Map<string, CacheEntry>();\r\nconst pendingRequests = new Map<string, Promise<any>>();\r\nconst requestTimestamps = new Map<string, number>();\r\n\r\n// ===================================\r\n// UTILIDADES DE CACHE\r\n// ===================================\r\n\r\nfunction getCacheKey(filters: StrictOrderFilters): string {\r\n  // Crear clave más estable ordenando las propiedades y normalizando valores\r\n  const normalizedFilters = Object.keys(filters)\r\n    .sort()\r\n    .reduce((result, key) => {\r\n      const value = filters[key as keyof StrictOrderFilters];\r\n      // Normalizar valores para evitar claves duplicadas\r\n      if (value !== undefined && value !== null && value !== '' && value !== 'all') {\r\n        result[key] = value;\r\n      }\r\n      return result;\r\n    }, {} as any);\r\n  return JSON.stringify(normalizedFilters);\r\n}\r\n\r\nfunction cleanupExpiredCache(cacheTimeout: number): void {\r\n  const now = Date.now();\r\n  const expiredKeys: string[] = [];\r\n  \r\n  cache.forEach((entry, key) => {\r\n    if (now - entry.timestamp > cacheTimeout) {\r\n      expiredKeys.push(key);\r\n    }\r\n  });\r\n  \r\n  expiredKeys.forEach(key => {\r\n    cache.delete(key);\r\n    requestTimestamps.delete(key);\r\n  });\r\n  \r\n  // Limpiar cache si está muy grande\r\n  if (cache.size > CACHE_CONFIG.MAX_SIZE) {\r\n    const entries = Array.from(cache.entries());\r\n    entries.sort((a, b) => a[1].timestamp - b[1].timestamp);\r\n    \r\n    const toDelete = entries.slice(0, cache.size - CACHE_CONFIG.MAX_SIZE);\r\n    toDelete.forEach(([key]) => {\r\n      cache.delete(key);\r\n      requestTimestamps.delete(key);\r\n    });\r\n  }\r\n  \r\n  if (process.env.NODE_ENV === 'development') {\r\n    console.log('[useOrdersCache] Cache cleanup completed:', {\r\n      expired: expiredKeys.length,\r\n      currentSize: cache.size,\r\n      maxSize: CACHE_CONFIG.MAX_SIZE\r\n    });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// HOOK DE CACHE\r\n// ===================================\r\n\r\nexport interface UseOrdersCacheReturn {\r\n  getCachedData: (filters: StrictOrderFilters) => StrictOrdersListResponse | null;\r\n  setCachedData: (filters: StrictOrderFilters, data: StrictOrdersListResponse) => void;\r\n  clearCache: () => void;\r\n  isRequestTooRecent: (filters: StrictOrderFilters) => boolean;\r\n  setPendingRequest: (filters: StrictOrderFilters, promise: Promise<any>) => void;\r\n  getPendingRequest: (filters: StrictOrderFilters) => Promise<any> | null;\r\n  getCacheStats: () => { size: number; maxSize: number; pendingRequests: number };\r\n}\r\n\r\nexport function useOrdersCache(options: CacheOptions): UseOrdersCacheReturn {\r\n  const lastCleanupRef = useRef<number>(Date.now());\r\n  \r\n  const getCachedData = useCallback((filters: StrictOrderFilters): StrictOrdersListResponse | null => {\r\n    if (!options.enableCache) {return null;}\r\n    \r\n    const key = getCacheKey(filters);\r\n    const entry = cache.get(key);\r\n    \r\n    if (!entry) {return null;}\r\n    \r\n    const isExpired = Date.now() - entry.timestamp > options.cacheTimeout;\r\n    if (isExpired) {\r\n      cache.delete(key);\r\n      requestTimestamps.delete(key);\r\n      return null;\r\n    }\r\n    \r\n    // Log de cache hit en desarrollo\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log('[useOrdersCache] Cache hit:', { \r\n        key: key.substring(0, 100) + '...', \r\n        age: Date.now() - entry.timestamp,\r\n        cacheSize: cache.size \r\n      });\r\n    }\r\n    \r\n    return entry.data;\r\n  }, [options.enableCache, options.cacheTimeout]);\r\n  \r\n  const setCachedData = useCallback((filters: StrictOrderFilters, data: StrictOrdersListResponse): void => {\r\n    if (!options.enableCache) {return;}\r\n    \r\n    const key = getCacheKey(filters);\r\n    const requestId = Math.random().toString(36).substr(2, 9);\r\n    \r\n    cache.set(key, {\r\n      data,\r\n      timestamp: Date.now(),\r\n      filters,\r\n      requestId\r\n    });\r\n    \r\n    requestTimestamps.set(key, Date.now());\r\n    \r\n    // Cleanup automático periódico\r\n    const now = Date.now();\r\n    if (now - lastCleanupRef.current > (options.cleanupInterval || CACHE_CONFIG.CLEANUP_INTERVAL)) {\r\n      cleanupExpiredCache(options.cacheTimeout);\r\n      lastCleanupRef.current = now;\r\n    }\r\n    \r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log('[useOrdersCache] Data cached:', {\r\n        key: key.substring(0, 100) + '...',\r\n        cacheSize: cache.size,\r\n        requestId\r\n      });\r\n    }\r\n  }, [options.enableCache, options.cacheTimeout, options.cleanupInterval]);\r\n  \r\n  const clearCache = useCallback((): void => {\r\n    cache.clear();\r\n    pendingRequests.clear();\r\n    requestTimestamps.clear();\r\n    \r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log('[useOrdersCache] Cache cleared');\r\n    }\r\n  }, []);\r\n  \r\n  const isRequestTooRecent = useCallback((filters: StrictOrderFilters): boolean => {\r\n    const key = getCacheKey(filters);\r\n    const lastRequestTime = requestTimestamps.get(key);\r\n    \r\n    if (!lastRequestTime) {return false;}\r\n    \r\n    const timeSinceLastRequest = Date.now() - lastRequestTime;\r\n    return timeSinceLastRequest < (options.minRequestInterval || CACHE_CONFIG.MIN_REQUEST_INTERVAL);\r\n  }, [options.minRequestInterval]);\r\n  \r\n  const setPendingRequest = useCallback((filters: StrictOrderFilters, promise: Promise<any>): void => {\r\n    const key = getCacheKey(filters);\r\n    pendingRequests.set(key, promise);\r\n    \r\n    // Limpiar cuando la promesa se resuelve\r\n    promise.finally(() => {\r\n      pendingRequests.delete(key);\r\n    });\r\n  }, []);\r\n  \r\n  const getPendingRequest = useCallback((filters: StrictOrderFilters): Promise<any> | null => {\r\n    const key = getCacheKey(filters);\r\n    return pendingRequests.get(key) || null;\r\n  }, []);\r\n  \r\n  const getCacheStats = useCallback(() => ({\r\n    size: cache.size,\r\n    maxSize: options.maxSize || CACHE_CONFIG.MAX_SIZE,\r\n    pendingRequests: pendingRequests.size\r\n  }), [options.maxSize]);\r\n  \r\n  return {\r\n    getCachedData,\r\n    setCachedData,\r\n    clearCache,\r\n    isRequestTooRecent,\r\n    setPendingRequest,\r\n    getPendingRequest,\r\n    getCacheStats\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["useOrdersCache","CACHE_CONFIG","MAX_SIZE","CLEANUP_INTERVAL","MIN_REQUEST_INTERVAL","cache","Map","pendingRequests","requestTimestamps","getCacheKey","filters","normalizedFilters","Object","keys","sort","reduce","result","key","value","undefined","JSON","stringify","cleanupExpiredCache","cacheTimeout","now","Date","expiredKeys","forEach","entry","timestamp","push","delete","size","entries","Array","from","a","b","toDelete","slice","process","env","NODE_ENV","console","log","expired","length","currentSize","maxSize","options","lastCleanupRef","useRef","getCachedData","useCallback","enableCache","get","isExpired","substring","age","cacheSize","data","setCachedData","requestId","Math","random","toString","substr","set","current","cleanupInterval","clearCache","clear","isRequestTooRecent","lastRequestTime","timeSinceLastRequest","minRequestInterval","setPendingRequest","promise","finally","getPendingRequest","getCacheStats"],"mappings":"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"}