{"version":3,"names":["cov_1dq142u8lm","actualCoverage","s","GET","f","runtime","request","authResult","_adminauth","requireAdminAuth","success","b","_server","NextResponse","json","error","status","totalResult","activeResult","newResult","Promise","all","_supabase","supabaseAdmin","from","select","count","head","gte","Date","now","toISOString","stats","total_users","active_users","new_users","growth_rate","data","timestamp","console"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\users\\stats\\route.ts"],"sourcesContent":["// Configuración para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { requireAdminAuth } from '@/lib/auth/admin-auth';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\n\r\n/**\r\n * GET /api/admin/users/stats\r\n * Obtener estadísticas de usuarios desde Supabase\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticación y permisos de admin\r\n    const authResult = await requireAdminAuth();\r\n\r\n    if (!authResult.success) {\r\n      return NextResponse.json(\r\n        { error: authResult.error },\r\n        { status: authResult.status || 401 }\r\n      );\r\n    }\r\n\r\n    // Obtener estadísticas de usuarios\r\n    const [totalResult, activeResult, newResult] = await Promise.all([\r\n      // Total de usuarios\r\n      supabaseAdmin.from('users').select('id', { count: 'exact', head: true }),\r\n      // Usuarios activos (con sesiones recientes)\r\n      supabaseAdmin.from('users').select('id', { count: 'exact', head: true })\r\n        .gte('last_sign_in_at', new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString()),\r\n      // Usuarios nuevos (últimos 7 días)\r\n      supabaseAdmin.from('users').select('id', { count: 'exact', head: true })\r\n        .gte('created_at', new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString())\r\n    ]);\r\n\r\n    const stats = {\r\n      total_users: totalResult.count || 0,\r\n      active_users: activeResult.count || 0,\r\n      new_users: newResult.count || 0,\r\n      growth_rate: 0 // Placeholder para cálculo de crecimiento\r\n    };\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: stats,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error obteniendo estadísticas de usuarios:', error);\r\n    \r\n    return NextResponse.json(\r\n      { \r\n        success: false,\r\n        error: 'Error interno del servidor',\r\n        data: {\r\n          total_users: 0,\r\n          active_users: 0,\r\n          new_users: 0,\r\n          growth_rate: 0\r\n        }\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}