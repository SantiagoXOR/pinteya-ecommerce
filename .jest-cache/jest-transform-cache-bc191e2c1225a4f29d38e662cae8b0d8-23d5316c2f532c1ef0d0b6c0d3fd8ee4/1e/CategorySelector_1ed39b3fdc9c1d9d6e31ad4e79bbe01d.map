{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\products\\CategorySelector.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { useQuery } from '@tanstack/react-query'\nimport { ChevronDown, Plus, Search, Folder, FolderOpen } from 'lucide-react'\nimport { cn } from '@/lib/core/utils'\n\ninterface Category {\n  id: string\n  name: string\n  description?: string\n  parent_id?: string\n  level: number\n  children?: Category[]\n}\n\ninterface CategorySelectorProps {\n  value?: string\n  onChange: (categoryId: string) => void\n  error?: string\n  placeholder?: string\n  allowCreate?: boolean\n  className?: string\n}\n\n// API function to fetch categories\nasync function fetchCategories(): Promise<Category[]> {\n  const response = await fetch('/api/categories')\n  if (!response.ok) {\n    throw new Error('Error fetching categories')\n  }\n  const data = await response.json()\n  return data.data || []\n}\n\n// Build category tree\nfunction buildCategoryTree(categories: Category[]): Category[] {\n  const categoryMap = new Map<string, Category>()\n  const rootCategories: Category[] = []\n\n  // Create map of all categories\n  categories.forEach(category => {\n    categoryMap.set(category.id, { ...category, children: [] })\n  })\n\n  // Build tree structure\n  categories.forEach(category => {\n    const categoryNode = categoryMap.get(category.id)!\n\n    if (category.parent_id) {\n      const parent = categoryMap.get(category.parent_id)\n      if (parent) {\n        parent.children!.push(categoryNode)\n      }\n    } else {\n      rootCategories.push(categoryNode)\n    }\n  })\n\n  return rootCategories\n}\n\n// Flatten categories for search\nfunction flattenCategories(categories: Category[], level = 0): Category[] {\n  const flattened: Category[] = []\n\n  categories.forEach(category => {\n    flattened.push({ ...category, level })\n    if (category.children && category.children.length > 0) {\n      flattened.push(...flattenCategories(category.children, level + 1))\n    }\n  })\n\n  return flattened\n}\n\nexport function CategorySelector({\n  value,\n  onChange,\n  error,\n  placeholder = 'Selecciona una categoría',\n  allowCreate = false,\n  className,\n}: CategorySelectorProps) {\n  const [isOpen, setIsOpen] = useState(false)\n  const [searchTerm, setSearchTerm] = useState('')\n  const [expandedCategories, setExpandedCategories] = useState<Set<string>>(new Set())\n\n  // Fetch categories\n  const {\n    data: categories = [],\n    isLoading,\n    error: fetchError,\n  } = useQuery({\n    queryKey: ['categories'],\n    queryFn: fetchCategories,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  })\n\n  const categoryTree = buildCategoryTree(categories)\n  const flatCategories = flattenCategories(categoryTree)\n\n  // Find selected category\n  const selectedCategory = flatCategories.find(cat => cat.id === value)\n\n  // Filter categories based on search\n  const filteredCategories = searchTerm\n    ? flatCategories.filter(category =>\n        category.name.toLowerCase().includes(searchTerm.toLowerCase())\n      )\n    : categoryTree\n\n  const toggleExpanded = (categoryId: string) => {\n    const newExpanded = new Set(expandedCategories)\n    if (newExpanded.has(categoryId)) {\n      newExpanded.delete(categoryId)\n    } else {\n      newExpanded.add(categoryId)\n    }\n    setExpandedCategories(newExpanded)\n  }\n\n  const handleSelect = (categoryId: string) => {\n    onChange(categoryId)\n    setIsOpen(false)\n    setSearchTerm('')\n  }\n\n  const renderCategoryTree = (categories: Category[], level = 0) => {\n    return categories.map(category => (\n      <div key={category.id}>\n        <div\n          className={cn(\n            'flex items-center justify-between px-3 py-2 hover:bg-gray-50 cursor-pointer',\n            value === category.id && 'bg-blaze-orange-50 text-blaze-orange-700'\n          )}\n          style={{ paddingLeft: `${12 + level * 20}px` }}\n          onClick={() => handleSelect(category.id)}\n        >\n          <div className='flex items-center space-x-2 flex-1'>\n            {category.children && category.children.length > 0 ? (\n              <button\n                onClick={e => {\n                  e.stopPropagation()\n                  toggleExpanded(category.id)\n                }}\n                className='p-1 hover:bg-gray-200 rounded'\n              >\n                {expandedCategories.has(category.id) ? (\n                  <FolderOpen className='w-4 h-4 text-gray-500' />\n                ) : (\n                  <Folder className='w-4 h-4 text-gray-500' />\n                )}\n              </button>\n            ) : (\n              <div className='w-6 h-6 flex items-center justify-center'>\n                <div className='w-2 h-2 bg-gray-300 rounded-full'></div>\n              </div>\n            )}\n\n            <span className='text-sm font-medium'>{category.name}</span>\n          </div>\n\n          {value === category.id && (\n            <div className='w-2 h-2 bg-blaze-orange-600 rounded-full'></div>\n          )}\n        </div>\n\n        {category.children &&\n          category.children.length > 0 &&\n          expandedCategories.has(category.id) && (\n            <div>{renderCategoryTree(category.children, level + 1)}</div>\n          )}\n      </div>\n    ))\n  }\n\n  const renderFlatList = (categories: Category[]) => {\n    return categories.map(category => (\n      <div\n        key={category.id}\n        className={cn(\n          'flex items-center px-3 py-2 hover:bg-gray-50 cursor-pointer',\n          value === category.id && 'bg-blaze-orange-50 text-blaze-orange-700'\n        )}\n        onClick={() => handleSelect(category.id)}\n      >\n        <div className='flex items-center space-x-2 flex-1'>\n          <div style={{ marginLeft: `${category.level * 16}px` }}>\n            <span className='text-sm'>\n              {'—'.repeat(category.level)} {category.name}\n            </span>\n          </div>\n        </div>\n\n        {value === category.id && <div className='w-2 h-2 bg-blaze-orange-600 rounded-full'></div>}\n      </div>\n    ))\n  }\n\n  if (fetchError) {\n    return <div className='text-red-600 text-sm'>Error al cargar categorías</div>\n  }\n\n  return (\n    <div className={cn('relative', className)}>\n      {/* Selector Button */}\n      <button\n        type='button'\n        onClick={() => setIsOpen(!isOpen)}\n        className={cn(\n          'w-full flex items-center justify-between px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blaze-orange-500 focus:border-transparent',\n          error ? 'border-red-300' : 'border-gray-300',\n          isLoading && 'opacity-50 cursor-not-allowed'\n        )}\n        disabled={isLoading}\n      >\n        <span className={cn('text-sm', selectedCategory ? 'text-gray-900' : 'text-gray-500')}>\n          {isLoading ? 'Cargando...' : selectedCategory?.name || placeholder}\n        </span>\n        <ChevronDown\n          className={cn(\n            'w-4 h-4 text-gray-400 transition-transform',\n            isOpen && 'transform rotate-180'\n          )}\n        />\n      </button>\n\n      {/* Error Message */}\n      {error && (\n        <p className='text-red-600 text-sm mt-1'>\n          {error instanceof Error ? error.message : error?.toString() || 'Error desconocido'}\n        </p>\n      )}\n\n      {/* Dropdown */}\n      {isOpen && (\n        <div className='absolute top-full left-0 right-0 mt-1 bg-white border border-gray-200 rounded-lg shadow-lg z-50 max-h-80 overflow-hidden'>\n          {/* Search */}\n          <div className='p-3 border-b border-gray-200'>\n            <div className='relative'>\n              <Search className='absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4' />\n              <input\n                type='text'\n                placeholder='Buscar categorías...'\n                value={searchTerm}\n                onChange={e => setSearchTerm(e.target.value)}\n                className='w-full pl-10 pr-4 py-2 text-sm border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blaze-orange-500 focus:border-transparent'\n              />\n            </div>\n          </div>\n\n          {/* Categories List */}\n          <div className='max-h-60 overflow-y-auto'>\n            {categories.length === 0 ? (\n              <div className='p-4 text-center text-gray-500 text-sm'>\n                No hay categorías disponibles\n              </div>\n            ) : searchTerm ? (\n              renderFlatList(filteredCategories as Category[])\n            ) : (\n              renderCategoryTree(categoryTree)\n            )}\n          </div>\n\n          {/* Create New Category */}\n          {allowCreate && (\n            <div className='border-t border-gray-200 p-3'>\n              <button\n                type='button'\n                className='flex items-center space-x-2 text-sm text-blaze-orange-600 hover:text-blaze-orange-700'\n                onClick={() => {\n                  // TODO: Implement create category modal\n                  console.log('Create new category')\n                }}\n              >\n                <Plus className='w-4 h-4' />\n                <span>Crear nueva categoría</span>\n              </button>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Overlay */}\n      {isOpen && <div className='fixed inset-0 z-40' onClick={() => setIsOpen(false)} />}\n    </div>\n  )\n}\n"],"names":["CategorySelector","fetchCategories","response","fetch","ok","Error","data","json","buildCategoryTree","categories","categoryMap","Map","rootCategories","forEach","category","set","id","children","categoryNode","get","parent_id","parent","push","flattenCategories","level","flattened","length","value","onChange","error","placeholder","allowCreate","className","isOpen","setIsOpen","useState","searchTerm","setSearchTerm","expandedCategories","setExpandedCategories","Set","isLoading","fetchError","useQuery","queryKey","queryFn","staleTime","categoryTree","flatCategories","selectedCategory","find","cat","filteredCategories","filter","name","toLowerCase","includes","toggleExpanded","categoryId","newExpanded","has","delete","add","handleSelect","renderCategoryTree","map","div","cn","style","paddingLeft","onClick","button","e","stopPropagation","FolderOpen","Folder","span","renderFlatList","marginLeft","repeat","type","disabled","ChevronDown","p","message","toString","Search","input","target","console","log","Plus"],"mappings":"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"}