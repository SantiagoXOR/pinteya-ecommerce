99e2bc96a9960b3e154cb852f756a775
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_267vgkv1vh() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\location\\route.ts";
  var hash = "8f59de72a1484f0258bd6d32a38c543bc41f75be";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\location\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 54
        }
      },
      "9": {
        start: {
          line: 25,
          column: 17
        },
        end: {
          line: 25,
          column: 72
        }
      },
      "10": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 24
        }
      },
      "11": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "12": {
        start: {
          line: 30,
          column: 24
        },
        end: {
          line: 30,
          column: 49
        }
      },
      "13": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "14": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 36,
          column: 15
        }
      },
      "15": {
        start: {
          line: 38,
          column: 21
        },
        end: {
          line: 38,
          column: 41
        }
      },
      "16": {
        start: {
          line: 39,
          column: 55
        },
        end: {
          line: 39,
          column: 59
        }
      },
      "17": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "18": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 46,
          column: 15
        }
      },
      "19": {
        start: {
          line: 48,
          column: 25
        },
        end: {
          line: 48,
          column: 59
        }
      },
      "20": {
        start: {
          line: 50,
          column: 53
        },
        end: {
          line: 50,
          column: 145
        }
      },
      "21": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "22": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 56,
          column: 15
        }
      },
      "23": {
        start: {
          line: 59,
          column: 29
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "24": {
        start: {
          line: 68,
          column: 60
        },
        end: {
          line: 71,
          column: 48
        }
      },
      "25": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "26": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 74
        }
      },
      "27": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 78,
          column: 15
        }
      },
      "28": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "29": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 86,
          column: 15
        }
      },
      "30": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 75
        }
      },
      "31": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "32": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 68
        }
      },
      "33": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 103,
          column: 11
        }
      },
      "34": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 62
        }
      },
      "35": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 110,
          column: 11
        }
      },
      "36": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 146,
          column: 5
        }
      },
      "37": {
        start: {
          line: 116,
          column: 24
        },
        end: {
          line: 116,
          column: 49
        }
      },
      "38": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "39": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 122,
          column: 15
        }
      },
      "40": {
        start: {
          line: 124,
          column: 25
        },
        end: {
          line: 124,
          column: 59
        }
      },
      "41": {
        start: {
          line: 126,
          column: 53
        },
        end: {
          line: 126,
          column: 175
        }
      },
      "42": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "43": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 132,
          column: 15
        }
      },
      "44": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 138,
          column: 11
        }
      },
      "45": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 63
        }
      },
      "46": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 145,
          column: 11
        }
      },
      "47": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 178,
          column: 5
        }
      },
      "48": {
        start: {
          line: 152,
          column: 25
        },
        end: {
          line: 152,
          column: 59
        }
      },
      "49": {
        start: {
          line: 154,
          column: 46
        },
        end: {
          line: 154,
          column: 146
        }
      },
      "50": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 51
        }
      },
      "51": {
        start: {
          line: 155,
          column: 44
        },
        end: {
          line: 155,
          column: 51
        }
      },
      "52": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "53": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 43
        }
      },
      "54": {
        start: {
          line: 158,
          column: 34
        },
        end: {
          line: 158,
          column: 43
        }
      },
      "55": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 174,
          column: 13
        }
      },
      "56": {
        start: {
          line: 159,
          column: 24
        },
        end: {
          line: 159,
          column: 25
        }
      },
      "57": {
        start: {
          line: 160,
          column: 33
        },
        end: {
          line: 160,
          column: 51
        }
      },
      "58": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 62
        }
      },
      "59": {
        start: {
          line: 161,
          column: 53
        },
        end: {
          line: 161,
          column: 62
        }
      },
      "60": {
        start: {
          line: 162,
          column: 36
        },
        end: {
          line: 162,
          column: 69
        }
      },
      "61": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 163,
          column: 43
        }
      },
      "62": {
        start: {
          line: 163,
          column: 34
        },
        end: {
          line: 163,
          column: 43
        }
      },
      "63": {
        start: {
          line: 164,
          column: 33
        },
        end: {
          line: 164,
          column: 80
        }
      },
      "64": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 173,
          column: 17
        }
      },
      "65": {
        start: {
          line: 168,
          column: 20
        },
        end: {
          line: 168,
          column: 110
        }
      },
      "66": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 58
        }
      },
      "67": {
        start: {
          line: 183,
          column: 14
        },
        end: {
          line: 183,
          column: 21
        }
      },
      "68": {
        start: {
          line: 184,
          column: 17
        },
        end: {
          line: 184,
          column: 58
        }
      },
      "69": {
        start: {
          line: 185,
          column: 17
        },
        end: {
          line: 185,
          column: 58
        }
      },
      "70": {
        start: {
          line: 186,
          column: 14
        },
        end: {
          line: 186,
          column: 173
        }
      },
      "71": {
        start: {
          line: 187,
          column: 14
        },
        end: {
          line: 187,
          column: 60
        }
      },
      "72": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 188,
          column: 17
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "POST",
        decl: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 19
          }
        },
        loc: {
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 112,
            column: 1
          }
        },
        line: 27
      },
      "5": {
        name: "GET",
        decl: {
          start: {
            line: 113,
            column: 15
          },
          end: {
            line: 113,
            column: 18
          }
        },
        loc: {
          start: {
            line: 113,
            column: 28
          },
          end: {
            line: 147,
            column: 1
          }
        },
        line: 113
      },
      "6": {
        name: "checkProximityToDestinations",
        decl: {
          start: {
            line: 150,
            column: 19
          },
          end: {
            line: 150,
            column: 47
          }
        },
        loc: {
          start: {
            line: 150,
            column: 75
          },
          end: {
            line: 179,
            column: 1
          }
        },
        line: 150
      },
      "7": {
        name: "calculateDistance",
        decl: {
          start: {
            line: 182,
            column: 13
          },
          end: {
            line: 182,
            column: 30
          }
        },
        loc: {
          start: {
            line: 182,
            column: 47
          },
          end: {
            line: 189,
            column: 1
          }
        },
        line: 182
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "2": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 21
          }
        }, {
          start: {
            line: 41,
            column: 25
          },
          end: {
            line: 41,
            column: 57
          }
        }, {
          start: {
            line: 41,
            column: 61
          },
          end: {
            line: 41,
            column: 93
          }
        }],
        line: 41
      },
      "3": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "4": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 23
          }
        }, {
          start: {
            line: 51,
            column: 27
          },
          end: {
            line: 51,
            column: 34
          }
        }],
        line: 51
      },
      "5": {
        loc: {
          start: {
            line: 63,
            column: 19
          },
          end: {
            line: 63,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 19
          },
          end: {
            line: 63,
            column: 24
          }
        }, {
          start: {
            line: 63,
            column: 28
          },
          end: {
            line: 63,
            column: 29
          }
        }],
        line: 63
      },
      "6": {
        loc: {
          start: {
            line: 64,
            column: 21
          },
          end: {
            line: 64,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 21
          },
          end: {
            line: 64,
            column: 28
          }
        }, {
          start: {
            line: 64,
            column: 32
          },
          end: {
            line: 64,
            column: 33
          }
        }],
        line: 64
      },
      "7": {
        loc: {
          start: {
            line: 65,
            column: 22
          },
          end: {
            line: 65,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 22
          },
          end: {
            line: 65,
            column: 30
          }
        }, {
          start: {
            line: 65,
            column: 34
          },
          end: {
            line: 65,
            column: 35
          }
        }],
        line: 65
      },
      "8": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "9": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "10": {
        loc: {
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "11": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "12": {
        loc: {
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 127,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 127,
            column: 23
          }
        }, {
          start: {
            line: 127,
            column: 27
          },
          end: {
            line: 127,
            column: 34
          }
        }],
        line: 127
      },
      "13": {
        loc: {
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 155,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 155,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "14": {
        loc: {
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 155,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 155,
            column: 17
          }
        }, {
          start: {
            line: 155,
            column: 21
          },
          end: {
            line: 155,
            column: 42
          }
        }],
        line: 155
      },
      "15": {
        loc: {
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 158,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 158,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "16": {
        loc: {
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 161,
            column: 62
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 161,
            column: 62
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "17": {
        loc: {
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 163,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 163,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "18": {
        loc: {
          start: {
            line: 166,
            column: 16
          },
          end: {
            line: 173,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 16
          },
          end: {
            line: 173,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\location\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n/**\r\n * API para actualizar la ubicaci\xF3n del driver en tiempo real\r\n * POST /api/driver/location\r\n */\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { createClient } from '@/lib/integrations/supabase/server';\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    \r\n    if (!session?.user?.email) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const body = await request.json();\r\n    const { location, speed, heading, accuracy } = body;\r\n\r\n    // Validar datos de ubicaci\xF3n\r\n    if (!location || typeof location.lat !== 'number' || typeof location.lng !== 'number') {\r\n      return NextResponse.json(\r\n        { error: 'Datos de ubicaci\xF3n inv\xE1lidos' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const supabase = await createClient();\r\n\r\n    // Obtener informaci\xF3n del driver\r\n    const { data: driver, error: driverError } = await supabase\r\n      .from('drivers')\r\n      .select('id, status')\r\n      .eq('email', session.user.email)\r\n      .single();\r\n\r\n    if (driverError || !driver) {\r\n      return NextResponse.json(\r\n        { error: 'Driver no encontrado' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Preparar datos de ubicaci\xF3n\r\n    const locationData = {\r\n      lat: location.lat,\r\n      lng: location.lng,\r\n      timestamp: new Date().toISOString(),\r\n      speed: speed || 0,\r\n      heading: heading || 0,\r\n      accuracy: accuracy || 0\r\n    };\r\n\r\n    // Actualizar ubicaci\xF3n del driver\r\n    const { data: updatedDriver, error: updateError } = await supabase\r\n      .from('drivers')\r\n      .update({\r\n        current_location: locationData,\r\n        updated_at: new Date().toISOString()\r\n      })\r\n      .eq('id', driver.id)\r\n      .select()\r\n      .single();\r\n\r\n    if (updateError) {\r\n      console.error('Error updating driver location:', updateError);\r\n      return NextResponse.json(\r\n        { error: 'Error actualizando ubicaci\xF3n' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Opcional: Guardar historial de ubicaciones para tracking\r\n    try {\r\n      await supabase\r\n        .from('driver_location_history')\r\n        .insert({\r\n          driver_id: driver.id,\r\n          location: locationData,\r\n          created_at: new Date().toISOString()\r\n        });\r\n    } catch (historyError) {\r\n      // No fallar si no se puede guardar el historial\r\n      console.warn('Could not save location history:', historyError);\r\n    }\r\n\r\n    // Si el driver est\xE1 en una ruta activa, verificar proximidad a destinos\r\n    if (driver.status === 'busy') {\r\n      await checkProximityToDestinations(driver.id, location);\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      location: locationData,\r\n      driver: {\r\n        id: updatedDriver.id,\r\n        status: updatedDriver.status,\r\n        current_location: updatedDriver.current_location\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error in driver location API:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    \r\n    if (!session?.user?.email) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const supabase = await createClient();\r\n\r\n    // Obtener ubicaci\xF3n actual del driver\r\n    const { data: driver, error: driverError } = await supabase\r\n      .from('drivers')\r\n      .select('id, current_location, status, updated_at')\r\n      .eq('email', session.user.email)\r\n      .single();\r\n\r\n    if (driverError || !driver) {\r\n      return NextResponse.json(\r\n        { error: 'Driver no encontrado' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({\r\n      location: driver.current_location,\r\n      status: driver.status,\r\n      last_updated: driver.updated_at\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error getting driver location:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Funci\xF3n helper para verificar proximidad a destinos de entrega\r\n */\r\nasync function checkProximityToDestinations(\r\n  driverId: string, \r\n  currentLocation: { lat: number; lng: number }\r\n) {\r\n  try {\r\n    const supabase = await createClient();\r\n\r\n    // Obtener rutas activas del driver\r\n    const { data: activeRoutes, error } = await supabase\r\n      .from('optimized_routes')\r\n      .select('*')\r\n      .eq('driver_id', driverId)\r\n      .eq('status', 'active');\r\n\r\n    if (error || !activeRoutes?.length) return;\r\n\r\n    // Verificar proximidad a cada destino\r\n    for (const route of activeRoutes) {\r\n      if (!route.shipments) continue;\r\n\r\n      for (let i = 0; i < route.shipments.length; i++) {\r\n        const shipment = route.shipments[i];\r\n        \r\n        if (shipment.status === 'delivered') continue;\r\n\r\n        const destination = shipment.destination?.coordinates;\r\n        if (!destination) continue;\r\n\r\n        const distance = calculateDistance(currentLocation, destination);\r\n        \r\n        // Si est\xE1 a menos de 100 metros del destino\r\n        if (distance < 100) {\r\n          // Opcional: Enviar notificaci\xF3n o actualizar estado\r\n          console.log(`Driver ${driverId} is near delivery destination: ${shipment.customer_name}`);\r\n          \r\n          // Aqu\xED se podr\xEDa implementar:\r\n          // - Notificaci\xF3n push al cliente\r\n          // - Actualizaci\xF3n autom\xE1tica de estado\r\n          // - Alerta al dashboard administrativo\r\n        }\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Error checking proximity:', error);\r\n  }\r\n}\r\n\r\n/**\r\n * Calcular distancia entre dos puntos en metros\r\n */\r\nfunction calculateDistance(\r\n  point1: { lat: number; lng: number },\r\n  point2: { lat: number; lng: number }\r\n): number {\r\n  const R = 6371000; // Radio de la Tierra en metros\r\n  const dLat = (point2.lat - point1.lat) * Math.PI / 180;\r\n  const dLon = (point2.lng - point1.lng) * Math.PI / 180;\r\n  const a = \r\n    Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n    Math.cos(point1.lat * Math.PI / 180) * Math.cos(point2.lat * Math.PI / 180) * \r\n    Math.sin(dLon/2) * Math.sin(dLon/2);\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n  return R * c;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "request", "session", "auth", "user", "email", "NextResponse", "json", "error", "status", "body", "location", "speed", "heading", "accuracy", "lat", "lng", "supabase", "createClient", "data", "driver", "driverError", "from", "select", "eq", "single", "locationData", "timestamp", "Date", "toISOString", "updatedDriver", "updateError", "update", "current_location", "updated_at", "id", "console", "insert", "driver_id", "created_at", "historyError", "warn", "checkProximityToDestinations", "success", "last_updated", "driverId", "currentLocation", "activeRoutes", "length", "route", "shipments", "i", "shipment", "destination", "coordinates", "distance", "calculateDistance", "log", "customer_name", "point1", "point2", "R", "dLat", "Math", "PI", "dLon", "a", "sin", "cos", "c", "atan2", "sqrt"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8f59de72a1484f0258bd6d32a38c543bc41f75be"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_267vgkv1vh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_267vgkv1vh();
cov_267vgkv1vh().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_267vgkv1vh().f[0]++;
  cov_267vgkv1vh().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_267vgkv1vh().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_267vgkv1vh().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_267vgkv1vh().f[1]++;
    cov_267vgkv1vh().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_267vgkv1vh().f[2]++;
    cov_267vgkv1vh().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_267vgkv1vh().f[3]++;
    cov_267vgkv1vh().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_267vgkv1vh().s[7]++, require("next/server"));
const _config =
/* istanbul ignore next */
(cov_267vgkv1vh().s[8]++, require("../../../../lib/auth/config"));
const _server1 =
/* istanbul ignore next */
(cov_267vgkv1vh().s[9]++, require("../../../../lib/integrations/supabase/server"));
const runtime =
/* istanbul ignore next */
(cov_267vgkv1vh().s[10]++, 'nodejs');
async function POST(request) {
  /* istanbul ignore next */
  cov_267vgkv1vh().f[4]++;
  cov_267vgkv1vh().s[11]++;
  try {
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_267vgkv1vh().s[12]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_267vgkv1vh().s[13]++;
    if (!session?.user?.email) {
      /* istanbul ignore next */
      cov_267vgkv1vh().b[0][0]++;
      cov_267vgkv1vh().s[14]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_267vgkv1vh().b[0][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_267vgkv1vh().s[15]++, await request.json());
    const {
      location,
      speed,
      heading,
      accuracy
    } =
    /* istanbul ignore next */
    (cov_267vgkv1vh().s[16]++, body);
    // Validar datos de ubicaciÃ³n
    /* istanbul ignore next */
    cov_267vgkv1vh().s[17]++;
    if (
    /* istanbul ignore next */
    (cov_267vgkv1vh().b[2][0]++, !location) ||
    /* istanbul ignore next */
    (cov_267vgkv1vh().b[2][1]++, typeof location.lat !== 'number') ||
    /* istanbul ignore next */
    (cov_267vgkv1vh().b[2][2]++, typeof location.lng !== 'number')) {
      /* istanbul ignore next */
      cov_267vgkv1vh().b[1][0]++;
      cov_267vgkv1vh().s[18]++;
      return _server.NextResponse.json({
        error: 'Datos de ubicaciÃ³n invÃ¡lidos'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_267vgkv1vh().b[1][1]++;
    }
    const supabase =
    /* istanbul ignore next */
    (cov_267vgkv1vh().s[19]++, await (0, _server1.createClient)());
    // Obtener informaciÃ³n del driver
    const {
      data: driver,
      error: driverError
    } =
    /* istanbul ignore next */
    (cov_267vgkv1vh().s[20]++, await supabase.from('drivers').select('id, status').eq('email', session.user.email).single());
    /* istanbul ignore next */
    cov_267vgkv1vh().s[21]++;
    if (
    /* istanbul ignore next */
    (cov_267vgkv1vh().b[4][0]++, driverError) ||
    /* istanbul ignore next */
    (cov_267vgkv1vh().b[4][1]++, !driver)) {
      /* istanbul ignore next */
      cov_267vgkv1vh().b[3][0]++;
      cov_267vgkv1vh().s[22]++;
      return _server.NextResponse.json({
        error: 'Driver no encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_267vgkv1vh().b[3][1]++;
    }
    // Preparar datos de ubicaciÃ³n
    const locationData =
    /* istanbul ignore next */
    (cov_267vgkv1vh().s[23]++, {
      lat: location.lat,
      lng: location.lng,
      timestamp: new Date().toISOString(),
      speed:
      /* istanbul ignore next */
      (cov_267vgkv1vh().b[5][0]++, speed) ||
      /* istanbul ignore next */
      (cov_267vgkv1vh().b[5][1]++, 0),
      heading:
      /* istanbul ignore next */
      (cov_267vgkv1vh().b[6][0]++, heading) ||
      /* istanbul ignore next */
      (cov_267vgkv1vh().b[6][1]++, 0),
      accuracy:
      /* istanbul ignore next */
      (cov_267vgkv1vh().b[7][0]++, accuracy) ||
      /* istanbul ignore next */
      (cov_267vgkv1vh().b[7][1]++, 0)
    });
    // Actualizar ubicaciÃ³n del driver
    const {
      data: updatedDriver,
      error: updateError
    } =
    /* istanbul ignore next */
    (cov_267vgkv1vh().s[24]++, await supabase.from('drivers').update({
      current_location: locationData,
      updated_at: new Date().toISOString()
    }).eq('id', driver.id).select().single());
    /* istanbul ignore next */
    cov_267vgkv1vh().s[25]++;
    if (updateError) {
      /* istanbul ignore next */
      cov_267vgkv1vh().b[8][0]++;
      cov_267vgkv1vh().s[26]++;
      console.error('Error updating driver location:', updateError);
      /* istanbul ignore next */
      cov_267vgkv1vh().s[27]++;
      return _server.NextResponse.json({
        error: 'Error actualizando ubicaciÃ³n'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_267vgkv1vh().b[8][1]++;
    }
    // Opcional: Guardar historial de ubicaciones para tracking
    cov_267vgkv1vh().s[28]++;
    try {
      /* istanbul ignore next */
      cov_267vgkv1vh().s[29]++;
      await supabase.from('driver_location_history').insert({
        driver_id: driver.id,
        location: locationData,
        created_at: new Date().toISOString()
      });
    } catch (historyError) {
      /* istanbul ignore next */
      cov_267vgkv1vh().s[30]++;
      // No fallar si no se puede guardar el historial
      console.warn('Could not save location history:', historyError);
    }
    // Si el driver estÃ¡ en una ruta activa, verificar proximidad a destinos
    /* istanbul ignore next */
    cov_267vgkv1vh().s[31]++;
    if (driver.status === 'busy') {
      /* istanbul ignore next */
      cov_267vgkv1vh().b[9][0]++;
      cov_267vgkv1vh().s[32]++;
      await checkProximityToDestinations(driver.id, location);
    } else
    /* istanbul ignore next */
    {
      cov_267vgkv1vh().b[9][1]++;
    }
    cov_267vgkv1vh().s[33]++;
    return _server.NextResponse.json({
      success: true,
      location: locationData,
      driver: {
        id: updatedDriver.id,
        status: updatedDriver.status,
        current_location: updatedDriver.current_location
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_267vgkv1vh().s[34]++;
    console.error('Error in driver location API:', error);
    /* istanbul ignore next */
    cov_267vgkv1vh().s[35]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_267vgkv1vh().f[5]++;
  cov_267vgkv1vh().s[36]++;
  try {
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_267vgkv1vh().s[37]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_267vgkv1vh().s[38]++;
    if (!session?.user?.email) {
      /* istanbul ignore next */
      cov_267vgkv1vh().b[10][0]++;
      cov_267vgkv1vh().s[39]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_267vgkv1vh().b[10][1]++;
    }
    const supabase =
    /* istanbul ignore next */
    (cov_267vgkv1vh().s[40]++, await (0, _server1.createClient)());
    // Obtener ubicaciÃ³n actual del driver
    const {
      data: driver,
      error: driverError
    } =
    /* istanbul ignore next */
    (cov_267vgkv1vh().s[41]++, await supabase.from('drivers').select('id, current_location, status, updated_at').eq('email', session.user.email).single());
    /* istanbul ignore next */
    cov_267vgkv1vh().s[42]++;
    if (
    /* istanbul ignore next */
    (cov_267vgkv1vh().b[12][0]++, driverError) ||
    /* istanbul ignore next */
    (cov_267vgkv1vh().b[12][1]++, !driver)) {
      /* istanbul ignore next */
      cov_267vgkv1vh().b[11][0]++;
      cov_267vgkv1vh().s[43]++;
      return _server.NextResponse.json({
        error: 'Driver no encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_267vgkv1vh().b[11][1]++;
    }
    cov_267vgkv1vh().s[44]++;
    return _server.NextResponse.json({
      location: driver.current_location,
      status: driver.status,
      last_updated: driver.updated_at
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_267vgkv1vh().s[45]++;
    console.error('Error getting driver location:', error);
    /* istanbul ignore next */
    cov_267vgkv1vh().s[46]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
/**
 * FunciÃ³n helper para verificar proximidad a destinos de entrega
 */
async function checkProximityToDestinations(driverId, currentLocation) {
  /* istanbul ignore next */
  cov_267vgkv1vh().f[6]++;
  cov_267vgkv1vh().s[47]++;
  try {
    const supabase =
    /* istanbul ignore next */
    (cov_267vgkv1vh().s[48]++, await (0, _server1.createClient)());
    // Obtener rutas activas del driver
    const {
      data: activeRoutes,
      error
    } =
    /* istanbul ignore next */
    (cov_267vgkv1vh().s[49]++, await supabase.from('optimized_routes').select('*').eq('driver_id', driverId).eq('status', 'active'));
    /* istanbul ignore next */
    cov_267vgkv1vh().s[50]++;
    if (
    /* istanbul ignore next */
    (cov_267vgkv1vh().b[14][0]++, error) ||
    /* istanbul ignore next */
    (cov_267vgkv1vh().b[14][1]++, !activeRoutes?.length)) {
      /* istanbul ignore next */
      cov_267vgkv1vh().b[13][0]++;
      cov_267vgkv1vh().s[51]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_267vgkv1vh().b[13][1]++;
    }
    // Verificar proximidad a cada destino
    cov_267vgkv1vh().s[52]++;
    for (const route of activeRoutes) {
      /* istanbul ignore next */
      cov_267vgkv1vh().s[53]++;
      if (!route.shipments) {
        /* istanbul ignore next */
        cov_267vgkv1vh().b[15][0]++;
        cov_267vgkv1vh().s[54]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_267vgkv1vh().b[15][1]++;
      }
      cov_267vgkv1vh().s[55]++;
      for (let i =
      /* istanbul ignore next */
      (cov_267vgkv1vh().s[56]++, 0); i < route.shipments.length; i++) {
        const shipment =
        /* istanbul ignore next */
        (cov_267vgkv1vh().s[57]++, route.shipments[i]);
        /* istanbul ignore next */
        cov_267vgkv1vh().s[58]++;
        if (shipment.status === 'delivered') {
          /* istanbul ignore next */
          cov_267vgkv1vh().b[16][0]++;
          cov_267vgkv1vh().s[59]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_267vgkv1vh().b[16][1]++;
        }
        const destination =
        /* istanbul ignore next */
        (cov_267vgkv1vh().s[60]++, shipment.destination?.coordinates);
        /* istanbul ignore next */
        cov_267vgkv1vh().s[61]++;
        if (!destination) {
          /* istanbul ignore next */
          cov_267vgkv1vh().b[17][0]++;
          cov_267vgkv1vh().s[62]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_267vgkv1vh().b[17][1]++;
        }
        const distance =
        /* istanbul ignore next */
        (cov_267vgkv1vh().s[63]++, calculateDistance(currentLocation, destination));
        // Si estÃ¡ a menos de 100 metros del destino
        /* istanbul ignore next */
        cov_267vgkv1vh().s[64]++;
        if (distance < 100) {
          /* istanbul ignore next */
          cov_267vgkv1vh().b[18][0]++;
          cov_267vgkv1vh().s[65]++;
          // Opcional: Enviar notificaciÃ³n o actualizar estado
          console.log(`Driver ${driverId} is near delivery destination: ${shipment.customer_name}`);
          // AquÃ­ se podrÃ­a implementar:
          // - NotificaciÃ³n push al cliente
          // - ActualizaciÃ³n automÃ¡tica de estado
          // - Alerta al dashboard administrativo
        } else
        /* istanbul ignore next */
        {
          cov_267vgkv1vh().b[18][1]++;
        }
      }
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_267vgkv1vh().s[66]++;
    console.error('Error checking proximity:', error);
  }
}
/**
 * Calcular distancia entre dos puntos en metros
 */
function calculateDistance(point1, point2) {
  /* istanbul ignore next */
  cov_267vgkv1vh().f[7]++;
  const R =
  /* istanbul ignore next */
  (cov_267vgkv1vh().s[67]++, 6371000); // Radio de la Tierra en metros
  const dLat =
  /* istanbul ignore next */
  (cov_267vgkv1vh().s[68]++, (point2.lat - point1.lat) * Math.PI / 180);
  const dLon =
  /* istanbul ignore next */
  (cov_267vgkv1vh().s[69]++, (point2.lng - point1.lng) * Math.PI / 180);
  const a =
  /* istanbul ignore next */
  (cov_267vgkv1vh().s[70]++, Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(point1.lat * Math.PI / 180) * Math.cos(point2.lat * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2));
  const c =
  /* istanbul ignore next */
  (cov_267vgkv1vh().s[71]++, 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)));
  /* istanbul ignore next */
  cov_267vgkv1vh().s[72]++;
  return R * c;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,