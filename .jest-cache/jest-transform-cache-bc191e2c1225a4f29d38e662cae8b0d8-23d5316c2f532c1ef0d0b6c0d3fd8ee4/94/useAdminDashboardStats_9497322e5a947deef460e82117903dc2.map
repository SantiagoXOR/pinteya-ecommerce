{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useAdminDashboardStats.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useSession } from 'next-auth/react';\r\n\r\ninterface DashboardStats {\r\n  totalProducts: number;\r\n  activeProducts: number;\r\n  lowStockProducts: number;\r\n  noStockProducts: number;\r\n  totalOrders: number;\r\n  pendingOrders: number;\r\n  completedOrders: number;\r\n  totalRevenue: number;\r\n  todayRevenue: number;\r\n  totalUsers: number;\r\n  activeUsers: number;\r\n}\r\n\r\ninterface QuickStat {\r\n  title: string;\r\n  value: string;\r\n  change: string;\r\n  changeType: 'positive' | 'negative' | 'neutral';\r\n  icon: any;\r\n}\r\n\r\nexport function useAdminDashboardStats() {\r\n  const [stats, setStats] = useState<DashboardStats | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const { data: session } = useSession();\r\n\r\n  useEffect(() => {\r\n    fetchDashboardStats();\r\n  }, []);\r\n\r\n  const fetchDashboardStats = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // NextAuth.js maneja las cookies de sesión automáticamente\r\n      // No necesitamos obtener token manualmente\r\n\r\n      // Hacer requests paralelos a diferentes APIs (con manejo de errores individual)\r\n      const [productsResponse, ordersResponse, usersResponse] = await Promise.allSettled([\r\n        fetch('/api/admin/products/stats', {\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        }),\r\n        fetch('/api/admin/orders/stats', {\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        }),\r\n        fetch('/api/admin/users/stats', {\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        })\r\n      ]);\r\n\r\n      // Procesar respuesta de productos\r\n      let productStats = {\r\n        totalProducts: 0,\r\n        activeProducts: 0,\r\n        lowStockProducts: 0,\r\n        noStockProducts: 0\r\n      };\r\n\r\n      if (productsResponse.status === 'fulfilled' && productsResponse.value.ok) {\r\n        const data = await productsResponse.value.json();\r\n        if (data.success && data.stats) {\r\n          productStats = {\r\n            totalProducts: data.stats.total_products || 0,\r\n            activeProducts: data.stats.active_products || 0,\r\n            lowStockProducts: data.stats.low_stock_products || 0,\r\n            noStockProducts: data.stats.no_stock_products || 0\r\n          };\r\n        }\r\n      }\r\n\r\n      // Procesar respuesta de órdenes (con fallback si no existe la API)\r\n      let orderStats = {\r\n        totalOrders: 0,\r\n        pendingOrders: 0,\r\n        completedOrders: 0,\r\n        totalRevenue: 0,\r\n        todayRevenue: 0\r\n      };\r\n\r\n      if (ordersResponse.status === 'fulfilled' && ordersResponse.value.ok) {\r\n        const data = await ordersResponse.value.json();\r\n        if (data.success && data.stats) {\r\n          orderStats = {\r\n            totalOrders: data.stats.total_orders || 0,\r\n            pendingOrders: data.stats.pending_orders || 0,\r\n            completedOrders: data.stats.completed_orders || 0,\r\n            totalRevenue: data.stats.total_revenue || 0,\r\n            todayRevenue: data.stats.today_revenue || 0\r\n          };\r\n        }\r\n      }\r\n\r\n      // Procesar respuesta de usuarios (con fallback si no existe la API)\r\n      let userStats = {\r\n        totalUsers: 0,\r\n        activeUsers: 0\r\n      };\r\n\r\n      if (usersResponse.status === 'fulfilled' && usersResponse.value.ok) {\r\n        const data = await usersResponse.value.json();\r\n        if (data.success && data.stats) {\r\n          userStats = {\r\n            totalUsers: data.stats.total_users || 0,\r\n            activeUsers: data.stats.active_users || 0\r\n          };\r\n        }\r\n      }\r\n\r\n      // Combinar todas las estadísticas\r\n      const combinedStats: DashboardStats = {\r\n        ...productStats,\r\n        ...orderStats,\r\n        ...userStats\r\n      };\r\n\r\n      setStats(combinedStats);\r\n    } catch (err) {\r\n      console.error('Error fetching dashboard stats:', err);\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n\r\n      // No establecer error inmediatamente, intentar fallback primero\r\n      console.log('Intentando fallback con API pública de productos...');\r\n\r\n      // Fallback: obtener estadísticas básicas directamente de la API pública\r\n      try {\r\n        const response = await fetch('/api/products', {\r\n          credentials: 'include'\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          const products = data.data || [];\r\n\r\n          const totalProducts = products.length;\r\n          const withStock = products.filter((p: any) => p.stock && p.stock > 0).length;\r\n          const lowStock = products.filter((p: any) => p.stock && p.stock > 0 && p.stock <= 10).length;\r\n          const noStock = products.filter((p: any) => !p.stock || p.stock === 0).length;\r\n\r\n          setStats({\r\n            totalProducts,\r\n            activeProducts: withStock,\r\n            lowStockProducts: lowStock,\r\n            noStockProducts: noStock,\r\n            totalOrders: 0,\r\n            pendingOrders: 0,\r\n            completedOrders: 0,\r\n            totalRevenue: 0,\r\n            todayRevenue: 0,\r\n            totalUsers: 0,\r\n            activeUsers: 0\r\n          });\r\n\r\n          // Solo mostrar warning, no error completo\r\n          setError(`Usando datos básicos: ${errorMessage}`);\r\n          console.log('Fallback exitoso con API pública');\r\n        } else {\r\n          console.warn('API pública falló, usando datos estáticos');\r\n          // Fallback final con datos conocidos\r\n          setStats({\r\n            totalProducts: 53,\r\n            activeProducts: 53,\r\n            lowStockProducts: 4,\r\n            noStockProducts: 0,\r\n            totalOrders: 0,\r\n            pendingOrders: 0,\r\n            completedOrders: 0,\r\n            totalRevenue: 0,\r\n            todayRevenue: 0,\r\n            totalUsers: 0,\r\n            activeUsers: 0\r\n          });\r\n          setError(`Usando datos estáticos: ${errorMessage}`);\r\n        }\r\n      } catch (fallbackError) {\r\n        console.error('Error en fallback:', fallbackError);\r\n        // Fallback final con datos estáticos\r\n        setStats({\r\n          totalProducts: 53,\r\n          activeProducts: 53,\r\n          lowStockProducts: 4,\r\n          noStockProducts: 0,\r\n          totalOrders: 0,\r\n          pendingOrders: 0,\r\n          completedOrders: 0,\r\n          totalRevenue: 0,\r\n          todayRevenue: 0,\r\n          totalUsers: 0,\r\n          activeUsers: 0\r\n        });\r\n        setError(`Fallback completo falló: ${errorMessage}`);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatCurrency = (amount: number): string => {\r\n    return new Intl.NumberFormat('es-AR', {\r\n      style: 'currency',\r\n      currency: 'ARS',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0\r\n    }).format(amount);\r\n  };\r\n\r\n  const calculateChange = (current: number, previous: number): { value: string; type: 'positive' | 'negative' | 'neutral' } => {\r\n    if (previous === 0) {\r\n      return { value: '+100%', type: 'positive' };\r\n    }\r\n    \r\n    const change = ((current - previous) / previous) * 100;\r\n    const absChange = Math.abs(change);\r\n    \r\n    if (absChange < 1) {\r\n      return { value: '0%', type: 'neutral' };\r\n    }\r\n    \r\n    return {\r\n      value: `${change > 0 ? '+' : ''}${change.toFixed(1)}%`,\r\n      type: change > 0 ? 'positive' : 'negative'\r\n    };\r\n  };\r\n\r\n  return {\r\n    stats,\r\n    loading,\r\n    error,\r\n    refetch: fetchDashboardStats,\r\n    formatCurrency,\r\n    calculateChange\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["useAdminDashboardStats","stats","setStats","useState","loading","setLoading","error","setError","data","session","useSession","useEffect","fetchDashboardStats","productsResponse","ordersResponse","usersResponse","Promise","allSettled","fetch","headers","credentials","productStats","totalProducts","activeProducts","lowStockProducts","noStockProducts","status","value","ok","json","success","total_products","active_products","low_stock_products","no_stock_products","orderStats","totalOrders","pendingOrders","completedOrders","totalRevenue","todayRevenue","total_orders","pending_orders","completed_orders","total_revenue","today_revenue","userStats","totalUsers","activeUsers","total_users","active_users","combinedStats","err","console","errorMessage","Error","message","log","response","products","length","withStock","filter","p","stock","lowStock","noStock","warn","fallbackError","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","calculateChange","current","previous","type","change","absChange","Math","abs","toFixed","refetch"],"mappings":"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"}