3ddcaa9cce5acb74d0997ebce0596d7a
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get Input () {
        return Input;
    },
    get inputVariants () {
        return inputVariants;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _classvarianceauthority = require("class-variance-authority");
const _utils = require("../../lib/utils");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const inputVariants = (0, _classvarianceauthority.cva)('flex w-full rounded-md border bg-white px-3 py-2 text-sm transition-all duration-200 file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-gray-500 focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50', {
    variants: {
        variant: {
            default: 'border-gray-300 focus-visible:border-primary focus-visible:ring-2 focus-visible:ring-primary/20',
            error: 'border-error focus-visible:border-error focus-visible:ring-2 focus-visible:ring-error/20',
            success: 'border-success focus-visible:border-success focus-visible:ring-2 focus-visible:ring-success/20'
        },
        size: {
            sm: 'h-8 px-2 text-xs',
            md: 'h-9 px-3 text-sm',
            lg: 'h-10 px-4 text-base'
        }
    },
    defaultVariants: {
        variant: 'default',
        size: 'md'
    }
});
const Input = /*#__PURE__*/ _react.forwardRef(({ className, variant, size, type = 'text', label, error, helperText, leftIcon, rightIcon, onRightIconClick, id, ...props }, ref)=>{
    const generatedId = _react.useId();
    const inputId = id || generatedId;
    const hasError = !!error;
    const finalVariant = hasError ? 'error' : variant;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "w-full",
        children: [
            label && /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                htmlFor: inputId,
                className: "block text-sm font-medium text-gray-700 mb-2",
                children: [
                    label,
                    props.required && /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                        className: "text-error ml-1",
                        children: "*"
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "relative",
                children: [
                    leftIcon && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "absolute left-3 top-1/2 -translate-y-1/2 text-gray-400",
                        children: leftIcon
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                        type: type,
                        className: (0, _utils.cn)(inputVariants({
                            variant: finalVariant,
                            size
                        }), leftIcon && 'pl-10', rightIcon && 'pr-10', className),
                        ref: ref,
                        id: inputId,
                        ...props
                    }),
                    rightIcon && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: (0, _utils.cn)('absolute right-3 top-1/2 -translate-y-1/2 text-gray-400', onRightIconClick && 'cursor-pointer hover:text-gray-600'),
                        onClick: onRightIconClick,
                        children: rightIcon
                    })
                ]
            }),
            (error || helperText) && /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                className: (0, _utils.cn)('mt-1 text-xs', error ? 'text-error' : 'text-gray-500'),
                children: error || helperText
            })
        ]
    });
});
Input.displayName = 'Input';

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXHNyY1xcY29tcG9uZW50c1xcdWlcXGlucHV0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IGN2YSwgdHlwZSBWYXJpYW50UHJvcHMgfSBmcm9tICdjbGFzcy12YXJpYW5jZS1hdXRob3JpdHknXG5pbXBvcnQgeyBjbiB9IGZyb20gJ0AvbGliL3V0aWxzJ1xuXG5jb25zdCBpbnB1dFZhcmlhbnRzID0gY3ZhKFxuICAnZmxleCB3LWZ1bGwgcm91bmRlZC1tZCBib3JkZXIgYmctd2hpdGUgcHgtMyBweS0yIHRleHQtc20gdHJhbnNpdGlvbi1hbGwgZHVyYXRpb24tMjAwIGZpbGU6Ym9yZGVyLTAgZmlsZTpiZy10cmFuc3BhcmVudCBmaWxlOnRleHQtc20gZmlsZTpmb250LW1lZGl1bSBwbGFjZWhvbGRlcjp0ZXh0LWdyYXktNTAwIGZvY3VzLXZpc2libGU6b3V0bGluZS1ub25lIGRpc2FibGVkOmN1cnNvci1ub3QtYWxsb3dlZCBkaXNhYmxlZDpvcGFjaXR5LTUwJyxcbiAge1xuICAgIHZhcmlhbnRzOiB7XG4gICAgICB2YXJpYW50OiB7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgJ2JvcmRlci1ncmF5LTMwMCBmb2N1cy12aXNpYmxlOmJvcmRlci1wcmltYXJ5IGZvY3VzLXZpc2libGU6cmluZy0yIGZvY3VzLXZpc2libGU6cmluZy1wcmltYXJ5LzIwJyxcbiAgICAgICAgZXJyb3I6XG4gICAgICAgICAgJ2JvcmRlci1lcnJvciBmb2N1cy12aXNpYmxlOmJvcmRlci1lcnJvciBmb2N1cy12aXNpYmxlOnJpbmctMiBmb2N1cy12aXNpYmxlOnJpbmctZXJyb3IvMjAnLFxuICAgICAgICBzdWNjZXNzOlxuICAgICAgICAgICdib3JkZXItc3VjY2VzcyBmb2N1cy12aXNpYmxlOmJvcmRlci1zdWNjZXNzIGZvY3VzLXZpc2libGU6cmluZy0yIGZvY3VzLXZpc2libGU6cmluZy1zdWNjZXNzLzIwJyxcbiAgICAgIH0sXG4gICAgICBzaXplOiB7XG4gICAgICAgIHNtOiAnaC04IHB4LTIgdGV4dC14cycsXG4gICAgICAgIG1kOiAnaC05IHB4LTMgdGV4dC1zbScsXG4gICAgICAgIGxnOiAnaC0xMCBweC00IHRleHQtYmFzZScsXG4gICAgICB9LFxuICAgIH0sXG4gICAgZGVmYXVsdFZhcmlhbnRzOiB7XG4gICAgICB2YXJpYW50OiAnZGVmYXVsdCcsXG4gICAgICBzaXplOiAnbWQnLFxuICAgIH0sXG4gIH1cbilcblxuZXhwb3J0IGludGVyZmFjZSBJbnB1dFByb3BzXG4gIGV4dGVuZHMgT21pdDxSZWFjdC5JbnB1dEhUTUxBdHRyaWJ1dGVzPEhUTUxJbnB1dEVsZW1lbnQ+LCAnc2l6ZSc+LFxuICAgIFZhcmlhbnRQcm9wczx0eXBlb2YgaW5wdXRWYXJpYW50cz4ge1xuICBsYWJlbD86IHN0cmluZ1xuICBlcnJvcj86IHN0cmluZ1xuICBoZWxwZXJUZXh0Pzogc3RyaW5nXG4gIGxlZnRJY29uPzogUmVhY3QuUmVhY3ROb2RlXG4gIHJpZ2h0SWNvbj86IFJlYWN0LlJlYWN0Tm9kZVxuICBvblJpZ2h0SWNvbkNsaWNrPzogKCkgPT4gdm9pZFxufVxuXG5jb25zdCBJbnB1dCA9IFJlYWN0LmZvcndhcmRSZWY8SFRNTElucHV0RWxlbWVudCwgSW5wdXRQcm9wcz4oXG4gIChcbiAgICB7XG4gICAgICBjbGFzc05hbWUsXG4gICAgICB2YXJpYW50LFxuICAgICAgc2l6ZSxcbiAgICAgIHR5cGUgPSAndGV4dCcsXG4gICAgICBsYWJlbCxcbiAgICAgIGVycm9yLFxuICAgICAgaGVscGVyVGV4dCxcbiAgICAgIGxlZnRJY29uLFxuICAgICAgcmlnaHRJY29uLFxuICAgICAgb25SaWdodEljb25DbGljayxcbiAgICAgIGlkLFxuICAgICAgLi4ucHJvcHNcbiAgICB9LFxuICAgIHJlZlxuICApID0+IHtcbiAgICBjb25zdCBnZW5lcmF0ZWRJZCA9IFJlYWN0LnVzZUlkKClcbiAgICBjb25zdCBpbnB1dElkID0gaWQgfHwgZ2VuZXJhdGVkSWRcbiAgICBjb25zdCBoYXNFcnJvciA9ICEhZXJyb3JcbiAgICBjb25zdCBmaW5hbFZhcmlhbnQgPSBoYXNFcnJvciA/ICdlcnJvcicgOiB2YXJpYW50XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9J3ctZnVsbCc+XG4gICAgICAgIHtsYWJlbCAmJiAoXG4gICAgICAgICAgPGxhYmVsIGh0bWxGb3I9e2lucHV0SWR9IGNsYXNzTmFtZT0nYmxvY2sgdGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LWdyYXktNzAwIG1iLTInPlxuICAgICAgICAgICAge2xhYmVsfVxuICAgICAgICAgICAge3Byb3BzLnJlcXVpcmVkICYmIDxzcGFuIGNsYXNzTmFtZT0ndGV4dC1lcnJvciBtbC0xJz4qPC9zcGFuPn1cbiAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICApfVxuXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdyZWxhdGl2ZSc+XG4gICAgICAgICAge2xlZnRJY29uICYmIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdhYnNvbHV0ZSBsZWZ0LTMgdG9wLTEvMiAtdHJhbnNsYXRlLXktMS8yIHRleHQtZ3JheS00MDAnPntsZWZ0SWNvbn08L2Rpdj5cbiAgICAgICAgICApfVxuXG4gICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICB0eXBlPXt0eXBlfVxuICAgICAgICAgICAgY2xhc3NOYW1lPXtjbihcbiAgICAgICAgICAgICAgaW5wdXRWYXJpYW50cyh7IHZhcmlhbnQ6IGZpbmFsVmFyaWFudCwgc2l6ZSB9KSxcbiAgICAgICAgICAgICAgbGVmdEljb24gJiYgJ3BsLTEwJyxcbiAgICAgICAgICAgICAgcmlnaHRJY29uICYmICdwci0xMCcsXG4gICAgICAgICAgICAgIGNsYXNzTmFtZVxuICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIHJlZj17cmVmfVxuICAgICAgICAgICAgaWQ9e2lucHV0SWR9XG4gICAgICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgICAgLz5cblxuICAgICAgICAgIHtyaWdodEljb24gJiYgKFxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBjbGFzc05hbWU9e2NuKFxuICAgICAgICAgICAgICAgICdhYnNvbHV0ZSByaWdodC0zIHRvcC0xLzIgLXRyYW5zbGF0ZS15LTEvMiB0ZXh0LWdyYXktNDAwJyxcbiAgICAgICAgICAgICAgICBvblJpZ2h0SWNvbkNsaWNrICYmICdjdXJzb3ItcG9pbnRlciBob3Zlcjp0ZXh0LWdyYXktNjAwJ1xuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICBvbkNsaWNrPXtvblJpZ2h0SWNvbkNsaWNrfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7cmlnaHRJY29ufVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgeyhlcnJvciB8fCBoZWxwZXJUZXh0KSAmJiAoXG4gICAgICAgICAgPHAgY2xhc3NOYW1lPXtjbignbXQtMSB0ZXh0LXhzJywgZXJyb3IgPyAndGV4dC1lcnJvcicgOiAndGV4dC1ncmF5LTUwMCcpfT5cbiAgICAgICAgICAgIHtlcnJvciB8fCBoZWxwZXJUZXh0fVxuICAgICAgICAgIDwvcD5cbiAgICAgICAgKX1cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxuKVxuSW5wdXQuZGlzcGxheU5hbWUgPSAnSW5wdXQnXG5cbmV4cG9ydCB7IElucHV0LCBpbnB1dFZhcmlhbnRzIH1cbiJdLCJuYW1lcyI6WyJJbnB1dCIsImlucHV0VmFyaWFudHMiLCJjdmEiLCJ2YXJpYW50cyIsInZhcmlhbnQiLCJkZWZhdWx0IiwiZXJyb3IiLCJzdWNjZXNzIiwic2l6ZSIsInNtIiwibWQiLCJsZyIsImRlZmF1bHRWYXJpYW50cyIsIlJlYWN0IiwiZm9yd2FyZFJlZiIsImNsYXNzTmFtZSIsInR5cGUiLCJsYWJlbCIsImhlbHBlclRleHQiLCJsZWZ0SWNvbiIsInJpZ2h0SWNvbiIsIm9uUmlnaHRJY29uQ2xpY2siLCJpZCIsInByb3BzIiwicmVmIiwiZ2VuZXJhdGVkSWQiLCJ1c2VJZCIsImlucHV0SWQiLCJoYXNFcnJvciIsImZpbmFsVmFyaWFudCIsImRpdiIsImh0bWxGb3IiLCJyZXF1aXJlZCIsInNwYW4iLCJpbnB1dCIsImNuIiwib25DbGljayIsInAiLCJkaXNwbGF5TmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7UUFrSFNBO2VBQUFBOztRQUFPQztlQUFBQTs7OzsrREFsSE87d0NBQ2dCO3VCQUNwQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRW5CLE1BQU1BLGdCQUFnQkMsSUFBQUEsMkJBQUcsRUFDdkIsNlBBQ0E7SUFDRUMsVUFBVTtRQUNSQyxTQUFTO1lBQ1BDLFNBQ0U7WUFDRkMsT0FDRTtZQUNGQyxTQUNFO1FBQ0o7UUFDQUMsTUFBTTtZQUNKQyxJQUFJO1lBQ0pDLElBQUk7WUFDSkMsSUFBSTtRQUNOO0lBQ0Y7SUFDQUMsaUJBQWlCO1FBQ2ZSLFNBQVM7UUFDVEksTUFBTTtJQUNSO0FBQ0Y7QUFjRixNQUFNUixzQkFBUWEsT0FBTUMsVUFBVSxDQUM1QixDQUNFLEVBQ0VDLFNBQVMsRUFDVFgsT0FBTyxFQUNQSSxJQUFJLEVBQ0pRLE9BQU8sTUFBTSxFQUNiQyxLQUFLLEVBQ0xYLEtBQUssRUFDTFksVUFBVSxFQUNWQyxRQUFRLEVBQ1JDLFNBQVMsRUFDVEMsZ0JBQWdCLEVBQ2hCQyxFQUFFLEVBQ0YsR0FBR0MsT0FDSixFQUNEQztJQUVBLE1BQU1DLGNBQWNaLE9BQU1hLEtBQUs7SUFDL0IsTUFBTUMsVUFBVUwsTUFBTUc7SUFDdEIsTUFBTUcsV0FBVyxDQUFDLENBQUN0QjtJQUNuQixNQUFNdUIsZUFBZUQsV0FBVyxVQUFVeEI7SUFFMUMscUJBQ0Usc0JBQUMwQjtRQUFJZixXQUFVOztZQUNaRSx1QkFDQyxzQkFBQ0E7Z0JBQU1jLFNBQVNKO2dCQUFTWixXQUFVOztvQkFDaENFO29CQUNBTSxNQUFNUyxRQUFRLGtCQUFJLHFCQUFDQzt3QkFBS2xCLFdBQVU7a0NBQWtCOzs7OzBCQUl6RCxzQkFBQ2U7Z0JBQUlmLFdBQVU7O29CQUNaSSwwQkFDQyxxQkFBQ1c7d0JBQUlmLFdBQVU7a0NBQTBESTs7a0NBRzNFLHFCQUFDZTt3QkFDQ2xCLE1BQU1BO3dCQUNORCxXQUFXb0IsSUFBQUEsU0FBRSxFQUNYbEMsY0FBYzs0QkFBRUcsU0FBU3lCOzRCQUFjckI7d0JBQUssSUFDNUNXLFlBQVksU0FDWkMsYUFBYSxTQUNiTDt3QkFFRlMsS0FBS0E7d0JBQ0xGLElBQUlLO3dCQUNILEdBQUdKLEtBQUs7O29CQUdWSCwyQkFDQyxxQkFBQ1U7d0JBQ0NmLFdBQVdvQixJQUFBQSxTQUFFLEVBQ1gsMkRBQ0FkLG9CQUFvQjt3QkFFdEJlLFNBQVNmO2tDQUVSRDs7OztZQUtMZCxDQUFBQSxTQUFTWSxVQUFTLG1CQUNsQixxQkFBQ21CO2dCQUFFdEIsV0FBV29CLElBQUFBLFNBQUUsRUFBQyxnQkFBZ0I3QixRQUFRLGVBQWU7MEJBQ3JEQSxTQUFTWTs7OztBQUtwQjtBQUVGbEIsTUFBTXNDLFdBQVcsR0FBRyJ9