aa4860a5ab7f3ff10cd4e64f7c60f3f2
// Configuraci√≥n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_1dq142u8lm() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\users\\stats\\route.ts";
  var hash = "a81c5acdb4a8fd0ecd63f6007da142065ec2d1f4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\users\\stats\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 19
        },
        end: {
          line: 21,
          column: 64
        }
      },
      "8": {
        start: {
          line: 22,
          column: 18
        },
        end: {
          line: 22,
          column: 69
        }
      },
      "9": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 24
        }
      },
      "10": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "11": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 27,
          column: 67
        }
      },
      "12": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "13": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 33,
          column: 15
        }
      },
      "14": {
        start: {
          line: 36,
          column: 55
        },
        end: {
          line: 52,
          column: 10
        }
      },
      "15": {
        start: {
          line: 53,
          column: 22
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "16": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 63,
          column: 11
        }
      },
      "17": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 75
        }
      },
      "18": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 77,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 18
          }
        },
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 79,
            column: 1
          }
        },
        line: 24
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 41
          }
        }, {
          start: {
            line: 32,
            column: 45
          },
          end: {
            line: 32,
            column: 48
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 54,
            column: 25
          },
          end: {
            line: 54,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 25
          },
          end: {
            line: 54,
            column: 42
          }
        }, {
          start: {
            line: 54,
            column: 46
          },
          end: {
            line: 54,
            column: 47
          }
        }],
        line: 54
      },
      "3": {
        loc: {
          start: {
            line: 55,
            column: 26
          },
          end: {
            line: 55,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 26
          },
          end: {
            line: 55,
            column: 44
          }
        }, {
          start: {
            line: 55,
            column: 48
          },
          end: {
            line: 55,
            column: 49
          }
        }],
        line: 55
      },
      "4": {
        loc: {
          start: {
            line: 56,
            column: 23
          },
          end: {
            line: 56,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 23
          },
          end: {
            line: 56,
            column: 38
          }
        }, {
          start: {
            line: 56,
            column: 42
          },
          end: {
            line: 56,
            column: 43
          }
        }],
        line: 56
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\users\\stats\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { requireAdminAuth } from '@/lib/auth/admin-auth';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\n\r\n/**\r\n * GET /api/admin/users/stats\r\n * Obtener estad\xEDsticas de usuarios desde Supabase\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n y permisos de admin\r\n    const authResult = await requireAdminAuth();\r\n\r\n    if (!authResult.success) {\r\n      return NextResponse.json(\r\n        { error: authResult.error },\r\n        { status: authResult.status || 401 }\r\n      );\r\n    }\r\n\r\n    // Obtener estad\xEDsticas de usuarios\r\n    const [totalResult, activeResult, newResult] = await Promise.all([\r\n      // Total de usuarios\r\n      supabaseAdmin.from('users').select('id', { count: 'exact', head: true }),\r\n      // Usuarios activos (con sesiones recientes)\r\n      supabaseAdmin.from('users').select('id', { count: 'exact', head: true })\r\n        .gte('last_sign_in_at', new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString()),\r\n      // Usuarios nuevos (\xFAltimos 7 d\xEDas)\r\n      supabaseAdmin.from('users').select('id', { count: 'exact', head: true })\r\n        .gte('created_at', new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString())\r\n    ]);\r\n\r\n    const stats = {\r\n      total_users: totalResult.count || 0,\r\n      active_users: activeResult.count || 0,\r\n      new_users: newResult.count || 0,\r\n      growth_rate: 0 // Placeholder para c\xE1lculo de crecimiento\r\n    };\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: stats,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error obteniendo estad\xEDsticas de usuarios:', error);\r\n    \r\n    return NextResponse.json(\r\n      { \r\n        success: false,\r\n        error: 'Error interno del servidor',\r\n        data: {\r\n          total_users: 0,\r\n          active_users: 0,\r\n          new_users: 0,\r\n          growth_rate: 0\r\n        }\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "runtime", "request", "authResult", "requireAdminAuth", "success", "NextResponse", "json", "error", "status", "totalResult", "activeResult", "newResult", "Promise", "all", "supabaseAdmin", "from", "select", "count", "head", "gte", "Date", "now", "toISOString", "stats", "total_users", "active_users", "new_users", "growth_rate", "data", "timestamp", "console"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QAWfA;eAAAA;;QAVTC;eAAAA;;;wBAE6B;2BACT;0BACH;AAJvB,MAAMA,UAAU;AAUhB,eAAeD,IAAIE,OAAoB;IAC5C,IAAI;QACF,8CAA8C;QAC9C,MAAMC,aAAa,MAAMC,IAAAA,2BAAgB;QAEzC,IAAI,CAACD,WAAWE,OAAO,EAAE;YACvB,OAAOC,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAOL,WAAWK,KAAK;YAAC,GAC1B;gBAAEC,QAAQN,WAAWM,MAAM,IAAI;YAAI;QAEvC;QAEA,mCAAmC;QACnC,MAAM,CAACC,aAAaC,cAAcC,UAAU,GAAG,MAAMC,QAAQC,GAAG,CAAC;YAC/D,oBAAoB;YACpBC,uBAAa,CAACC,IAAI,CAAC,SAASC,MAAM,CAAC,MAAM;gBAAEC,OAAO;gBAASC,MAAM;YAAK;YACtE,4CAA4C;YAC5CJ,uBAAa,CAACC,IAAI,CAAC,SAASC,MAAM,CAAC,MAAM;gBAAEC,OAAO;gBAASC,MAAM;YAAK,GACnEC,GAAG,CAAC,mBAAmB,IAAIC,KAAKA,KAAKC,GAAG,KAAK,KAAK,KAAK,KAAK,KAAK,MAAMC,WAAW;YACrF,mCAAmC;YACnCR,uBAAa,CAACC,IAAI,CAAC,SAASC,MAAM,CAAC,MAAM;gBAAEC,OAAO;gBAASC,MAAM;YAAK,GACnEC,GAAG,CAAC,cAAc,IAAIC,KAAKA,KAAKC,GAAG,KAAK,IAAI,KAAK,KAAK,KAAK,MAAMC,WAAW;SAChF;QAED,MAAMC,QAAQ;YACZC,aAAaf,YAAYQ,KAAK,IAAI;YAClCQ,cAAcf,aAAaO,KAAK,IAAI;YACpCS,WAAWf,UAAUM,KAAK,IAAI;YAC9BU,aAAa,EAAE,0CAA0C;QAC3D;QAEA,OAAOtB,oBAAY,CAACC,IAAI,CAAC;YACvBF,SAAS;YACTwB,MAAML;YACNM,WAAW,IAAIT,OAAOE,WAAW;QACnC;IAEF,EAAE,OAAOf,OAAO;QACduB,QAAQvB,KAAK,CAAC,8CAA8CA;QAE5D,OAAOF,oBAAY,CAACC,IAAI,CACtB;YACEF,SAAS;YACTG,OAAO;YACPqB,MAAM;gBACJJ,aAAa;gBACbC,cAAc;gBACdC,WAAW;gBACXC,aAAa;YACf;QACF,GACA;YAAEnB,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a81c5acdb4a8fd0ecd63f6007da142065ec2d1f4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1dq142u8lm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1dq142u8lm();
cov_1dq142u8lm().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1dq142u8lm().f[0]++;
  cov_1dq142u8lm().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1dq142u8lm().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1dq142u8lm().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_1dq142u8lm().f[1]++;
    cov_1dq142u8lm().s[4]++;
    return GET;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_1dq142u8lm().f[2]++;
    cov_1dq142u8lm().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_1dq142u8lm().s[6]++, require("next/server"));
const _adminauth =
/* istanbul ignore next */
(cov_1dq142u8lm().s[7]++, require("../../../../../lib/auth/admin-auth"));
const _supabase =
/* istanbul ignore next */
(cov_1dq142u8lm().s[8]++, require("../../../../../lib/integrations/supabase"));
const runtime =
/* istanbul ignore next */
(cov_1dq142u8lm().s[9]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_1dq142u8lm().f[3]++;
  cov_1dq142u8lm().s[10]++;
  try {
    // Verificar autenticaci√≥n y permisos de admin
    const authResult =
    /* istanbul ignore next */
    (cov_1dq142u8lm().s[11]++, await (0, _adminauth.requireAdminAuth)());
    /* istanbul ignore next */
    cov_1dq142u8lm().s[12]++;
    if (!authResult.success) {
      /* istanbul ignore next */
      cov_1dq142u8lm().b[0][0]++;
      cov_1dq142u8lm().s[13]++;
      return _server.NextResponse.json({
        error: authResult.error
      }, {
        status:
        /* istanbul ignore next */
        (cov_1dq142u8lm().b[1][0]++, authResult.status) ||
        /* istanbul ignore next */
        (cov_1dq142u8lm().b[1][1]++, 401)
      });
    } else
    /* istanbul ignore next */
    {
      cov_1dq142u8lm().b[0][1]++;
    }
    // Obtener estad√≠sticas de usuarios
    const [totalResult, activeResult, newResult] =
    /* istanbul ignore next */
    (cov_1dq142u8lm().s[14]++, await Promise.all([
    // Total de usuarios
    _supabase.supabaseAdmin.from('users').select('id', {
      count: 'exact',
      head: true
    }),
    // Usuarios activos (con sesiones recientes)
    _supabase.supabaseAdmin.from('users').select('id', {
      count: 'exact',
      head: true
    }).gte('last_sign_in_at', new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString()),
    // Usuarios nuevos (√∫ltimos 7 d√≠as)
    _supabase.supabaseAdmin.from('users').select('id', {
      count: 'exact',
      head: true
    }).gte('created_at', new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString())]));
    const stats =
    /* istanbul ignore next */
    (cov_1dq142u8lm().s[15]++, {
      total_users:
      /* istanbul ignore next */
      (cov_1dq142u8lm().b[2][0]++, totalResult.count) ||
      /* istanbul ignore next */
      (cov_1dq142u8lm().b[2][1]++, 0),
      active_users:
      /* istanbul ignore next */
      (cov_1dq142u8lm().b[3][0]++, activeResult.count) ||
      /* istanbul ignore next */
      (cov_1dq142u8lm().b[3][1]++, 0),
      new_users:
      /* istanbul ignore next */
      (cov_1dq142u8lm().b[4][0]++, newResult.count) ||
      /* istanbul ignore next */
      (cov_1dq142u8lm().b[4][1]++, 0),
      growth_rate: 0 // Placeholder para c√°lculo de crecimiento
    });
    /* istanbul ignore next */
    cov_1dq142u8lm().s[16]++;
    return _server.NextResponse.json({
      success: true,
      data: stats,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1dq142u8lm().s[17]++;
    console.error('Error obteniendo estad√≠sticas de usuarios:', error);
    /* istanbul ignore next */
    cov_1dq142u8lm().s[18]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor',
      data: {
        total_users: 0,
        active_users: 0,
        new_users: 0,
        growth_rate: 0
      }
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWRxMTQydThsbSIsImFjdHVhbENvdmVyYWdlIiwicyIsIkdFVCIsImYiLCJydW50aW1lIiwicmVxdWVzdCIsImF1dGhSZXN1bHQiLCJfYWRtaW5hdXRoIiwicmVxdWlyZUFkbWluQXV0aCIsInN1Y2Nlc3MiLCJiIiwiX3NlcnZlciIsIk5leHRSZXNwb25zZSIsImpzb24iLCJlcnJvciIsInN0YXR1cyIsInRvdGFsUmVzdWx0IiwiYWN0aXZlUmVzdWx0IiwibmV3UmVzdWx0IiwiUHJvbWlzZSIsImFsbCIsIl9zdXBhYmFzZSIsInN1cGFiYXNlQWRtaW4iLCJmcm9tIiwic2VsZWN0IiwiY291bnQiLCJoZWFkIiwiZ3RlIiwiRGF0ZSIsIm5vdyIsInRvSVNPU3RyaW5nIiwic3RhdHMiLCJ0b3RhbF91c2VycyIsImFjdGl2ZV91c2VycyIsIm5ld191c2VycyIsImdyb3d0aF9yYXRlIiwiZGF0YSIsInRpbWVzdGFtcCIsImNvbnNvbGUiXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXG1hcnRpXFxEZXNrdG9wXFxERVNBUlJPTExPU1dcXEJPSUxFUlBMQVRURSBFLUNPTU1FUkNFXFxzcmNcXGFwcFxcYXBpXFxhZG1pblxcdXNlcnNcXHN0YXRzXFxyb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb25maWd1cmFjacOzbiBwYXJhIE5vZGUuanMgUnVudGltZVxyXG5leHBvcnQgY29uc3QgcnVudGltZSA9ICdub2RlanMnO1xyXG5cclxuaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcclxuaW1wb3J0IHsgcmVxdWlyZUFkbWluQXV0aCB9IGZyb20gJ0AvbGliL2F1dGgvYWRtaW4tYXV0aCc7XHJcbmltcG9ydCB7IHN1cGFiYXNlQWRtaW4gfSBmcm9tICdAL2xpYi9pbnRlZ3JhdGlvbnMvc3VwYWJhc2UnO1xyXG5cclxuLyoqXHJcbiAqIEdFVCAvYXBpL2FkbWluL3VzZXJzL3N0YXRzXHJcbiAqIE9idGVuZXIgZXN0YWTDrXN0aWNhcyBkZSB1c3VhcmlvcyBkZXNkZSBTdXBhYmFzZVxyXG4gKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xyXG4gIHRyeSB7XHJcbiAgICAvLyBWZXJpZmljYXIgYXV0ZW50aWNhY2nDs24geSBwZXJtaXNvcyBkZSBhZG1pblxyXG4gICAgY29uc3QgYXV0aFJlc3VsdCA9IGF3YWl0IHJlcXVpcmVBZG1pbkF1dGgoKTtcclxuXHJcbiAgICBpZiAoIWF1dGhSZXN1bHQuc3VjY2Vzcykge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgICAgeyBlcnJvcjogYXV0aFJlc3VsdC5lcnJvciB9LFxyXG4gICAgICAgIHsgc3RhdHVzOiBhdXRoUmVzdWx0LnN0YXR1cyB8fCA0MDEgfVxyXG4gICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIE9idGVuZXIgZXN0YWTDrXN0aWNhcyBkZSB1c3Vhcmlvc1xyXG4gICAgY29uc3QgW3RvdGFsUmVzdWx0LCBhY3RpdmVSZXN1bHQsIG5ld1Jlc3VsdF0gPSBhd2FpdCBQcm9taXNlLmFsbChbXHJcbiAgICAgIC8vIFRvdGFsIGRlIHVzdWFyaW9zXHJcbiAgICAgIHN1cGFiYXNlQWRtaW4uZnJvbSgndXNlcnMnKS5zZWxlY3QoJ2lkJywgeyBjb3VudDogJ2V4YWN0JywgaGVhZDogdHJ1ZSB9KSxcclxuICAgICAgLy8gVXN1YXJpb3MgYWN0aXZvcyAoY29uIHNlc2lvbmVzIHJlY2llbnRlcylcclxuICAgICAgc3VwYWJhc2VBZG1pbi5mcm9tKCd1c2VycycpLnNlbGVjdCgnaWQnLCB7IGNvdW50OiAnZXhhY3QnLCBoZWFkOiB0cnVlIH0pXHJcbiAgICAgICAgLmd0ZSgnbGFzdF9zaWduX2luX2F0JywgbmV3IERhdGUoRGF0ZS5ub3coKSAtIDMwICogMjQgKiA2MCAqIDYwICogMTAwMCkudG9JU09TdHJpbmcoKSksXHJcbiAgICAgIC8vIFVzdWFyaW9zIG51ZXZvcyAow7psdGltb3MgNyBkw61hcylcclxuICAgICAgc3VwYWJhc2VBZG1pbi5mcm9tKCd1c2VycycpLnNlbGVjdCgnaWQnLCB7IGNvdW50OiAnZXhhY3QnLCBoZWFkOiB0cnVlIH0pXHJcbiAgICAgICAgLmd0ZSgnY3JlYXRlZF9hdCcsIG5ldyBEYXRlKERhdGUubm93KCkgLSA3ICogMjQgKiA2MCAqIDYwICogMTAwMCkudG9JU09TdHJpbmcoKSlcclxuICAgIF0pO1xyXG5cclxuICAgIGNvbnN0IHN0YXRzID0ge1xyXG4gICAgICB0b3RhbF91c2VyczogdG90YWxSZXN1bHQuY291bnQgfHwgMCxcclxuICAgICAgYWN0aXZlX3VzZXJzOiBhY3RpdmVSZXN1bHQuY291bnQgfHwgMCxcclxuICAgICAgbmV3X3VzZXJzOiBuZXdSZXN1bHQuY291bnQgfHwgMCxcclxuICAgICAgZ3Jvd3RoX3JhdGU6IDAgLy8gUGxhY2Vob2xkZXIgcGFyYSBjw6FsY3VsbyBkZSBjcmVjaW1pZW50b1xyXG4gICAgfTtcclxuXHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICBzdWNjZXNzOiB0cnVlLFxyXG4gICAgICBkYXRhOiBzdGF0cyxcclxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcclxuICAgIH0pO1xyXG5cclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3Igb2J0ZW5pZW5kbyBlc3RhZMOtc3RpY2FzIGRlIHVzdWFyaW9zOicsIGVycm9yKTtcclxuICAgIFxyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICB7IFxyXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgIGVycm9yOiAnRXJyb3IgaW50ZXJubyBkZWwgc2Vydmlkb3InLFxyXG4gICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgIHRvdGFsX3VzZXJzOiAwLFxyXG4gICAgICAgICAgYWN0aXZlX3VzZXJzOiAwLFxyXG4gICAgICAgICAgbmV3X3VzZXJzOiAwLFxyXG4gICAgICAgICAgZ3Jvd3RoX3JhdGU6IDBcclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBQ2E7SUFBQUEsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsY0FBQTtBQUFBQSxjQUFBLEdBQUFFLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O01BVVNDLElBQUE7SUFBQTtJQUFBSCxjQUFBLEdBQUFJLENBQUE7SUFBQUosY0FBQSxHQUFBRSxDQUFBO1dBQUFDLEdB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