d57a119c7c7226fe00b57a4902bca2e2
// =====================================================
// HOOK: TRACKING EVENTS ENTERPRISE
// DescripciÃ³n: Hook para gestiÃ³n de eventos de tracking tiempo real
// Basado en: Patrones TanStack Query + WebSocket simulation
// =====================================================
'use client';
"use strict";

/* istanbul ignore next */
function cov_1jg2gi6udf() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useTrackingEvents.ts";
  var hash = "d002d6cddeead88a251446b01a58dea81d64867a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useTrackingEvents.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "1": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 15,
          column: 7
        }
      },
      "2": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 15,
          column: 7
        }
      },
      "3": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 36,
          column: 3
        }
      },
      "4": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 37
        }
      },
      "5": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "6": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 35
        }
      },
      "7": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 36
        }
      },
      "8": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 33
        }
      },
      "9": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 35
        }
      },
      "10": {
        start: {
          line: 37,
          column: 20
        },
        end: {
          line: 37,
          column: 52
        }
      },
      "11": {
        start: {
          line: 38,
          column: 15
        },
        end: {
          line: 38,
          column: 31
        }
      },
      "12": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 33
        }
      },
      "13": {
        start: {
          line: 43,
          column: 27
        },
        end: {
          line: 47,
          column: 1
        }
      },
      "14": {
        start: {
          line: 48,
          column: 35
        },
        end: {
          line: 48,
          column: 40
        }
      },
      "15": {
        start: {
          line: 53,
          column: 21
        },
        end: {
          line: 58,
          column: 6
        }
      },
      "16": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "17": {
        start: {
          line: 60,
          column: 26
        },
        end: {
          line: 60,
          column: 63
        }
      },
      "18": {
        start: {
          line: 60,
          column: 59
        },
        end: {
          line: 60,
          column: 61
        }
      },
      "19": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 94
        }
      },
      "20": {
        start: {
          line: 63,
          column: 19
        },
        end: {
          line: 63,
          column: 40
        }
      },
      "21": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 23
        }
      },
      "22": {
        start: {
          line: 67,
          column: 21
        },
        end: {
          line: 73,
          column: 6
        }
      },
      "23": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 77,
          column: 5
        }
      },
      "24": {
        start: {
          line: 75,
          column: 26
        },
        end: {
          line: 75,
          column: 63
        }
      },
      "25": {
        start: {
          line: 75,
          column: 59
        },
        end: {
          line: 75,
          column: 61
        }
      },
      "26": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 94
        }
      },
      "27": {
        start: {
          line: 78,
          column: 19
        },
        end: {
          line: 78,
          column: 40
        }
      },
      "28": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 79,
          column: 23
        }
      },
      "29": {
        start: {
          line: 82,
          column: 21
        },
        end: {
          line: 90,
          column: 6
        }
      },
      "30": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "31": {
        start: {
          line: 92,
          column: 26
        },
        end: {
          line: 92,
          column: 63
        }
      },
      "32": {
        start: {
          line: 92,
          column: 59
        },
        end: {
          line: 92,
          column: 61
        }
      },
      "33": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 94
        }
      },
      "34": {
        start: {
          line: 95,
          column: 19
        },
        end: {
          line: 95,
          column: 40
        }
      },
      "35": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 96,
          column: 23
        }
      },
      "36": {
        start: {
          line: 99,
          column: 24
        },
        end: {
          line: 99,
          column: 57
        }
      },
      "37": {
        start: {
          line: 100,
          column: 21
        },
        end: {
          line: 103,
          column: 5
        }
      },
      "38": {
        start: {
          line: 104,
          column: 48
        },
        end: {
          line: 112,
          column: 6
        }
      },
      "39": {
        start: {
          line: 106,
          column: 21
        },
        end: {
          line: 106,
          column: 52
        }
      },
      "40": {
        start: {
          line: 111,
          column: 36
        },
        end: {
          line: 111,
          column: 77
        }
      },
      "41": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 119,
          column: 6
        }
      },
      "42": {
        start: {
          line: 122,
          column: 24
        },
        end: {
          line: 122,
          column: 57
        }
      },
      "43": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 167,
          column: 7
        }
      },
      "44": {
        start: {
          line: 124,
          column: 28
        },
        end: {
          line: 124,
          column: 65
        }
      },
      "45": {
        start: {
          line: 127,
          column: 29
        },
        end: {
          line: 130,
          column: 13
        }
      },
      "46": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 142,
          column: 15
        }
      },
      "47": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 134,
          column: 17
        }
      },
      "48": {
        start: {
          line: 133,
          column: 20
        },
        end: {
          line: 133,
          column: 35
        }
      },
      "49": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 141,
          column: 18
        }
      },
      "50": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 150,
          column: 15
        }
      },
      "51": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 157,
          column: 15
        }
      },
      "52": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 160,
          column: 15
        }
      },
      "53": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 165,
          column: 15
        }
      },
      "54": {
        start: {
          line: 170,
          column: 24
        },
        end: {
          line: 170,
          column: 57
        }
      },
      "55": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 213,
          column: 7
        }
      },
      "56": {
        start: {
          line: 172,
          column: 30
        },
        end: {
          line: 172,
          column: 74
        }
      },
      "57": {
        start: {
          line: 175,
          column: 29
        },
        end: {
          line: 178,
          column: 13
        }
      },
      "58": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 190,
          column: 15
        }
      },
      "59": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 182,
          column: 17
        }
      },
      "60": {
        start: {
          line: 181,
          column: 20
        },
        end: {
          line: 181,
          column: 35
        }
      },
      "61": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 189,
          column: 18
        }
      },
      "62": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 198,
          column: 15
        }
      },
      "63": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 205,
          column: 15
        }
      },
      "64": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 88
        }
      },
      "65": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 211,
          column: 15
        }
      },
      "66": {
        start: {
          line: 216,
          column: 57
        },
        end: {
          line: 218,
          column: 6
        }
      },
      "67": {
        start: {
          line: 220,
          column: 27
        },
        end: {
          line: 225,
          column: 101
        }
      },
      "68": {
        start: {
          line: 220,
          column: 49
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "69": {
        start: {
          line: 225,
          column: 25
        },
        end: {
          line: 225,
          column: 94
        }
      },
      "70": {
        start: {
          line: 227,
          column: 26
        },
        end: {
          line: 227,
          column: 42
        }
      },
      "71": {
        start: {
          line: 228,
          column: 22
        },
        end: {
          line: 228,
          column: 63
        }
      },
      "72": {
        start: {
          line: 230,
          column: 27
        },
        end: {
          line: 261,
          column: 5
        }
      },
      "73": {
        start: {
          line: 262,
          column: 27
        },
        end: {
          line: 275,
          column: 6
        }
      },
      "74": {
        start: {
          line: 263,
          column: 25
        },
        end: {
          line: 263,
          column: 84
        }
      },
      "75": {
        start: {
          line: 263,
          column: 54
        },
        end: {
          line: 263,
          column: 83
        }
      },
      "76": {
        start: {
          line: 264,
          column: 26
        },
        end: {
          line: 264,
          column: 56
        }
      },
      "77": {
        start: {
          line: 265,
          column: 28
        },
        end: {
          line: 265,
          column: 50
        }
      },
      "78": {
        start: {
          line: 266,
          column: 26
        },
        end: {
          line: 266,
          column: 49
        }
      },
      "79": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 274,
          column: 10
        }
      },
      "80": {
        start: {
          line: 273,
          column: 48
        },
        end: {
          line: 273,
          column: 77
        }
      },
      "81": {
        start: {
          line: 276,
          column: 4
        },
        end: {
          line: 289,
          column: 6
        }
      },
      "82": {
        start: {
          line: 285,
          column: 54
        },
        end: {
          line: 285,
          column: 71
        }
      },
      "83": {
        start: {
          line: 287,
          column: 55
        },
        end: {
          line: 287,
          column: 72
        }
      },
      "84": {
        start: {
          line: 292,
          column: 54
        },
        end: {
          line: 292,
          column: 81
        }
      },
      "85": {
        start: {
          line: 293,
          column: 40
        },
        end: {
          line: 293,
          column: 66
        }
      },
      "86": {
        start: {
          line: 294,
          column: 38
        },
        end: {
          line: 297,
          column: 6
        }
      },
      "87": {
        start: {
          line: 299,
          column: 4
        },
        end: {
          line: 305,
          column: 7
        }
      },
      "88": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 302,
          column: 9
        }
      },
      "89": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 38
        }
      },
      "90": {
        start: {
          line: 306,
          column: 27
        },
        end: {
          line: 309,
          column: 10
        }
      },
      "91": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 35
        }
      },
      "92": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 63
        }
      },
      "93": {
        start: {
          line: 310,
          column: 28
        },
        end: {
          line: 313,
          column: 10
        }
      },
      "94": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 311,
          column: 36
        }
      },
      "95": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 312,
          column: 66
        }
      },
      "96": {
        start: {
          line: 314,
          column: 25
        },
        end: {
          line: 320,
          column: 6
        }
      },
      "97": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 315,
          column: 24
        }
      },
      "98": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 316,
          column: 34
        }
      },
      "99": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 317,
          column: 54
        }
      },
      "100": {
        start: {
          line: 321,
          column: 4
        },
        end: {
          line: 328,
          column: 6
        }
      },
      "101": {
        start: {
          line: 331,
          column: 39
        },
        end: {
          line: 331,
          column: 68
        }
      },
      "102": {
        start: {
          line: 332,
          column: 4
        },
        end: {
          line: 334,
          column: 5
        }
      },
      "103": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 20
        }
      },
      "104": {
        start: {
          line: 336,
          column: 24
        },
        end: {
          line: 336,
          column: 37
        }
      },
      "105": {
        start: {
          line: 337,
          column: 28
        },
        end: {
          line: 339,
          column: 12
        }
      },
      "106": {
        start: {
          line: 338,
          column: 35
        },
        end: {
          line: 338,
          column: 45
        }
      },
      "107": {
        start: {
          line: 341,
          column: 23
        },
        end: {
          line: 341,
          column: 93
        }
      },
      "108": {
        start: {
          line: 341,
          column: 39
        },
        end: {
          line: 341,
          column: 72
        }
      },
      "109": {
        start: {
          line: 341,
          column: 87
        },
        end: {
          line: 341,
          column: 92
        }
      },
      "110": {
        start: {
          line: 342,
          column: 37
        },
        end: {
          line: 344,
          column: 39
        }
      },
      "111": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 343,
          column: 48
        }
      },
      "112": {
        start: {
          line: 346,
          column: 23
        },
        end: {
          line: 346,
          column: 48
        }
      },
      "113": {
        start: {
          line: 347,
          column: 22
        },
        end: {
          line: 347,
          column: 31
        }
      },
      "114": {
        start: {
          line: 348,
          column: 29
        },
        end: {
          line: 348,
          column: 145
        }
      },
      "115": {
        start: {
          line: 350,
          column: 31
        },
        end: {
          line: 350,
          column: 76
        }
      },
      "116": {
        start: {
          line: 350,
          column: 50
        },
        end: {
          line: 350,
          column: 75
        }
      },
      "117": {
        start: {
          line: 351,
          column: 23
        },
        end: {
          line: 351,
          column: 24
        }
      },
      "118": {
        start: {
          line: 352,
          column: 4
        },
        end: {
          line: 356,
          column: 5
        }
      },
      "119": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 355,
          column: 79
        }
      },
      "120": {
        start: {
          line: 357,
          column: 4
        },
        end: {
          line: 365,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 16
          }
        },
        loc: {
          start: {
            line: 11,
            column: 30
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 33
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 34
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 31
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 32
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 29
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 31
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "7": {
        name: "fetchTrackingEvents",
        decl: {
          start: {
            line: 52,
            column: 15
          },
          end: {
            line: 52,
            column: 34
          }
        },
        loc: {
          start: {
            line: 52,
            column: 47
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 52
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 60,
            column: 54
          },
          end: {
            line: 60,
            column: 55
          }
        },
        loc: {
          start: {
            line: 60,
            column: 59
          },
          end: {
            line: 60,
            column: 61
          }
        },
        line: 60
      },
      "9": {
        name: "createTrackingEvent",
        decl: {
          start: {
            line: 66,
            column: 15
          },
          end: {
            line: 66,
            column: 34
          }
        },
        loc: {
          start: {
            line: 66,
            column: 53
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 66
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 75,
            column: 54
          },
          end: {
            line: 75,
            column: 55
          }
        },
        loc: {
          start: {
            line: 75,
            column: 59
          },
          end: {
            line: 75,
            column: 61
          }
        },
        line: 75
      },
      "11": {
        name: "bulkCreateTrackingEvents",
        decl: {
          start: {
            line: 81,
            column: 15
          },
          end: {
            line: 81,
            column: 39
          }
        },
        loc: {
          start: {
            line: 81,
            column: 60
          },
          end: {
            line: 97,
            column: 1
          }
        },
        line: 81
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 92,
            column: 54
          },
          end: {
            line: 92,
            column: 55
          }
        },
        loc: {
          start: {
            line: 92,
            column: 59
          },
          end: {
            line: 92,
            column: 61
          }
        },
        line: 92
      },
      "13": {
        name: "useTrackingEvents",
        decl: {
          start: {
            line: 98,
            column: 9
          },
          end: {
            line: 98,
            column: 26
          }
        },
        loc: {
          start: {
            line: 98,
            column: 48
          },
          end: {
            line: 120,
            column: 1
          }
        },
        line: 98
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 106,
            column: 17
          },
          end: {
            line: 106,
            column: 18
          }
        },
        loc: {
          start: {
            line: 106,
            column: 21
          },
          end: {
            line: 106,
            column: 52
          }
        },
        line: 106
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 111,
            column: 20
          },
          end: {
            line: 111,
            column: 21
          }
        },
        loc: {
          start: {
            line: 111,
            column: 36
          },
          end: {
            line: 111,
            column: 77
          }
        },
        line: 111
      },
      "16": {
        name: "useCreateTrackingEvent",
        decl: {
          start: {
            line: 121,
            column: 9
          },
          end: {
            line: 121,
            column: 31
          }
        },
        loc: {
          start: {
            line: 121,
            column: 44
          },
          end: {
            line: 168,
            column: 1
          }
        },
        line: 121
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 124,
            column: 20
          },
          end: {
            line: 124,
            column: 21
          }
        },
        loc: {
          start: {
            line: 124,
            column: 28
          },
          end: {
            line: 124,
            column: 65
          }
        },
        line: 124
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 125,
            column: 19
          },
          end: {
            line: 125,
            column: 20
          }
        },
        loc: {
          start: {
            line: 125,
            column: 31
          },
          end: {
            line: 161,
            column: 9
          }
        },
        line: 125
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 131,
            column: 47
          },
          end: {
            line: 131,
            column: 48
          }
        },
        loc: {
          start: {
            line: 131,
            column: 58
          },
          end: {
            line: 142,
            column: 13
          }
        },
        line: 131
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 162,
            column: 17
          },
          end: {
            line: 162,
            column: 18
          }
        },
        loc: {
          start: {
            line: 162,
            column: 26
          },
          end: {
            line: 166,
            column: 9
          }
        },
        line: 162
      },
      "21": {
        name: "useBulkTrackingEvents",
        decl: {
          start: {
            line: 169,
            column: 9
          },
          end: {
            line: 169,
            column: 30
          }
        },
        loc: {
          start: {
            line: 169,
            column: 43
          },
          end: {
            line: 214,
            column: 1
          }
        },
        line: 169
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 172,
            column: 20
          },
          end: {
            line: 172,
            column: 21
          }
        },
        loc: {
          start: {
            line: 172,
            column: 30
          },
          end: {
            line: 172,
            column: 74
          }
        },
        line: 172
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 173,
            column: 19
          },
          end: {
            line: 173,
            column: 20
          }
        },
        loc: {
          start: {
            line: 173,
            column: 32
          },
          end: {
            line: 207,
            column: 9
          }
        },
        line: 173
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 179,
            column: 47
          },
          end: {
            line: 179,
            column: 48
          }
        },
        loc: {
          start: {
            line: 179,
            column: 58
          },
          end: {
            line: 190,
            column: 13
          }
        },
        line: 179
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 208,
            column: 17
          },
          end: {
            line: 208,
            column: 18
          }
        },
        loc: {
          start: {
            line: 208,
            column: 26
          },
          end: {
            line: 212,
            column: 9
          }
        },
        line: 208
      },
      "26": {
        name: "useTrackingTimeline",
        decl: {
          start: {
            line: 215,
            column: 9
          },
          end: {
            line: 215,
            column: 28
          }
        },
        loc: {
          start: {
            line: 215,
            column: 41
          },
          end: {
            line: 290,
            column: 1
          }
        },
        line: 215
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 220,
            column: 39
          },
          end: {
            line: 220,
            column: 40
          }
        },
        loc: {
          start: {
            line: 220,
            column: 49
          },
          end: {
            line: 225,
            column: 9
          }
        },
        line: 220
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 225,
            column: 17
          },
          end: {
            line: 225,
            column: 18
          }
        },
        loc: {
          start: {
            line: 225,
            column: 25
          },
          end: {
            line: 225,
            column: 94
          }
        },
        line: 225
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 262,
            column: 46
          },
          end: {
            line: 262,
            column: 47
          }
        },
        loc: {
          start: {
            line: 262,
            column: 55
          },
          end: {
            line: 275,
            column: 5
          }
        },
        line: 262
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 263,
            column: 45
          },
          end: {
            line: 263,
            column: 46
          }
        },
        loc: {
          start: {
            line: 263,
            column: 54
          },
          end: {
            line: 263,
            column: 83
          }
        },
        line: 263
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 273,
            column: 39
          },
          end: {
            line: 273,
            column: 40
          }
        },
        loc: {
          start: {
            line: 273,
            column: 48
          },
          end: {
            line: 273,
            column: 77
          }
        },
        line: 273
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 285,
            column: 45
          },
          end: {
            line: 285,
            column: 46
          }
        },
        loc: {
          start: {
            line: 285,
            column: 54
          },
          end: {
            line: 285,
            column: 71
          }
        },
        line: 285
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 287,
            column: 46
          },
          end: {
            line: 287,
            column: 47
          }
        },
        loc: {
          start: {
            line: 287,
            column: 55
          },
          end: {
            line: 287,
            column: 72
          }
        },
        line: 287
      },
      "34": {
        name: "useRealTimeTracking",
        decl: {
          start: {
            line: 291,
            column: 9
          },
          end: {
            line: 291,
            column: 28
          }
        },
        loc: {
          start: {
            line: 291,
            column: 41
          },
          end: {
            line: 329,
            column: 1
          }
        },
        line: 291
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 299,
            column: 26
          },
          end: {
            line: 299,
            column: 27
          }
        },
        loc: {
          start: {
            line: 299,
            column: 30
          },
          end: {
            line: 303,
            column: 5
          }
        },
        line: 299
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 306,
            column: 51
          },
          end: {
            line: 306,
            column: 52
          }
        },
        loc: {
          start: {
            line: 306,
            column: 55
          },
          end: {
            line: 309,
            column: 5
          }
        },
        line: 306
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 310,
            column: 52
          },
          end: {
            line: 310,
            column: 53
          }
        },
        loc: {
          start: {
            line: 310,
            column: 56
          },
          end: {
            line: 313,
            column: 5
          }
        },
        line: 310
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 314,
            column: 49
          },
          end: {
            line: 314,
            column: 50
          }
        },
        loc: {
          start: {
            line: 314,
            column: 59
          },
          end: {
            line: 318,
            column: 5
          }
        },
        line: 314
      },
      "39": {
        name: "useTrackingAnalytics",
        decl: {
          start: {
            line: 330,
            column: 9
          },
          end: {
            line: 330,
            column: 29
          }
        },
        loc: {
          start: {
            line: 330,
            column: 42
          },
          end: {
            line: 366,
            column: 1
          }
        },
        line: 330
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 338,
            column: 30
          },
          end: {
            line: 338,
            column: 31
          }
        },
        loc: {
          start: {
            line: 338,
            column: 35
          },
          end: {
            line: 338,
            column: 45
          }
        },
        line: 338
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 341,
            column: 34
          },
          end: {
            line: 341,
            column: 35
          }
        },
        loc: {
          start: {
            line: 341,
            column: 39
          },
          end: {
            line: 341,
            column: 72
          }
        },
        line: 341
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 341,
            column: 79
          },
          end: {
            line: 341,
            column: 80
          }
        },
        loc: {
          start: {
            line: 341,
            column: 87
          },
          end: {
            line: 341,
            column: 92
          }
        },
        line: 341
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 342,
            column: 88
          },
          end: {
            line: 342,
            column: 89
          }
        },
        loc: {
          start: {
            line: 342,
            column: 108
          },
          end: {
            line: 344,
            column: 5
          }
        },
        line: 342
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 350,
            column: 45
          },
          end: {
            line: 350,
            column: 46
          }
        },
        loc: {
          start: {
            line: 350,
            column: 50
          },
          end: {
            line: 350,
            column: 75
          }
        },
        line: 350
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "1": {
        loc: {
          start: {
            line: 61,
            column: 24
          },
          end: {
            line: 61,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 24
          },
          end: {
            line: 61,
            column: 39
          }
        }, {
          start: {
            line: 61,
            column: 43
          },
          end: {
            line: 61,
            column: 92
          }
        }],
        line: 61
      },
      "2": {
        loc: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 77,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 77,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "3": {
        loc: {
          start: {
            line: 76,
            column: 24
          },
          end: {
            line: 76,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 24
          },
          end: {
            line: 76,
            column: 39
          }
        }, {
          start: {
            line: 76,
            column: 43
          },
          end: {
            line: 76,
            column: 92
          }
        }],
        line: 76
      },
      "4": {
        loc: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "5": {
        loc: {
          start: {
            line: 93,
            column: 24
          },
          end: {
            line: 93,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 24
          },
          end: {
            line: 93,
            column: 39
          }
        }, {
          start: {
            line: 93,
            column: 43
          },
          end: {
            line: 93,
            column: 92
          }
        }],
        line: 93
      },
      "6": {
        loc: {
          start: {
            line: 107,
            column: 17
          },
          end: {
            line: 107,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 17
          },
          end: {
            line: 107,
            column: 33
          }
        }, {
          start: {
            line: 107,
            column: 37
          },
          end: {
            line: 107,
            column: 41
          }
        }],
        line: 107
      },
      "7": {
        loc: {
          start: {
            line: 108,
            column: 25
          },
          end: {
            line: 108,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 108,
            column: 45
          },
          end: {
            line: 108,
            column: 99
          }
        }, {
          start: {
            line: 108,
            column: 102
          },
          end: {
            line: 108,
            column: 107
          }
        }],
        line: 108
      },
      "8": {
        loc: {
          start: {
            line: 108,
            column: 45
          },
          end: {
            line: 108,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 45
          },
          end: {
            line: 108,
            column: 69
          }
        }, {
          start: {
            line: 108,
            column: 73
          },
          end: {
            line: 108,
            column: 99
          }
        }],
        line: 108
      },
      "9": {
        loc: {
          start: {
            line: 109,
            column: 19
          },
          end: {
            line: 109,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 109,
            column: 39
          },
          end: {
            line: 109,
            column: 44
          }
        }, {
          start: {
            line: 109,
            column: 47
          },
          end: {
            line: 109,
            column: 52
          }
        }],
        line: 109
      },
      "10": {
        loc: {
          start: {
            line: 132,
            column: 16
          },
          end: {
            line: 134,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 16
          },
          end: {
            line: 134,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "11": {
        loc: {
          start: {
            line: 180,
            column: 16
          },
          end: {
            line: 182,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 16
          },
          end: {
            line: 182,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "12": {
        loc: {
          start: {
            line: 220,
            column: 27
          },
          end: {
            line: 225,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 220,
            column: 27
          },
          end: {
            line: 225,
            column: 95
          }
        }, {
          start: {
            line: 225,
            column: 99
          },
          end: {
            line: 225,
            column: 101
          }
        }],
        line: 220
      },
      "13": {
        loc: {
          start: {
            line: 265,
            column: 28
          },
          end: {
            line: 265,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 265,
            column: 28
          },
          end: {
            line: 265,
            column: 36
          }
        }, {
          start: {
            line: 265,
            column: 40
          },
          end: {
            line: 265,
            column: 50
          }
        }],
        line: 265
      },
      "14": {
        loc: {
          start: {
            line: 266,
            column: 26
          },
          end: {
            line: 266,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 266,
            column: 26
          },
          end: {
            line: 266,
            column: 35
          }
        }, {
          start: {
            line: 266,
            column: 39
          },
          end: {
            line: 266,
            column: 49
          }
        }],
        line: 266
      },
      "15": {
        loc: {
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "16": {
        loc: {
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 300,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 300,
            column: 18
          }
        }, {
          start: {
            line: 300,
            column: 22
          },
          end: {
            line: 300,
            column: 39
          }
        }],
        line: 300
      },
      "17": {
        loc: {
          start: {
            line: 332,
            column: 4
          },
          end: {
            line: 334,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 4
          },
          end: {
            line: 334,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 332
      },
      "18": {
        loc: {
          start: {
            line: 332,
            column: 8
          },
          end: {
            line: 332,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 332,
            column: 8
          },
          end: {
            line: 332,
            column: 15
          }
        }, {
          start: {
            line: 332,
            column: 19
          },
          end: {
            line: 332,
            column: 28
          }
        }],
        line: 332
      },
      "19": {
        loc: {
          start: {
            line: 342,
            column: 37
          },
          end: {
            line: 344,
            column: 39
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 342,
            column: 61
          },
          end: {
            line: 344,
            column: 35
          }
        }, {
          start: {
            line: 344,
            column: 38
          },
          end: {
            line: 344,
            column: 39
          }
        }],
        line: 342
      },
      "20": {
        loc: {
          start: {
            line: 348,
            column: 29
          },
          end: {
            line: 348,
            column: 145
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 348,
            column: 55
          },
          end: {
            line: 348,
            column: 141
          }
        }, {
          start: {
            line: 348,
            column: 144
          },
          end: {
            line: 348,
            column: 145
          }
        }],
        line: 348
      },
      "21": {
        loc: {
          start: {
            line: 348,
            column: 29
          },
          end: {
            line: 348,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 348,
            column: 29
          },
          end: {
            line: 348,
            column: 39
          }
        }, {
          start: {
            line: 348,
            column: 43
          },
          end: {
            line: 348,
            column: 52
          }
        }],
        line: 348
      },
      "22": {
        loc: {
          start: {
            line: 350,
            column: 50
          },
          end: {
            line: 350,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 350,
            column: 50
          },
          end: {
            line: 350,
            column: 60
          }
        }, {
          start: {
            line: 350,
            column: 64
          },
          end: {
            line: 350,
            column: 75
          }
        }],
        line: 350
      },
      "23": {
        loc: {
          start: {
            line: 352,
            column: 4
          },
          end: {
            line: 356,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 352,
            column: 4
          },
          end: {
            line: 356,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 352
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useTrackingEvents.ts"],
      sourcesContent: ["// =====================================================\r\n// HOOK: TRACKING EVENTS ENTERPRISE\r\n// Descripci\xF3n: Hook para gesti\xF3n de eventos de tracking tiempo real\r\n// Basado en: Patrones TanStack Query + WebSocket simulation\r\n// =====================================================\r\n\r\n'use client';\r\n\r\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { useState, useCallback, useEffect } from 'react';\r\nimport { toast } from 'sonner';\r\nimport { \r\n  TrackingEvent,\r\n  CreateTrackingEventRequest,\r\n  Shipment,\r\n  UseTrackingEventsReturn \r\n} from '@/types/logistics';\r\n\r\n// =====================================================\r\n// CONFIGURACI\xD3N DE QUERIES\r\n// =====================================================\r\n\r\nconst TRACKING_QUERY_KEY = ['admin', 'logistics', 'tracking'];\r\nconst REAL_TIME_REFETCH_INTERVAL = 30000; // 30 segundos\r\n\r\n// =====================================================\r\n// FUNCIONES DE API\r\n// =====================================================\r\n\r\nasync function fetchTrackingEvents(shipmentId: number): Promise<{\r\n  shipment: Shipment;\r\n  tracking_events: TrackingEvent[];\r\n}> {\r\n  const response = await fetch(`/api/admin/logistics/tracking/${shipmentId}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  });\r\n  \r\n  if (!response.ok) {\r\n    const errorData = await response.json().catch(() => ({}));\r\n    throw new Error(errorData.error || `HTTP ${response.status}: ${response.statusText}`);\r\n  }\r\n  \r\n  const result = await response.json();\r\n  return result.data;\r\n}\r\n\r\nasync function createTrackingEvent(\r\n  shipmentId: number, \r\n  data: Omit<CreateTrackingEventRequest, 'shipment_id'>\r\n): Promise<TrackingEvent> {\r\n  const response = await fetch(`/api/admin/logistics/tracking/${shipmentId}`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data)\r\n  });\r\n  \r\n  if (!response.ok) {\r\n    const errorData = await response.json().catch(() => ({}));\r\n    throw new Error(errorData.error || `HTTP ${response.status}: ${response.statusText}`);\r\n  }\r\n  \r\n  const result = await response.json();\r\n  return result.data;\r\n}\r\n\r\nasync function bulkCreateTrackingEvents(\r\n  shipmentId: number,\r\n  events: Omit<CreateTrackingEventRequest, 'shipment_id'>[]\r\n): Promise<TrackingEvent[]> {\r\n  const response = await fetch(`/api/admin/logistics/tracking/${shipmentId}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ events })\r\n  });\r\n  \r\n  if (!response.ok) {\r\n    const errorData = await response.json().catch(() => ({}));\r\n    throw new Error(errorData.error || `HTTP ${response.status}: ${response.statusText}`);\r\n  }\r\n  \r\n  const result = await response.json();\r\n  return result.data;\r\n}\r\n\r\n// =====================================================\r\n// HOOK PRINCIPAL: useTrackingEvents\r\n// =====================================================\r\n\r\nexport function useTrackingEvents(\r\n  shipmentId: number,\r\n  options?: {\r\n    enabled?: boolean;\r\n    refetchInterval?: number;\r\n    realTime?: boolean;\r\n  }\r\n): UseTrackingEventsReturn {\r\n  const queryClient = useQueryClient();\r\n  \r\n  const queryKey = [...TRACKING_QUERY_KEY, shipmentId];\r\n  \r\n  const {\r\n    data,\r\n    isLoading,\r\n    error,\r\n    refetch\r\n  } = useQuery({\r\n    queryKey,\r\n    queryFn: () => fetchTrackingEvents(shipmentId),\r\n    enabled: options?.enabled ?? true,\r\n    refetchInterval: options?.realTime \r\n      ? (options?.refetchInterval ?? REAL_TIME_REFETCH_INTERVAL)\r\n      : false,\r\n    staleTime: options?.realTime ? 10000 : 60000,\r\n    retry: 3,\r\n    retryDelay: (attemptIndex) => Math.min(1000 * 2 ** attemptIndex, 30000)\r\n  });\r\n  \r\n  return {\r\n    data: data?.tracking_events,\r\n    shipment: data?.shipment,\r\n    isLoading,\r\n    error: error as Error | null,\r\n    refetch\r\n  };\r\n}\r\n\r\n// =====================================================\r\n// HOOK: useCreateTrackingEvent\r\n// =====================================================\r\n\r\nexport function useCreateTrackingEvent(shipmentId: number) {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: (data: Omit<CreateTrackingEventRequest, 'shipment_id'>) => \r\n      createTrackingEvent(shipmentId, data),\r\n    onSuccess: (newEvent) => {\r\n      // Actualizar cache de tracking events\r\n      const queryKey = [...TRACKING_QUERY_KEY, shipmentId];\r\n      \r\n      queryClient.setQueryData(queryKey, (oldData: any) => {\r\n        if (!oldData) {return oldData;}\r\n        \r\n        return {\r\n          ...oldData,\r\n          tracking_events: [newEvent, ...oldData.tracking_events]\r\n        };\r\n      });\r\n      \r\n      // Invalidar cache relacionado\r\n      queryClient.invalidateQueries({ queryKey: ['admin', 'logistics', 'shipments'] });\r\n      queryClient.invalidateQueries({ queryKey: ['admin', 'logistics', 'dashboard'] });\r\n      \r\n      toast.success('Evento de tracking agregado', {\r\n        description: newEvent.description\r\n      });\r\n    },\r\n    onError: (error: Error) => {\r\n      toast.error('Error al agregar evento', {\r\n        description: error.message\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\n// =====================================================\r\n// HOOK: useBulkTrackingEvents\r\n// =====================================================\r\n\r\nexport function useBulkTrackingEvents(shipmentId: number) {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: (events: Omit<CreateTrackingEventRequest, 'shipment_id'>[]) => \r\n      bulkCreateTrackingEvents(shipmentId, events),\r\n    onSuccess: (newEvents) => {\r\n      // Actualizar cache\r\n      const queryKey = [...TRACKING_QUERY_KEY, shipmentId];\r\n      \r\n      queryClient.setQueryData(queryKey, (oldData: any) => {\r\n        if (!oldData) {return oldData;}\r\n        \r\n        return {\r\n          ...oldData,\r\n          tracking_events: [...newEvents, ...oldData.tracking_events]\r\n        };\r\n      });\r\n      \r\n      // Invalidar cache relacionado\r\n      queryClient.invalidateQueries({ queryKey: ['admin', 'logistics', 'shipments'] });\r\n      queryClient.invalidateQueries({ queryKey: ['admin', 'logistics', 'dashboard'] });\r\n      \r\n      toast.success(`${newEvents.length} eventos agregados exitosamente`);\r\n    },\r\n    onError: (error: Error) => {\r\n      toast.error('Error al agregar eventos', {\r\n        description: error.message\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\n// =====================================================\r\n// HOOK: useTrackingTimeline\r\n// =====================================================\r\n\r\nexport function useTrackingTimeline(shipmentId: number) {\r\n  const { data: events, shipment, isLoading, error } = useTrackingEvents(shipmentId, {\r\n    realTime: true\r\n  });\r\n  \r\n  // Procesar eventos para timeline\r\n  const timelineEvents = events?.map(event => ({\r\n    ...event,\r\n    isCompleted: true,\r\n    isCurrent: false,\r\n    isPending: false\r\n  })).sort((a, b) => \r\n    new Date(a.occurred_at).getTime() - new Date(b.occurred_at).getTime()\r\n  ) || [];\r\n  \r\n  // Determinar estado actual\r\n  const currentStatus = shipment?.status;\r\n  const lastEvent = timelineEvents[timelineEvents.length - 1];\r\n  \r\n  // Estados esperados del timeline\r\n  const expectedStates = [\r\n    { status: 'pending', label: 'Pendiente', description: 'Env\xEDo creado' },\r\n    { status: 'confirmed', label: 'Confirmado', description: 'Env\xEDo confirmado' },\r\n    { status: 'picked_up', label: 'Recolectado', description: 'Recolectado por courier' },\r\n    { status: 'in_transit', label: 'En tr\xE1nsito', description: 'En camino' },\r\n    { status: 'out_for_delivery', label: 'En reparto', description: 'Sali\xF3 para entrega' },\r\n    { status: 'delivered', label: 'Entregado', description: 'Entregado exitosamente' }\r\n  ];\r\n  \r\n  const timelineStates = expectedStates.map(state => {\r\n    const hasEvent = timelineEvents.some(event => event.status === state.status);\r\n    const isCurrent = currentStatus === state.status;\r\n    const isCompleted = hasEvent && !isCurrent;\r\n    const isPending = !hasEvent && !isCurrent;\r\n    \r\n    return {\r\n      ...state,\r\n      hasEvent,\r\n      isCurrent,\r\n      isCompleted,\r\n      isPending,\r\n      event: timelineEvents.find(event => event.status === state.status)\r\n    };\r\n  });\r\n  \r\n  return {\r\n    events: timelineEvents,\r\n    timelineStates,\r\n    shipment,\r\n    currentStatus,\r\n    lastEvent,\r\n    isLoading,\r\n    error,\r\n    progress: {\r\n      completed: timelineStates.filter(state => state.isCompleted).length,\r\n      total: timelineStates.length,\r\n      percentage: (timelineStates.filter(state => state.isCompleted).length / timelineStates.length) * 100\r\n    }\r\n  };\r\n}\r\n\r\n// =====================================================\r\n// HOOK: useRealTimeTracking\r\n// =====================================================\r\n\r\nexport function useRealTimeTracking(shipmentId: number) {\r\n  const [isRealTimeEnabled, setIsRealTimeEnabled] = useState(false);\r\n  const [lastUpdate, setLastUpdate] = useState<Date | null>(null);\r\n  \r\n  const { data: events, refetch } = useTrackingEvents(shipmentId, {\r\n    realTime: isRealTimeEnabled,\r\n    refetchInterval: 15000 // 15 segundos para tiempo real\r\n  });\r\n  \r\n  // Simular notificaciones de nuevos eventos\r\n  useEffect(() => {\r\n    if (events && events.length > 0) {\r\n      setLastUpdate(new Date());\r\n    }\r\n  }, [events]);\r\n  \r\n  const enableRealTime = useCallback(() => {\r\n    setIsRealTimeEnabled(true);\r\n    toast.info('Tracking en tiempo real activado');\r\n  }, []);\r\n  \r\n  const disableRealTime = useCallback(() => {\r\n    setIsRealTimeEnabled(false);\r\n    toast.info('Tracking en tiempo real desactivado');\r\n  }, []);\r\n  \r\n  const forceRefresh = useCallback(async () => {\r\n    await refetch();\r\n    setLastUpdate(new Date());\r\n    toast.success('Tracking actualizado');\r\n  }, [refetch]);\r\n  \r\n  return {\r\n    events,\r\n    isRealTimeEnabled,\r\n    lastUpdate,\r\n    enableRealTime,\r\n    disableRealTime,\r\n    forceRefresh\r\n  };\r\n}\r\n\r\n// =====================================================\r\n// HOOK: useTrackingAnalytics\r\n// =====================================================\r\n\r\nexport function useTrackingAnalytics(shipmentId: number) {\r\n  const { data: events, shipment } = useTrackingEvents(shipmentId);\r\n  \r\n  if (!events || !shipment) {\r\n    return null;\r\n  }\r\n  \r\n  // Calcular m\xE9tricas\r\n  const totalEvents = events.length;\r\n  const uniqueLocations = [...new Set(events.map(e => e.location).filter(Boolean))].length;\r\n  \r\n  // Tiempo entre eventos\r\n  const eventTimes = events\r\n    .map(e => new Date(e.occurred_at).getTime())\r\n    .sort((a, b) => a - b);\r\n  \r\n  const averageTimeBetweenEvents = eventTimes.length > 1\r\n    ? eventTimes.slice(1).reduce((acc, time, index) => {\r\n        return acc + (time - eventTimes[index]);\r\n      }, 0) / (eventTimes.length - 1)\r\n    : 0;\r\n  \r\n  // Tiempo total de tr\xE1nsito\r\n  const firstEvent = events[events.length - 1]; // M\xE1s antiguo\r\n  const lastEvent = events[0]; // M\xE1s reciente\r\n  \r\n  const totalTransitTime = firstEvent && lastEvent\r\n    ? new Date(lastEvent.occurred_at).getTime() - new Date(firstEvent.occurred_at).getTime()\r\n    : 0;\r\n  \r\n  // Velocidad promedio (si hay ubicaciones)\r\n  const eventsWithLocation = events.filter(e => e.latitude && e.longitude);\r\n  let averageSpeed = 0;\r\n  \r\n  if (eventsWithLocation.length > 1) {\r\n    // Calcular distancia total aproximada entre puntos\r\n    // (implementaci\xF3n simplificada)\r\n    averageSpeed = uniqueLocations / (totalTransitTime / (1000 * 60 * 60)); // km/h aproximado\r\n  }\r\n  \r\n  return {\r\n    totalEvents,\r\n    uniqueLocations,\r\n    averageTimeBetweenEvents: averageTimeBetweenEvents / (1000 * 60), // minutos\r\n    totalTransitTime: totalTransitTime / (1000 * 60 * 60), // horas\r\n    averageSpeed: Math.round(averageSpeed * 10) / 10,\r\n    eventsWithLocation: eventsWithLocation.length,\r\n    locationCoverage: eventsWithLocation.length / totalEvents * 100\r\n  };\r\n}\r\n\r\n// =====================================================\r\n// TIPOS EXTENDIDOS\r\n// =====================================================\r\n\r\nexport interface UseTrackingEventsExtendedReturn extends UseTrackingEventsReturn {\r\n  shipment?: Shipment;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useBulkTrackingEvents", "useCreateTrackingEvent", "useRealTimeTracking", "useTrackingAnalytics", "useTrackingEvents", "useTrackingTimeline", "TRACKING_QUERY_KEY", "REAL_TIME_REFETCH_INTERVAL", "fetchTrackingEvents", "shipmentId", "response", "fetch", "method", "headers", "ok", "errorData", "json", "catch", "Error", "error", "status", "statusText", "result", "data", "createTrackingEvent", "body", "JSON", "stringify", "bulkCreateTrackingEvents", "events", "options", "queryClient", "useQueryClient", "queryKey", "isLoading", "refetch", "useQuery", "queryFn", "enabled", "refetchInterval", "realTime", "staleTime", "retry", "retryDelay", "attemptIndex", "Math", "min", "tracking_events", "shipment", "useMutation", "mutationFn", "onSuccess", "newEvent", "setQueryData", "oldData", "invalidateQueries", "toast", "success", "description", "onError", "message", "newEvents", "length", "timelineEvents", "map", "event", "isCompleted", "isCurrent", "isPending", "sort", "a", "b", "Date", "occurred_at", "getTime", "currentStatus", "lastEvent", "expectedStates", "label", "timelineStates", "state", "hasEvent", "some", "find", "progress", "completed", "filter", "total", "percentage", "isRealTimeEnabled", "setIsRealTimeEnabled", "useState", "lastUpdate", "setLastUpdate", "useEffect", "enableRealTime", "useCallback", "info", "disableRealTime", "forceRefresh", "totalEvents", "uniqueLocations", "Set", "e", "location", "Boolean", "eventTimes", "averageTimeBetweenEvents", "slice", "reduce", "acc", "time", "index", "firstEvent", "totalTransitTime", "eventsWithLocation", "latitude", "longitude", "averageSpeed", "round", "locationCoverage"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d002d6cddeead88a251446b01a58dea81d64867a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1jg2gi6udf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1jg2gi6udf();
cov_1jg2gi6udf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1jg2gi6udf().f[0]++;
  cov_1jg2gi6udf().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1jg2gi6udf().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1jg2gi6udf().s[3]++;
_export(exports, {
  get useBulkTrackingEvents() {
    /* istanbul ignore next */
    cov_1jg2gi6udf().f[1]++;
    cov_1jg2gi6udf().s[4]++;
    return useBulkTrackingEvents;
  },
  get useCreateTrackingEvent() {
    /* istanbul ignore next */
    cov_1jg2gi6udf().f[2]++;
    cov_1jg2gi6udf().s[5]++;
    return useCreateTrackingEvent;
  },
  get useRealTimeTracking() {
    /* istanbul ignore next */
    cov_1jg2gi6udf().f[3]++;
    cov_1jg2gi6udf().s[6]++;
    return useRealTimeTracking;
  },
  get useTrackingAnalytics() {
    /* istanbul ignore next */
    cov_1jg2gi6udf().f[4]++;
    cov_1jg2gi6udf().s[7]++;
    return useTrackingAnalytics;
  },
  get useTrackingEvents() {
    /* istanbul ignore next */
    cov_1jg2gi6udf().f[5]++;
    cov_1jg2gi6udf().s[8]++;
    return useTrackingEvents;
  },
  get useTrackingTimeline() {
    /* istanbul ignore next */
    cov_1jg2gi6udf().f[6]++;
    cov_1jg2gi6udf().s[9]++;
    return useTrackingTimeline;
  }
});
const _reactquery =
/* istanbul ignore next */
(cov_1jg2gi6udf().s[10]++, require("@tanstack/react-query"));
const _react =
/* istanbul ignore next */
(cov_1jg2gi6udf().s[11]++, require("react"));
const _sonner =
/* istanbul ignore next */
(cov_1jg2gi6udf().s[12]++, require("sonner"));
// =====================================================
// CONFIGURACIÃN DE QUERIES
// =====================================================
const TRACKING_QUERY_KEY =
/* istanbul ignore next */
(cov_1jg2gi6udf().s[13]++, ['admin', 'logistics', 'tracking']);
const REAL_TIME_REFETCH_INTERVAL =
/* istanbul ignore next */
(cov_1jg2gi6udf().s[14]++, 30000); // 30 segundos
// =====================================================
// FUNCIONES DE API
// =====================================================
async function fetchTrackingEvents(shipmentId) {
  /* istanbul ignore next */
  cov_1jg2gi6udf().f[7]++;
  const response =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[15]++, await fetch(`/api/admin/logistics/tracking/${shipmentId}`, {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json'
    }
  }));
  /* istanbul ignore next */
  cov_1jg2gi6udf().s[16]++;
  if (!response.ok) {
    /* istanbul ignore next */
    cov_1jg2gi6udf().b[0][0]++;
    const errorData =
    /* istanbul ignore next */
    (cov_1jg2gi6udf().s[17]++, await response.json().catch(() => {
      /* istanbul ignore next */
      cov_1jg2gi6udf().f[8]++;
      cov_1jg2gi6udf().s[18]++;
      return {};
    }));
    /* istanbul ignore next */
    cov_1jg2gi6udf().s[19]++;
    throw new Error(
    /* istanbul ignore next */
    (cov_1jg2gi6udf().b[1][0]++, errorData.error) ||
    /* istanbul ignore next */
    (cov_1jg2gi6udf().b[1][1]++, `HTTP ${response.status}: ${response.statusText}`));
  } else
  /* istanbul ignore next */
  {
    cov_1jg2gi6udf().b[0][1]++;
  }
  const result =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[20]++, await response.json());
  /* istanbul ignore next */
  cov_1jg2gi6udf().s[21]++;
  return result.data;
}
async function createTrackingEvent(shipmentId, data) {
  /* istanbul ignore next */
  cov_1jg2gi6udf().f[9]++;
  const response =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[22]++, await fetch(`/api/admin/logistics/tracking/${shipmentId}`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify(data)
  }));
  /* istanbul ignore next */
  cov_1jg2gi6udf().s[23]++;
  if (!response.ok) {
    /* istanbul ignore next */
    cov_1jg2gi6udf().b[2][0]++;
    const errorData =
    /* istanbul ignore next */
    (cov_1jg2gi6udf().s[24]++, await response.json().catch(() => {
      /* istanbul ignore next */
      cov_1jg2gi6udf().f[10]++;
      cov_1jg2gi6udf().s[25]++;
      return {};
    }));
    /* istanbul ignore next */
    cov_1jg2gi6udf().s[26]++;
    throw new Error(
    /* istanbul ignore next */
    (cov_1jg2gi6udf().b[3][0]++, errorData.error) ||
    /* istanbul ignore next */
    (cov_1jg2gi6udf().b[3][1]++, `HTTP ${response.status}: ${response.statusText}`));
  } else
  /* istanbul ignore next */
  {
    cov_1jg2gi6udf().b[2][1]++;
  }
  const result =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[27]++, await response.json());
  /* istanbul ignore next */
  cov_1jg2gi6udf().s[28]++;
  return result.data;
}
async function bulkCreateTrackingEvents(shipmentId, events) {
  /* istanbul ignore next */
  cov_1jg2gi6udf().f[11]++;
  const response =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[29]++, await fetch(`/api/admin/logistics/tracking/${shipmentId}`, {
    method: 'PUT',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      events
    })
  }));
  /* istanbul ignore next */
  cov_1jg2gi6udf().s[30]++;
  if (!response.ok) {
    /* istanbul ignore next */
    cov_1jg2gi6udf().b[4][0]++;
    const errorData =
    /* istanbul ignore next */
    (cov_1jg2gi6udf().s[31]++, await response.json().catch(() => {
      /* istanbul ignore next */
      cov_1jg2gi6udf().f[12]++;
      cov_1jg2gi6udf().s[32]++;
      return {};
    }));
    /* istanbul ignore next */
    cov_1jg2gi6udf().s[33]++;
    throw new Error(
    /* istanbul ignore next */
    (cov_1jg2gi6udf().b[5][0]++, errorData.error) ||
    /* istanbul ignore next */
    (cov_1jg2gi6udf().b[5][1]++, `HTTP ${response.status}: ${response.statusText}`));
  } else
  /* istanbul ignore next */
  {
    cov_1jg2gi6udf().b[4][1]++;
  }
  const result =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[34]++, await response.json());
  /* istanbul ignore next */
  cov_1jg2gi6udf().s[35]++;
  return result.data;
}
function useTrackingEvents(shipmentId, options) {
  /* istanbul ignore next */
  cov_1jg2gi6udf().f[13]++;
  const queryClient =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[36]++, (0, _reactquery.useQueryClient)());
  const queryKey =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[37]++, [...TRACKING_QUERY_KEY, shipmentId]);
  const {
    data,
    isLoading,
    error,
    refetch
  } =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[38]++, (0, _reactquery.useQuery)({
    queryKey,
    queryFn: () => {
      /* istanbul ignore next */
      cov_1jg2gi6udf().f[14]++;
      cov_1jg2gi6udf().s[39]++;
      return fetchTrackingEvents(shipmentId);
    },
    enabled:
    /* istanbul ignore next */
    (cov_1jg2gi6udf().b[6][0]++, options?.enabled) ??
    /* istanbul ignore next */
    (cov_1jg2gi6udf().b[6][1]++, true),
    refetchInterval: options?.realTime ?
    /* istanbul ignore next */
    (cov_1jg2gi6udf().b[7][0]++,
    /* istanbul ignore next */
    (cov_1jg2gi6udf().b[8][0]++, options?.refetchInterval) ??
    /* istanbul ignore next */
    (cov_1jg2gi6udf().b[8][1]++, REAL_TIME_REFETCH_INTERVAL)) :
    /* istanbul ignore next */
    (cov_1jg2gi6udf().b[7][1]++, false),
    staleTime: options?.realTime ?
    /* istanbul ignore next */
    (cov_1jg2gi6udf().b[9][0]++, 10000) :
    /* istanbul ignore next */
    (cov_1jg2gi6udf().b[9][1]++, 60000),
    retry: 3,
    retryDelay: attemptIndex => {
      /* istanbul ignore next */
      cov_1jg2gi6udf().f[15]++;
      cov_1jg2gi6udf().s[40]++;
      return Math.min(1000 * 2 ** attemptIndex, 30000);
    }
  }));
  /* istanbul ignore next */
  cov_1jg2gi6udf().s[41]++;
  return {
    data: data?.tracking_events,
    shipment: data?.shipment,
    isLoading,
    error: error,
    refetch
  };
}
function useCreateTrackingEvent(shipmentId) {
  /* istanbul ignore next */
  cov_1jg2gi6udf().f[16]++;
  const queryClient =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[42]++, (0, _reactquery.useQueryClient)());
  /* istanbul ignore next */
  cov_1jg2gi6udf().s[43]++;
  return (0, _reactquery.useMutation)({
    mutationFn: data => {
      /* istanbul ignore next */
      cov_1jg2gi6udf().f[17]++;
      cov_1jg2gi6udf().s[44]++;
      return createTrackingEvent(shipmentId, data);
    },
    onSuccess: newEvent => {
      /* istanbul ignore next */
      cov_1jg2gi6udf().f[18]++;
      // Actualizar cache de tracking events
      const queryKey =
      /* istanbul ignore next */
      (cov_1jg2gi6udf().s[45]++, [...TRACKING_QUERY_KEY, shipmentId]);
      /* istanbul ignore next */
      cov_1jg2gi6udf().s[46]++;
      queryClient.setQueryData(queryKey, oldData => {
        /* istanbul ignore next */
        cov_1jg2gi6udf().f[19]++;
        cov_1jg2gi6udf().s[47]++;
        if (!oldData) {
          /* istanbul ignore next */
          cov_1jg2gi6udf().b[10][0]++;
          cov_1jg2gi6udf().s[48]++;
          return oldData;
        } else
        /* istanbul ignore next */
        {
          cov_1jg2gi6udf().b[10][1]++;
        }
        cov_1jg2gi6udf().s[49]++;
        return {
          ...oldData,
          tracking_events: [newEvent, ...oldData.tracking_events]
        };
      });
      // Invalidar cache relacionado
      /* istanbul ignore next */
      cov_1jg2gi6udf().s[50]++;
      queryClient.invalidateQueries({
        queryKey: ['admin', 'logistics', 'shipments']
      });
      /* istanbul ignore next */
      cov_1jg2gi6udf().s[51]++;
      queryClient.invalidateQueries({
        queryKey: ['admin', 'logistics', 'dashboard']
      });
      /* istanbul ignore next */
      cov_1jg2gi6udf().s[52]++;
      _sonner.toast.success('Evento de tracking agregado', {
        description: newEvent.description
      });
    },
    onError: error => {
      /* istanbul ignore next */
      cov_1jg2gi6udf().f[20]++;
      cov_1jg2gi6udf().s[53]++;
      _sonner.toast.error('Error al agregar evento', {
        description: error.message
      });
    }
  });
}
function useBulkTrackingEvents(shipmentId) {
  /* istanbul ignore next */
  cov_1jg2gi6udf().f[21]++;
  const queryClient =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[54]++, (0, _reactquery.useQueryClient)());
  /* istanbul ignore next */
  cov_1jg2gi6udf().s[55]++;
  return (0, _reactquery.useMutation)({
    mutationFn: events => {
      /* istanbul ignore next */
      cov_1jg2gi6udf().f[22]++;
      cov_1jg2gi6udf().s[56]++;
      return bulkCreateTrackingEvents(shipmentId, events);
    },
    onSuccess: newEvents => {
      /* istanbul ignore next */
      cov_1jg2gi6udf().f[23]++;
      // Actualizar cache
      const queryKey =
      /* istanbul ignore next */
      (cov_1jg2gi6udf().s[57]++, [...TRACKING_QUERY_KEY, shipmentId]);
      /* istanbul ignore next */
      cov_1jg2gi6udf().s[58]++;
      queryClient.setQueryData(queryKey, oldData => {
        /* istanbul ignore next */
        cov_1jg2gi6udf().f[24]++;
        cov_1jg2gi6udf().s[59]++;
        if (!oldData) {
          /* istanbul ignore next */
          cov_1jg2gi6udf().b[11][0]++;
          cov_1jg2gi6udf().s[60]++;
          return oldData;
        } else
        /* istanbul ignore next */
        {
          cov_1jg2gi6udf().b[11][1]++;
        }
        cov_1jg2gi6udf().s[61]++;
        return {
          ...oldData,
          tracking_events: [...newEvents, ...oldData.tracking_events]
        };
      });
      // Invalidar cache relacionado
      /* istanbul ignore next */
      cov_1jg2gi6udf().s[62]++;
      queryClient.invalidateQueries({
        queryKey: ['admin', 'logistics', 'shipments']
      });
      /* istanbul ignore next */
      cov_1jg2gi6udf().s[63]++;
      queryClient.invalidateQueries({
        queryKey: ['admin', 'logistics', 'dashboard']
      });
      /* istanbul ignore next */
      cov_1jg2gi6udf().s[64]++;
      _sonner.toast.success(`${newEvents.length} eventos agregados exitosamente`);
    },
    onError: error => {
      /* istanbul ignore next */
      cov_1jg2gi6udf().f[25]++;
      cov_1jg2gi6udf().s[65]++;
      _sonner.toast.error('Error al agregar eventos', {
        description: error.message
      });
    }
  });
}
function useTrackingTimeline(shipmentId) {
  /* istanbul ignore next */
  cov_1jg2gi6udf().f[26]++;
  const {
    data: events,
    shipment,
    isLoading,
    error
  } =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[66]++, useTrackingEvents(shipmentId, {
    realTime: true
  }));
  // Procesar eventos para timeline
  const timelineEvents =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[67]++,
  /* istanbul ignore next */
  (cov_1jg2gi6udf().b[12][0]++, events?.map(event => {
    /* istanbul ignore next */
    cov_1jg2gi6udf().f[27]++;
    cov_1jg2gi6udf().s[68]++;
    return {
      ...event,
      isCompleted: true,
      isCurrent: false,
      isPending: false
    };
  }).sort((a, b) => {
    /* istanbul ignore next */
    cov_1jg2gi6udf().f[28]++;
    cov_1jg2gi6udf().s[69]++;
    return new Date(a.occurred_at).getTime() - new Date(b.occurred_at).getTime();
  })) ||
  /* istanbul ignore next */
  (cov_1jg2gi6udf().b[12][1]++, []));
  // Determinar estado actual
  const currentStatus =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[70]++, shipment?.status);
  const lastEvent =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[71]++, timelineEvents[timelineEvents.length - 1]);
  // Estados esperados del timeline
  const expectedStates =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[72]++, [{
    status: 'pending',
    label: 'Pendiente',
    description: 'EnvÃ­o creado'
  }, {
    status: 'confirmed',
    label: 'Confirmado',
    description: 'EnvÃ­o confirmado'
  }, {
    status: 'picked_up',
    label: 'Recolectado',
    description: 'Recolectado por courier'
  }, {
    status: 'in_transit',
    label: 'En trÃ¡nsito',
    description: 'En camino'
  }, {
    status: 'out_for_delivery',
    label: 'En reparto',
    description: 'SaliÃ³ para entrega'
  }, {
    status: 'delivered',
    label: 'Entregado',
    description: 'Entregado exitosamente'
  }]);
  const timelineStates =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[73]++, expectedStates.map(state => {
    /* istanbul ignore next */
    cov_1jg2gi6udf().f[29]++;
    const hasEvent =
    /* istanbul ignore next */
    (cov_1jg2gi6udf().s[74]++, timelineEvents.some(event => {
      /* istanbul ignore next */
      cov_1jg2gi6udf().f[30]++;
      cov_1jg2gi6udf().s[75]++;
      return event.status === state.status;
    }));
    const isCurrent =
    /* istanbul ignore next */
    (cov_1jg2gi6udf().s[76]++, currentStatus === state.status);
    const isCompleted =
    /* istanbul ignore next */
    (cov_1jg2gi6udf().s[77]++,
    /* istanbul ignore next */
    (cov_1jg2gi6udf().b[13][0]++, hasEvent) &&
    /* istanbul ignore next */
    (cov_1jg2gi6udf().b[13][1]++, !isCurrent));
    const isPending =
    /* istanbul ignore next */
    (cov_1jg2gi6udf().s[78]++,
    /* istanbul ignore next */
    (cov_1jg2gi6udf().b[14][0]++, !hasEvent) &&
    /* istanbul ignore next */
    (cov_1jg2gi6udf().b[14][1]++, !isCurrent));
    /* istanbul ignore next */
    cov_1jg2gi6udf().s[79]++;
    return {
      ...state,
      hasEvent,
      isCurrent,
      isCompleted,
      isPending,
      event: timelineEvents.find(event => {
        /* istanbul ignore next */
        cov_1jg2gi6udf().f[31]++;
        cov_1jg2gi6udf().s[80]++;
        return event.status === state.status;
      })
    };
  }));
  /* istanbul ignore next */
  cov_1jg2gi6udf().s[81]++;
  return {
    events: timelineEvents,
    timelineStates,
    shipment,
    currentStatus,
    lastEvent,
    isLoading,
    error,
    progress: {
      completed: timelineStates.filter(state => {
        /* istanbul ignore next */
        cov_1jg2gi6udf().f[32]++;
        cov_1jg2gi6udf().s[82]++;
        return state.isCompleted;
      }).length,
      total: timelineStates.length,
      percentage: timelineStates.filter(state => {
        /* istanbul ignore next */
        cov_1jg2gi6udf().f[33]++;
        cov_1jg2gi6udf().s[83]++;
        return state.isCompleted;
      }).length / timelineStates.length * 100
    }
  };
}
function useRealTimeTracking(shipmentId) {
  /* istanbul ignore next */
  cov_1jg2gi6udf().f[34]++;
  const [isRealTimeEnabled, setIsRealTimeEnabled] =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[84]++, (0, _react.useState)(false));
  const [lastUpdate, setLastUpdate] =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[85]++, (0, _react.useState)(null));
  const {
    data: events,
    refetch
  } =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[86]++, useTrackingEvents(shipmentId, {
    realTime: isRealTimeEnabled,
    refetchInterval: 15000 // 15 segundos para tiempo real
  }));
  // Simular notificaciones de nuevos eventos
  /* istanbul ignore next */
  cov_1jg2gi6udf().s[87]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1jg2gi6udf().f[35]++;
    cov_1jg2gi6udf().s[88]++;
    if (
    /* istanbul ignore next */
    (cov_1jg2gi6udf().b[16][0]++, events) &&
    /* istanbul ignore next */
    (cov_1jg2gi6udf().b[16][1]++, events.length > 0)) {
      /* istanbul ignore next */
      cov_1jg2gi6udf().b[15][0]++;
      cov_1jg2gi6udf().s[89]++;
      setLastUpdate(new Date());
    } else
    /* istanbul ignore next */
    {
      cov_1jg2gi6udf().b[15][1]++;
    }
  }, [events]);
  const enableRealTime =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[90]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1jg2gi6udf().f[36]++;
    cov_1jg2gi6udf().s[91]++;
    setIsRealTimeEnabled(true);
    /* istanbul ignore next */
    cov_1jg2gi6udf().s[92]++;
    _sonner.toast.info('Tracking en tiempo real activado');
  }, []));
  const disableRealTime =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[93]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1jg2gi6udf().f[37]++;
    cov_1jg2gi6udf().s[94]++;
    setIsRealTimeEnabled(false);
    /* istanbul ignore next */
    cov_1jg2gi6udf().s[95]++;
    _sonner.toast.info('Tracking en tiempo real desactivado');
  }, []));
  const forceRefresh =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[96]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1jg2gi6udf().f[38]++;
    cov_1jg2gi6udf().s[97]++;
    await refetch();
    /* istanbul ignore next */
    cov_1jg2gi6udf().s[98]++;
    setLastUpdate(new Date());
    /* istanbul ignore next */
    cov_1jg2gi6udf().s[99]++;
    _sonner.toast.success('Tracking actualizado');
  }, [refetch]));
  /* istanbul ignore next */
  cov_1jg2gi6udf().s[100]++;
  return {
    events,
    isRealTimeEnabled,
    lastUpdate,
    enableRealTime,
    disableRealTime,
    forceRefresh
  };
}
function useTrackingAnalytics(shipmentId) {
  /* istanbul ignore next */
  cov_1jg2gi6udf().f[39]++;
  const {
    data: events,
    shipment
  } =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[101]++, useTrackingEvents(shipmentId));
  /* istanbul ignore next */
  cov_1jg2gi6udf().s[102]++;
  if (
  /* istanbul ignore next */
  (cov_1jg2gi6udf().b[18][0]++, !events) ||
  /* istanbul ignore next */
  (cov_1jg2gi6udf().b[18][1]++, !shipment)) {
    /* istanbul ignore next */
    cov_1jg2gi6udf().b[17][0]++;
    cov_1jg2gi6udf().s[103]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1jg2gi6udf().b[17][1]++;
  }
  // Calcular mÃ©tricas
  const totalEvents =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[104]++, events.length);
  const uniqueLocations =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[105]++, [...new Set(events.map(e => {
    /* istanbul ignore next */
    cov_1jg2gi6udf().f[40]++;
    cov_1jg2gi6udf().s[106]++;
    return e.location;
  }).filter(Boolean))].length);
  // Tiempo entre eventos
  const eventTimes =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[107]++, events.map(e => {
    /* istanbul ignore next */
    cov_1jg2gi6udf().f[41]++;
    cov_1jg2gi6udf().s[108]++;
    return new Date(e.occurred_at).getTime();
  }).sort((a, b) => {
    /* istanbul ignore next */
    cov_1jg2gi6udf().f[42]++;
    cov_1jg2gi6udf().s[109]++;
    return a - b;
  }));
  const averageTimeBetweenEvents =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[110]++, eventTimes.length > 1 ?
  /* istanbul ignore next */
  (cov_1jg2gi6udf().b[19][0]++, eventTimes.slice(1).reduce((acc, time, index) => {
    /* istanbul ignore next */
    cov_1jg2gi6udf().f[43]++;
    cov_1jg2gi6udf().s[111]++;
    return acc + (time - eventTimes[index]);
  }, 0) / (eventTimes.length - 1)) :
  /* istanbul ignore next */
  (cov_1jg2gi6udf().b[19][1]++, 0));
  // Tiempo total de trÃ¡nsito
  const firstEvent =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[112]++, events[events.length - 1]); // MÃ¡s antiguo
  const lastEvent =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[113]++, events[0]); // MÃ¡s reciente
  const totalTransitTime =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[114]++,
  /* istanbul ignore next */
  (cov_1jg2gi6udf().b[21][0]++, firstEvent) &&
  /* istanbul ignore next */
  (cov_1jg2gi6udf().b[21][1]++, lastEvent) ?
  /* istanbul ignore next */
  (cov_1jg2gi6udf().b[20][0]++, new Date(lastEvent.occurred_at).getTime() - new Date(firstEvent.occurred_at).getTime()) :
  /* istanbul ignore next */
  (cov_1jg2gi6udf().b[20][1]++, 0));
  // Velocidad promedio (si hay ubicaciones)
  const eventsWithLocation =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[115]++, events.filter(e => {
    /* istanbul ignore next */
    cov_1jg2gi6udf().f[44]++;
    cov_1jg2gi6udf().s[116]++;
    return /* istanbul ignore next */(cov_1jg2gi6udf().b[22][0]++, e.latitude) &&
    /* istanbul ignore next */
    (cov_1jg2gi6udf().b[22][1]++, e.longitude);
  }));
  let averageSpeed =
  /* istanbul ignore next */
  (cov_1jg2gi6udf().s[117]++, 0);
  /* istanbul ignore next */
  cov_1jg2gi6udf().s[118]++;
  if (eventsWithLocation.length > 1) {
    /* istanbul ignore next */
    cov_1jg2gi6udf().b[23][0]++;
    cov_1jg2gi6udf().s[119]++;
    // Calcular distancia total aproximada entre puntos
    // (implementaciÃ³n simplificada)
    averageSpeed = uniqueLocations / (totalTransitTime / (1000 * 60 * 60)); // km/h aproximado
  } else
  /* istanbul ignore next */
  {
    cov_1jg2gi6udf().b[23][1]++;
  }
  cov_1jg2gi6udf().s[120]++;
  return {
    totalEvents,
    uniqueLocations,
    averageTimeBetweenEvents: averageTimeBetweenEvents / (1000 * 60),
    totalTransitTime: totalTransitTime / (1000 * 60 * 60),
    averageSpeed: Math.round(averageSpeed * 10) / 10,
    eventsWithLocation: eventsWithLocation.length,
    locationCoverage: eventsWithLocation.length / totalEvents * 100
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,