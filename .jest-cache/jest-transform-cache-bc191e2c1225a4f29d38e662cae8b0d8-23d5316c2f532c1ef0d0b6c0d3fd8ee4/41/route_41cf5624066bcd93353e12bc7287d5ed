2de0bae8f44b682ae4eda0ad3a9eeaf9
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_1pyctp2jgl() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\analytics\\route.ts";
  var hash = "17855ae3cdcb55531d2efe3826686321c502e772";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\analytics\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 18
        },
        end: {
          line: 21,
          column: 66
        }
      },
      "8": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 54
        }
      },
      "9": {
        start: {
          line: 23,
          column: 13
        },
        end: {
          line: 23,
          column: 27
        }
      },
      "10": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 60
        }
      },
      "11": {
        start: {
          line: 25,
          column: 22
        },
        end: {
          line: 25,
          column: 67
        }
      },
      "12": {
        start: {
          line: 26,
          column: 21
        },
        end: {
          line: 26,
          column: 71
        }
      },
      "13": {
        start: {
          line: 27,
          column: 17
        },
        end: {
          line: 27,
          column: 62
        }
      },
      "14": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 24
        }
      },
      "15": {
        start: {
          line: 32,
          column: 31
        },
        end: {
          line: 51,
          column: 2
        }
      },
      "16": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 95,
          column: 5
        }
      },
      "17": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "18": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 66,
          column: 14
        }
      },
      "19": {
        start: {
          line: 68,
          column: 24
        },
        end: {
          line: 68,
          column: 49
        }
      },
      "20": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "21": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 73,
          column: 14
        }
      },
      "22": {
        start: {
          line: 76,
          column: 24
        },
        end: {
          line: 76,
          column: 68
        }
      },
      "23": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "24": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 81,
          column: 14
        }
      },
      "25": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 86,
          column: 10
        }
      },
      "26": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 90,
          column: 11
        }
      },
      "27": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 94,
          column: 10
        }
      },
      "28": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 135,
          column: 5
        }
      },
      "29": {
        start: {
          line: 103,
          column: 38
        },
        end: {
          line: 103,
          column: 178
        }
      },
      "30": {
        start: {
          line: 104,
          column: 29
        },
        end: {
          line: 104,
          column: 96
        }
      },
      "31": {
        start: {
          line: 104,
          column: 63
        },
        end: {
          line: 104,
          column: 87
        }
      },
      "32": {
        start: {
          line: 106,
          column: 39
        },
        end: {
          line: 109,
          column: 64
        }
      },
      "33": {
        start: {
          line: 111,
          column: 41
        },
        end: {
          line: 114,
          column: 32
        }
      },
      "34": {
        start: {
          line: 116,
          column: 38
        },
        end: {
          line: 119,
          column: 64
        }
      },
      "35": {
        start: {
          line: 120,
          column: 30
        },
        end: {
          line: 120,
          column: 74
        }
      },
      "36": {
        start: {
          line: 121,
          column: 31
        },
        end: {
          line: 121,
          column: 36
        }
      },
      "37": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 129,
          column: 10
        }
      },
      "38": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 133,
          column: 11
        }
      },
      "39": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 20
        }
      },
      "40": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 195,
          column: 5
        }
      },
      "41": {
        start: {
          line: 140,
          column: 38
        },
        end: {
          line: 140,
          column: 210
        }
      },
      "42": {
        start: {
          line: 142,
          column: 29
        },
        end: {
          line: 154,
          column: 20
        }
      },
      "43": {
        start: {
          line: 143,
          column: 25
        },
        end: {
          line: 143,
          column: 55
        }
      },
      "44": {
        start: {
          line: 144,
          column: 29
        },
        end: {
          line: 144,
          column: 65
        }
      },
      "45": {
        start: {
          line: 144,
          column: 46
        },
        end: {
          line: 144,
          column: 64
        }
      },
      "46": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 152,
          column: 13
        }
      },
      "47": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 51
        }
      },
      "48": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 151,
          column: 19
        }
      },
      "49": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 23
        }
      },
      "50": {
        start: {
          line: 156,
          column: 37
        },
        end: {
          line: 156,
          column: 176
        }
      },
      "51": {
        start: {
          line: 157,
          column: 28
        },
        end: {
          line: 169,
          column: 20
        }
      },
      "52": {
        start: {
          line: 158,
          column: 25
        },
        end: {
          line: 158,
          column: 55
        }
      },
      "53": {
        start: {
          line: 159,
          column: 29
        },
        end: {
          line: 159,
          column: 65
        }
      },
      "54": {
        start: {
          line: 159,
          column: 46
        },
        end: {
          line: 159,
          column: 64
        }
      },
      "55": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 167,
          column: 13
        }
      },
      "56": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 36
        }
      },
      "57": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 166,
          column: 19
        }
      },
      "58": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 23
        }
      },
      "59": {
        start: {
          line: 171,
          column: 36
        },
        end: {
          line: 171,
          column: 174
        }
      },
      "60": {
        start: {
          line: 172,
          column: 27
        },
        end: {
          line: 184,
          column: 20
        }
      },
      "61": {
        start: {
          line: 173,
          column: 25
        },
        end: {
          line: 173,
          column: 54
        }
      },
      "62": {
        start: {
          line: 174,
          column: 29
        },
        end: {
          line: 174,
          column: 65
        }
      },
      "63": {
        start: {
          line: 174,
          column: 46
        },
        end: {
          line: 174,
          column: 64
        }
      },
      "64": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 182,
          column: 13
        }
      },
      "65": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 176,
          column: 36
        }
      },
      "66": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 181,
          column: 19
        }
      },
      "67": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 23
        }
      },
      "68": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 189,
          column: 10
        }
      },
      "69": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 193,
          column: 11
        }
      },
      "70": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 20
        }
      },
      "71": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 233,
          column: 5
        }
      },
      "72": {
        start: {
          line: 199,
          column: 25
        },
        end: {
          line: 211,
          column: 109
        }
      },
      "73": {
        start: {
          line: 213,
          column: 29
        },
        end: {
          line: 226,
          column: 20
        }
      },
      "74": {
        start: {
          line: 214,
          column: 30
        },
        end: {
          line: 214,
          column: 45
        }
      },
      "75": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 222,
          column: 13
        }
      },
      "76": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 221,
          column: 18
        }
      },
      "77": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 50
        }
      },
      "78": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 70
        }
      },
      "79": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 23
        }
      },
      "80": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 92
        }
      },
      "81": {
        start: {
          line: 227,
          column: 56
        },
        end: {
          line: 227,
          column: 77
        }
      },
      "82": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 231,
          column: 11
        }
      },
      "83": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 20
        }
      },
      "84": {
        start: {
          line: 236,
          column: 4
        },
        end: {
          line: 277,
          column: 5
        }
      },
      "85": {
        start: {
          line: 237,
          column: 25
        },
        end: {
          line: 251,
          column: 109
        }
      },
      "86": {
        start: {
          line: 253,
          column: 30
        },
        end: {
          line: 270,
          column: 20
        }
      },
      "87": {
        start: {
          line: 254,
          column: 31
        },
        end: {
          line: 254,
          column: 56
        }
      },
      "88": {
        start: {
          line: 255,
          column: 33
        },
        end: {
          line: 255,
          column: 63
        }
      },
      "89": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 258,
          column: 13
        }
      },
      "90": {
        start: {
          line: 257,
          column: 16
        },
        end: {
          line: 257,
          column: 27
        }
      },
      "91": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 266,
          column: 13
        }
      },
      "92": {
        start: {
          line: 260,
          column: 16
        },
        end: {
          line: 265,
          column: 18
        }
      },
      "93": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 51
        }
      },
      "94": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 71
        }
      },
      "95": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 269,
          column: 23
        }
      },
      "96": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 271,
          column: 93
        }
      },
      "97": {
        start: {
          line: 271,
          column: 57
        },
        end: {
          line: 271,
          column: 78
        }
      },
      "98": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 275,
          column: 11
        }
      },
      "99": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 20
        }
      },
      "100": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 304,
          column: 5
        }
      },
      "101": {
        start: {
          line: 281,
          column: 25
        },
        end: {
          line: 291,
          column: 20
        }
      },
      "102": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 298,
          column: 22
        }
      },
      "103": {
        start: {
          line: 292,
          column: 35
        },
        end: {
          line: 298,
          column: 13
        }
      },
      "104": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 302,
          column: 11
        }
      },
      "105": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 303,
          column: 20
        }
      },
      "106": {
        start: {
          line: 307,
          column: 22
        },
        end: {
          line: 307,
          column: 32
        }
      },
      "107": {
        start: {
          line: 308,
          column: 4
        },
        end: {
          line: 439,
          column: 5
        }
      },
      "108": {
        start: {
          line: 310,
          column: 32
        },
        end: {
          line: 314,
          column: 29
        }
      },
      "109": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 323,
          column: 9
        }
      },
      "110": {
        start: {
          line: 316,
          column: 29
        },
        end: {
          line: 320,
          column: 14
        }
      },
      "111": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 321,
          column: 77
        }
      },
      "112": {
        start: {
          line: 322,
          column: 12
        },
        end: {
          line: 322,
          column: 28
        }
      },
      "113": {
        start: {
          line: 325,
          column: 27
        },
        end: {
          line: 325,
          column: 52
        }
      },
      "114": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 335,
          column: 9
        }
      },
      "115": {
        start: {
          line: 327,
          column: 34
        },
        end: {
          line: 331,
          column: 13
        }
      },
      "116": {
        start: {
          line: 332,
          column: 12
        },
        end: {
          line: 334,
          column: 15
        }
      },
      "117": {
        start: {
          line: 337,
          column: 33
        },
        end: {
          line: 337,
          column: 53
        }
      },
      "118": {
        start: {
          line: 338,
          column: 33
        },
        end: {
          line: 343,
          column: 10
        }
      },
      "119": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 353,
          column: 9
        }
      },
      "120": {
        start: {
          line: 345,
          column: 34
        },
        end: {
          line: 349,
          column: 13
        }
      },
      "121": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 352,
          column: 15
        }
      },
      "122": {
        start: {
          line: 354,
          column: 47
        },
        end: {
          line: 354,
          column: 68
        }
      },
      "123": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 380,
          column: 9
        }
      },
      "124": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 359,
          column: 33
        }
      },
      "125": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 360,
          column: 29
        }
      },
      "126": {
        start: {
          line: 362,
          column: 24
        },
        end: {
          line: 362,
          column: 34
        }
      },
      "127": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 363,
          column: 39
        }
      },
      "128": {
        start: {
          line: 364,
          column: 12
        },
        end: {
          line: 379,
          column: 13
        }
      },
      "129": {
        start: {
          line: 366,
          column: 20
        },
        end: {
          line: 366,
          column: 95
        }
      },
      "130": {
        start: {
          line: 367,
          column: 20
        },
        end: {
          line: 367,
          column: 26
        }
      },
      "131": {
        start: {
          line: 369,
          column: 20
        },
        end: {
          line: 369,
          column: 96
        }
      },
      "132": {
        start: {
          line: 370,
          column: 20
        },
        end: {
          line: 370,
          column: 26
        }
      },
      "133": {
        start: {
          line: 372,
          column: 20
        },
        end: {
          line: 372,
          column: 96
        }
      },
      "134": {
        start: {
          line: 373,
          column: 20
        },
        end: {
          line: 373,
          column: 26
        }
      },
      "135": {
        start: {
          line: 375,
          column: 20
        },
        end: {
          line: 375,
          column: 97
        }
      },
      "136": {
        start: {
          line: 376,
          column: 20
        },
        end: {
          line: 376,
          column: 26
        }
      },
      "137": {
        start: {
          line: 378,
          column: 20
        },
        end: {
          line: 378,
          column: 96
        }
      },
      "138": {
        start: {
          line: 382,
          column: 77
        },
        end: {
          line: 388,
          column: 10
        }
      },
      "139": {
        start: {
          line: 389,
          column: 30
        },
        end: {
          line: 395,
          column: 9
        }
      },
      "140": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 403,
          column: 11
        }
      },
      "141": {
        start: {
          line: 405,
          column: 8
        },
        end: {
          line: 410,
          column: 11
        }
      },
      "142": {
        start: {
          line: 411,
          column: 25
        },
        end: {
          line: 415,
          column: 9
        }
      },
      "143": {
        start: {
          line: 416,
          column: 29
        },
        end: {
          line: 416,
          column: 64
        }
      },
      "144": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 417,
          column: 77
        }
      },
      "145": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 418,
          column: 28
        }
      },
      "146": {
        start: {
          line: 420,
          column: 8
        },
        end: {
          line: 422,
          column: 11
        }
      },
      "147": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 430,
          column: 11
        }
      },
      "148": {
        start: {
          line: 431,
          column: 30
        },
        end: {
          line: 435,
          column: 9
        }
      },
      "149": {
        start: {
          line: 436,
          column: 8
        },
        end: {
          line: 438,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "validateAdminAuth",
        decl: {
          start: {
            line: 55,
            column: 15
          },
          end: {
            line: 55,
            column: 32
          }
        },
        loc: {
          start: {
            line: 55,
            column: 35
          },
          end: {
            line: 96,
            column: 1
          }
        },
        line: 55
      },
      "4": {
        name: "getOverviewMetrics",
        decl: {
          start: {
            line: 100,
            column: 15
          },
          end: {
            line: 100,
            column: 33
          }
        },
        loc: {
          start: {
            line: 100,
            column: 52
          },
          end: {
            line: 136,
            column: 1
          }
        },
        line: 100
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 104,
            column: 49
          },
          end: {
            line: 104,
            column: 50
          }
        },
        loc: {
          start: {
            line: 104,
            column: 63
          },
          end: {
            line: 104,
            column: 87
          }
        },
        line: 104
      },
      "6": {
        name: "getTrends",
        decl: {
          start: {
            line: 137,
            column: 15
          },
          end: {
            line: 137,
            column: 24
          }
        },
        loc: {
          start: {
            line: 137,
            column: 43
          },
          end: {
            line: 196,
            column: 1
          }
        },
        line: 137
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 142,
            column: 49
          },
          end: {
            line: 142,
            column: 50
          }
        },
        loc: {
          start: {
            line: 142,
            column: 63
          },
          end: {
            line: 154,
            column: 9
          }
        },
        line: 142
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 144,
            column: 38
          },
          end: {
            line: 144,
            column: 39
          }
        },
        loc: {
          start: {
            line: 144,
            column: 46
          },
          end: {
            line: 144,
            column: 64
          }
        },
        line: 144
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 157,
            column: 47
          },
          end: {
            line: 157,
            column: 48
          }
        },
        loc: {
          start: {
            line: 157,
            column: 61
          },
          end: {
            line: 169,
            column: 9
          }
        },
        line: 157
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 159,
            column: 38
          },
          end: {
            line: 159,
            column: 39
          }
        },
        loc: {
          start: {
            line: 159,
            column: 46
          },
          end: {
            line: 159,
            column: 64
          }
        },
        line: 159
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 172,
            column: 45
          },
          end: {
            line: 172,
            column: 46
          }
        },
        loc: {
          start: {
            line: 172,
            column: 58
          },
          end: {
            line: 184,
            column: 9
          }
        },
        line: 172
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 174,
            column: 38
          },
          end: {
            line: 174,
            column: 39
          }
        },
        loc: {
          start: {
            line: 174,
            column: 46
          },
          end: {
            line: 174,
            column: 64
          }
        },
        line: 174
      },
      "13": {
        name: "getTopProducts",
        decl: {
          start: {
            line: 197,
            column: 15
          },
          end: {
            line: 197,
            column: 29
          }
        },
        loc: {
          start: {
            line: 197,
            column: 48
          },
          end: {
            line: 234,
            column: 1
          }
        },
        line: 197
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 213,
            column: 42
          },
          end: {
            line: 213,
            column: 43
          }
        },
        loc: {
          start: {
            line: 213,
            column: 55
          },
          end: {
            line: 226,
            column: 9
          }
        },
        line: 213
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 227,
            column: 48
          },
          end: {
            line: 227,
            column: 49
          }
        },
        loc: {
          start: {
            line: 227,
            column: 56
          },
          end: {
            line: 227,
            column: 77
          }
        },
        line: 227
      },
      "16": {
        name: "getTopCategories",
        decl: {
          start: {
            line: 235,
            column: 15
          },
          end: {
            line: 235,
            column: 31
          }
        },
        loc: {
          start: {
            line: 235,
            column: 50
          },
          end: {
            line: 278,
            column: 1
          }
        },
        line: 235
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 253,
            column: 43
          },
          end: {
            line: 253,
            column: 44
          }
        },
        loc: {
          start: {
            line: 253,
            column: 56
          },
          end: {
            line: 270,
            column: 9
          }
        },
        line: 253
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 271,
            column: 49
          },
          end: {
            line: 271,
            column: 50
          }
        },
        loc: {
          start: {
            line: 271,
            column: 57
          },
          end: {
            line: 271,
            column: 78
          }
        },
        line: 271
      },
      "19": {
        name: "getRecentOrders",
        decl: {
          start: {
            line: 279,
            column: 15
          },
          end: {
            line: 279,
            column: 30
          }
        },
        loc: {
          start: {
            line: 279,
            column: 33
          },
          end: {
            line: 305,
            column: 1
          }
        },
        line: 279
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 292,
            column: 25
          },
          end: {
            line: 292,
            column: 26
          }
        },
        loc: {
          start: {
            line: 292,
            column: 35
          },
          end: {
            line: 298,
            column: 13
          }
        },
        line: 292
      },
      "21": {
        name: "GET",
        decl: {
          start: {
            line: 306,
            column: 15
          },
          end: {
            line: 306,
            column: 18
          }
        },
        loc: {
          start: {
            line: 306,
            column: 28
          },
          end: {
            line: 440,
            column: 1
          }
        },
        line: 306
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "1": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 58,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 58,
            column: 50
          }
        }, {
          start: {
            line: 58,
            column: 54
          },
          end: {
            line: 58,
            column: 88
          }
        }],
        line: 58
      },
      "2": {
        loc: {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "3": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "4": {
        loc: {
          start: {
            line: 104,
            column: 29
          },
          end: {
            line: 104,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 29
          },
          end: {
            line: 104,
            column: 91
          }
        }, {
          start: {
            line: 104,
            column: 95
          },
          end: {
            line: 104,
            column: 96
          }
        }],
        line: 104
      },
      "5": {
        loc: {
          start: {
            line: 104,
            column: 70
          },
          end: {
            line: 104,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 70
          },
          end: {
            line: 104,
            column: 81
          }
        }, {
          start: {
            line: 104,
            column: 85
          },
          end: {
            line: 104,
            column: 86
          }
        }],
        line: 104
      },
      "6": {
        loc: {
          start: {
            line: 120,
            column: 30
          },
          end: {
            line: 120,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 120,
            column: 44
          },
          end: {
            line: 120,
            column: 70
          }
        }, {
          start: {
            line: 120,
            column: 73
          },
          end: {
            line: 120,
            column: 74
          }
        }],
        line: 120
      },
      "7": {
        loc: {
          start: {
            line: 124,
            column: 26
          },
          end: {
            line: 124,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 26
          },
          end: {
            line: 124,
            column: 37
          }
        }, {
          start: {
            line: 124,
            column: 41
          },
          end: {
            line: 124,
            column: 42
          }
        }],
        line: 124
      },
      "8": {
        loc: {
          start: {
            line: 125,
            column: 28
          },
          end: {
            line: 125,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 28
          },
          end: {
            line: 125,
            column: 41
          }
        }, {
          start: {
            line: 125,
            column: 45
          },
          end: {
            line: 125,
            column: 46
          }
        }],
        line: 125
      },
      "9": {
        loc: {
          start: {
            line: 126,
            column: 25
          },
          end: {
            line: 126,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 25
          },
          end: {
            line: 126,
            column: 35
          }
        }, {
          start: {
            line: 126,
            column: 39
          },
          end: {
            line: 126,
            column: 40
          }
        }],
        line: 126
      },
      "10": {
        loc: {
          start: {
            line: 142,
            column: 29
          },
          end: {
            line: 154,
            column: 20
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 29
          },
          end: {
            line: 154,
            column: 14
          }
        }, {
          start: {
            line: 154,
            column: 18
          },
          end: {
            line: 154,
            column: 20
          }
        }],
        line: 142
      },
      "11": {
        loc: {
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 152,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 152,
            column: 13
          }
        }, {
          start: {
            line: 147,
            column: 19
          },
          end: {
            line: 152,
            column: 13
          }
        }],
        line: 145
      },
      "12": {
        loc: {
          start: {
            line: 146,
            column: 34
          },
          end: {
            line: 146,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 34
          },
          end: {
            line: 146,
            column: 45
          }
        }, {
          start: {
            line: 146,
            column: 49
          },
          end: {
            line: 146,
            column: 50
          }
        }],
        line: 146
      },
      "13": {
        loc: {
          start: {
            line: 150,
            column: 27
          },
          end: {
            line: 150,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 27
          },
          end: {
            line: 150,
            column: 38
          }
        }, {
          start: {
            line: 150,
            column: 42
          },
          end: {
            line: 150,
            column: 43
          }
        }],
        line: 150
      },
      "14": {
        loc: {
          start: {
            line: 157,
            column: 28
          },
          end: {
            line: 169,
            column: 20
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 28
          },
          end: {
            line: 169,
            column: 14
          }
        }, {
          start: {
            line: 169,
            column: 18
          },
          end: {
            line: 169,
            column: 20
          }
        }],
        line: 157
      },
      "15": {
        loc: {
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 167,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 167,
            column: 13
          }
        }, {
          start: {
            line: 162,
            column: 19
          },
          end: {
            line: 167,
            column: 13
          }
        }],
        line: 160
      },
      "16": {
        loc: {
          start: {
            line: 172,
            column: 27
          },
          end: {
            line: 184,
            column: 20
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 27
          },
          end: {
            line: 184,
            column: 14
          }
        }, {
          start: {
            line: 184,
            column: 18
          },
          end: {
            line: 184,
            column: 20
          }
        }],
        line: 172
      },
      "17": {
        loc: {
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 182,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 182,
            column: 13
          }
        }, {
          start: {
            line: 177,
            column: 19
          },
          end: {
            line: 182,
            column: 13
          }
        }],
        line: 175
      },
      "18": {
        loc: {
          start: {
            line: 213,
            column: 29
          },
          end: {
            line: 226,
            column: 20
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 29
          },
          end: {
            line: 226,
            column: 14
          }
        }, {
          start: {
            line: 226,
            column: 18
          },
          end: {
            line: 226,
            column: 20
          }
        }],
        line: 213
      },
      "19": {
        loc: {
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 222,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 222,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "20": {
        loc: {
          start: {
            line: 253,
            column: 30
          },
          end: {
            line: 270,
            column: 20
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 253,
            column: 30
          },
          end: {
            line: 270,
            column: 14
          }
        }, {
          start: {
            line: 270,
            column: 18
          },
          end: {
            line: 270,
            column: 20
          }
        }],
        line: 253
      },
      "21": {
        loc: {
          start: {
            line: 256,
            column: 12
          },
          end: {
            line: 258,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 12
          },
          end: {
            line: 258,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 256
      },
      "22": {
        loc: {
          start: {
            line: 256,
            column: 16
          },
          end: {
            line: 256,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 256,
            column: 16
          },
          end: {
            line: 256,
            column: 27
          }
        }, {
          start: {
            line: 256,
            column: 31
          },
          end: {
            line: 256,
            column: 44
          }
        }],
        line: 256
      },
      "23": {
        loc: {
          start: {
            line: 259,
            column: 12
          },
          end: {
            line: 266,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 12
          },
          end: {
            line: 266,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 259
      },
      "24": {
        loc: {
          start: {
            line: 292,
            column: 15
          },
          end: {
            line: 298,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 292,
            column: 15
          },
          end: {
            line: 298,
            column: 15
          }
        }, {
          start: {
            line: 298,
            column: 19
          },
          end: {
            line: 298,
            column: 21
          }
        }],
        line: 292
      },
      "25": {
        loc: {
          start: {
            line: 313,
            column: 21
          },
          end: {
            line: 313,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 313,
            column: 21
          },
          end: {
            line: 313,
            column: 66
          }
        }, {
          start: {
            line: 313,
            column: 70
          },
          end: {
            line: 313,
            column: 110
          }
        }],
        line: 313
      },
      "26": {
        loc: {
          start: {
            line: 315,
            column: 8
          },
          end: {
            line: 323,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 315,
            column: 8
          },
          end: {
            line: 323,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 315
      },
      "27": {
        loc: {
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 335,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 335,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "28": {
        loc: {
          start: {
            line: 344,
            column: 8
          },
          end: {
            line: 353,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 8
          },
          end: {
            line: 353,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      },
      "29": {
        loc: {
          start: {
            line: 358,
            column: 8
          },
          end: {
            line: 380,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 358,
            column: 8
          },
          end: {
            line: 380,
            column: 9
          }
        }, {
          start: {
            line: 361,
            column: 15
          },
          end: {
            line: 380,
            column: 9
          }
        }],
        line: 358
      },
      "30": {
        loc: {
          start: {
            line: 358,
            column: 12
          },
          end: {
            line: 358,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 358,
            column: 12
          },
          end: {
            line: 358,
            column: 21
          }
        }, {
          start: {
            line: 358,
            column: 25
          },
          end: {
            line: 358,
            column: 32
          }
        }],
        line: 358
      },
      "31": {
        loc: {
          start: {
            line: 364,
            column: 12
          },
          end: {
            line: 379,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 365,
            column: 16
          },
          end: {
            line: 367,
            column: 26
          }
        }, {
          start: {
            line: 368,
            column: 16
          },
          end: {
            line: 370,
            column: 26
          }
        }, {
          start: {
            line: 371,
            column: 16
          },
          end: {
            line: 373,
            column: 26
          }
        }, {
          start: {
            line: 374,
            column: 16
          },
          end: {
            line: 376,
            column: 26
          }
        }, {
          start: {
            line: 377,
            column: 16
          },
          end: {
            line: 378,
            column: 96
          }
        }],
        line: 364
      },
      "32": {
        loc: {
          start: {
            line: 429,
            column: 19
          },
          end: {
            line: 429,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 429,
            column: 44
          },
          end: {
            line: 429,
            column: 57
          }
        }, {
          start: {
            line: 429,
            column: 60
          },
          end: {
            line: 429,
            column: 75
          }
        }],
        line: 429
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0, 0, 0, 0],
      "32": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\analytics\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - ADMIN ANALYTICS API ENTERPRISE\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { ApiResponse } from '@/types/api';\r\nimport { z } from 'zod';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\nimport { checkRateLimit } from '@/lib/auth/rate-limiting';\r\nimport { addRateLimitHeaders, RATE_LIMIT_CONFIGS } from '@/lib/enterprise/rate-limiter';\r\nimport { metricsCollector } from '@/lib/enterprise/metrics';\r\n\r\n// ===================================\r\n// SCHEMAS DE VALIDACI\xD3N\r\n// ===================================\r\n\r\nconst AnalyticsFiltersSchema = z.object({\r\n  period: z.enum(['7d', '30d', '90d', '1y']).default('30d'),\r\n  date_from: z.string().optional().nullable(),\r\n  date_to: z.string().optional().nullable(),\r\n  metrics: z.array(z.enum([\r\n    'sales',\r\n    'orders',\r\n    'products',\r\n    'users',\r\n    'revenue',\r\n    'conversion',\r\n    'top_products',\r\n    'top_categories'\r\n  ])).optional(),\r\n});\r\n\r\n// ===================================\r\n// TIPOS DE DATOS\r\n// ===================================\r\n\r\ninterface AnalyticsData {\r\n  overview: {\r\n    total_revenue: number;\r\n    total_orders: number;\r\n    total_products: number;\r\n    total_users: number;\r\n    avg_order_value: number;\r\n    conversion_rate: number;\r\n  };\r\n  trends: {\r\n    revenue_trend: Array<{ date: string; value: number }>;\r\n    orders_trend: Array<{ date: string; value: number }>;\r\n    users_trend: Array<{ date: string; value: number }>;\r\n  };\r\n  top_products: Array<{\r\n    id: number;\r\n    name: string;\r\n    sales: number;\r\n    revenue: number;\r\n  }>;\r\n  top_categories: Array<{\r\n    id: number;\r\n    name: string;\r\n    sales: number;\r\n    revenue: number;\r\n  }>;\r\n  recent_orders: Array<{\r\n    id: string;\r\n    total: number;\r\n    status: string;\r\n    created_at: string;\r\n    user_email?: string;\r\n  }>;\r\n}\r\n\r\n// ===================================\r\n// MIDDLEWARE DE AUTENTICACI\xD3N ADMIN\r\n// ===================================\r\n\r\nasync function validateAdminAuth() {\r\n  try {\r\n    // BYPASS TEMPORAL PARA DESARROLLO\r\n    if (process.env.NODE_ENV === 'development' && process.env.BYPASS_AUTH === 'true') {\r\n      return {\r\n        user: {\r\n          id: 'dev-admin',\r\n          email: 'santiago@xor.com.ar',\r\n          name: 'Dev Admin'\r\n        },\r\n        userId: 'dev-admin'\r\n      };\r\n    }\r\n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return { error: 'Usuario no autenticado', status: 401 };\r\n    }\r\n\r\n    // Verificar si es admin\r\n    const isAdmin = session.user.email === 'santiago@xor.com.ar';\r\n    if (!isAdmin) {\r\n      return { error: 'Acceso denegado - Se requieren permisos de administrador', status: 403 };\r\n    }\r\n\r\n    return { user: session.user, userId: session.user.id };\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.AUTH, 'Error en validaci\xF3n admin', { error });\r\n    return { error: 'Error de autenticaci\xF3n', status: 500 };\r\n  }\r\n}\r\n\r\n// ===================================\r\n// FUNCIONES DE CONSULTA DE DATOS\r\n// ===================================\r\n\r\nasync function getOverviewMetrics(dateFrom: string, dateTo: string) {\r\n  try {\r\n    // Total de ingresos\r\n    const { data: revenueData } = await supabaseAdmin\r\n      .from('orders')\r\n      .select('total')\r\n      .gte('created_at', dateFrom)\r\n      .lte('created_at', dateTo)\r\n      .eq('status', 'completed');\r\n\r\n    const totalRevenue = revenueData?.reduce((sum, order) => sum + (order.total || 0), 0) || 0;\r\n\r\n    // Total de \xF3rdenes\r\n    const { count: totalOrders } = await supabaseAdmin\r\n      .from('orders')\r\n      .select('*', { count: 'exact', head: true })\r\n      .gte('created_at', dateFrom)\r\n      .lte('created_at', dateTo);\r\n\r\n    // Total de productos\r\n    const { count: totalProducts } = await supabaseAdmin\r\n      .from('products')\r\n      .select('*', { count: 'exact', head: true })\r\n      .eq('is_active', true);\r\n\r\n    // Total de usuarios\r\n    const { count: totalUsers } = await supabaseAdmin\r\n      .from('users')\r\n      .select('*', { count: 'exact', head: true })\r\n      .gte('created_at', dateFrom)\r\n      .lte('created_at', dateTo);\r\n\r\n    const avgOrderValue = totalOrders ? totalRevenue / totalOrders : 0;\r\n    const conversionRate = 0.025; // Placeholder - calcular basado en visitas vs \xF3rdenes\r\n\r\n    return {\r\n      total_revenue: totalRevenue,\r\n      total_orders: totalOrders || 0,\r\n      total_products: totalProducts || 0,\r\n      total_users: totalUsers || 0,\r\n      avg_order_value: avgOrderValue,\r\n      conversion_rate: conversionRate\r\n    };\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error obteniendo m\xE9tricas overview', { error });\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function getTrends(dateFrom: string, dateTo: string) {\r\n  try {\r\n    // Tendencia de ingresos por d\xEDa\r\n    const { data: revenueData } = await supabaseAdmin\r\n      .from('orders')\r\n      .select('created_at, total')\r\n      .gte('created_at', dateFrom)\r\n      .lte('created_at', dateTo)\r\n      .eq('status', 'completed')\r\n      .order('created_at');\r\n\r\n    // Agrupar por d\xEDa\r\n    const revenueTrend = revenueData?.reduce((acc: any[], order) => {\r\n      const date = order.created_at.split('T')[0];\r\n      const existing = acc.find(item => item.date === date);\r\n      if (existing) {\r\n        existing.value += order.total || 0;\r\n      } else {\r\n        acc.push({ date, value: order.total || 0 });\r\n      }\r\n      return acc;\r\n    }, []) || [];\r\n\r\n    // Tendencia de \xF3rdenes por d\xEDa\r\n    const { data: ordersData } = await supabaseAdmin\r\n      .from('orders')\r\n      .select('created_at')\r\n      .gte('created_at', dateFrom)\r\n      .lte('created_at', dateTo)\r\n      .order('created_at');\r\n\r\n    const ordersTrend = ordersData?.reduce((acc: any[], order) => {\r\n      const date = order.created_at.split('T')[0];\r\n      const existing = acc.find(item => item.date === date);\r\n      if (existing) {\r\n        existing.value += 1;\r\n      } else {\r\n        acc.push({ date, value: 1 });\r\n      }\r\n      return acc;\r\n    }, []) || [];\r\n\r\n    // Tendencia de usuarios por d\xEDa\r\n    const { data: usersData } = await supabaseAdmin\r\n      .from('users')\r\n      .select('created_at')\r\n      .gte('created_at', dateFrom)\r\n      .lte('created_at', dateTo)\r\n      .order('created_at');\r\n\r\n    const usersTrend = usersData?.reduce((acc: any[], user) => {\r\n      const date = user.created_at.split('T')[0];\r\n      const existing = acc.find(item => item.date === date);\r\n      if (existing) {\r\n        existing.value += 1;\r\n      } else {\r\n        acc.push({ date, value: 1 });\r\n      }\r\n      return acc;\r\n    }, []) || [];\r\n\r\n    return {\r\n      revenue_trend: revenueTrend,\r\n      orders_trend: ordersTrend,\r\n      users_trend: usersTrend\r\n    };\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error obteniendo tendencias', { error });\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function getTopProducts(dateFrom: string, dateTo: string) {\r\n  try {\r\n    const { data } = await supabaseAdmin\r\n      .from('order_items')\r\n      .select(`\r\n        product_id,\r\n        quantity,\r\n        unit_price,\r\n        products!inner(\r\n          id,\r\n          name\r\n        ),\r\n        orders!inner(\r\n          created_at,\r\n          status\r\n        )\r\n      `)\r\n      .gte('orders.created_at', dateFrom)\r\n      .lte('orders.created_at', dateTo)\r\n      .eq('orders.status', 'completed');\r\n\r\n    // Agrupar por producto\r\n    const productStats = data?.reduce((acc: Record<string, any>, item) => {\r\n      const productId = item.product_id;\r\n      if (!acc[productId]) {\r\n        acc[productId] = {\r\n          id: productId,\r\n          name: item.products.name,\r\n          sales: 0,\r\n          revenue: 0\r\n        };\r\n      }\r\n      acc[productId].sales += item.quantity;\r\n      acc[productId].revenue += (item.quantity * item.unit_price);\r\n      return acc;\r\n    }, {}) || {};\r\n\r\n    return Object.values(productStats)\r\n      .sort((a: { revenue: number }, b: { revenue: number }) => b.revenue - a.revenue)\r\n      .slice(0, 10);\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error obteniendo top productos', { error });\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function getTopCategories(dateFrom: string, dateTo: string) {\r\n  try {\r\n    const { data } = await supabaseAdmin\r\n      .from('order_items')\r\n      .select(`\r\n        quantity,\r\n        unit_price,\r\n        products!inner(\r\n          category_id,\r\n          categories!inner(\r\n            id,\r\n            name\r\n          )\r\n        ),\r\n        orders!inner(\r\n          created_at,\r\n          status\r\n        )\r\n      `)\r\n      .gte('orders.created_at', dateFrom)\r\n      .lte('orders.created_at', dateTo)\r\n      .eq('orders.status', 'completed');\r\n\r\n    // Agrupar por categor\xEDa\r\n    const categoryStats = data?.reduce((acc: Record<string, any>, item) => {\r\n      const categoryId = item.products.category_id;\r\n      const categoryName = item.products.categories?.name;\r\n      if (!categoryId || !categoryName) {return acc;}\r\n      \r\n      if (!acc[categoryId]) {\r\n        acc[categoryId] = {\r\n          id: categoryId,\r\n          name: categoryName,\r\n          sales: 0,\r\n          revenue: 0\r\n        };\r\n      }\r\n      acc[categoryId].sales += item.quantity;\r\n      acc[categoryId].revenue += (item.quantity * item.unit_price);\r\n      return acc;\r\n    }, {}) || {};\r\n\r\n    return Object.values(categoryStats)\r\n      .sort((a: { revenue: number }, b: { revenue: number }) => b.revenue - a.revenue)\r\n      .slice(0, 10);\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error obteniendo top categor\xEDas', { error });\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function getRecentOrders() {\r\n  try {\r\n    const { data } = await supabaseAdmin\r\n      .from('orders')\r\n      .select(`\r\n        id,\r\n        total,\r\n        status,\r\n        created_at,\r\n        users(\r\n          email\r\n        )\r\n      `)\r\n      .order('created_at', { ascending: false })\r\n      .limit(10);\r\n\r\n    return data?.map(order => ({\r\n      id: order.id,\r\n      total: order.total,\r\n      status: order.status,\r\n      created_at: order.created_at,\r\n      user_email: order.users?.email\r\n    })) || [];\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error obteniendo \xF3rdenes recientes', { error });\r\n    throw error;\r\n  }\r\n}\r\n\r\n// ===================================\r\n// GET - Obtener analytics del dashboard\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,\r\n        maxRequests: RATE_LIMIT_CONFIGS.admin.maxRequests,\r\n        message: RATE_LIMIT_CONFIGS.admin.message || 'Demasiadas solicitudes administrativas'\r\n      },\r\n      'admin-analytics'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: rateLimitResult.message },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult);\r\n      return response;\r\n    }\r\n\r\n    // Validar autenticaci\xF3n admin\r\n    const authResult = await validateAdminAuth();\r\n    if (authResult.error) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: authResult.error,\r\n      };\r\n      return NextResponse.json(errorResponse, { status: authResult.status });\r\n    }\r\n\r\n    // Validar par\xE1metros\r\n    const { searchParams } = new URL(request.url);\r\n    const validationResult = AnalyticsFiltersSchema.safeParse({\r\n      period: searchParams.get('period'),\r\n      date_from: searchParams.get('date_from'),\r\n      date_to: searchParams.get('date_to'),\r\n      metrics: searchParams.get('metrics')?.split(','),\r\n    });\r\n\r\n    if (!validationResult.success) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'Par\xE1metros inv\xE1lidos',\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 400 });\r\n    }\r\n\r\n    const { period, date_from, date_to } = validationResult.data;\r\n\r\n    // Calcular fechas basadas en el per\xEDodo\r\n    let dateFrom: string;\r\n    let dateTo: string;\r\n\r\n    if (date_from && date_to) {\r\n      dateFrom = date_from;\r\n      dateTo = date_to;\r\n    } else {\r\n      const now = new Date();\r\n      dateTo = now.toISOString();\r\n      \r\n      switch (period) {\r\n        case '7d':\r\n          dateFrom = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000).toISOString();\r\n          break;\r\n        case '30d':\r\n          dateFrom = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000).toISOString();\r\n          break;\r\n        case '90d':\r\n          dateFrom = new Date(now.getTime() - 90 * 24 * 60 * 60 * 1000).toISOString();\r\n          break;\r\n        case '1y':\r\n          dateFrom = new Date(now.getTime() - 365 * 24 * 60 * 60 * 1000).toISOString();\r\n          break;\r\n        default:\r\n          dateFrom = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000).toISOString();\r\n      }\r\n    }\r\n\r\n    // Obtener datos de analytics\r\n    const [overview, trends, topProducts, topCategories, recentOrders] = await Promise.all([\r\n      getOverviewMetrics(dateFrom, dateTo),\r\n      getTrends(dateFrom, dateTo),\r\n      getTopProducts(dateFrom, dateTo),\r\n      getTopCategories(dateFrom, dateTo),\r\n      getRecentOrders()\r\n    ]);\r\n\r\n    const analyticsData: AnalyticsData = {\r\n      overview,\r\n      trends,\r\n      top_products: topProducts,\r\n      top_categories: topCategories,\r\n      recent_orders: recentOrders\r\n    };\r\n\r\n    // Registrar m\xE9tricas\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/analytics',\r\n      method: 'GET',\r\n      statusCode: 200,\r\n      responseTime: Date.now() - startTime,\r\n      userId: authResult.userId\r\n    });\r\n\r\n    // Log de auditor\xEDa\r\n    logger.log(LogLevel.INFO, LogCategory.ADMIN, 'Analytics consultados', {\r\n      userId: authResult.userId,\r\n      period,\r\n      dateFrom,\r\n      dateTo\r\n    });\r\n\r\n    const response: ApiResponse<AnalyticsData> = {\r\n      data: analyticsData,\r\n      success: true,\r\n      message: 'Analytics obtenidos exitosamente'\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response);\r\n    addRateLimitHeaders(nextResponse, rateLimitResult);\r\n    return nextResponse;\r\n\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en GET /api/admin/analytics', { error });\r\n\r\n    // Registrar m\xE9tricas de error\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/analytics',\r\n      method: 'GET',\r\n      statusCode: 500,\r\n      responseTime: Date.now() - startTime,\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    });\r\n\r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: 'Error interno del servidor',\r\n    };\r\n\r\n    return NextResponse.json(errorResponse, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "runtime", "AnalyticsFiltersSchema", "z", "object", "period", "enum", "default", "date_from", "string", "optional", "nullable", "date_to", "metrics", "array", "validateAdminAuth", "process", "env", "NODE_ENV", "BYPASS_AUTH", "user", "id", "email", "name", "userId", "session", "auth", "error", "status", "isAdmin", "logger", "log", "LogLevel", "ERROR", "LogCategory", "AUTH", "getOverviewMetrics", "dateFrom", "dateTo", "data", "revenueData", "supabaseAdmin", "from", "select", "gte", "lte", "eq", "totalRevenue", "reduce", "sum", "order", "total", "count", "totalOrders", "head", "totalProducts", "totalUsers", "avgOrderValue", "conversionRate", "total_revenue", "total_orders", "total_products", "total_users", "avg_order_value", "conversion_rate", "API", "getTrends", "revenueTrend", "acc", "date", "created_at", "split", "existing", "find", "item", "value", "push", "ordersData", "ordersTrend", "usersData", "usersTrend", "revenue_trend", "orders_trend", "users_trend", "getTopProducts", "productStats", "productId", "product_id", "products", "sales", "revenue", "quantity", "unit_price", "Object", "values", "sort", "a", "b", "slice", "getTopCategories", "categoryStats", "categoryId", "category_id", "categoryName", "categories", "getRecentOrders", "ascending", "limit", "map", "user_email", "users", "request", "startTime", "Date", "now", "rateLimitResult", "checkRateLimit", "windowMs", "RATE_LIMIT_CONFIGS", "admin", "maxRequests", "message", "success", "response", "NextResponse", "json", "addRateLimitHeaders", "authResult", "errorResponse", "searchParams", "URL", "url", "validationResult", "safeParse", "get", "toISOString", "getTime", "overview", "trends", "topProducts", "topCategories", "recentOrders", "Promise", "all", "analyticsData", "top_products", "top_categories", "recent_orders", "metricsCollector", "recordApiCall", "endpoint", "method", "statusCode", "responseTime", "INFO", "ADMIN", "nextResponse", "Error"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "17855ae3cdcb55531d2efe3826686321c502e772"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1pyctp2jgl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1pyctp2jgl();
cov_1pyctp2jgl().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1pyctp2jgl().f[0]++;
  cov_1pyctp2jgl().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1pyctp2jgl().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_1pyctp2jgl().f[1]++;
    cov_1pyctp2jgl().s[4]++;
    return GET;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_1pyctp2jgl().f[2]++;
    cov_1pyctp2jgl().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_1pyctp2jgl().s[6]++, require("next/server"));
const _supabase =
/* istanbul ignore next */
(cov_1pyctp2jgl().s[7]++, require("../../../../lib/integrations/supabase"));
const _config =
/* istanbul ignore next */
(cov_1pyctp2jgl().s[8]++, require("../../../../lib/auth/config"));
const _zod =
/* istanbul ignore next */
(cov_1pyctp2jgl().s[9]++, require("zod"));
const _logger =
/* istanbul ignore next */
(cov_1pyctp2jgl().s[10]++, require("../../../../lib/enterprise/logger"));
const _ratelimiting =
/* istanbul ignore next */
(cov_1pyctp2jgl().s[11]++, require("../../../../lib/auth/rate-limiting"));
const _ratelimiter =
/* istanbul ignore next */
(cov_1pyctp2jgl().s[12]++, require("../../../../lib/enterprise/rate-limiter"));
const _metrics =
/* istanbul ignore next */
(cov_1pyctp2jgl().s[13]++, require("../../../../lib/enterprise/metrics"));
const runtime =
/* istanbul ignore next */
(cov_1pyctp2jgl().s[14]++, 'nodejs');
// ===================================
// SCHEMAS DE VALIDACIÃN
// ===================================
const AnalyticsFiltersSchema =
/* istanbul ignore next */
(cov_1pyctp2jgl().s[15]++, _zod.z.object({
  period: _zod.z.enum(['7d', '30d', '90d', '1y']).default('30d'),
  date_from: _zod.z.string().optional().nullable(),
  date_to: _zod.z.string().optional().nullable(),
  metrics: _zod.z.array(_zod.z.enum(['sales', 'orders', 'products', 'users', 'revenue', 'conversion', 'top_products', 'top_categories'])).optional()
}));
// ===================================
// MIDDLEWARE DE AUTENTICACIÃN ADMIN
// ===================================
async function validateAdminAuth() {
  /* istanbul ignore next */
  cov_1pyctp2jgl().f[3]++;
  cov_1pyctp2jgl().s[16]++;
  try {
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[17]++;
    // BYPASS TEMPORAL PARA DESARROLLO
    if (
    /* istanbul ignore next */
    (cov_1pyctp2jgl().b[1][0]++, process.env.NODE_ENV === 'development') &&
    /* istanbul ignore next */
    (cov_1pyctp2jgl().b[1][1]++, process.env.BYPASS_AUTH === 'true')) {
      /* istanbul ignore next */
      cov_1pyctp2jgl().b[0][0]++;
      cov_1pyctp2jgl().s[18]++;
      return {
        user: {
          id: 'dev-admin',
          email: 'santiago@xor.com.ar',
          name: 'Dev Admin'
        },
        userId: 'dev-admin'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1pyctp2jgl().b[0][1]++;
    }
    const session =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[19]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[20]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_1pyctp2jgl().b[2][0]++;
      cov_1pyctp2jgl().s[21]++;
      return {
        error: 'Usuario no autenticado',
        status: 401
      };
    } else
    /* istanbul ignore next */
    {
      cov_1pyctp2jgl().b[2][1]++;
    }
    // Verificar si es admin
    const isAdmin =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[22]++, session.user.email === 'santiago@xor.com.ar');
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[23]++;
    if (!isAdmin) {
      /* istanbul ignore next */
      cov_1pyctp2jgl().b[3][0]++;
      cov_1pyctp2jgl().s[24]++;
      return {
        error: 'Acceso denegado - Se requieren permisos de administrador',
        status: 403
      };
    } else
    /* istanbul ignore next */
    {
      cov_1pyctp2jgl().b[3][1]++;
    }
    cov_1pyctp2jgl().s[25]++;
    return {
      user: session.user,
      userId: session.user.id
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[26]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.AUTH, 'Error en validaciÃ³n admin', {
      error
    });
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[27]++;
    return {
      error: 'Error de autenticaciÃ³n',
      status: 500
    };
  }
}
// ===================================
// FUNCIONES DE CONSULTA DE DATOS
// ===================================
async function getOverviewMetrics(dateFrom, dateTo) {
  /* istanbul ignore next */
  cov_1pyctp2jgl().f[4]++;
  cov_1pyctp2jgl().s[28]++;
  try {
    // Total de ingresos
    const {
      data: revenueData
    } =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[29]++, await _supabase.supabaseAdmin.from('orders').select('total').gte('created_at', dateFrom).lte('created_at', dateTo).eq('status', 'completed'));
    const totalRevenue =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[30]++,
    /* istanbul ignore next */
    (cov_1pyctp2jgl().b[4][0]++, revenueData?.reduce((sum, order) => {
      /* istanbul ignore next */
      cov_1pyctp2jgl().f[5]++;
      cov_1pyctp2jgl().s[31]++;
      return sum + (
      /* istanbul ignore next */
      (cov_1pyctp2jgl().b[5][0]++, order.total) ||
      /* istanbul ignore next */
      (cov_1pyctp2jgl().b[5][1]++, 0));
    }, 0)) ||
    /* istanbul ignore next */
    (cov_1pyctp2jgl().b[4][1]++, 0));
    // Total de Ã³rdenes
    const {
      count: totalOrders
    } =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[32]++, await _supabase.supabaseAdmin.from('orders').select('*', {
      count: 'exact',
      head: true
    }).gte('created_at', dateFrom).lte('created_at', dateTo));
    // Total de productos
    const {
      count: totalProducts
    } =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[33]++, await _supabase.supabaseAdmin.from('products').select('*', {
      count: 'exact',
      head: true
    }).eq('is_active', true));
    // Total de usuarios
    const {
      count: totalUsers
    } =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[34]++, await _supabase.supabaseAdmin.from('users').select('*', {
      count: 'exact',
      head: true
    }).gte('created_at', dateFrom).lte('created_at', dateTo));
    const avgOrderValue =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[35]++, totalOrders ?
    /* istanbul ignore next */
    (cov_1pyctp2jgl().b[6][0]++, totalRevenue / totalOrders) :
    /* istanbul ignore next */
    (cov_1pyctp2jgl().b[6][1]++, 0));
    const conversionRate =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[36]++, 0.025); // Placeholder - calcular basado en visitas vs Ã³rdenes
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[37]++;
    return {
      total_revenue: totalRevenue,
      total_orders:
      /* istanbul ignore next */
      (cov_1pyctp2jgl().b[7][0]++, totalOrders) ||
      /* istanbul ignore next */
      (cov_1pyctp2jgl().b[7][1]++, 0),
      total_products:
      /* istanbul ignore next */
      (cov_1pyctp2jgl().b[8][0]++, totalProducts) ||
      /* istanbul ignore next */
      (cov_1pyctp2jgl().b[8][1]++, 0),
      total_users:
      /* istanbul ignore next */
      (cov_1pyctp2jgl().b[9][0]++, totalUsers) ||
      /* istanbul ignore next */
      (cov_1pyctp2jgl().b[9][1]++, 0),
      avg_order_value: avgOrderValue,
      conversion_rate: conversionRate
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[38]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error obteniendo mÃ©tricas overview', {
      error
    });
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[39]++;
    throw error;
  }
}
async function getTrends(dateFrom, dateTo) {
  /* istanbul ignore next */
  cov_1pyctp2jgl().f[6]++;
  cov_1pyctp2jgl().s[40]++;
  try {
    // Tendencia de ingresos por dÃ­a
    const {
      data: revenueData
    } =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[41]++, await _supabase.supabaseAdmin.from('orders').select('created_at, total').gte('created_at', dateFrom).lte('created_at', dateTo).eq('status', 'completed').order('created_at'));
    // Agrupar por dÃ­a
    const revenueTrend =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[42]++,
    /* istanbul ignore next */
    (cov_1pyctp2jgl().b[10][0]++, revenueData?.reduce((acc, order) => {
      /* istanbul ignore next */
      cov_1pyctp2jgl().f[7]++;
      const date =
      /* istanbul ignore next */
      (cov_1pyctp2jgl().s[43]++, order.created_at.split('T')[0]);
      const existing =
      /* istanbul ignore next */
      (cov_1pyctp2jgl().s[44]++, acc.find(item => {
        /* istanbul ignore next */
        cov_1pyctp2jgl().f[8]++;
        cov_1pyctp2jgl().s[45]++;
        return item.date === date;
      }));
      /* istanbul ignore next */
      cov_1pyctp2jgl().s[46]++;
      if (existing) {
        /* istanbul ignore next */
        cov_1pyctp2jgl().b[11][0]++;
        cov_1pyctp2jgl().s[47]++;
        existing.value +=
        /* istanbul ignore next */
        (cov_1pyctp2jgl().b[12][0]++, order.total) ||
        /* istanbul ignore next */
        (cov_1pyctp2jgl().b[12][1]++, 0);
      } else {
        /* istanbul ignore next */
        cov_1pyctp2jgl().b[11][1]++;
        cov_1pyctp2jgl().s[48]++;
        acc.push({
          date,
          value:
          /* istanbul ignore next */
          (cov_1pyctp2jgl().b[13][0]++, order.total) ||
          /* istanbul ignore next */
          (cov_1pyctp2jgl().b[13][1]++, 0)
        });
      }
      /* istanbul ignore next */
      cov_1pyctp2jgl().s[49]++;
      return acc;
    }, [])) ||
    /* istanbul ignore next */
    (cov_1pyctp2jgl().b[10][1]++, []));
    // Tendencia de Ã³rdenes por dÃ­a
    const {
      data: ordersData
    } =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[50]++, await _supabase.supabaseAdmin.from('orders').select('created_at').gte('created_at', dateFrom).lte('created_at', dateTo).order('created_at'));
    const ordersTrend =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[51]++,
    /* istanbul ignore next */
    (cov_1pyctp2jgl().b[14][0]++, ordersData?.reduce((acc, order) => {
      /* istanbul ignore next */
      cov_1pyctp2jgl().f[9]++;
      const date =
      /* istanbul ignore next */
      (cov_1pyctp2jgl().s[52]++, order.created_at.split('T')[0]);
      const existing =
      /* istanbul ignore next */
      (cov_1pyctp2jgl().s[53]++, acc.find(item => {
        /* istanbul ignore next */
        cov_1pyctp2jgl().f[10]++;
        cov_1pyctp2jgl().s[54]++;
        return item.date === date;
      }));
      /* istanbul ignore next */
      cov_1pyctp2jgl().s[55]++;
      if (existing) {
        /* istanbul ignore next */
        cov_1pyctp2jgl().b[15][0]++;
        cov_1pyctp2jgl().s[56]++;
        existing.value += 1;
      } else {
        /* istanbul ignore next */
        cov_1pyctp2jgl().b[15][1]++;
        cov_1pyctp2jgl().s[57]++;
        acc.push({
          date,
          value: 1
        });
      }
      /* istanbul ignore next */
      cov_1pyctp2jgl().s[58]++;
      return acc;
    }, [])) ||
    /* istanbul ignore next */
    (cov_1pyctp2jgl().b[14][1]++, []));
    // Tendencia de usuarios por dÃ­a
    const {
      data: usersData
    } =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[59]++, await _supabase.supabaseAdmin.from('users').select('created_at').gte('created_at', dateFrom).lte('created_at', dateTo).order('created_at'));
    const usersTrend =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[60]++,
    /* istanbul ignore next */
    (cov_1pyctp2jgl().b[16][0]++, usersData?.reduce((acc, user) => {
      /* istanbul ignore next */
      cov_1pyctp2jgl().f[11]++;
      const date =
      /* istanbul ignore next */
      (cov_1pyctp2jgl().s[61]++, user.created_at.split('T')[0]);
      const existing =
      /* istanbul ignore next */
      (cov_1pyctp2jgl().s[62]++, acc.find(item => {
        /* istanbul ignore next */
        cov_1pyctp2jgl().f[12]++;
        cov_1pyctp2jgl().s[63]++;
        return item.date === date;
      }));
      /* istanbul ignore next */
      cov_1pyctp2jgl().s[64]++;
      if (existing) {
        /* istanbul ignore next */
        cov_1pyctp2jgl().b[17][0]++;
        cov_1pyctp2jgl().s[65]++;
        existing.value += 1;
      } else {
        /* istanbul ignore next */
        cov_1pyctp2jgl().b[17][1]++;
        cov_1pyctp2jgl().s[66]++;
        acc.push({
          date,
          value: 1
        });
      }
      /* istanbul ignore next */
      cov_1pyctp2jgl().s[67]++;
      return acc;
    }, [])) ||
    /* istanbul ignore next */
    (cov_1pyctp2jgl().b[16][1]++, []));
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[68]++;
    return {
      revenue_trend: revenueTrend,
      orders_trend: ordersTrend,
      users_trend: usersTrend
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[69]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error obteniendo tendencias', {
      error
    });
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[70]++;
    throw error;
  }
}
async function getTopProducts(dateFrom, dateTo) {
  /* istanbul ignore next */
  cov_1pyctp2jgl().f[13]++;
  cov_1pyctp2jgl().s[71]++;
  try {
    const {
      data
    } =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[72]++, await _supabase.supabaseAdmin.from('order_items').select(`
        product_id,
        quantity,
        unit_price,
        products!inner(
          id,
          name
        ),
        orders!inner(
          created_at,
          status
        )
      `).gte('orders.created_at', dateFrom).lte('orders.created_at', dateTo).eq('orders.status', 'completed'));
    // Agrupar por producto
    const productStats =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[73]++,
    /* istanbul ignore next */
    (cov_1pyctp2jgl().b[18][0]++, data?.reduce((acc, item) => {
      /* istanbul ignore next */
      cov_1pyctp2jgl().f[14]++;
      const productId =
      /* istanbul ignore next */
      (cov_1pyctp2jgl().s[74]++, item.product_id);
      /* istanbul ignore next */
      cov_1pyctp2jgl().s[75]++;
      if (!acc[productId]) {
        /* istanbul ignore next */
        cov_1pyctp2jgl().b[19][0]++;
        cov_1pyctp2jgl().s[76]++;
        acc[productId] = {
          id: productId,
          name: item.products.name,
          sales: 0,
          revenue: 0
        };
      } else
      /* istanbul ignore next */
      {
        cov_1pyctp2jgl().b[19][1]++;
      }
      cov_1pyctp2jgl().s[77]++;
      acc[productId].sales += item.quantity;
      /* istanbul ignore next */
      cov_1pyctp2jgl().s[78]++;
      acc[productId].revenue += item.quantity * item.unit_price;
      /* istanbul ignore next */
      cov_1pyctp2jgl().s[79]++;
      return acc;
    }, {})) ||
    /* istanbul ignore next */
    (cov_1pyctp2jgl().b[18][1]++, {}));
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[80]++;
    return Object.values(productStats).sort((a, b) => {
      /* istanbul ignore next */
      cov_1pyctp2jgl().f[15]++;
      cov_1pyctp2jgl().s[81]++;
      return b.revenue - a.revenue;
    }).slice(0, 10);
  } catch (error) {
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[82]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error obteniendo top productos', {
      error
    });
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[83]++;
    throw error;
  }
}
async function getTopCategories(dateFrom, dateTo) {
  /* istanbul ignore next */
  cov_1pyctp2jgl().f[16]++;
  cov_1pyctp2jgl().s[84]++;
  try {
    const {
      data
    } =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[85]++, await _supabase.supabaseAdmin.from('order_items').select(`
        quantity,
        unit_price,
        products!inner(
          category_id,
          categories!inner(
            id,
            name
          )
        ),
        orders!inner(
          created_at,
          status
        )
      `).gte('orders.created_at', dateFrom).lte('orders.created_at', dateTo).eq('orders.status', 'completed'));
    // Agrupar por categorÃ­a
    const categoryStats =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[86]++,
    /* istanbul ignore next */
    (cov_1pyctp2jgl().b[20][0]++, data?.reduce((acc, item) => {
      /* istanbul ignore next */
      cov_1pyctp2jgl().f[17]++;
      const categoryId =
      /* istanbul ignore next */
      (cov_1pyctp2jgl().s[87]++, item.products.category_id);
      const categoryName =
      /* istanbul ignore next */
      (cov_1pyctp2jgl().s[88]++, item.products.categories?.name);
      /* istanbul ignore next */
      cov_1pyctp2jgl().s[89]++;
      if (
      /* istanbul ignore next */
      (cov_1pyctp2jgl().b[22][0]++, !categoryId) ||
      /* istanbul ignore next */
      (cov_1pyctp2jgl().b[22][1]++, !categoryName)) {
        /* istanbul ignore next */
        cov_1pyctp2jgl().b[21][0]++;
        cov_1pyctp2jgl().s[90]++;
        return acc;
      } else
      /* istanbul ignore next */
      {
        cov_1pyctp2jgl().b[21][1]++;
      }
      cov_1pyctp2jgl().s[91]++;
      if (!acc[categoryId]) {
        /* istanbul ignore next */
        cov_1pyctp2jgl().b[23][0]++;
        cov_1pyctp2jgl().s[92]++;
        acc[categoryId] = {
          id: categoryId,
          name: categoryName,
          sales: 0,
          revenue: 0
        };
      } else
      /* istanbul ignore next */
      {
        cov_1pyctp2jgl().b[23][1]++;
      }
      cov_1pyctp2jgl().s[93]++;
      acc[categoryId].sales += item.quantity;
      /* istanbul ignore next */
      cov_1pyctp2jgl().s[94]++;
      acc[categoryId].revenue += item.quantity * item.unit_price;
      /* istanbul ignore next */
      cov_1pyctp2jgl().s[95]++;
      return acc;
    }, {})) ||
    /* istanbul ignore next */
    (cov_1pyctp2jgl().b[20][1]++, {}));
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[96]++;
    return Object.values(categoryStats).sort((a, b) => {
      /* istanbul ignore next */
      cov_1pyctp2jgl().f[18]++;
      cov_1pyctp2jgl().s[97]++;
      return b.revenue - a.revenue;
    }).slice(0, 10);
  } catch (error) {
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[98]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error obteniendo top categorÃ­as', {
      error
    });
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[99]++;
    throw error;
  }
}
async function getRecentOrders() {
  /* istanbul ignore next */
  cov_1pyctp2jgl().f[19]++;
  cov_1pyctp2jgl().s[100]++;
  try {
    const {
      data
    } =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[101]++, await _supabase.supabaseAdmin.from('orders').select(`
        id,
        total,
        status,
        created_at,
        users(
          email
        )
      `).order('created_at', {
      ascending: false
    }).limit(10));
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[102]++;
    return /* istanbul ignore next */(cov_1pyctp2jgl().b[24][0]++, data?.map(order => {
      /* istanbul ignore next */
      cov_1pyctp2jgl().f[20]++;
      cov_1pyctp2jgl().s[103]++;
      return {
        id: order.id,
        total: order.total,
        status: order.status,
        created_at: order.created_at,
        user_email: order.users?.email
      };
    })) ||
    /* istanbul ignore next */
    (cov_1pyctp2jgl().b[24][1]++, []);
  } catch (error) {
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[104]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error obteniendo Ã³rdenes recientes', {
      error
    });
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[105]++;
    throw error;
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_1pyctp2jgl().f[21]++;
  const startTime =
  /* istanbul ignore next */
  (cov_1pyctp2jgl().s[106]++, Date.now());
  /* istanbul ignore next */
  cov_1pyctp2jgl().s[107]++;
  try {
    // Rate limiting
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[108]++, await (0, _ratelimiting.checkRateLimit)(request, {
      windowMs: _ratelimiter.RATE_LIMIT_CONFIGS.admin.windowMs,
      maxRequests: _ratelimiter.RATE_LIMIT_CONFIGS.admin.maxRequests,
      message:
      /* istanbul ignore next */
      (cov_1pyctp2jgl().b[25][0]++, _ratelimiter.RATE_LIMIT_CONFIGS.admin.message) ||
      /* istanbul ignore next */
      (cov_1pyctp2jgl().b[25][1]++, 'Demasiadas solicitudes administrativas')
    }, 'admin-analytics'));
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[109]++;
    if (!rateLimitResult.success) {
      /* istanbul ignore next */
      cov_1pyctp2jgl().b[26][0]++;
      const response =
      /* istanbul ignore next */
      (cov_1pyctp2jgl().s[110]++, _server.NextResponse.json({
        error: rateLimitResult.message
      }, {
        status: 429
      }));
      /* istanbul ignore next */
      cov_1pyctp2jgl().s[111]++;
      (0, _ratelimiter.addRateLimitHeaders)(response, rateLimitResult);
      /* istanbul ignore next */
      cov_1pyctp2jgl().s[112]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_1pyctp2jgl().b[26][1]++;
    }
    // Validar autenticaciÃ³n admin
    const authResult =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[113]++, await validateAdminAuth());
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[114]++;
    if (authResult.error) {
      /* istanbul ignore next */
      cov_1pyctp2jgl().b[27][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_1pyctp2jgl().s[115]++, {
        data: null,
        success: false,
        error: authResult.error
      });
      /* istanbul ignore next */
      cov_1pyctp2jgl().s[116]++;
      return _server.NextResponse.json(errorResponse, {
        status: authResult.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_1pyctp2jgl().b[27][1]++;
    }
    // Validar parÃ¡metros
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[117]++, new URL(request.url));
    const validationResult =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[118]++, AnalyticsFiltersSchema.safeParse({
      period: searchParams.get('period'),
      date_from: searchParams.get('date_from'),
      date_to: searchParams.get('date_to'),
      metrics: searchParams.get('metrics')?.split(',')
    }));
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[119]++;
    if (!validationResult.success) {
      /* istanbul ignore next */
      cov_1pyctp2jgl().b[28][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_1pyctp2jgl().s[120]++, {
        data: null,
        success: false,
        error: 'ParÃ¡metros invÃ¡lidos'
      });
      /* istanbul ignore next */
      cov_1pyctp2jgl().s[121]++;
      return _server.NextResponse.json(errorResponse, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1pyctp2jgl().b[28][1]++;
    }
    const {
      period,
      date_from,
      date_to
    } =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[122]++, validationResult.data);
    // Calcular fechas basadas en el perÃ­odo
    let dateFrom;
    let dateTo;
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[123]++;
    if (
    /* istanbul ignore next */
    (cov_1pyctp2jgl().b[30][0]++, date_from) &&
    /* istanbul ignore next */
    (cov_1pyctp2jgl().b[30][1]++, date_to)) {
      /* istanbul ignore next */
      cov_1pyctp2jgl().b[29][0]++;
      cov_1pyctp2jgl().s[124]++;
      dateFrom = date_from;
      /* istanbul ignore next */
      cov_1pyctp2jgl().s[125]++;
      dateTo = date_to;
    } else {
      /* istanbul ignore next */
      cov_1pyctp2jgl().b[29][1]++;
      const now =
      /* istanbul ignore next */
      (cov_1pyctp2jgl().s[126]++, new Date());
      /* istanbul ignore next */
      cov_1pyctp2jgl().s[127]++;
      dateTo = now.toISOString();
      /* istanbul ignore next */
      cov_1pyctp2jgl().s[128]++;
      switch (period) {
        case '7d':
          /* istanbul ignore next */
          cov_1pyctp2jgl().b[31][0]++;
          cov_1pyctp2jgl().s[129]++;
          dateFrom = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000).toISOString();
          /* istanbul ignore next */
          cov_1pyctp2jgl().s[130]++;
          break;
        case '30d':
          /* istanbul ignore next */
          cov_1pyctp2jgl().b[31][1]++;
          cov_1pyctp2jgl().s[131]++;
          dateFrom = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000).toISOString();
          /* istanbul ignore next */
          cov_1pyctp2jgl().s[132]++;
          break;
        case '90d':
          /* istanbul ignore next */
          cov_1pyctp2jgl().b[31][2]++;
          cov_1pyctp2jgl().s[133]++;
          dateFrom = new Date(now.getTime() - 90 * 24 * 60 * 60 * 1000).toISOString();
          /* istanbul ignore next */
          cov_1pyctp2jgl().s[134]++;
          break;
        case '1y':
          /* istanbul ignore next */
          cov_1pyctp2jgl().b[31][3]++;
          cov_1pyctp2jgl().s[135]++;
          dateFrom = new Date(now.getTime() - 365 * 24 * 60 * 60 * 1000).toISOString();
          /* istanbul ignore next */
          cov_1pyctp2jgl().s[136]++;
          break;
        default:
          /* istanbul ignore next */
          cov_1pyctp2jgl().b[31][4]++;
          cov_1pyctp2jgl().s[137]++;
          dateFrom = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000).toISOString();
      }
    }
    // Obtener datos de analytics
    const [overview, trends, topProducts, topCategories, recentOrders] =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[138]++, await Promise.all([getOverviewMetrics(dateFrom, dateTo), getTrends(dateFrom, dateTo), getTopProducts(dateFrom, dateTo), getTopCategories(dateFrom, dateTo), getRecentOrders()]));
    const analyticsData =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[139]++, {
      overview,
      trends,
      top_products: topProducts,
      top_categories: topCategories,
      recent_orders: recentOrders
    });
    // Registrar mÃ©tricas
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[140]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/analytics',
      method: 'GET',
      statusCode: 200,
      responseTime: Date.now() - startTime,
      userId: authResult.userId
    });
    // Log de auditorÃ­a
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[141]++;
    _logger.logger.log(_logger.LogLevel.INFO, _logger.LogCategory.ADMIN, 'Analytics consultados', {
      userId: authResult.userId,
      period,
      dateFrom,
      dateTo
    });
    const response =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[142]++, {
      data: analyticsData,
      success: true,
      message: 'Analytics obtenidos exitosamente'
    });
    const nextResponse =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[143]++, _server.NextResponse.json(response));
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[144]++;
    (0, _ratelimiter.addRateLimitHeaders)(nextResponse, rateLimitResult);
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[145]++;
    return nextResponse;
  } catch (error) {
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[146]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en GET /api/admin/analytics', {
      error
    });
    // Registrar mÃ©tricas de error
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[147]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/analytics',
      method: 'GET',
      statusCode: 500,
      responseTime: Date.now() - startTime,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1pyctp2jgl().b[32][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1pyctp2jgl().b[32][1]++, 'Unknown error')
    });
    const errorResponse =
    /* istanbul ignore next */
    (cov_1pyctp2jgl().s[148]++, {
      data: null,
      success: false,
      error: 'Error interno del servidor'
    });
    /* istanbul ignore next */
    cov_1pyctp2jgl().s[149]++;
    return _server.NextResponse.json(errorResponse, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,