{"version":3,"names":["cov_2e4h1mzvw7","actualCoverage","s","GET","f","POST","runtime","AnalyticsFiltersSchema","_zod","z","object","period","enum","default","date_from","string","optional","date_to","group_by","include_details","boolean","validateAdminAuth","session","_config","auth","user","b","error","status","isAdmin","email","userId","id","_logger","logger","log","LogLevel","ERROR","LogCategory","AUTH","getDateRange","customFrom","customTo","now","Date","startDate","endDate","getFullYear","getMonth","getDate","getTime","quarterStart","Math","floor","toISOString","request","startTime","rateLimitResult","_ratelimiting","checkRateLimit","maxRequests","_ratelimiter","RATE_LIMIT_CONFIGS","admin","requests","windowMs","window","allowed","response","_server","NextResponse","json","addRateLimitHeaders","standardHeaders","legacyHeaders","authResult","searchParams","URL","url","filtersResult","safeParse","get","success","details","errors","filters","data","totalOrdersResult","_supabase","supabaseAdmin","from","select","count","head","totalOrders","revenue","averageOrderValue","statusDistribution","topProducts","revenueGrowth","responseTime","_metrics","metricsCollector","recordApiCall","console","warn","summary","total_orders","total_revenue","average_order_value","revenue_growth_percentage","start_date","end_date","period_type","status_distribution","top_products","daily_trends","nextResponse","INFO","API","errorDetails","message","Error","stack","undefined","name","cause","recordRequest","metricsError","timestamp","logError","debug","process","env","NODE_ENV","body","report_type","format","validReportTypes","includes","join","reportData","generateSalesSummaryReport","generateCustomerAnalysisReport","generateProductPerformanceReport","generateStatusTimelineReport","generated_at","reportType"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\orders\\analytics\\route.ts"],"sourcesContent":["// Configuración para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - ADMIN ORDERS ANALYTICS API ENTERPRISE\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { ApiResponse } from '@/types/api';\r\nimport { z } from 'zod';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\nimport { checkRateLimit, type RateLimitResult } from '@/lib/auth/rate-limiting';\r\nimport { addRateLimitHeaders, RATE_LIMIT_CONFIGS } from '@/lib/enterprise/rate-limiter';\r\nimport { metricsCollector } from '@/lib/enterprise/metrics';\r\n\r\n// ===================================\r\n// SCHEMAS DE VALIDACIÓN\r\n// ===================================\r\n\r\nconst AnalyticsFiltersSchema = z.object({\r\n  period: z.enum(['today', 'week', 'month', 'quarter', 'year', 'custom']).default('month'),\r\n  date_from: z.string().optional(),\r\n  date_to: z.string().optional(),\r\n  group_by: z.enum(['day', 'week', 'month']).default('day'),\r\n  include_details: z.boolean().default(false),\r\n});\r\n\r\n// ===================================\r\n// MIDDLEWARE DE AUTENTICACIÓN ADMIN\r\n// ===================================\r\n\r\nasync function validateAdminAuth() {\r\n  try {\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return { error: 'Usuario no autenticado', status: 401 };\r\n    }\r\n\r\n    const user = session.user;\r\n\r\n    // Verificar si es admin\r\n    const isAdmin = session.user.email === 'santiago@xor.com.ar';\r\n    if (!isAdmin) {\r\n      return { error: 'Acceso denegado - Se requieren permisos de administrador', status: 403 };\r\n    }\r\n\r\n    return { user: session.user, userId: session.user.id };\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.AUTH, 'Error en validación admin', { error });\r\n    return { error: 'Error de autenticación', status: 500 };\r\n  }\r\n}\r\n\r\n// ===================================\r\n// UTILIDADES DE FECHAS\r\n// ===================================\r\n\r\nfunction getDateRange(period: string, customFrom?: string, customTo?: string) {\r\n  const now = new Date();\r\n  let startDate: Date;\r\n  let endDate = now;\r\n\r\n  switch (period) {\r\n    case 'today':\r\n      startDate = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n      break;\r\n    case 'week':\r\n      startDate = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\r\n      break;\r\n    case 'month':\r\n      startDate = new Date(now.getFullYear(), now.getMonth(), 1);\r\n      break;\r\n    case 'quarter':\r\n      const quarterStart = Math.floor(now.getMonth() / 3) * 3;\r\n      startDate = new Date(now.getFullYear(), quarterStart, 1);\r\n      break;\r\n    case 'year':\r\n      startDate = new Date(now.getFullYear(), 0, 1);\r\n      break;\r\n    case 'custom':\r\n      startDate = customFrom ? new Date(customFrom) : new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\r\n      endDate = customTo ? new Date(customTo) : now;\r\n      break;\r\n    default:\r\n      startDate = new Date(now.getFullYear(), now.getMonth(), 1);\r\n  }\r\n\r\n  return {\r\n    startDate: startDate.toISOString(),\r\n    endDate: endDate.toISOString(),\r\n  };\r\n}\r\n\r\n// ===================================\r\n// GET - Obtener analytics de órdenes\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  const startTime = Date.now();\r\n  \r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        maxRequests: RATE_LIMIT_CONFIGS.admin.requests,\r\n        windowMs: RATE_LIMIT_CONFIGS.admin.window\r\n      },\r\n      'admin-orders-analytics'\r\n    );\r\n\r\n    if (!rateLimitResult.allowed) {\r\n      const response = NextResponse.json(\r\n        { error: 'Demasiadas solicitudes' },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult, {\r\n        maxRequests: RATE_LIMIT_CONFIGS.admin.requests,\r\n        windowMs: RATE_LIMIT_CONFIGS.admin.window,\r\n        standardHeaders: true,\r\n        legacyHeaders: false\r\n      });\r\n      return response;\r\n    }\r\n\r\n    // Validar autenticación admin\r\n    const authResult = await validateAdminAuth();\r\n    if ('error' in authResult) {\r\n      return NextResponse.json(\r\n        { error: authResult.error },\r\n        { status: authResult.status }\r\n      );\r\n    }\r\n\r\n    // Validar parámetros de consulta\r\n    const { searchParams } = new URL(request.url);\r\n    const filtersResult = AnalyticsFiltersSchema.safeParse({\r\n      period: searchParams.get('period'),\r\n      date_from: searchParams.get('date_from'),\r\n      date_to: searchParams.get('date_to'),\r\n      group_by: searchParams.get('group_by'),\r\n      include_details: searchParams.get('include_details') === 'true',\r\n    });\r\n\r\n    if (!filtersResult.success) {\r\n      return NextResponse.json(\r\n        { error: 'Parámetros de analytics inválidos', details: filtersResult.error.errors },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const filters = filtersResult.data;\r\n    const { startDate, endDate } = getDateRange(filters.period, filters.date_from, filters.date_to);\r\n\r\n    // Obtener métricas básicas de prueba\r\n    const totalOrdersResult = await supabaseAdmin\r\n      .from('orders')\r\n      .select('id', { count: 'exact', head: true });\r\n    \r\n    const totalOrders = totalOrdersResult.count || 0;\r\n\r\n    // Datos simplificados para prueba\r\n    const revenue = 0;\r\n    const averageOrderValue = 0;\r\n    const statusDistribution = {};\r\n    const topProducts: any[] = [];\r\n    const revenueGrowth = 0;\r\n\r\n    // Métricas de performance\r\n    const responseTime = Date.now() - startTime;\r\n    try {\r\n      metricsCollector.recordApiCall('admin-orders-analytics', responseTime, 200);\r\n    } catch (error) {\r\n      // Ignorar errores de métricas en desarrollo\r\n      console.warn('Metrics collection failed:', error);\r\n    }\r\n\r\n    const response: ApiResponse<{\r\n      summary: {\r\n        total_orders: number;\r\n        total_revenue: number;\r\n        average_order_value: number;\r\n        revenue_growth_percentage: number;\r\n        period: {\r\n          start_date: string;\r\n          end_date: string;\r\n          period_type: string;\r\n        };\r\n      };\r\n      status_distribution: Record<string, number>;\r\n      top_products: typeof topProducts;\r\n      daily_trends: any;\r\n      filters: typeof filters;\r\n    }> = {\r\n      data: {\r\n        summary: {\r\n          total_orders: totalOrders,\r\n          total_revenue: revenue,\r\n          average_order_value: averageOrderValue,\r\n          revenue_growth_percentage: revenueGrowth,\r\n          period: {\r\n            start_date: startDate,\r\n            end_date: endDate,\r\n            period_type: filters.period,\r\n          },\r\n        },\r\n        status_distribution: statusDistribution,\r\n        top_products: topProducts,\r\n        daily_trends: [],\r\n        filters,\r\n      },\r\n      success: true,\r\n      error: null,\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response);\r\n    addRateLimitHeaders(nextResponse, rateLimitResult, {\r\n      maxRequests: RATE_LIMIT_CONFIGS.admin.requests,\r\n      windowMs: RATE_LIMIT_CONFIGS.admin.window,\r\n      standardHeaders: true,\r\n      legacyHeaders: false\r\n    });\r\n\r\n    logger.log(LogLevel.INFO, LogCategory.API, 'Analytics de órdenes obtenidas exitosamente', {\r\n      period: filters.period,\r\n      totalOrders,\r\n      revenue,\r\n      responseTime,\r\n    });\r\n\r\n    return nextResponse;\r\n\r\n  } catch (error) {\r\n    const responseTime = Date.now() - startTime;\r\n\r\n    // Logging detallado del error\r\n    const errorDetails = {\r\n      message: error instanceof Error ? error.message : 'Unknown error',\r\n      stack: error instanceof Error ? error.stack : undefined,\r\n      name: error instanceof Error ? error.name : 'UnknownError',\r\n      cause: error instanceof Error ? error.cause : undefined\r\n    };\r\n\r\n    console.error('❌ [Orders Analytics API] Error detallado:', errorDetails);\r\n\r\n    try {\r\n      await metricsCollector.recordRequest('admin-orders-analytics', 'GET', 500, responseTime);\r\n    } catch (metricsError) {\r\n      // Ignorar errores de métricas en desarrollo\r\n      console.warn('Metrics collection failed:', metricsError);\r\n    }\r\n\r\n    try {\r\n      logger.log(LogLevel.ERROR, LogCategory.API, 'Error en GET /api/admin/orders/analytics', {\r\n        error: errorDetails,\r\n        timestamp: new Date().toISOString()\r\n      });\r\n    } catch (logError) {\r\n      // Ignorar errores de logging en desarrollo\r\n      console.error('Logging failed:', logError);\r\n    }\r\n\r\n    return NextResponse.json(\r\n      {\r\n        error: 'Error interno del servidor',\r\n        details: errorDetails.message,\r\n        debug: process.env.NODE_ENV === 'development' ? errorDetails : undefined\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// ===================================\r\n// POST - Generar reporte personalizado\r\n// ===================================\r\nexport async function POST(request: NextRequest) {\r\n  const startTime = Date.now();\r\n  \r\n  try {\r\n    // Validar autenticación admin\r\n    const authResult = await validateAdminAuth();\r\n    if ('error' in authResult) {\r\n      return NextResponse.json(\r\n        { error: authResult.error },\r\n        { status: authResult.status }\r\n      );\r\n    }\r\n\r\n    const body = await request.json();\r\n    const { report_type, filters, format = 'json' } = body;\r\n\r\n    // Validar tipo de reporte\r\n    const validReportTypes = ['sales_summary', 'customer_analysis', 'product_performance', 'status_timeline'];\r\n    if (!validReportTypes.includes(report_type)) {\r\n      return NextResponse.json(\r\n        { error: `Tipo de reporte inválido. Tipos válidos: ${validReportTypes.join(', ')}` },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Generar reporte según el tipo\r\n    let reportData;\r\n    switch (report_type) {\r\n      case 'sales_summary':\r\n        reportData = await generateSalesSummaryReport(filters);\r\n        break;\r\n      case 'customer_analysis':\r\n        reportData = await generateCustomerAnalysisReport(filters);\r\n        break;\r\n      case 'product_performance':\r\n        reportData = await generateProductPerformanceReport(filters);\r\n        break;\r\n      case 'status_timeline':\r\n        reportData = await generateStatusTimelineReport(filters);\r\n        break;\r\n      default:\r\n        return NextResponse.json(\r\n          { error: 'Tipo de reporte no implementado' },\r\n          { status: 501 }\r\n        );\r\n    }\r\n\r\n    // Métricas de performance\r\n    const responseTime = Date.now() - startTime;\r\n    metricsCollector.recordApiCall('admin-orders-custom-report', responseTime, 200);\r\n\r\n    const response: ApiResponse<{\r\n      report_type: string;\r\n      generated_at: string;\r\n      data: any;\r\n      filters: any;\r\n    }> = {\r\n      data: {\r\n        report_type,\r\n        generated_at: new Date().toISOString(),\r\n        data: reportData,\r\n        filters,\r\n      },\r\n      success: true,\r\n      error: null,\r\n    };\r\n\r\n    logger.log(LogLevel.INFO, LogCategory.API, 'Reporte personalizado generado', {\r\n      reportType: report_type,\r\n      format,\r\n      responseTime,\r\n    });\r\n\r\n    return NextResponse.json(response);\r\n\r\n  } catch (error) {\r\n    const responseTime = Date.now() - startTime;\r\n    metricsCollector.recordApiCall('admin-orders-custom-report', responseTime, 500);\r\n    \r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en POST /api/admin/orders/analytics', { error });\r\n    \r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// ===================================\r\n// FUNCIONES DE GENERACIÓN DE REPORTES\r\n// ===================================\r\n\r\nasync function generateSalesSummaryReport(filters: any) {\r\n  // TODO: Implementar reporte de resumen de ventas\r\n  return { message: 'Sales summary report - To be implemented' };\r\n}\r\n\r\nasync function generateCustomerAnalysisReport(filters: any) {\r\n  // TODO: Implementar análisis de clientes\r\n  return { message: 'Customer analysis report - To be implemented' };\r\n}\r\n\r\nasync function generateProductPerformanceReport(filters: any) {\r\n  // TODO: Implementar reporte de performance de productos\r\n  return { message: 'Product performance report - To be implemented' };\r\n}\r\n\r\nasync function generateStatusTimelineReport(filters: any) {\r\n  // TODO: Implementar timeline de estados\r\n  return { message: 'Status timeline report - To be implemented' };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}