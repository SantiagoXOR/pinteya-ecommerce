{"version":3,"names":["cov_1zxwhdhr5","actualCoverage","s","useCheckoutSimple","initialFormData","billing","firstName","lastName","companyName","country","streetAddress","apartment","city","state","zipCode","phone","email","orderNotes","observations","shipping","differentAddress","paymentMethod","shippingMethod","couponCode","f","dispatch","_store","useAppDispatch","cartItems","useAppSelector","_cartslice","selectCartItems","totalPrice","selectTotalPrice","checkoutState","setCheckoutState","_react","useState","formData","isLoading","errors","step","preferenceId","undefined","initPoint","updateFormData","useCallback","updates","prev","validateForm","trim","b","test","length","cart","Object","keys","processCheckout","success","error","Promise","resolve","setTimeout","Error","message"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useCheckoutSimple.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useCallback } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '@/redux/store';\r\nimport { selectCartItems, selectTotalPrice } from '@/redux/features/cart-slice';\r\nimport { CheckoutFormData, CheckoutState } from '@/types/checkout';\r\n\r\nconst initialFormData: CheckoutFormData = {\r\n  billing: {\r\n    firstName: '',\r\n    lastName: '',\r\n    companyName: '',\r\n    country: 'Argentina',\r\n    streetAddress: '',\r\n    apartment: '',\r\n    city: '',\r\n    state: '',\r\n    zipCode: '',\r\n    phone: '',\r\n    email: '',\r\n    orderNotes: '',\r\n    observations: '',\r\n  },\r\n  shipping: {\r\n    differentAddress: false,\r\n  },\r\n  paymentMethod: 'mercadopago',\r\n  shippingMethod: 'free',\r\n  couponCode: '',\r\n};\r\n\r\nexport const useCheckoutSimple = () => {\r\n  const dispatch = useAppDispatch();\r\n  const cartItems = useAppSelector(selectCartItems);\r\n  const totalPrice = useAppSelector(selectTotalPrice);\r\n\r\n  const [checkoutState, setCheckoutState] = useState<CheckoutState>({\r\n    formData: initialFormData,\r\n    isLoading: false,\r\n    errors: {},\r\n    step: 'form',\r\n    preferenceId: undefined,\r\n    initPoint: undefined,\r\n  });\r\n\r\n  // Actualizar datos del formulario\r\n  const updateFormData = useCallback((updates: Partial<CheckoutFormData>) => {\r\n    setCheckoutState(prev => ({\r\n      ...prev,\r\n      formData: { ...prev.formData, ...updates },\r\n      errors: {}, // Limpiar errores al actualizar\r\n    }));\r\n  }, []);\r\n\r\n  // Validar formulario\r\n  const validateForm = useCallback(() => {\r\n    const { billing, shipping } = checkoutState.formData;\r\n    const errors: Record<string, string> = {};\r\n\r\n    // Validaciones básicas\r\n    if (!billing.firstName?.trim()) {errors.firstName = 'Nombre es requerido';}\r\n    if (!billing.lastName?.trim()) {errors.lastName = 'Apellido es requerido';}\r\n    if (!billing.email?.trim()) {errors.email = 'Email es requerido';}\r\n    if (!billing.phone?.trim()) {errors.phone = 'Teléfono es requerido';}\r\n    if (!billing.streetAddress?.trim()) {errors.streetAddress = 'Dirección es requerida';}\r\n    if (!billing.city?.trim()) {errors.city = 'Ciudad es requerida';}\r\n    if (!billing.state?.trim()) {errors.state = 'Provincia es requerida';}\r\n    if (!billing.zipCode?.trim()) {errors.zipCode = 'Código postal es requerido';}\r\n\r\n    // Validar email\r\n    if (billing.email && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(billing.email)) {\r\n      errors.email = 'Email inválido';\r\n    }\r\n\r\n    // Validar que hay items en el carrito\r\n    if (cartItems.length === 0) {\r\n      errors.cart = 'El carrito está vacío';\r\n    }\r\n\r\n    setCheckoutState(prev => ({ ...prev, errors }));\r\n    return Object.keys(errors).length === 0;\r\n  }, [checkoutState.formData, cartItems.length]);\r\n\r\n  // Procesar checkout\r\n  const processCheckout = useCallback(async () => {\r\n    if (!validateForm()) {\r\n      return { success: false, error: 'Por favor completa todos los campos requeridos' };\r\n    }\r\n\r\n    setCheckoutState(prev => ({ ...prev, isLoading: true }));\r\n\r\n    try {\r\n      // Simular procesamiento\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n      \r\n      setCheckoutState(prev => ({ \r\n        ...prev, \r\n        isLoading: false,\r\n        step: 'success'\r\n      }));\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      setCheckoutState(prev => ({ ...prev, isLoading: false }));\r\n      return { \r\n        success: false, \r\n        error: error instanceof Error ? error.message : 'Error procesando el checkout' \r\n      };\r\n    }\r\n  }, [validateForm]);\r\n\r\n  return {\r\n    // Estado\r\n    formData: checkoutState.formData,\r\n    errors: checkoutState.errors,\r\n    isLoading: checkoutState.isLoading,\r\n    step: checkoutState.step,\r\n    \r\n    // Datos del carrito\r\n    cartItems,\r\n    totalPrice,\r\n    \r\n    // Funciones\r\n    updateFormData,\r\n    validateForm,\r\n    processCheckout,\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}