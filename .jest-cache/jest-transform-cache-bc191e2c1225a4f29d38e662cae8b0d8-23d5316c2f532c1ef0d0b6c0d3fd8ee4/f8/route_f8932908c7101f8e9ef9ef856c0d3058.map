{"version":3,"names":["cov_271v1vxdke","actualCoverage","s","DELETE","f","GET","POST","runtime","request","console","log","session","_config","auth","user","id","b","_server","NextResponse","json","success","error","requiresAuth","status","userId","body","productId","quantity","field","supabase","_supabase","getSupabaseClient","data","existingItem","existingError","from","select","eq","single","operation","responseMessage","newQuantity","updatedItem","updateError","update","details","message","products","name","item","productName","previousQuantity","removedQuantity","deleteError","delete","endpoint","methods","description","parameters","examples","removeCompletely","reduceQuantity","authentication","responses"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\cart\\remove\\route.ts"],"sourcesContent":["// Configuración para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API REMOVER DEL CARRITO\r\n// ===================================\r\n// Endpoint para remover productos del carrito\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getSupabaseClient } from '@/lib/integrations/supabase';\r\nimport { auth } from '@/lib/auth/config';\r\n\r\n/**\r\n * DELETE /api/cart/remove\r\n * Remover un producto específico del carrito\r\n */\r\nexport async function DELETE(request: NextRequest) {\r\n  try {\r\n    console.log('🛒 Cart Remove API: Iniciando proceso de remoción');\r\n\r\n    // Verificar autenticación\r\n    const session = await auth();\r\n    if (!session?.user?.id) {\r\n      console.log('❌ Cart Remove API: Usuario no autenticado');\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'Usuario no autenticado',\r\n          requiresAuth: true\r\n        }, \r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n\r\n    // Obtener datos del request\r\n    const body = await request.json();\r\n    const { productId, quantity } = body;\r\n\r\n    // Validaciones\r\n    if (!productId) {\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'ID del producto es requerido',\r\n          field: 'productId'\r\n        }, \r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    console.log(`🔍 Cart Remove API: Removiendo producto ${productId} para usuario ${userId}`);\r\n\r\n    // Obtener cliente de Supabase\r\n    const supabase = getSupabaseClient(true);\r\n    if (!supabase) {\r\n      console.error('❌ Cart Remove API: Cliente de Supabase no disponible');\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'Servicio de base de datos no disponible'\r\n        }, \r\n        { status: 503 }\r\n      );\r\n    }\r\n\r\n    // Verificar que el item existe en el carrito\r\n    const { data: existingItem, error: existingError } = await supabase\r\n      .from('cart_items')\r\n      .select(`\r\n        id,\r\n        quantity,\r\n        products (\r\n          id,\r\n          name,\r\n          price,\r\n          discounted_price\r\n        )\r\n      `)\r\n      .eq('user_id', userId)\r\n      .eq('product_id', productId)\r\n      .single();\r\n\r\n    if (existingError || !existingItem) {\r\n      console.log(`❌ Cart Remove API: Producto ${productId} no está en el carrito`);\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'El producto no está en tu carrito',\r\n          productId\r\n        }, \r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    let operation = 'removed';\r\n    let responseMessage = '';\r\n\r\n    if (quantity && quantity > 0 && quantity < existingItem.quantity) {\r\n      // Reducir cantidad específica\r\n      const newQuantity = existingItem.quantity - quantity;\r\n      \r\n      const { data: updatedItem, error: updateError } = await supabase\r\n        .from('cart_items')\r\n        .update({ quantity: newQuantity })\r\n        .eq('id', existingItem.id)\r\n        .select()\r\n        .single();\r\n\r\n      if (updateError) {\r\n        console.error('❌ Cart Remove API: Error actualizando cantidad:', updateError);\r\n        return NextResponse.json(\r\n          { \r\n            success: false, \r\n            error: 'Error actualizando cantidad en el carrito',\r\n            details: updateError.message\r\n          }, \r\n          { status: 500 }\r\n        );\r\n      }\r\n\r\n      operation = 'quantity_reduced';\r\n      responseMessage = `Se removieron ${quantity} unidades de ${existingItem.products.name}. Quedan ${newQuantity} en el carrito`;\r\n      \r\n      console.log(`✅ Cart Remove API: Cantidad reducida - ${responseMessage}`);\r\n\r\n      return NextResponse.json({\r\n        success: true,\r\n        message: responseMessage,\r\n        operation,\r\n        item: {\r\n          id: updatedItem.id,\r\n          productId: productId,\r\n          productName: existingItem.products.name,\r\n          previousQuantity: existingItem.quantity,\r\n          newQuantity: newQuantity,\r\n          removedQuantity: quantity\r\n        }\r\n      });\r\n\r\n    } else {\r\n      // Remover completamente del carrito\r\n      const { error: deleteError } = await supabase\r\n        .from('cart_items')\r\n        .delete()\r\n        .eq('id', existingItem.id);\r\n\r\n      if (deleteError) {\r\n        console.error('❌ Cart Remove API: Error removiendo del carrito:', deleteError);\r\n        return NextResponse.json(\r\n          { \r\n            success: false, \r\n            error: 'Error removiendo producto del carrito',\r\n            details: deleteError.message\r\n          }, \r\n          { status: 500 }\r\n        );\r\n      }\r\n\r\n      operation = 'completely_removed';\r\n      responseMessage = `${existingItem.products.name} removido del carrito`;\r\n      \r\n      console.log(`✅ Cart Remove API: Producto removido completamente - ${responseMessage}`);\r\n\r\n      return NextResponse.json({\r\n        success: true,\r\n        message: responseMessage,\r\n        operation,\r\n        item: {\r\n          productId: productId,\r\n          productName: existingItem.products.name,\r\n          removedQuantity: existingItem.quantity\r\n        }\r\n      });\r\n    }\r\n\r\n  } catch (error: any) {\r\n    console.error('❌ Cart Remove API: Error inesperado:', error);\r\n    return NextResponse.json(\r\n      { \r\n        success: false, \r\n        error: 'Error interno del servidor',\r\n        details: error.message\r\n      }, \r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * POST /api/cart/remove\r\n * Alias para DELETE (para compatibilidad)\r\n */\r\nexport async function POST(request: NextRequest) {\r\n  return DELETE(request);\r\n}\r\n\r\n/**\r\n * GET /api/cart/remove\r\n * Información sobre cómo usar este endpoint\r\n */\r\nexport async function GET() {\r\n  return NextResponse.json({\r\n    endpoint: '/api/cart/remove',\r\n    methods: ['DELETE', 'POST'],\r\n    description: 'Remover productos del carrito de compras',\r\n    parameters: {\r\n      productId: 'number - ID del producto a remover (requerido)',\r\n      quantity: 'number - Cantidad específica a remover (opcional). Si no se especifica o es mayor/igual a la cantidad actual, se remueve completamente'\r\n    },\r\n    examples: {\r\n      removeCompletely: {\r\n        productId: 123\r\n      },\r\n      reduceQuantity: {\r\n        productId: 123,\r\n        quantity: 1\r\n      }\r\n    },\r\n    authentication: 'Requerida - Usuario debe estar autenticado',\r\n    responses: {\r\n      200: 'Producto removido exitosamente',\r\n      400: 'Datos inválidos',\r\n      401: 'Usuario no autenticado',\r\n      404: 'Producto no está en el carrito',\r\n      500: 'Error interno del servidor'\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA0MsB;IAAAA,cAAA,YAAAA,CA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","ignoreList":[]}