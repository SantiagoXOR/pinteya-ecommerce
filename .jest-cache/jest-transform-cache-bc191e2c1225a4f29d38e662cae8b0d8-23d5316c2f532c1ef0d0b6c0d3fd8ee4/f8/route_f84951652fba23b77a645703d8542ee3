dbcfce39380672530257f21682de3a2b
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_fsphwrrwg() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\audit\\route.ts";
  var hash = "b74d05f8e3917eb74d67a2b22216e2c9f13e9c6a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\audit\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 13
        },
        end: {
          line: 24,
          column: 27
        }
      },
      "9": {
        start: {
          line: 25,
          column: 20
        },
        end: {
          line: 25,
          column: 52
        }
      },
      "10": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 54
        }
      },
      "11": {
        start: {
          line: 27,
          column: 21
        },
        end: {
          line: 27,
          column: 71
        }
      },
      "12": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 60
        }
      },
      "13": {
        start: {
          line: 29,
          column: 17
        },
        end: {
          line: 29,
          column: 62
        }
      },
      "14": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 24
        }
      },
      "15": {
        start: {
          line: 34,
          column: 17
        },
        end: {
          line: 34,
          column: 123
        }
      },
      "16": {
        start: {
          line: 35,
          column: 27
        },
        end: {
          line: 41,
          column: 1
        }
      },
      "17": {
        start: {
          line: 45,
          column: 27
        },
        end: {
          line: 73,
          column: 2
        }
      },
      "18": {
        start: {
          line: 74,
          column: 26
        },
        end: {
          line: 82,
          column: 2
        }
      },
      "19": {
        start: {
          line: 87,
          column: 20
        },
        end: {
          line: 87,
          column: 45
        }
      },
      "20": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "21": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 92,
          column: 10
        }
      },
      "22": {
        start: {
          line: 95,
          column: 30
        },
        end: {
          line: 95,
          column: 111
        }
      },
      "23": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 101,
          column: 5
        }
      },
      "24": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 100,
          column: 10
        }
      },
      "25": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 104,
          column: 6
        }
      },
      "26": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 115,
          column: 6
        }
      },
      "27": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "28": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 59
        }
      },
      "29": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 122,
          column: 5
        }
      },
      "30": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 51
        }
      },
      "31": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 125,
          column: 5
        }
      },
      "32": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 53
        }
      },
      "33": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 128,
          column: 5
        }
      },
      "34": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 57
        }
      },
      "35": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 131,
          column: 5
        }
      },
      "36": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 59
        }
      },
      "37": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 134,
          column: 5
        }
      },
      "38": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 57
        }
      },
      "39": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 137,
          column: 5
        }
      },
      "40": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 134
        }
      },
      "41": {
        start: {
          line: 139,
          column: 22
        },
        end: {
          line: 142,
          column: 6
        }
      },
      "42": {
        start: {
          line: 144,
          column: 19
        },
        end: {
          line: 144,
          column: 53
        }
      },
      "43": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 147,
          column: 49
        }
      },
      "44": {
        start: {
          line: 148,
          column: 28
        },
        end: {
          line: 148,
          column: 39
        }
      },
      "45": {
        start: {
          line: 149,
          column: 4
        },
        end: {
          line: 151,
          column: 5
        }
      },
      "46": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 80
        }
      },
      "47": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 156,
          column: 6
        }
      },
      "48": {
        start: {
          line: 160,
          column: 37
        },
        end: {
          line: 168,
          column: 6
        }
      },
      "49": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 171,
          column: 5
        }
      },
      "50": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 88
        }
      },
      "51": {
        start: {
          line: 172,
          column: 17
        },
        end: {
          line: 172,
          column: 30
        }
      },
      "52": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 173,
          column: 26
        }
      },
      "53": {
        start: {
          line: 174,
          column: 20
        },
        end: {
          line: 174,
          column: 65
        }
      },
      "54": {
        start: {
          line: 175,
          column: 19
        },
        end: {
          line: 175,
          column: 68
        }
      },
      "55": {
        start: {
          line: 176,
          column: 20
        },
        end: {
          line: 176,
          column: 70
        }
      },
      "56": {
        start: {
          line: 178,
          column: 27
        },
        end: {
          line: 181,
          column: 10
        }
      },
      "57": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 53
        }
      },
      "58": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 19
        }
      },
      "59": {
        start: {
          line: 183,
          column: 26
        },
        end: {
          line: 186,
          column: 10
        }
      },
      "60": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 61
        }
      },
      "61": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 19
        }
      },
      "62": {
        start: {
          line: 188,
          column: 25
        },
        end: {
          line: 192,
          column: 10
        }
      },
      "63": {
        start: {
          line: 189,
          column: 25
        },
        end: {
          line: 189,
          column: 88
        }
      },
      "64": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 49
        }
      },
      "65": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 19
        }
      },
      "66": {
        start: {
          line: 194,
          column: 27
        },
        end: {
          line: 198,
          column: 5
        }
      },
      "67": {
        start: {
          line: 195,
          column: 37
        },
        end: {
          line: 195,
          column: 72
        }
      },
      "68": {
        start: {
          line: 196,
          column: 36
        },
        end: {
          line: 196,
          column: 70
        }
      },
      "69": {
        start: {
          line: 197,
          column: 37
        },
        end: {
          line: 197,
          column: 72
        }
      },
      "70": {
        start: {
          line: 200,
          column: 23
        },
        end: {
          line: 212,
          column: 10
        }
      },
      "71": {
        start: {
          line: 201,
          column: 23
        },
        end: {
          line: 201,
          column: 34
        }
      },
      "72": {
        start: {
          line: 202,
          column: 25
        },
        end: {
          line: 202,
          column: 88
        }
      },
      "73": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "74": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 208,
          column: 14
        }
      },
      "75": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 35
        }
      },
      "76": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 211,
          column: 19
        }
      },
      "77": {
        start: {
          line: 213,
          column: 21
        },
        end: {
          line: 213,
          column: 105
        }
      },
      "78": {
        start: {
          line: 213,
          column: 60
        },
        end: {
          line: 213,
          column: 91
        }
      },
      "79": {
        start: {
          line: 215,
          column: 22
        },
        end: {
          line: 218,
          column: 70
        }
      },
      "80": {
        start: {
          line: 215,
          column: 87
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "81": {
        start: {
          line: 218,
          column: 25
        },
        end: {
          line: 218,
          column: 56
        }
      },
      "82": {
        start: {
          line: 219,
          column: 4
        },
        end: {
          line: 227,
          column: 6
        }
      },
      "83": {
        start: {
          line: 231,
          column: 21
        },
        end: {
          line: 236,
          column: 6
        }
      },
      "84": {
        start: {
          line: 238,
          column: 23
        },
        end: {
          line: 259,
          column: 6
        }
      },
      "85": {
        start: {
          line: 239,
          column: 25
        },
        end: {
          line: 250,
          column: 9
        }
      },
      "86": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 257,
          column: 9
        }
      },
      "87": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 256,
          column: 14
        }
      },
      "88": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 258,
          column: 24
        }
      },
      "89": {
        start: {
          line: 260,
          column: 4
        },
        end: {
          line: 264,
          column: 6
        }
      },
      "90": {
        start: {
          line: 267,
          column: 22
        },
        end: {
          line: 267,
          column: 109
        }
      },
      "91": {
        start: {
          line: 268,
          column: 22
        },
        end: {
          line: 268,
          column: 68
        }
      },
      "92": {
        start: {
          line: 269,
          column: 22
        },
        end: {
          line: 279,
          column: 6
        }
      },
      "93": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 284,
          column: 5
        }
      },
      "94": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 283,
          column: 11
        }
      },
      "95": {
        start: {
          line: 287,
          column: 22
        },
        end: {
          line: 287,
          column: 32
        }
      },
      "96": {
        start: {
          line: 288,
          column: 4
        },
        end: {
          line: 435,
          column: 5
        }
      },
      "97": {
        start: {
          line: 290,
          column: 32
        },
        end: {
          line: 294,
          column: 25
        }
      },
      "98": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 303,
          column: 9
        }
      },
      "99": {
        start: {
          line: 296,
          column: 29
        },
        end: {
          line: 300,
          column: 14
        }
      },
      "100": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 77
        }
      },
      "101": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 302,
          column: 28
        }
      },
      "102": {
        start: {
          line: 305,
          column: 27
        },
        end: {
          line: 305,
          column: 52
        }
      },
      "103": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 315,
          column: 9
        }
      },
      "104": {
        start: {
          line: 307,
          column: 34
        },
        end: {
          line: 311,
          column: 13
        }
      },
      "105": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 314,
          column: 15
        }
      },
      "106": {
        start: {
          line: 317,
          column: 33
        },
        end: {
          line: 317,
          column: 53
        }
      },
      "107": {
        start: {
          line: 318,
          column: 23
        },
        end: {
          line: 318,
          column: 49
        }
      },
      "108": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 339,
          column: 9
        }
      },
      "109": {
        start: {
          line: 322,
          column: 26
        },
        end: {
          line: 322,
          column: 47
        }
      },
      "110": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 330,
          column: 15
        }
      },
      "111": {
        start: {
          line: 331,
          column: 29
        },
        end: {
          line: 335,
          column: 13
        }
      },
      "112": {
        start: {
          line: 336,
          column: 33
        },
        end: {
          line: 336,
          column: 68
        }
      },
      "113": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 337,
          column: 81
        }
      },
      "114": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 338,
          column: 32
        }
      },
      "115": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 377,
          column: 9
        }
      },
      "116": {
        start: {
          line: 342,
          column: 27
        },
        end: {
          line: 342,
          column: 62
        }
      },
      "117": {
        start: {
          line: 343,
          column: 35
        },
        end: {
          line: 343,
          column: 81
        }
      },
      "118": {
        start: {
          line: 344,
          column: 28
        },
        end: {
          line: 352,
          column: 14
        }
      },
      "119": {
        start: {
          line: 353,
          column: 33
        },
        end: {
          line: 353,
          column: 87
        }
      },
      "120": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 360,
          column: 43
        }
      },
      "121": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 368,
          column: 15
        }
      },
      "122": {
        start: {
          line: 369,
          column: 29
        },
        end: {
          line: 373,
          column: 13
        }
      },
      "123": {
        start: {
          line: 374,
          column: 33
        },
        end: {
          line: 374,
          column: 68
        }
      },
      "124": {
        start: {
          line: 375,
          column: 12
        },
        end: {
          line: 375,
          column: 81
        }
      },
      "125": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 376,
          column: 32
        }
      },
      "126": {
        start: {
          line: 379,
          column: 24
        },
        end: {
          line: 391,
          column: 10
        }
      },
      "127": {
        start: {
          line: 392,
          column: 44
        },
        end: {
          line: 392,
          column: 71
        }
      },
      "128": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 400,
          column: 11
        }
      },
      "129": {
        start: {
          line: 401,
          column: 25
        },
        end: {
          line: 411,
          column: 9
        }
      },
      "130": {
        start: {
          line: 412,
          column: 29
        },
        end: {
          line: 412,
          column: 64
        }
      },
      "131": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 413,
          column: 77
        }
      },
      "132": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 414,
          column: 28
        }
      },
      "133": {
        start: {
          line: 416,
          column: 8
        },
        end: {
          line: 418,
          column: 11
        }
      },
      "134": {
        start: {
          line: 420,
          column: 8
        },
        end: {
          line: 426,
          column: 11
        }
      },
      "135": {
        start: {
          line: 427,
          column: 30
        },
        end: {
          line: 431,
          column: 9
        }
      },
      "136": {
        start: {
          line: 432,
          column: 8
        },
        end: {
          line: 434,
          column: 11
        }
      },
      "137": {
        start: {
          line: 438,
          column: 22
        },
        end: {
          line: 438,
          column: 32
        }
      },
      "138": {
        start: {
          line: 439,
          column: 4
        },
        end: {
          line: 520,
          column: 5
        }
      },
      "139": {
        start: {
          line: 441,
          column: 32
        },
        end: {
          line: 445,
          column: 32
        }
      },
      "140": {
        start: {
          line: 446,
          column: 8
        },
        end: {
          line: 454,
          column: 9
        }
      },
      "141": {
        start: {
          line: 447,
          column: 29
        },
        end: {
          line: 451,
          column: 14
        }
      },
      "142": {
        start: {
          line: 452,
          column: 12
        },
        end: {
          line: 452,
          column: 77
        }
      },
      "143": {
        start: {
          line: 453,
          column: 12
        },
        end: {
          line: 453,
          column: 28
        }
      },
      "144": {
        start: {
          line: 456,
          column: 27
        },
        end: {
          line: 456,
          column: 52
        }
      },
      "145": {
        start: {
          line: 457,
          column: 8
        },
        end: {
          line: 466,
          column: 9
        }
      },
      "146": {
        start: {
          line: 458,
          column: 34
        },
        end: {
          line: 462,
          column: 13
        }
      },
      "147": {
        start: {
          line: 463,
          column: 12
        },
        end: {
          line: 465,
          column: 15
        }
      },
      "148": {
        start: {
          line: 468,
          column: 21
        },
        end: {
          line: 468,
          column: 41
        }
      },
      "149": {
        start: {
          line: 469,
          column: 74
        },
        end: {
          line: 469,
          column: 78
        }
      },
      "150": {
        start: {
          line: 470,
          column: 8
        },
        end: {
          line: 479,
          column: 9
        }
      },
      "151": {
        start: {
          line: 471,
          column: 34
        },
        end: {
          line: 475,
          column: 13
        }
      },
      "152": {
        start: {
          line: 476,
          column: 12
        },
        end: {
          line: 478,
          column: 15
        }
      },
      "153": {
        start: {
          line: 481,
          column: 8
        },
        end: {
          line: 481,
          column: 112
        }
      },
      "154": {
        start: {
          line: 483,
          column: 8
        },
        end: {
          line: 489,
          column: 11
        }
      },
      "155": {
        start: {
          line: 490,
          column: 25
        },
        end: {
          line: 494,
          column: 9
        }
      },
      "156": {
        start: {
          line: 495,
          column: 29
        },
        end: {
          line: 497,
          column: 10
        }
      },
      "157": {
        start: {
          line: 498,
          column: 8
        },
        end: {
          line: 498,
          column: 77
        }
      },
      "158": {
        start: {
          line: 499,
          column: 8
        },
        end: {
          line: 499,
          column: 28
        }
      },
      "159": {
        start: {
          line: 501,
          column: 8
        },
        end: {
          line: 503,
          column: 11
        }
      },
      "160": {
        start: {
          line: 505,
          column: 8
        },
        end: {
          line: 511,
          column: 11
        }
      },
      "161": {
        start: {
          line: 512,
          column: 30
        },
        end: {
          line: 516,
          column: 9
        }
      },
      "162": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 519,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "validateAdminAuth",
        decl: {
          start: {
            line: 86,
            column: 15
          },
          end: {
            line: 86,
            column: 32
          }
        },
        loc: {
          start: {
            line: 86,
            column: 35
          },
          end: {
            line: 105,
            column: 1
          }
        },
        line: 86
      },
      "5": {
        name: "getAuditLogs",
        decl: {
          start: {
            line: 106,
            column: 15
          },
          end: {
            line: 106,
            column: 27
          }
        },
        loc: {
          start: {
            line: 106,
            column: 37
          },
          end: {
            line: 157,
            column: 1
          }
        },
        line: 106
      },
      "6": {
        name: "getAuditStats",
        decl: {
          start: {
            line: 158,
            column: 15
          },
          end: {
            line: 158,
            column: 28
          }
        },
        loc: {
          start: {
            line: 158,
            column: 31
          },
          end: {
            line: 228,
            column: 1
          }
        },
        line: 158
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 178,
            column: 39
          },
          end: {
            line: 178,
            column: 40
          }
        },
        loc: {
          start: {
            line: 178,
            column: 51
          },
          end: {
            line: 181,
            column: 5
          }
        },
        line: 178
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 183,
            column: 38
          },
          end: {
            line: 183,
            column: 39
          }
        },
        loc: {
          start: {
            line: 183,
            column: 50
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 183
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 188,
            column: 37
          },
          end: {
            line: 188,
            column: 38
          }
        },
        loc: {
          start: {
            line: 188,
            column: 49
          },
          end: {
            line: 192,
            column: 5
          }
        },
        line: 188
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 195,
            column: 30
          },
          end: {
            line: 195,
            column: 31
          }
        },
        loc: {
          start: {
            line: 195,
            column: 37
          },
          end: {
            line: 195,
            column: 72
          }
        },
        line: 195
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 196,
            column: 29
          },
          end: {
            line: 196,
            column: 30
          }
        },
        loc: {
          start: {
            line: 196,
            column: 36
          },
          end: {
            line: 196,
            column: 70
          }
        },
        line: 196
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 197,
            column: 30
          },
          end: {
            line: 197,
            column: 31
          }
        },
        loc: {
          start: {
            line: 197,
            column: 37
          },
          end: {
            line: 197,
            column: 72
          }
        },
        line: 197
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 200,
            column: 35
          },
          end: {
            line: 200,
            column: 36
          }
        },
        loc: {
          start: {
            line: 200,
            column: 47
          },
          end: {
            line: 212,
            column: 5
          }
        },
        line: 200
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 213,
            column: 52
          },
          end: {
            line: 213,
            column: 53
          }
        },
        loc: {
          start: {
            line: 213,
            column: 60
          },
          end: {
            line: 213,
            column: 91
          }
        },
        line: 213
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 215,
            column: 56
          },
          end: {
            line: 215,
            column: 57
          }
        },
        loc: {
          start: {
            line: 215,
            column: 87
          },
          end: {
            line: 218,
            column: 9
          }
        },
        line: 215
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 218,
            column: 17
          },
          end: {
            line: 218,
            column: 18
          }
        },
        loc: {
          start: {
            line: 218,
            column: 25
          },
          end: {
            line: 218,
            column: 56
          }
        },
        line: 218
      },
      "17": {
        name: "exportAuditLogs",
        decl: {
          start: {
            line: 229,
            column: 15
          },
          end: {
            line: 229,
            column: 30
          }
        },
        loc: {
          start: {
            line: 229,
            column: 72
          },
          end: {
            line: 265,
            column: 1
          }
        },
        line: 229
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 238,
            column: 32
          },
          end: {
            line: 238,
            column: 33
          }
        },
        loc: {
          start: {
            line: 238,
            column: 39
          },
          end: {
            line: 259,
            column: 5
          }
        },
        line: 238
      },
      "19": {
        name: "createAuditLog",
        decl: {
          start: {
            line: 266,
            column: 15
          },
          end: {
            line: 266,
            column: 29
          }
        },
        loc: {
          start: {
            line: 266,
            column: 98
          },
          end: {
            line: 285,
            column: 1
          }
        },
        line: 266
      },
      "20": {
        name: "GET",
        decl: {
          start: {
            line: 286,
            column: 15
          },
          end: {
            line: 286,
            column: 18
          }
        },
        loc: {
          start: {
            line: 286,
            column: 28
          },
          end: {
            line: 436,
            column: 1
          }
        },
        line: 286
      },
      "21": {
        name: "POST",
        decl: {
          start: {
            line: 437,
            column: 15
          },
          end: {
            line: 437,
            column: 19
          }
        },
        loc: {
          start: {
            line: 437,
            column: 29
          },
          end: {
            line: 521,
            column: 1
          }
        },
        line: 437
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "1": {
        loc: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "2": {
        loc: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "3": {
        loc: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "4": {
        loc: {
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "5": {
        loc: {
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 128,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 128,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "6": {
        loc: {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "7": {
        loc: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 134,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 134,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "8": {
        loc: {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "9": {
        loc: {
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 151,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 151,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "10": {
        loc: {
          start: {
            line: 153,
            column: 14
          },
          end: {
            line: 153,
            column: 24
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 14
          },
          end: {
            line: 153,
            column: 18
          }
        }, {
          start: {
            line: 153,
            column: 22
          },
          end: {
            line: 153,
            column: 24
          }
        }],
        line: 153
      },
      "11": {
        loc: {
          start: {
            line: 154,
            column: 15
          },
          end: {
            line: 154,
            column: 25
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 15
          },
          end: {
            line: 154,
            column: 20
          }
        }, {
          start: {
            line: 154,
            column: 24
          },
          end: {
            line: 154,
            column: 25
          }
        }],
        line: 154
      },
      "12": {
        loc: {
          start: {
            line: 155,
            column: 31
          },
          end: {
            line: 155,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 31
          },
          end: {
            line: 155,
            column: 36
          }
        }, {
          start: {
            line: 155,
            column: 40
          },
          end: {
            line: 155,
            column: 41
          }
        }],
        line: 155
      },
      "13": {
        loc: {
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "14": {
        loc: {
          start: {
            line: 172,
            column: 17
          },
          end: {
            line: 172,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 17
          },
          end: {
            line: 172,
            column: 24
          }
        }, {
          start: {
            line: 172,
            column: 28
          },
          end: {
            line: 172,
            column: 30
          }
        }],
        line: 172
      },
      "15": {
        loc: {
          start: {
            line: 179,
            column: 27
          },
          end: {
            line: 179,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 27
          },
          end: {
            line: 179,
            column: 42
          }
        }, {
          start: {
            line: 179,
            column: 46
          },
          end: {
            line: 179,
            column: 47
          }
        }],
        line: 179
      },
      "16": {
        loc: {
          start: {
            line: 184,
            column: 31
          },
          end: {
            line: 184,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 31
          },
          end: {
            line: 184,
            column: 50
          }
        }, {
          start: {
            line: 184,
            column: 54
          },
          end: {
            line: 184,
            column: 55
          }
        }],
        line: 184
      },
      "17": {
        loc: {
          start: {
            line: 189,
            column: 25
          },
          end: {
            line: 189,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 25
          },
          end: {
            line: 189,
            column: 44
          }
        }, {
          start: {
            line: 189,
            column: 48
          },
          end: {
            line: 189,
            column: 63
          }
        }, {
          start: {
            line: 189,
            column: 67
          },
          end: {
            line: 189,
            column: 88
          }
        }],
        line: 189
      },
      "18": {
        loc: {
          start: {
            line: 190,
            column: 25
          },
          end: {
            line: 190,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 25
          },
          end: {
            line: 190,
            column: 38
          }
        }, {
          start: {
            line: 190,
            column: 42
          },
          end: {
            line: 190,
            column: 43
          }
        }],
        line: 190
      },
      "19": {
        loc: {
          start: {
            line: 202,
            column: 25
          },
          end: {
            line: 202,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 25
          },
          end: {
            line: 202,
            column: 44
          }
        }, {
          start: {
            line: 202,
            column: 48
          },
          end: {
            line: 202,
            column: 63
          }
        }, {
          start: {
            line: 202,
            column: 67
          },
          end: {
            line: 202,
            column: 88
          }
        }],
        line: 202
      },
      "20": {
        loc: {
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "21": {
        loc: {
          start: {
            line: 229,
            column: 48
          },
          end: {
            line: 229,
            column: 70
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 229,
            column: 65
          },
          end: {
            line: 229,
            column: 70
          }
        }],
        line: 229
      },
      "22": {
        loc: {
          start: {
            line: 231,
            column: 40
          },
          end: {
            line: 236,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 40
          },
          end: {
            line: 231,
            column: 47
          }
        }, {
          start: {
            line: 231,
            column: 51
          },
          end: {
            line: 236,
            column: 5
          }
        }],
        line: 231
      },
      "23": {
        loc: {
          start: {
            line: 244,
            column: 21
          },
          end: {
            line: 244,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 244,
            column: 21
          },
          end: {
            line: 244,
            column: 40
          }
        }, {
          start: {
            line: 244,
            column: 44
          },
          end: {
            line: 244,
            column: 59
          }
        }, {
          start: {
            line: 244,
            column: 63
          },
          end: {
            line: 244,
            column: 76
          }
        }],
        line: 244
      },
      "24": {
        loc: {
          start: {
            line: 245,
            column: 27
          },
          end: {
            line: 245,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 245,
            column: 27
          },
          end: {
            line: 245,
            column: 42
          }
        }, {
          start: {
            line: 245,
            column: 46
          },
          end: {
            line: 245,
            column: 48
          }
        }],
        line: 245
      },
      "25": {
        loc: {
          start: {
            line: 246,
            column: 25
          },
          end: {
            line: 246,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 246,
            column: 25
          },
          end: {
            line: 246,
            column: 39
          }
        }, {
          start: {
            line: 246,
            column: 43
          },
          end: {
            line: 246,
            column: 45
          }
        }],
        line: 246
      },
      "26": {
        loc: {
          start: {
            line: 248,
            column: 24
          },
          end: {
            line: 248,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 24
          },
          end: {
            line: 248,
            column: 38
          }
        }, {
          start: {
            line: 248,
            column: 42
          },
          end: {
            line: 248,
            column: 44
          }
        }],
        line: 248
      },
      "27": {
        loc: {
          start: {
            line: 249,
            column: 24
          },
          end: {
            line: 249,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 24
          },
          end: {
            line: 249,
            column: 38
          }
        }, {
          start: {
            line: 249,
            column: 42
          },
          end: {
            line: 249,
            column: 44
          }
        }],
        line: 249
      },
      "28": {
        loc: {
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 257,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 257,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "29": {
        loc: {
          start: {
            line: 254,
            column: 36
          },
          end: {
            line: 254,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 254,
            column: 53
          },
          end: {
            line: 254,
            column: 83
          }
        }, {
          start: {
            line: 254,
            column: 86
          },
          end: {
            line: 254,
            column: 88
          }
        }],
        line: 254
      },
      "30": {
        loc: {
          start: {
            line: 255,
            column: 32
          },
          end: {
            line: 255,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 255,
            column: 49
          },
          end: {
            line: 255,
            column: 79
          }
        }, {
          start: {
            line: 255,
            column: 82
          },
          end: {
            line: 255,
            column: 84
          }
        }],
        line: 255
      },
      "31": {
        loc: {
          start: {
            line: 267,
            column: 22
          },
          end: {
            line: 267,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 267,
            column: 22
          },
          end: {
            line: 267,
            column: 60
          }
        }, {
          start: {
            line: 267,
            column: 64
          },
          end: {
            line: 267,
            column: 96
          }
        }, {
          start: {
            line: 267,
            column: 100
          },
          end: {
            line: 267,
            column: 109
          }
        }],
        line: 267
      },
      "32": {
        loc: {
          start: {
            line: 268,
            column: 22
          },
          end: {
            line: 268,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 268,
            column: 22
          },
          end: {
            line: 268,
            column: 55
          }
        }, {
          start: {
            line: 268,
            column: 59
          },
          end: {
            line: 268,
            column: 68
          }
        }],
        line: 268
      },
      "33": {
        loc: {
          start: {
            line: 280,
            column: 4
          },
          end: {
            line: 284,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 4
          },
          end: {
            line: 284,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "34": {
        loc: {
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "35": {
        loc: {
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 315,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 315,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 306
      },
      "36": {
        loc: {
          start: {
            line: 320,
            column: 8
          },
          end: {
            line: 339,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 320,
            column: 8
          },
          end: {
            line: 339,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 320
      },
      "37": {
        loc: {
          start: {
            line: 340,
            column: 8
          },
          end: {
            line: 377,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 340,
            column: 8
          },
          end: {
            line: 377,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 340
      },
      "38": {
        loc: {
          start: {
            line: 342,
            column: 27
          },
          end: {
            line: 342,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 342,
            column: 27
          },
          end: {
            line: 342,
            column: 53
          }
        }, {
          start: {
            line: 342,
            column: 57
          },
          end: {
            line: 342,
            column: 62
          }
        }],
        line: 342
      },
      "39": {
        loc: {
          start: {
            line: 425,
            column: 19
          },
          end: {
            line: 425,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 425,
            column: 44
          },
          end: {
            line: 425,
            column: 57
          }
        }, {
          start: {
            line: 425,
            column: 60
          },
          end: {
            line: 425,
            column: 75
          }
        }],
        line: 425
      },
      "40": {
        loc: {
          start: {
            line: 446,
            column: 8
          },
          end: {
            line: 454,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 446,
            column: 8
          },
          end: {
            line: 454,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 446
      },
      "41": {
        loc: {
          start: {
            line: 457,
            column: 8
          },
          end: {
            line: 466,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 457,
            column: 8
          },
          end: {
            line: 466,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 457
      },
      "42": {
        loc: {
          start: {
            line: 470,
            column: 8
          },
          end: {
            line: 479,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 470,
            column: 8
          },
          end: {
            line: 479,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 470
      },
      "43": {
        loc: {
          start: {
            line: 470,
            column: 12
          },
          end: {
            line: 470,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 470,
            column: 12
          },
          end: {
            line: 470,
            column: 23
          }
        }, {
          start: {
            line: 470,
            column: 27
          },
          end: {
            line: 470,
            column: 37
          }
        }, {
          start: {
            line: 470,
            column: 41
          },
          end: {
            line: 470,
            column: 48
          }
        }],
        line: 470
      },
      "44": {
        loc: {
          start: {
            line: 510,
            column: 19
          },
          end: {
            line: 510,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 510,
            column: 44
          },
          end: {
            line: 510,
            column: 57
          }
        }, {
          start: {
            line: 510,
            column: 60
          },
          end: {
            line: 510,
            column: 75
          }
        }],
        line: 510
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0, 0],
      "20": [0, 0],
      "21": [0],
      "22": [0, 0],
      "23": [0, 0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0, 0],
      "44": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\audit\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { z } from 'zod';\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { checkRateLimit, addRateLimitHeaders } from '@/lib/enterprise/rate-limiter';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\nimport { metricsCollector } from '@/lib/enterprise/metrics';\r\n\r\n// ===================================\r\n// CONFIGURACI\xD3N\r\n// ===================================\r\nconst supabase = createClient(\r\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\r\n);\r\n\r\nconst RATE_LIMIT_CONFIGS = {\r\n  admin: {\r\n    windowMs: 15 * 60 * 1000, // 15 minutos\r\n    maxRequests: 100,\r\n    message: 'Demasiadas solicitudes administrativas'\r\n  }\r\n};\r\n\r\n// ===================================\r\n// ESQUEMAS DE VALIDACI\xD3N\r\n// ===================================\r\nconst AuditFiltersSchema = z.object({\r\n  table_name: z.string().optional(),\r\n  action: z.enum(['CREATE', 'UPDATE', 'DELETE', 'LOGIN', 'LOGOUT', 'EXPORT', 'IMPORT']).optional(),\r\n  user_id: z.string().uuid().optional(),\r\n  record_id: z.string().optional(),\r\n  date_from: z.string().optional(),\r\n  date_to: z.string().optional(),\r\n  search: z.string().optional(),\r\n  page: z.coerce.number().min(1).default(1),\r\n  limit: z.coerce.number().min(1).max(100).default(20),\r\n  sort_by: z.enum(['created_at', 'table_name', 'action', 'user_id']).default('created_at'),\r\n  sort_order: z.enum(['asc', 'desc']).default('desc')\r\n});\r\n\r\nconst ExportAuditSchema = z.object({\r\n  format: z.enum(['csv', 'json', 'xlsx']).default('csv'),\r\n  filters: AuditFiltersSchema.optional(),\r\n  include_details: z.boolean().default(false)\r\n});\r\n\r\n// ===================================\r\n// TIPOS\r\n// ===================================\r\ninterface ApiResponse<T> {\r\n  data: T;\r\n  success: boolean;\r\n  message?: string;\r\n  error?: string;\r\n  pagination?: {\r\n    page: number;\r\n    limit: number;\r\n    total: number;\r\n    totalPages: number;\r\n  };\r\n}\r\n\r\ninterface AuditLogData {\r\n  id: string;\r\n  table_name: string;\r\n  record_id: string;\r\n  action: 'CREATE' | 'UPDATE' | 'DELETE' | 'LOGIN' | 'LOGOUT' | 'EXPORT' | 'IMPORT';\r\n  old_values?: Record<string, any>;\r\n  new_values?: Record<string, any>;\r\n  user_id: string;\r\n  ip_address?: string;\r\n  user_agent?: string;\r\n  created_at: string;\r\n  user?: {\r\n    id: string;\r\n    email: string;\r\n    full_name: string;\r\n    role: string;\r\n  };\r\n}\r\n\r\ninterface AuditStats {\r\n  total_logs: number;\r\n  actions_summary: Record<string, number>;\r\n  tables_summary: Record<string, number>;\r\n  users_summary: Record<string, number>;\r\n  recent_activity: {\r\n    last_24h: number;\r\n    last_7d: number;\r\n    last_30d: number;\r\n  };\r\n  top_users: Array<{\r\n    user_id: string;\r\n    user_name: string;\r\n    action_count: number;\r\n  }>;\r\n  top_tables: Array<{\r\n    table_name: string;\r\n    action_count: number;\r\n  }>;\r\n}\r\n\r\n// ===================================\r\n// FUNCIONES AUXILIARES\r\n// ===================================\r\nasync function validateAdminAuth() {\r\n  const session = await auth();\r\n  \r\n  if (!session?.user) {\r\n    return { error: 'No autorizado', status: 401 };\r\n  }\r\n\r\n  // Verificar rol de administrador\r\n  const { data: profile } = await supabase\r\n    .from('profiles')\r\n    .select('role')\r\n    .eq('id', session.user.id)\r\n    .single();\r\n\r\n  if (profile?.role !== 'admin') {\r\n    return { error: 'Acceso denegado', status: 403 };\r\n  }\r\n\r\n  return { userId: session.user.id };\r\n}\r\n\r\nasync function getAuditLogs(filters: z.infer<typeof AuditFiltersSchema>) {\r\n  let query = supabase\r\n    .from('audit_logs')\r\n    .select(`\r\n      *,\r\n      user:profiles!audit_logs_user_id_fkey(\r\n        id,\r\n        email,\r\n        full_name,\r\n        role\r\n      )\r\n    `);\r\n\r\n  // Aplicar filtros\r\n  if (filters.table_name) {\r\n    query = query.eq('table_name', filters.table_name);\r\n  }\r\n\r\n  if (filters.action) {\r\n    query = query.eq('action', filters.action);\r\n  }\r\n\r\n  if (filters.user_id) {\r\n    query = query.eq('user_id', filters.user_id);\r\n  }\r\n\r\n  if (filters.record_id) {\r\n    query = query.eq('record_id', filters.record_id);\r\n  }\r\n\r\n  if (filters.date_from) {\r\n    query = query.gte('created_at', filters.date_from);\r\n  }\r\n\r\n  if (filters.date_to) {\r\n    query = query.lte('created_at', filters.date_to);\r\n  }\r\n\r\n  if (filters.search) {\r\n    query = query.or(`table_name.ilike.%${filters.search}%,action.ilike.%${filters.search}%,record_id.ilike.%${filters.search}%`);\r\n  }\r\n\r\n  // Contar total\r\n  const { count } = await query.select('*', { count: 'exact', head: true });\r\n\r\n  // Aplicar paginaci\xF3n y ordenamiento\r\n  const offset = (filters.page - 1) * filters.limit;\r\n  query = query\r\n    .order(filters.sort_by, { ascending: filters.sort_order === 'asc' })\r\n    .range(offset, offset + filters.limit - 1);\r\n\r\n  const { data, error } = await query;\r\n\r\n  if (error) {\r\n    throw new Error(`Error al obtener logs de auditor\xEDa: ${error.message}`);\r\n  }\r\n\r\n  return {\r\n    logs: data || [],\r\n    total: count || 0,\r\n    totalPages: Math.ceil((count || 0) / filters.limit)\r\n  };\r\n}\r\n\r\nasync function getAuditStats(): Promise<AuditStats> {\r\n  // Obtener todos los logs para estad\xEDsticas\r\n  const { data: allLogs, error } = await supabase\r\n    .from('audit_logs')\r\n    .select(`\r\n      *,\r\n      user:profiles!audit_logs_user_id_fkey(\r\n        id,\r\n        email,\r\n        full_name,\r\n        role\r\n      )\r\n    `);\r\n\r\n  if (error) {\r\n    throw new Error(`Error al obtener estad\xEDsticas de auditor\xEDa: ${error.message}`);\r\n  }\r\n\r\n  const logs = allLogs || [];\r\n  const now = new Date();\r\n  const last24h = new Date(now.getTime() - 24 * 60 * 60 * 1000);\r\n  const last7d = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\r\n  const last30d = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\r\n\r\n  // Resumen de acciones\r\n  const actionsSummary = logs.reduce((acc, log) => {\r\n    acc[log.action] = (acc[log.action] || 0) + 1;\r\n    return acc;\r\n  }, {} as Record<string, number>);\r\n\r\n  // Resumen de tablas\r\n  const tablesSummary = logs.reduce((acc, log) => {\r\n    acc[log.table_name] = (acc[log.table_name] || 0) + 1;\r\n    return acc;\r\n  }, {} as Record<string, number>);\r\n\r\n  // Resumen de usuarios\r\n  const usersSummary = logs.reduce((acc, log) => {\r\n    const userName = log.user?.full_name || log.user?.email || 'Usuario desconocido';\r\n    acc[userName] = (acc[userName] || 0) + 1;\r\n    return acc;\r\n  }, {} as Record<string, number>);\r\n\r\n  // Actividad reciente\r\n  const recentActivity = {\r\n    last_24h: logs.filter(log => new Date(log.created_at) >= last24h).length,\r\n    last_7d: logs.filter(log => new Date(log.created_at) >= last7d).length,\r\n    last_30d: logs.filter(log => new Date(log.created_at) >= last30d).length\r\n  };\r\n\r\n  // Top usuarios\r\n  const userCounts = logs.reduce((acc, log) => {\r\n    const userId = log.user_id;\r\n    const userName = log.user?.full_name || log.user?.email || 'Usuario desconocido';\r\n    if (!acc[userId]) {\r\n      acc[userId] = { user_id: userId, user_name: userName, action_count: 0 };\r\n    }\r\n    acc[userId].action_count++;\r\n    return acc;\r\n  }, {} as Record<string, { user_id: string; user_name: string; action_count: number }>);\r\n\r\n  const topUsers = Object.values(userCounts)\r\n    .sort((a, b) => b.action_count - a.action_count)\r\n    .slice(0, 10);\r\n\r\n  // Top tablas\r\n  const topTables = Object.entries(tablesSummary)\r\n    .map(([table_name, action_count]) => ({ table_name, action_count }))\r\n    .sort((a, b) => b.action_count - a.action_count)\r\n    .slice(0, 10);\r\n\r\n  return {\r\n    total_logs: logs.length,\r\n    actions_summary: actionsSummary,\r\n    tables_summary: tablesSummary,\r\n    users_summary: usersSummary,\r\n    recent_activity: recentActivity,\r\n    top_users: topUsers,\r\n    top_tables: topTables\r\n  };\r\n}\r\n\r\nasync function exportAuditLogs(\r\n  format: 'csv' | 'json' | 'xlsx',\r\n  filters?: z.infer<typeof AuditFiltersSchema>,\r\n  includeDetails: boolean = false\r\n) {\r\n  // Obtener logs con filtros aplicados\r\n  const { logs } = await getAuditLogs(filters || {\r\n    page: 1,\r\n    limit: 10000, // L\xEDmite alto para exportaci\xF3n\r\n    sort_by: 'created_at',\r\n    sort_order: 'desc'\r\n  });\r\n\r\n  // Preparar datos para exportaci\xF3n\r\n  const exportData = logs.map(log => {\r\n    const baseData = {\r\n      id: log.id,\r\n      tabla: log.table_name,\r\n      registro_id: log.record_id,\r\n      accion: log.action,\r\n      usuario: log.user?.full_name || log.user?.email || 'Desconocido',\r\n      email_usuario: log.user?.email || '',\r\n      rol_usuario: log.user?.role || '',\r\n      fecha_creacion: log.created_at,\r\n      ip_address: log.ip_address || '',\r\n      user_agent: log.user_agent || ''\r\n    };\r\n\r\n    if (includeDetails) {\r\n      return {\r\n        ...baseData,\r\n        valores_anteriores: log.old_values ? JSON.stringify(log.old_values) : '',\r\n        valores_nuevos: log.new_values ? JSON.stringify(log.new_values) : ''\r\n      };\r\n    }\r\n\r\n    return baseData;\r\n  });\r\n\r\n  return {\r\n    data: exportData,\r\n    filename: `audit_logs_${new Date().toISOString().split('T')[0]}.${format}`,\r\n    count: exportData.length\r\n  };\r\n}\r\n\r\nasync function createAuditLog(\r\n  tableName: string,\r\n  recordId: string,\r\n  action: string,\r\n  oldValues: any,\r\n  newValues: any,\r\n  userId: string,\r\n  request: NextRequest\r\n) {\r\n  const ipAddress = request.headers.get('x-forwarded-for') || \r\n                   request.headers.get('x-real-ip') || \r\n                   'unknown';\r\n  const userAgent = request.headers.get('user-agent') || 'unknown';\r\n\r\n  const { error } = await supabase\r\n    .from('audit_logs')\r\n    .insert({\r\n      table_name: tableName,\r\n      record_id: recordId,\r\n      action,\r\n      old_values: oldValues,\r\n      new_values: newValues,\r\n      user_id: userId,\r\n      ip_address: ipAddress,\r\n      user_agent: userAgent,\r\n      created_at: new Date().toISOString()\r\n    });\r\n\r\n  if (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error al crear log de auditor\xEDa', { error });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// GET - Obtener logs de auditor\xEDa\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,\r\n        maxRequests: RATE_LIMIT_CONFIGS.admin.maxRequests,\r\n        message: RATE_LIMIT_CONFIGS.admin.message\r\n      },\r\n      'admin-audit'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: rateLimitResult.message },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult);\r\n      return response;\r\n    }\r\n\r\n    // Validar autenticaci\xF3n admin\r\n    const authResult = await validateAdminAuth();\r\n    if (authResult.error) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: authResult.error,\r\n      };\r\n      return NextResponse.json(errorResponse, { status: authResult.status });\r\n    }\r\n\r\n    // Parsear par\xE1metros de consulta\r\n    const { searchParams } = new URL(request.url);\r\n    const action = searchParams.get('action');\r\n\r\n    // Manejar diferentes acciones\r\n    if (action === 'stats') {\r\n      // Obtener estad\xEDsticas\r\n      const stats = await getAuditStats();\r\n\r\n      // Registrar m\xE9tricas\r\n      metricsCollector.recordApiCall({\r\n        endpoint: '/api/admin/audit',\r\n        method: 'GET',\r\n        statusCode: 200,\r\n        responseTime: Date.now() - startTime,\r\n        userId: authResult.userId\r\n      });\r\n\r\n      const response: ApiResponse<AuditStats> = {\r\n        data: stats,\r\n        success: true,\r\n        message: 'Estad\xEDsticas de auditor\xEDa obtenidas exitosamente'\r\n      };\r\n\r\n      const nextResponse = NextResponse.json(response);\r\n      addRateLimitHeaders(nextResponse, rateLimitResult);\r\n      return nextResponse;\r\n    }\r\n\r\n    if (action === 'export') {\r\n      // Exportar logs\r\n      const format = (searchParams.get('format') as 'csv' | 'json' | 'xlsx') || 'csv';\r\n      const includeDetails = searchParams.get('include_details') === 'true';\r\n      \r\n      const filters = AuditFiltersSchema.parse({\r\n        table_name: searchParams.get('table_name'),\r\n        action: searchParams.get('filter_action'),\r\n        user_id: searchParams.get('user_id'),\r\n        record_id: searchParams.get('record_id'),\r\n        date_from: searchParams.get('date_from'),\r\n        date_to: searchParams.get('date_to'),\r\n        search: searchParams.get('search')\r\n      });\r\n\r\n      const exportResult = await exportAuditLogs(format, filters, includeDetails);\r\n\r\n      // Crear log de auditor\xEDa para la exportaci\xF3n\r\n      await createAuditLog(\r\n        'audit_logs',\r\n        'export',\r\n        'EXPORT',\r\n        null,\r\n        { format, filters, includeDetails, count: exportResult.count },\r\n        authResult.userId!,\r\n        request\r\n      );\r\n\r\n      // Registrar m\xE9tricas\r\n      metricsCollector.recordApiCall({\r\n        endpoint: '/api/admin/audit',\r\n        method: 'GET',\r\n        statusCode: 200,\r\n        responseTime: Date.now() - startTime,\r\n        userId: authResult.userId\r\n      });\r\n\r\n      const response: ApiResponse<typeof exportResult> = {\r\n        data: exportResult,\r\n        success: true,\r\n        message: `Logs exportados exitosamente en formato ${format}`\r\n      };\r\n\r\n      const nextResponse = NextResponse.json(response);\r\n      addRateLimitHeaders(nextResponse, rateLimitResult);\r\n      return nextResponse;\r\n    }\r\n\r\n    // Obtener logs normales\r\n    const filters = AuditFiltersSchema.parse({\r\n      table_name: searchParams.get('table_name'),\r\n      action: searchParams.get('action'),\r\n      user_id: searchParams.get('user_id'),\r\n      record_id: searchParams.get('record_id'),\r\n      date_from: searchParams.get('date_from'),\r\n      date_to: searchParams.get('date_to'),\r\n      search: searchParams.get('search'),\r\n      page: searchParams.get('page'),\r\n      limit: searchParams.get('limit'),\r\n      sort_by: searchParams.get('sort_by'),\r\n      sort_order: searchParams.get('sort_order')\r\n    });\r\n\r\n    const { logs, total, totalPages } = await getAuditLogs(filters);\r\n\r\n    // Registrar m\xE9tricas\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/audit',\r\n      method: 'GET',\r\n      statusCode: 200,\r\n      responseTime: Date.now() - startTime,\r\n      userId: authResult.userId\r\n    });\r\n\r\n    const response: ApiResponse<AuditLogData[]> = {\r\n      data: logs,\r\n      success: true,\r\n      message: 'Logs de auditor\xEDa obtenidos exitosamente',\r\n      pagination: {\r\n        page: filters.page,\r\n        limit: filters.limit,\r\n        total,\r\n        totalPages\r\n      }\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response);\r\n    addRateLimitHeaders(nextResponse, rateLimitResult);\r\n    return nextResponse;\r\n\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en GET /api/admin/audit', { error });\r\n\r\n    // Registrar m\xE9tricas de error\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/audit',\r\n      method: 'GET',\r\n      statusCode: 500,\r\n      responseTime: Date.now() - startTime,\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    });\r\n\r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: 'Error interno del servidor',\r\n    };\r\n\r\n    return NextResponse.json(errorResponse, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// POST - Crear log de auditor\xEDa manual\r\n// ===================================\r\nexport async function POST(request: NextRequest) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,\r\n        maxRequests: Math.floor(RATE_LIMIT_CONFIGS.admin.maxRequests / 2),\r\n        message: 'Demasiadas creaciones de logs de auditor\xEDa'\r\n      },\r\n      'admin-audit-create'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: rateLimitResult.message },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult);\r\n      return response;\r\n    }\r\n\r\n    // Validar autenticaci\xF3n admin\r\n    const authResult = await validateAdminAuth();\r\n    if (authResult.error) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: authResult.error,\r\n      };\r\n      return NextResponse.json(errorResponse, { status: authResult.status });\r\n    }\r\n\r\n    // Validar datos de entrada\r\n    const body = await request.json();\r\n    const { table_name, record_id, action, old_values, new_values } = body;\r\n\r\n    if (!table_name || !record_id || !action) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'Datos requeridos faltantes: table_name, record_id, action',\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 400 });\r\n    }\r\n\r\n    // Crear log de auditor\xEDa\r\n    await createAuditLog(\r\n      table_name,\r\n      record_id,\r\n      action,\r\n      old_values,\r\n      new_values,\r\n      authResult.userId!,\r\n      request\r\n    );\r\n\r\n    // Registrar m\xE9tricas\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/audit',\r\n      method: 'POST',\r\n      statusCode: 201,\r\n      responseTime: Date.now() - startTime,\r\n      userId: authResult.userId\r\n    });\r\n\r\n    const response: ApiResponse<null> = {\r\n      data: null,\r\n      success: true,\r\n      message: 'Log de auditor\xEDa creado exitosamente'\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response, { status: 201 });\r\n    addRateLimitHeaders(nextResponse, rateLimitResult);\r\n    return nextResponse;\r\n\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en POST /api/admin/audit', { error });\r\n\r\n    // Registrar m\xE9tricas de error\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/audit',\r\n      method: 'POST',\r\n      statusCode: 500,\r\n      responseTime: Date.now() - startTime,\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    });\r\n\r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: 'Error interno del servidor',\r\n    };\r\n\r\n    return NextResponse.json(errorResponse, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "supabase", "createClient", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "SUPABASE_SERVICE_ROLE_KEY", "RATE_LIMIT_CONFIGS", "admin", "windowMs", "maxRequests", "message", "AuditFiltersSchema", "z", "object", "table_name", "string", "optional", "action", "enum", "user_id", "uuid", "record_id", "date_from", "date_to", "search", "page", "coerce", "number", "min", "default", "limit", "max", "sort_by", "sort_order", "ExportAuditSchema", "format", "filters", "include_details", "boolean", "validateAdminAuth", "session", "auth", "user", "error", "status", "data", "profile", "from", "select", "eq", "id", "single", "role", "userId", "getAuditLogs", "query", "gte", "lte", "or", "count", "head", "offset", "order", "ascending", "range", "Error", "logs", "total", "totalPages", "Math", "ceil", "getAuditStats", "allLogs", "now", "Date", "last24h", "getTime", "last7d", "last30d", "actionsSummary", "reduce", "acc", "log", "tablesSummary", "usersSummary", "userName", "full_name", "email", "recentActivity", "last_24h", "filter", "created_at", "length", "last_7d", "last_30d", "userCounts", "user_name", "action_count", "topUsers", "Object", "values", "sort", "a", "b", "slice", "topTables", "entries", "map", "total_logs", "actions_summary", "tables_summary", "users_summary", "recent_activity", "top_users", "top_tables", "exportAuditLogs", "includeDetails", "exportData", "baseData", "tabla", "registro_id", "accion", "usuario", "email_usuario", "rol_usuario", "fecha_creacion", "ip_address", "user_agent", "valores_anteriores", "old_values", "JSON", "stringify", "valores_nuevos", "new_values", "filename", "toISOString", "split", "createAuditLog", "tableName", "recordId", "oldValues", "newValues", "request", "ipAddress", "headers", "get", "userAgent", "insert", "logger", "LogLevel", "ERROR", "LogCategory", "API", "startTime", "rateLimitResult", "checkRateLimit", "success", "response", "NextResponse", "json", "addRateLimitHeaders", "authResult", "errorResponse", "searchParams", "URL", "url", "stats", "metricsCollector", "recordApiCall", "endpoint", "method", "statusCode", "responseTime", "nextResponse", "parse", "exportResult", "pagination", "floor", "body"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b74d05f8e3917eb74d67a2b22216e2c9f13e9c6a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_fsphwrrwg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_fsphwrrwg();
cov_fsphwrrwg().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_fsphwrrwg().f[0]++;
  cov_fsphwrrwg().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_fsphwrrwg().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_fsphwrrwg().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_fsphwrrwg().f[1]++;
    cov_fsphwrrwg().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_fsphwrrwg().f[2]++;
    cov_fsphwrrwg().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_fsphwrrwg().f[3]++;
    cov_fsphwrrwg().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_fsphwrrwg().s[7]++, require("next/server"));
const _zod =
/* istanbul ignore next */
(cov_fsphwrrwg().s[8]++, require("zod"));
const _supabasejs =
/* istanbul ignore next */
(cov_fsphwrrwg().s[9]++, require("@supabase/supabase-js"));
const _config =
/* istanbul ignore next */
(cov_fsphwrrwg().s[10]++, require("../../../../lib/auth/config"));
const _ratelimiter =
/* istanbul ignore next */
(cov_fsphwrrwg().s[11]++, require("../../../../lib/enterprise/rate-limiter"));
const _logger =
/* istanbul ignore next */
(cov_fsphwrrwg().s[12]++, require("../../../../lib/enterprise/logger"));
const _metrics =
/* istanbul ignore next */
(cov_fsphwrrwg().s[13]++, require("../../../../lib/enterprise/metrics"));
const runtime =
/* istanbul ignore next */
(cov_fsphwrrwg().s[14]++, 'nodejs');
// ===================================
// CONFIGURACIÃN
// ===================================
const supabase =
/* istanbul ignore next */
(cov_fsphwrrwg().s[15]++, (0, _supabasejs.createClient)(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.SUPABASE_SERVICE_ROLE_KEY));
const RATE_LIMIT_CONFIGS =
/* istanbul ignore next */
(cov_fsphwrrwg().s[16]++, {
  admin: {
    windowMs: 15 * 60 * 1000,
    maxRequests: 100,
    message: 'Demasiadas solicitudes administrativas'
  }
});
// ===================================
// ESQUEMAS DE VALIDACIÃN
// ===================================
const AuditFiltersSchema =
/* istanbul ignore next */
(cov_fsphwrrwg().s[17]++, _zod.z.object({
  table_name: _zod.z.string().optional(),
  action: _zod.z.enum(['CREATE', 'UPDATE', 'DELETE', 'LOGIN', 'LOGOUT', 'EXPORT', 'IMPORT']).optional(),
  user_id: _zod.z.string().uuid().optional(),
  record_id: _zod.z.string().optional(),
  date_from: _zod.z.string().optional(),
  date_to: _zod.z.string().optional(),
  search: _zod.z.string().optional(),
  page: _zod.z.coerce.number().min(1).default(1),
  limit: _zod.z.coerce.number().min(1).max(100).default(20),
  sort_by: _zod.z.enum(['created_at', 'table_name', 'action', 'user_id']).default('created_at'),
  sort_order: _zod.z.enum(['asc', 'desc']).default('desc')
}));
const ExportAuditSchema =
/* istanbul ignore next */
(cov_fsphwrrwg().s[18]++, _zod.z.object({
  format: _zod.z.enum(['csv', 'json', 'xlsx']).default('csv'),
  filters: AuditFiltersSchema.optional(),
  include_details: _zod.z.boolean().default(false)
}));
// ===================================
// FUNCIONES AUXILIARES
// ===================================
async function validateAdminAuth() {
  /* istanbul ignore next */
  cov_fsphwrrwg().f[4]++;
  const session =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[19]++, await (0, _config.auth)());
  /* istanbul ignore next */
  cov_fsphwrrwg().s[20]++;
  if (!session?.user) {
    /* istanbul ignore next */
    cov_fsphwrrwg().b[0][0]++;
    cov_fsphwrrwg().s[21]++;
    return {
      error: 'No autorizado',
      status: 401
    };
  } else
  /* istanbul ignore next */
  {
    cov_fsphwrrwg().b[0][1]++;
  }
  // Verificar rol de administrador
  const {
    data: profile
  } =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[22]++, await supabase.from('profiles').select('role').eq('id', session.user.id).single());
  /* istanbul ignore next */
  cov_fsphwrrwg().s[23]++;
  if (profile?.role !== 'admin') {
    /* istanbul ignore next */
    cov_fsphwrrwg().b[1][0]++;
    cov_fsphwrrwg().s[24]++;
    return {
      error: 'Acceso denegado',
      status: 403
    };
  } else
  /* istanbul ignore next */
  {
    cov_fsphwrrwg().b[1][1]++;
  }
  cov_fsphwrrwg().s[25]++;
  return {
    userId: session.user.id
  };
}
async function getAuditLogs(filters) {
  /* istanbul ignore next */
  cov_fsphwrrwg().f[5]++;
  let query =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[26]++, supabase.from('audit_logs').select(`
      *,
      user:profiles!audit_logs_user_id_fkey(
        id,
        email,
        full_name,
        role
      )
    `));
  // Aplicar filtros
  /* istanbul ignore next */
  cov_fsphwrrwg().s[27]++;
  if (filters.table_name) {
    /* istanbul ignore next */
    cov_fsphwrrwg().b[2][0]++;
    cov_fsphwrrwg().s[28]++;
    query = query.eq('table_name', filters.table_name);
  } else
  /* istanbul ignore next */
  {
    cov_fsphwrrwg().b[2][1]++;
  }
  cov_fsphwrrwg().s[29]++;
  if (filters.action) {
    /* istanbul ignore next */
    cov_fsphwrrwg().b[3][0]++;
    cov_fsphwrrwg().s[30]++;
    query = query.eq('action', filters.action);
  } else
  /* istanbul ignore next */
  {
    cov_fsphwrrwg().b[3][1]++;
  }
  cov_fsphwrrwg().s[31]++;
  if (filters.user_id) {
    /* istanbul ignore next */
    cov_fsphwrrwg().b[4][0]++;
    cov_fsphwrrwg().s[32]++;
    query = query.eq('user_id', filters.user_id);
  } else
  /* istanbul ignore next */
  {
    cov_fsphwrrwg().b[4][1]++;
  }
  cov_fsphwrrwg().s[33]++;
  if (filters.record_id) {
    /* istanbul ignore next */
    cov_fsphwrrwg().b[5][0]++;
    cov_fsphwrrwg().s[34]++;
    query = query.eq('record_id', filters.record_id);
  } else
  /* istanbul ignore next */
  {
    cov_fsphwrrwg().b[5][1]++;
  }
  cov_fsphwrrwg().s[35]++;
  if (filters.date_from) {
    /* istanbul ignore next */
    cov_fsphwrrwg().b[6][0]++;
    cov_fsphwrrwg().s[36]++;
    query = query.gte('created_at', filters.date_from);
  } else
  /* istanbul ignore next */
  {
    cov_fsphwrrwg().b[6][1]++;
  }
  cov_fsphwrrwg().s[37]++;
  if (filters.date_to) {
    /* istanbul ignore next */
    cov_fsphwrrwg().b[7][0]++;
    cov_fsphwrrwg().s[38]++;
    query = query.lte('created_at', filters.date_to);
  } else
  /* istanbul ignore next */
  {
    cov_fsphwrrwg().b[7][1]++;
  }
  cov_fsphwrrwg().s[39]++;
  if (filters.search) {
    /* istanbul ignore next */
    cov_fsphwrrwg().b[8][0]++;
    cov_fsphwrrwg().s[40]++;
    query = query.or(`table_name.ilike.%${filters.search}%,action.ilike.%${filters.search}%,record_id.ilike.%${filters.search}%`);
  } else
  /* istanbul ignore next */
  {
    cov_fsphwrrwg().b[8][1]++;
  }
  // Contar total
  const {
    count
  } =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[41]++, await query.select('*', {
    count: 'exact',
    head: true
  }));
  // Aplicar paginaciÃ³n y ordenamiento
  const offset =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[42]++, (filters.page - 1) * filters.limit);
  /* istanbul ignore next */
  cov_fsphwrrwg().s[43]++;
  query = query.order(filters.sort_by, {
    ascending: filters.sort_order === 'asc'
  }).range(offset, offset + filters.limit - 1);
  const {
    data,
    error
  } =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[44]++, await query);
  /* istanbul ignore next */
  cov_fsphwrrwg().s[45]++;
  if (error) {
    /* istanbul ignore next */
    cov_fsphwrrwg().b[9][0]++;
    cov_fsphwrrwg().s[46]++;
    throw new Error(`Error al obtener logs de auditorÃ­a: ${error.message}`);
  } else
  /* istanbul ignore next */
  {
    cov_fsphwrrwg().b[9][1]++;
  }
  cov_fsphwrrwg().s[47]++;
  return {
    logs:
    /* istanbul ignore next */
    (cov_fsphwrrwg().b[10][0]++, data) ||
    /* istanbul ignore next */
    (cov_fsphwrrwg().b[10][1]++, []),
    total:
    /* istanbul ignore next */
    (cov_fsphwrrwg().b[11][0]++, count) ||
    /* istanbul ignore next */
    (cov_fsphwrrwg().b[11][1]++, 0),
    totalPages: Math.ceil((
    /* istanbul ignore next */
    (cov_fsphwrrwg().b[12][0]++, count) ||
    /* istanbul ignore next */
    (cov_fsphwrrwg().b[12][1]++, 0)) / filters.limit)
  };
}
async function getAuditStats() {
  /* istanbul ignore next */
  cov_fsphwrrwg().f[6]++;
  // Obtener todos los logs para estadÃ­sticas
  const {
    data: allLogs,
    error
  } =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[48]++, await supabase.from('audit_logs').select(`
      *,
      user:profiles!audit_logs_user_id_fkey(
        id,
        email,
        full_name,
        role
      )
    `));
  /* istanbul ignore next */
  cov_fsphwrrwg().s[49]++;
  if (error) {
    /* istanbul ignore next */
    cov_fsphwrrwg().b[13][0]++;
    cov_fsphwrrwg().s[50]++;
    throw new Error(`Error al obtener estadÃ­sticas de auditorÃ­a: ${error.message}`);
  } else
  /* istanbul ignore next */
  {
    cov_fsphwrrwg().b[13][1]++;
  }
  const logs =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[51]++,
  /* istanbul ignore next */
  (cov_fsphwrrwg().b[14][0]++, allLogs) ||
  /* istanbul ignore next */
  (cov_fsphwrrwg().b[14][1]++, []));
  const now =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[52]++, new Date());
  const last24h =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[53]++, new Date(now.getTime() - 24 * 60 * 60 * 1000));
  const last7d =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[54]++, new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000));
  const last30d =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[55]++, new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000));
  // Resumen de acciones
  const actionsSummary =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[56]++, logs.reduce((acc, log) => {
    /* istanbul ignore next */
    cov_fsphwrrwg().f[7]++;
    cov_fsphwrrwg().s[57]++;
    acc[log.action] = (
    /* istanbul ignore next */
    (cov_fsphwrrwg().b[15][0]++, acc[log.action]) ||
    /* istanbul ignore next */
    (cov_fsphwrrwg().b[15][1]++, 0)) + 1;
    /* istanbul ignore next */
    cov_fsphwrrwg().s[58]++;
    return acc;
  }, {}));
  // Resumen de tablas
  const tablesSummary =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[59]++, logs.reduce((acc, log) => {
    /* istanbul ignore next */
    cov_fsphwrrwg().f[8]++;
    cov_fsphwrrwg().s[60]++;
    acc[log.table_name] = (
    /* istanbul ignore next */
    (cov_fsphwrrwg().b[16][0]++, acc[log.table_name]) ||
    /* istanbul ignore next */
    (cov_fsphwrrwg().b[16][1]++, 0)) + 1;
    /* istanbul ignore next */
    cov_fsphwrrwg().s[61]++;
    return acc;
  }, {}));
  // Resumen de usuarios
  const usersSummary =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[62]++, logs.reduce((acc, log) => {
    /* istanbul ignore next */
    cov_fsphwrrwg().f[9]++;
    const userName =
    /* istanbul ignore next */
    (cov_fsphwrrwg().s[63]++,
    /* istanbul ignore next */
    (cov_fsphwrrwg().b[17][0]++, log.user?.full_name) ||
    /* istanbul ignore next */
    (cov_fsphwrrwg().b[17][1]++, log.user?.email) ||
    /* istanbul ignore next */
    (cov_fsphwrrwg().b[17][2]++, 'Usuario desconocido'));
    /* istanbul ignore next */
    cov_fsphwrrwg().s[64]++;
    acc[userName] = (
    /* istanbul ignore next */
    (cov_fsphwrrwg().b[18][0]++, acc[userName]) ||
    /* istanbul ignore next */
    (cov_fsphwrrwg().b[18][1]++, 0)) + 1;
    /* istanbul ignore next */
    cov_fsphwrrwg().s[65]++;
    return acc;
  }, {}));
  // Actividad reciente
  const recentActivity =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[66]++, {
    last_24h: logs.filter(log => {
      /* istanbul ignore next */
      cov_fsphwrrwg().f[10]++;
      cov_fsphwrrwg().s[67]++;
      return new Date(log.created_at) >= last24h;
    }).length,
    last_7d: logs.filter(log => {
      /* istanbul ignore next */
      cov_fsphwrrwg().f[11]++;
      cov_fsphwrrwg().s[68]++;
      return new Date(log.created_at) >= last7d;
    }).length,
    last_30d: logs.filter(log => {
      /* istanbul ignore next */
      cov_fsphwrrwg().f[12]++;
      cov_fsphwrrwg().s[69]++;
      return new Date(log.created_at) >= last30d;
    }).length
  });
  // Top usuarios
  const userCounts =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[70]++, logs.reduce((acc, log) => {
    /* istanbul ignore next */
    cov_fsphwrrwg().f[13]++;
    const userId =
    /* istanbul ignore next */
    (cov_fsphwrrwg().s[71]++, log.user_id);
    const userName =
    /* istanbul ignore next */
    (cov_fsphwrrwg().s[72]++,
    /* istanbul ignore next */
    (cov_fsphwrrwg().b[19][0]++, log.user?.full_name) ||
    /* istanbul ignore next */
    (cov_fsphwrrwg().b[19][1]++, log.user?.email) ||
    /* istanbul ignore next */
    (cov_fsphwrrwg().b[19][2]++, 'Usuario desconocido'));
    /* istanbul ignore next */
    cov_fsphwrrwg().s[73]++;
    if (!acc[userId]) {
      /* istanbul ignore next */
      cov_fsphwrrwg().b[20][0]++;
      cov_fsphwrrwg().s[74]++;
      acc[userId] = {
        user_id: userId,
        user_name: userName,
        action_count: 0
      };
    } else
    /* istanbul ignore next */
    {
      cov_fsphwrrwg().b[20][1]++;
    }
    cov_fsphwrrwg().s[75]++;
    acc[userId].action_count++;
    /* istanbul ignore next */
    cov_fsphwrrwg().s[76]++;
    return acc;
  }, {}));
  const topUsers =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[77]++, Object.values(userCounts).sort((a, b) => {
    /* istanbul ignore next */
    cov_fsphwrrwg().f[14]++;
    cov_fsphwrrwg().s[78]++;
    return b.action_count - a.action_count;
  }).slice(0, 10));
  // Top tablas
  const topTables =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[79]++, Object.entries(tablesSummary).map(([table_name, action_count]) => {
    /* istanbul ignore next */
    cov_fsphwrrwg().f[15]++;
    cov_fsphwrrwg().s[80]++;
    return {
      table_name,
      action_count
    };
  }).sort((a, b) => {
    /* istanbul ignore next */
    cov_fsphwrrwg().f[16]++;
    cov_fsphwrrwg().s[81]++;
    return b.action_count - a.action_count;
  }).slice(0, 10));
  /* istanbul ignore next */
  cov_fsphwrrwg().s[82]++;
  return {
    total_logs: logs.length,
    actions_summary: actionsSummary,
    tables_summary: tablesSummary,
    users_summary: usersSummary,
    recent_activity: recentActivity,
    top_users: topUsers,
    top_tables: topTables
  };
}
async function exportAuditLogs(format, filters, includeDetails =
/* istanbul ignore next */
(cov_fsphwrrwg().b[21][0]++, false)) {
  /* istanbul ignore next */
  cov_fsphwrrwg().f[17]++;
  // Obtener logs con filtros aplicados
  const {
    logs
  } =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[83]++, await getAuditLogs(
  /* istanbul ignore next */
  (cov_fsphwrrwg().b[22][0]++, filters) ||
  /* istanbul ignore next */
  (cov_fsphwrrwg().b[22][1]++, {
    page: 1,
    limit: 10000,
    sort_by: 'created_at',
    sort_order: 'desc'
  })));
  // Preparar datos para exportaciÃ³n
  const exportData =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[84]++, logs.map(log => {
    /* istanbul ignore next */
    cov_fsphwrrwg().f[18]++;
    const baseData =
    /* istanbul ignore next */
    (cov_fsphwrrwg().s[85]++, {
      id: log.id,
      tabla: log.table_name,
      registro_id: log.record_id,
      accion: log.action,
      usuario:
      /* istanbul ignore next */
      (cov_fsphwrrwg().b[23][0]++, log.user?.full_name) ||
      /* istanbul ignore next */
      (cov_fsphwrrwg().b[23][1]++, log.user?.email) ||
      /* istanbul ignore next */
      (cov_fsphwrrwg().b[23][2]++, 'Desconocido'),
      email_usuario:
      /* istanbul ignore next */
      (cov_fsphwrrwg().b[24][0]++, log.user?.email) ||
      /* istanbul ignore next */
      (cov_fsphwrrwg().b[24][1]++, ''),
      rol_usuario:
      /* istanbul ignore next */
      (cov_fsphwrrwg().b[25][0]++, log.user?.role) ||
      /* istanbul ignore next */
      (cov_fsphwrrwg().b[25][1]++, ''),
      fecha_creacion: log.created_at,
      ip_address:
      /* istanbul ignore next */
      (cov_fsphwrrwg().b[26][0]++, log.ip_address) ||
      /* istanbul ignore next */
      (cov_fsphwrrwg().b[26][1]++, ''),
      user_agent:
      /* istanbul ignore next */
      (cov_fsphwrrwg().b[27][0]++, log.user_agent) ||
      /* istanbul ignore next */
      (cov_fsphwrrwg().b[27][1]++, '')
    });
    /* istanbul ignore next */
    cov_fsphwrrwg().s[86]++;
    if (includeDetails) {
      /* istanbul ignore next */
      cov_fsphwrrwg().b[28][0]++;
      cov_fsphwrrwg().s[87]++;
      return {
        ...baseData,
        valores_anteriores: log.old_values ?
        /* istanbul ignore next */
        (cov_fsphwrrwg().b[29][0]++, JSON.stringify(log.old_values)) :
        /* istanbul ignore next */
        (cov_fsphwrrwg().b[29][1]++, ''),
        valores_nuevos: log.new_values ?
        /* istanbul ignore next */
        (cov_fsphwrrwg().b[30][0]++, JSON.stringify(log.new_values)) :
        /* istanbul ignore next */
        (cov_fsphwrrwg().b[30][1]++, '')
      };
    } else
    /* istanbul ignore next */
    {
      cov_fsphwrrwg().b[28][1]++;
    }
    cov_fsphwrrwg().s[88]++;
    return baseData;
  }));
  /* istanbul ignore next */
  cov_fsphwrrwg().s[89]++;
  return {
    data: exportData,
    filename: `audit_logs_${new Date().toISOString().split('T')[0]}.${format}`,
    count: exportData.length
  };
}
async function createAuditLog(tableName, recordId, action, oldValues, newValues, userId, request) {
  /* istanbul ignore next */
  cov_fsphwrrwg().f[19]++;
  const ipAddress =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[90]++,
  /* istanbul ignore next */
  (cov_fsphwrrwg().b[31][0]++, request.headers.get('x-forwarded-for')) ||
  /* istanbul ignore next */
  (cov_fsphwrrwg().b[31][1]++, request.headers.get('x-real-ip')) ||
  /* istanbul ignore next */
  (cov_fsphwrrwg().b[31][2]++, 'unknown'));
  const userAgent =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[91]++,
  /* istanbul ignore next */
  (cov_fsphwrrwg().b[32][0]++, request.headers.get('user-agent')) ||
  /* istanbul ignore next */
  (cov_fsphwrrwg().b[32][1]++, 'unknown'));
  const {
    error
  } =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[92]++, await supabase.from('audit_logs').insert({
    table_name: tableName,
    record_id: recordId,
    action,
    old_values: oldValues,
    new_values: newValues,
    user_id: userId,
    ip_address: ipAddress,
    user_agent: userAgent,
    created_at: new Date().toISOString()
  }));
  /* istanbul ignore next */
  cov_fsphwrrwg().s[93]++;
  if (error) {
    /* istanbul ignore next */
    cov_fsphwrrwg().b[33][0]++;
    cov_fsphwrrwg().s[94]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error al crear log de auditorÃ­a', {
      error
    });
  } else
  /* istanbul ignore next */
  {
    cov_fsphwrrwg().b[33][1]++;
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_fsphwrrwg().f[20]++;
  const startTime =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[95]++, Date.now());
  /* istanbul ignore next */
  cov_fsphwrrwg().s[96]++;
  try {
    // Rate limiting
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_fsphwrrwg().s[97]++, await (0, _ratelimiter.checkRateLimit)(request, {
      windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,
      maxRequests: RATE_LIMIT_CONFIGS.admin.maxRequests,
      message: RATE_LIMIT_CONFIGS.admin.message
    }, 'admin-audit'));
    /* istanbul ignore next */
    cov_fsphwrrwg().s[98]++;
    if (!rateLimitResult.success) {
      /* istanbul ignore next */
      cov_fsphwrrwg().b[34][0]++;
      const response =
      /* istanbul ignore next */
      (cov_fsphwrrwg().s[99]++, _server.NextResponse.json({
        error: rateLimitResult.message
      }, {
        status: 429
      }));
      /* istanbul ignore next */
      cov_fsphwrrwg().s[100]++;
      (0, _ratelimiter.addRateLimitHeaders)(response, rateLimitResult);
      /* istanbul ignore next */
      cov_fsphwrrwg().s[101]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_fsphwrrwg().b[34][1]++;
    }
    // Validar autenticaciÃ³n admin
    const authResult =
    /* istanbul ignore next */
    (cov_fsphwrrwg().s[102]++, await validateAdminAuth());
    /* istanbul ignore next */
    cov_fsphwrrwg().s[103]++;
    if (authResult.error) {
      /* istanbul ignore next */
      cov_fsphwrrwg().b[35][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_fsphwrrwg().s[104]++, {
        data: null,
        success: false,
        error: authResult.error
      });
      /* istanbul ignore next */
      cov_fsphwrrwg().s[105]++;
      return _server.NextResponse.json(errorResponse, {
        status: authResult.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_fsphwrrwg().b[35][1]++;
    }
    // Parsear parÃ¡metros de consulta
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_fsphwrrwg().s[106]++, new URL(request.url));
    const action =
    /* istanbul ignore next */
    (cov_fsphwrrwg().s[107]++, searchParams.get('action'));
    // Manejar diferentes acciones
    /* istanbul ignore next */
    cov_fsphwrrwg().s[108]++;
    if (action === 'stats') {
      /* istanbul ignore next */
      cov_fsphwrrwg().b[36][0]++;
      // Obtener estadÃ­sticas
      const stats =
      /* istanbul ignore next */
      (cov_fsphwrrwg().s[109]++, await getAuditStats());
      // Registrar mÃ©tricas
      /* istanbul ignore next */
      cov_fsphwrrwg().s[110]++;
      _metrics.metricsCollector.recordApiCall({
        endpoint: '/api/admin/audit',
        method: 'GET',
        statusCode: 200,
        responseTime: Date.now() - startTime,
        userId: authResult.userId
      });
      const response =
      /* istanbul ignore next */
      (cov_fsphwrrwg().s[111]++, {
        data: stats,
        success: true,
        message: 'EstadÃ­sticas de auditorÃ­a obtenidas exitosamente'
      });
      const nextResponse =
      /* istanbul ignore next */
      (cov_fsphwrrwg().s[112]++, _server.NextResponse.json(response));
      /* istanbul ignore next */
      cov_fsphwrrwg().s[113]++;
      (0, _ratelimiter.addRateLimitHeaders)(nextResponse, rateLimitResult);
      /* istanbul ignore next */
      cov_fsphwrrwg().s[114]++;
      return nextResponse;
    } else
    /* istanbul ignore next */
    {
      cov_fsphwrrwg().b[36][1]++;
    }
    cov_fsphwrrwg().s[115]++;
    if (action === 'export') {
      /* istanbul ignore next */
      cov_fsphwrrwg().b[37][0]++;
      // Exportar logs
      const format =
      /* istanbul ignore next */
      (cov_fsphwrrwg().s[116]++,
      /* istanbul ignore next */
      (cov_fsphwrrwg().b[38][0]++, searchParams.get('format')) ||
      /* istanbul ignore next */
      (cov_fsphwrrwg().b[38][1]++, 'csv'));
      const includeDetails =
      /* istanbul ignore next */
      (cov_fsphwrrwg().s[117]++, searchParams.get('include_details') === 'true');
      const filters =
      /* istanbul ignore next */
      (cov_fsphwrrwg().s[118]++, AuditFiltersSchema.parse({
        table_name: searchParams.get('table_name'),
        action: searchParams.get('filter_action'),
        user_id: searchParams.get('user_id'),
        record_id: searchParams.get('record_id'),
        date_from: searchParams.get('date_from'),
        date_to: searchParams.get('date_to'),
        search: searchParams.get('search')
      }));
      const exportResult =
      /* istanbul ignore next */
      (cov_fsphwrrwg().s[119]++, await exportAuditLogs(format, filters, includeDetails));
      // Crear log de auditorÃ­a para la exportaciÃ³n
      /* istanbul ignore next */
      cov_fsphwrrwg().s[120]++;
      await createAuditLog('audit_logs', 'export', 'EXPORT', null, {
        format,
        filters,
        includeDetails,
        count: exportResult.count
      }, authResult.userId, request);
      // Registrar mÃ©tricas
      /* istanbul ignore next */
      cov_fsphwrrwg().s[121]++;
      _metrics.metricsCollector.recordApiCall({
        endpoint: '/api/admin/audit',
        method: 'GET',
        statusCode: 200,
        responseTime: Date.now() - startTime,
        userId: authResult.userId
      });
      const response =
      /* istanbul ignore next */
      (cov_fsphwrrwg().s[122]++, {
        data: exportResult,
        success: true,
        message: `Logs exportados exitosamente en formato ${format}`
      });
      const nextResponse =
      /* istanbul ignore next */
      (cov_fsphwrrwg().s[123]++, _server.NextResponse.json(response));
      /* istanbul ignore next */
      cov_fsphwrrwg().s[124]++;
      (0, _ratelimiter.addRateLimitHeaders)(nextResponse, rateLimitResult);
      /* istanbul ignore next */
      cov_fsphwrrwg().s[125]++;
      return nextResponse;
    } else
    /* istanbul ignore next */
    {
      cov_fsphwrrwg().b[37][1]++;
    }
    // Obtener logs normales
    const filters =
    /* istanbul ignore next */
    (cov_fsphwrrwg().s[126]++, AuditFiltersSchema.parse({
      table_name: searchParams.get('table_name'),
      action: searchParams.get('action'),
      user_id: searchParams.get('user_id'),
      record_id: searchParams.get('record_id'),
      date_from: searchParams.get('date_from'),
      date_to: searchParams.get('date_to'),
      search: searchParams.get('search'),
      page: searchParams.get('page'),
      limit: searchParams.get('limit'),
      sort_by: searchParams.get('sort_by'),
      sort_order: searchParams.get('sort_order')
    }));
    const {
      logs,
      total,
      totalPages
    } =
    /* istanbul ignore next */
    (cov_fsphwrrwg().s[127]++, await getAuditLogs(filters));
    // Registrar mÃ©tricas
    /* istanbul ignore next */
    cov_fsphwrrwg().s[128]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/audit',
      method: 'GET',
      statusCode: 200,
      responseTime: Date.now() - startTime,
      userId: authResult.userId
    });
    const response =
    /* istanbul ignore next */
    (cov_fsphwrrwg().s[129]++, {
      data: logs,
      success: true,
      message: 'Logs de auditorÃ­a obtenidos exitosamente',
      pagination: {
        page: filters.page,
        limit: filters.limit,
        total,
        totalPages
      }
    });
    const nextResponse =
    /* istanbul ignore next */
    (cov_fsphwrrwg().s[130]++, _server.NextResponse.json(response));
    /* istanbul ignore next */
    cov_fsphwrrwg().s[131]++;
    (0, _ratelimiter.addRateLimitHeaders)(nextResponse, rateLimitResult);
    /* istanbul ignore next */
    cov_fsphwrrwg().s[132]++;
    return nextResponse;
  } catch (error) {
    /* istanbul ignore next */
    cov_fsphwrrwg().s[133]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en GET /api/admin/audit', {
      error
    });
    // Registrar mÃ©tricas de error
    /* istanbul ignore next */
    cov_fsphwrrwg().s[134]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/audit',
      method: 'GET',
      statusCode: 500,
      responseTime: Date.now() - startTime,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_fsphwrrwg().b[39][0]++, error.message) :
      /* istanbul ignore next */
      (cov_fsphwrrwg().b[39][1]++, 'Unknown error')
    });
    const errorResponse =
    /* istanbul ignore next */
    (cov_fsphwrrwg().s[135]++, {
      data: null,
      success: false,
      error: 'Error interno del servidor'
    });
    /* istanbul ignore next */
    cov_fsphwrrwg().s[136]++;
    return _server.NextResponse.json(errorResponse, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_fsphwrrwg().f[21]++;
  const startTime =
  /* istanbul ignore next */
  (cov_fsphwrrwg().s[137]++, Date.now());
  /* istanbul ignore next */
  cov_fsphwrrwg().s[138]++;
  try {
    // Rate limiting
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_fsphwrrwg().s[139]++, await (0, _ratelimiter.checkRateLimit)(request, {
      windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,
      maxRequests: Math.floor(RATE_LIMIT_CONFIGS.admin.maxRequests / 2),
      message: 'Demasiadas creaciones de logs de auditorÃ­a'
    }, 'admin-audit-create'));
    /* istanbul ignore next */
    cov_fsphwrrwg().s[140]++;
    if (!rateLimitResult.success) {
      /* istanbul ignore next */
      cov_fsphwrrwg().b[40][0]++;
      const response =
      /* istanbul ignore next */
      (cov_fsphwrrwg().s[141]++, _server.NextResponse.json({
        error: rateLimitResult.message
      }, {
        status: 429
      }));
      /* istanbul ignore next */
      cov_fsphwrrwg().s[142]++;
      (0, _ratelimiter.addRateLimitHeaders)(response, rateLimitResult);
      /* istanbul ignore next */
      cov_fsphwrrwg().s[143]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_fsphwrrwg().b[40][1]++;
    }
    // Validar autenticaciÃ³n admin
    const authResult =
    /* istanbul ignore next */
    (cov_fsphwrrwg().s[144]++, await validateAdminAuth());
    /* istanbul ignore next */
    cov_fsphwrrwg().s[145]++;
    if (authResult.error) {
      /* istanbul ignore next */
      cov_fsphwrrwg().b[41][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_fsphwrrwg().s[146]++, {
        data: null,
        success: false,
        error: authResult.error
      });
      /* istanbul ignore next */
      cov_fsphwrrwg().s[147]++;
      return _server.NextResponse.json(errorResponse, {
        status: authResult.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_fsphwrrwg().b[41][1]++;
    }
    // Validar datos de entrada
    const body =
    /* istanbul ignore next */
    (cov_fsphwrrwg().s[148]++, await request.json());
    const {
      table_name,
      record_id,
      action,
      old_values,
      new_values
    } =
    /* istanbul ignore next */
    (cov_fsphwrrwg().s[149]++, body);
    /* istanbul ignore next */
    cov_fsphwrrwg().s[150]++;
    if (
    /* istanbul ignore next */
    (cov_fsphwrrwg().b[43][0]++, !table_name) ||
    /* istanbul ignore next */
    (cov_fsphwrrwg().b[43][1]++, !record_id) ||
    /* istanbul ignore next */
    (cov_fsphwrrwg().b[43][2]++, !action)) {
      /* istanbul ignore next */
      cov_fsphwrrwg().b[42][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_fsphwrrwg().s[151]++, {
        data: null,
        success: false,
        error: 'Datos requeridos faltantes: table_name, record_id, action'
      });
      /* istanbul ignore next */
      cov_fsphwrrwg().s[152]++;
      return _server.NextResponse.json(errorResponse, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_fsphwrrwg().b[42][1]++;
    }
    // Crear log de auditorÃ­a
    cov_fsphwrrwg().s[153]++;
    await createAuditLog(table_name, record_id, action, old_values, new_values, authResult.userId, request);
    // Registrar mÃ©tricas
    /* istanbul ignore next */
    cov_fsphwrrwg().s[154]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/audit',
      method: 'POST',
      statusCode: 201,
      responseTime: Date.now() - startTime,
      userId: authResult.userId
    });
    const response =
    /* istanbul ignore next */
    (cov_fsphwrrwg().s[155]++, {
      data: null,
      success: true,
      message: 'Log de auditorÃ­a creado exitosamente'
    });
    const nextResponse =
    /* istanbul ignore next */
    (cov_fsphwrrwg().s[156]++, _server.NextResponse.json(response, {
      status: 201
    }));
    /* istanbul ignore next */
    cov_fsphwrrwg().s[157]++;
    (0, _ratelimiter.addRateLimitHeaders)(nextResponse, rateLimitResult);
    /* istanbul ignore next */
    cov_fsphwrrwg().s[158]++;
    return nextResponse;
  } catch (error) {
    /* istanbul ignore next */
    cov_fsphwrrwg().s[159]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en POST /api/admin/audit', {
      error
    });
    // Registrar mÃ©tricas de error
    /* istanbul ignore next */
    cov_fsphwrrwg().s[160]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/audit',
      method: 'POST',
      statusCode: 500,
      responseTime: Date.now() - startTime,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_fsphwrrwg().b[44][0]++, error.message) :
      /* istanbul ignore next */
      (cov_fsphwrrwg().b[44][1]++, 'Unknown error')
    });
    const errorResponse =
    /* istanbul ignore next */
    (cov_fsphwrrwg().s[161]++, {
      data: null,
      success: false,
      error: 'Error interno del servidor'
    });
    /* istanbul ignore next */
    cov_fsphwrrwg().s[162]++;
    return _server.NextResponse.json(errorResponse, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,