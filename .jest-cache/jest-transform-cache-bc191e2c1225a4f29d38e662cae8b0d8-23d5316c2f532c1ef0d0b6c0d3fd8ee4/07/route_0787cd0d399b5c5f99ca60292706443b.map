{"version":3,"names":["cov_2iwkf35so2","actualCoverage","s","GET","f","runtime","request","authResult","_adminauth","getAuthenticatedUser","userId","b","_server","NextResponse","json","success","error","migration","status","oldMethod","newMethod","note","debug","deprecatedHeaders","Object","fromEntries","headers","entries","clerkUserId","console","log","_supabase","supabaseAdmin","data","profiles","searchError","from","select","eq","length","message","code","activeProfiles","activeError","allProfiles","totalProfiles","totalActiveProfiles","errorMessage","Error"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\user-profile\\route.ts"],"sourcesContent":["// Configuraci√≥n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { getAuthenticatedUser } from '@/lib/auth/admin-auth';\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // MIGRADO: Usar getAuthenticatedUser en lugar de headers\r\n    const authResult = await getAuthenticatedUser(request);\r\n\r\n    if (!authResult.userId) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: authResult.error || 'Usuario no autenticado',\r\n        migration: {\r\n          status: 'MIGRATED',\r\n          oldMethod: 'headers x-clerk-user-id',\r\n          newMethod: 'getAuthenticatedUser()',\r\n          note: 'Ya no usa headers directamente'\r\n        },\r\n        debug: {\r\n          authResult,\r\n          deprecatedHeaders: Object.fromEntries(request.headers.entries())\r\n        }\r\n      }, { status: 401 });\r\n    }\r\n\r\n    const clerkUserId = authResult.userId;\r\n\r\n    console.log('üîç Debug User Profile: Searching for user:', clerkUserId);\r\n\r\n    // Verificar si supabaseAdmin est√° disponible\r\n    if (!supabaseAdmin) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Supabase admin client not available'\r\n      }, { status: 500 });\r\n    }\r\n\r\n    // Buscar usuario sin joins para evitar problemas\r\n    const { data: profiles, error: searchError } = await supabaseAdmin\r\n      .from('user_profiles')\r\n      .select('*')\r\n      .eq('clerk_user_id', clerkUserId);\r\n\r\n    console.log('üîç Debug User Profile: Search results:', {\r\n      profiles: profiles?.length || 0,\r\n      error: searchError\r\n    });\r\n\r\n    if (searchError) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Database query error',\r\n        debug: {\r\n          clerkUserId,\r\n          searchError: searchError.message,\r\n          code: searchError.code\r\n        }\r\n      }, { status: 500 });\r\n    }\r\n\r\n    // Buscar solo usuarios activos sin joins\r\n    const { data: activeProfiles, error: activeError } = await supabaseAdmin\r\n      .from('user_profiles')\r\n      .select('*')\r\n      .eq('clerk_user_id', clerkUserId)\r\n      .eq('is_active', true);\r\n\r\n    console.log('üîç Debug User Profile: Active profiles:', {\r\n      activeProfiles: activeProfiles?.length || 0,\r\n      error: activeError\r\n    });\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      debug: {\r\n        clerkUserId,\r\n        allProfiles: profiles || [],\r\n        activeProfiles: activeProfiles || [],\r\n        totalProfiles: profiles?.length || 0,\r\n        totalActiveProfiles: activeProfiles?.length || 0\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('üîç Debug User Profile: Error:', error);\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Unexpected error',\r\n      debug: {\r\n        errorMessage: error instanceof Error ? error.message : 'Unknown error'\r\n      }\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IACa;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;;;;;;;;;;;;;;;;;;;;MAMSC,IAAA;IAAA;IAAAH,cAAA,GAAAI,CAAA;IAAAJ,cAAA,GAAAE,CAAA;WAAAC,GAAA;;MANTE,QAAA;IAAA;IAAAL,cAAA,GAAAI,CAAA;IAAAJ,cAAA,GAAAE,CAAA;WAAAG,OAAA;;;;;kCAE6B;;;kCACZ;;;kCACO;AAJ9B,MAAMA,OAAA;AAAA;AAAA,CAAAL,cAAA,GAAAE,CAAA,OAAU;AAMhB,eAAeC,IAAIG,OAAoB;EAAA;EAAAN,cAAA,GAAAI,CAAA;EAAAJ,cAAA,GAAAE,CAAA;EAC5C,IAAI;IACF;IACA,MAAMK,UAAA;IAAA;IAAA,CAAAP,cAAA,GAAAE,CAAA,QAAa,MAAM,IAAAM,UAAA,CAAAC,oBAAoB,EAACH,OAAA;IAAA;IAAAN,cAAA,GAAAE,CAAA;IAE9C,IAAI,CAACK,UAAA,CAAWG,MAAM,EAAE;MAAA;MAAAV,cAAA,GAAAW,CAAA;MAAAX,cAAA,GAAAE,CAAA;MACtB,OAAOU,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;QACvBC,OAAA,EAAS;QACTC,KAAA;QAAO;QAAA,CAAAhB,cAAA,GAAAW,CAAA,UAAAJ,UAAA,CAAWS,KAAK;QAAA;QAAA,CAAAhB,cAAA,GAAAW,CAAA,UAAI;QAC3BM,SAAA,EAAW;UACTC,MAAA,EAAQ;UACRC,SAAA,EAAW;UACXC,SAAA,EAAW;UACXC,IAAA,EAAM;QACR;QACAC,KAAA,EAAO;UACLf,UAAA;UACAgB,iBAAA,EAAmBC,MAAA,CAAOC,WAAW,CAACnB,OAAA,CAAQoB,OAAO,CAACC,OAAO;QAC/D;MACF,GAAG;QAAET,MAAA,EAAQ;MAAI;IACnB;IAAA;IAAA;MAAAlB,cAAA,GAAAW,CAAA;IAAA;IAEA,MAAMiB,WAAA;IAAA;IAAA,CAAA5B,cAAA,GAAAE,CAAA,QAAcK,UAAA,CAAWG,MAAM;IAAA;IAAAV,cAAA,GAAAE,CAAA;IAErC2B,OAAA,CAAQC,GAAG,CAAC,8CAA8CF,WAAA;IAE1D;IAAA;IAAA5B,cAAA,GAAAE,CAAA;IACA,IAAI,CAAC6B,SAAA,CAAAC,aAAa,EAAE;MAAA;MAAAhC,cAAA,GAAAW,CAAA;MAAAX,cAAA,GAAAE,CAAA;MAClB,OAAOU,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;QACvBC,OAAA,EAAS;QACTC,KAAA,EAAO;MACT,GAAG;QAAEE,MAAA,EAAQ;MAAI;IACnB;IAAA;IAAA;MAAAlB,cAAA,GAAAW,CAAA;IAAA;IAEA;IACA,MAAM;MAAEsB,IAAA,EAAMC,QAAQ;MAAElB,KAAA,EAAOmB;IAAW,CAAE;IAAA;IAAA,CAAAnC,cAAA,GAAAE,CAAA,QAAG,MAAM6B,SAAA,CAAAC,aAAa,CAC/DI,IAAI,CAAC,iBACLC,MAAM,CAAC,KACPC,EAAE,CAAC,iBAAiBV,WAAA;IAAA;IAAA5B,cAAA,GAAAE,CAAA;IAEvB2B,OAAA,CAAQC,GAAG,CAAC,0CAA0C;MACpDI,QAAA;MAAU;MAAA,CAAAlC,cAAA,GAAAW,CAAA,UAAAuB,QAAA,EAAUK,MAAA;MAAA;MAAA,CAAAvC,cAAA,GAAAW,CAAA,UAAU;MAC9BK,KAAA,EAAOmB;IACT;IAAA;IAAAnC,cAAA,GAAAE,CAAA;IAEA,IAAIiC,WAAA,EAAa;MAAA;MAAAnC,cAAA,GAAAW,CAAA;MAAAX,cAAA,GAAAE,CAAA;MACf,OAAOU,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;QACvBC,OAAA,EAAS;QACTC,KAAA,EAAO;QACPM,KAAA,EAAO;UACLM,WAAA;UACAO,WAAA,EAAaA,WAAA,CAAYK,OAAO;UAChCC,IAAA,EAAMN,WAAA,CAAYM;QACpB;MACF,GAAG;QAAEvB,MAAA,EAAQ;MAAI;IACnB;IAAA;IAAA;MAAAlB,cAAA,GAAAW,CAAA;IAAA;IAEA;IACA,MAAM;MAAEsB,IAAA,EAAMS,cAAc;MAAE1B,KAAA,EAAO2B;IAAW,CAAE;IAAA;IAAA,CAAA3C,cAAA,GAAAE,CAAA,QAAG,MAAM6B,SAAA,CAAAC,aAAa,CACrEI,IAAI,CAAC,iBACLC,MAAM,CAAC,KACPC,EAAE,CAAC,iBAAiBV,WAAA,EACpBU,EAAE,CAAC,aAAa;IAAA;IAAAtC,cAAA,GAAAE,CAAA;IAEnB2B,OAAA,CAAQC,GAAG,CAAC,2CAA2C;MACrDY,cAAA;MAAgB;MAAA,CAAA1C,cAAA,GAAAW,CAAA,UAAA+B,cAAA,EAAgBH,MAAA;MAAA;MAAA,CAAAvC,cAAA,GAAAW,CAAA,UAAU;MAC1CK,KAAA,EAAO2B;IACT;IAAA;IAAA3C,cAAA,GAAAE,CAAA;IAEA,OAAOU,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;MACvBC,OAAA,EAAS;MACTO,KAAA,EAAO;QACLM,WAAA;QACAgB,WAAA;QAAa;QAAA,CAAA5C,cAAA,GAAAW,CAAA,UAAAuB,QAAA;QAAA;QAAA,CAAAlC,cAAA,GAAAW,CAAA,UAAY,EAAE;QAC3B+B,cAAA;QAAgB;QAAA,CAAA1C,cAAA,GAAAW,CAAA,UAAA+B,cAAA;QAAA;QAAA,CAAA1C,cAAA,GAAAW,CAAA,UAAkB,EAAE;QACpCkC,aAAA;QAAe;QAAA,CAAA7C,cAAA,GAAAW,CAAA,UAAAuB,QAAA,EAAUK,MAAA;QAAA;QAAA,CAAAvC,cAAA,GAAAW,CAAA,UAAU;QACnCmC,mBAAA;QAAqB;QAAA,CAAA9C,cAAA,GAAAW,CAAA,UAAA+B,cAAA,EAAgBH,MAAA;QAAA;QAAA,CAAAvC,cAAA,GAAAW,CAAA,UAAU;MACjD;IACF;EAEF,EAAE,OAAOK,KAAA,EAAO;IAAA;IAAAhB,cAAA,GAAAE,CAAA;IACd2B,OAAA,CAAQb,KAAK,CAAC,iCAAiCA,KAAA;IAAA;IAAAhB,cAAA,GAAAE,CAAA;IAC/C,OAAOU,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;MACvBC,OAAA,EAAS;MACTC,KAAA,EAAO;MACPM,KAAA,EAAO;QACLyB,YAAA,EAAc/B,KAAA,YAAiBgC,KAAA;QAAA;QAAA,CAAAhD,cAAA,GAAAW,CAAA,WAAQK,KAAA,CAAMwB,OAAO;QAAA;QAAA,CAAAxC,cAAA,GAAAW,CAAA,WAAG;MACzD;IACF,GAAG;MAAEO,MAAA,EAAQ;IAAI;EACnB;AACF","ignoreList":[]}