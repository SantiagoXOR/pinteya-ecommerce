{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\core\\utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\n/**\n * Utility function to merge Tailwind CSS classes with clsx\n * @param inputs - Class values to merge\n * @returns Merged class string\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\n/**\n * Format currency in Argentine Peso format\n * @param amount - Amount to format\n * @returns Formatted currency string\n */\nexport function formatCurrency(amount: number | string): string {\n  const numAmount = typeof amount === 'string' ? parseFloat(amount) : amount\n  return new Intl.NumberFormat('es-AR', {\n    style: 'currency',\n    currency: 'ARS',\n  }).format(numAmount)\n}\n\n/**\n * Generate a random ID\n * @param length - Length of the ID\n * @returns Random ID string\n */\nexport function generateId(length: number = 8): string {\n  return Math.random()\n    .toString(36)\n    .substring(2, length + 2)\n}\n\n/**\n * Debounce function\n * @param func - Function to debounce\n * @param wait - Wait time in milliseconds\n * @returns Debounced function\n */\nexport function debounce<T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n): (...args: Parameters<T>) => void {\n  let timeout: NodeJS.Timeout\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeout)\n    timeout = setTimeout(() => func(...args), wait)\n  }\n}\n\n/**\n * Throttle function\n * @param func - Function to throttle\n * @param limit - Time limit in milliseconds\n * @returns Throttled function\n */\nexport function throttle<T extends (...args: any[]) => any>(\n  func: T,\n  limit: number\n): (...args: Parameters<T>) => void {\n  let inThrottle: boolean\n  return (...args: Parameters<T>) => {\n    if (!inThrottle) {\n      func(...args)\n      inThrottle = true\n      setTimeout(() => (inThrottle = false), limit)\n    }\n  }\n}\n\n/**\n * Sleep function for async operations\n * @param ms - Milliseconds to sleep\n * @returns Promise that resolves after the specified time\n */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n\n/**\n * Check if a value is empty (null, undefined, empty string, empty array, empty object)\n * @param value - Value to check\n * @returns True if empty, false otherwise\n */\nexport function isEmpty(value: any): boolean {\n  if (value == null) return true\n  if (typeof value === 'string') return value.trim() === ''\n  if (Array.isArray(value)) return value.length === 0\n  if (typeof value === 'object') return Object.keys(value).length === 0\n  return false\n}\n\n/**\n * Capitalize first letter of a string\n * @param str - String to capitalize\n * @returns Capitalized string\n */\nexport function capitalize(str: string): string {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\n/**\n * Convert string to slug format\n * @param str - String to convert\n * @returns Slug string\n */\nexport function slugify(str: string): string {\n  return str\n    .toLowerCase()\n    .trim()\n    .replace(/[^\\w\\s-]/g, '')\n    .replace(/[\\s_-]+/g, '-')\n    .replace(/^-+|-+$/g, '')\n}\n"],"names":["capitalize","cn","debounce","formatCurrency","generateId","isEmpty","sleep","slugify","throttle","inputs","twMerge","clsx","amount","numAmount","parseFloat","Intl","NumberFormat","style","currency","format","length","Math","random","toString","substring","func","wait","timeout","args","clearTimeout","setTimeout","limit","inThrottle","ms","Promise","resolve","value","trim","Array","isArray","Object","keys","str","charAt","toUpperCase","slice","toLowerCase","replace"],"mappings":";;;;;;;;;;;QAoGgBA;eAAAA;;QA5FAC;eAAAA;;QAkCAC;eAAAA;;QAzBAC;eAAAA;;QAaAC;eAAAA;;QAyDAC;eAAAA;;QATAC;eAAAA;;QA+BAC;eAAAA;;QAlDAC;eAAAA;;;sBA3DsB;+BACd;AAOjB,SAASP,GAAG,GAAGQ,MAAoB;IACxC,OAAOC,IAAAA,sBAAO,EAACC,IAAAA,UAAI,EAACF;AACtB;AAOO,SAASN,eAAeS,MAAuB;IACpD,MAAMC,YAAY,OAAOD,WAAW,WAAWE,WAAWF,UAAUA;IACpE,OAAO,IAAIG,KAAKC,YAAY,CAAC,SAAS;QACpCC,OAAO;QACPC,UAAU;IACZ,GAAGC,MAAM,CAACN;AACZ;AAOO,SAAST,WAAWgB,SAAiB,CAAC;IAC3C,OAAOC,KAAKC,MAAM,GACfC,QAAQ,CAAC,IACTC,SAAS,CAAC,GAAGJ,SAAS;AAC3B;AAQO,SAASlB,SACduB,IAAO,EACPC,IAAY;IAEZ,IAAIC;IACJ,OAAO,CAAC,GAAGC;QACTC,aAAaF;QACbA,UAAUG,WAAW,IAAML,QAAQG,OAAOF;IAC5C;AACF;AAQO,SAASlB,SACdiB,IAAO,EACPM,KAAa;IAEb,IAAIC;IACJ,OAAO,CAAC,GAAGJ;QACT,IAAI,CAACI,YAAY;YACfP,QAAQG;YACRI,aAAa;YACbF,WAAW,IAAOE,aAAa,OAAQD;QACzC;IACF;AACF;AAOO,SAASzB,MAAM2B,EAAU;IAC9B,OAAO,IAAIC,QAAQC,CAAAA,UAAWL,WAAWK,SAASF;AACpD;AAOO,SAAS5B,QAAQ+B,KAAU;IAChC,IAAIA,SAAS,MAAM,OAAO;IAC1B,IAAI,OAAOA,UAAU,UAAU,OAAOA,MAAMC,IAAI,OAAO;IACvD,IAAIC,MAAMC,OAAO,CAACH,QAAQ,OAAOA,MAAMhB,MAAM,KAAK;IAClD,IAAI,OAAOgB,UAAU,UAAU,OAAOI,OAAOC,IAAI,CAACL,OAAOhB,MAAM,KAAK;IACpE,OAAO;AACT;AAOO,SAASpB,WAAW0C,GAAW;IACpC,OAAOA,IAAIC,MAAM,CAAC,GAAGC,WAAW,KAAKF,IAAIG,KAAK,CAAC;AACjD;AAOO,SAAStC,QAAQmC,GAAW;IACjC,OAAOA,IACJI,WAAW,GACXT,IAAI,GACJU,OAAO,CAAC,aAAa,IACrBA,OAAO,CAAC,YAAY,KACpBA,OAAO,CAAC,YAAY;AACzB"}