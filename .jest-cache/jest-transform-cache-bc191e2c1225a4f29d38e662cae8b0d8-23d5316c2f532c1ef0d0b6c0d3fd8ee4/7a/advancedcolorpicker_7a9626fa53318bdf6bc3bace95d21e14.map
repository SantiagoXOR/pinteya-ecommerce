{"version":3,"names":["cov_2b8mhamdr2","actualCoverage","s","AdvancedColorPicker","f","PAINT_COLORS","default","_default","id","name","displayName","hex","category","family","isPopular","description","getCategoryDisplayName","categoryNames","b","colors","selectedColor","onColorChange","showSearch","showCategories","showPreview","maxDisplayColors","className","productType","searchTerm","setSearchTerm","_react","useState","selectedCategory","setSelectedCategory","showAllColors","setShowAllColors","availableColors","useMemo","console","log","hasProductType","allowedColorCategories","totalColors","length","filtered","filter","color","includes","isLatexProduct","allowedCategories","filteredCount","originalCount","filteredColors","map","c","categories","cats","Array","from","Set","categoryOrder","sortedCats","sort","a","indexA","indexOf","indexB","localeCompare","useEffect","toLowerCase","displayColors","slice","currentColor","find","_jsxruntime","jsxs","_utils","cn","jsx","_lucidereact","Palette","style","backgroundColor","_button","Button","variant","size","onClick","_badge","Badge","ColorSwatch","isSelected","boxShadow","title","Check"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\advanced-color-picker.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useMemo, useEffect } from 'react';\r\nimport { Search, Palette, Eye, Check } from 'lucide-react';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { cn } from '@/lib/core/utils';\r\nimport { ProductType } from '@/utils/product-utils';\r\n\r\n// ===================================\r\n// TIPOS Y INTERFACES\r\n// ===================================\r\n\r\nexport interface ColorOption {\r\n  id: string;\r\n  name: string;\r\n  displayName: string;\r\n  hex: string;\r\n  category: string;\r\n  family: string;\r\n  isPopular?: boolean;\r\n  description?: string;\r\n}\r\n\r\ninterface AdvancedColorPickerProps {\r\n  colors?: ColorOption[];\r\n  selectedColor: string;\r\n  onColorChange: (colorId: string) => void;\r\n  showSearch?: boolean;\r\n  showCategories?: boolean;\r\n  showPreview?: boolean;\r\n  maxDisplayColors?: number;\r\n  className?: string;\r\n  productType?: ProductType; // Nuevo prop para filtrar colores según el tipo de producto\r\n}\r\n\r\n// ===================================\r\n// PALETA DE COLORES PARA PINTURAS\r\n// ===================================\r\n\r\nexport const PAINT_COLORS: ColorOption[] = [\r\n  // ===================================\r\n  // COLORES PARA PRODUCTOS DE MADERA\r\n  // ===================================\r\n  // Tonos naturales y cálidos específicos para productos de madera\r\n  { id: 'blanco-puro', name: 'blanco-puro', displayName: 'Blanco Puro', hex: '#FFFFFF', category: 'Madera', family: 'Blancos', isPopular: true, description: 'Blanco clásico para madera' },\r\n  { id: 'crema', name: 'crema', displayName: 'Crema', hex: '#F5F5DC', category: 'Madera', family: 'Blancos', isPopular: true, description: 'Tono cremoso natural' },\r\n  { id: 'cedro', name: 'cedro', displayName: 'Cedro', hex: '#D2691E', category: 'Madera', family: 'Marrones', isPopular: true, description: 'Tono natural de cedro' },\r\n  { id: 'caoba', name: 'caoba', displayName: 'Caoba', hex: '#C04000', category: 'Madera', family: 'Marrones', isPopular: true, description: 'Marrón rojizo elegante' },\r\n  { id: 'roble-britanico', name: 'roble-britanico', displayName: 'Roble Británico', hex: '#8B4513', category: 'Madera', family: 'Marrones', isPopular: true, description: 'Marrón clásico de roble' },\r\n  { id: 'roble-oscuro-satinado', name: 'roble-oscuro-satinado', displayName: 'Roble Oscuro Satinado', hex: '#654321', category: 'Madera', family: 'Marrones', isPopular: true, description: 'Roble oscuro con acabado satinado' },\r\n  { id: 'nogal', name: 'nogal', displayName: 'Nogal', hex: '#5D4037', category: 'Madera', family: 'Marrones', description: 'Marrón profundo de nogal' },\r\n  { id: 'natural', name: 'natural', displayName: 'Natural', hex: '#DEB887', category: 'Madera', family: 'Marrones', description: 'Tono madera natural' },\r\n\r\n  // ===================================\r\n  // COLORES PARA PRODUCTOS SINTÉTICOS\r\n  // ===================================\r\n  // Paleta oficial de 17 colores para productos sintéticos\r\n  { id: 'aluminio', name: 'aluminio', displayName: 'Aluminio', hex: '#A8A8A8', category: 'Sintético', family: 'Grises', isPopular: true, description: 'Gris aluminio metálico' },\r\n  { id: 'amarillo', name: 'amarillo', displayName: 'Amarillo', hex: '#FFFF00', category: 'Sintético', family: 'Amarillos', isPopular: true, description: 'Amarillo puro vibrante' },\r\n  { id: 'amarillo-mediano', name: 'amarillo-mediano', displayName: 'Amarillo Mediano', hex: '#FFD700', category: 'Sintético', family: 'Amarillos', isPopular: true, description: 'Amarillo dorado mediano' },\r\n  { id: 'azul-marino', name: 'azul-marino', displayName: 'Azul Marino', hex: '#000080', category: 'Sintético', family: 'Azules', isPopular: true, description: 'Azul marino profundo' },\r\n  { id: 'azul-traful', name: 'azul-traful', displayName: 'Azul Traful', hex: '#4682B4', category: 'Sintético', family: 'Azules', isPopular: true, description: 'Azul acero traful' },\r\n  { id: 'bermellon', name: 'bermellon', displayName: 'Bermellón', hex: '#E34234', category: 'Sintético', family: 'Rojos', isPopular: true, description: 'Rojo bermellón intenso' },\r\n  { id: 'blanco', name: 'blanco', displayName: 'Blanco', hex: '#FFFFFF', category: 'Sintético', family: 'Blancos', isPopular: true, description: 'Blanco puro para sintéticos' },\r\n  { id: 'gris', name: 'gris', displayName: 'Gris', hex: '#808080', category: 'Sintético', family: 'Grises', isPopular: true, description: 'Gris neutro estándar' },\r\n  { id: 'gris-espacial', name: 'gris-espacial', displayName: 'Gris Espacial', hex: '#696969', category: 'Sintético', family: 'Grises', isPopular: true, description: 'Gris espacial oscuro' },\r\n  { id: 'gris-perla', name: 'gris-perla', displayName: 'Gris Perla', hex: '#C0C0C0', category: 'Sintético', family: 'Grises', isPopular: true, description: 'Gris perla claro' },\r\n  { id: 'marfil', name: 'marfil', displayName: 'Marfil', hex: '#FFFFF0', category: 'Sintético', family: 'Blancos', isPopular: true, description: 'Blanco marfil cálido' },\r\n  { id: 'marron', name: 'marron', displayName: 'Marrón', hex: '#8B4513', category: 'Sintético', family: 'Marrones', isPopular: true, description: 'Marrón silla de montar' },\r\n  { id: 'naranja', name: 'naranja', displayName: 'Naranja', hex: '#FF8C00', category: 'Sintético', family: 'Naranjas', isPopular: true, description: 'Naranja vibrante' },\r\n  { id: 'negro', name: 'negro', displayName: 'Negro', hex: '#000000', category: 'Sintético', family: 'Negros', isPopular: true, description: 'Negro puro para sintéticos' },\r\n  { id: 'tostado', name: 'tostado', displayName: 'Tostado', hex: '#D2B48C', category: 'Sintético', family: 'Marrones', isPopular: true, description: 'Beige tostado cálido' },\r\n  { id: 'verde-ingles', name: 'verde-ingles', displayName: 'Verde Inglés', hex: '#355E3B', category: 'Sintético', family: 'Verdes', isPopular: true, description: 'Verde profundo y elegante' },\r\n  { id: 'verde-noche', name: 'verde-noche', displayName: 'Verde Noche', hex: '#013220', category: 'Sintético', family: 'Verdes', isPopular: true, description: 'Verde muy oscuro nocturno' },\r\n\r\n  // ===================================\r\n  // COLORES GENERALES (NEUTROS)\r\n  // ===================================\r\n  // Blancos y Neutros generales\r\n  { id: 'blanco-roto', name: 'blanco-roto', displayName: 'Blanco Roto', hex: '#FEFEFE', category: 'Neutros', family: 'Blancos', description: 'Blanco suave con matiz cálido' },\r\n  { id: 'marfil', name: 'marfil', displayName: 'Marfil', hex: '#FFFFF0', category: 'Neutros', family: 'Blancos', description: 'Blanco cremoso elegante' },\r\n  { id: 'gris-perla', name: 'gris-perla', displayName: 'Gris Perla', hex: '#E8E8E8', category: 'Neutros', family: 'Grises', isPopular: true },\r\n  { id: 'gris-plata', name: 'gris-plata', displayName: 'Gris Plata', hex: '#C0C0C0', category: 'Neutros', family: 'Grises' },\r\n  { id: 'gris-antracita', name: 'gris-antracita', displayName: 'Gris Antracita', hex: '#36454F', category: 'Neutros', family: 'Grises' },\r\n\r\n  // Azules generales\r\n  { id: 'azul-cielo', name: 'azul-cielo', displayName: 'Azul Cielo', hex: '#87CEEB', category: 'Fríos', family: 'Azules', isPopular: true, description: 'Azul suave y relajante' },\r\n  { id: 'azul-marino', name: 'azul-marino', displayName: 'Azul Marino', hex: '#000080', category: 'Fríos', family: 'Azules', description: 'Azul profundo y elegante' },\r\n  { id: 'azul-turquesa', name: 'azul-turquesa', displayName: 'Azul Turquesa', hex: '#40E0D0', category: 'Fríos', family: 'Azules' },\r\n  { id: 'azul-petroleo', name: 'azul-petroleo', displayName: 'Azul Petróleo', hex: '#2F4F4F', category: 'Fríos', family: 'Azules' },\r\n\r\n  // Verdes generales\r\n  { id: 'verde-menta', name: 'verde-menta', displayName: 'Verde Menta', hex: '#98FB98', category: 'Fríos', family: 'Verdes', isPopular: true },\r\n  { id: 'verde-oliva', name: 'verde-oliva', displayName: 'Verde Oliva', hex: '#808000', category: 'Fríos', family: 'Verdes' },\r\n  { id: 'verde-bosque', name: 'verde-bosque', displayName: 'Verde Bosque', hex: '#228B22', category: 'Fríos', family: 'Verdes' },\r\n  { id: 'verde-salvia', name: 'verde-salvia', displayName: 'Verde Salvia', hex: '#9CAF88', category: 'Fríos', family: 'Verdes' },\r\n\r\n  // Rojos y Rosas generales\r\n  { id: 'rojo-coral', name: 'rojo-coral', displayName: 'Rojo Coral', hex: '#FF7F50', category: 'Cálidos', family: 'Rojos', isPopular: true },\r\n  { id: 'rojo-vino', name: 'rojo-vino', displayName: 'Rojo Vino', hex: '#722F37', category: 'Cálidos', family: 'Rojos' },\r\n  { id: 'rosa-empolvado', name: 'rosa-empolvado', displayName: 'Rosa Empolvado', hex: '#DDA0DD', category: 'Cálidos', family: 'Rosas' },\r\n  { id: 'rosa-cuarzo', name: 'rosa-cuarzo', displayName: 'Rosa Cuarzo', hex: '#F7CAC9', category: 'Cálidos', family: 'Rosas' },\r\n\r\n  // Amarillos y Naranjas generales\r\n  { id: 'amarillo-manteca', name: 'amarillo-manteca', displayName: 'Amarillo Manteca', hex: '#FFDB58', category: 'Cálidos', family: 'Amarillos', isPopular: true },\r\n  { id: 'amarillo-mostaza', name: 'amarillo-mostaza', displayName: 'Amarillo Mostaza', hex: '#FFDB58', category: 'Cálidos', family: 'Amarillos' },\r\n  { id: 'naranja-terracota', name: 'naranja-terracota', displayName: 'Naranja Terracota', hex: '#E2725B', category: 'Cálidos', family: 'Naranjas' },\r\n  { id: 'naranja-durazno', name: 'naranja-durazno', displayName: 'Naranja Durazno', hex: '#FFCBA4', category: 'Cálidos', family: 'Naranjas' },\r\n\r\n  // Marrones y Tierras generales\r\n  { id: 'marron-chocolate', name: 'marron-chocolate', displayName: 'Marrón Chocolate', hex: '#7B3F00', category: 'Tierras', family: 'Marrones' },\r\n  { id: 'marron-cafe', name: 'marron-cafe', displayName: 'Marrón Café', hex: '#6F4E37', category: 'Tierras', family: 'Marrones' },\r\n  { id: 'beige-arena', name: 'beige-arena', displayName: 'Beige Arena', hex: '#F5F5DC', category: 'Tierras', family: 'Beijes', isPopular: true },\r\n  { id: 'ocre-dorado', name: 'ocre-dorado', displayName: 'Ocre Dorado', hex: '#CC7722', category: 'Tierras', family: 'Ocres' },\r\n\r\n  // Violetas y Púrpuras generales\r\n  { id: 'violeta-lavanda', name: 'violeta-lavanda', displayName: 'Violeta Lavanda', hex: '#E6E6FA', category: 'Fríos', family: 'Violetas' },\r\n  { id: 'purpura-real', name: 'purpura-real', displayName: 'Púrpura Real', hex: '#663399', category: 'Fríos', family: 'Violetas' },\r\n\r\n  // Negros generales\r\n  { id: 'negro-carbon', name: 'negro-carbon', displayName: 'Negro Carbón', hex: '#36454F', category: 'Neutros', family: 'Negros' },\r\n  { id: 'negro-mate', name: 'negro-mate', displayName: 'Negro Mate', hex: '#28282B', category: 'Neutros', family: 'Negros' }\r\n];\r\n\r\n// ===================================\r\n// FUNCIONES AUXILIARES\r\n// ===================================\r\n\r\nconst getCategoryDisplayName = (category: string): string => {\r\n  const categoryNames: Record<string, string> = {\r\n    'all': 'Todos',\r\n    'Madera': 'Madera',\r\n    'Sintético': 'Sintético',\r\n    'Neutros': 'Neutros',\r\n    'Cálidos': 'Cálidos',\r\n    'Fríos': 'Fríos',\r\n    'Tierras': 'Tierras'\r\n  };\r\n  \r\n  return categoryNames[category] || category;\r\n};\r\n\r\n// ===================================\r\n// COMPONENTE PRINCIPAL\r\n// ===================================\r\n\r\nexport const AdvancedColorPicker: React.FC<AdvancedColorPickerProps> = ({\r\n  colors = PAINT_COLORS,\r\n  selectedColor,\r\n  onColorChange,\r\n  showSearch = true,\r\n  showCategories = true,\r\n  showPreview = true,\r\n  maxDisplayColors = 24,\r\n  className,\r\n  productType\r\n}) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState<string>('all');\r\n  const [showAllColors, setShowAllColors] = useState(false);\r\n\r\n  // Filtrar colores según el tipo de producto\r\n  const availableColors = useMemo(() => {\r\n    console.log('🎨 AdvancedColorPicker - Debug Info:', {\r\n      productType,\r\n      hasProductType: !!productType,\r\n      allowedColorCategories: productType?.allowedColorCategories,\r\n      totalColors: colors.length\r\n    });\r\n    \r\n    if (!productType || !productType.allowedColorCategories) {\r\n      console.log('⚠️ No hay restricciones de color, mostrando todos los colores');\r\n      return colors; // Si no hay restricciones, mostrar todos los colores\r\n    }\r\n    \r\n    let filtered = colors.filter(color => \r\n      productType.allowedColorCategories!.includes(color.category)\r\n    );\r\n    \r\n    // Para productos de látex, excluir completamente los colores de madera\r\n    const isLatexProduct = productType.allowedColorCategories!.includes('Látex') && productType.allowedColorCategories!.length === 1;\r\n    if (isLatexProduct) {\r\n      filtered = filtered.filter(color => color.category !== 'Madera');\r\n      console.log('🎨 Latex product detected - excluding wood colors');\r\n    }\r\n    \r\n    console.log('✅ Colores filtrados:', {\r\n      allowedCategories: productType.allowedColorCategories,\r\n      filteredCount: filtered.length,\r\n      originalCount: colors.length,\r\n      filteredColors: filtered.map(c => ({ name: c.displayName, category: c.category }))\r\n    });\r\n    \r\n    return filtered;\r\n  }, [colors, productType]);\r\n\r\n  // Obtener categorías únicas basadas en los colores disponibles\r\n  const categories = useMemo(() => {\r\n    const cats = Array.from(new Set(availableColors.map(color => color.category)));\r\n    \r\n    // Ordenar categorías con prioridad específica\r\n    const categoryOrder = ['Madera', 'Sintético', 'Neutros', 'Cálidos', 'Fríos', 'Tierras'];\r\n    const sortedCats = cats.sort((a, b) => {\r\n      const indexA = categoryOrder.indexOf(a);\r\n      const indexB = categoryOrder.indexOf(b);\r\n      if (indexA === -1 && indexB === -1) return a.localeCompare(b);\r\n      if (indexA === -1) return 1;\r\n      if (indexB === -1) return -1;\r\n      return indexA - indexB;\r\n    });\r\n    \r\n    // Para productos sintéticos, solo mostrar la categoría Sintético (sin \"Todos\")\r\n    if (productType?.allowedColorCategories?.includes('Sintético') && \r\n        productType.allowedColorCategories.length === 1) {\r\n      return ['Sintético'];\r\n    }\r\n    \r\n    // Para productos de madera, solo mostrar la categoría Madera (sin \"Todos\")\r\n    if (productType?.allowedColorCategories?.includes('Madera') && \r\n        productType.allowedColorCategories.length === 1) {\r\n      return ['Madera'];\r\n    }\r\n    \r\n    return ['all', ...sortedCats];\r\n  }, [availableColors, productType]);\r\n\r\n  // Inicializar selectedCategory correctamente para productos sintéticos y de madera\r\n  useEffect(() => {\r\n    if (productType?.allowedColorCategories?.includes('Sintético') && \r\n        productType.allowedColorCategories.length === 1) {\r\n      setSelectedCategory('Sintético');\r\n    } else if (productType?.allowedColorCategories?.includes('Madera') && \r\n               productType.allowedColorCategories.length === 1) {\r\n      setSelectedCategory('Madera');\r\n    }\r\n  }, [productType]);\r\n\r\n  // Filtrar colores\r\n  const filteredColors = useMemo(() => {\r\n    let filtered = availableColors;\r\n\r\n    // Filtrar por categoría\r\n    if (selectedCategory !== 'all') {\r\n      filtered = filtered.filter(color => color.category === selectedCategory);\r\n    }\r\n\r\n    // Filtrar por búsqueda\r\n    if (searchTerm) {\r\n      filtered = filtered.filter(color => \r\n        color.displayName.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        color.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        color.family.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n\r\n    return filtered;\r\n  }, [availableColors, selectedCategory, searchTerm]);\r\n\r\n  // Colores a mostrar (con límite)\r\n  const displayColors = useMemo(() => {\r\n    if (showAllColors) return filteredColors;\r\n    return filteredColors.slice(0, maxDisplayColors);\r\n  }, [filteredColors, showAllColors, maxDisplayColors]);\r\n\r\n  // Color seleccionado actual\r\n  const currentColor = availableColors.find(color => color.id === selectedColor);\r\n\r\n  return (\r\n    <div className={cn(\"space-y-4\", className)}>\r\n      {/* Header con título y color seleccionado */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <Palette className=\"w-5 h-5 text-blaze-orange-600\" />\r\n          <h4 className=\"text-sm font-medium text-gray-900\">Color</h4>\r\n        </div>\r\n        {currentColor && showPreview && (\r\n          <div className=\"flex items-center gap-2\">\r\n            <div \r\n              className=\"w-6 h-6 rounded-full border-2 border-gray-300\"\r\n              style={{ backgroundColor: currentColor.hex }}\r\n            />\r\n            <span className=\"text-sm font-medium text-gray-700\">\r\n              {currentColor.displayName}\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n\r\n\r\n      {/* Filtros por categoría */}\r\n      {showCategories && (\r\n        <div className=\"flex flex-wrap gap-2\">\r\n          {categories.map((category) => (\r\n            <Button\r\n              key={category}\r\n              variant={selectedCategory === category ? \"default\" : \"outline\"}\r\n              size=\"sm\"\r\n              onClick={() => setSelectedCategory(category)}\r\n              className={cn(\r\n                \"text-xs\",\r\n                selectedCategory === category && \"bg-blaze-orange-600 hover:bg-blaze-orange-700\"\r\n              )}\r\n            >\r\n              {getCategoryDisplayName(category)}\r\n            </Button>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Colores populares */}\r\n      {selectedCategory === 'all' && !searchTerm && (\r\n        <div className=\"space-y-2\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <Badge variant=\"secondary\" className=\"text-xs\">\r\n              Populares\r\n            </Badge>\r\n          </div>\r\n          <div className=\"grid grid-cols-6 sm:grid-cols-8 md:grid-cols-10 lg:grid-cols-12 gap-2\">\r\n            {colors.filter(color => {\r\n              // Para productos látex, excluir colores de Madera y Sintético de los populares\r\n              if (productType?.allowedColorCategories?.includes('Látex') && \r\n                  productType.allowedColorCategories.length === 1) {\r\n                return color.isPopular && color.category !== 'Madera' && color.category !== 'Sintético';\r\n              }\r\n              return color.isPopular;\r\n            }).map((color) => (\r\n              <ColorSwatch\r\n                key={`${color.id}-${color.category.toLowerCase()}`}\r\n                color={color}\r\n                isSelected={selectedColor === color.id}\r\n                onClick={() => onColorChange(color.id)}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Grid de colores filtrados por categoría */}\r\n      {selectedCategory !== 'all' && (\r\n        <div className=\"space-y-2\">\r\n          <div className=\"grid grid-cols-6 sm:grid-cols-8 md:grid-cols-10 lg:grid-cols-12 gap-2\">\r\n            {filteredColors.map((color) => (\r\n              <ColorSwatch\r\n                key={`${color.id}-${color.category.toLowerCase()}`}\r\n                color={color}\r\n                isSelected={selectedColor === color.id}\r\n                onClick={() => onColorChange(color.id)}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Información del color seleccionado */}\r\n      {currentColor && (\r\n        <div className=\"bg-gray-50 p-4 rounded-lg space-y-2\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <div \r\n              className=\"w-12 h-12 rounded-lg border-2 border-gray-300 shadow-sm\"\r\n              style={{ backgroundColor: currentColor.hex }}\r\n            />\r\n            <div className=\"flex-1\">\r\n              <h5 className=\"font-medium text-gray-900\">{currentColor.displayName}</h5>\r\n              <p className=\"text-sm text-gray-600\">{currentColor.family} • {currentColor.category}</p>\r\n              <p className=\"text-xs text-gray-500 font-mono\">{currentColor.hex}</p>\r\n            </div>\r\n          </div>\r\n          {currentColor.description && (\r\n            <p className=\"text-sm text-gray-600 italic\">{currentColor.description}</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// ===================================\r\n// COMPONENTE COLOR SWATCH\r\n// ===================================\r\n\r\ninterface ColorSwatchProps {\r\n  color: ColorOption;\r\n  isSelected: boolean;\r\n  onClick: () => void;\r\n}\r\n\r\nconst ColorSwatch: React.FC<ColorSwatchProps> = ({ color, isSelected, onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={cn(\r\n        \"relative w-10 h-10 rounded-lg border-2 transition-all duration-200 hover:scale-110 hover:shadow-md group\",\r\n        isSelected \r\n          ? \"border-blaze-orange-500 ring-2 ring-blaze-orange-200 shadow-md\" \r\n          : \"border-gray-300 hover:border-gray-400\"\r\n      )}\r\n      style={{ \r\n        backgroundColor: color.hex,\r\n        boxShadow: color.hex === '#FFFFFF' ? 'inset 0 0 0 1px #E5E7EB' : 'none'\r\n      }}\r\n      title={color.displayName}\r\n      aria-label={`Seleccionar color ${color.displayName}`}\r\n    >\r\n      {isSelected && (\r\n        <div className=\"absolute inset-0 flex items-center justify-center\">\r\n          <Check className=\"w-4 h-4 text-white drop-shadow-md\" style={{\r\n            color: color.hex === '#FFFFFF' || color.hex === '#FFFFF0' ? '#000000' : '#FFFFFF'\r\n          }} />\r\n        </div>\r\n      )}\r\n      \r\n      {/* Tooltip con nombre del color */}\r\n      <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-2 py-1 bg-gray-900 text-white text-xs rounded opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\">\r\n        {color.displayName}\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default AdvancedColorPicker;"],"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","ignoreList":[]}