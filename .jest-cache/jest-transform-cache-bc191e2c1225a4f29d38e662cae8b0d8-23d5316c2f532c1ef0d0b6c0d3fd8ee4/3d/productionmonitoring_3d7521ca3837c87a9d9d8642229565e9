6a40e4335bab3fb073db099ad2c1a322
// ===================================
// PRODUCTION MONITORING CONFIGURATION
// Sistema completo de monitoreo para producciÃ³n
// ===================================
"use strict";

/* istanbul ignore next */
function cov_2ave7gvw2x() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\config\\production-monitoring.ts";
  var hash = "7d9c4229147be9319679ff2ad6814802247c1701";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\config\\production-monitoring.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "2": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "3": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 28,
          column: 3
        }
      },
      "4": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 33
        }
      },
      "5": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 33
        }
      },
      "6": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 42
        }
      },
      "7": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 39
        }
      },
      "8": {
        start: {
          line: 29,
          column: 35
        },
        end: {
          line: 73,
          column: 1
        }
      },
      "9": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 32
        }
      },
      "10": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 34
        }
      },
      "11": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 29
        }
      },
      "12": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 30
        }
      },
      "13": {
        start: {
          line: 83,
          column: 23
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "14": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 31
        }
      },
      "15": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "16": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 77
        }
      },
      "17": {
        start: {
          line: 98,
          column: 31
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "18": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 39
        }
      },
      "19": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 52
        }
      },
      "20": {
        start: {
          line: 110,
          column: 28
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "21": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 36
        }
      },
      "22": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 59
        }
      },
      "23": {
        start: {
          line: 123,
          column: 23
        },
        end: {
          line: 128,
          column: 9
        }
      },
      "24": {
        start: {
          line: 129,
          column: 30
        },
        end: {
          line: 129,
          column: 74
        }
      },
      "25": {
        start: {
          line: 130,
          column: 28
        },
        end: {
          line: 130,
          column: 54
        }
      },
      "26": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "27": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 31
        }
      },
      "28": {
        start: {
          line: 134,
          column: 15
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "29": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 32
        }
      },
      "30": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 33
        }
      },
      "31": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 143,
          column: 10
        }
      },
      "32": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 40
        }
      },
      "33": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 151,
          column: 9
        }
      },
      "34": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 32
        }
      },
      "35": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 156,
          column: 9
        }
      },
      "36": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 19
        }
      },
      "37": {
        start: {
          line: 157,
          column: 24
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "38": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 32
        }
      },
      "39": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "40": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 170,
          column: 15
        }
      },
      "41": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 61
        }
      },
      "42": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 51
        }
      },
      "43": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 180,
          column: 18
        }
      },
      "44": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 32
        }
      },
      "45": {
        start: {
          line: 183,
          column: 27
        },
        end: {
          line: 183,
          column: 54
        }
      },
      "46": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "47": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 26
        }
      },
      "48": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "49": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 26
        }
      },
      "50": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "51": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 39
        }
      },
      "52": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 22
        }
      },
      "53": {
        start: {
          line: 196,
          column: 46
        },
        end: {
          line: 196,
          column: 57
        }
      },
      "54": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "55": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 111
        }
      },
      "56": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "57": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 122
        }
      },
      "58": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "59": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 19
        }
      },
      "60": {
        start: {
          line: 208,
          column: 22
        },
        end: {
          line: 213,
          column: 9
        }
      },
      "61": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 217,
          column: 11
        }
      },
      "62": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 47
        }
      },
      "63": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "64": {
        start: {
          line: 222,
          column: 16
        },
        end: {
          line: 222,
          column: 57
        }
      },
      "65": {
        start: {
          line: 223,
          column: 16
        },
        end: {
          line: 223,
          column: 22
        }
      },
      "66": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 232,
          column: 40
        }
      },
      "67": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 22
        }
      },
      "68": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 244,
          column: 9
        }
      },
      "69": {
        start: {
          line: 238,
          column: 28
        },
        end: {
          line: 238,
          column: 75
        }
      },
      "70": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 242,
          column: 13
        }
      },
      "71": {
        start: {
          line: 240,
          column: 16
        },
        end: {
          line: 240,
          column: 72
        }
      },
      "72": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 241,
          column: 75
        }
      },
      "73": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 243,
          column: 29
        }
      },
      "74": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 245,
          column: 24
        }
      },
      "75": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 250,
          column: 9
        }
      },
      "76": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 28
        }
      },
      "77": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 253,
          column: 9
        }
      },
      "78": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 26
        }
      },
      "79": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 256,
          column: 9
        }
      },
      "80": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 30
        }
      },
      "81": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 257,
          column: 21
        }
      },
      "82": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 269,
          column: 9
        }
      },
      "83": {
        start: {
          line: 262,
          column: 16
        },
        end: {
          line: 262,
          column: 33
        }
      },
      "84": {
        start: {
          line: 264,
          column: 16
        },
        end: {
          line: 264,
          column: 31
        }
      },
      "85": {
        start: {
          line: 266,
          column: 16
        },
        end: {
          line: 266,
          column: 33
        }
      },
      "86": {
        start: {
          line: 268,
          column: 16
        },
        end: {
          line: 268,
          column: 30
        }
      },
      "87": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 280,
          column: 9
        }
      },
      "88": {
        start: {
          line: 273,
          column: 29
        },
        end: {
          line: 276,
          column: 14
        }
      },
      "89": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 31
        }
      },
      "90": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 279,
          column: 25
        }
      },
      "91": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 292,
          column: 9
        }
      },
      "92": {
        start: {
          line: 285,
          column: 29
        },
        end: {
          line: 288,
          column: 14
        }
      },
      "93": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 31
        }
      },
      "94": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 25
        }
      },
      "95": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 299,
          column: 9
        }
      },
      "96": {
        start: {
          line: 296,
          column: 27
        },
        end: {
          line: 296,
          column: 45
        }
      },
      "97": {
        start: {
          line: 297,
          column: 31
        },
        end: {
          line: 297,
          column: 77
        }
      },
      "98": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 74
        }
      },
      "99": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 300,
          column: 20
        }
      },
      "100": {
        start: {
          line: 304,
          column: 30
        },
        end: {
          line: 305,
          column: 9
        }
      },
      "101": {
        start: {
          line: 304,
          column: 66
        },
        end: {
          line: 304,
          column: 104
        }
      },
      "102": {
        start: {
          line: 306,
          column: 26
        },
        end: {
          line: 306,
          column: 101
        }
      },
      "103": {
        start: {
          line: 306,
          column: 52
        },
        end: {
          line: 306,
          column: 70
        }
      },
      "104": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 67
        }
      },
      "105": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 313,
          column: 9
        }
      },
      "106": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 312,
          column: 46
        }
      },
      "107": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 314,
          column: 28
        }
      },
      "108": {
        start: {
          line: 317,
          column: 26
        },
        end: {
          line: 317,
          column: 49
        }
      },
      "109": {
        start: {
          line: 319,
          column: 4
        },
        end: {
          line: 324,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 16
          }
        },
        loc: {
          start: {
            line: 9,
            column: 30
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 29
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 29
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 38
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 35
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 52
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 75
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        loc: {
          start: {
            line: 82,
            column: 35
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 82
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        loc: {
          start: {
            line: 97,
            column: 29
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 97
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        },
        loc: {
          start: {
            line: 109,
            column: 31
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 109
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        },
        loc: {
          start: {
            line: 122,
            column: 24
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 122
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        },
        loc: {
          start: {
            line: 146,
            column: 22
          },
          end: {
            line: 152,
            column: 5
          }
        },
        line: 146
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 153,
            column: 5
          }
        },
        loc: {
          start: {
            line: 153,
            column: 25
          },
          end: {
            line: 176,
            column: 5
          }
        },
        line: 153
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 177,
            column: 4
          },
          end: {
            line: 177,
            column: 5
          }
        },
        loc: {
          start: {
            line: 177,
            column: 21
          },
          end: {
            line: 181,
            column: 5
          }
        },
        line: 177
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 178,
            column: 41
          },
          end: {
            line: 178,
            column: 42
          }
        },
        loc: {
          start: {
            line: 178,
            column: 45
          },
          end: {
            line: 180,
            column: 9
          }
        },
        line: 178
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        },
        loc: {
          start: {
            line: 182,
            column: 27
          },
          end: {
            line: 194,
            column: 5
          }
        },
        line: 182
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        loc: {
          start: {
            line: 195,
            column: 35
          },
          end: {
            line: 203,
            column: 5
          }
        },
        line: 195
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 204,
            column: 5
          }
        },
        loc: {
          start: {
            line: 204,
            column: 29
          },
          end: {
            line: 218,
            column: 5
          }
        },
        line: 204
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 215,
            column: 44
          },
          end: {
            line: 215,
            column: 45
          }
        },
        loc: {
          start: {
            line: 215,
            column: 55
          },
          end: {
            line: 217,
            column: 9
          }
        },
        line: 215
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 219,
            column: 5
          }
        },
        loc: {
          start: {
            line: 219,
            column: 34
          },
          end: {
            line: 235,
            column: 5
          }
        },
        line: 219
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 236,
            column: 4
          },
          end: {
            line: 236,
            column: 5
          }
        },
        loc: {
          start: {
            line: 236,
            column: 19
          },
          end: {
            line: 246,
            column: 5
          }
        },
        line: 236
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 247,
            column: 4
          },
          end: {
            line: 247,
            column: 5
          }
        },
        loc: {
          start: {
            line: 247,
            column: 28
          },
          end: {
            line: 258,
            column: 5
          }
        },
        line: 247
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 259,
            column: 4
          },
          end: {
            line: 259,
            column: 5
          }
        },
        loc: {
          start: {
            line: 259,
            column: 27
          },
          end: {
            line: 270,
            column: 5
          }
        },
        line: 259
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 271,
            column: 5
          }
        },
        loc: {
          start: {
            line: 271,
            column: 27
          },
          end: {
            line: 281,
            column: 5
          }
        },
        line: 271
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 282,
            column: 4
          },
          end: {
            line: 282,
            column: 5
          }
        },
        loc: {
          start: {
            line: 282,
            column: 32
          },
          end: {
            line: 293,
            column: 5
          }
        },
        line: 282
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 294,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        },
        loc: {
          start: {
            line: 294,
            column: 23
          },
          end: {
            line: 301,
            column: 5
          }
        },
        line: 294
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 302,
            column: 5
          }
        },
        loc: {
          start: {
            line: 302,
            column: 29
          },
          end: {
            line: 308,
            column: 5
          }
        },
        line: 302
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 304,
            column: 56
          },
          end: {
            line: 304,
            column: 57
          }
        },
        loc: {
          start: {
            line: 304,
            column: 66
          },
          end: {
            line: 304,
            column: 104
          }
        },
        line: 304
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 306,
            column: 47
          },
          end: {
            line: 306,
            column: 48
          }
        },
        loc: {
          start: {
            line: 306,
            column: 52
          },
          end: {
            line: 306,
            column: 70
          }
        },
        line: 306
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 310,
            column: 4
          },
          end: {
            line: 310,
            column: 5
          }
        },
        loc: {
          start: {
            line: 310,
            column: 14
          },
          end: {
            line: 315,
            column: 5
          }
        },
        line: 310
      },
      "29": {
        name: "useProductionMonitoring",
        decl: {
          start: {
            line: 318,
            column: 9
          },
          end: {
            line: 318,
            column: 32
          }
        },
        loc: {
          start: {
            line: 318,
            column: 35
          },
          end: {
            line: 325,
            column: 1
          }
        },
        line: 318
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 75,
            column: 16
          },
          end: {
            line: 75,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 75,
            column: 25
          },
          end: {
            line: 75,
            column: 51
          }
        }],
        line: 75
      },
      "1": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "2": {
        loc: {
          start: {
            line: 102,
            column: 23
          },
          end: {
            line: 102,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 102,
            column: 58
          },
          end: {
            line: 102,
            column: 77
          }
        }, {
          start: {
            line: 102,
            column: 80
          },
          end: {
            line: 102,
            column: 88
          }
        }],
        line: 102
      },
      "3": {
        loc: {
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: 134,
            column: 15
          },
          end: {
            line: 138,
            column: 9
          }
        }],
        line: 132
      },
      "4": {
        loc: {
          start: {
            line: 134,
            column: 15
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 15
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: 136,
            column: 15
          },
          end: {
            line: 138,
            column: 9
          }
        }],
        line: 134
      },
      "5": {
        loc: {
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "6": {
        loc: {
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 156,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 156,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "7": {
        loc: {
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "8": {
        loc: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "9": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "10": {
        loc: {
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "11": {
        loc: {
          start: {
            line: 197,
            column: 12
          },
          end: {
            line: 197,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 197,
            column: 12
          },
          end: {
            line: 197,
            column: 40
          }
        }, {
          start: {
            line: 197,
            column: 44
          },
          end: {
            line: 197,
            column: 82
          }
        }],
        line: 197
      },
      "12": {
        loc: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "13": {
        loc: {
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 200,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 200,
            column: 45
          }
        }, {
          start: {
            line: 200,
            column: 49
          },
          end: {
            line: 200,
            column: 92
          }
        }],
        line: 200
      },
      "14": {
        loc: {
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "15": {
        loc: {
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 221,
            column: 12
          },
          end: {
            line: 223,
            column: 22
          }
        }, {
          start: {
            line: 224,
            column: 12
          },
          end: {
            line: 233,
            column: 22
          }
        }],
        line: 220
      },
      "16": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "17": {
        loc: {
          start: {
            line: 239,
            column: 12
          },
          end: {
            line: 242,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 12
          },
          end: {
            line: 242,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "18": {
        loc: {
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 250,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 250,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "19": {
        loc: {
          start: {
            line: 248,
            column: 12
          },
          end: {
            line: 248,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 12
          },
          end: {
            line: 248,
            column: 45
          }
        }, {
          start: {
            line: 248,
            column: 49
          },
          end: {
            line: 248,
            column: 80
          }
        }],
        line: 248
      },
      "20": {
        loc: {
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "21": {
        loc: {
          start: {
            line: 251,
            column: 12
          },
          end: {
            line: 251,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 251,
            column: 12
          },
          end: {
            line: 251,
            column: 47
          }
        }, {
          start: {
            line: 251,
            column: 51
          },
          end: {
            line: 251,
            column: 91
          }
        }],
        line: 251
      },
      "22": {
        loc: {
          start: {
            line: 254,
            column: 8
          },
          end: {
            line: 256,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 254,
            column: 8
          },
          end: {
            line: 256,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 254
      },
      "23": {
        loc: {
          start: {
            line: 254,
            column: 12
          },
          end: {
            line: 254,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 254,
            column: 12
          },
          end: {
            line: 254,
            column: 52
          }
        }, {
          start: {
            line: 254,
            column: 56
          },
          end: {
            line: 254,
            column: 89
          }
        }],
        line: 254
      },
      "24": {
        loc: {
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 269,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 262,
            column: 33
          }
        }, {
          start: {
            line: 263,
            column: 12
          },
          end: {
            line: 264,
            column: 31
          }
        }, {
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 266,
            column: 33
          }
        }, {
          start: {
            line: 267,
            column: 12
          },
          end: {
            line: 268,
            column: 30
          }
        }],
        line: 260
      },
      "25": {
        loc: {
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 299,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 299,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "26": {
        loc: {
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 295,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 295,
            column: 46
          }
        }, {
          start: {
            line: 295,
            column: 50
          },
          end: {
            line: 295,
            column: 73
          }
        }],
        line: 295
      },
      "27": {
        loc: {
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0, 0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\config\\production-monitoring.ts"],
      sourcesContent: ["// ===================================\r\n// PRODUCTION MONITORING CONFIGURATION\r\n// Sistema completo de monitoreo para producci\xF3n\r\n// ===================================\r\n\r\nexport interface ProductionMonitoringConfig {\r\n  // Core Web Vitals thresholds\r\n  webVitals: {\r\n    LCP: { good: number; needsImprovement: number };\r\n    FID: { good: number; needsImprovement: number };\r\n    CLS: { good: number; needsImprovement: number };\r\n  };\r\n  \r\n  // Performance budgets\r\n  performance: {\r\n    bundleSize: number; // KB\r\n    firstLoadJS: number; // KB\r\n    buildTime: number; // ms\r\n    apiResponseTime: number; // ms\r\n  };\r\n  \r\n  // Monitoring endpoints\r\n  endpoints: {\r\n    metrics: string;\r\n    alerts: string;\r\n    healthCheck: string;\r\n    analytics: string;\r\n  };\r\n  \r\n  // Alert configuration\r\n  alerts: {\r\n    enabled: boolean;\r\n    channels: string[];\r\n    thresholds: {\r\n      errorRate: number;\r\n      responseTime: number;\r\n      memoryUsage: number;\r\n    };\r\n  };\r\n  \r\n  // Data retention\r\n  retention: {\r\n    metrics: number; // days\r\n    logs: number; // days\r\n    analytics: number; // days\r\n  };\r\n}\r\n\r\nexport const productionMonitoringConfig: ProductionMonitoringConfig = {\r\n  webVitals: {\r\n    LCP: { good: 2500, needsImprovement: 4000 },\r\n    FID: { good: 100, needsImprovement: 300 },\r\n    CLS: { good: 0.1, needsImprovement: 0.25 },\r\n  },\r\n  \r\n  performance: {\r\n    bundleSize: 4096, // 4MB\r\n    firstLoadJS: 600, // 600KB\r\n    buildTime: 45000, // 45s\r\n    apiResponseTime: 2000, // 2s\r\n  },\r\n  \r\n  endpoints: {\r\n    metrics: '/api/admin/performance/metrics',\r\n    alerts: '/api/admin/monitoring/alerts',\r\n    healthCheck: '/api/health',\r\n    analytics: '/api/analytics/events',\r\n  },\r\n  \r\n  alerts: {\r\n    enabled: process.env.NODE_ENV === 'production',\r\n    channels: ['console', 'webhook'],\r\n    thresholds: {\r\n      errorRate: 0.05, // 5%\r\n      responseTime: 2000, // 2s\r\n      memoryUsage: 0.85, // 85%\r\n    },\r\n  },\r\n  \r\n  retention: {\r\n    metrics: 30, // 30 days\r\n    logs: 7, // 7 days\r\n    analytics: 90, // 90 days\r\n  },\r\n};\r\n\r\n// ===================================\r\n// MONITORING UTILITIES\r\n// ===================================\r\n\r\nexport class ProductionMonitor {\r\n  private config: ProductionMonitoringConfig;\r\n  private metricsBuffer: any[] = [];\r\n  private flushInterval: NodeJS.Timeout | null = null;\r\n  \r\n  constructor(config: ProductionMonitoringConfig = productionMonitoringConfig) {\r\n    this.config = config;\r\n    this.startAutoFlush();\r\n  }\r\n  \r\n  // Core Web Vitals tracking\r\n  trackWebVital(name: string, value: number, id: string) {\r\n    const metric = {\r\n      name,\r\n      value,\r\n      id,\r\n      timestamp: Date.now(),\r\n      rating: this.getRating(name, value),\r\n    };\r\n    \r\n    this.addMetric(metric);\r\n    \r\n    // Send alert if poor performance\r\n    if (metric.rating === 'poor') {\r\n      this.sendAlert(`Poor ${name} detected: ${value}`, 'performance');\r\n    }\r\n  }\r\n  \r\n  // Performance metrics tracking\r\n  trackPerformance(metric: {\r\n    name: string;\r\n    value: number;\r\n    category: string;\r\n    metadata?: Record<string, any>;\r\n  }) {\r\n    const enrichedMetric = {\r\n      ...metric,\r\n      timestamp: Date.now(),\r\n      sessionId: this.getSessionId(),\r\n      userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : 'server',\r\n    };\r\n    \r\n    this.addMetric(enrichedMetric);\r\n    \r\n    // Check against performance budgets\r\n    this.checkPerformanceBudget(enrichedMetric);\r\n  }\r\n  \r\n  // Error tracking\r\n  trackError(error: Error, context?: Record<string, any>) {\r\n    const errorMetric = {\r\n      name: 'error',\r\n      message: error.message,\r\n      stack: error.stack,\r\n      context,\r\n      timestamp: Date.now(),\r\n      severity: this.getErrorSeverity(error),\r\n    };\r\n    \r\n    this.addMetric(errorMetric);\r\n    this.sendAlert(`Error: ${error.message}`, 'error');\r\n  }\r\n  \r\n  // Health check\r\n  async healthCheck(): Promise<{\r\n    status: 'healthy' | 'degraded' | 'unhealthy';\r\n    checks: Record<string, boolean>;\r\n    timestamp: number;\r\n  }> {\r\n    const checks = {\r\n      api: await this.checkApiHealth(),\r\n      database: await this.checkDatabaseHealth(),\r\n      memory: this.checkMemoryUsage(),\r\n      performance: this.checkPerformanceHealth(),\r\n    };\r\n    \r\n    const healthyChecks = Object.values(checks).filter(Boolean).length;\r\n    const totalChecks = Object.keys(checks).length;\r\n    \r\n    let status: 'healthy' | 'degraded' | 'unhealthy';\r\n    if (healthyChecks === totalChecks) {\r\n      status = 'healthy';\r\n    } else if (healthyChecks >= totalChecks * 0.7) {\r\n      status = 'degraded';\r\n    } else {\r\n      status = 'unhealthy';\r\n    }\r\n    \r\n    return {\r\n      status,\r\n      checks,\r\n      timestamp: Date.now(),\r\n    };\r\n  }\r\n  \r\n  // Private methods\r\n  private addMetric(metric: any) {\r\n    this.metricsBuffer.push(metric);\r\n    \r\n    // Flush if buffer is full\r\n    if (this.metricsBuffer.length >= 50) {\r\n      this.flushMetrics();\r\n    }\r\n  }\r\n  \r\n  private async flushMetrics() {\r\n    if (this.metricsBuffer.length === 0) {return;}\r\n    \r\n    const metrics = [...this.metricsBuffer];\r\n    this.metricsBuffer = [];\r\n    \r\n    try {\r\n      await fetch(this.config.endpoints.metrics, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ metrics }),\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to flush metrics:', error);\r\n      // Re-add metrics to buffer for retry\r\n      this.metricsBuffer.unshift(...metrics);\r\n    }\r\n  }\r\n  \r\n  private startAutoFlush() {\r\n    this.flushInterval = setInterval(() => {\r\n      this.flushMetrics();\r\n    }, 30000); // 30 seconds\r\n  }\r\n  \r\n  private getRating(name: string, value: number): 'good' | 'needs-improvement' | 'poor' {\r\n    const thresholds = this.config.webVitals[name as keyof typeof this.config.webVitals];\r\n    if (!thresholds) {return 'good';}\r\n    \r\n    if (value <= thresholds.good) {return 'good';}\r\n    if (value <= thresholds.needsImprovement) {return 'needs-improvement';}\r\n    return 'poor';\r\n  }\r\n  \r\n  private checkPerformanceBudget(metric: any) {\r\n    const { performance } = this.config;\r\n    \r\n    if (metric.name === 'bundleSize' && metric.value > performance.bundleSize) {\r\n      this.sendAlert(`Bundle size exceeded: ${metric.value}KB > ${performance.bundleSize}KB`, 'budget');\r\n    }\r\n    \r\n    if (metric.name === 'apiResponseTime' && metric.value > performance.apiResponseTime) {\r\n      this.sendAlert(`API response time exceeded: ${metric.value}ms > ${performance.apiResponseTime}ms`, 'budget');\r\n    }\r\n  }\r\n  \r\n  private sendAlert(message: string, type: string) {\r\n    if (!this.config.alerts.enabled) {return;}\r\n    \r\n    const alert = {\r\n      message,\r\n      type,\r\n      timestamp: Date.now(),\r\n      severity: this.getAlertSeverity(type),\r\n    };\r\n    \r\n    // Send to configured channels\r\n    this.config.alerts.channels.forEach(channel => {\r\n      this.sendToChannel(channel, alert);\r\n    });\r\n  }\r\n  \r\n  private sendToChannel(channel: string, alert: any) {\r\n    switch (channel) {\r\n      case 'console':\r\n        console.warn(`[ALERT] ${alert.message}`);\r\n        break;\r\n      case 'webhook':\r\n        // Send to webhook endpoint\r\n        fetch(this.config.endpoints.alerts, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(alert),\r\n        }).catch(console.error);\r\n        break;\r\n    }\r\n  }\r\n  \r\n  private getSessionId(): string {\r\n    if (typeof window !== 'undefined') {\r\n      let sessionId = sessionStorage.getItem('monitoring-session-id');\r\n      if (!sessionId) {\r\n        sessionId = Math.random().toString(36).substring(2, 15);\r\n        sessionStorage.setItem('monitoring-session-id', sessionId);\r\n      }\r\n      return sessionId;\r\n    }\r\n    return 'server';\r\n  }\r\n  \r\n  private getErrorSeverity(error: Error): 'low' | 'medium' | 'high' | 'critical' {\r\n    if (error.message.includes('Network') || error.message.includes('fetch')) {\r\n      return 'medium';\r\n    }\r\n    if (error.message.includes('TypeError') || error.message.includes('ReferenceError')) {\r\n      return 'high';\r\n    }\r\n    if (error.message.includes('ChunkLoadError') || error.message.includes('Loading')) {\r\n      return 'critical';\r\n    }\r\n    return 'low';\r\n  }\r\n  \r\n  private getAlertSeverity(type: string): 'info' | 'warning' | 'error' | 'critical' {\r\n    switch (type) {\r\n      case 'performance': return 'warning';\r\n      case 'error': return 'error';\r\n      case 'budget': return 'warning';\r\n      default: return 'info';\r\n    }\r\n  }\r\n  \r\n  private async checkApiHealth(): Promise<boolean> {\r\n    try {\r\n      const response = await fetch(this.config.endpoints.healthCheck, {\r\n        method: 'GET',\r\n        timeout: 5000,\r\n      } as any);\r\n      return response.ok;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  private async checkDatabaseHealth(): Promise<boolean> {\r\n    try {\r\n      // Simple database check - could be enhanced\r\n      const response = await fetch('/api/health/database', {\r\n        method: 'GET',\r\n        timeout: 5000,\r\n      } as any);\r\n      return response.ok;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  private checkMemoryUsage(): boolean {\r\n    if (typeof performance !== 'undefined' && 'memory' in performance) {\r\n      const memory = (performance as any).memory;\r\n      const usageRatio = memory.usedJSHeapSize / memory.jsHeapSizeLimit;\r\n      return usageRatio < this.config.alerts.thresholds.memoryUsage;\r\n    }\r\n    return true; // Assume healthy if can't measure\r\n  }\r\n  \r\n  private checkPerformanceHealth(): boolean {\r\n    // Check recent performance metrics\r\n    const recentMetrics = this.metricsBuffer.filter(\r\n      metric => Date.now() - metric.timestamp < 300000 // 5 minutes\r\n    );\r\n    \r\n    const errorRate = recentMetrics.filter(m => m.name === 'error').length / recentMetrics.length;\r\n    return errorRate < this.config.alerts.thresholds.errorRate;\r\n  }\r\n  \r\n  // Cleanup\r\n  destroy() {\r\n    if (this.flushInterval) {\r\n      clearInterval(this.flushInterval);\r\n    }\r\n    this.flushMetrics(); // Final flush\r\n  }\r\n}\r\n\r\n// Global monitor instance\r\nexport const productionMonitor = new ProductionMonitor();\r\n\r\n// React hook for easy integration\r\nexport function useProductionMonitoring() {\r\n  return {\r\n    trackWebVital: productionMonitor.trackWebVital.bind(productionMonitor),\r\n    trackPerformance: productionMonitor.trackPerformance.bind(productionMonitor),\r\n    trackError: productionMonitor.trackError.bind(productionMonitor),\r\n    healthCheck: productionMonitor.healthCheck.bind(productionMonitor),\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["ProductionMonitor", "productionMonitor", "productionMonitoringConfig", "useProductionMonitoring", "webVitals", "LCP", "good", "needsImprovement", "FID", "CLS", "performance", "bundleSize", "firstLoadJS", "buildTime", "apiResponseTime", "endpoints", "metrics", "alerts", "healthCheck", "analytics", "enabled", "process", "env", "NODE_ENV", "channels", "thresholds", "errorRate", "responseTime", "memoryUsage", "retention", "logs", "config", "metricsBuffer", "flushInterval", "startAutoFlush", "trackWebVital", "name", "value", "id", "metric", "timestamp", "Date", "now", "rating", "getRating", "addMetric", "sendAlert", "trackPerformance", "enrichedMetric", "sessionId", "getSessionId", "userAgent", "navigator", "checkPerformanceBudget", "trackError", "error", "context", "errorMetric", "message", "stack", "severity", "getErrorSeverity", "checks", "api", "checkApiHealth", "database", "checkDatabaseHealth", "memory", "checkMemoryUsage", "checkPerformanceHealth", "healthyChecks", "Object", "values", "filter", "Boolean", "length", "totalChecks", "keys", "status", "push", "flushMetrics", "fetch", "method", "headers", "body", "JSON", "stringify", "console", "unshift", "setInterval", "type", "alert", "getAlertSeverity", "forEach", "channel", "sendToChannel", "warn", "catch", "window", "sessionStorage", "getItem", "Math", "random", "toString", "substring", "setItem", "includes", "response", "timeout", "ok", "usageRatio", "usedJSHeapSize", "jsHeapSizeLimit", "recentMetrics", "m", "destroy", "clearInterval", "bind"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7d9c4229147be9319679ff2ad6814802247c1701"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ave7gvw2x = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ave7gvw2x();
cov_2ave7gvw2x().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2ave7gvw2x().f[0]++;
  cov_2ave7gvw2x().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2ave7gvw2x().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2ave7gvw2x().s[3]++;
_export(exports, {
  get ProductionMonitor() {
    /* istanbul ignore next */
    cov_2ave7gvw2x().f[1]++;
    cov_2ave7gvw2x().s[4]++;
    return ProductionMonitor;
  },
  get productionMonitor() {
    /* istanbul ignore next */
    cov_2ave7gvw2x().f[2]++;
    cov_2ave7gvw2x().s[5]++;
    return productionMonitor;
  },
  get productionMonitoringConfig() {
    /* istanbul ignore next */
    cov_2ave7gvw2x().f[3]++;
    cov_2ave7gvw2x().s[6]++;
    return productionMonitoringConfig;
  },
  get useProductionMonitoring() {
    /* istanbul ignore next */
    cov_2ave7gvw2x().f[4]++;
    cov_2ave7gvw2x().s[7]++;
    return useProductionMonitoring;
  }
});
const productionMonitoringConfig =
/* istanbul ignore next */
(cov_2ave7gvw2x().s[8]++, {
  webVitals: {
    LCP: {
      good: 2500,
      needsImprovement: 4000
    },
    FID: {
      good: 100,
      needsImprovement: 300
    },
    CLS: {
      good: 0.1,
      needsImprovement: 0.25
    }
  },
  performance: {
    bundleSize: 4096,
    firstLoadJS: 600,
    buildTime: 45000,
    apiResponseTime: 2000
  },
  endpoints: {
    metrics: '/api/admin/performance/metrics',
    alerts: '/api/admin/monitoring/alerts',
    healthCheck: '/api/health',
    analytics: '/api/analytics/events'
  },
  alerts: {
    enabled: process.env.NODE_ENV === 'production',
    channels: ['console', 'webhook'],
    thresholds: {
      errorRate: 0.05,
      responseTime: 2000,
      memoryUsage: 0.85
    }
  },
  retention: {
    metrics: 30,
    logs: 7,
    analytics: 90
  }
});
class ProductionMonitor {
  constructor(config =
  /* istanbul ignore next */
  (cov_2ave7gvw2x().b[0][0]++, productionMonitoringConfig)) {
    /* istanbul ignore next */
    cov_2ave7gvw2x().f[5]++;
    cov_2ave7gvw2x().s[9]++;
    this.metricsBuffer = [];
    /* istanbul ignore next */
    cov_2ave7gvw2x().s[10]++;
    this.flushInterval = null;
    /* istanbul ignore next */
    cov_2ave7gvw2x().s[11]++;
    this.config = config;
    /* istanbul ignore next */
    cov_2ave7gvw2x().s[12]++;
    this.startAutoFlush();
  }
  // Core Web Vitals tracking
  trackWebVital(name, value, id) {
    /* istanbul ignore next */
    cov_2ave7gvw2x().f[6]++;
    const metric =
    /* istanbul ignore next */
    (cov_2ave7gvw2x().s[13]++, {
      name,
      value,
      id,
      timestamp: Date.now(),
      rating: this.getRating(name, value)
    });
    /* istanbul ignore next */
    cov_2ave7gvw2x().s[14]++;
    this.addMetric(metric);
    // Send alert if poor performance
    /* istanbul ignore next */
    cov_2ave7gvw2x().s[15]++;
    if (metric.rating === 'poor') {
      /* istanbul ignore next */
      cov_2ave7gvw2x().b[1][0]++;
      cov_2ave7gvw2x().s[16]++;
      this.sendAlert(`Poor ${name} detected: ${value}`, 'performance');
    } else
    /* istanbul ignore next */
    {
      cov_2ave7gvw2x().b[1][1]++;
    }
  }
  // Performance metrics tracking
  trackPerformance(metric) {
    /* istanbul ignore next */
    cov_2ave7gvw2x().f[7]++;
    const enrichedMetric =
    /* istanbul ignore next */
    (cov_2ave7gvw2x().s[17]++, {
      ...metric,
      timestamp: Date.now(),
      sessionId: this.getSessionId(),
      userAgent: typeof navigator !== 'undefined' ?
      /* istanbul ignore next */
      (cov_2ave7gvw2x().b[2][0]++, navigator.userAgent) :
      /* istanbul ignore next */
      (cov_2ave7gvw2x().b[2][1]++, 'server')
    });
    /* istanbul ignore next */
    cov_2ave7gvw2x().s[18]++;
    this.addMetric(enrichedMetric);
    // Check against performance budgets
    /* istanbul ignore next */
    cov_2ave7gvw2x().s[19]++;
    this.checkPerformanceBudget(enrichedMetric);
  }
  // Error tracking
  trackError(error, context) {
    /* istanbul ignore next */
    cov_2ave7gvw2x().f[8]++;
    const errorMetric =
    /* istanbul ignore next */
    (cov_2ave7gvw2x().s[20]++, {
      name: 'error',
      message: error.message,
      stack: error.stack,
      context,
      timestamp: Date.now(),
      severity: this.getErrorSeverity(error)
    });
    /* istanbul ignore next */
    cov_2ave7gvw2x().s[21]++;
    this.addMetric(errorMetric);
    /* istanbul ignore next */
    cov_2ave7gvw2x().s[22]++;
    this.sendAlert(`Error: ${error.message}`, 'error');
  }
  // Health check
  async healthCheck() {
    /* istanbul ignore next */
    cov_2ave7gvw2x().f[9]++;
    const checks =
    /* istanbul ignore next */
    (cov_2ave7gvw2x().s[23]++, {
      api: await this.checkApiHealth(),
      database: await this.checkDatabaseHealth(),
      memory: this.checkMemoryUsage(),
      performance: this.checkPerformanceHealth()
    });
    const healthyChecks =
    /* istanbul ignore next */
    (cov_2ave7gvw2x().s[24]++, Object.values(checks).filter(Boolean).length);
    const totalChecks =
    /* istanbul ignore next */
    (cov_2ave7gvw2x().s[25]++, Object.keys(checks).length);
    let status;
    /* istanbul ignore next */
    cov_2ave7gvw2x().s[26]++;
    if (healthyChecks === totalChecks) {
      /* istanbul ignore next */
      cov_2ave7gvw2x().b[3][0]++;
      cov_2ave7gvw2x().s[27]++;
      status = 'healthy';
    } else {
      /* istanbul ignore next */
      cov_2ave7gvw2x().b[3][1]++;
      cov_2ave7gvw2x().s[28]++;
      if (healthyChecks >= totalChecks * 0.7) {
        /* istanbul ignore next */
        cov_2ave7gvw2x().b[4][0]++;
        cov_2ave7gvw2x().s[29]++;
        status = 'degraded';
      } else {
        /* istanbul ignore next */
        cov_2ave7gvw2x().b[4][1]++;
        cov_2ave7gvw2x().s[30]++;
        status = 'unhealthy';
      }
    }
    /* istanbul ignore next */
    cov_2ave7gvw2x().s[31]++;
    return {
      status,
      checks,
      timestamp: Date.now()
    };
  }
  // Private methods
  addMetric(metric) {
    /* istanbul ignore next */
    cov_2ave7gvw2x().f[10]++;
    cov_2ave7gvw2x().s[32]++;
    this.metricsBuffer.push(metric);
    // Flush if buffer is full
    /* istanbul ignore next */
    cov_2ave7gvw2x().s[33]++;
    if (this.metricsBuffer.length >= 50) {
      /* istanbul ignore next */
      cov_2ave7gvw2x().b[5][0]++;
      cov_2ave7gvw2x().s[34]++;
      this.flushMetrics();
    } else
    /* istanbul ignore next */
    {
      cov_2ave7gvw2x().b[5][1]++;
    }
  }
  async flushMetrics() {
    /* istanbul ignore next */
    cov_2ave7gvw2x().f[11]++;
    cov_2ave7gvw2x().s[35]++;
    if (this.metricsBuffer.length === 0) {
      /* istanbul ignore next */
      cov_2ave7gvw2x().b[6][0]++;
      cov_2ave7gvw2x().s[36]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2ave7gvw2x().b[6][1]++;
    }
    const metrics =
    /* istanbul ignore next */
    (cov_2ave7gvw2x().s[37]++, [...this.metricsBuffer]);
    /* istanbul ignore next */
    cov_2ave7gvw2x().s[38]++;
    this.metricsBuffer = [];
    /* istanbul ignore next */
    cov_2ave7gvw2x().s[39]++;
    try {
      /* istanbul ignore next */
      cov_2ave7gvw2x().s[40]++;
      await fetch(this.config.endpoints.metrics, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          metrics
        })
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2ave7gvw2x().s[41]++;
      console.error('Failed to flush metrics:', error);
      // Re-add metrics to buffer for retry
      /* istanbul ignore next */
      cov_2ave7gvw2x().s[42]++;
      this.metricsBuffer.unshift(...metrics);
    }
  }
  startAutoFlush() {
    /* istanbul ignore next */
    cov_2ave7gvw2x().f[12]++;
    cov_2ave7gvw2x().s[43]++;
    this.flushInterval = setInterval(() => {
      /* istanbul ignore next */
      cov_2ave7gvw2x().f[13]++;
      cov_2ave7gvw2x().s[44]++;
      this.flushMetrics();
    }, 30000); // 30 seconds
  }
  getRating(name, value) {
    /* istanbul ignore next */
    cov_2ave7gvw2x().f[14]++;
    const thresholds =
    /* istanbul ignore next */
    (cov_2ave7gvw2x().s[45]++, this.config.webVitals[name]);
    /* istanbul ignore next */
    cov_2ave7gvw2x().s[46]++;
    if (!thresholds) {
      /* istanbul ignore next */
      cov_2ave7gvw2x().b[7][0]++;
      cov_2ave7gvw2x().s[47]++;
      return 'good';
    } else
    /* istanbul ignore next */
    {
      cov_2ave7gvw2x().b[7][1]++;
    }
    cov_2ave7gvw2x().s[48]++;
    if (value <= thresholds.good) {
      /* istanbul ignore next */
      cov_2ave7gvw2x().b[8][0]++;
      cov_2ave7gvw2x().s[49]++;
      return 'good';
    } else
    /* istanbul ignore next */
    {
      cov_2ave7gvw2x().b[8][1]++;
    }
    cov_2ave7gvw2x().s[50]++;
    if (value <= thresholds.needsImprovement) {
      /* istanbul ignore next */
      cov_2ave7gvw2x().b[9][0]++;
      cov_2ave7gvw2x().s[51]++;
      return 'needs-improvement';
    } else
    /* istanbul ignore next */
    {
      cov_2ave7gvw2x().b[9][1]++;
    }
    cov_2ave7gvw2x().s[52]++;
    return 'poor';
  }
  checkPerformanceBudget(metric) {
    /* istanbul ignore next */
    cov_2ave7gvw2x().f[15]++;
    const {
      performance: performance1
    } =
    /* istanbul ignore next */
    (cov_2ave7gvw2x().s[53]++, this.config);
    /* istanbul ignore next */
    cov_2ave7gvw2x().s[54]++;
    if (
    /* istanbul ignore next */
    (cov_2ave7gvw2x().b[11][0]++, metric.name === 'bundleSize') &&
    /* istanbul ignore next */
    (cov_2ave7gvw2x().b[11][1]++, metric.value > performance1.bundleSize)) {
      /* istanbul ignore next */
      cov_2ave7gvw2x().b[10][0]++;
      cov_2ave7gvw2x().s[55]++;
      this.sendAlert(`Bundle size exceeded: ${metric.value}KB > ${performance1.bundleSize}KB`, 'budget');
    } else
    /* istanbul ignore next */
    {
      cov_2ave7gvw2x().b[10][1]++;
    }
    cov_2ave7gvw2x().s[56]++;
    if (
    /* istanbul ignore next */
    (cov_2ave7gvw2x().b[13][0]++, metric.name === 'apiResponseTime') &&
    /* istanbul ignore next */
    (cov_2ave7gvw2x().b[13][1]++, metric.value > performance1.apiResponseTime)) {
      /* istanbul ignore next */
      cov_2ave7gvw2x().b[12][0]++;
      cov_2ave7gvw2x().s[57]++;
      this.sendAlert(`API response time exceeded: ${metric.value}ms > ${performance1.apiResponseTime}ms`, 'budget');
    } else
    /* istanbul ignore next */
    {
      cov_2ave7gvw2x().b[12][1]++;
    }
  }
  sendAlert(message, type) {
    /* istanbul ignore next */
    cov_2ave7gvw2x().f[16]++;
    cov_2ave7gvw2x().s[58]++;
    if (!this.config.alerts.enabled) {
      /* istanbul ignore next */
      cov_2ave7gvw2x().b[14][0]++;
      cov_2ave7gvw2x().s[59]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2ave7gvw2x().b[14][1]++;
    }
    const alert =
    /* istanbul ignore next */
    (cov_2ave7gvw2x().s[60]++, {
      message,
      type,
      timestamp: Date.now(),
      severity: this.getAlertSeverity(type)
    });
    // Send to configured channels
    /* istanbul ignore next */
    cov_2ave7gvw2x().s[61]++;
    this.config.alerts.channels.forEach(channel => {
      /* istanbul ignore next */
      cov_2ave7gvw2x().f[17]++;
      cov_2ave7gvw2x().s[62]++;
      this.sendToChannel(channel, alert);
    });
  }
  sendToChannel(channel, alert) {
    /* istanbul ignore next */
    cov_2ave7gvw2x().f[18]++;
    cov_2ave7gvw2x().s[63]++;
    switch (channel) {
      case 'console':
        /* istanbul ignore next */
        cov_2ave7gvw2x().b[15][0]++;
        cov_2ave7gvw2x().s[64]++;
        console.warn(`[ALERT] ${alert.message}`);
        /* istanbul ignore next */
        cov_2ave7gvw2x().s[65]++;
        break;
      case 'webhook':
        /* istanbul ignore next */
        cov_2ave7gvw2x().b[15][1]++;
        cov_2ave7gvw2x().s[66]++;
        // Send to webhook endpoint
        fetch(this.config.endpoints.alerts, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(alert)
        }).catch(console.error);
        /* istanbul ignore next */
        cov_2ave7gvw2x().s[67]++;
        break;
    }
  }
  getSessionId() {
    /* istanbul ignore next */
    cov_2ave7gvw2x().f[19]++;
    cov_2ave7gvw2x().s[68]++;
    if (typeof window !== 'undefined') {
      /* istanbul ignore next */
      cov_2ave7gvw2x().b[16][0]++;
      let sessionId =
      /* istanbul ignore next */
      (cov_2ave7gvw2x().s[69]++, sessionStorage.getItem('monitoring-session-id'));
      /* istanbul ignore next */
      cov_2ave7gvw2x().s[70]++;
      if (!sessionId) {
        /* istanbul ignore next */
        cov_2ave7gvw2x().b[17][0]++;
        cov_2ave7gvw2x().s[71]++;
        sessionId = Math.random().toString(36).substring(2, 15);
        /* istanbul ignore next */
        cov_2ave7gvw2x().s[72]++;
        sessionStorage.setItem('monitoring-session-id', sessionId);
      } else
      /* istanbul ignore next */
      {
        cov_2ave7gvw2x().b[17][1]++;
      }
      cov_2ave7gvw2x().s[73]++;
      return sessionId;
    } else
    /* istanbul ignore next */
    {
      cov_2ave7gvw2x().b[16][1]++;
    }
    cov_2ave7gvw2x().s[74]++;
    return 'server';
  }
  getErrorSeverity(error) {
    /* istanbul ignore next */
    cov_2ave7gvw2x().f[20]++;
    cov_2ave7gvw2x().s[75]++;
    if (
    /* istanbul ignore next */
    (cov_2ave7gvw2x().b[19][0]++, error.message.includes('Network')) ||
    /* istanbul ignore next */
    (cov_2ave7gvw2x().b[19][1]++, error.message.includes('fetch'))) {
      /* istanbul ignore next */
      cov_2ave7gvw2x().b[18][0]++;
      cov_2ave7gvw2x().s[76]++;
      return 'medium';
    } else
    /* istanbul ignore next */
    {
      cov_2ave7gvw2x().b[18][1]++;
    }
    cov_2ave7gvw2x().s[77]++;
    if (
    /* istanbul ignore next */
    (cov_2ave7gvw2x().b[21][0]++, error.message.includes('TypeError')) ||
    /* istanbul ignore next */
    (cov_2ave7gvw2x().b[21][1]++, error.message.includes('ReferenceError'))) {
      /* istanbul ignore next */
      cov_2ave7gvw2x().b[20][0]++;
      cov_2ave7gvw2x().s[78]++;
      return 'high';
    } else
    /* istanbul ignore next */
    {
      cov_2ave7gvw2x().b[20][1]++;
    }
    cov_2ave7gvw2x().s[79]++;
    if (
    /* istanbul ignore next */
    (cov_2ave7gvw2x().b[23][0]++, error.message.includes('ChunkLoadError')) ||
    /* istanbul ignore next */
    (cov_2ave7gvw2x().b[23][1]++, error.message.includes('Loading'))) {
      /* istanbul ignore next */
      cov_2ave7gvw2x().b[22][0]++;
      cov_2ave7gvw2x().s[80]++;
      return 'critical';
    } else
    /* istanbul ignore next */
    {
      cov_2ave7gvw2x().b[22][1]++;
    }
    cov_2ave7gvw2x().s[81]++;
    return 'low';
  }
  getAlertSeverity(type) {
    /* istanbul ignore next */
    cov_2ave7gvw2x().f[21]++;
    cov_2ave7gvw2x().s[82]++;
    switch (type) {
      case 'performance':
        /* istanbul ignore next */
        cov_2ave7gvw2x().b[24][0]++;
        cov_2ave7gvw2x().s[83]++;
        return 'warning';
      case 'error':
        /* istanbul ignore next */
        cov_2ave7gvw2x().b[24][1]++;
        cov_2ave7gvw2x().s[84]++;
        return 'error';
      case 'budget':
        /* istanbul ignore next */
        cov_2ave7gvw2x().b[24][2]++;
        cov_2ave7gvw2x().s[85]++;
        return 'warning';
      default:
        /* istanbul ignore next */
        cov_2ave7gvw2x().b[24][3]++;
        cov_2ave7gvw2x().s[86]++;
        return 'info';
    }
  }
  async checkApiHealth() {
    /* istanbul ignore next */
    cov_2ave7gvw2x().f[22]++;
    cov_2ave7gvw2x().s[87]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2ave7gvw2x().s[88]++, await fetch(this.config.endpoints.healthCheck, {
        method: 'GET',
        timeout: 5000
      }));
      /* istanbul ignore next */
      cov_2ave7gvw2x().s[89]++;
      return response.ok;
    } catch {
      /* istanbul ignore next */
      cov_2ave7gvw2x().s[90]++;
      return false;
    }
  }
  async checkDatabaseHealth() {
    /* istanbul ignore next */
    cov_2ave7gvw2x().f[23]++;
    cov_2ave7gvw2x().s[91]++;
    try {
      // Simple database check - could be enhanced
      const response =
      /* istanbul ignore next */
      (cov_2ave7gvw2x().s[92]++, await fetch('/api/health/database', {
        method: 'GET',
        timeout: 5000
      }));
      /* istanbul ignore next */
      cov_2ave7gvw2x().s[93]++;
      return response.ok;
    } catch {
      /* istanbul ignore next */
      cov_2ave7gvw2x().s[94]++;
      return false;
    }
  }
  checkMemoryUsage() {
    /* istanbul ignore next */
    cov_2ave7gvw2x().f[24]++;
    cov_2ave7gvw2x().s[95]++;
    if (
    /* istanbul ignore next */
    (cov_2ave7gvw2x().b[26][0]++, typeof performance !== 'undefined') &&
    /* istanbul ignore next */
    (cov_2ave7gvw2x().b[26][1]++, 'memory' in performance)) {
      /* istanbul ignore next */
      cov_2ave7gvw2x().b[25][0]++;
      const memory =
      /* istanbul ignore next */
      (cov_2ave7gvw2x().s[96]++, performance.memory);
      const usageRatio =
      /* istanbul ignore next */
      (cov_2ave7gvw2x().s[97]++, memory.usedJSHeapSize / memory.jsHeapSizeLimit);
      /* istanbul ignore next */
      cov_2ave7gvw2x().s[98]++;
      return usageRatio < this.config.alerts.thresholds.memoryUsage;
    } else
    /* istanbul ignore next */
    {
      cov_2ave7gvw2x().b[25][1]++;
    }
    cov_2ave7gvw2x().s[99]++;
    return true; // Assume healthy if can't measure
  }
  checkPerformanceHealth() {
    /* istanbul ignore next */
    cov_2ave7gvw2x().f[25]++;
    // Check recent performance metrics
    const recentMetrics =
    /* istanbul ignore next */
    (cov_2ave7gvw2x().s[100]++, this.metricsBuffer.filter(metric => {
      /* istanbul ignore next */
      cov_2ave7gvw2x().f[26]++;
      cov_2ave7gvw2x().s[101]++;
      return Date.now() - metric.timestamp < 300000;
    } // 5 minutes
    ));
    const errorRate =
    /* istanbul ignore next */
    (cov_2ave7gvw2x().s[102]++, recentMetrics.filter(m => {
      /* istanbul ignore next */
      cov_2ave7gvw2x().f[27]++;
      cov_2ave7gvw2x().s[103]++;
      return m.name === 'error';
    }).length / recentMetrics.length);
    /* istanbul ignore next */
    cov_2ave7gvw2x().s[104]++;
    return errorRate < this.config.alerts.thresholds.errorRate;
  }
  // Cleanup
  destroy() {
    /* istanbul ignore next */
    cov_2ave7gvw2x().f[28]++;
    cov_2ave7gvw2x().s[105]++;
    if (this.flushInterval) {
      /* istanbul ignore next */
      cov_2ave7gvw2x().b[27][0]++;
      cov_2ave7gvw2x().s[106]++;
      clearInterval(this.flushInterval);
    } else
    /* istanbul ignore next */
    {
      cov_2ave7gvw2x().b[27][1]++;
    }
    cov_2ave7gvw2x().s[107]++;
    this.flushMetrics(); // Final flush
  }
}
const productionMonitor =
/* istanbul ignore next */
(cov_2ave7gvw2x().s[108]++, new ProductionMonitor());
function useProductionMonitoring() {
  /* istanbul ignore next */
  cov_2ave7gvw2x().f[29]++;
  cov_2ave7gvw2x().s[109]++;
  return {
    trackWebVital: productionMonitor.trackWebVital.bind(productionMonitor),
    trackPerformance: productionMonitor.trackPerformance.bind(productionMonitor),
    trackError: productionMonitor.trackError.bind(productionMonitor),
    healthCheck: productionMonitor.healthCheck.bind(productionMonitor)
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,