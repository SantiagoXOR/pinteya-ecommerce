0362a28f512e861f81d70d8e3aae6921
// ===================================
// PINTEYA E-COMMERCE - UTILITY HELPERS
// ===================================
/**
 * Formats a price in Argentine peso format
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get calculateDeliveryDate () {
        return calculateDeliveryDate;
    },
    get calculateDiscount () {
        return calculateDiscount;
    },
    get calculateShipping () {
        return calculateShipping;
    },
    get capitalizeWords () {
        return capitalizeWords;
    },
    get debounce () {
        return debounce;
    },
    get formatDNI () {
        return formatDNI;
    },
    get formatDate () {
        return formatDate;
    },
    get formatPhoneNumber () {
        return formatPhoneNumber;
    },
    get formatPrice () {
        return formatPrice;
    },
    get generateOrderReference () {
        return generateOrderReference;
    },
    get generateSlug () {
        return generateSlug;
    },
    get isNumeric () {
        return isNumeric;
    },
    get sanitizeInput () {
        return sanitizeInput;
    },
    get validateCartItem () {
        return validateCartItem;
    },
    get validateDNI () {
        return validateDNI;
    },
    get validateEmail () {
        return validateEmail;
    }
});
function formatPrice(price) {
    if (price === null || price === undefined || isNaN(price)) {
        return '$0';
    }
    const roundedPrice = Math.round(price);
    // Simple format without spaces for consistency
    const formatted = roundedPrice.toLocaleString('es-AR');
    return `$${formatted}`;
}
function calculateDiscount(originalPrice, discountedPrice) {
    // Handle null/undefined cases
    if (originalPrice === null || originalPrice === undefined || originalPrice <= 0) {
        return 0;
    }
    if (discountedPrice === null || discountedPrice === undefined) {
        return 0;
    }
    if (discountedPrice >= originalPrice) {
        return 0;
    }
    // Special case: if discounted price is 0, it's 100% discount
    if (discountedPrice === 0 && originalPrice > 0) {
        return 100;
    }
    const discount = (originalPrice - discountedPrice) / originalPrice * 100;
    return Math.round(discount);
}
function validateEmail(email) {
    if (!email || typeof email !== 'string') {
        return false;
    }
    // More strict email validation
    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9][a-zA-Z0-9.-]*[a-zA-Z0-9]\.[a-zA-Z]{2,}$/;
    // Additional checks
    if (email.includes('..') || email.startsWith('.') || email.endsWith('.')) {
        return false;
    }
    if (email.includes('@.') || email.includes('.@')) {
        return false;
    }
    return emailRegex.test(email);
}
function generateSlug(text) {
    if (!text) {
        return '';
    }
    return String(text).toLowerCase().trim().replace(/[áàäâ]/g, 'a').replace(/[éèëê]/g, 'e').replace(/[íìïî]/g, 'i').replace(/[óòöô]/g, 'o').replace(/[úùüû]/g, 'u').replace(/ñ/g, 'n').replace(/[^a-z0-9\s-]/g, '').replace(/\s+/g, '-').replace(/-+/g, '-').replace(/^-|-$/g, '');
}
function formatPhoneNumber(phone) {
    if (!phone) {
        return '';
    }
    // If already formatted, return as is
    if (phone.includes('(') && phone.includes(')') && phone.includes('-')) {
        return phone;
    }
    // Remove all non-numeric characters
    const cleaned = phone.replace(/\D/g, '');
    // Format based on length
    if (cleaned.length === 10) {
        return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6)}`;
    }
    if (cleaned.length === 11) {
        return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 7)}-${cleaned.slice(7)}`;
    }
    // Return original if doesn't match expected format
    return phone;
}
function calculateShipping(weight, location, orderTotal = 0, express = false) {
    // Free shipping threshold
    const freeShippingThreshold = 15000;
    if (orderTotal >= freeShippingThreshold) {
        return 0;
    }
    // Base rates by location
    const locationRates = {
        'CABA': 500,
        'Buenos Aires': 800,
        'Córdoba': 1200,
        'Santa Fe': 1100,
        'Mendoza': 1400
    };
    const baseRate = locationRates[location] || 1500;
    // Weight multiplier (every 5kg adds 50% to base rate)
    const weightMultiplier = 1 + Math.floor(weight / 5) * 0.5;
    // Express shipping doubles the cost
    const expressMultiplier = express ? 2 : 1;
    return Math.round(baseRate * weightMultiplier * expressMultiplier);
}
function validateCartItem(item) {
    if (!item || typeof item !== 'object') {
        return false;
    }
    const cartItem = item;
    // Required fields
    if (!cartItem.id || !cartItem.name || !cartItem.price || !cartItem.quantity) {
        return false;
    }
    // Validate types
    if (typeof cartItem.price !== 'number' || cartItem.price <= 0) {
        return false;
    }
    if (typeof cartItem.quantity !== 'number' || cartItem.quantity <= 0) {
        return false;
    }
    // Validate stock if provided
    if (cartItem.stock !== undefined && typeof cartItem.stock === 'number' && cartItem.quantity > cartItem.stock) {
        return false;
    }
    return true;
}
function sanitizeInput(input) {
    if (!input) {
        return '';
    }
    return String(input).replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, '').replace(/<[^>]*>/g, '').trim();
}
function debounce(func, wait) {
    let timeout;
    return (...args)=>{
        clearTimeout(timeout);
        timeout = setTimeout(()=>func(...args), wait);
    };
}
function formatDate(date) {
    const dateObj = typeof date === 'string' ? new Date(date) : date;
    return new Intl.DateTimeFormat('es-AR', {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
    }).format(dateObj);
}
function calculateDeliveryDate(location, express = false) {
    const now = new Date();
    let daysToAdd = 3 // Default delivery time
    ;
    // Location-based delivery times
    const deliveryTimes = {
        'CABA': 1,
        'Buenos Aires': 2,
        'Córdoba': 4,
        'Santa Fe': 3,
        'Mendoza': 5
    };
    daysToAdd = deliveryTimes[location] || 7;
    // Express shipping halves delivery time (minimum 1 day)
    if (express) {
        daysToAdd = Math.max(1, Math.floor(daysToAdd / 2));
    }
    const deliveryDate = new Date(now);
    deliveryDate.setDate(now.getDate() + daysToAdd);
    return deliveryDate;
}
function validateDNI(dni) {
    if (!dni) {
        return false;
    }
    // Remove dots and spaces
    const cleaned = dni.replace(/[.\s]/g, '');
    // Check if it's 7-8 digits
    return /^\d{7,8}$/.test(cleaned);
}
function formatDNI(dni) {
    if (!dni) {
        return '';
    }
    const cleaned = dni.replace(/[.\s]/g, '');
    if (cleaned.length === 8) {
        return `${cleaned.slice(0, 2)}.${cleaned.slice(2, 5)}.${cleaned.slice(5)}`;
    }
    if (cleaned.length === 7) {
        return `${cleaned.slice(0, 1)}.${cleaned.slice(1, 4)}.${cleaned.slice(4)}`;
    }
    return dni;
}
function generateOrderReference() {
    const timestamp = Date.now();
    const random = Math.random().toString(36).substring(2, 8);
    return `PINTEYA-${timestamp}-${random.toUpperCase()}`;
}
function isNumeric(str) {
    return /^\d+$/.test(str);
}
function capitalizeWords(str) {
    return str.replace(/\w\S*/g, (txt)=>txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase());
}

//# sourceMappingURL=data:application/json;base64,