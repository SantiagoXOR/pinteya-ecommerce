{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useCheckout.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useCallback, useEffect, useMemo } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '@/redux/store';\r\nimport { selectCartItems, selectTotalPrice, removeAllItemsFromCart } from '@/redux/features/cart-slice';\r\nimport { CheckoutFormData, CheckoutState, CreatePreferencePayload, PaymentPreferenceResponse } from '@/types/checkout';\r\nimport { ApiResponse } from '@/types/api';\r\nimport { useAuth } from './useAuth';\r\nimport { validateEmail, validatePhoneNumber, validateDNI } from '@/lib/utils/consolidated-utils';\r\n\r\nconst initialFormData: CheckoutFormData = {\r\n  billing: {\r\n    firstName: '',\r\n    lastName: '',\r\n    dni: '',\r\n    companyName: '',\r\n    country: 'Argentina',\r\n    streetAddress: '',\r\n    apartment: '',\r\n    city: '',\r\n    state: '',\r\n    zipCode: '',\r\n    phone: '',\r\n    email: '',\r\n    orderNotes: '',\r\n    observations: '',\r\n  },\r\n  shipping: {\r\n    differentAddress: false,\r\n  },\r\n  paymentMethod: 'mercadopago',\r\n  shippingMethod: 'free',\r\n  couponCode: '',\r\n};\r\n\r\nexport const useCheckout = () => {\r\n  const dispatch = useAppDispatch();\r\n  const cartItems = useAppSelector(selectCartItems);\r\n  const totalPrice = useAppSelector(selectTotalPrice);\r\n  const { user, isLoaded } = useAuth();\r\n\r\n  const [checkoutState, setCheckoutState] = useState<CheckoutState>({\r\n    formData: initialFormData,\r\n    isLoading: false,\r\n    errors: {},\r\n    step: 'form',\r\n    preferenceId: undefined,\r\n    initPoint: undefined,\r\n  });\r\n\r\n  // Estado para cupones\r\n  const [appliedCoupon, setAppliedCoupon] = useState<{\r\n    code: string;\r\n    discount: number;\r\n    type: 'percentage' | 'fixed';\r\n  } | null>(null);\r\n\r\n  // ===================================\r\n  // AUTO-COMPLETAR DATOS DEL USUARIO AUTENTICADO\r\n  // ===================================\r\n  useEffect(() => {\r\n    if (isLoaded && user) {\r\n      const userEmail = user.email || '';\r\n      const fullName = user.name || '';\r\n      const [firstName, ...lastNameParts] = fullName.split(' ');\r\n      const lastName = lastNameParts.join(' ');\r\n\r\n      // Solo actualizar si los datos han cambiado para evitar recursión\r\n      setCheckoutState(prev => {\r\n        const currentBilling = prev.formData.billing;\r\n        \r\n        // Verificar si realmente necesitamos actualizar\r\n        const shouldUpdateFirstName = !currentBilling.firstName && firstName;\r\n        const shouldUpdateLastName = !currentBilling.lastName && lastName;\r\n        const shouldUpdateEmail = !currentBilling.email && userEmail;\r\n        \r\n        if (!shouldUpdateFirstName && !shouldUpdateLastName && !shouldUpdateEmail) {\r\n          return prev;\r\n        }\r\n\r\n        return {\r\n          ...prev,\r\n          formData: {\r\n            ...prev.formData,\r\n            billing: {\r\n              ...currentBilling,\r\n              firstName: shouldUpdateFirstName ? firstName : currentBilling.firstName,\r\n              lastName: shouldUpdateLastName ? lastName : currentBilling.lastName,\r\n              email: shouldUpdateEmail ? userEmail : currentBilling.email,\r\n            },\r\n          },\r\n        };\r\n      });\r\n    }\r\n  }, [isLoaded, user?.email, user?.name]);\r\n\r\n  // ===================================\r\n  // FUNCIONES DE CÁLCULO\r\n  // ===================================\r\n  const calculateShippingCost = useCallback(() => {\r\n    const { shippingMethod } = checkoutState.formData;\r\n\r\n    switch (shippingMethod) {\r\n      case 'free':\r\n        return 0;\r\n      case 'standard':\r\n        return totalPrice > 50000 ? 0 : 5000; // Envío gratis por compras mayores a $50,000\r\n      case 'express':\r\n        return 8000;\r\n      default:\r\n        return 0;\r\n    }\r\n  }, [checkoutState.formData.shippingMethod, totalPrice]);\r\n\r\n  const calculateDiscount = useCallback(() => {\r\n    if (!appliedCoupon) {return 0;}\r\n\r\n    if (appliedCoupon.type === 'percentage') {\r\n      return Math.round((totalPrice * appliedCoupon.discount) / 100);\r\n    } else {\r\n      return appliedCoupon.discount;\r\n    }\r\n  }, [appliedCoupon, totalPrice]);\r\n\r\n  const calculateTotal = useCallback(() => {\r\n    const shipping = calculateShippingCost();\r\n    const discount = calculateDiscount();\r\n    const total = Math.max(0, totalPrice + shipping - discount);\r\n    console.log('🔍 calculateTotal:', { totalPrice, shipping, discount, total });\r\n    return total;\r\n  }, [totalPrice, calculateShippingCost, calculateDiscount]);\r\n\r\n  // Actualizar datos del formulario\r\n  const updateFormData = useCallback((updates: Partial<CheckoutFormData>) => {\r\n    setCheckoutState(prev => ({\r\n      ...prev,\r\n      formData: { ...prev.formData, ...updates },\r\n      errors: {}, // Limpiar errores al actualizar\r\n    }));\r\n  }, []);\r\n\r\n  // Actualizar datos de facturación\r\n  const updateBillingData = useCallback((billingData: Partial<CheckoutFormData['billing']>) => {\r\n    setCheckoutState(prev => ({\r\n      ...prev,\r\n      formData: {\r\n        ...prev.formData,\r\n        billing: { ...prev.formData.billing, ...billingData },\r\n      },\r\n      errors: {}, // Limpiar errores al actualizar\r\n    }));\r\n  }, []);\r\n\r\n  // Actualizar datos de envío\r\n  const updateShippingData = useCallback((shippingData: Partial<CheckoutFormData['shipping']>) => {\r\n    setCheckoutState(prev => ({\r\n      ...prev,\r\n      formData: {\r\n        ...prev.formData,\r\n        shipping: { ...prev.formData.shipping, ...shippingData },\r\n      },\r\n      errors: {}, // Limpiar errores al actualizar\r\n    }));\r\n  }, []);\r\n\r\n  // Aplicar cupón de descuento\r\n  const applyCoupon = useCallback(async (couponCode: string) => {\r\n    if (!couponCode.trim()) {\r\n      setCheckoutState(prev => ({\r\n        ...prev,\r\n        errors: { ...prev.errors, coupon: 'Ingresa un código de cupón' }\r\n      }));\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Simular validación de cupón (aquí iría la llamada a la API)\r\n      const validCoupons = {\r\n        'DESCUENTO10': { discount: 10, type: 'percentage' as const },\r\n        'ENVIOGRATIS': { discount: 5000, type: 'fixed' as const },\r\n        'BIENVENIDO': { discount: 15, type: 'percentage' as const },\r\n      };\r\n\r\n      const coupon = validCoupons[couponCode.toUpperCase() as keyof typeof validCoupons];\r\n\r\n      if (coupon) {\r\n        setAppliedCoupon({\r\n          code: couponCode.toUpperCase(),\r\n          ...coupon\r\n        });\r\n        setCheckoutState(prev => ({\r\n          ...prev,\r\n          formData: { ...prev.formData, couponCode: couponCode.toUpperCase() },\r\n          errors: { ...prev.errors, coupon: undefined }\r\n        }));\r\n      } else {\r\n        setCheckoutState(prev => ({\r\n          ...prev,\r\n          errors: { ...prev.errors, coupon: 'Código de cupón inválido' }\r\n        }));\r\n      }\r\n    } catch (error) {\r\n      setCheckoutState(prev => ({\r\n        ...prev,\r\n        errors: { ...prev.errors, coupon: 'Error validando el cupón' }\r\n      }));\r\n    }\r\n  }, []);\r\n\r\n  // ===================================\r\n  // FUNCIONES DE VALIDACIÓN\r\n  // ===================================\r\n\r\n  // Validar formulario completo\r\n  const validateForm = useCallback(() => {\r\n    const { billing, shipping } = checkoutState.formData;\r\n    const errors: Record<string, string> = {};\r\n\r\n    // Validaciones básicas\r\n    if (!billing.firstName?.trim()) {errors.firstName = 'Nombre es requerido';}\r\n    if (!billing.lastName?.trim()) {errors.lastName = 'Apellido es requerido';}\r\n    if (!billing.email?.trim()) {errors.email = 'Email es requerido';}\r\n    if (!billing.phone?.trim()) {errors.phone = 'Teléfono es requerido';}\r\n    if (!billing.streetAddress?.trim()) {errors.streetAddress = 'Dirección es requerida';}\r\n    if (!billing.city?.trim()) {errors.city = 'Ciudad es requerida';}\r\n    if (!billing.state?.trim()) {errors.state = 'Provincia es requerida';}\r\n    if (!billing.zipCode?.trim()) {errors.zipCode = 'Código postal es requerido';}\r\n\r\n    // Validaciones avanzadas\r\n    if (billing.email && !validateEmail(billing.email)) {\r\n      errors.email = 'Email inválido';\r\n    }\r\n\r\n    if (billing.phone && !validatePhoneNumber(billing.phone)) {\r\n      errors.phone = 'Teléfono inválido. Formato: +54 351 XXX XXXX';\r\n    }\r\n\r\n    if (billing.streetAddress && billing.streetAddress.length < 10) {\r\n      errors.streetAddress = 'La dirección debe tener al menos 10 caracteres';\r\n    }\r\n\r\n    // Validar código postal argentino (formato XXXX o AXXXX)\r\n    if (billing.zipCode && !/^[A-Z]?\\d{4}$/.test(billing.zipCode.toUpperCase())) {\r\n      errors.zipCode = 'Código postal inválido';\r\n    }\r\n\r\n    // Validar envío si es dirección diferente\r\n    if (shipping.differentAddress) {\r\n      if (!shipping.streetAddress?.trim()) {errors.shippingStreetAddress = 'Dirección de envío es requerida';}\r\n      if (!shipping.city?.trim()) {errors.shippingCity = 'Ciudad de envío es requerida';}\r\n      if (!shipping.state?.trim()) {errors.shippingState = 'Provincia de envío es requerida';}\r\n      if (!shipping.zipCode?.trim()) {errors.shippingZipCode = 'Código postal de envío es requerido';}\r\n\r\n      if (shipping.zipCode && !/^[A-Z]?\\d{4}$/.test(shipping.zipCode.toUpperCase())) {\r\n        errors.shippingZipCode = 'Código postal de envío inválido';\r\n      }\r\n    }\r\n\r\n    // Validar que hay items en el carrito\r\n    if (cartItems.length === 0) {\r\n      errors.cart = 'El carrito está vacío';\r\n    }\r\n\r\n    setCheckoutState(prev => ({ ...prev, errors }));\r\n    return Object.keys(errors).length === 0;\r\n  }, [cartItems.length]);\r\n\r\n  // Validar formulario express (solo campos esenciales)\r\n  const validateExpressForm = useCallback(() => {\r\n    const { billing } = checkoutState.formData;\r\n    const errors: Record<string, string> = {};\r\n\r\n    console.log('🔍 validateExpressForm - Datos del formulario:', {\r\n      firstName: billing.firstName,\r\n      lastName: billing.lastName,\r\n      dni: billing.dni,\r\n      email: billing.email,\r\n      phone: billing.phone,\r\n      streetAddress: billing.streetAddress,\r\n      paymentMethod: checkoutState.formData.paymentMethod,\r\n      cartItemsLength: cartItems.length,\r\n      currentStep: checkoutState.step // ✅ NUEVO: Agregar step actual\r\n    });\r\n\r\n    // Validaciones esenciales para checkout express\r\n    if (!billing.firstName?.trim()) {errors.firstName = 'Nombre es requerido';}\r\n    if (!billing.lastName?.trim()) {errors.lastName = 'Apellido es requerido';}\r\n    if (!billing.dni?.trim()) {errors.dni = 'DNI/CUIT es requerido';}\r\n    if (!billing.email?.trim()) {errors.email = 'Email es requerido';}\r\n    if (!billing.phone?.trim()) {errors.phone = 'Teléfono es requerido';}\r\n    if (!billing.streetAddress?.trim()) {errors.streetAddress = 'Dirección es requerida';}\r\n\r\n    // Validaciones avanzadas\r\n    if (billing.email && !validateEmail(billing.email)) {\r\n      errors.email = 'Email inválido';\r\n    }\r\n\r\n    if (billing.phone && !validatePhoneNumber(billing.phone)) {\r\n      errors.phone = 'Teléfono inválido. Formato: +54 351 XXX XXXX';\r\n    }\r\n\r\n    // Validación de DNI/CUIT argentino\r\n    if (billing.dni && !validateDNI(billing.dni)) {\r\n      errors.dni = 'DNI/CUIT inválido. Formato: 12345678 o 20-12345678-9';\r\n    }\r\n\r\n    // Validar método de pago\r\n    if (!checkoutState.formData.paymentMethod) {\r\n      errors.paymentMethod = 'Método de pago es requerido';\r\n    }\r\n\r\n    // ✅ NUEVO: Solo validar carrito si NO estamos en el step de pago\r\n    // Durante el step 'payment', el carrito ya se vació pero es normal\r\n    if (checkoutState.step !== 'payment' && cartItems.length === 0) {\r\n      errors.cart = 'El carrito está vacío';\r\n    }\r\n\r\n    console.log('🔍 validateExpressForm - Errores encontrados:', errors);\r\n    console.log('🔍 validateExpressForm - Formulario válido:', Object.keys(errors).length === 0);\r\n\r\n    setCheckoutState(prev => ({ ...prev, errors }));\r\n    return Object.keys(errors).length === 0;\r\n  }, [checkoutState.formData, checkoutState.step, cartItems.length]); // ✅ NUEVO: Agregar step a dependencias\r\n\r\n  // ===================================\r\n  // FUNCIONES DE PROCESAMIENTO\r\n  // ===================================\r\n\r\n  // Procesar checkout express\r\n  const processExpressCheckout = useCallback(async (): Promise<void> => {\r\n    if (!validateExpressForm()) {\r\n      return;\r\n    }\r\n\r\n    // Marcar que el checkout está en progreso\r\n    sessionStorage.setItem('checkout-in-progress', 'true');\r\n\r\n    setCheckoutState(prev => ({ ...prev, isLoading: true, step: 'processing' }));\r\n\r\n    try {\r\n      const { billing } = checkoutState.formData;\r\n      const shippingCost = calculateShippingCost();\r\n\r\n      // Sanitizar teléfono para el backend (solo números, formato argentino 10-11 dígitos)\r\n      let sanitizedPhone = billing.phone?.replace(/\\D/g, '') || '';\r\n\r\n      // Si empieza con 54 (código de Argentina), remover el código de país\r\n      if (sanitizedPhone.startsWith('54') && sanitizedPhone.length > 11) {\r\n        sanitizedPhone = sanitizedPhone.substring(2); // Remover \"54\"\r\n      }\r\n\r\n      // Si empieza con 9 (código de celular), mantenerlo para que sea 11 dígitos\r\n      // Si no empieza con 9, debería ser 10 dígitos (teléfono fijo)\r\n\r\n      console.log('🔍 processExpressCheckout - Teléfono original:', billing.phone);\r\n      console.log('🔍 processExpressCheckout - Teléfono sanitizado:', sanitizedPhone);\r\n      console.log('🔍 processExpressCheckout - Longitud del teléfono:', sanitizedPhone.length);\r\n\r\n      // Preparar datos para la API (Express Checkout - campos simplificados)\r\n      const payload: CreatePreferencePayload = {\r\n        items: cartItems.map((item: any) => ({\r\n          id: item.id.toString(),\r\n          name: item.title,\r\n          price: item.discountedPrice,\r\n          quantity: item.quantity,\r\n          image: item.imgs?.previews?.[0] || '',\r\n        })),\r\n        payer: {\r\n          name: billing.firstName || 'Cliente', // Valor por defecto para express checkout\r\n          surname: billing.lastName || 'Express', // Valor por defecto para express checkout\r\n          email: billing.email,\r\n          phone: sanitizedPhone, // Teléfono sanitizado (solo números)\r\n        },\r\n        shipping: shippingCost > 0 ? {\r\n          cost: shippingCost,\r\n          address: {\r\n            street_name: billing.streetAddress,\r\n            street_number: \"123\", // Número por defecto\r\n            zip_code: billing.zipCode || \"5000\", // Código postal por defecto para Córdoba\r\n            city_name: billing.city || \"Córdoba\",\r\n            state_name: billing.state || \"Córdoba\",\r\n          },\r\n        } : undefined,\r\n        external_reference: `express_checkout_${Date.now()}`,\r\n      };\r\n\r\n      console.log('🔍 processExpressCheckout - Payload enviado:', payload);\r\n\r\n      // Llamar a la API\r\n      const response = await fetch('/api/payments/create-preference', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      const result: ApiResponse<PaymentPreferenceResponse> = await response.json();\r\n\r\n      if (!result.success) {\r\n        throw new Error(result.error || 'Error procesando el pago');\r\n      }\r\n\r\n      // ✅ SOLUCIÓN FINAL: Redirección directa a MercadoPago\r\n      // Esto evita el problema de hooks con el Wallet Brick embebido\r\n      console.log('🔄 Redirigiendo directamente a MercadoPago:', result.data.init_point);\r\n\r\n      // Cambiar a estado de redirección inmediatamente\r\n      setCheckoutState(prev => ({\r\n        ...prev,\r\n        step: 'redirect',\r\n        preferenceId: result.data.preference_id,\r\n        initPoint: result.data.init_point,\r\n        isLoading: false\r\n      }));\r\n\r\n    } catch (error: unknown) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Error procesando el pago';\r\n      console.error('Error en express checkout:', error);\r\n      setCheckoutState(prev => ({\r\n        ...prev,\r\n        isLoading: false,\r\n        step: 'form',\r\n        errors: { general: errorMessage },\r\n      }));\r\n    }\r\n  }, [checkoutState.formData, cartItems, validateExpressForm, calculateShippingCost, dispatch]);\r\n\r\n  // Procesar checkout completo\r\n  const processCheckout = useCallback(async (): Promise<void> => {\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    // Marcar que el checkout está en progreso\r\n    sessionStorage.setItem('checkout-in-progress', 'true');\r\n\r\n    setCheckoutState(prev => ({ ...prev, isLoading: true, step: 'processing' }));\r\n\r\n    try {\r\n      const { billing, shipping } = checkoutState.formData;\r\n      const shippingCost = calculateShippingCost();\r\n\r\n      // Preparar datos para la API\r\n      const payload: CreatePreferencePayload = {\r\n        items: cartItems.map((item: any) => ({\r\n          id: item.id.toString(),\r\n          name: item.title,\r\n          price: item.discountedPrice,\r\n          quantity: item.quantity,\r\n          image: item.imgs?.previews?.[0] || '',\r\n        })),\r\n        payer: {\r\n          name: billing.firstName,\r\n          surname: billing.lastName,\r\n          email: billing.email,\r\n          phone: billing.phone,\r\n        },\r\n        shipping: shippingCost > 0 ? {\r\n          cost: shippingCost,\r\n          address: {\r\n            street_name: shipping.differentAddress ? shipping.streetAddress! : billing.streetAddress,\r\n            street_number: \"123\", // Número por defecto como string\r\n            zip_code: shipping.differentAddress ? shipping.zipCode! : billing.zipCode,\r\n            city_name: shipping.differentAddress ? shipping.city! : billing.city,\r\n            state_name: shipping.differentAddress ? shipping.state! : billing.state,\r\n          },\r\n        } : undefined,\r\n        external_reference: `checkout_${Date.now()}`,\r\n      };\r\n\r\n      // Llamar a la API\r\n      const response = await fetch('/api/payments/create-preference', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      const result: ApiResponse<PaymentPreferenceResponse> = await response.json();\r\n\r\n      if (!result.success) {\r\n        throw new Error(result.error || 'Error procesando el pago');\r\n      }\r\n\r\n      // Procesar resultado exitoso - mostrar paso de pago manual\r\n      // NOTA: No limpiar el carrito aquí, se limpiará cuando el pago se complete exitosamente\r\n\r\n      // ✅ CORREGIDO: Ir directamente a redirect para evitar error de hooks con MercadoPagoWallet\r\n      console.log('🔄 Redirigiendo directamente a MercadoPago:', result.data.init_point);\r\n      \r\n      setCheckoutState(prev => ({\r\n        ...prev,\r\n        step: 'redirect',\r\n        preferenceId: result.data.preference_id,\r\n        initPoint: result.data.init_point,\r\n        isLoading: false\r\n      }));\r\n\r\n    } catch (error: unknown) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Error procesando el pago';\r\n      console.error('Error en checkout:', error);\r\n      setCheckoutState(prev => ({\r\n        ...prev,\r\n        isLoading: false,\r\n        step: 'form',\r\n        errors: { general: errorMessage },\r\n      }));\r\n    }\r\n  }, [checkoutState.formData, cartItems, validateForm, calculateShippingCost, dispatch]);\r\n\r\n  // ===================================\r\n  // CALLBACKS PARA WALLET BRICK\r\n  // ===================================\r\n  const handleWalletReady = useCallback(() => {\r\n    console.log('Wallet Brick está listo');\r\n  }, []);\r\n\r\n  const handleWalletError = useCallback((error: any) => {\r\n    console.error('Error en Wallet Brick:', error);\r\n    setCheckoutState(prev => ({\r\n      ...prev,\r\n      errors: { payment: error.message || 'Error en el sistema de pagos' },\r\n      isLoading: false,\r\n    }));\r\n  }, []);\r\n\r\n  const handleWalletSubmit = useCallback((data: any) => {\r\n    console.log('💳 Wallet Submit - Pago enviado desde Wallet Brick:', data);\r\n    console.log('💳 Wallet Submit - Cambiando a step redirect');\r\n\r\n    // IMPORTANTE: NO limpiar el carrito aquí\r\n    // El carrito se limpiará solo cuando el pago sea confirmado como exitoso\r\n    setCheckoutState(prev => ({\r\n      ...prev,\r\n      step: 'redirect',\r\n      isLoading: false\r\n    }));\r\n  }, []);\r\n\r\n  // Memorizar valores calculados para evitar recursión infinita\r\n  const memoizedShippingCost = useMemo(() => {\r\n    try {\r\n      const cost = calculateShippingCost();\r\n      return typeof cost === 'number' && !isNaN(cost) ? cost : 0;\r\n    } catch (error) {\r\n      console.error('❌ Error calculating shippingCost:', error);\r\n      return 0;\r\n    }\r\n  }, [calculateShippingCost]);\r\n\r\n  const memoizedDiscount = useMemo(() => {\r\n    try {\r\n      const disc = calculateDiscount();\r\n      return typeof disc === 'number' && !isNaN(disc) ? disc : 0;\r\n    } catch (error) {\r\n      console.error('❌ Error calculating discount:', error);\r\n      return 0;\r\n    }\r\n  }, [calculateDiscount]);\r\n\r\n  const memoizedFinalTotal = useMemo(() => {\r\n    try {\r\n      const total = calculateTotal();\r\n      return typeof total === 'number' && !isNaN(total) ? total : 0;\r\n    } catch (error) {\r\n      console.error('❌ Error calculating finalTotal:', error);\r\n      return 0;\r\n    }\r\n  }, [calculateTotal]);\r\n\r\n  return {\r\n    // Estado\r\n    formData: checkoutState.formData,\r\n    isLoading: checkoutState.isLoading,\r\n    errors: checkoutState.errors,\r\n    step: checkoutState.step,\r\n\r\n    // Datos para Wallet Brick\r\n    preferenceId: checkoutState.preferenceId,\r\n    initPoint: checkoutState.initPoint,\r\n\r\n    // Datos calculados\r\n    cartItems,\r\n    totalPrice,\r\n    shippingCost: memoizedShippingCost,\r\n    discount: memoizedDiscount,\r\n    finalTotal: memoizedFinalTotal,\r\n\r\n    // Cupones\r\n    appliedCoupon,\r\n    applyCoupon,\r\n\r\n    // Acciones\r\n    updateFormData,\r\n    updateBillingData,\r\n    updateShippingData,\r\n    validateForm,\r\n    validateExpressForm,\r\n    processCheckout,\r\n    processExpressCheckout,\r\n\r\n    // Callbacks para Wallet Brick\r\n    handleWalletReady,\r\n    handleWalletError,\r\n    handleWalletSubmit,\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["useCheckout","initialFormData","billing","firstName","lastName","dni","companyName","country","streetAddress","apartment","city","state","zipCode","phone","email","orderNotes","observations","shipping","differentAddress","paymentMethod","shippingMethod","couponCode","dispatch","useAppDispatch","cartItems","useAppSelector","selectCartItems","totalPrice","selectTotalPrice","user","isLoaded","useAuth","checkoutState","setCheckoutState","useState","formData","isLoading","errors","step","preferenceId","undefined","initPoint","appliedCoupon","setAppliedCoupon","useEffect","userEmail","fullName","name","lastNameParts","split","join","prev","currentBilling","shouldUpdateFirstName","shouldUpdateLastName","shouldUpdateEmail","calculateShippingCost","useCallback","calculateDiscount","type","Math","round","discount","calculateTotal","total","max","console","log","updateFormData","updates","updateBillingData","billingData","updateShippingData","shippingData","applyCoupon","trim","coupon","validCoupons","toUpperCase","code","error","validateForm","validateEmail","validatePhoneNumber","length","test","shippingStreetAddress","shippingCity","shippingState","shippingZipCode","cart","Object","keys","validateExpressForm","cartItemsLength","currentStep","validateDNI","processExpressCheckout","sessionStorage","setItem","shippingCost","sanitizedPhone","replace","startsWith","substring","payload","items","map","item","id","toString","title","price","discountedPrice","quantity","image","imgs","previews","payer","surname","cost","address","street_name","street_number","zip_code","city_name","state_name","external_reference","Date","now","response","fetch","method","headers","body","JSON","stringify","result","json","success","Error","data","init_point","preference_id","errorMessage","message","general","processCheckout","handleWalletReady","handleWalletError","payment","handleWalletSubmit","memoizedShippingCost","useMemo","isNaN","memoizedDiscount","disc","memoizedFinalTotal","finalTotal"],"mappings":"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"}