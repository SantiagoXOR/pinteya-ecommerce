{"version":3,"names":["cov_bdf3v228n","actualCoverage","s","apiMonitoring","f","detectApiDiscrepancy","monitorApiCall","useApiMonitoring","ApiMonitoringService","constructor","events","renderingIssues","sessionId","generateSessionId","getInstance","instance","b","Date","now","Math","random","toString","substr","recordApiDiscrepancy","endpoint","expectedCount","actualCount","event","timestamp","toISOString","discrepancy","userAgent","navigator","push","console","error","expected","actual","lost","percentage","toFixed","sendCriticalAlert","length","slice","recordRenderingIssue","component","expectedItems","renderedItems","filterCriteria","errorDetails","issue","warn","rendered","filters","process","env","NODE_ENV","message","recommendation","getMonitoringStats","criticalEvents","filter","e","totalDiscrepancy","reduce","sum","abs","averageDiscrepancy","totalEvents","totalIssues","recentEvents","recentIssues","clearMonitoringData","log","exportMonitoringData","data","exportTimestamp","stats","JSON","stringify","recordDiscrepancy","bind","getStats","clearData","exportData","apiResponse","total","count","Array","isArray","target","propertyName","descriptor","method","value","args","startTime","result","apply","pagination","orders","items","duration"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\utils\\api-monitoring.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - API MONITORING SYSTEM\r\n// Sistema de monitoreo para detectar problemas de renderizado y API\r\n// ===================================\r\n\r\ninterface ApiMonitoringEvent {\r\n  timestamp: string;\r\n  endpoint: string;\r\n  expectedCount: number;\r\n  actualCount: number;\r\n  discrepancy: number;\r\n  userAgent: string;\r\n  sessionId: string;\r\n}\r\n\r\ninterface RenderingIssue {\r\n  timestamp: string;\r\n  component: string;\r\n  expectedItems: number;\r\n  renderedItems: number;\r\n  filterCriteria?: Record<string, unknown>;\r\n  errorDetails?: string;\r\n}\r\n\r\nclass ApiMonitoringService {\r\n  private static instance: ApiMonitoringService;\r\n  private events: ApiMonitoringEvent[] = [];\r\n  private renderingIssues: RenderingIssue[] = [];\r\n  private sessionId: string;\r\n\r\n  constructor() {\r\n    this.sessionId = this.generateSessionId();\r\n  }\r\n\r\n  static getInstance(): ApiMonitoringService {\r\n    if (!ApiMonitoringService.instance) {\r\n      ApiMonitoringService.instance = new ApiMonitoringService();\r\n    }\r\n    return ApiMonitoringService.instance;\r\n  }\r\n\r\n  private generateSessionId(): string {\r\n    return `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  /**\r\n   * Registra una discrepancia entre datos de API y renderizado\r\n   */\r\n  recordApiDiscrepancy(\r\n    endpoint: string,\r\n    expectedCount: number,\r\n    actualCount: number\r\n  ): void {\r\n    const event: ApiMonitoringEvent = {\r\n      timestamp: new Date().toISOString(),\r\n      endpoint,\r\n      expectedCount,\r\n      actualCount,\r\n      discrepancy: expectedCount - actualCount,\r\n      userAgent: navigator.userAgent,\r\n      sessionId: this.sessionId\r\n    };\r\n\r\n    this.events.push(event);\r\n    \r\n    // Log cr칤tico si hay discrepancia significativa\r\n    if (event.discrepancy > 0) {\r\n      console.error('游뚿 API Discrepancy Detected:', {\r\n        endpoint: event.endpoint,\r\n        expected: event.expectedCount,\r\n        actual: event.actualCount,\r\n        lost: event.discrepancy,\r\n        percentage: ((event.discrepancy / event.expectedCount) * 100).toFixed(2) + '%'\r\n      });\r\n      \r\n      // Enviar alerta si la discrepancia es mayor al 20%\r\n      if (event.discrepancy / event.expectedCount > 0.2) {\r\n        this.sendCriticalAlert(event);\r\n      }\r\n    }\r\n\r\n    // Mantener solo los 칰ltimos 100 eventos\r\n    if (this.events.length > 100) {\r\n      this.events = this.events.slice(-100);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registra un problema de renderizado\r\n   */\r\n  recordRenderingIssue(\r\n    component: string,\r\n    expectedItems: number,\r\n    renderedItems: number,\r\n    filterCriteria?: Record<string, unknown>,\r\n    errorDetails?: string\r\n  ): void {\r\n    const issue: RenderingIssue = {\r\n      timestamp: new Date().toISOString(),\r\n      component,\r\n      expectedItems,\r\n      renderedItems,\r\n      filterCriteria,\r\n      errorDetails\r\n    };\r\n\r\n    this.renderingIssues.push(issue);\r\n\r\n    console.warn('丘멆잺 Rendering Issue Detected:', {\r\n      component: issue.component,\r\n      expected: issue.expectedItems,\r\n      rendered: issue.renderedItems,\r\n      filters: issue.filterCriteria,\r\n      error: issue.errorDetails\r\n    });\r\n\r\n    // Mantener solo los 칰ltimos 50 problemas\r\n    if (this.renderingIssues.length > 50) {\r\n      this.renderingIssues = this.renderingIssues.slice(-50);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Env칤a una alerta cr칤tica (en producci칩n se enviar칤a a un servicio de monitoreo)\r\n   */\r\n  private sendCriticalAlert(event: ApiMonitoringEvent): void {\r\n    // En desarrollo, solo log\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.error('游뚿 CRITICAL ALERT:', {\r\n        message: 'Significant data loss detected',\r\n        event,\r\n        recommendation: 'Check API validation logic and data filtering'\r\n      });\r\n      \r\n    }\r\n\r\n    // En producci칩n, enviar a servicio de monitoreo\r\n    // fetch('/api/monitoring/alerts', {\r\n    //   method: 'POST',\r\n    //   headers: { 'Content-Type': 'application/json' },\r\n    //   body: JSON.stringify({ type: 'api_discrepancy', event })\r\n    // }).catch(console.error);\r\n  }\r\n\r\n  /**\r\n   * Obtiene estad칤sticas de monitoreo\r\n   */\r\n  getMonitoringStats(): {\r\n    totalEvents: number;\r\n    totalIssues: number;\r\n    criticalEvents: number;\r\n    averageDiscrepancy: number;\r\n    recentEvents: ApiMonitoringEvent[];\r\n    recentIssues: RenderingIssue[];\r\n  } {\r\n    const criticalEvents = this.events.filter(e => e.discrepancy > 0).length;\r\n    const totalDiscrepancy = this.events.reduce((sum, e) => sum + Math.abs(e.discrepancy), 0);\r\n    const averageDiscrepancy = this.events.length > 0 ? totalDiscrepancy / this.events.length : 0;\r\n\r\n    return {\r\n      totalEvents: this.events.length,\r\n      totalIssues: this.renderingIssues.length,\r\n      criticalEvents,\r\n      averageDiscrepancy,\r\n      recentEvents: this.events.slice(-10),\r\n      recentIssues: this.renderingIssues.slice(-10)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Limpia los datos de monitoreo\r\n   */\r\n  clearMonitoringData(): void {\r\n    this.events = [];\r\n    this.renderingIssues = [];\r\n    console.log('游빛 Monitoring data cleared');\r\n  }\r\n\r\n  /**\r\n   * Exporta datos de monitoreo para an치lisis\r\n   */\r\n  exportMonitoringData(): string {\r\n    const data = {\r\n      sessionId: this.sessionId,\r\n      exportTimestamp: new Date().toISOString(),\r\n      events: this.events,\r\n      renderingIssues: this.renderingIssues,\r\n      stats: this.getMonitoringStats()\r\n    };\r\n\r\n    return JSON.stringify(data, null, 2);\r\n  }\r\n}\r\n\r\n// Instancia singleton\r\nexport const apiMonitoring = ApiMonitoringService.getInstance();\r\n\r\n// Hook para usar el monitoreo en componentes React\r\nexport function useApiMonitoring() {\r\n  return {\r\n    recordDiscrepancy: apiMonitoring.recordApiDiscrepancy.bind(apiMonitoring),\r\n    recordRenderingIssue: apiMonitoring.recordRenderingIssue.bind(apiMonitoring),\r\n    getStats: apiMonitoring.getMonitoringStats.bind(apiMonitoring),\r\n    clearData: apiMonitoring.clearMonitoringData.bind(apiMonitoring),\r\n    exportData: apiMonitoring.exportMonitoringData.bind(apiMonitoring)\r\n  };\r\n}\r\n\r\n// Utilidad para detectar autom치ticamente discrepancias\r\nexport function detectApiDiscrepancy(\r\n  endpoint: string,\r\n  apiResponse: { total?: number; count?: number; length?: number },\r\n  renderedItems: unknown[]\r\n): void {\r\n  const expectedCount = apiResponse.total || apiResponse.count || apiResponse.length || 0;\r\n  const actualCount = Array.isArray(renderedItems) ? renderedItems.length : 0;\r\n  \r\n  if (expectedCount !== actualCount) {\r\n    apiMonitoring.recordApiDiscrepancy(endpoint, expectedCount, actualCount);\r\n  }\r\n}\r\n\r\n// Decorator para monitorear autom치ticamente funciones de API\r\nexport function monitorApiCall(endpoint: string) {\r\n  return function (target: unknown, propertyName: string, descriptor: PropertyDescriptor) {\r\n    const method = descriptor.value;\r\n    \r\n    descriptor.value = async function (...args: unknown[]) {\r\n      const startTime = Date.now();\r\n      \r\n      try {\r\n        const result = await method.apply(this, args);\r\n        \r\n        // Si el resultado tiene datos paginados, verificar discrepancias\r\n        if (result && typeof result === 'object') {\r\n          if ('data' in result && 'pagination' in result.data) {\r\n            const { data } = result;\r\n            detectApiDiscrepancy(endpoint, data.pagination, data.orders || data.items || []);\r\n          }\r\n        }\r\n        \r\n        return result;\r\n      } catch (error) {\r\n        const duration = Date.now() - startTime;\r\n        console.error(`API call failed for ${endpoint} after ${duration}ms:`, error);\r\n        throw error;\r\n      }\r\n    };\r\n    \r\n    return descriptor;\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}