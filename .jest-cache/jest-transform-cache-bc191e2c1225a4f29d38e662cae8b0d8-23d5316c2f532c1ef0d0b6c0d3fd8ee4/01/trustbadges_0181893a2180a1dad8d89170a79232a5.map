{"version":3,"names":["cov_2g4vprhgw5","actualCoverage","s","FastShippingBadge","f","InstantDeliveryBadge","LocalBusinessBadge","MoneyBackBadge","PaymentSecurityBadge","QualityBadge","SecurePurchaseBadge","SupportBadge","TrustBadge","TrustBadgeGroup","trustBadgeVariants","_classvarianceauthority","cva","variants","variant","security","guarantee","shipping","quality","support","payment","size","sm","md","lg","animation","none","pulse","bounce","glow","defaultVariants","_react","forwardRef","className","icon","children","props","ref","_jsxruntime","jsxs","_utils","cn","displayName","text","b","jsx","_lucidereact","ShieldCheck","days","Shield","hours","Truck","rating","safeRating","displayText","Star","Award","type","getIcon","Phone","MessageCircle","Clock","getText","provider","getContent","CreditCard","Lock","city","years","MapPin","Zap","badges","layout","layoutClasses","horizontal","vertical","grid","renderBadge","badge","commonProps","map"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\trust-badges.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport {\r\n  Shield,\r\n  ShieldCheck,\r\n  Truck,\r\n  Clock,\r\n  Star,\r\n  Award,\r\n  Lock,\r\n  CreditCard,\r\n  Phone,\r\n  MapPin,\r\n  Zap,\r\n  MessageCircle\r\n} from \"lucide-react\";\r\n\r\nconst trustBadgeVariants = cva(\r\n  \"inline-flex items-center gap-2 rounded-lg font-medium transition-all duration-200\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        security: \"bg-green-50 text-green-700 border border-green-200 hover:bg-green-100\",\r\n        guarantee: \"bg-blue-50 text-blue-700 border border-blue-200 hover:bg-blue-100\",\r\n        shipping: \"bg-orange-50 text-orange-700 border border-orange-200 hover:bg-orange-100\",\r\n        quality: \"bg-purple-50 text-purple-700 border border-purple-200 hover:bg-purple-100\",\r\n        support: \"bg-teal-50 text-teal-700 border border-teal-200 hover:bg-teal-100\",\r\n        payment: \"bg-primary/10 text-primary border border-primary/20 hover:bg-primary/20\",\r\n      },\r\n      size: {\r\n        sm: \"px-2 py-1 text-xs\",\r\n        md: \"px-3 py-1.5 text-sm\",\r\n        lg: \"px-4 py-2 text-base\",\r\n      },\r\n      animation: {\r\n        none: \"\",\r\n        pulse: \"animate-pulse\",\r\n        bounce: \"animate-bounce\",\r\n        glow: \"animate-pulse shadow-lg\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"security\",\r\n      size: \"md\",\r\n      animation: \"none\",\r\n    },\r\n  }\r\n);\r\n\r\nexport interface TrustBadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof trustBadgeVariants> {\r\n  icon?: React.ReactNode;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst TrustBadge = React.forwardRef<HTMLDivElement, TrustBadgeProps>(\r\n  ({ className, variant, size, animation, icon, children, ...props }, ref) => (\r\n    <div\r\n      ref={ref}\r\n      className={cn(trustBadgeVariants({ variant, size, animation }), className)}\r\n      {...props}\r\n    >\r\n      {icon}\r\n      {children}\r\n    </div>\r\n  )\r\n);\r\nTrustBadge.displayName = \"TrustBadge\";\r\n\r\n// Badges especializados para e-commerce de pinturería\r\n\r\ninterface SecurePurchaseBadgeProps extends Omit<TrustBadgeProps, 'children' | 'icon'> {\r\n  text?: string;\r\n}\r\n\r\nconst SecurePurchaseBadge = React.forwardRef<HTMLDivElement, SecurePurchaseBadgeProps>(\r\n  ({ text = \"Compra Protegida\", className, ...props }, ref) => (\r\n    <TrustBadge\r\n      ref={ref}\r\n      variant=\"security\"\r\n      icon={<ShieldCheck className=\"w-4 h-4\" />}\r\n      className={cn(\"\", className)}\r\n      {...props}\r\n    >\r\n      {text}\r\n    </TrustBadge>\r\n  )\r\n);\r\nSecurePurchaseBadge.displayName = \"SecurePurchaseBadge\";\r\n\r\ninterface MoneyBackBadgeProps extends Omit<TrustBadgeProps, 'children' | 'icon'> {\r\n  days?: number;\r\n}\r\n\r\nconst MoneyBackBadge = React.forwardRef<HTMLDivElement, MoneyBackBadgeProps>(\r\n  ({ days = 30, className, ...props }, ref) => (\r\n    <TrustBadge\r\n      ref={ref}\r\n      variant=\"guarantee\"\r\n      icon={<Shield className=\"w-4 h-4\" />}\r\n      className={cn(\"\", className)}\r\n      {...props}\r\n    >\r\n      {days} días de garantía\r\n    </TrustBadge>\r\n  )\r\n);\r\nMoneyBackBadge.displayName = \"MoneyBackBadge\";\r\n\r\ninterface FastShippingBadgeProps extends Omit<TrustBadgeProps, 'children' | 'icon'> {\r\n  hours?: number;\r\n  text?: string;\r\n}\r\n\r\nconst FastShippingBadge = React.forwardRef<HTMLDivElement, FastShippingBadgeProps>(\r\n  ({ hours = 24, text, className, ...props }, ref) => (\r\n    <TrustBadge\r\n      ref={ref}\r\n      variant=\"shipping\"\r\n      icon={<Truck className=\"w-4 h-4\" />}\r\n      className={cn(\"\", className)}\r\n      {...props}\r\n    >\r\n      {text || `Envío en ${hours}hs`}\r\n    </TrustBadge>\r\n  )\r\n);\r\nFastShippingBadge.displayName = \"FastShippingBadge\";\r\n\r\ninterface QualityBadgeProps extends Omit<TrustBadgeProps, 'children' | 'icon'> {\r\n  text?: string;\r\n  rating?: number;\r\n}\r\n\r\nconst QualityBadge = React.forwardRef<HTMLDivElement, QualityBadgeProps>(\r\n  ({ text = \"Calidad Premium\", rating, className, ...props }, ref) => {\r\n    // Validación segura del rating para prevenir errores de template literal\r\n    const safeRating = typeof rating === 'number' && rating > 0 ? rating : null;\r\n    const displayText = safeRating ? `${safeRating}★ ${text}` : text;\r\n\r\n    return (\r\n      <TrustBadge\r\n        ref={ref}\r\n        variant=\"quality\"\r\n        icon={safeRating ? <Star className=\"w-4 h-4 fill-current\" /> : <Award className=\"w-4 h-4\" />}\r\n        className={cn(\"\", className)}\r\n        {...props}\r\n      >\r\n        {displayText}\r\n      </TrustBadge>\r\n    );\r\n  }\r\n);\r\nQualityBadge.displayName = \"QualityBadge\";\r\n\r\ninterface SupportBadgeProps extends Omit<TrustBadgeProps, 'children' | 'icon'> {\r\n  type?: 'phone' | 'chat' | 'email';\r\n  hours?: string;\r\n}\r\n\r\nconst SupportBadge = React.forwardRef<HTMLDivElement, SupportBadgeProps>(\r\n  ({ type = 'phone', hours = '24/7', className, ...props }, ref) => {\r\n    const getIcon = () => {\r\n      switch (type) {\r\n        case 'phone': return <Phone className=\"w-4 h-4\" />;\r\n        case 'chat': return <MessageCircle className=\"w-4 h-4\" />;\r\n        case 'email': return <Clock className=\"w-4 h-4\" />;\r\n        default: return <Phone className=\"w-4 h-4\" />;\r\n      }\r\n    };\r\n\r\n    const getText = () => {\r\n      switch (type) {\r\n        case 'phone': return `Soporte ${hours}`;\r\n        case 'chat': return `Chat en vivo`;\r\n        case 'email': return `Respuesta ${hours}`;\r\n        default: return `Soporte ${hours}`;\r\n      }\r\n    };\r\n\r\n    return (\r\n      <TrustBadge\r\n        ref={ref}\r\n        variant=\"support\"\r\n        icon={getIcon()}\r\n        className={cn(\"\", className)}\r\n        {...props}\r\n      >\r\n        {getText()}\r\n      </TrustBadge>\r\n    );\r\n  }\r\n);\r\nSupportBadge.displayName = \"SupportBadge\";\r\n\r\ninterface PaymentSecurityBadgeProps extends Omit<TrustBadgeProps, 'children' | 'icon'> {\r\n  provider?: 'mercadopago' | 'ssl' | 'secure';\r\n}\r\n\r\nconst PaymentSecurityBadge = React.forwardRef<HTMLDivElement, PaymentSecurityBadgeProps>(\r\n  ({ provider = 'mercadopago', className, ...props }, ref) => {\r\n    const getContent = () => {\r\n      switch (provider) {\r\n        case 'mercadopago':\r\n          return {\r\n            icon: <CreditCard className=\"w-4 h-4\" />,\r\n            text: \"MercadoPago Seguro\"\r\n          };\r\n        case 'ssl':\r\n          return {\r\n            icon: <Lock className=\"w-4 h-4\" />,\r\n            text: \"SSL Certificado\"\r\n          };\r\n        case 'secure':\r\n          return {\r\n            icon: <ShieldCheck className=\"w-4 h-4\" />,\r\n            text: \"Pago 100% Seguro\"\r\n          };\r\n        default:\r\n          return {\r\n            icon: <CreditCard className=\"w-4 h-4\" />,\r\n            text: \"Pago Seguro\"\r\n          };\r\n      }\r\n    };\r\n\r\n    const { icon, text } = getContent();\r\n\r\n    return (\r\n      <TrustBadge\r\n        ref={ref}\r\n        variant=\"payment\"\r\n        icon={icon}\r\n        className={cn(\"\", className)}\r\n        {...props}\r\n      >\r\n        {text}\r\n      </TrustBadge>\r\n    );\r\n  }\r\n);\r\nPaymentSecurityBadge.displayName = \"PaymentSecurityBadge\";\r\n\r\ninterface LocalBusinessBadgeProps extends Omit<TrustBadgeProps, 'children' | 'icon'> {\r\n  city?: string;\r\n  years?: number;\r\n}\r\n\r\nconst LocalBusinessBadge = React.forwardRef<HTMLDivElement, LocalBusinessBadgeProps>(\r\n  ({ city = \"Córdoba\", years = 15, className, ...props }, ref) => (\r\n    <TrustBadge\r\n      ref={ref}\r\n      variant=\"quality\"\r\n      icon={<MapPin className=\"w-4 h-4\" />}\r\n      className={cn(\"\", className)}\r\n      {...props}\r\n    >\r\n      {years} años en {city}\r\n    </TrustBadge>\r\n  )\r\n);\r\nLocalBusinessBadge.displayName = \"LocalBusinessBadge\";\r\n\r\ninterface InstantDeliveryBadgeProps extends Omit<TrustBadgeProps, 'children' | 'icon'> {\r\n  text?: string;\r\n}\r\n\r\nconst InstantDeliveryBadge = React.forwardRef<HTMLDivElement, InstantDeliveryBadgeProps>(\r\n  ({ text = \"Entrega Inmediata\", className, ...props }, ref) => (\r\n    <TrustBadge\r\n      ref={ref}\r\n      variant=\"shipping\"\r\n      icon={<Zap className=\"w-4 h-4\" />}\r\n      animation=\"glow\"\r\n      className={cn(\"\", className)}\r\n      {...props}\r\n    >\r\n      {text}\r\n    </TrustBadge>\r\n  )\r\n);\r\nInstantDeliveryBadge.displayName = \"InstantDeliveryBadge\";\r\n\r\n// Componente combinado para mostrar múltiples badges de confianza\r\ninterface TrustBadgeGroupProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  badges?: ('secure' | 'guarantee' | 'shipping' | 'quality' | 'support' | 'payment' | 'local' | 'instant')[];\r\n  layout?: 'horizontal' | 'vertical' | 'grid';\r\n  size?: 'sm' | 'md' | 'lg';\r\n}\r\n\r\nconst TrustBadgeGroup = React.forwardRef<HTMLDivElement, TrustBadgeGroupProps>(\r\n  ({ \r\n    badges = ['secure', 'guarantee', 'shipping'], \r\n    layout = 'horizontal', \r\n    size = 'md',\r\n    className, \r\n    ...props \r\n  }, ref) => {\r\n    const layoutClasses = {\r\n      horizontal: \"flex flex-wrap gap-2\",\r\n      vertical: \"flex flex-col gap-2\",\r\n      grid: \"grid grid-cols-2 md:grid-cols-3 gap-2\"\r\n    };\r\n\r\n    const renderBadge = (badge: string) => {\r\n      const commonProps = { size };\r\n      \r\n      switch (badge) {\r\n        case 'secure':\r\n          return <SecurePurchaseBadge key={badge} {...commonProps} />;\r\n        case 'guarantee':\r\n          return <MoneyBackBadge key={badge} {...commonProps} />;\r\n        case 'shipping':\r\n          return <FastShippingBadge key={badge} {...commonProps} />;\r\n        case 'quality':\r\n          return <QualityBadge key={badge} {...commonProps} />;\r\n        case 'support':\r\n          return <SupportBadge key={badge} {...commonProps} />;\r\n        case 'payment':\r\n          return <PaymentSecurityBadge key={badge} {...commonProps} />;\r\n        case 'local':\r\n          return <LocalBusinessBadge key={badge} {...commonProps} />;\r\n        case 'instant':\r\n          return <InstantDeliveryBadge key={badge} {...commonProps} />;\r\n        default:\r\n          return null;\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(layoutClasses[layout], className)}\r\n        {...props}\r\n      >\r\n        {badges.map(renderBadge)}\r\n      </div>\r\n    );\r\n  }\r\n);\r\nTrustBadgeGroup.displayName = \"TrustBadgeGroup\";\r\n\r\nexport {\r\n  TrustBadge,\r\n  SecurePurchaseBadge,\r\n  MoneyBackBadge,\r\n  FastShippingBadge,\r\n  QualityBadge,\r\n  SupportBadge,\r\n  PaymentSecurityBadge,\r\n  LocalBusinessBadge,\r\n  InstantDeliveryBadge,\r\n  TrustBadgeGroup,\r\n  trustBadgeVariants,\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}