{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useProductFilters.ts"],"sourcesContent":["// ===================================\n// HOOK: useProductFilters - Optimizado para Performance\n// ===================================\n\nimport { useState, useEffect, useCallback, useMemo } from 'react'\nimport { useRouter, useSearchParams } from 'next/navigation'\nimport { ProductFilters } from '@/types/api'\n\n// ===================================\n// TIPOS\n// ===================================\n\nexport interface ProductFilterState {\n  categories: string[]\n  brands: string[]\n  priceMin?: number\n  priceMax?: number\n  search?: string\n  sortBy: string\n  page: number\n  limit: number\n}\n\nexport interface UseProductFiltersOptions {\n  syncWithUrl?: boolean\n  defaultSort?: string\n  defaultLimit?: number\n  debounceMs?: number\n  onFiltersChange?: (filters: ProductFilterState) => void\n}\n\nexport interface UseProductFiltersReturn {\n  filters: ProductFilterState\n  updateCategories: (categories: string[]) => void\n  updateBrands: (brands: string[]) => void\n  updatePriceRange: (min?: number, max?: number) => void\n  updateSearch: (search: string) => void\n  updateSort: (sort: string) => void\n  updatePage: (page: number) => void\n  updateLimit: (limit: number) => void\n  clearFilters: () => void\n  applyFilters: () => void\n  hasActiveFilters: boolean\n  totalActiveFilters: number\n  isLoading: boolean\n}\n\n// ===================================\n// CONSTANTES\n// ===================================\n\nconst DEFAULT_FILTERS: ProductFilterState = {\n  categories: [],\n  brands: [],\n  priceMin: undefined,\n  priceMax: undefined,\n  search: '',\n  sortBy: 'created_at',\n  page: 1,\n  limit: 12,\n}\n\n// ===================================\n// HOOK PRINCIPAL\n// ===================================\n\nexport function useProductFilters(options: UseProductFiltersOptions = {}): UseProductFiltersReturn {\n  const {\n    syncWithUrl = true,\n    defaultSort = 'created_at',\n    defaultLimit = 12,\n    debounceMs = 300,\n    onFiltersChange,\n  } = options\n\n  const router = useRouter()\n  const searchParams = useSearchParams()\n  const [isLoading, setIsLoading] = useState(false)\n\n  // Estado de filtros optimizado\n  const [filters, setFilters] = useState<ProductFilterState>(() => ({\n    ...DEFAULT_FILTERS,\n    sortBy: defaultSort,\n    limit: defaultLimit,\n  }))\n\n  // Inicializar y sincronizar filtros desde URL\n  useEffect(() => {\n    if (!syncWithUrl || !searchParams) {\n      return\n    }\n\n    const urlFilters: ProductFilterState = {\n      categories: searchParams.get('categories')?.split(',').filter(Boolean) || [],\n      brands: searchParams.get('brands')?.split(',').filter(Boolean) || [],\n      priceMin: searchParams.get('priceMin') ? Number(searchParams.get('priceMin')) : undefined,\n      priceMax: searchParams.get('priceMax') ? Number(searchParams.get('priceMax')) : undefined,\n      search: searchParams.get('search') || '',\n      sortBy: searchParams.get('sortBy') || defaultSort,\n      page: Number(searchParams.get('page')) || 1,\n      limit: Number(searchParams.get('limit')) || defaultLimit,\n    }\n\n    setFilters(urlFilters)\n  }, [searchParams, syncWithUrl, defaultSort, defaultLimit]) // Actualizar cuando cambien los searchParams\n\n  // Función optimizada para actualizar URL\n  const updateUrl = useCallback(\n    (newFilters: ProductFilterState) => {\n      if (!syncWithUrl) {\n        return\n      }\n\n      const params = new URLSearchParams()\n\n      // Solo agregar parámetros que tienen valores\n      if (newFilters.categories.length > 0) {\n        params.set('categories', newFilters.categories.join(','))\n      }\n      if (newFilters.brands.length > 0) {\n        params.set('brands', newFilters.brands.join(','))\n      }\n      if (newFilters.priceMin !== undefined) {\n        params.set('priceMin', newFilters.priceMin.toString())\n      }\n      if (newFilters.priceMax !== undefined) {\n        params.set('priceMax', newFilters.priceMax.toString())\n      }\n      if (newFilters.search && newFilters.search.trim()) {\n        params.set('search', newFilters.search.trim())\n      }\n      if (newFilters.sortBy !== defaultSort) {\n        params.set('sortBy', newFilters.sortBy)\n      }\n      if (newFilters.page > 1) {\n        params.set('page', newFilters.page.toString())\n      }\n      if (newFilters.limit !== defaultLimit) {\n        params.set('limit', newFilters.limit.toString())\n      }\n\n      const newQuery = params.toString()\n      const currentQuery = window.location.search.slice(1)\n\n      if (newQuery !== currentQuery) {\n        const newUrl = newQuery\n          ? `${window.location.pathname}?${newQuery}`\n          : window.location.pathname\n\n        router.push(newUrl, { scroll: false })\n      }\n    },\n    [syncWithUrl, router, defaultSort, defaultLimit]\n  )\n\n  // Función optimizada para actualizar filtros\n  const updateFilters = useCallback(\n    (updates: Partial<ProductFilterState>) => {\n      setFilters(prev => {\n        const newFilters = { ...prev, ...updates }\n\n        // Reset page cuando cambian otros filtros (excepto page)\n        if (!updates.hasOwnProperty('page') && Object.keys(updates).length > 0) {\n          newFilters.page = 1\n        }\n\n        // Actualizar URL de forma asíncrona\n        setTimeout(() => updateUrl(newFilters), 0)\n\n        // Callback opcional\n        onFiltersChange?.(newFilters)\n\n        return newFilters\n      })\n    },\n    [updateUrl, onFiltersChange]\n  )\n\n  // Handlers memoizados para evitar re-renders\n  const updateCategories = useCallback(\n    (categories: string[]) => {\n      updateFilters({ categories })\n    },\n    [updateFilters]\n  )\n\n  const updateBrands = useCallback(\n    (brands: string[]) => {\n      updateFilters({ brands })\n    },\n    [updateFilters]\n  )\n\n  const updatePriceRange = useCallback(\n    (priceMin?: number, priceMax?: number) => {\n      updateFilters({ priceMin, priceMax })\n    },\n    [updateFilters]\n  )\n\n  const updateSearch = useCallback(\n    (search: string) => {\n      updateFilters({ search })\n    },\n    [updateFilters]\n  )\n\n  const updateSort = useCallback(\n    (sortBy: string) => {\n      updateFilters({ sortBy })\n    },\n    [updateFilters]\n  )\n\n  const updatePage = useCallback(\n    (page: number) => {\n      updateFilters({ page })\n    },\n    [updateFilters]\n  )\n\n  const updateLimit = useCallback(\n    (limit: number) => {\n      updateFilters({ limit })\n    },\n    [updateFilters]\n  )\n\n  const clearFilters = useCallback(() => {\n    const clearedFilters = {\n      ...DEFAULT_FILTERS,\n      sortBy: defaultSort,\n      limit: defaultLimit,\n    }\n    setFilters(clearedFilters)\n    updateUrl(clearedFilters)\n  }, [defaultSort, defaultLimit, updateUrl])\n\n  const applyFilters = useCallback(() => {\n    // Forzar actualización de URL\n    updateUrl(filters)\n    onFiltersChange?.(filters)\n  }, [filters, updateUrl, onFiltersChange])\n\n  // Computed values memoizados\n  const hasActiveFilters = useMemo(() => {\n    return (\n      filters.categories.length > 0 ||\n      filters.brands.length > 0 ||\n      filters.priceMin !== undefined ||\n      filters.priceMax !== undefined ||\n      (filters.search && filters.search.trim() !== '') ||\n      filters.sortBy !== defaultSort ||\n      filters.page > 1\n    )\n  }, [filters, defaultSort])\n\n  const totalActiveFilters = useMemo(() => {\n    let count = 0\n    count += filters.categories.length\n    count += filters.brands.length\n    if (filters.priceMin !== undefined || filters.priceMax !== undefined) {\n      count += 1\n    }\n    if (filters.search && filters.search.trim() !== '') {\n      count += 1\n    }\n    return count\n  }, [filters])\n\n  return {\n    filters,\n    updateCategories,\n    updateBrands,\n    updatePriceRange,\n    updateSearch,\n    updateSort,\n    updatePage,\n    updateLimit,\n    clearFilters,\n    applyFilters,\n    hasActiveFilters,\n    totalActiveFilters,\n    isLoading,\n  }\n}\n"],"names":["useProductFilters","DEFAULT_FILTERS","categories","brands","priceMin","undefined","priceMax","search","sortBy","page","limit","options","syncWithUrl","defaultSort","defaultLimit","debounceMs","onFiltersChange","router","useRouter","searchParams","useSearchParams","isLoading","setIsLoading","useState","filters","setFilters","useEffect","urlFilters","get","split","filter","Boolean","Number","updateUrl","useCallback","newFilters","params","URLSearchParams","length","set","join","toString","trim","newQuery","currentQuery","window","location","slice","newUrl","pathname","push","scroll","updateFilters","updates","prev","hasOwnProperty","Object","keys","setTimeout","updateCategories","updateBrands","updatePriceRange","updateSearch","updateSort","updatePage","updateLimit","clearFilters","clearedFilters","applyFilters","hasActiveFilters","useMemo","totalActiveFilters","count"],"mappings":"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"}