{"version":3,"names":["cov_w09035bo3","actualCoverage","s","default","f","_default","getConfig","getMonitoringConfig","logConfig","validateConfig","defaultConfig","enabled","environment","b","process","env","NODE_ENV","version","npm_package_version","metrics","collectInterval","retentionPeriod","batchSize","enableWebVitals","enableApiMetrics","enableErrorTracking","alerts","thresholds","responseTime","errorRate","memoryUsage","cpuUsage","channels","console","webhook","MONITORING_WEBHOOK_URL","email","MONITORING_EMAIL_ALERTS","split","healthCheck","interval","timeout","endpoints","api","database","memory","performance","storage","type","MONITORING_STORAGE_TYPE","maxEntries","compression","reporting","includeDetails","exportFormats","environmentConfigs","development","staging","undefined","production","envConfig","config","configInstance","errors","push","log","metricsInterval","alertsEnabled","storageType","length","warn"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\config\\monitoring-config.ts"],"sourcesContent":["// ===================================\r\n// MONITORING CONFIGURATION\r\n// Configuraci√≥n centralizada para el sistema de monitoring\r\n// ===================================\r\n\r\nexport interface MonitoringConfig {\r\n  // Configuraci√≥n general\r\n  enabled: boolean;\r\n  environment: 'development' | 'production' | 'staging';\r\n  version: string;\r\n  \r\n  // Configuraci√≥n de m√©tricas\r\n  metrics: {\r\n    collectInterval: number; // ms\r\n    retentionPeriod: number; // ms\r\n    batchSize: number;\r\n    enableWebVitals: boolean;\r\n    enableApiMetrics: boolean;\r\n    enableErrorTracking: boolean;\r\n  };\r\n  \r\n  // Configuraci√≥n de alertas\r\n  alerts: {\r\n    enabled: boolean;\r\n    thresholds: {\r\n      responseTime: number; // ms\r\n      errorRate: number; // percentage (0-1)\r\n      memoryUsage: number; // MB\r\n      cpuUsage: number; // percentage (0-1)\r\n    };\r\n    channels: {\r\n      console: boolean;\r\n      webhook?: string;\r\n      email?: string[];\r\n    };\r\n  };\r\n  \r\n  // Configuraci√≥n de health checks\r\n  healthCheck: {\r\n    enabled: boolean;\r\n    interval: number; // ms\r\n    timeout: number; // ms\r\n    endpoints: {\r\n      api: boolean;\r\n      database: boolean;\r\n      memory: boolean;\r\n      performance: boolean;\r\n    };\r\n  };\r\n  \r\n  // Configuraci√≥n de storage\r\n  storage: {\r\n    type: 'memory' | 'redis' | 'database';\r\n    maxEntries: number;\r\n    compression: boolean;\r\n  };\r\n  \r\n  // Configuraci√≥n de reporting\r\n  reporting: {\r\n    enabled: boolean;\r\n    interval: number; // ms\r\n    includeDetails: boolean;\r\n    exportFormats: ('json' | 'csv' | 'pdf')[];\r\n  };\r\n}\r\n\r\n// Configuraci√≥n por defecto\r\nconst defaultConfig: MonitoringConfig = {\r\n  enabled: true,\r\n  environment: (process.env.NODE_ENV as any) || 'development',\r\n  version: process.env.npm_package_version || '1.0.0',\r\n  \r\n  metrics: {\r\n    collectInterval: 5000, // 5 segundos\r\n    retentionPeriod: 24 * 60 * 60 * 1000, // 24 horas\r\n    batchSize: 100,\r\n    enableWebVitals: true,\r\n    enableApiMetrics: true,\r\n    enableErrorTracking: true,\r\n  },\r\n  \r\n  alerts: {\r\n    enabled: process.env.NODE_ENV === 'production',\r\n    thresholds: {\r\n      responseTime: 2000, // 2 segundos\r\n      errorRate: 0.05, // 5%\r\n      memoryUsage: 512, // 512 MB\r\n      cpuUsage: 0.8, // 80%\r\n    },\r\n    channels: {\r\n      console: true,\r\n      webhook: process.env.MONITORING_WEBHOOK_URL,\r\n      email: process.env.MONITORING_EMAIL_ALERTS?.split(','),\r\n    },\r\n  },\r\n  \r\n  healthCheck: {\r\n    enabled: true,\r\n    interval: 30000, // 30 segundos\r\n    timeout: 5000, // 5 segundos\r\n    endpoints: {\r\n      api: true,\r\n      database: true,\r\n      memory: true,\r\n      performance: true,\r\n    },\r\n  },\r\n  \r\n  storage: {\r\n    type: process.env.MONITORING_STORAGE_TYPE as any || 'memory',\r\n    maxEntries: 10000,\r\n    compression: process.env.NODE_ENV === 'production',\r\n  },\r\n  \r\n  reporting: {\r\n    enabled: true,\r\n    interval: 60000, // 1 minuto\r\n    includeDetails: process.env.NODE_ENV !== 'production',\r\n    exportFormats: ['json'],\r\n  },\r\n};\r\n\r\n// Configuraciones espec√≠ficas por entorno\r\nconst environmentConfigs: Record<string, Partial<MonitoringConfig>> = {\r\n  development: {\r\n    metrics: {\r\n      collectInterval: 10000, // Menos frecuente en desarrollo\r\n      retentionPeriod: 60 * 60 * 1000, // 1 hora\r\n    },\r\n    alerts: {\r\n      enabled: false, // Sin alertas en desarrollo\r\n    },\r\n    storage: {\r\n      maxEntries: 1000, // Menos entradas en desarrollo\r\n    },\r\n  },\r\n  \r\n  staging: {\r\n    metrics: {\r\n      collectInterval: 5000,\r\n      retentionPeriod: 12 * 60 * 60 * 1000, // 12 horas\r\n    },\r\n    alerts: {\r\n      enabled: true,\r\n      channels: {\r\n        console: true,\r\n        webhook: undefined, // Sin webhook en staging\r\n      },\r\n    },\r\n    storage: {\r\n      maxEntries: 5000,\r\n    },\r\n  },\r\n  \r\n  production: {\r\n    metrics: {\r\n      collectInterval: 3000, // M√°s frecuente en producci√≥n\r\n      retentionPeriod: 7 * 24 * 60 * 60 * 1000, // 7 d√≠as\r\n    },\r\n    alerts: {\r\n      enabled: true,\r\n      thresholds: {\r\n        responseTime: 1500, // M√°s estricto en producci√≥n\r\n        errorRate: 0.02, // 2%\r\n        memoryUsage: 1024, // 1 GB\r\n        cpuUsage: 0.7, // 70%\r\n      },\r\n    },\r\n    storage: {\r\n      type: 'redis', // Redis en producci√≥n\r\n      maxEntries: 50000,\r\n      compression: true,\r\n    },\r\n    reporting: {\r\n      interval: 30000, // M√°s frecuente en producci√≥n\r\n      includeDetails: false, // Sin detalles en producci√≥n por performance\r\n      exportFormats: ['json', 'csv'],\r\n    },\r\n  },\r\n};\r\n\r\n// Funci√≥n para obtener la configuraci√≥n final\r\nexport function getMonitoringConfig(): MonitoringConfig {\r\n  const environment = process.env.NODE_ENV || 'development';\r\n  const envConfig = environmentConfigs[environment] || {};\r\n  \r\n  // Merge deep de configuraciones\r\n  const config = {\r\n    ...defaultConfig,\r\n    ...envConfig,\r\n    metrics: {\r\n      ...defaultConfig.metrics,\r\n      ...envConfig.metrics,\r\n    },\r\n    alerts: {\r\n      ...defaultConfig.alerts,\r\n      ...envConfig.alerts,\r\n      thresholds: {\r\n        ...defaultConfig.alerts.thresholds,\r\n        ...envConfig.alerts?.thresholds,\r\n      },\r\n      channels: {\r\n        ...defaultConfig.alerts.channels,\r\n        ...envConfig.alerts?.channels,\r\n      },\r\n    },\r\n    healthCheck: {\r\n      ...defaultConfig.healthCheck,\r\n      ...envConfig.healthCheck,\r\n      endpoints: {\r\n        ...defaultConfig.healthCheck.endpoints,\r\n        ...envConfig.healthCheck?.endpoints,\r\n      },\r\n    },\r\n    storage: {\r\n      ...defaultConfig.storage,\r\n      ...envConfig.storage,\r\n    },\r\n    reporting: {\r\n      ...defaultConfig.reporting,\r\n      ...envConfig.reporting,\r\n    },\r\n  };\r\n  \r\n  return config;\r\n}\r\n\r\n// Configuraci√≥n singleton\r\nlet configInstance: MonitoringConfig | null = null;\r\n\r\nexport function getConfig(): MonitoringConfig {\r\n  if (!configInstance) {\r\n    configInstance = getMonitoringConfig();\r\n  }\r\n  return configInstance;\r\n}\r\n\r\n// Funci√≥n para validar la configuraci√≥n\r\nexport function validateConfig(config: MonitoringConfig): string[] {\r\n  const errors: string[] = [];\r\n  \r\n  if (config.metrics.collectInterval < 1000) {\r\n    errors.push('metrics.collectInterval debe ser al menos 1000ms');\r\n  }\r\n  \r\n  if (config.metrics.retentionPeriod < 60000) {\r\n    errors.push('metrics.retentionPeriod debe ser al menos 60000ms (1 minuto)');\r\n  }\r\n  \r\n  if (config.alerts.thresholds.responseTime < 100) {\r\n    errors.push('alerts.thresholds.responseTime debe ser al menos 100ms');\r\n  }\r\n  \r\n  if (config.alerts.thresholds.errorRate < 0 || config.alerts.thresholds.errorRate > 1) {\r\n    errors.push('alerts.thresholds.errorRate debe estar entre 0 y 1');\r\n  }\r\n  \r\n  if (config.storage.maxEntries < 100) {\r\n    errors.push('storage.maxEntries debe ser al menos 100');\r\n  }\r\n  \r\n  return errors;\r\n}\r\n\r\n// Funci√≥n para logging de configuraci√≥n\r\nexport function logConfig(): void {\r\n  const config = getConfig();\r\n  const errors = validateConfig(config);\r\n  \r\n  console.log('üîß Monitoring Configuration:', {\r\n    environment: config.environment,\r\n    version: config.version,\r\n    enabled: config.enabled,\r\n    metricsInterval: config.metrics.collectInterval,\r\n    alertsEnabled: config.alerts.enabled,\r\n    storageType: config.storage.type,\r\n  });\r\n  \r\n  if (errors.length > 0) {\r\n    console.warn('‚ö†Ô∏è Configuration warnings:', errors);\r\n  } else {\r\n    console.log('‚úÖ Configuration is valid');\r\n  }\r\n}\r\n\r\n// Exportar configuraci√≥n por defecto\r\nexport default getConfig;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA0RA;IAAAA,aAAA,YAAAA,CAAA;MAAA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","ignoreList":[]}