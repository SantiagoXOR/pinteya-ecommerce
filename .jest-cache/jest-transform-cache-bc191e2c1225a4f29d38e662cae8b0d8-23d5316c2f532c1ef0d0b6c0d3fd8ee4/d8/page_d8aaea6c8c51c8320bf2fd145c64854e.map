{"version":3,"names":["CacheDashboard","cov_d96n3vstp","f","data","setData","s","_react","useState","loading","setLoading","refreshing","setRefreshing","selectedPeriod","setSelectedPeriod","loadDashboardData","overview","strategies","layers","alerts","trends","topKeys","warmupTasks","Promise","all","fetch","then","r","json","catch","mockOverview","mockStrategies","mockLayers","mockAlerts","mockTrends","mockTopKeys","mockWarmupTasks","error","console","useEffect","interval","setInterval","clearInterval","handleClearCache","layer","endpoint","b","method","handleWarmupCache","strategy","handleExportReport","response","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","Date","toISOString","split","body","appendChild","click","revokeObjectURL","removeChild","getSeverityColor","severity","getHealthColor","status","formatNumber","num","toFixed","toString","formatPercentage","_jsxruntime","jsx","className","jsxs","_lucidereact","RefreshCw","_alert","Alert","AlertTriangle","AlertDescription","_button","Button","variant","size","onClick","disabled","Download","_card","Card","CardHeader","CardTitle","Activity","CardContent","avgHitRate","_progress","Progress","value","Clock","avgResponseTime","Database","totalKeys","totalLayers","healthyLayers","activeAlerts","filter","resolved","length","slice","map","alert","_badge","Badge","type","message","timestamp","toLocaleTimeString","id","_tabs","Tabs","defaultValue","TabsList","TabsTrigger","TabsContent","CardDescription","hitRate","totalRequests","successRate","healthStatus","avgLatency","entriesCount","TrendingUp","hitRateTrend","responseTrend","volumeTrend","errorTrend","BarChart3","key","index","hits","misses","Zap","task","name","successCount","errorCount","lastRun","toLocaleString","nextRun","now","Settings","onChange","e","target"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\admin\\cache-dashboard\\page.tsx"],"sourcesContent":["'use client';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - CACHE DASHBOARD\r\n// ===================================\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { \r\n  Activity, \r\n  Database, \r\n  TrendingUp, \r\n  AlertTriangle, \r\n  RefreshCw, \r\n  Download,\r\n  Zap,\r\n  Clock,\r\n  BarChart3,\r\n  Settings\r\n} from 'lucide-react';\r\n\r\n/**\r\n * Tipos para el dashboard\r\n */\r\ninterface CacheDashboardData {\r\n  overview: {\r\n    totalKeys: number;\r\n    avgHitRate: number;\r\n    avgResponseTime: number;\r\n    activeAlerts: number;\r\n    healthyLayers: number;\r\n    totalLayers: number;\r\n  };\r\n  strategies: Array<{\r\n    strategy: string;\r\n    hitRate: number;\r\n    avgResponseTime: number;\r\n    totalRequests: number;\r\n    successRate: number;\r\n  }>;\r\n  layers: Array<{\r\n    layer: string;\r\n    hitRate: number;\r\n    avgLatency: number;\r\n    totalRequests: number;\r\n    healthStatus: 'healthy' | 'degraded' | 'unhealthy';\r\n    entriesCount: number;\r\n  }>;\r\n  alerts: Array<{\r\n    id: string;\r\n    type: string;\r\n    severity: 'low' | 'medium' | 'high' | 'critical';\r\n    message: string;\r\n    timestamp: number;\r\n    resolved: boolean;\r\n  }>;\r\n  trends: {\r\n    hitRateTrend: number;\r\n    responseTrend: number;\r\n    volumeTrend: number;\r\n    errorTrend: number;\r\n  };\r\n  topKeys: Array<{\r\n    key: string;\r\n    hits: number;\r\n    misses: number;\r\n    hitRate: number;\r\n  }>;\r\n  warmupTasks: Array<{\r\n    id: string;\r\n    name: string;\r\n    status: 'running' | 'completed' | 'failed' | 'scheduled';\r\n    lastRun: number;\r\n    nextRun: number;\r\n    successCount: number;\r\n    errorCount: number;\r\n  }>;\r\n}\r\n\r\n/**\r\n * Dashboard de Cache Administrativo\r\n */\r\nexport default function CacheDashboard() {\r\n  const [data, setData] = useState<CacheDashboardData | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [selectedPeriod, setSelectedPeriod] = useState<'hour' | 'day' | 'week'>('day');\r\n\r\n  /**\r\n   * Carga datos del dashboard\r\n   */\r\n  const loadDashboardData = async () => {\r\n    try {\r\n      setRefreshing(true);\r\n      \r\n      // Simular llamadas a APIs (en implementación real, estas serían llamadas reales)\r\n      const [overview, strategies, layers, alerts, trends, topKeys, warmupTasks] = await Promise.all([\r\n        fetch('/api/cache/overview').then(r => r.json()).catch(() => mockOverview),\r\n        fetch('/api/cache/strategies').then(r => r.json()).catch(() => mockStrategies),\r\n        fetch('/api/cache/layers').then(r => r.json()).catch(() => mockLayers),\r\n        fetch('/api/cache/alerts').then(r => r.json()).catch(() => mockAlerts),\r\n        fetch(`/api/cache/trends?period=${selectedPeriod}`).then(r => r.json()).catch(() => mockTrends),\r\n        fetch('/api/cache/top-keys').then(r => r.json()).catch(() => mockTopKeys),\r\n        fetch('/api/cache/warmup-tasks').then(r => r.json()).catch(() => mockWarmupTasks)\r\n      ]);\r\n\r\n      setData({\r\n        overview,\r\n        strategies,\r\n        layers,\r\n        alerts,\r\n        trends,\r\n        topKeys,\r\n        warmupTasks\r\n      });\r\n    } catch (error) {\r\n      console.error('Error cargando datos del dashboard:', error);\r\n    } finally {\r\n      setLoading(false);\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Efecto para cargar datos iniciales\r\n   */\r\n  useEffect(() => {\r\n    loadDashboardData();\r\n    \r\n    // Actualizar cada 30 segundos\r\n    const interval = setInterval(loadDashboardData, 30000);\r\n    return () => clearInterval(interval);\r\n  }, [selectedPeriod]);\r\n\r\n  /**\r\n   * Maneja limpieza de cache\r\n   */\r\n  const handleClearCache = async (layer?: string) => {\r\n    try {\r\n      const endpoint = layer ? `/api/cache/clear?layer=${layer}` : '/api/cache/clear';\r\n      await fetch(endpoint, { method: 'POST' });\r\n      await loadDashboardData();\r\n    } catch (error) {\r\n      console.error('Error limpiando cache:', error);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Maneja precalentamiento de cache\r\n   */\r\n  const handleWarmupCache = async (strategy?: string) => {\r\n    try {\r\n      const endpoint = strategy ? `/api/cache/warmup?strategy=${strategy}` : '/api/cache/warmup';\r\n      await fetch(endpoint, { method: 'POST' });\r\n      await loadDashboardData();\r\n    } catch (error) {\r\n      console.error('Error precalentando cache:', error);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Exporta reporte\r\n   */\r\n  const handleExportReport = async () => {\r\n    try {\r\n      const response = await fetch(`/api/cache/report?period=${selectedPeriod}`);\r\n      const blob = await response.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = `cache-report-${selectedPeriod}-${new Date().toISOString().split('T')[0]}.json`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n      document.body.removeChild(a);\r\n    } catch (error) {\r\n      console.error('Error exportando reporte:', error);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Obtiene color de badge según severidad\r\n   */\r\n  const getSeverityColor = (severity: string) => {\r\n    switch (severity) {\r\n      case 'critical': return 'destructive';\r\n      case 'high': return 'destructive';\r\n      case 'medium': return 'default';\r\n      case 'low': return 'secondary';\r\n      default: return 'secondary';\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Obtiene color de estado de salud\r\n   */\r\n  const getHealthColor = (status: string) => {\r\n    switch (status) {\r\n      case 'healthy': return 'text-green-600';\r\n      case 'degraded': return 'text-yellow-600';\r\n      case 'unhealthy': return 'text-red-600';\r\n      default: return 'text-gray-600';\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Formatea números grandes\r\n   */\r\n  const formatNumber = (num: number): string => {\r\n    if (num >= 1000000) {return `${(num / 1000000).toFixed(1)}M`;}\r\n    if (num >= 1000) {return `${(num / 1000).toFixed(1)}K`;}\r\n    return num.toString();\r\n  };\r\n\r\n  /**\r\n   * Formatea porcentajes\r\n   */\r\n  const formatPercentage = (num: number): string => {\r\n    return `${(num * 100).toFixed(1)}%`;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"text-center\">\r\n          <RefreshCw className=\"h-8 w-8 animate-spin mx-auto mb-4\" />\r\n          <p>Cargando dashboard de cache...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!data) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <Alert>\r\n          <AlertTriangle className=\"h-4 w-4\" />\r\n          <AlertDescription>\r\n            Error cargando datos del dashboard. Por favor, intenta nuevamente.\r\n          </AlertDescription>\r\n        </Alert>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6 space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Dashboard de Cache</h1>\r\n          <p className=\"text-muted-foreground\">\r\n            Monitoreo y gestión del sistema de cache avanzado\r\n          </p>\r\n        </div>\r\n        <div className=\"flex gap-2\">\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={() => loadDashboardData()}\r\n            disabled={refreshing}\r\n          >\r\n            <RefreshCw className={`h-4 w-4 mr-2 ${refreshing ? 'animate-spin' : ''}`} />\r\n            Actualizar\r\n          </Button>\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={handleExportReport}\r\n          >\r\n            <Download className=\"h-4 w-4 mr-2\" />\r\n            Exportar\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Overview Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Hit Rate Promedio</CardTitle>\r\n            <Activity className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{formatPercentage(data.overview.avgHitRate)}</div>\r\n            <Progress value={data.overview.avgHitRate * 100} className=\"mt-2\" />\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Tiempo de Respuesta</CardTitle>\r\n            <Clock className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{data.overview.avgResponseTime}ms</div>\r\n            <p className=\"text-xs text-muted-foreground mt-2\">\r\n              Promedio de todas las capas\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Keys Activas</CardTitle>\r\n            <Database className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{formatNumber(data.overview.totalKeys)}</div>\r\n            <p className=\"text-xs text-muted-foreground mt-2\">\r\n              Distribuidas en {data.overview.totalLayers} capas\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Estado del Sistema</CardTitle>\r\n            <AlertTriangle className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">\r\n              {data.overview.healthyLayers}/{data.overview.totalLayers}\r\n            </div>\r\n            <p className=\"text-xs text-muted-foreground mt-2\">\r\n              {data.overview.activeAlerts} alertas activas\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Alertas Activas */}\r\n      {data.alerts.filter(a => !a.resolved).length > 0 && (\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center gap-2\">\r\n              <AlertTriangle className=\"h-5 w-5 text-yellow-600\" />\r\n              Alertas Activas\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"space-y-2\">\r\n              {data.alerts.filter(a => !a.resolved).slice(0, 5).map((alert) => (\r\n                <Alert key={alert.id}>\r\n                  <div className=\"flex justify-between items-start\">\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"flex items-center gap-2 mb-1\">\r\n                        <Badge variant={getSeverityColor(alert.severity)}>\r\n                          {alert.severity}\r\n                        </Badge>\r\n                        <span className=\"text-sm text-muted-foreground\">\r\n                          {alert.type}\r\n                        </span>\r\n                      </div>\r\n                      <AlertDescription>{alert.message}</AlertDescription>\r\n                    </div>\r\n                    <span className=\"text-xs text-muted-foreground\">\r\n                      {new Date(alert.timestamp).toLocaleTimeString()}\r\n                    </span>\r\n                  </div>\r\n                </Alert>\r\n              ))}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Tabs principales */}\r\n      <Tabs defaultValue=\"strategies\" className=\"space-y-4\">\r\n        <TabsList>\r\n          <TabsTrigger value=\"strategies\">Estrategias</TabsTrigger>\r\n          <TabsTrigger value=\"layers\">Capas</TabsTrigger>\r\n          <TabsTrigger value=\"analytics\">Analytics</TabsTrigger>\r\n          <TabsTrigger value=\"warmup\">Precalentamiento</TabsTrigger>\r\n          <TabsTrigger value=\"management\">Gestión</TabsTrigger>\r\n        </TabsList>\r\n\r\n        {/* Tab Estrategias */}\r\n        <TabsContent value=\"strategies\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Estrategias de Cache</CardTitle>\r\n              <CardDescription>\r\n                Performance de las diferentes estrategias implementadas\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                {data.strategies.map((strategy) => (\r\n                  <div key={strategy.strategy} className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                    <div className=\"flex-1\">\r\n                      <h4 className=\"font-medium\">{strategy.strategy}</h4>\r\n                      <div className=\"flex gap-4 mt-2 text-sm text-muted-foreground\">\r\n                        <span>Hit Rate: {formatPercentage(strategy.hitRate)}</span>\r\n                        <span>Respuesta: {strategy.avgResponseTime}ms</span>\r\n                        <span>Requests: {formatNumber(strategy.totalRequests)}</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <Progress value={strategy.hitRate * 100} className=\"w-24\" />\r\n                      <p className=\"text-xs text-muted-foreground mt-1\">\r\n                        {formatPercentage(strategy.successRate)} éxito\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Tab Capas */}\r\n        <TabsContent value=\"layers\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Capas de Cache</CardTitle>\r\n              <CardDescription>\r\n                Estado y performance de las capas multi-nivel\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                {data.layers.map((layer) => (\r\n                  <div key={layer.layer} className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <h4 className=\"font-medium\">{layer.layer}</h4>\r\n                        <Badge className={getHealthColor(layer.healthStatus)}>\r\n                          {layer.healthStatus}\r\n                        </Badge>\r\n                      </div>\r\n                      <div className=\"flex gap-4 mt-2 text-sm text-muted-foreground\">\r\n                        <span>Hit Rate: {formatPercentage(layer.hitRate)}</span>\r\n                        <span>Latencia: {layer.avgLatency}ms</span>\r\n                        <span>Entradas: {formatNumber(layer.entriesCount)}</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex gap-2\">\r\n                      <Button\r\n                        variant=\"outline\"\r\n                        size=\"sm\"\r\n                        onClick={() => handleClearCache(layer.layer)}\r\n                      >\r\n                        Limpiar\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Tab Analytics */}\r\n        <TabsContent value=\"analytics\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            {/* Tendencias */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <TrendingUp className=\"h-5 w-5\" />\r\n                  Tendencias ({selectedPeriod})\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span>Hit Rate</span>\r\n                    <span className={data.trends.hitRateTrend >= 0 ? 'text-green-600' : 'text-red-600'}>\r\n                      {data.trends.hitRateTrend >= 0 ? '+' : ''}{data.trends.hitRateTrend.toFixed(1)}%\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span>Tiempo de Respuesta</span>\r\n                    <span className={data.trends.responseTrend <= 0 ? 'text-green-600' : 'text-red-600'}>\r\n                      {data.trends.responseTrend >= 0 ? '+' : ''}{data.trends.responseTrend.toFixed(1)}%\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span>Volumen</span>\r\n                    <span className={data.trends.volumeTrend >= 0 ? 'text-blue-600' : 'text-gray-600'}>\r\n                      {data.trends.volumeTrend >= 0 ? '+' : ''}{data.trends.volumeTrend.toFixed(1)}%\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span>Errores</span>\r\n                    <span className={data.trends.errorTrend <= 0 ? 'text-green-600' : 'text-red-600'}>\r\n                      {data.trends.errorTrend >= 0 ? '+' : ''}{data.trends.errorTrend.toFixed(1)}%\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Top Keys */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <BarChart3 className=\"h-5 w-5\" />\r\n                  Keys Más Activas\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-3\">\r\n                  {data.topKeys.slice(0, 8).map((key, index) => (\r\n                    <div key={key.key} className=\"flex items-center justify-between\">\r\n                      <div className=\"flex-1 min-w-0\">\r\n                        <p className=\"text-sm font-medium truncate\">{key.key}</p>\r\n                        <p className=\"text-xs text-muted-foreground\">\r\n                          {formatNumber(key.hits)} hits, {formatNumber(key.misses)} misses\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"text-right\">\r\n                        <span className=\"text-sm font-medium\">\r\n                          {formatPercentage(key.hitRate)}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        {/* Tab Precalentamiento */}\r\n        <TabsContent value=\"warmup\">\r\n          <Card>\r\n            <CardHeader>\r\n              <div className=\"flex justify-between items-center\">\r\n                <div>\r\n                  <CardTitle className=\"flex items-center gap-2\">\r\n                    <Zap className=\"h-5 w-5\" />\r\n                    Tareas de Precalentamiento\r\n                  </CardTitle>\r\n                  <CardDescription>\r\n                    Gestión de tareas de warmup de cache\r\n                  </CardDescription>\r\n                </div>\r\n                <Button onClick={() => handleWarmupCache()}>\r\n                  <Zap className=\"h-4 w-4 mr-2\" />\r\n                  Ejecutar Warmup\r\n                </Button>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                {data.warmupTasks.map((task) => (\r\n                  <div key={task.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <h4 className=\"font-medium\">{task.name}</h4>\r\n                        <Badge variant={\r\n                          task.status === 'completed' ? 'default' :\r\n                          task.status === 'running' ? 'secondary' :\r\n                          task.status === 'failed' ? 'destructive' : 'outline'\r\n                        }>\r\n                          {task.status}\r\n                        </Badge>\r\n                      </div>\r\n                      <div className=\"flex gap-4 mt-2 text-sm text-muted-foreground\">\r\n                        <span>Éxitos: {task.successCount}</span>\r\n                        <span>Errores: {task.errorCount}</span>\r\n                        <span>Última ejecución: {new Date(task.lastRun).toLocaleString()}</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-right text-sm text-muted-foreground\">\r\n                      {task.nextRun > Date.now() && (\r\n                        <p>Próxima: {new Date(task.nextRun).toLocaleString()}</p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Tab Gestión */}\r\n        <TabsContent value=\"management\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Settings className=\"h-5 w-5\" />\r\n                  Acciones de Gestión\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <Button \r\n                  variant=\"outline\" \r\n                  className=\"w-full justify-start\"\r\n                  onClick={() => handleClearCache()}\r\n                >\r\n                  <Database className=\"h-4 w-4 mr-2\" />\r\n                  Limpiar Todo el Cache\r\n                </Button>\r\n                \r\n                <Button \r\n                  variant=\"outline\" \r\n                  className=\"w-full justify-start\"\r\n                  onClick={() => handleWarmupCache('CRITICAL')}\r\n                >\r\n                  <Zap className=\"h-4 w-4 mr-2\" />\r\n                  Precalentar Cache Crítico\r\n                </Button>\r\n                \r\n                <Button \r\n                  variant=\"outline\" \r\n                  className=\"w-full justify-start\"\r\n                  onClick={handleExportReport}\r\n                >\r\n                  <Download className=\"h-4 w-4 mr-2\" />\r\n                  Exportar Reporte Completo\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Configuración</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"text-sm font-medium\">Período de Análisis</label>\r\n                  <select \r\n                    value={selectedPeriod}\r\n                    onChange={(e) => setSelectedPeriod(e.target.value as any)}\r\n                    className=\"w-full mt-1 p-2 border rounded\"\r\n                  >\r\n                    <option value=\"hour\">Última Hora</option>\r\n                    <option value=\"day\">Último Día</option>\r\n                    <option value=\"week\">Última Semana</option>\r\n                  </select>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}\r\n\r\n// ===================================\r\n// DATOS MOCK PARA DESARROLLO\r\n// ===================================\r\n\r\nconst mockOverview = {\r\n  totalKeys: 1247,\r\n  avgHitRate: 0.847,\r\n  avgResponseTime: 23,\r\n  activeAlerts: 2,\r\n  healthyLayers: 3,\r\n  totalLayers: 4\r\n};\r\n\r\nconst mockStrategies = [\r\n  { strategy: 'CACHE_FIRST', hitRate: 0.92, avgResponseTime: 15, totalRequests: 5420, successRate: 0.95 },\r\n  { strategy: 'NETWORK_FIRST', hitRate: 0.78, avgResponseTime: 45, totalRequests: 2130, successRate: 0.89 },\r\n  { strategy: 'STALE_WHILE_REVALIDATE', hitRate: 0.85, avgResponseTime: 28, totalRequests: 3240, successRate: 0.92 },\r\n  { strategy: 'FASTEST', hitRate: 0.88, avgResponseTime: 22, totalRequests: 1890, successRate: 0.94 }\r\n];\r\n\r\nconst mockLayers = [\r\n  { layer: 'MEMORY', hitRate: 0.95, avgLatency: 2, totalRequests: 8420, healthStatus: 'healthy' as const, entriesCount: 1247 },\r\n  { layer: 'REDIS', hitRate: 0.82, avgLatency: 8, totalRequests: 3240, healthStatus: 'healthy' as const, entriesCount: 892 },\r\n  { layer: 'CDN', hitRate: 0.76, avgLatency: 45, totalRequests: 1890, healthStatus: 'degraded' as const, entriesCount: 456 },\r\n  { layer: 'BROWSER', hitRate: 0.91, avgLatency: 1, totalRequests: 12450, healthStatus: 'healthy' as const, entriesCount: 2341 }\r\n];\r\n\r\nconst mockAlerts = [\r\n  { id: '1', type: 'performance', severity: 'medium' as const, message: 'Hit rate bajo en capa CDN', timestamp: Date.now() - 300000, resolved: false },\r\n  { id: '2', type: 'capacity', severity: 'high' as const, message: 'Memoria cache al 85% de capacidad', timestamp: Date.now() - 600000, resolved: false }\r\n];\r\n\r\nconst mockTrends = {\r\n  hitRateTrend: 2.3,\r\n  responseTrend: -5.1,\r\n  volumeTrend: 12.7,\r\n  errorTrend: -1.2\r\n};\r\n\r\nconst mockTopKeys = [\r\n  { key: 'products:popular', hits: 1247, misses: 123, hitRate: 0.91 },\r\n  { key: 'categories:main', hits: 892, misses: 89, hitRate: 0.91 },\r\n  { key: 'search:frequent', hits: 756, misses: 134, hitRate: 0.85 },\r\n  { key: 'user:sessions', hits: 634, misses: 67, hitRate: 0.90 },\r\n  { key: 'system:config', hits: 523, misses: 12, hitRate: 0.98 }\r\n];\r\n\r\nconst mockWarmupTasks = [\r\n  { id: '1', name: 'Productos Populares', status: 'completed' as const, lastRun: Date.now() - 1800000, nextRun: Date.now() + 1800000, successCount: 24, errorCount: 1 },\r\n  { id: '2', name: 'Categorías Principales', status: 'scheduled' as const, lastRun: Date.now() - 3600000, nextRun: Date.now() + 3600000, successCount: 18, errorCount: 0 },\r\n  { id: '3', name: 'Configuración Sistema', status: 'completed' as const, lastRun: Date.now() - 900000, nextRun: Date.now() + 2700000, successCount: 45, errorCount: 2 }\r\n];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappingsoFA;;;AAGA;;;;;;WAAwBA,cAAA;;;;;;;;wEAjFmB;;;iCAC+B;;;iCACjB;;;iCACnC;;;iCACC;;;iCACiB;;;kCACf;;;kCAYlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DQ,SAASA,eAAA;EAAA;EAAAC,aAAA,GAAAC,CAAA;EACtB,MAAM,CAACC,IAAA,EAAMC,OAAA,CAAQ;EAAA;EAAA,CAAAH,aAAA,GAAAI,CAAA,QAAG,IAAAC,MAAA,CAAAC,QAAQ,EAA4B;EAC5D,MAAM,CAACC,OAAA,EAASC,UAAA,CAAW;EAAA;EAAA,CAAAR,aAAA,GAAAI,CAAA,QAAG,IAAAC,MAAA,CAAAC,QAAQ,EAAC;EACvC,MAAM,CAACG,UAAA,EAAYC,aAAA,CAAc;EAAA;EAAA,CAAAV,aAAA,GAAAI,CAAA,QAAG,IAAAC,MAAA,CAAAC,QAAQ,EAAC;EAC7C,MAAM,CAACK,cAAA,EAAgBC,iBAAA,CAAkB;EAAA;EAAA,CAAAZ,aAAA,GAAAI,CAAA,QAAG,IAAAC,MAAA,CAAAC,QAAQ,EAA0B;EAE9E;;;EAAA;EAAAN,aAAA,GAAAI,CAAA;EAGA,MAAMS,iBAAA,GAAoB,MAAAA,CAAA;IAAA;IAAAb,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAI,CAAA;IACxB,IAAI;MAAA;MAAAJ,aAAA,GAAAI,CAAA;MACFM,aAAA,CAAc;MAEd;MACA,MAAM,CAACI,QAAA,EAAUC,UAAA,EAAYC,MAAA,EAAQC,MAAA,EAAQC,MAAA,EAAQC,OAAA,EAASC,WAAA,CAAY;MAAA;MAAA,CAAApB,aAAA,GAAAI,CAAA,QAAG,MAAMiB,OAAA,CAAQC,GAAG,CAAC,CAC7FC,KAAA,CAAM,uBAAuBC,IAAI,CAACC,CAAA,IAAK;QAAA;QAAAzB,aAAA,GAAAC,CAAA;QAAAD,aAAA,GAAAI,CAAA;QAAA,OAAAqB,CAAA,CAAEC,IAAI;MAAA,GAAIC,KAAK,CAAC,MAAMC;QAAAA;QAAAA,sBAAA;QAAAA,uBAAA;QAAAA,MAAA,CAAAA,YAAA;MAAA,IAC7DL,KAAA,CAAM,yBAAyBC,IAAI,CAACC,CAAA,IAAK;QAAA;QAAAzB,aAAA,GAAAC,CAAA;QAAAD,aAAA,GAAAI,CAAA;QAAA,OAAAqB,CAAA,CAAEC,IAAI;MAAA,GAAIC,KAAK,CAAC,MAAME;QAAAA;QAAAA,sBAAA;QAAAA,uBAAA;QAAAA,MAAA,CAAAA,cAAA;MAAA,IAC/DN,KAAA,CAAM,qBAAqBC,IAAI,CAACC,CAAA,IAAK;QAAA;QAAAzB,aAAA,GAAAC,CAAA;QAAAD,aAAA,GAAAI,CAAA;QAAA,OAAAqB,CAAA,CAAEC,IAAI;MAAA,GAAIC,KAAK,CAAC,MAAMG;QAAAA;QAAAA,uBAAA;QAAAA,uBAAA;QAAAA,MAAA,CAAAA,UAAA;MAAA,IAC3DP,KAAA,CAAM,qBAAqBC,IAAI,CAACC,CAAA,IAAK;QAAA;QAAAzB,aAAA,GAAAC,CAAA;QAAAD,aAAA,GAAAI,CAAA;QAAA,OAAAqB,CAAA,CAAEC,IAAI;MAAA,GAAIC,KAAK,CAAC,MAAMI;QAAAA;QAAAA,uBAAA;QAAAA,uBAAA;QAAAA,MAAA,CAAAA,UAAA;MAAA,IAC3DR,KAAA,CAAM,4BAA4BZ,cAAA,EAAgB,EAAEa,IAAI,CAACC,CAAA,IAAK;QAAA;QAAAzB,aAAA,GAAAC,CAAA;QAAAD,aAAA,GAAAI,CAAA;QAAA,OAAAqB,CAAA,CAAEC,IAAI;MAAA,GAAIC,KAAK,CAAC,MAAMK;QAAAA;QAAAA,uBAAA;QAAAA,uBAAA;QAAAA,MAAA,CAAAA,UAAA;MAAA,IACpFT,KAAA,CAAM,uBAAuBC,IAAI,CAACC,CAAA,IAAK;QAAA;QAAAzB,aAAA,GAAAC,CAAA;QAAAD,aAAA,GAAAI,CAAA;QAAA,OAAAqB,CAAA,CAAEC,IAAI;MAAA,GAAIC,KAAK,CAAC,MAAMM;QAAAA;QAAAA,uBAAA;QAAAA,uBAAA;QAAAA,MAAA,CAAAA,WAAA;MAAA,IAC7DV,KAAA,CAAM,2BAA2BC,IAAI,CAACC,CAAA,IAAK;QAAA;QAAAzB,aAAA,GAAAC,CAAA;QAAAD,aAAA,GAAAI,CAAA;QAAA,OAAAqB,CAAA,CAAEC,IAAI;MAAA,GAAIC,KAAK,CAAC,MAAMO;QAAAA;QAAAA,uBAAA;QAAAA,uBAAA;QAAAA,MAAA,CAAAA,eAAA;MAAA,GAClE;MAAA;MAAAlC,aAAA,GAAAI,CAAA;MAEDD,OAAA,CAAQ;QACNW,QAAA;QACAC,UAAA;QACAC,MAAA;QACAC,MAAA;QACAC,MAAA;QACAC,OAAA;QACAC;MACF;IACF,EAAE,OAAOe,KAAA,EAAO;MAAA;MAAAnC,aAAA,GAAAI,CAAA;MACdgC,OAAA,CAAQD,KAAK,CAAC,uCAAuCA,KAAA;IACvD,UAAU;MAAA;MAAAnC,aAAA,GAAAI,CAAA;MACRI,UAAA,CAAW;MAAA;MAAAR,aAAA,GAAAI,CAAA;MACXM,aAAA,CAAc;IAChB;EACF;EAEA;;;EAAA;EAAAV,aAAA,GAAAI,CAAA;EAGA,IAAAC,MAAA,CAAAgC,SAAS,EAAC;IAAA;IAAArC,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAI,CAAA;IACRS,iBAAA;IAEA;IACA,MAAMyB,QAAA;IAAA;IAAA,CAAAtC,aAAA,GAAAI,CAAA,QAAWmC,WAAA,CAAY1B,iBAAA,EAAmB;IAAA;IAAAb,aAAA,GAAAI,CAAA;IAChD,OAAO,MAAM;MAAA;MAAAJ,aAAA,GAAAC,CAAA;MAAAD,aAAA,GAAAI,CAAA;MAAA,OAAAoC,aAAA,CAAcF,QAAA;IAAA;EAC7B,GAAG,CAAC3B,cAAA,CAAe;EAEnB;;;EAAA;EAAAX,aAAA,GAAAI,CAAA;EAGA,MAAMqC,gBAAA,GAAmB,MAAOC,KAAA;IAAA;IAAA1C,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAI,CAAA;IAC9B,IAAI;MACF,MAAMuC,QAAA;MAAA;MAAA,CAAA3C,aAAA,GAAAI,CAAA,QAAWsC,KAAA;MAAA;MAAA,CAAA1C,aAAA,GAAA4C,CAAA,WAAQ,0BAA0BF,KAAA,EAAO;MAAA;MAAA,CAAA1C,aAAA,GAAA4C,CAAA,WAAG;MAAA;MAAA5C,aAAA,GAAAI,CAAA;MAC7D,MAAMmB,KAAA,CAAMoB,QAAA,EAAU;QAAEE,MAAA,EAAQ;MAAO;MAAA;MAAA7C,aAAA,GAAAI,CAAA;MACvC,MAAMS,iBAAA;IACR,EAAE,OAAOsB,KAAA,EAAO;MAAA;MAAAnC,aAAA,GAAAI,CAAA;MACdgC,OAAA,CAAQD,KAAK,CAAC,0BAA0BA,KAAA;IAC1C;EACF;EAEA;;;EAAA;EAAAnC,aAAA,GAAAI,CAAA;EAGA,MAAM0C,iBAAA,GAAoB,MAAOC,QAAA;IAAA;IAAA/C,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAI,CAAA;IAC/B,IAAI;MACF,MAAMuC,QAAA;MAAA;MAAA,CAAA3C,aAAA,GAAAI,CAAA,QAAW2C,QAAA;MAAA;MAAA,CAAA/C,aAAA,GAAA4C,CAAA,WAAW,8BAA8BG,QAAA,EAAU;MAAA;MAAA,CAAA/C,aAAA,GAAA4C,CAAA,WAAG;MAAA;MAAA5C,aAAA,GAAAI,CAAA;MACvE,MAAMmB,KAAA,CAAMoB,QAAA,EAAU;QAAEE,MAAA,EAAQ;MAAO;MAAA;MAAA7C,aAAA,GAAAI,CAAA;MACvC,MAAMS,iBAAA;IACR,EAAE,OAAOsB,KAAA,EAAO;MAAA;MAAAnC,aAAA,GAAAI,CAAA;MACdgC,OAAA,CAAQD,KAAK,CAAC,8BAA8BA,KAAA;IAC9C;EACF;EAEA;;;EAAA;EAAAnC,aAAA,GAAAI,CAAA;EAGA,MAAM4C,kBAAA,GAAqB,MAAAA,CAAA;IAAA;IAAAhD,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAI,CAAA;IACzB,IAAI;MACF,MAAM6C,QAAA;MAAA;MAAA,CAAAjD,aAAA,GAAAI,CAAA,QAAW,MAAMmB,KAAA,CAAM,4BAA4BZ,cAAA,EAAgB;MACzE,MAAMuC,IAAA;MAAA;MAAA,CAAAlD,aAAA,GAAAI,CAAA,QAAO,MAAM6C,QAAA,CAASC,IAAI;MAChC,MAAMC,GAAA;MAAA;MAAA,CAAAnD,aAAA,GAAAI,CAAA,QAAMgD,MAAA,CAAOC,GAAG,CAACC,eAAe,CAACJ,IAAA;MACvC,MAAMK,CAAA;MAAA;MAAA,CAAAvD,aAAA,GAAAI,CAAA,QAAIoD,QAAA,CAASC,aAAa,CAAC;MAAA;MAAAzD,aAAA,GAAAI,CAAA;MACjCmD,CAAA,CAAEG,IAAI,GAAGP,GAAA;MAAA;MAAAnD,aAAA,GAAAI,CAAA;MACTmD,CAAA,CAAEI,QAAQ,GAAG,gBAAgBhD,cAAA,IAAkB,IAAIiD,IAAA,GAAOC,WAAW,GAAGC,KAAK,CAAC,IAAI,CAAC,EAAE,OAAO;MAAA;MAAA9D,aAAA,GAAAI,CAAA;MAC5FoD,QAAA,CAASO,IAAI,CAACC,WAAW,CAACT,CAAA;MAAA;MAAAvD,aAAA,GAAAI,CAAA;MAC1BmD,CAAA,CAAEU,KAAK;MAAA;MAAAjE,aAAA,GAAAI,CAAA;MACPgD,MAAA,CAAOC,GAAG,CAACa,eAAe,CAACf,GAAA;MAAA;MAAAnD,aAAA,GAAAI,CAAA;MAC3BoD,QAAA,CAASO,IAAI,CAACI,WAAW,CAACZ,CAAA;IAC5B,EAAE,OAAOpB,KAAA,EAAO;MAAA;MAAAnC,aAAA,GAAAI,CAAA;MACdgC,OAAA,CAAQD,KAAK,CAAC,6BAA6BA,KAAA;IAC7C;EACF;EAEA;;;EAAA;EAAAnC,aAAA,GAAAI,CAAA;EAGA,MAAMgE,gBAAA,GAAoBC,QAAA;IAAA;IAAArE,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAI,CAAA;IACxB,QAAQiE,QAAA;MACN,KAAK;QAAA;QAAArE,aAAA,GAAA4C,CAAA;QAAA5C,aAAA,GAAAI,CAAA;QAAY,OAAO;MACxB,KAAK;QAAA;QAAAJ,aAAA,GAAA4C,CAAA;QAAA5C,aAAA,GAAAI,CAAA;QAAQ,OAAO;MACpB,KAAK;QAAA;QAAAJ,aAAA,GAAA4C,CAAA;QAAA5C,aAAA,GAAAI,CAAA;QAAU,OAAO;MACtB,KAAK;QAAA;QAAAJ,aAAA,GAAA4C,CAAA;QAAA5C,aAAA,GAAAI,CAAA;QAAO,OAAO;MACnB;QAAA;QAAAJ,aAAA,GAAA4C,CAAA;QAAA5C,aAAA,GAAAI,CAAA;QAAS,OAAO;IAClB;EACF;EAEA;;;EAAA;EAAAJ,aAAA,GAAAI,CAAA;EAGA,MAAMkE,cAAA,GAAkBC,MAAA;IAAA;IAAAvE,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAI,CAAA;IACtB,QAAQmE,MAAA;MACN,KAAK;QAAA;QAAAvE,aAAA,GAAA4C,CAAA;QAAA5C,aAAA,GAAAI,CAAA;QAAW,OAAO;MACvB,KAAK;QAAA;QAAAJ,aAAA,GAAA4C,CAAA;QAAA5C,aAAA,GAAAI,CAAA;QAAY,OAAO;MACxB,KAAK;QAAA;QAAAJ,aAAA,GAAA4C,CAAA;QAAA5C,aAAA,GAAAI,CAAA;QAAa,OAAO;MACzB;QAAA;QAAAJ,aAAA,GAAA4C,CAAA;QAAA5C,aAAA,GAAAI,CAAA;QAAS,OAAO;IAClB;EACF;EAEA;;;EAAA;EAAAJ,aAAA,GAAAI,CAAA;EAGA,MAAMoE,YAAA,GAAgBC,GAAA;IAAA;IAAAzE,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAI,CAAA;IACpB,IAAIqE,GAAA,IAAO,SAAS;MAAA;MAAAzE,aAAA,GAAA4C,CAAA;MAAA5C,aAAA,GAAAI,CAAA;MAAC,OAAO,GAAG,CAACqE,GAAA,GAAM,OAAM,EAAGC,OAAO,CAAC,KAAK;IAAC;IAAA;IAAA;MAAA1E,aAAA,GAAA4C,CAAA;IAAA;IAAA5C,aAAA,GAAAI,CAAA;IAC7D,IAAIqE,GAAA,IAAO,MAAM;MAAA;MAAAzE,aAAA,GAAA4C,CAAA;MAAA5C,aAAA,GAAAI,CAAA;MAAC,OAAO,GAAG,CAACqE,GAAA,GAAM,IAAG,EAAGC,OAAO,CAAC,KAAK;IAAC;IAAA;IAAA;MAAA1E,aAAA,GAAA4C,CAAA;IAAA;IAAA5C,aAAA,GAAAI,CAAA;IACvD,OAAOqE,GAAA,CAAIE,QAAQ;EACrB;EAEA;;;EAAA;EAAA3E,aAAA,GAAAI,CAAA;EAGA,MAAMwE,gBAAA,GAAoBH,GAAA;IAAA;IAAAzE,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAI,CAAA;IACxB,OAAO,GAAG,CAACqE,GAAA,GAAM,GAAE,EAAGC,OAAO,CAAC,KAAK;EACrC;EAAA;EAAA1E,aAAA,GAAAI,CAAA;EAEA,IAAIG,OAAA,EAAS;IAAA;IAAAP,aAAA,GAAA4C,CAAA;IAAA5C,aAAA,GAAAI,CAAA;IACX,oBACE,IAAAyE,WAAA,CAAAC,GAAA,EAAC;MAAIC,SAAA,EAAU;gBACb,iBAAAF,WAAA,CAAAG,IAAA,EAAC;QAAID,SAAA,EAAU;gCACb,IAAAF,WAAA,CAAAC,GAAA,EAACG,YAAA,CAAAC,SAAS;UAACH,SAAA,EAAU;yBACrB,IAAAF,WAAA,CAAAC,GAAA,EAAC;oBAAE;;;;EAIX;EAAA;EAAA;IAAA9E,aAAA,GAAA4C,CAAA;EAAA;EAAA5C,aAAA,GAAAI,CAAA;EAEA,IAAI,CAACF,IAAA,EAAM;IAAA;IAAAF,aAAA,GAAA4C,CAAA;IAAA5C,aAAA,GAAAI,CAAA;IACT,oBACE,IAAAyE,WAAA,CAAAC,GAAA,EAAC;MAAIC,SAAA,EAAU;gBACb,iBAAAF,WAAA,CAAAG,IAAA,EAACG,MAAA,CAAAC,KAAK;gCACJ,IAAAP,WAAA,CAAAC,GAAA,EAACG,YAAA,CAAAI,aAAa;UAACN,SAAA,EAAU;yBACzB,IAAAF,WAAA,CAAAC,GAAA,EAACK,MAAA,CAAAG,gBAAgB;oBAAC;;;;EAM1B;EAAA;EAAA;IAAAtF,aAAA,GAAA4C,CAAA;EAAA;EAAA5C,aAAA,GAAAI,CAAA;EAEA,oBACE,IAAAyE,WAAA,CAAAG,IAAA,EAAC;IAAID,SAAA,EAAU;4BAEb,IAAAF,WAAA,CAAAG,IAAA,EAAC;MAAID,SAAA,EAAU;8BACb,IAAAF,WAAA,CAAAG,IAAA,EAAC;gCACC,IAAAH,WAAA,CAAAC,GAAA,EAAC;UAAGC,SAAA,EAAU;oBAAqB;yBACnC,IAAAF,WAAA,CAAAC,GAAA,EAAC;UAAEC,SAAA,EAAU;oBAAwB;;uBAIvC,IAAAF,WAAA,CAAAG,IAAA,EAAC;QAAID,SAAA,EAAU;gCACb,IAAAF,WAAA,CAAAG,IAAA,EAACO,OAAA,CAAAC,MAAM;UACLC,OAAA,EAAQ;UACRC,IAAA,EAAK;UACLC,OAAA,EAASA,CAAA,KAAM;YAAA;YAAA3F,aAAA,GAAAC,CAAA;YAAAD,aAAA,GAAAI,CAAA;YAAA,OAAAS,iBAAA;UAAA;UACf+E,QAAA,EAAUnF,UAAA;kCAEV,IAAAoE,WAAA,CAAAC,GAAA,EAACG,YAAA,CAAAC,SAAS;YAACH,SAAA,EAAW,gBAAgBtE,UAAA;YAAA;YAAA,CAAAT,aAAA,GAAA4C,CAAA,WAAa;YAAA;YAAA,CAAA5C,aAAA,GAAA4C,CAAA,WAAiB;cAAQ;yBAG9E,IAAAiC,WAAA,CAAAG,IAAA,EAACO,OAAA,CAAAC,MAAM;UACLC,OAAA,EAAQ;UACRC,IAAA,EAAK;UACLC,OAAA,EAAS3C,kBAAA;kCAET,IAAA6B,WAAA,CAAAC,GAAA,EAACG,YAAA,CAAAY,QAAQ;YAACd,SAAA,EAAU;cAAiB;;;qBAO3C,IAAAF,WAAA,CAAAG,IAAA,EAAC;MAAID,SAAA,EAAU;8BACb,IAAAF,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAC,IAAI;gCACH,IAAAlB,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAE,UAAU;UAACjB,SAAA,EAAU;kCACpB,IAAAF,WAAA,CAAAC,GAAA,EAACgB,KAAA,CAAAG,SAAS;YAAClB,SAAA,EAAU;sBAAsB;2BAC3C,IAAAF,WAAA,CAAAC,GAAA,EAACG,YAAA,CAAAiB,QAAQ;YAACnB,SAAA,EAAU;;yBAEtB,IAAAF,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAK,WAAW;kCACV,IAAAtB,WAAA,CAAAC,GAAA,EAAC;YAAIC,SAAA,EAAU;sBAAsBH,gBAAA,CAAiB1E,IAAA,CAAKY,QAAQ,CAACsF,UAAU;2BAC9E,IAAAvB,WAAA,CAAAC,GAAA,EAACuB,SAAA,CAAAC,QAAQ;YAACC,KAAA,EAAOrG,IAAA,CAAKY,QAAQ,CAACsF,UAAU,GAAG;YAAKrB,SAAA,EAAU;;;uBAI/D,IAAAF,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAC,IAAI;gCACH,IAAAlB,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAE,UAAU;UAACjB,SAAA,EAAU;kCACpB,IAAAF,WAAA,CAAAC,GAAA,EAACgB,KAAA,CAAAG,SAAS;YAAClB,SAAA,EAAU;sBAAsB;2BAC3C,IAAAF,WAAA,CAAAC,GAAA,EAACG,YAAA,CAAAuB,KAAK;YAACzB,SAAA,EAAU;;yBAEnB,IAAAF,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAK,WAAW;kCACV,IAAAtB,WAAA,CAAAG,IAAA,EAAC;YAAID,SAAA,EAAU;uBAAsB7E,IAAA,CAAKY,QAAQ,CAAC2F,eAAe,EAAC;2BACnE,IAAA5B,WAAA,CAAAC,GAAA,EAAC;YAAEC,SAAA,EAAU;sBAAqC;;;uBAMtD,IAAAF,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAC,IAAI;gCACH,IAAAlB,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAE,UAAU;UAACjB,SAAA,EAAU;kCACpB,IAAAF,WAAA,CAAAC,GAAA,EAACgB,KAAA,CAAAG,SAAS;YAAClB,SAAA,EAAU;sBAAsB;2BAC3C,IAAAF,WAAA,CAAAC,GAAA,EAACG,YAAA,CAAAyB,QAAQ;YAAC3B,SAAA,EAAU;;yBAEtB,IAAAF,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAK,WAAW;kCACV,IAAAtB,WAAA,CAAAC,GAAA,EAAC;YAAIC,SAAA,EAAU;sBAAsBP,YAAA,CAAatE,IAAA,CAAKY,QAAQ,CAAC6F,SAAS;2BACzE,IAAA9B,WAAA,CAAAG,IAAA,EAAC;YAAED,SAAA,EAAU;uBAAqC,oBAC/B7E,IAAA,CAAKY,QAAQ,CAAC8F,WAAW,EAAC;;;uBAKjD,IAAA/B,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAC,IAAI;gCACH,IAAAlB,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAE,UAAU;UAACjB,SAAA,EAAU;kCACpB,IAAAF,WAAA,CAAAC,GAAA,EAACgB,KAAA,CAAAG,SAAS;YAAClB,SAAA,EAAU;sBAAsB;2BAC3C,IAAAF,WAAA,CAAAC,GAAA,EAACG,YAAA,CAAAI,aAAa;YAACN,SAAA,EAAU;;yBAE3B,IAAAF,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAK,WAAW;kCACV,IAAAtB,WAAA,CAAAG,IAAA,EAAC;YAAID,SAAA,EAAU;uBACZ7E,IAAA,CAAKY,QAAQ,CAAC+F,aAAa,EAAC,KAAE3G,IAAA,CAAKY,QAAQ,CAAC8F,WAAW;2BAE1D,IAAA/B,WAAA,CAAAG,IAAA,EAAC;YAAED,SAAA,EAAU;uBACV7E,IAAA,CAAKY,QAAQ,CAACgG,YAAY,EAAC;;;;;IAOnC;IAAA,CAAA9G,aAAA,GAAA4C,CAAA,WAAA1C,IAAA,CAAKe,MAAM,CAAC8F,MAAM,CAACxD,CAAA,IAAK;MAAA;MAAAvD,aAAA,GAAAC,CAAA;MAAAD,aAAA,GAAAI,CAAA;MAAA,QAACmD,CAAA,CAAEyD,QAAQ;IAAR,CAAQ,EAAEC,MAAM,GAAG;IAAA;IAAA,CAAAjH,aAAA,GAAA4C,CAAA,wBAC7C,IAAAiC,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAC,IAAI;8BACH,IAAAlB,WAAA,CAAAC,GAAA,EAACgB,KAAA,CAAAE,UAAU;kBACT,iBAAAnB,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAG,SAAS;UAAClB,SAAA,EAAU;kCACnB,IAAAF,WAAA,CAAAC,GAAA,EAACG,YAAA,CAAAI,aAAa;YAACN,SAAA,EAAU;cAA4B;;uBAIzD,IAAAF,WAAA,CAAAC,GAAA,EAACgB,KAAA,CAAAK,WAAW;kBACV,iBAAAtB,WAAA,CAAAC,GAAA,EAAC;UAAIC,SAAA,EAAU;oBACZ7E,IAAA,CAAKe,MAAM,CAAC8F,MAAM,CAACxD,CAAA,IAAK;YAAA;YAAAvD,aAAA,GAAAC,CAAA;YAAAD,aAAA,GAAAI,CAAA;YAAA,QAACmD,CAAA,CAAEyD,QAAQ;UAAR,CAAQ,EAAEE,KAAK,CAAC,GAAG,GAAGC,GAAG,CAAEC,KAAA,IACrD;YAAA;YAAApH,aAAA,GAAAC,CAAA;YAAAD,aAAA,GAAAI,CAAA;YAAA,OADqD,aACrD,IAAAyE,WAAA,CAAAC,GAAA,EAACK,MAAA,CAAAC,KAAK;wBACJ,iBAAAP,WAAA,CAAAG,IAAA,EAAC;gBAAID,SAAA,EAAU;wCACb,IAAAF,WAAA,CAAAG,IAAA,EAAC;kBAAID,SAAA,EAAU;0CACb,IAAAF,WAAA,CAAAG,IAAA,EAAC;oBAAID,SAAA,EAAU;4CACb,IAAAF,WAAA,CAAAC,GAAA,EAACuC,MAAA,CAAAC,KAAK;sBAAC7B,OAAA,EAASrB,gBAAA,CAAiBgD,KAAA,CAAM/C,QAAQ;gCAC5C+C,KAAA,CAAM/C;qCAET,IAAAQ,WAAA,CAAAC,GAAA,EAAC;sBAAKC,SAAA,EAAU;gCACbqC,KAAA,CAAMG;;mCAGX,IAAA1C,WAAA,CAAAC,GAAA,EAACK,MAAA,CAAAG,gBAAgB;8BAAE8B,KAAA,CAAMI;;iCAE3B,IAAA3C,WAAA,CAAAC,GAAA,EAAC;kBAAKC,SAAA,EAAU;4BACb,IAAInB,IAAA,CAAKwD,KAAA,CAAMK,SAAS,EAAEC,kBAAkB;;;eAdvCN,KAAA,CAAMO,EAAE;UAAA;;;sBAyB9B,IAAA9C,WAAA,CAAAG,IAAA,EAAC4C,KAAA,CAAAC,IAAI;MAACC,YAAA,EAAa;MAAa/C,SAAA,EAAU;8BACxC,IAAAF,WAAA,CAAAG,IAAA,EAAC4C,KAAA,CAAAG,QAAQ;gCACP,IAAAlD,WAAA,CAAAC,GAAA,EAAC8C,KAAA,CAAAI,WAAW;UAACzB,KAAA,EAAM;oBAAa;yBAChC,IAAA1B,WAAA,CAAAC,GAAA,EAAC8C,KAAA,CAAAI,WAAW;UAACzB,KAAA,EAAM;oBAAS;yBAC5B,IAAA1B,WAAA,CAAAC,GAAA,EAAC8C,KAAA,CAAAI,WAAW;UAACzB,KAAA,EAAM;oBAAY;yBAC/B,IAAA1B,WAAA,CAAAC,GAAA,EAAC8C,KAAA,CAAAI,WAAW;UAACzB,KAAA,EAAM;oBAAS;yBAC5B,IAAA1B,WAAA,CAAAC,GAAA,EAAC8C,KAAA,CAAAI,WAAW;UAACzB,KAAA,EAAM;oBAAa;;uBAIlC,IAAA1B,WAAA,CAAAC,GAAA,EAAC8C,KAAA,CAAAK,WAAW;QAAC1B,KAAA,EAAM;kBACjB,iBAAA1B,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAC,IAAI;kCACH,IAAAlB,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAE,UAAU;oCACT,IAAAnB,WAAA,CAAAC,GAAA,EAACgB,KAAA,CAAAG,SAAS;wBAAC;6BACX,IAAApB,WAAA,CAAAC,GAAA,EAACgB,KAAA,CAAAoC,eAAe;wBAAC;;2BAInB,IAAArD,WAAA,CAAAC,GAAA,EAACgB,KAAA,CAAAK,WAAW;sBACV,iBAAAtB,WAAA,CAAAC,GAAA,EAAC;cAAIC,SAAA,EAAU;wBACZ7E,IAAA,CAAKa,UAAU,CAACoG,GAAG,CAAEpE,QAAA,IACpB;gBAAA;gBAAA/C,aAAA,GAAAC,CAAA;gBAAAD,aAAA,GAAAI,CAAA;gBAAA,OADoB,aACpB,IAAAyE,WAAA,CAAAG,IAAA,EAAC;kBAA4BD,SAAA,EAAU;0CACrC,IAAAF,WAAA,CAAAG,IAAA,EAAC;oBAAID,SAAA,EAAU;4CACb,IAAAF,WAAA,CAAAC,GAAA,EAAC;sBAAGC,SAAA,EAAU;gCAAehC,QAAA,CAASA;qCACtC,IAAA8B,WAAA,CAAAG,IAAA,EAAC;sBAAID,SAAA,EAAU;8CACb,IAAAF,WAAA,CAAAG,IAAA,EAAC;mCAAK,cAAWJ,gBAAA,CAAiB7B,QAAA,CAASoF,OAAO;uCAClD,IAAAtD,WAAA,CAAAG,IAAA,EAAC;mCAAK,eAAYjC,QAAA,CAAS0D,eAAe,EAAC;uCAC3C,IAAA5B,WAAA,CAAAG,IAAA,EAAC;mCAAK,cAAWR,YAAA,CAAazB,QAAA,CAASqF,aAAa;;;mCAGxD,IAAAvD,WAAA,CAAAG,IAAA,EAAC;oBAAID,SAAA,EAAU;4CACb,IAAAF,WAAA,CAAAC,GAAA,EAACuB,SAAA,CAAAC,QAAQ;sBAACC,KAAA,EAAOxD,QAAA,CAASoF,OAAO,GAAG;sBAAKpD,SAAA,EAAU;qCACnD,IAAAF,WAAA,CAAAG,IAAA,EAAC;sBAAED,SAAA,EAAU;iCACVH,gBAAA,CAAiB7B,QAAA,CAASsF,WAAW,GAAE;;;mBAZpCtF,QAAA,CAASA,QAAQ;cAAA;;;;uBAuBrC,IAAA8B,WAAA,CAAAC,GAAA,EAAC8C,KAAA,CAAAK,WAAW;QAAC1B,KAAA,EAAM;kBACjB,iBAAA1B,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAC,IAAI;kCACH,IAAAlB,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAE,UAAU;oCACT,IAAAnB,WAAA,CAAAC,GAAA,EAACgB,KAAA,CAAAG,SAAS;wBAAC;6BACX,IAAApB,WAAA,CAAAC,GAAA,EAACgB,KAAA,CAAAoC,eAAe;wBAAC;;2BAInB,IAAArD,WAAA,CAAAC,GAAA,EAACgB,KAAA,CAAAK,WAAW;sBACV,iBAAAtB,WAAA,CAAAC,GAAA,EAAC;cAAIC,SAAA,EAAU;wBACZ7E,IAAA,CAAKc,MAAM,CAACmG,GAAG,CAAEzE,KAAA,IAChB;gBAAA;gBAAA1C,aAAA,GAAAC,CAAA;gBAAAD,aAAA,GAAAI,CAAA;gBAAA,OADgB,aAChB,IAAAyE,WAAA,CAAAG,IAAA,EAAC;kBAAsBD,SAAA,EAAU;0CAC/B,IAAAF,WAAA,CAAAG,IAAA,EAAC;oBAAID,SAAA,EAAU;4CACb,IAAAF,WAAA,CAAAG,IAAA,EAAC;sBAAID,SAAA,EAAU;8CACb,IAAAF,WAAA,CAAAC,GAAA,EAAC;wBAAGC,SAAA,EAAU;kCAAerC,KAAA,CAAMA;uCACnC,IAAAmC,WAAA,CAAAC,GAAA,EAACuC,MAAA,CAAAC,KAAK;wBAACvC,SAAA,EAAWT,cAAA,CAAe5B,KAAA,CAAM4F,YAAY;kCAChD5F,KAAA,CAAM4F;;qCAGX,IAAAzD,WAAA,CAAAG,IAAA,EAAC;sBAAID,SAAA,EAAU;8CACb,IAAAF,WAAA,CAAAG,IAAA,EAAC;mCAAK,cAAWJ,gBAAA,CAAiBlC,KAAA,CAAMyF,OAAO;uCAC/C,IAAAtD,WAAA,CAAAG,IAAA,EAAC;mCAAK,cAAWtC,KAAA,CAAM6F,UAAU,EAAC;uCAClC,IAAA1D,WAAA,CAAAG,IAAA,EAAC;mCAAK,cAAWR,YAAA,CAAa9B,KAAA,CAAM8F,YAAY;;;mCAGpD,IAAA3D,WAAA,CAAAC,GAAA,EAAC;oBAAIC,SAAA,EAAU;8BACb,iBAAAF,WAAA,CAAAC,GAAA,EAACS,OAAA,CAAAC,MAAM;sBACLC,OAAA,EAAQ;sBACRC,IAAA,EAAK;sBACLC,OAAA,EAASA,CAAA,KAAM;wBAAA;wBAAA3F,aAAA,GAAAC,CAAA;wBAAAD,aAAA,GAAAI,CAAA;wBAAA,OAAAqC,gBAAA,CAAiBC,KAAA,CAAMA,KAAK;sBAAA;gCAC5C;;;mBAnBKA,KAAA,CAAMA,KAAK;cAAA;;;;uBA+B/B,IAAAmC,WAAA,CAAAC,GAAA,EAAC8C,KAAA,CAAAK,WAAW;QAAC1B,KAAA,EAAM;kBACjB,iBAAA1B,WAAA,CAAAG,IAAA,EAAC;UAAID,SAAA,EAAU;kCAEb,IAAAF,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAC,IAAI;oCACH,IAAAlB,WAAA,CAAAC,GAAA,EAACgB,KAAA,CAAAE,UAAU;wBACT,iBAAAnB,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAG,SAAS;gBAAClB,SAAA,EAAU;wCACnB,IAAAF,WAAA,CAAAC,GAAA,EAACG,YAAA,CAAAwD,UAAU;kBAAC1D,SAAA,EAAU;oBAAY,gBACrBpE,cAAA,EAAe;;6BAGhC,IAAAkE,WAAA,CAAAC,GAAA,EAACgB,KAAA,CAAAK,WAAW;wBACV,iBAAAtB,WAAA,CAAAG,IAAA,EAAC;gBAAID,SAAA,EAAU;wCACb,IAAAF,WAAA,CAAAG,IAAA,EAAC;kBAAID,SAAA,EAAU;0CACb,IAAAF,WAAA,CAAAC,GAAA,EAAC;8BAAK;mCACN,IAAAD,WAAA,CAAAG,IAAA,EAAC;oBAAKD,SAAA,EAAW7E,IAAA,CAAKgB,MAAM,CAACwH,YAAY,IAAI;oBAAA;oBAAA,CAAA1I,aAAA,GAAA4C,CAAA,WAAI;oBAAA;oBAAA,CAAA5C,aAAA,GAAA4C,CAAA,WAAmB;+BACjE1C,IAAA,CAAKgB,MAAM,CAACwH,YAAY,IAAI;oBAAA;oBAAA,CAAA1I,aAAA,GAAA4C,CAAA,WAAI;oBAAA;oBAAA,CAAA5C,aAAA,GAAA4C,CAAA,WAAM,KAAI1C,IAAA,CAAKgB,MAAM,CAACwH,YAAY,CAAChE,OAAO,CAAC,IAAG;;iCAGnF,IAAAG,WAAA,CAAAG,IAAA,EAAC;kBAAID,SAAA,EAAU;0CACb,IAAAF,WAAA,CAAAC,GAAA,EAAC;8BAAK;mCACN,IAAAD,WAAA,CAAAG,IAAA,EAAC;oBAAKD,SAAA,EAAW7E,IAAA,CAAKgB,MAAM,CAACyH,aAAa,IAAI;oBAAA;oBAAA,CAAA3I,aAAA,GAAA4C,CAAA,WAAI;oBAAA;oBAAA,CAAA5C,aAAA,GAAA4C,CAAA,WAAmB;+BAClE1C,IAAA,CAAKgB,MAAM,CAACyH,aAAa,IAAI;oBAAA;oBAAA,CAAA3I,aAAA,GAAA4C,CAAA,WAAI;oBAAA;oBAAA,CAAA5C,aAAA,GAAA4C,CAAA,WAAM,KAAI1C,IAAA,CAAKgB,MAAM,CAACyH,aAAa,CAACjE,OAAO,CAAC,IAAG;;iCAGrF,IAAAG,WAAA,CAAAG,IAAA,EAAC;kBAAID,SAAA,EAAU;0CACb,IAAAF,WAAA,CAAAC,GAAA,EAAC;8BAAK;mCACN,IAAAD,WAAA,CAAAG,IAAA,EAAC;oBAAKD,SAAA,EAAW7E,IAAA,CAAKgB,MAAM,CAAC0H,WAAW,IAAI;oBAAA;oBAAA,CAAA5I,aAAA,GAAA4C,CAAA,WAAI;oBAAA;oBAAA,CAAA5C,aAAA,GAAA4C,CAAA,WAAkB;+BAC/D1C,IAAA,CAAKgB,MAAM,CAAC0H,WAAW,IAAI;oBAAA;oBAAA,CAAA5I,aAAA,GAAA4C,CAAA,WAAI;oBAAA;oBAAA,CAAA5C,aAAA,GAAA4C,CAAA,WAAM,KAAI1C,IAAA,CAAKgB,MAAM,CAAC0H,WAAW,CAAClE,OAAO,CAAC,IAAG;;iCAGjF,IAAAG,WAAA,CAAAG,IAAA,EAAC;kBAAID,SAAA,EAAU;0CACb,IAAAF,WAAA,CAAAC,GAAA,EAAC;8BAAK;mCACN,IAAAD,WAAA,CAAAG,IAAA,EAAC;oBAAKD,SAAA,EAAW7E,IAAA,CAAKgB,MAAM,CAAC2H,UAAU,IAAI;oBAAA;oBAAA,CAAA7I,aAAA,GAAA4C,CAAA,WAAI;oBAAA;oBAAA,CAAA5C,aAAA,GAAA4C,CAAA,WAAmB;+BAC/D1C,IAAA,CAAKgB,MAAM,CAAC2H,UAAU,IAAI;oBAAA;oBAAA,CAAA7I,aAAA,GAAA4C,CAAA,WAAI;oBAAA;oBAAA,CAAA5C,aAAA,GAAA4C,CAAA,WAAM,KAAI1C,IAAA,CAAKgB,MAAM,CAAC2H,UAAU,CAACnE,OAAO,CAAC,IAAG;;;;;2BAQrF,IAAAG,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAC,IAAI;oCACH,IAAAlB,WAAA,CAAAC,GAAA,EAACgB,KAAA,CAAAE,UAAU;wBACT,iBAAAnB,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAG,SAAS;gBAAClB,SAAA,EAAU;wCACnB,IAAAF,WAAA,CAAAC,GAAA,EAACG,YAAA,CAAA6D,SAAS;kBAAC/D,SAAA,EAAU;oBAAY;;6BAIrC,IAAAF,WAAA,CAAAC,GAAA,EAACgB,KAAA,CAAAK,WAAW;wBACV,iBAAAtB,WAAA,CAAAC,GAAA,EAAC;gBAAIC,SAAA,EAAU;0BACZ7E,IAAA,CAAKiB,OAAO,CAAC+F,KAAK,CAAC,GAAG,GAAGC,GAAG,CAAC,CAAC4B,GAAA,EAAKC,KAAA,KAClC;kBAAA;kBAAAhJ,aAAA,GAAAC,CAAA;kBAAAD,aAAA,GAAAI,CAAA;kBAAA,OADkC,aAClC,IAAAyE,WAAA,CAAAG,IAAA,EAAC;oBAAkBD,SAAA,EAAU;4CAC3B,IAAAF,WAAA,CAAAG,IAAA,EAAC;sBAAID,SAAA,EAAU;8CACb,IAAAF,WAAA,CAAAC,GAAA,EAAC;wBAAEC,SAAA,EAAU;kCAAgCgE,GAAA,CAAIA;uCACjD,IAAAlE,WAAA,CAAAG,IAAA,EAAC;wBAAED,SAAA,EAAU;mCACVP,YAAA,CAAauE,GAAA,CAAIE,IAAI,GAAE,WAAQzE,YAAA,CAAauE,GAAA,CAAIG,MAAM,GAAE;;qCAG7D,IAAArE,WAAA,CAAAC,GAAA,EAAC;sBAAIC,SAAA,EAAU;gCACb,iBAAAF,WAAA,CAAAC,GAAA,EAAC;wBAAKC,SAAA,EAAU;kCACbH,gBAAA,CAAiBmE,GAAA,CAAIZ,OAAO;;;qBATzBY,GAAA,CAAIA,GAAG;gBAAA;;;;;uBAqB7B,IAAAlE,WAAA,CAAAC,GAAA,EAAC8C,KAAA,CAAAK,WAAW;QAAC1B,KAAA,EAAM;kBACjB,iBAAA1B,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAC,IAAI;kCACH,IAAAlB,WAAA,CAAAC,GAAA,EAACgB,KAAA,CAAAE,UAAU;sBACT,iBAAAnB,WAAA,CAAAG,IAAA,EAAC;cAAID,SAAA,EAAU;sCACb,IAAAF,WAAA,CAAAG,IAAA,EAAC;wCACC,IAAAH,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAG,SAAS;kBAAClB,SAAA,EAAU;0CACnB,IAAAF,WAAA,CAAAC,GAAA,EAACG,YAAA,CAAAkE,GAAG;oBAACpE,SAAA,EAAU;sBAAY;iCAG7B,IAAAF,WAAA,CAAAC,GAAA,EAACgB,KAAA,CAAAoC,eAAe;4BAAC;;+BAInB,IAAArD,WAAA,CAAAG,IAAA,EAACO,OAAA,CAAAC,MAAM;gBAACG,OAAA,EAASA,CAAA,KAAM;kBAAA;kBAAA3F,aAAA,GAAAC,CAAA;kBAAAD,aAAA,GAAAI,CAAA;kBAAA,OAAA0C,iBAAA;gBAAA;wCACrB,IAAA+B,WAAA,CAAAC,GAAA,EAACG,YAAA,CAAAkE,GAAG;kBAACpE,SAAA,EAAU;oBAAiB;;;2BAKtC,IAAAF,WAAA,CAAAC,GAAA,EAACgB,KAAA,CAAAK,WAAW;sBACV,iBAAAtB,WAAA,CAAAC,GAAA,EAAC;cAAIC,SAAA,EAAU;wBACZ7E,IAAA,CAAKkB,WAAW,CAAC+F,GAAG,CAAEiC,IAAA,IACrB;gBAAA;gBAAApJ,aAAA,GAAAC,CAAA;gBAAAD,aAAA,GAAAI,CAAA;gBAAA,OADqB,aACrB,IAAAyE,WAAA,CAAAG,IAAA,EAAC;kBAAkBD,SAAA,EAAU;0CAC3B,IAAAF,WAAA,CAAAG,IAAA,EAAC;oBAAID,SAAA,EAAU;4CACb,IAAAF,WAAA,CAAAG,IAAA,EAAC;sBAAID,SAAA,EAAU;8CACb,IAAAF,WAAA,CAAAC,GAAA,EAAC;wBAAGC,SAAA,EAAU;kCAAeqE,IAAA,CAAKC;uCAClC,IAAAxE,WAAA,CAAAC,GAAA,EAACuC,MAAA,CAAAC,KAAK;wBAAC7B,OAAA,EACL2D,IAAA,CAAK7E,MAAM,KAAK;wBAAA;wBAAA,CAAAvE,aAAA,GAAA4C,CAAA,WAAc;wBAAA;wBAAA,CAAA5C,aAAA,GAAA4C,CAAA,WAC9BwG,IAAA,CAAK7E,MAAM,KAAK;wBAAA;wBAAA,CAAAvE,aAAA,GAAA4C,CAAA,WAAY;wBAAA;wBAAA,CAAA5C,aAAA,GAAA4C,CAAA,WAC5BwG,IAAA,CAAK7E,MAAM,KAAK;wBAAA;wBAAA,CAAAvE,aAAA,GAAA4C,CAAA,WAAW;wBAAA;wBAAA,CAAA5C,aAAA,GAAA4C,CAAA,WAAgB;kCAE1CwG,IAAA,CAAK7E;;qCAGV,IAAAM,WAAA,CAAAG,IAAA,EAAC;sBAAID,SAAA,EAAU;8CACb,IAAAF,WAAA,CAAAG,IAAA,EAAC;mCAAK,eAASoE,IAAA,CAAKE,YAAY;uCAChC,IAAAzE,WAAA,CAAAG,IAAA,EAAC;mCAAK,aAAUoE,IAAA,CAAKG,UAAU;uCAC/B,IAAA1E,WAAA,CAAAG,IAAA,EAAC;mCAAK,4BAAmB,IAAIpB,IAAA,CAAKwF,IAAA,CAAKI,OAAO,EAAEC,cAAc;;;mCAGlE,IAAA5E,WAAA,CAAAC,GAAA,EAAC;oBAAIC,SAAA,EAAU;;oBACZ;oBAAA,CAAA/E,aAAA,GAAA4C,CAAA,WAAAwG,IAAA,CAAKM,OAAO,GAAG9F,IAAA,CAAK+F,GAAG;oBAAA;oBAAA,CAAA3J,aAAA,GAAA4C,CAAA,wBACtB,IAAAiC,WAAA,CAAAG,IAAA,EAAC;iCAAE,gBAAU,IAAIpB,IAAA,CAAKwF,IAAA,CAAKM,OAAO,EAAED,cAAc;;;mBApB9CL,IAAA,CAAKzB,EAAE;cAAA;;;;uBA+B3B,IAAA9C,WAAA,CAAAC,GAAA,EAAC8C,KAAA,CAAAK,WAAW;QAAC1B,KAAA,EAAM;kBACjB,iBAAA1B,WAAA,CAAAG,IAAA,EAAC;UAAID,SAAA,EAAU;kCACb,IAAAF,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAC,IAAI;oCACH,IAAAlB,WAAA,CAAAC,GAAA,EAACgB,KAAA,CAAAE,UAAU;wBACT,iBAAAnB,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAG,SAAS;gBAAClB,SAAA,EAAU;wCACnB,IAAAF,WAAA,CAAAC,GAAA,EAACG,YAAA,CAAA2E,QAAQ;kBAAC7E,SAAA,EAAU;oBAAY;;6BAIpC,IAAAF,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAK,WAAW;cAACpB,SAAA,EAAU;sCACrB,IAAAF,WAAA,CAAAG,IAAA,EAACO,OAAA,CAAAC,MAAM;gBACLC,OAAA,EAAQ;gBACRV,SAAA,EAAU;gBACVY,OAAA,EAASA,CAAA,KAAM;kBAAA;kBAAA3F,aAAA,GAAAC,CAAA;kBAAAD,aAAA,GAAAI,CAAA;kBAAA,OAAAqC,gBAAA;gBAAA;wCAEf,IAAAoC,WAAA,CAAAC,GAAA,EAACG,YAAA,CAAAyB,QAAQ;kBAAC3B,SAAA,EAAU;oBAAiB;+BAIvC,IAAAF,WAAA,CAAAG,IAAA,EAACO,OAAA,CAAAC,MAAM;gBACLC,OAAA,EAAQ;gBACRV,SAAA,EAAU;gBACVY,OAAA,EAASA,CAAA,KAAM;kBAAA;kBAAA3F,aAAA,GAAAC,CAAA;kBAAAD,aAAA,GAAAI,CAAA;kBAAA,OAAA0C,iBAAA,CAAkB;gBAAA;wCAEjC,IAAA+B,WAAA,CAAAC,GAAA,EAACG,YAAA,CAAAkE,GAAG;kBAACpE,SAAA,EAAU;oBAAiB;+BAIlC,IAAAF,WAAA,CAAAG,IAAA,EAACO,OAAA,CAAAC,MAAM;gBACLC,OAAA,EAAQ;gBACRV,SAAA,EAAU;gBACVY,OAAA,EAAS3C,kBAAA;wCAET,IAAA6B,WAAA,CAAAC,GAAA,EAACG,YAAA,CAAAY,QAAQ;kBAACd,SAAA,EAAU;oBAAiB;;;2BAM3C,IAAAF,WAAA,CAAAG,IAAA,EAACc,KAAA,CAAAC,IAAI;oCACH,IAAAlB,WAAA,CAAAC,GAAA,EAACgB,KAAA,CAAAE,UAAU;wBACT,iBAAAnB,WAAA,CAAAC,GAAA,EAACgB,KAAA,CAAAG,SAAS;0BAAC;;6BAEb,IAAApB,WAAA,CAAAC,GAAA,EAACgB,KAAA,CAAAK,WAAW;cAACpB,SAAA,EAAU;wBACrB,iBAAAF,WAAA,CAAAG,IAAA,EAAC;wCACC,IAAAH,WAAA,CAAAC,GAAA,EAAC;kBAAMC,SAAA,EAAU;4BAAsB;iCACvC,IAAAF,WAAA,CAAAG,IAAA,EAAC;kBACCuB,KAAA,EAAO5F,cAAA;kBACPkJ,QAAA,EAAWC,CAAA,IAAM;oBAAA;oBAAA9J,aAAA,GAAAC,CAAA;oBAAAD,aAAA,GAAAI,CAAA;oBAAA,OAAAQ,iBAAA,CAAkBkJ,CAAA,CAAEC,MAAM,CAACxD,KAAK;kBAAA;kBACjDxB,SAAA,EAAU;0CAEV,IAAAF,WAAA,CAAAC,GAAA,EAAC;oBAAOyB,KAAA,EAAM;8BAAO;mCACrB,IAAA1B,WAAA,CAAAC,GAAA,EAAC;oBAAOyB,KAAA,EAAM;8BAAM;mCACpB,IAAA1B,WAAA,CAAAC,GAAA,EAAC;oBAAOyB,KAAA,EAAM;8BAAO;;;;;;;;;;AAUzC;AAEA;AACA;AACA;AAEA,MAAM3E,YAAA;AAAA;AAAA,CAAA5B,aAAA,GAAAI,CAAA,SAAe;EACnBuG,SAAA,EAAW;EACXP,UAAA,EAAY;EACZK,eAAA,EAAiB;EACjBK,YAAA,EAAc;EACdD,aAAA,EAAe;EACfD,WAAA,EAAa;AACf;AAEA,MAAM/E,cAAA;AAAA;AAAA,CAAA7B,aAAA,GAAAI,CAAA,SAAiB,CACrB;EAAE2C,QAAA,EAAU;EAAeoF,OAAA,EAAS;EAAM1B,eAAA,EAAiB;EAAI2B,aAAA,EAAe;EAAMC,WAAA,EAAa;AAAK,GACtG;EAAEtF,QAAA,EAAU;EAAiBoF,OAAA,EAAS;EAAM1B,eAAA,EAAiB;EAAI2B,aAAA,EAAe;EAAMC,WAAA,EAAa;AAAK,GACxG;EAAEtF,QAAA,EAAU;EAA0BoF,OAAA,EAAS;EAAM1B,eAAA,EAAiB;EAAI2B,aAAA,EAAe;EAAMC,WAAA,EAAa;AAAK,GACjH;EAAEtF,QAAA,EAAU;EAAWoF,OAAA,EAAS;EAAM1B,eAAA,EAAiB;EAAI2B,aAAA,EAAe;EAAMC,WAAA,EAAa;AAAK,EACnG;AAED,MAAMvG,UAAA;AAAA;AAAA,CAAA9B,aAAA,GAAAI,CAAA,SAAa,CACjB;EAAEsC,KAAA,EAAO;EAAUyF,OAAA,EAAS;EAAMI,UAAA,EAAY;EAAGH,aAAA,EAAe;EAAME,YAAA,EAAc;EAAoBE,YAAA,EAAc;AAAK,GAC3H;EAAE9F,KAAA,EAAO;EAASyF,OAAA,EAAS;EAAMI,UAAA,EAAY;EAAGH,aAAA,EAAe;EAAME,YAAA,EAAc;EAAoBE,YAAA,EAAc;AAAI,GACzH;EAAE9F,KAAA,EAAO;EAAOyF,OAAA,EAAS;EAAMI,UAAA,EAAY;EAAIH,aAAA,EAAe;EAAME,YAAA,EAAc;EAAqBE,YAAA,EAAc;AAAI,GACzH;EAAE9F,KAAA,EAAO;EAAWyF,OAAA,EAAS;EAAMI,UAAA,EAAY;EAAGH,aAAA,EAAe;EAAOE,YAAA,EAAc;EAAoBE,YAAA,EAAc;AAAK,EAC9H;AAED,MAAMzG,UAAA;AAAA;AAAA,CAAA/B,aAAA,GAAAI,CAAA,SAAa,CACjB;EAAEuH,EAAA,EAAI;EAAKJ,IAAA,EAAM;EAAelD,QAAA,EAAU;EAAmBmD,OAAA,EAAS;EAA6BC,SAAA,EAAW7D,IAAA,CAAK+F,GAAG,KAAK;EAAQ3C,QAAA,EAAU;AAAM,GACnJ;EAAEW,EAAA,EAAI;EAAKJ,IAAA,EAAM;EAAYlD,QAAA,EAAU;EAAiBmD,OAAA,EAAS;EAAqCC,SAAA,EAAW7D,IAAA,CAAK+F,GAAG,KAAK;EAAQ3C,QAAA,EAAU;AAAM,EACvJ;AAED,MAAMhF,UAAA;AAAA;AAAA,CAAAhC,aAAA,GAAAI,CAAA,SAAa;EACjBsI,YAAA,EAAc;EACdC,aAAA,EAAe,CAAC;EAChBC,WAAA,EAAa;EACbC,UAAA,EAAY,CAAC;AACf;AAEA,MAAM5G,WAAA;AAAA;AAAA,CAAAjC,aAAA,GAAAI,CAAA,SAAc,CAClB;EAAE2I,GAAA,EAAK;EAAoBE,IAAA,EAAM;EAAMC,MAAA,EAAQ;EAAKf,OAAA,EAAS;AAAK,GAClE;EAAEY,GAAA,EAAK;EAAmBE,IAAA,EAAM;EAAKC,MAAA,EAAQ;EAAIf,OAAA,EAAS;AAAK,GAC/D;EAAEY,GAAA,EAAK;EAAmBE,IAAA,EAAM;EAAKC,MAAA,EAAQ;EAAKf,OAAA,EAAS;AAAK,GAChE;EAAEY,GAAA,EAAK;EAAiBE,IAAA,EAAM;EAAKC,MAAA,EAAQ;EAAIf,OAAA,EAAS;AAAK,GAC7D;EAAEY,GAAA,EAAK;EAAiBE,IAAA,EAAM;EAAKC,MAAA,EAAQ;EAAIf,OAAA,EAAS;AAAK,EAC9D;AAED,MAAMjG,eAAA;AAAA;AAAA,CAAAlC,aAAA,GAAAI,CAAA,SAAkB,CACtB;EAAEuH,EAAA,EAAI;EAAK0B,IAAA,EAAM;EAAuB9E,MAAA,EAAQ;EAAsBiF,OAAA,EAAS5F,IAAA,CAAK+F,GAAG,KAAK;EAASD,OAAA,EAAS9F,IAAA,CAAK+F,GAAG,KAAK;EAASL,YAAA,EAAc;EAAIC,UAAA,EAAY;AAAE,GACpK;EAAE5B,EAAA,EAAI;EAAK0B,IAAA,EAAM;EAA0B9E,MAAA,EAAQ;EAAsBiF,OAAA,EAAS5F,IAAA,CAAK+F,GAAG,KAAK;EAASD,OAAA,EAAS9F,IAAA,CAAK+F,GAAG,KAAK;EAASL,YAAA,EAAc;EAAIC,UAAA,EAAY;AAAE,GACvK;EAAE5B,EAAA,EAAI;EAAK0B,IAAA,EAAM;EAAyB9E,MAAA,EAAQ;EAAsBiF,OAAA,EAAS5F,IAAA,CAAK+F,GAAG,KAAK;EAAQD,OAAA,EAAS9F,IAAA,CAAK+F,GAAG,KAAK;EAASL,YAAA,EAAc;EAAIC,UAAA,EAAY;AAAE,EACtK","ignoreList":[]}