{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\utils\\product-utils.ts"],"sourcesContent":["// Utilidades para manejo de productos\n\nexport interface ProductType {\n  id: string\n  name: string\n  hasColorSelector: boolean\n  capacityUnit: 'litros' | 'kg' | 'unidades' | 'metros'\n  defaultCapacities: string[]\n  category: string\n  // Nuevos selectores específicos\n  hasGrainSelector?: boolean // Para lijas\n  hasSizeSelector?: boolean // Para pinceles\n  hasWidthSelector?: boolean // Para cintas de papel\n  grainOptions?: string[] // Opciones de grano para lijas\n  sizeOptions?: string[] // Opciones de tamaño para pinceles\n  widthOptions?: string[] // Opciones de ancho para cintas\n  // Configuración de colores permitidos\n  allowedColorCategories?: string[] // Categorías de colores permitidas para este tipo de producto\n}\n\n// Configuración de tipos de productos\nexport const PRODUCT_TYPES: ProductType[] = [\n  {\n    id: 'pinturas-latex',\n    name: 'Pinturas Látex',\n    hasColorSelector: true,\n    capacityUnit: 'litros',\n    defaultCapacities: ['1L', '4L', '10L', '20L'],\n    category: 'pinturas',\n    allowedColorCategories: ['Neutros', 'Cálidos', 'Fríos', 'Tierras'], // Látex tiene todos los colores generales\n  },\n  {\n    id: 'pinturas-esmalte',\n    name: 'Pinturas Esmalte',\n    hasColorSelector: true,\n    capacityUnit: 'litros',\n    defaultCapacities: ['1L', '4L', '10L', '20L'],\n    category: 'pinturas',\n    allowedColorCategories: ['Neutros', 'Cálidos', 'Fríos', 'Tierras', 'Sintético'], // Esmalte sintético incluye más colores\n  },\n  {\n    id: 'impregnante-madera',\n    name: 'Impregnante para Madera',\n    hasColorSelector: true,\n    capacityUnit: 'litros',\n    defaultCapacities: ['1L', '4L', '10L'],\n    category: 'protectores',\n    allowedColorCategories: ['Madera'], // Solo colores de madera\n  },\n  {\n    id: 'poximix',\n    name: 'Poximix',\n    hasColorSelector: false, // Solo viene en gris\n    capacityUnit: 'kg',\n    defaultCapacities: ['5kg', '10kg', '25kg'],\n    category: 'adhesivos',\n  },\n  {\n    id: 'lijas',\n    name: 'Lijas',\n    hasColorSelector: false,\n    capacityUnit: 'unidades',\n    defaultCapacities: ['1 unidad', '5 unidades', '10 unidades'],\n    category: 'herramientas',\n    hasGrainSelector: true,\n    grainOptions: ['80', '120', '150', '220', '320', '400', '600', '800'],\n  },\n  {\n    id: 'bandejas',\n    name: 'Bandejas',\n    hasColorSelector: false,\n    capacityUnit: 'unidades',\n    defaultCapacities: ['1 unidad'],\n    category: 'accesorios',\n  },\n  {\n    id: 'pinceles',\n    name: 'Pinceles',\n    hasColorSelector: false,\n    capacityUnit: 'unidades',\n    defaultCapacities: ['1 unidad'],\n    category: 'herramientas',\n    hasSizeSelector: true,\n    sizeOptions: ['1/2\"', '1\"', '1 1/2\"', '2\"', '2 1/2\"', '3\"', '4\"'],\n  },\n  {\n    id: 'rodillos',\n    name: 'Rodillos',\n    hasColorSelector: false,\n    capacityUnit: 'unidades',\n    defaultCapacities: ['1 unidad'],\n    category: 'herramientas',\n  },\n  {\n    id: 'cintas-papel',\n    name: 'Cintas de Papel',\n    hasColorSelector: false,\n    capacityUnit: 'metros',\n    defaultCapacities: ['25m', '50m'],\n    category: 'accesorios',\n    hasWidthSelector: true,\n    widthOptions: ['12mm', '18mm', '24mm', '36mm', '48mm', '72mm'],\n  },\n]\n\n// Función para detectar el tipo de producto basado en nombre y categoría\nexport const detectProductType = (productName: string, category?: string): ProductType => {\n  const name = productName.toLowerCase()\n\n  // Detección específica por nombre\n  if (name.includes('poximix')) {\n    return PRODUCT_TYPES.find(type => type.id === 'poximix')!\n  }\n\n  // Detección de impregnantes para madera (como Danzke)\n  if (\n    name.includes('impregnante') ||\n    name.includes('danzke') ||\n    (name.includes('protector') && name.includes('madera'))\n  ) {\n    return PRODUCT_TYPES.find(type => type.id === 'impregnante-madera')!\n  }\n\n  // Detección específica para Sintético Converlux\n  if (name.includes('converlux') || name.includes('sintético') || name.includes('sintetico')) {\n    return PRODUCT_TYPES.find(type => type.id === 'pinturas-esmalte')!\n  }\n\n  // Detección de productos sintéticos (esmaltes, converlux, etc.)\n  if (\n    name.includes('esmalte') ||\n    name.includes('sintetico') ||\n    name.includes('sintético') ||\n    name.includes('converlux') ||\n    name.includes('convertidor') ||\n    (name.includes('metal') && name.includes('madera'))\n  ) {\n    return PRODUCT_TYPES.find(type => type.id === 'pinturas-esmalte')!\n  }\n\n  // Detección de pinturas látex (recuplast, interior, etc.)\n  if (\n    name.includes('latex') ||\n    name.includes('látex') ||\n    name.includes('recuplast') ||\n    name.includes('interior') ||\n    name.includes('exterior') ||\n    name.includes('acrilico') ||\n    name.includes('acrílico')\n  ) {\n    return PRODUCT_TYPES.find(type => type.id === 'pinturas-latex')!\n  }\n\n  if (name.includes('lija')) {\n    return PRODUCT_TYPES.find(type => type.id === 'lijas')!\n  }\n\n  if (name.includes('bandeja')) {\n    return PRODUCT_TYPES.find(type => type.id === 'bandejas')!\n  }\n\n  if (name.includes('pincel')) {\n    return PRODUCT_TYPES.find(type => type.id === 'pinceles')!\n  }\n\n  if (name.includes('rodillo')) {\n    return PRODUCT_TYPES.find(type => type.id === 'rodillos')!\n  }\n\n  if (name.includes('cinta') && (name.includes('papel') || name.includes('enmascarar'))) {\n    return PRODUCT_TYPES.find(type => type.id === 'cintas-papel')!\n  }\n\n  // Detección por categoría\n  if (category) {\n    const cat = category.toLowerCase()\n\n    if (cat.includes('pintura') || cat.includes('latex') || cat.includes('esmalte')) {\n      // Distinguir entre esmalte sintético y látex\n      if (\n        name.includes('esmalte') ||\n        name.includes('sintetico') ||\n        name.includes('sintético') ||\n        name.includes('converlux')\n      ) {\n        return PRODUCT_TYPES.find(type => type.id === 'pinturas-esmalte')!\n      }\n      return PRODUCT_TYPES.find(type => type.id === 'pinturas-latex')!\n    }\n\n    if (cat.includes('protector') || cat.includes('impregnante')) {\n      return PRODUCT_TYPES.find(type => type.id === 'impregnante-madera')!\n    }\n\n    if (cat.includes('adhesivo') || cat.includes('pegamento')) {\n      return PRODUCT_TYPES.find(type => type.id === 'poximix')!\n    }\n\n    if (cat.includes('herramienta')) {\n      return PRODUCT_TYPES.find(type => type.id === 'pinceles')!\n    }\n\n    if (cat.includes('accesorio')) {\n      return PRODUCT_TYPES.find(type => type.id === 'bandejas')!\n    }\n  }\n\n  // Por defecto, asumir que es pintura látex\n  return PRODUCT_TYPES.find(type => type.id === 'pinturas-latex')!\n}\n\n// Función para obtener capacidades formateadas según la unidad\nexport const formatCapacity = (capacity: string, unit: string): string => {\n  // Si la capacidad es \"Sin especificar\", devolverla tal como está\n  if (capacity === 'Sin especificar') {\n    return capacity\n  }\n\n  switch (unit) {\n    case 'litros':\n      // Verificar si ya termina con 'L' (mayúscula) o 'l' (minúscula)\n      if (capacity.endsWith('L') || capacity.endsWith('l')) {\n        // Si termina con 'l' minúscula, convertir a 'L' mayúscula\n        return capacity.endsWith('l') ? capacity.slice(0, -1) + 'L' : capacity\n      }\n      return `${capacity}L`\n    case 'kg':\n      return capacity.endsWith('kg') ? capacity : `${capacity}kg`\n    case 'metros':\n      return capacity.endsWith('m') ? capacity : `${capacity}m`\n    case 'unidades':\n      return capacity.includes('unidad')\n        ? capacity\n        : `${capacity} unidad${capacity !== '1' ? 'es' : ''}`\n    default:\n      return capacity\n  }\n}\n\n// Función para obtener el color por defecto según el tipo de producto\nexport const getDefaultColor = (productType: ProductType): string => {\n  if (!productType.hasColorSelector) {\n    // Productos sin selector de color tienen un color fijo\n    if (productType.id === 'poximix') return 'gris'\n    return 'natural'\n  }\n\n  return 'blanco-puro' // Color por defecto para productos con selector\n}\n"],"names":["PRODUCT_TYPES","detectProductType","formatCapacity","getDefaultColor","id","name","hasColorSelector","capacityUnit","defaultCapacities","category","allowedColorCategories","hasGrainSelector","grainOptions","hasSizeSelector","sizeOptions","hasWidthSelector","widthOptions","productName","toLowerCase","includes","find","type","cat","capacity","unit","endsWith","slice","productType"],"mappings":"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"}