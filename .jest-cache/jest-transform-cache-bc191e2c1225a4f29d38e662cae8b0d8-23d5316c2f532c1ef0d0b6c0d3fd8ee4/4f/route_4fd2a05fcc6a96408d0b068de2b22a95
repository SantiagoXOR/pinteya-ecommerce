7c53ac50749c9cddbbc612417bd7fac9
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_6664vzfau() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\profile\\route.ts";
  var hash = "812b91c959fac4a0ce7a14d5ac00cb32652693ff";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\profile\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 54
        }
      },
      "9": {
        start: {
          line: 25,
          column: 17
        },
        end: {
          line: 25,
          column: 72
        }
      },
      "10": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 24
        }
      },
      "11": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 104,
          column: 5
        }
      },
      "12": {
        start: {
          line: 30,
          column: 24
        },
        end: {
          line: 30,
          column: 49
        }
      },
      "13": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "14": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 36,
          column: 15
        }
      },
      "15": {
        start: {
          line: 38,
          column: 25
        },
        end: {
          line: 38,
          column: 59
        }
      },
      "16": {
        start: {
          line: 40,
          column: 53
        },
        end: {
          line: 40,
          column: 232
        }
      },
      "17": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "18": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 60
        }
      },
      "19": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 47,
          column: 15
        }
      },
      "20": {
        start: {
          line: 50,
          column: 53
        },
        end: {
          line: 55,
          column: 10
        }
      },
      "21": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "22": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 65
        }
      },
      "23": {
        start: {
          line: 60,
          column: 22
        },
        end: {
          line: 60,
          column: 60
        }
      },
      "24": {
        start: {
          line: 61,
          column: 66
        },
        end: {
          line: 61,
          column: 266
        }
      },
      "25": {
        start: {
          line: 62,
          column: 34
        },
        end: {
          line: 62,
          column: 35
        }
      },
      "26": {
        start: {
          line: 63,
          column: 28
        },
        end: {
          line: 63,
          column: 29
        }
      },
      "27": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "28": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 69,
          column: 15
        }
      },
      "29": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 68,
          column: 17
        }
      },
      "30": {
        start: {
          line: 67,
          column: 20
        },
        end: {
          line: 67,
          column: 118
        }
      },
      "31": {
        start: {
          line: 67,
          column: 78
        },
        end: {
          line: 67,
          column: 109
        }
      },
      "32": {
        start: {
          line: 72,
          column: 63
        },
        end: {
          line: 72,
          column: 242
        }
      },
      "33": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "34": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 99
        }
      },
      "35": {
        start: {
          line: 74,
          column: 61
        },
        end: {
          line: 74,
          column: 94
        }
      },
      "36": {
        start: {
          line: 76,
          column: 25
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "37": {
        start: {
          line: 93,
          column: 88
        },
        end: {
          line: 93,
          column: 125
        }
      },
      "38": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 51
        }
      },
      "39": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 61
        }
      },
      "40": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 103,
          column: 11
        }
      },
      "41": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 144,
          column: 5
        }
      },
      "42": {
        start: {
          line: 109,
          column: 24
        },
        end: {
          line: 109,
          column: 49
        }
      },
      "43": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "44": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 115,
          column: 15
        }
      },
      "45": {
        start: {
          line: 117,
          column: 21
        },
        end: {
          line: 117,
          column: 41
        }
      },
      "46": {
        start: {
          line: 118,
          column: 45
        },
        end: {
          line: 118,
          column: 49
        }
      },
      "47": {
        start: {
          line: 119,
          column: 25
        },
        end: {
          line: 119,
          column: 59
        }
      },
      "48": {
        start: {
          line: 121,
          column: 40
        },
        end: {
          line: 125,
          column: 60
        }
      },
      "49": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "50": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 59
        }
      },
      "51": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 132,
          column: 15
        }
      },
      "52": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 136,
          column: 11
        }
      },
      "53": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 68
        }
      },
      "54": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 143,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "GET",
        decl: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 18
          }
        },
        loc: {
          start: {
            line: 27,
            column: 28
          },
          end: {
            line: 105,
            column: 1
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 65,
            column: 36
          },
          end: {
            line: 65,
            column: 37
          }
        },
        loc: {
          start: {
            line: 65,
            column: 45
          },
          end: {
            line: 69,
            column: 13
          }
        },
        line: 65
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 67,
            column: 66
          },
          end: {
            line: 67,
            column: 67
          }
        },
        loc: {
          start: {
            line: 67,
            column: 78
          },
          end: {
            line: 67,
            column: 109
          }
        },
        line: 67
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 74,
            column: 47
          },
          end: {
            line: 74,
            column: 48
          }
        },
        loc: {
          start: {
            line: 74,
            column: 61
          },
          end: {
            line: 74,
            column: 94
          }
        },
        line: 74
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 93,
            column: 74
          },
          end: {
            line: 93,
            column: 75
          }
        },
        loc: {
          start: {
            line: 93,
            column: 88
          },
          end: {
            line: 93,
            column: 125
          }
        },
        line: 93
      },
      "9": {
        name: "PUT",
        decl: {
          start: {
            line: 106,
            column: 15
          },
          end: {
            line: 106,
            column: 18
          }
        },
        loc: {
          start: {
            line: 106,
            column: 28
          },
          end: {
            line: 145,
            column: 1
          }
        },
        line: 106
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "2": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 23
          }
        }, {
          start: {
            line: 41,
            column: 27
          },
          end: {
            line: 41,
            column: 34
          }
        }],
        line: 41
      },
      "3": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "4": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "5": {
        loc: {
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 68,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 68,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "6": {
        loc: {
          start: {
            line: 66,
            column: 20
          },
          end: {
            line: 66,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 20
          },
          end: {
            line: 66,
            column: 35
          }
        }, {
          start: {
            line: 66,
            column: 39
          },
          end: {
            line: 66,
            column: 69
          }
        }],
        line: 66
      },
      "7": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "8": {
        loc: {
          start: {
            line: 74,
            column: 68
          },
          end: {
            line: 74,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 68
          },
          end: {
            line: 74,
            column: 88
          }
        }, {
          start: {
            line: 74,
            column: 92
          },
          end: {
            line: 74,
            column: 93
          }
        }],
        line: 74
      },
      "9": {
        loc: {
          start: {
            line: 88,
            column: 20
          },
          end: {
            line: 88,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 20
          },
          end: {
            line: 88,
            column: 26
          }
        }, {
          start: {
            line: 88,
            column: 30
          },
          end: {
            line: 88,
            column: 32
          }
        }],
        line: 88
      },
      "10": {
        loc: {
          start: {
            line: 93,
            column: 28
          },
          end: {
            line: 93,
            column: 150
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 93,
            column: 49
          },
          end: {
            line: 93,
            column: 146
          }
        }, {
          start: {
            line: 93,
            column: 149
          },
          end: {
            line: 93,
            column: 150
          }
        }],
        line: 93
      },
      "11": {
        loc: {
          start: {
            line: 93,
            column: 95
          },
          end: {
            line: 93,
            column: 124
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 95
          },
          end: {
            line: 93,
            column: 119
          }
        }, {
          start: {
            line: 93,
            column: 123
          },
          end: {
            line: 93,
            column: 124
          }
        }],
        line: 93
      },
      "12": {
        loc: {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "13": {
        loc: {
          start: {
            line: 122,
            column: 20
          },
          end: {
            line: 122,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 20
          },
          end: {
            line: 122,
            column: 26
          }
        }, {
          start: {
            line: 122,
            column: 30
          },
          end: {
            line: 122,
            column: 39
          }
        }],
        line: 122
      },
      "14": {
        loc: {
          start: {
            line: 123,
            column: 30
          },
          end: {
            line: 123,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 30
          },
          end: {
            line: 123,
            column: 46
          }
        }, {
          start: {
            line: 123,
            column: 50
          },
          end: {
            line: 123,
            column: 59
          }
        }],
        line: 123
      },
      "15": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\profile\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n/**\r\n * API para obtener el perfil del driver y sus rutas asignadas\r\n * GET /api/driver/profile\r\n */\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { createClient } from '@/lib/integrations/supabase/server';\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    \r\n    if (!session?.user?.email) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const supabase = await createClient();\r\n\r\n    // Obtener informaci\xF3n del driver\r\n    const { data: driver, error: driverError } = await supabase\r\n      .from('drivers')\r\n      .select('id, first_name, last_name, email, phone, status, rating, total_deliveries, created_at, updated_at')\r\n      .eq('email', session.user.email)\r\n      .single();\r\n\r\n    if (driverError || !driver) {\r\n      console.error('Driver not found:', driverError);\r\n      return NextResponse.json(\r\n        { error: 'Driver no encontrado' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Obtener rutas asignadas al driver\r\n    const { data: routes, error: routesError } = await supabase\r\n      .from('optimized_routes')\r\n      .select('*')\r\n      .eq('driver_id', driver.id)\r\n      .in('status', ['planned', 'active'])\r\n      .order('created_at', { ascending: true });\r\n\r\n    if (routesError) {\r\n      console.error('Error fetching routes:', routesError);\r\n    }\r\n\r\n    // Obtener estad\xEDsticas del d\xEDa\r\n    const today = new Date().toISOString().split('T')[0];\r\n    \r\n    const { data: todayDeliveries, error: deliveriesError } = await supabase\r\n      .from('optimized_routes')\r\n      .select('shipments')\r\n      .eq('driver_id', driver.id)\r\n      .eq('status', 'completed')\r\n      .gte('created_at', `${today}T00:00:00.000Z`)\r\n      .lte('created_at', `${today}T23:59:59.999Z`);\r\n\r\n    let completedDeliveries = 0;\r\n    let totalDistance = 0;\r\n\r\n    if (todayDeliveries) {\r\n      todayDeliveries.forEach(route => {\r\n        if (route.shipments && Array.isArray(route.shipments)) {\r\n          completedDeliveries += route.shipments.filter(\r\n            (shipment: any) => shipment.status === 'delivered'\r\n          ).length;\r\n        }\r\n      });\r\n    }\r\n\r\n    // Calcular distancia total del d\xEDa\r\n    const { data: todayRoutes, error: todayRoutesError } = await supabase\r\n      .from('optimized_routes')\r\n      .select('total_distance')\r\n      .eq('driver_id', driver.id)\r\n      .gte('created_at', `${today}T00:00:00.000Z`)\r\n      .lte('created_at', `${today}T23:59:59.999Z`);\r\n\r\n    if (todayRoutes) {\r\n      totalDistance = todayRoutes.reduce(\r\n        (sum, route) => sum + (route.total_distance || 0), \r\n        0\r\n      );\r\n    }\r\n\r\n    const response = {\r\n      driver: {\r\n        id: driver.id,\r\n        name: `${driver.first_name} ${driver.last_name}`,\r\n        first_name: driver.first_name,\r\n        last_name: driver.last_name,\r\n        email: driver.email,\r\n        phone: driver.phone,\r\n        status: driver.status,\r\n        rating: driver.rating,\r\n        total_deliveries: driver.total_deliveries\r\n      },\r\n      routes: routes || [],\r\n      todayStats: {\r\n        completedDeliveries,\r\n        totalDistance: Math.round(totalDistance * 100) / 100,\r\n        activeTime: '0h 0m', // TODO: Implementar tracking de tiempo activo\r\n        efficiency: routes?.length > 0 ? \r\n          Math.round(routes.reduce((sum, route) => sum + (route.optimization_score || 0), 0) / routes.length) : 0\r\n      }\r\n    };\r\n\r\n    return NextResponse.json(response);\r\n\r\n  } catch (error) {\r\n    console.error('Error in driver profile API:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function PUT(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    \r\n    if (!session?.user?.email) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const body = await request.json();\r\n    const { status, current_location } = body;\r\n\r\n    const supabase = await createClient();\r\n\r\n    // Actualizar informaci\xF3n del driver\r\n    const { data: driver, error } = await supabase\r\n      .from('drivers')\r\n      .update({\r\n        status: status || undefined,\r\n        current_location: current_location || undefined,\r\n        updated_at: new Date().toISOString()\r\n      })\r\n      .eq('email', session.user.email)\r\n      .select()\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('Error updating driver:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error actualizando driver' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({ driver });\r\n\r\n  } catch (error) {\r\n    console.error('Error in driver profile update API:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "PUT", "runtime", "request", "session", "auth", "user", "email", "NextResponse", "json", "error", "status", "supabase", "createClient", "data", "driver", "driverError", "from", "select", "eq", "single", "console", "routes", "routesError", "id", "in", "order", "ascending", "today", "Date", "toISOString", "split", "todayDeliveries", "deliveriesError", "gte", "lte", "completedDeliveries", "totalDistance", "forEach", "route", "shipments", "Array", "isArray", "filter", "shipment", "length", "todayRoutes", "todayRoutesError", "reduce", "sum", "total_distance", "response", "name", "first_name", "last_name", "phone", "rating", "total_deliveries", "todayStats", "Math", "round", "activeTime", "efficiency", "optimization_score", "body", "current_location", "update", "undefined", "updated_at"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "812b91c959fac4a0ce7a14d5ac00cb32652693ff"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_6664vzfau = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_6664vzfau();
cov_6664vzfau().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_6664vzfau().f[0]++;
  cov_6664vzfau().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_6664vzfau().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_6664vzfau().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_6664vzfau().f[1]++;
    cov_6664vzfau().s[4]++;
    return GET;
  },
  get PUT() {
    /* istanbul ignore next */
    cov_6664vzfau().f[2]++;
    cov_6664vzfau().s[5]++;
    return PUT;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_6664vzfau().f[3]++;
    cov_6664vzfau().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_6664vzfau().s[7]++, require("next/server"));
const _config =
/* istanbul ignore next */
(cov_6664vzfau().s[8]++, require("../../../../lib/auth/config"));
const _server1 =
/* istanbul ignore next */
(cov_6664vzfau().s[9]++, require("../../../../lib/integrations/supabase/server"));
const runtime =
/* istanbul ignore next */
(cov_6664vzfau().s[10]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_6664vzfau().f[4]++;
  cov_6664vzfau().s[11]++;
  try {
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_6664vzfau().s[12]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_6664vzfau().s[13]++;
    if (!session?.user?.email) {
      /* istanbul ignore next */
      cov_6664vzfau().b[0][0]++;
      cov_6664vzfau().s[14]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_6664vzfau().b[0][1]++;
    }
    const supabase =
    /* istanbul ignore next */
    (cov_6664vzfau().s[15]++, await (0, _server1.createClient)());
    // Obtener informaciÃ³n del driver
    const {
      data: driver,
      error: driverError
    } =
    /* istanbul ignore next */
    (cov_6664vzfau().s[16]++, await supabase.from('drivers').select('id, first_name, last_name, email, phone, status, rating, total_deliveries, created_at, updated_at').eq('email', session.user.email).single());
    /* istanbul ignore next */
    cov_6664vzfau().s[17]++;
    if (
    /* istanbul ignore next */
    (cov_6664vzfau().b[2][0]++, driverError) ||
    /* istanbul ignore next */
    (cov_6664vzfau().b[2][1]++, !driver)) {
      /* istanbul ignore next */
      cov_6664vzfau().b[1][0]++;
      cov_6664vzfau().s[18]++;
      console.error('Driver not found:', driverError);
      /* istanbul ignore next */
      cov_6664vzfau().s[19]++;
      return _server.NextResponse.json({
        error: 'Driver no encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_6664vzfau().b[1][1]++;
    }
    // Obtener rutas asignadas al driver
    const {
      data: routes,
      error: routesError
    } =
    /* istanbul ignore next */
    (cov_6664vzfau().s[20]++, await supabase.from('optimized_routes').select('*').eq('driver_id', driver.id).in('status', ['planned', 'active']).order('created_at', {
      ascending: true
    }));
    /* istanbul ignore next */
    cov_6664vzfau().s[21]++;
    if (routesError) {
      /* istanbul ignore next */
      cov_6664vzfau().b[3][0]++;
      cov_6664vzfau().s[22]++;
      console.error('Error fetching routes:', routesError);
    } else
    /* istanbul ignore next */
    {
      cov_6664vzfau().b[3][1]++;
    }
    // Obtener estadÃ­sticas del dÃ­a
    const today =
    /* istanbul ignore next */
    (cov_6664vzfau().s[23]++, new Date().toISOString().split('T')[0]);
    const {
      data: todayDeliveries,
      error: deliveriesError
    } =
    /* istanbul ignore next */
    (cov_6664vzfau().s[24]++, await supabase.from('optimized_routes').select('shipments').eq('driver_id', driver.id).eq('status', 'completed').gte('created_at', `${today}T00:00:00.000Z`).lte('created_at', `${today}T23:59:59.999Z`));
    let completedDeliveries =
    /* istanbul ignore next */
    (cov_6664vzfau().s[25]++, 0);
    let totalDistance =
    /* istanbul ignore next */
    (cov_6664vzfau().s[26]++, 0);
    /* istanbul ignore next */
    cov_6664vzfau().s[27]++;
    if (todayDeliveries) {
      /* istanbul ignore next */
      cov_6664vzfau().b[4][0]++;
      cov_6664vzfau().s[28]++;
      todayDeliveries.forEach(route => {
        /* istanbul ignore next */
        cov_6664vzfau().f[5]++;
        cov_6664vzfau().s[29]++;
        if (
        /* istanbul ignore next */
        (cov_6664vzfau().b[6][0]++, route.shipments) &&
        /* istanbul ignore next */
        (cov_6664vzfau().b[6][1]++, Array.isArray(route.shipments))) {
          /* istanbul ignore next */
          cov_6664vzfau().b[5][0]++;
          cov_6664vzfau().s[30]++;
          completedDeliveries += route.shipments.filter(shipment => {
            /* istanbul ignore next */
            cov_6664vzfau().f[6]++;
            cov_6664vzfau().s[31]++;
            return shipment.status === 'delivered';
          }).length;
        } else
        /* istanbul ignore next */
        {
          cov_6664vzfau().b[5][1]++;
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_6664vzfau().b[4][1]++;
    }
    // Calcular distancia total del dÃ­a
    const {
      data: todayRoutes,
      error: todayRoutesError
    } =
    /* istanbul ignore next */
    (cov_6664vzfau().s[32]++, await supabase.from('optimized_routes').select('total_distance').eq('driver_id', driver.id).gte('created_at', `${today}T00:00:00.000Z`).lte('created_at', `${today}T23:59:59.999Z`));
    /* istanbul ignore next */
    cov_6664vzfau().s[33]++;
    if (todayRoutes) {
      /* istanbul ignore next */
      cov_6664vzfau().b[7][0]++;
      cov_6664vzfau().s[34]++;
      totalDistance = todayRoutes.reduce((sum, route) => {
        /* istanbul ignore next */
        cov_6664vzfau().f[7]++;
        cov_6664vzfau().s[35]++;
        return sum + (
        /* istanbul ignore next */
        (cov_6664vzfau().b[8][0]++, route.total_distance) ||
        /* istanbul ignore next */
        (cov_6664vzfau().b[8][1]++, 0));
      }, 0);
    } else
    /* istanbul ignore next */
    {
      cov_6664vzfau().b[7][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_6664vzfau().s[36]++, {
      driver: {
        id: driver.id,
        name: `${driver.first_name} ${driver.last_name}`,
        first_name: driver.first_name,
        last_name: driver.last_name,
        email: driver.email,
        phone: driver.phone,
        status: driver.status,
        rating: driver.rating,
        total_deliveries: driver.total_deliveries
      },
      routes:
      /* istanbul ignore next */
      (cov_6664vzfau().b[9][0]++, routes) ||
      /* istanbul ignore next */
      (cov_6664vzfau().b[9][1]++, []),
      todayStats: {
        completedDeliveries,
        totalDistance: Math.round(totalDistance * 100) / 100,
        activeTime: '0h 0m',
        efficiency: routes?.length > 0 ?
        /* istanbul ignore next */
        (cov_6664vzfau().b[10][0]++, Math.round(routes.reduce((sum, route) => {
          /* istanbul ignore next */
          cov_6664vzfau().f[8]++;
          cov_6664vzfau().s[37]++;
          return sum + (
          /* istanbul ignore next */
          (cov_6664vzfau().b[11][0]++, route.optimization_score) ||
          /* istanbul ignore next */
          (cov_6664vzfau().b[11][1]++, 0));
        }, 0) / routes.length)) :
        /* istanbul ignore next */
        (cov_6664vzfau().b[10][1]++, 0)
      }
    });
    /* istanbul ignore next */
    cov_6664vzfau().s[38]++;
    return _server.NextResponse.json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_6664vzfau().s[39]++;
    console.error('Error in driver profile API:', error);
    /* istanbul ignore next */
    cov_6664vzfau().s[40]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function PUT(request) {
  /* istanbul ignore next */
  cov_6664vzfau().f[9]++;
  cov_6664vzfau().s[41]++;
  try {
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_6664vzfau().s[42]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_6664vzfau().s[43]++;
    if (!session?.user?.email) {
      /* istanbul ignore next */
      cov_6664vzfau().b[12][0]++;
      cov_6664vzfau().s[44]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_6664vzfau().b[12][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_6664vzfau().s[45]++, await request.json());
    const {
      status,
      current_location
    } =
    /* istanbul ignore next */
    (cov_6664vzfau().s[46]++, body);
    const supabase =
    /* istanbul ignore next */
    (cov_6664vzfau().s[47]++, await (0, _server1.createClient)());
    // Actualizar informaciÃ³n del driver
    const {
      data: driver,
      error
    } =
    /* istanbul ignore next */
    (cov_6664vzfau().s[48]++, await supabase.from('drivers').update({
      status:
      /* istanbul ignore next */
      (cov_6664vzfau().b[13][0]++, status) ||
      /* istanbul ignore next */
      (cov_6664vzfau().b[13][1]++, undefined),
      current_location:
      /* istanbul ignore next */
      (cov_6664vzfau().b[14][0]++, current_location) ||
      /* istanbul ignore next */
      (cov_6664vzfau().b[14][1]++, undefined),
      updated_at: new Date().toISOString()
    }).eq('email', session.user.email).select().single());
    /* istanbul ignore next */
    cov_6664vzfau().s[49]++;
    if (error) {
      /* istanbul ignore next */
      cov_6664vzfau().b[15][0]++;
      cov_6664vzfau().s[50]++;
      console.error('Error updating driver:', error);
      /* istanbul ignore next */
      cov_6664vzfau().s[51]++;
      return _server.NextResponse.json({
        error: 'Error actualizando driver'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_6664vzfau().b[15][1]++;
    }
    cov_6664vzfau().s[52]++;
    return _server.NextResponse.json({
      driver
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_6664vzfau().s[53]++;
    console.error('Error in driver profile update API:', error);
    /* istanbul ignore next */
    cov_6664vzfau().s[54]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,