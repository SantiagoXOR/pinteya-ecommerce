409a90b8de87547c9661d9ec1ffdb281
// ===================================
// PINTEYA E-COMMERCE - STRICT ORDERS HOOK (REFACTORED)
// Hook orquestador para gestión de órdenes con validación estricta
// ===================================
"use strict";

/* istanbul ignore next */
function cov_3yn7trxgi() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useOrdersEnterpriseStrict.ts";
  var hash = "5bd9da45561e7bfeb44c0171ad3ba3691f647b99";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useOrdersEnterpriseStrict.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "2": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "3": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 36
        }
      },
      "5": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 41
        }
      },
      "6": {
        start: {
          line: 23,
          column: 15
        },
        end: {
          line: 23,
          column: 31
        }
      },
      "7": {
        start: {
          line: 24,
          column: 18
        },
        end: {
          line: 24,
          column: 41
        }
      },
      "8": {
        start: {
          line: 25,
          column: 19
        },
        end: {
          line: 25,
          column: 52
        }
      },
      "9": {
        start: {
          line: 26,
          column: 23
        },
        end: {
          line: 26,
          column: 60
        }
      },
      "10": {
        start: {
          line: 27,
          column: 24
        },
        end: {
          line: 27,
          column: 51
        }
      },
      "11": {
        start: {
          line: 28,
          column: 22
        },
        end: {
          line: 28,
          column: 47
        }
      },
      "12": {
        start: {
          line: 29,
          column: 24
        },
        end: {
          line: 29,
          column: 51
        }
      },
      "13": {
        start: {
          line: 30,
          column: 33
        },
        end: {
          line: 30,
          column: 69
        }
      },
      "14": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 37,
          column: 6
        }
      },
      "15": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 30
        }
      },
      "16": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 54
        }
      },
      "17": {
        start: {
          line: 36,
          column: 33
        },
        end: {
          line: 36,
          column: 46
        }
      },
      "18": {
        start: {
          line: 39,
          column: 24
        },
        end: {
          line: 46,
          column: 1
        }
      },
      "19": {
        start: {
          line: 48,
          column: 22
        },
        end: {
          line: 48,
          column: 47
        }
      },
      "20": {
        start: {
          line: 49,
          column: 26
        },
        end: {
          line: 49,
          column: 64
        }
      },
      "21": {
        start: {
          line: 50,
          column: 17
        },
        end: {
          line: 55,
          column: 6
        }
      },
      "22": {
        start: {
          line: 50,
          column: 42
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "23": {
        start: {
          line: 57,
          column: 30
        },
        end: {
          line: 57,
          column: 90
        }
      },
      "24": {
        start: {
          line: 58,
          column: 33
        },
        end: {
          line: 58,
          column: 96
        }
      },
      "25": {
        start: {
          line: 63,
          column: 18
        },
        end: {
          line: 69,
          column: 6
        }
      },
      "26": {
        start: {
          line: 71,
          column: 27
        },
        end: {
          line: 71,
          column: 99
        }
      },
      "27": {
        start: {
          line: 73,
          column: 18
        },
        end: {
          line: 73,
          column: 69
        }
      },
      "28": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 80,
          column: 6
        }
      },
      "29": {
        start: {
          line: 82,
          column: 26
        },
        end: {
          line: 82,
          column: 47
        }
      },
      "30": {
        start: {
          line: 83,
          column: 31
        },
        end: {
          line: 83,
          column: 55
        }
      },
      "31": {
        start: {
          line: 84,
          column: 31
        },
        end: {
          line: 84,
          column: 55
        }
      },
      "32": {
        start: {
          line: 89,
          column: 32
        },
        end: {
          line: 89,
          column: 55
        }
      },
      "33": {
        start: {
          line: 98,
          column: 33
        },
        end: {
          line: 201,
          column: 6
        }
      },
      "34": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 105
        }
      },
      "35": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 89
        }
      },
      "36": {
        start: {
          line: 102,
          column: 27
        },
        end: {
          line: 105,
          column: 10
        }
      },
      "37": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 76
        }
      },
      "38": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "39": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 82
        }
      },
      "40": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 19
        }
      },
      "41": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 96
        }
      },
      "42": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 40
        }
      },
      "43": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 31
        }
      },
      "44": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 34
        }
      },
      "45": {
        start: {
          line: 120,
          column: 29
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "46": {
        start: {
          line: 121,
          column: 35
        },
        end: {
          line: 121,
          column: 57
        }
      },
      "47": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 116
        }
      },
      "48": {
        start: {
          line: 123,
          column: 27
        },
        end: {
          line: 123,
          column: 81
        }
      },
      "49": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 75
        }
      },
      "50": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 191,
          column: 13
        }
      },
      "51": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 126,
          column: 101
        }
      },
      "52": {
        start: {
          line: 128,
          column: 38
        },
        end: {
          line: 128,
          column: 66
        }
      },
      "53": {
        start: {
          line: 129,
          column: 36
        },
        end: {
          line: 129,
          column: 61
        }
      },
      "54": {
        start: {
          line: 130,
          column: 33
        },
        end: {
          line: 148,
          column: 31
        }
      },
      "55": {
        start: {
          line: 150,
          column: 42
        },
        end: {
          line: 150,
          column: 159
        }
      },
      "56": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 153,
          column: 17
        }
      },
      "57": {
        start: {
          line: 152,
          column: 20
        },
        end: {
          line: 152,
          column: 80
        }
      },
      "58": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 155,
          column: 52
        }
      },
      "59": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 60
        }
      },
      "60": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 157,
          column: 66
        }
      },
      "61": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 158,
          column: 42
        }
      },
      "62": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 169,
          column: 17
        }
      },
      "63": {
        start: {
          line: 161,
          column: 20
        },
        end: {
          line: 168,
          column: 23
        }
      },
      "64": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 178,
          column: 17
        }
      },
      "65": {
        start: {
          line: 173,
          column: 20
        },
        end: {
          line: 173,
          column: 56
        }
      },
      "66": {
        start: {
          line: 175,
          column: 34
        },
        end: {
          line: 175,
          column: 78
        }
      },
      "67": {
        start: {
          line: 176,
          column: 20
        },
        end: {
          line: 176,
          column: 77
        }
      },
      "68": {
        start: {
          line: 176,
          column: 49
        },
        end: {
          line: 176,
          column: 75
        }
      },
      "69": {
        start: {
          line: 177,
          column: 20
        },
        end: {
          line: 177,
          column: 53
        }
      },
      "70": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 180,
          column: 45
        }
      },
      "71": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 182,
          column: 102
        }
      },
      "72": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 190,
          column: 17
        }
      },
      "73": {
        start: {
          line: 185,
          column: 20
        },
        end: {
          line: 189,
          column: 23
        }
      },
      "74": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 30
        }
      },
      "75": {
        start: {
          line: 203,
          column: 24
        },
        end: {
          line: 223,
          column: 6
        }
      },
      "76": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 220,
          column: 11
        }
      },
      "77": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 208,
          column: 13
        }
      },
      "78": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 207,
          column: 57
        }
      },
      "79": {
        start: {
          line: 210,
          column: 31
        },
        end: {
          line: 210,
          column: 81
        }
      },
      "80": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 219,
          column: 27
        }
      },
      "81": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 218,
          column: 17
        }
      },
      "82": {
        start: {
          line: 213,
          column: 20
        },
        end: {
          line: 213,
          column: 59
        }
      },
      "83": {
        start: {
          line: 214,
          column: 20
        },
        end: {
          line: 214,
          column: 30
        }
      },
      "84": {
        start: {
          line: 216,
          column: 20
        },
        end: {
          line: 216,
          column: 76
        }
      },
      "85": {
        start: {
          line: 217,
          column: 20
        },
        end: {
          line: 217,
          column: 30
        }
      },
      "86": {
        start: {
          line: 227,
          column: 26
        },
        end: {
          line: 237,
          column: 6
        }
      },
      "87": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 231,
          column: 9
        }
      },
      "88": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 230,
          column: 31
        }
      },
      "89": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 28
        }
      },
      "90": {
        start: {
          line: 239,
          column: 26
        },
        end: {
          line: 239,
          column: 45
        }
      },
      "91": {
        start: {
          line: 240,
          column: 23
        },
        end: {
          line: 240,
          column: 39
        }
      },
      "92": {
        start: {
          line: 241,
          column: 29
        },
        end: {
          line: 249,
          column: 6
        }
      },
      "93": {
        start: {
          line: 242,
          column: 28
        },
        end: {
          line: 242,
          column: 50
        }
      },
      "94": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 245,
          column: 9
        }
      },
      "95": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 244,
          column: 43
        }
      },
      "96": {
        start: {
          line: 256,
          column: 27
        },
        end: {
          line: 256,
          column: 52
        }
      },
      "97": {
        start: {
          line: 257,
          column: 4
        },
        end: {
          line: 283,
          column: 7
        }
      },
      "98": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 276,
          column: 9
        }
      },
      "99": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 259,
          column: 42
        }
      },
      "100": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 275,
          column: 13
        }
      },
      "101": {
        start: {
          line: 262,
          column: 39
        },
        end: {
          line: 262,
          column: 73
        }
      },
      "102": {
        start: {
          line: 263,
          column: 16
        },
        end: {
          line: 274,
          column: 17
        }
      },
      "103": {
        start: {
          line: 264,
          column: 20
        },
        end: {
          line: 267,
          column: 23
        }
      },
      "104": {
        start: {
          line: 269,
          column: 20
        },
        end: {
          line: 269,
          column: 59
        }
      },
      "105": {
        start: {
          line: 270,
          column: 20
        },
        end: {
          line: 270,
          column: 67
        }
      },
      "106": {
        start: {
          line: 271,
          column: 20
        },
        end: {
          line: 271,
          column: 65
        }
      },
      "107": {
        start: {
          line: 272,
          column: 20
        },
        end: {
          line: 272,
          column: 64
        }
      },
      "108": {
        start: {
          line: 273,
          column: 20
        },
        end: {
          line: 273,
          column: 27
        }
      },
      "109": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 280,
          column: 9
        }
      },
      "110": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 279,
          column: 26
        }
      },
      "111": {
        start: {
          line: 285,
          column: 23
        },
        end: {
          line: 285,
          column: 56
        }
      },
      "112": {
        start: {
          line: 286,
          column: 27
        },
        end: {
          line: 286,
          column: 51
        }
      },
      "113": {
        start: {
          line: 287,
          column: 4
        },
        end: {
          line: 303,
          column: 7
        }
      },
      "114": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 293,
          column: 9
        }
      },
      "115": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 43
        }
      },
      "116": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 47
        }
      },
      "117": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 292,
          column: 19
        }
      },
      "118": {
        start: {
          line: 295,
          column: 27
        },
        end: {
          line: 295,
          column: 95
        }
      },
      "119": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 299,
          column: 9
        }
      },
      "120": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 47
        }
      },
      "121": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 26
        }
      },
      "122": {
        start: {
          line: 305,
          column: 4
        },
        end: {
          line: 324,
          column: 7
        }
      },
      "123": {
        start: {
          line: 327,
          column: 4
        },
        end: {
          line: 342,
          column: 11
        }
      },
      "124": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 341,
          column: 10
        }
      },
      "125": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 330,
          column: 38
        }
      },
      "126": {
        start: {
          line: 332,
          column: 12
        },
        end: {
          line: 334,
          column: 13
        }
      },
      "127": {
        start: {
          line: 333,
          column: 16
        },
        end: {
          line: 333,
          column: 58
        }
      },
      "128": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 337,
          column: 13
        }
      },
      "129": {
        start: {
          line: 336,
          column: 16
        },
        end: {
          line: 336,
          column: 57
        }
      },
      "130": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 340,
          column: 13
        }
      },
      "131": {
        start: {
          line: 339,
          column: 16
        },
        end: {
          line: 339,
          column: 82
        }
      },
      "132": {
        start: {
          line: 346,
          column: 4
        },
        end: {
          line: 361,
          column: 6
        }
      },
      "133": {
        start: {
          line: 364,
          column: 22
        },
        end: {
          line: 364,
          column: 47
        }
      },
      "134": {
        start: {
          line: 365,
          column: 30
        },
        end: {
          line: 365,
          column: 44
        }
      },
      "135": {
        start: {
          line: 366,
          column: 38
        },
        end: {
          line: 366,
          column: 53
        }
      },
      "136": {
        start: {
          line: 367,
          column: 30
        },
        end: {
          line: 367,
          column: 44
        }
      },
      "137": {
        start: {
          line: 368,
          column: 23
        },
        end: {
          line: 406,
          column: 6
        }
      },
      "138": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 371,
          column: 9
        }
      },
      "139": {
        start: {
          line: 370,
          column: 12
        },
        end: {
          line: 370,
          column: 19
        }
      },
      "140": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 372,
          column: 27
        }
      },
      "141": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 373,
          column: 23
        }
      },
      "142": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 402,
          column: 9
        }
      },
      "143": {
        start: {
          line: 375,
          column: 29
        },
        end: {
          line: 377,
          column: 14
        }
      },
      "144": {
        start: {
          line: 378,
          column: 25
        },
        end: {
          line: 378,
          column: 46
        }
      },
      "145": {
        start: {
          line: 379,
          column: 38
        },
        end: {
          line: 379,
          column: 66
        }
      },
      "146": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 391,
          column: 13
        }
      },
      "147": {
        start: {
          line: 381,
          column: 16
        },
        end: {
          line: 381,
          column: 50
        }
      },
      "148": {
        start: {
          line: 382,
          column: 16
        },
        end: {
          line: 386,
          column: 19
        }
      },
      "149": {
        start: {
          line: 389,
          column: 34
        },
        end: {
          line: 389,
          column: 74
        }
      },
      "150": {
        start: {
          line: 390,
          column: 16
        },
        end: {
          line: 390,
          column: 36
        }
      },
      "151": {
        start: {
          line: 393,
          column: 33
        },
        end: {
          line: 393,
          column: 89
        }
      },
      "152": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 394,
          column: 35
        }
      },
      "153": {
        start: {
          line: 395,
          column: 12
        },
        end: {
          line: 399,
          column: 15
        }
      },
      "154": {
        start: {
          line: 401,
          column: 12
        },
        end: {
          line: 401,
          column: 32
        }
      },
      "155": {
        start: {
          line: 407,
          column: 4
        },
        end: {
          line: 411,
          column: 7
        }
      },
      "156": {
        start: {
          line: 408,
          column: 8
        },
        end: {
          line: 408,
          column: 21
        }
      },
      "157": {
        start: {
          line: 412,
          column: 4
        },
        end: {
          line: 417,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 16
          }
        },
        loc: {
          start: {
            line: 9,
            column: 30
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 32
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 37
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "debounce",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 17
          }
        },
        loc: {
          start: {
            line: 32,
            column: 30
          },
          end: {
            line: 38,
            column: 1
          }
        },
        line: 32
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 34,
            column: 11
          },
          end: {
            line: 34,
            column: 12
          }
        },
        loc: {
          start: {
            line: 34,
            column: 22
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 34
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 36,
            column: 29
          },
          end: {
            line: 36,
            column: 30
          }
        },
        loc: {
          start: {
            line: 36,
            column: 33
          },
          end: {
            line: 36,
            column: 46
          }
        },
        line: 36
      },
      "6": {
        name: "useOrdersEnterpriseStrict",
        decl: {
          start: {
            line: 47,
            column: 9
          },
          end: {
            line: 47,
            column: 34
          }
        },
        loc: {
          start: {
            line: 47,
            column: 70
          },
          end: {
            line: 362,
            column: 1
          }
        },
        line: 47
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 50,
            column: 37
          },
          end: {
            line: 50,
            column: 38
          }
        },
        loc: {
          start: {
            line: 50,
            column: 42
          },
          end: {
            line: 53,
            column: 9
          }
        },
        line: 50
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 98,
            column: 57
          },
          end: {
            line: 98,
            column: 58
          }
        },
        loc: {
          start: {
            line: 98,
            column: 82
          },
          end: {
            line: 194,
            column: 5
          }
        },
        line: 98
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 120,
            column: 29
          },
          end: {
            line: 120,
            column: 30
          }
        },
        loc: {
          start: {
            line: 120,
            column: 46
          },
          end: {
            line: 192,
            column: 9
          }
        },
        line: 120
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 176,
            column: 38
          },
          end: {
            line: 176,
            column: 39
          }
        },
        loc: {
          start: {
            line: 176,
            column: 49
          },
          end: {
            line: 176,
            column: 75
          }
        },
        line: 176
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 203,
            column: 48
          },
          end: {
            line: 203,
            column: 49
          }
        },
        loc: {
          start: {
            line: 203,
            column: 67
          },
          end: {
            line: 221,
            column: 5
          }
        },
        line: 203
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 204,
            column: 27
          },
          end: {
            line: 204,
            column: 28
          }
        },
        loc: {
          start: {
            line: 204,
            column: 38
          },
          end: {
            line: 220,
            column: 9
          }
        },
        line: 204
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 211,
            column: 52
          },
          end: {
            line: 211,
            column: 53
          }
        },
        loc: {
          start: {
            line: 211,
            column: 62
          },
          end: {
            line: 219,
            column: 13
          }
        },
        line: 211
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 227,
            column: 50
          },
          end: {
            line: 227,
            column: 51
          }
        },
        loc: {
          start: {
            line: 227,
            column: 60
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 227
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 241,
            column: 53
          },
          end: {
            line: 241,
            column: 54
          }
        },
        loc: {
          start: {
            line: 241,
            column: 63
          },
          end: {
            line: 246,
            column: 5
          }
        },
        line: 241
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 257,
            column: 26
          },
          end: {
            line: 257,
            column: 27
          }
        },
        loc: {
          start: {
            line: 257,
            column: 30
          },
          end: {
            line: 281,
            column: 5
          }
        },
        line: 257
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 287,
            column: 26
          },
          end: {
            line: 287,
            column: 27
          }
        },
        loc: {
          start: {
            line: 287,
            column: 30
          },
          end: {
            line: 300,
            column: 5
          }
        },
        line: 287
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 305,
            column: 26
          },
          end: {
            line: 305,
            column: 27
          }
        },
        loc: {
          start: {
            line: 305,
            column: 30
          },
          end: {
            line: 322,
            column: 8
          }
        },
        line: 305
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 327,
            column: 26
          },
          end: {
            line: 327,
            column: 27
          }
        },
        loc: {
          start: {
            line: 327,
            column: 30
          },
          end: {
            line: 342,
            column: 5
          }
        },
        line: 327
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 328,
            column: 15
          },
          end: {
            line: 328,
            column: 16
          }
        },
        loc: {
          start: {
            line: 328,
            column: 19
          },
          end: {
            line: 341,
            column: 9
          }
        },
        line: 328
      },
      "21": {
        name: "useOrderDetailStrict",
        decl: {
          start: {
            line: 363,
            column: 9
          },
          end: {
            line: 363,
            column: 29
          }
        },
        loc: {
          start: {
            line: 363,
            column: 39
          },
          end: {
            line: 418,
            column: 1
          }
        },
        line: 363
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 368,
            column: 47
          },
          end: {
            line: 368,
            column: 48
          }
        },
        loc: {
          start: {
            line: 368,
            column: 57
          },
          end: {
            line: 403,
            column: 5
          }
        },
        line: 368
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 407,
            column: 26
          },
          end: {
            line: 407,
            column: 27
          }
        },
        loc: {
          start: {
            line: 407,
            column: 30
          },
          end: {
            line: 409,
            column: 5
          }
        },
        line: 407
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 47,
            column: 35
          },
          end: {
            line: 47,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 47,
            column: 52
          },
          end: {
            line: 47,
            column: 54
          }
        }],
        line: 47
      },
      "1": {
        loc: {
          start: {
            line: 47,
            column: 56
          },
          end: {
            line: 47,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 47,
            column: 66
          },
          end: {
            line: 47,
            column: 68
          }
        }],
        line: 47
      },
      "2": {
        loc: {
          start: {
            line: 98,
            column: 64
          },
          end: {
            line: 98,
            column: 79
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 98,
            column: 77
          },
          end: {
            line: 98,
            column: 79
          }
        }],
        line: 98
      },
      "3": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "4": {
        loc: {
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 111,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 111,
            column: 10
          }
        }, {
          start: {
            line: 111,
            column: 14
          },
          end: {
            line: 111,
            column: 29
          }
        }],
        line: 108
      },
      "5": {
        loc: {
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 191,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 191,
            column: 13
          }
        }, {
          start: {
            line: 170,
            column: 19
          },
          end: {
            line: 191,
            column: 13
          }
        }],
        line: 125
      },
      "6": {
        loc: {
          start: {
            line: 131,
            column: 26
          },
          end: {
            line: 131,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 26
          },
          end: {
            line: 131,
            column: 57
          }
        }, {
          start: {
            line: 131,
            column: 61
          },
          end: {
            line: 131,
            column: 64
          }
        }],
        line: 131
      },
      "7": {
        loc: {
          start: {
            line: 132,
            column: 27
          },
          end: {
            line: 132,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 27
          },
          end: {
            line: 132,
            column: 59
          }
        }, {
          start: {
            line: 132,
            column: 63
          },
          end: {
            line: 132,
            column: 67
          }
        }],
        line: 132
      },
      "8": {
        loc: {
          start: {
            line: 133,
            column: 23
          },
          end: {
            line: 135,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 23
          },
          end: {
            line: 133,
            column: 44
          }
        }, {
          start: {
            line: 133,
            column: 48
          },
          end: {
            line: 135,
            column: 21
          }
        }],
        line: 133
      },
      "9": {
        loc: {
          start: {
            line: 136,
            column: 23
          },
          end: {
            line: 138,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 23
          },
          end: {
            line: 136,
            column: 52
          }
        }, {
          start: {
            line: 136,
            column: 56
          },
          end: {
            line: 138,
            column: 21
          }
        }],
        line: 136
      },
      "10": {
        loc: {
          start: {
            line: 139,
            column: 23
          },
          end: {
            line: 141,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 139,
            column: 23
          },
          end: {
            line: 139,
            column: 56
          }
        }, {
          start: {
            line: 139,
            column: 60
          },
          end: {
            line: 141,
            column: 21
          }
        }],
        line: 139
      },
      "11": {
        loc: {
          start: {
            line: 142,
            column: 23
          },
          end: {
            line: 144,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 23
          },
          end: {
            line: 142,
            column: 45
          }
        }, {
          start: {
            line: 142,
            column: 49
          },
          end: {
            line: 144,
            column: 21
          }
        }],
        line: 142
      },
      "12": {
        loc: {
          start: {
            line: 145,
            column: 23
          },
          end: {
            line: 147,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 23
          },
          end: {
            line: 145,
            column: 48
          }
        }, {
          start: {
            line: 145,
            column: 52
          },
          end: {
            line: 147,
            column: 21
          }
        }],
        line: 145
      },
      "13": {
        loc: {
          start: {
            line: 150,
            column: 51
          },
          end: {
            line: 150,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 51
          },
          end: {
            line: 150,
            column: 71
          }
        }, {
          start: {
            line: 150,
            column: 75
          },
          end: {
            line: 150,
            column: 77
          }
        }],
        line: 150
      },
      "14": {
        loc: {
          start: {
            line: 150,
            column: 97
          },
          end: {
            line: 150,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 97
          },
          end: {
            line: 150,
            column: 116
          }
        }, {
          start: {
            line: 150,
            column: 120
          },
          end: {
            line: 150,
            column: 121
          }
        }],
        line: 150
      },
      "15": {
        loc: {
          start: {
            line: 150,
            column: 131
          },
          end: {
            line: 150,
            column: 157
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 131
          },
          end: {
            line: 150,
            column: 151
          }
        }, {
          start: {
            line: 150,
            column: 155
          },
          end: {
            line: 150,
            column: 157
          }
        }],
        line: 150
      },
      "16": {
        loc: {
          start: {
            line: 151,
            column: 16
          },
          end: {
            line: 153,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 16
          },
          end: {
            line: 153,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "17": {
        loc: {
          start: {
            line: 151,
            column: 20
          },
          end: {
            line: 151,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 20
          },
          end: {
            line: 151,
            column: 51
          }
        }, {
          start: {
            line: 151,
            column: 55
          },
          end: {
            line: 151,
            column: 76
          }
        }],
        line: 151
      },
      "18": {
        loc: {
          start: {
            line: 157,
            column: 35
          },
          end: {
            line: 157,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 35
          },
          end: {
            line: 157,
            column: 56
          }
        }, {
          start: {
            line: 157,
            column: 60
          },
          end: {
            line: 157,
            column: 64
          }
        }],
        line: 157
      },
      "19": {
        loc: {
          start: {
            line: 160,
            column: 16
          },
          end: {
            line: 169,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 16
          },
          end: {
            line: 169,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "20": {
        loc: {
          start: {
            line: 164,
            column: 35
          },
          end: {
            line: 164,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 35
          },
          end: {
            line: 164,
            column: 56
          }
        }, {
          start: {
            line: 164,
            column: 60
          },
          end: {
            line: 164,
            column: 64
          }
        }],
        line: 164
      },
      "21": {
        loc: {
          start: {
            line: 172,
            column: 16
          },
          end: {
            line: 178,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 16
          },
          end: {
            line: 178,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "22": {
        loc: {
          start: {
            line: 172,
            column: 20
          },
          end: {
            line: 172,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 20
          },
          end: {
            line: 172,
            column: 45
          }
        }, {
          start: {
            line: 172,
            column: 49
          },
          end: {
            line: 172,
            column: 84
          }
        }],
        line: 172
      },
      "23": {
        loc: {
          start: {
            line: 184,
            column: 16
          },
          end: {
            line: 190,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 16
          },
          end: {
            line: 190,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "24": {
        loc: {
          start: {
            line: 203,
            column: 49
          },
          end: {
            line: 203,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 203,
            column: 62
          },
          end: {
            line: 203,
            column: 64
          }
        }],
        line: 203
      },
      "25": {
        loc: {
          start: {
            line: 206,
            column: 12
          },
          end: {
            line: 208,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 12
          },
          end: {
            line: 208,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "26": {
        loc: {
          start: {
            line: 210,
            column: 31
          },
          end: {
            line: 210,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 210,
            column: 72
          },
          end: {
            line: 210,
            column: 75
          }
        }, {
          start: {
            line: 210,
            column: 78
          },
          end: {
            line: 210,
            column: 81
          }
        }],
        line: 210
      },
      "27": {
        loc: {
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "28": {
        loc: {
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "29": {
        loc: {
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 276,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 276,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "30": {
        loc: {
          start: {
            line: 258,
            column: 12
          },
          end: {
            line: 258,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 258,
            column: 12
          },
          end: {
            line: 258,
            column: 35
          }
        }, {
          start: {
            line: 258,
            column: 39
          },
          end: {
            line: 258,
            column: 77
          }
        }],
        line: 258
      },
      "31": {
        loc: {
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 275,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 275,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 261
      },
      "32": {
        loc: {
          start: {
            line: 263,
            column: 16
          },
          end: {
            line: 274,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 263,
            column: 16
          },
          end: {
            line: 274,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 263
      },
      "33": {
        loc: {
          start: {
            line: 278,
            column: 8
          },
          end: {
            line: 280,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 278,
            column: 8
          },
          end: {
            line: 280,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 278
      },
      "34": {
        loc: {
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 278,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 278,
            column: 26
          }
        }, {
          start: {
            line: 278,
            column: 30
          },
          end: {
            line: 278,
            column: 53
          }
        }],
        line: 278
      },
      "35": {
        loc: {
          start: {
            line: 289,
            column: 8
          },
          end: {
            line: 293,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 8
          },
          end: {
            line: 293,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 289
      },
      "36": {
        loc: {
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 299,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 299,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "37": {
        loc: {
          start: {
            line: 332,
            column: 12
          },
          end: {
            line: 334,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 12
          },
          end: {
            line: 334,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 332
      },
      "38": {
        loc: {
          start: {
            line: 335,
            column: 12
          },
          end: {
            line: 337,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 335,
            column: 12
          },
          end: {
            line: 337,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 335
      },
      "39": {
        loc: {
          start: {
            line: 338,
            column: 12
          },
          end: {
            line: 340,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 338,
            column: 12
          },
          end: {
            line: 340,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 338
      },
      "40": {
        loc: {
          start: {
            line: 369,
            column: 8
          },
          end: {
            line: 371,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 369,
            column: 8
          },
          end: {
            line: 371,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 369
      },
      "41": {
        loc: {
          start: {
            line: 380,
            column: 12
          },
          end: {
            line: 391,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 380,
            column: 12
          },
          end: {
            line: 391,
            column: 13
          }
        }, {
          start: {
            line: 387,
            column: 19
          },
          end: {
            line: 391,
            column: 13
          }
        }],
        line: 380
      },
      "42": {
        loc: {
          start: {
            line: 389,
            column: 34
          },
          end: {
            line: 389,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 389,
            column: 34
          },
          end: {
            line: 389,
            column: 66
          }
        }, {
          start: {
            line: 389,
            column: 70
          },
          end: {
            line: 389,
            column: 74
          }
        }],
        line: 389
      },
      "43": {
        loc: {
          start: {
            line: 393,
            column: 33
          },
          end: {
            line: 393,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 393,
            column: 56
          },
          end: {
            line: 393,
            column: 67
          }
        }, {
          start: {
            line: 393,
            column: 70
          },
          end: {
            line: 393,
            column: 89
          }
        }],
        line: 393
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useOrdersEnterpriseStrict.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - STRICT ORDERS HOOK (REFACTORED)\r\n// Hook orquestador para gesti\xF3n de \xF3rdenes con validaci\xF3n estricta\r\n// ===================================\r\n\r\nimport { useEffect, useCallback, useRef, useMemo } from 'react';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport {\r\n  StrictOrdersListResponse,\r\n  StrictApiError,\r\n  ApiResult,\r\n  createStrictApiError,\r\n  StrictOrderEnterprise,\r\n  StrictPagination,\r\n  isStrictApiError,\r\n  isStrictApiResponse\r\n} from '@/types/api-strict';\r\nimport { OrderStatus, PaymentStatus, FulfillmentStatus } from '@/types/orders-enterprise';\r\nimport { useApiMonitoring } from '@/utils/api-monitoring';\r\nimport { useOrdersCache } from './useOrdersCache';\r\nimport { useOrdersApi } from './useOrdersApi';\r\nimport { useOrdersState, StrictOrdersState, StrictOrdersActions } from './useOrdersState';\r\nimport { useOrdersDevState } from './useOrdersDevPersistence';\r\n\r\n// Funci\xF3n de debounce para evitar peticiones m\xFAltiples\r\nfunction debounce<T extends (...args: any[]) => any>(\r\n  func: T,\r\n  wait: number\r\n): (...args: Parameters<T>) => void {\r\n  let timeout: NodeJS.Timeout;\r\n  return (...args: Parameters<T>) => {\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => func(...args), wait);\r\n  };\r\n}\r\n\r\n// ===================================\r\n// TIPOS DE FILTROS ESTRICTOS\r\n// ===================================\r\n\r\nexport interface StrictOrderFilters {\r\n  readonly search?: string;\r\n  readonly status?: OrderStatus | 'all';\r\n  readonly payment_status?: PaymentStatus | 'all';\r\n  readonly fulfillment_status?: FulfillmentStatus | 'all';\r\n  readonly date_from?: string;\r\n  readonly date_to?: string;\r\n  readonly page?: number;\r\n  readonly limit?: number;\r\n  readonly sort_by?: 'created_at' | 'updated_at' | 'total' | 'order_number';\r\n  readonly sort_order?: 'asc' | 'desc';\r\n}\r\n\r\n// Tipos movidos a useOrdersState.ts\r\n\r\nexport interface UseOrdersEnterpriseStrictReturn extends StrictOrdersState, StrictOrdersActions {\r\n  readonly fetchOrders: (filters?: Partial<StrictOrderFilters>) => Promise<void>;\r\n  readonly refreshOrders: () => Promise<void>;\r\n  readonly retryLastRequest: () => Promise<void>;\r\n}\r\n\r\n// ===================================\r\n// CONFIGURACI\xD3N DEL HOOK\r\n// ===================================\r\n\r\ninterface UseOrdersEnterpriseStrictOptions {\r\n  readonly autoFetch?: boolean;\r\n  readonly refetchInterval?: number;\r\n  readonly maxRetries?: number;\r\n  readonly timeout?: number;\r\n  readonly enableCache?: boolean;\r\n  readonly cacheTimeout?: number;\r\n}\r\n\r\nconst DEFAULT_OPTIONS: Required<UseOrdersEnterpriseStrictOptions> = {\r\n  autoFetch: true,\r\n  refetchInterval: 0, // 0 = disabled\r\n  maxRetries: 3,\r\n  timeout: 10000, // 10 seconds\r\n  enableCache: true,\r\n  cacheTimeout: 5 * 60 * 1000 // 5 minutes\r\n};\r\n\r\n// Constantes DEFAULT movidas a useOrdersState.ts\r\n\r\n// ===================================\r\n// CONFIGURACI\xD3N DEL HOOK ORQUESTADOR\r\n// ===================================\r\n\r\n// Funciones de cache movidas a useOrdersCache.ts\r\n\r\n// Funciones de cache movidas a useOrdersCache.ts\r\n\r\n// Todas las funciones de cache movidas a useOrdersCache.ts\r\n\r\n// ===================================\r\n// HOOK PRINCIPAL\r\n// ===================================\r\n\r\nexport function useOrdersEnterpriseStrict(\r\n  initialFilters: Partial<StrictOrderFilters> = {},\r\n  options: Partial<UseOrdersEnterpriseStrictOptions> = {}\r\n): UseOrdersEnterpriseStrictReturn {\r\n  const { toast } = useToast();\r\n  const apiMonitoring = useApiMonitoring();\r\n  const opts = useMemo(() => ({ ...DEFAULT_OPTIONS, ...options }), [options]);\r\n\r\n  // Memoizar las funciones de monitoreo para evitar recreaciones\r\n  const recordDiscrepancy = useCallback(apiMonitoring.recordDiscrepancy, []);\r\n  const recordRenderingIssue = useCallback(apiMonitoring.recordRenderingIssue, []);\r\n\r\n  // ===================================\r\n  // HOOKS ESPECIALIZADOS\r\n  // ===================================\r\n\r\n  // Hook de cache\r\n  const cache = useOrdersCache({\r\n    enableCache: opts.enableCache,\r\n    cacheTimeout: opts.cacheTimeout,\r\n    maxSize: 50,\r\n    cleanupInterval: 10 * 60 * 1000,\r\n    minRequestInterval: 1000\r\n  });\r\n\r\n  // Hook de persistencia para desarrollo (Fast Refresh)\r\n  const devPersistence = useOrdersDevState('orders-enterprise-dev');\r\n\r\n  // Hook de estado\r\n  const state = useOrdersState(initialFilters);\r\n\r\n  // Hook de API\r\n  const api = useOrdersApi({\r\n    timeout: opts.timeout,\r\n    maxRetries: opts.maxRetries,\r\n    enableCache: opts.enableCache,\r\n    cache\r\n  });\r\n  \r\n  // Referencias para control de requests (simplificadas)\r\n  const retryCountRef = useRef(0);\r\n  const refetchIntervalRef = useRef<NodeJS.Timeout | null>(null);\r\n  const debounceTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  // ===================================\r\n  // FUNCIONES DE FETCH SIMPLIFICADAS\r\n  // ===================================\r\n\r\n  // Usar el hook de API directamente\r\n  const fetchOrdersInternal = api.fetchOrdersInternal;\r\n\r\n  // ===================================\r\n  // FUNCIONES DE FETCH P\xDABLICAS\r\n  // ===================================\r\n\r\n  // L\xF3gica de fetch movida a useOrdersApi.ts\r\n\r\n  // ===================================\r\n  // FUNCI\xD3N DE FETCH P\xDABLICA CON RETRY\r\n  // ===================================\r\n\r\n  // Funci\xF3n interna sin debounce para uso directo\r\n  const fetchOrdersImmediate = useCallback(async (newFilters: Partial<StrictOrderFilters> = {}): Promise<void> => {\r\n    console.log('[useOrdersEnterpriseStrict] fetchOrdersImmediate called with filters:', newFilters);\r\n    console.log('[useOrdersEnterpriseStrict] Current state filters:', state.filters);\r\n    \r\n    // Generar clave \xFAnica para esta petici\xF3n\r\n    const requestKey = JSON.stringify({ ...state.filters, ...newFilters });\r\n    console.log('[useOrdersEnterpriseStrict] Request key:', requestKey);\r\n\r\n    // Evitar peticiones duplicadas\r\n    if (state.hasFiltersChanged({ ...state.filters, ...newFilters }) && state.isLoading) {\r\n      console.log('[useOrdersEnterpriseStrict] Skipping duplicate request');\r\n      return;\r\n    }\r\n\r\n    // Actualizar filtros y estado de carga\r\n    console.log('[useOrdersEnterpriseStrict] Updating filters and setting loading to true');\r\n    state.updateFilters(newFilters);\r\n    state.setLoading(true);\r\n    retryCountRef.current = 0;\r\n\r\n    const attemptFetch = async (attempt: number): Promise<void> => {\r\n      const currentFilters = state.getLastFilters();\r\n      console.log('[useOrdersEnterpriseStrict] attemptFetch - attempt:', attempt, 'filters:', currentFilters);\r\n      \r\n      const result = await fetchOrdersInternal(currentFilters, attempt > 0);\r\n      console.log('[useOrdersEnterpriseStrict] API result:', result);\r\n\r\n      if (isStrictApiResponse(result)) {\r\n        console.log('[useOrdersEnterpriseStrict] Valid API response received:', result.data);\r\n        // Monitoreo autom\xE1tico de discrepancias\r\n        const expectedCount = result.data.pagination.total;\r\n        const actualCount = result.data.orders.length;\r\n        const endpoint = `/api/admin/orders?${new URLSearchParams({\r\n          page: currentFilters.page?.toString() || '1',\r\n          limit: currentFilters.limit?.toString() || '20',\r\n          ...(currentFilters.status && { status: currentFilters.status }),\r\n          ...(currentFilters.payment_status && { payment_status: currentFilters.payment_status }),\r\n          ...(currentFilters.fulfillment_status && { fulfillment_status: currentFilters.fulfillment_status }),\r\n          ...(currentFilters.sort_by && { sort_by: currentFilters.sort_by }),\r\n          ...(currentFilters.sort_order && { sort_order: currentFilters.sort_order })\r\n        }).toString()}`;\r\n\r\n        // Solo registrar discrepancia si hay una diferencia real (no por paginaci\xF3n)\r\n        const expectedPageCount = Math.min(currentFilters.limit || 20, expectedCount - ((currentFilters.page || 1) - 1) * (currentFilters.limit || 20));\r\n        if (actualCount < expectedPageCount && expectedPageCount > 0) {\r\n          recordDiscrepancy(endpoint, expectedPageCount, actualCount);\r\n        }\r\n\r\n        // Actualizar estado usando el hook especializado\r\n        state.setOrders(result.data.orders);\r\n        state.setPagination(result.data.pagination);\r\n        state.setAnalytics(result.data.analytics || null);\r\n        retryCountRef.current = 0;\r\n\r\n        // \u2705 PERSISTIR ESTADO PARA DESARROLLO (Fast Refresh)\r\n        if (process.env.NODE_ENV === 'development') {\r\n          devPersistence.persistState({\r\n            orders: result.data.orders,\r\n            pagination: result.data.pagination,\r\n            analytics: result.data.analytics || null,\r\n            filters: currentFilters,\r\n            hasData: true,\r\n            lastFetchTime: Date.now()\r\n          });\r\n        }\r\n      } else {\r\n        // Es un error\r\n        if (attempt < opts.maxRetries && result.code !== 'REQUEST_CANCELLED') {\r\n          retryCountRef.current = attempt + 1;\r\n          // Esperar antes del retry (exponential backoff)\r\n          const delay = Math.min(1000 * Math.pow(2, attempt), 10000);\r\n          await new Promise(resolve => setTimeout(resolve, delay));\r\n          return attemptFetch(attempt + 1);\r\n        }\r\n\r\n        // M\xE1ximo de reintentos alcanzado o error no recuperable\r\n        state.setError(result.error);\r\n\r\n        // Registrar problema de renderizado por error de API\r\n        recordRenderingIssue(\r\n          'useOrdersEnterpriseStrict',\r\n          0,\r\n          0,\r\n          currentFilters,\r\n          result.error\r\n        );\r\n\r\n        // Mostrar toast de error\r\n        if (result.code !== 'REQUEST_CANCELLED') {\r\n          toast({\r\n            title: 'Error al cargar \xF3rdenes',\r\n            description: result.error,\r\n            variant: 'destructive'\r\n          });\r\n        }\r\n      }\r\n    };\r\n\r\n    await attemptFetch(0);\r\n  }, [fetchOrdersInternal, opts.maxRetries, toast, recordDiscrepancy, recordRenderingIssue, state]);\r\n\r\n  // Funci\xF3n fetchOrders con debouncing para evitar peticiones m\xFAltiples\r\n  const fetchOrders = useCallback((newFilters: Partial<StrictOrderFilters> = {}): Promise<void> => {\r\n    return new Promise<void>((resolve) => {\r\n      // Limpiar timeout anterior si existe\r\n      if (debounceTimeoutRef.current) {\r\n        clearTimeout(debounceTimeoutRef.current);\r\n      }\r\n      \r\n      // Configurar nuevo timeout con debounce\r\n      const debounceMs = process.env.NODE_ENV === 'development' ? 300 : 150;\r\n      debounceTimeoutRef.current = setTimeout(async () => {\r\n        try {\r\n          await fetchOrdersImmediate(newFilters);\r\n          resolve();\r\n        } catch (error) {\r\n          console.error('Error in debounced fetchOrders:', error);\r\n          resolve(); // Resolver incluso en caso de error para evitar promesas colgadas\r\n        }\r\n      }, debounceMs);\r\n    });\r\n  }, [fetchOrdersImmediate]);\r\n\r\n  // ===================================\r\n  // OTRAS ACCIONES\r\n  // ===================================\r\n\r\n  const refreshOrders = useCallback(async (): Promise<void> => {\r\n    // Limpiar cache para forzar refresh\r\n    if (opts.enableCache) {\r\n      cache.clearCache();\r\n    }\r\n    await fetchOrders();\r\n  }, [fetchOrders, opts.enableCache, cache]);\r\n\r\n  // Usar las funciones del hook de estado directamente\r\n  const updateFilters = state.updateFilters;\r\n  const clearError = state.clearError;\r\n\r\n  const retryLastRequest = useCallback(async (): Promise<void> => {\r\n    const lastFilters = state.getLastFilters();\r\n    if (lastFilters) {\r\n      await fetchOrders(lastFilters);\r\n    }\r\n  }, [fetchOrders, state]);\r\n\r\n  // ===================================\r\n  // EFECTOS\r\n  // ===================================\r\n\r\n  // ===================================\r\n  // RESTAURACI\xD3N DE ESTADO PERSISTIDO (DESARROLLO)\r\n  // ===================================\r\n\r\n  const hasRestoredRef = useRef(false);\r\n  useEffect(() => {\r\n    if (!hasRestoredRef.current && process.env.NODE_ENV === 'development') {\r\n      hasRestoredRef.current = true;\r\n\r\n      // Intentar restaurar estado persistido\r\n      if (devPersistence.hasValidPersistedData()) {\r\n        const persistedState = devPersistence.getPersistedState();\r\n        if (persistedState) {\r\n          console.log('[useOrdersEnterpriseStrict] Restoring persisted state:', {\r\n            ordersCount: persistedState.orders.length,\r\n            hasData: persistedState.hasData\r\n          });\r\n\r\n          // Restaurar estado\r\n          state.setOrders(persistedState.orders);\r\n          state.setPagination(persistedState.pagination);\r\n          state.setAnalytics(persistedState.analytics);\r\n          state.updateFilters(persistedState.filters);\r\n\r\n          return; // No hacer auto-fetch si tenemos datos persistidos\r\n        }\r\n      }\r\n    }\r\n\r\n    // Auto-fetch inicial solo si no hay datos persistidos\r\n    if (opts.autoFetch && !hasRestoredRef.current) {\r\n      fetchOrders();\r\n    }\r\n  }, [opts.autoFetch]); // Solo ejecutar una vez al montar\r\n\r\n  // Escuchar cambios en filtros con debouncing optimizado\r\n  const filtersRef = useRef(state.filters);\r\n  const isInitialMount = useRef(true);\r\n  \r\n  useEffect(() => {\r\n    // Evitar fetch en el primer render (ya se hace en auto-fetch)\r\n    if (isInitialMount.current) {\r\n      isInitialMount.current = false;\r\n      filtersRef.current = state.filters;\r\n      return;\r\n    }\r\n\r\n    // Solo hacer fetch si los filtros han cambiado realmente\r\n    const hasChanged = JSON.stringify(filtersRef.current) !== JSON.stringify(state.filters);\r\n    \r\n    if (hasChanged) {\r\n      filtersRef.current = state.filters;\r\n      fetchOrders();\r\n    }\r\n  }, [state.filters, fetchOrders]); // Dependencias m\xEDnimas y estables\r\n\r\n  // Refetch interval - TEMPORALMENTE DESHABILITADO para evitar refresco infinito\r\n  useEffect(() => {\r\n    // NOTA: Refetch interval deshabilitado temporalmente para solucionar refresco infinito\r\n    // TODO: Reimplementar con useRef para fetchOrders o usar React Query\r\n    /*\r\n    if (opts.refetchInterval > 0) {\r\n      refetchIntervalRef.current = setInterval(() => {\r\n        if (!state.isLoading) {\r\n          fetchOrders();\r\n        }\r\n      }, opts.refetchInterval);\r\n\r\n      return () => {\r\n        if (refetchIntervalRef.current) {\r\n          clearInterval(refetchIntervalRef.current);\r\n        }\r\n      };\r\n    }\r\n    */\r\n  }, [opts.refetchInterval]);\r\n\r\n  // Limpieza autom\xE1tica de cache movida a useOrdersCache.ts\r\n\r\n  // Cleanup al desmontar - OPTIMIZADO: Sin dependencias inestables\r\n  useEffect(() => {\r\n    return () => {\r\n      // Cancelar peticiones en progreso usando el hook de API\r\n      api.abortCurrentRequest();\r\n\r\n      // Limpiar intervalos y timeouts\r\n      if (refetchIntervalRef.current) {\r\n        clearInterval(refetchIntervalRef.current);\r\n      }\r\n      if (debounceTimeoutRef.current) {\r\n        clearTimeout(debounceTimeoutRef.current);\r\n      }\r\n\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log('[useOrdersEnterpriseStrict] Hook cleanup completed');\r\n      }\r\n    };\r\n  }, []); // \u2705 CORREGIDO: Sin dependencias para evitar remontajes por Fast Refresh\r\n\r\n  // ===================================\r\n  // RETORNO DEL HOOK\r\n  // ===================================\r\n\r\n  return {\r\n    // Estado\r\n    orders: state.orders,\r\n    pagination: state.pagination,\r\n    filters: state.filters,\r\n    analytics: state.analytics,\r\n    isLoading: state.isLoading,\r\n    error: state.error,\r\n    lastFetch: state.lastFetch,\r\n    \r\n    // Acciones\r\n    fetchOrders,\r\n    refreshOrders,\r\n    updateFilters,\r\n    clearError,\r\n    retryLastRequest\r\n  };\r\n}\r\n\r\n// ===================================\r\n// HOOK PARA ORDEN INDIVIDUAL\r\n// ===================================\r\n\r\nexport function useOrderDetailStrict(orderId: string | null) {\r\n  const { toast } = useToast();\r\n  const [order, setOrder] = useState<StrictOrderEnterprise | null>(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const fetchOrder = useCallback(async () => {\r\n    if (!orderId) {return;}\r\n\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch(`/api/admin/orders/${orderId}`, {\r\n        credentials: 'include' // \u2705 AGREGADO: Incluir cookies de sesi\xF3n NextAuth.js\r\n      });\r\n      const data = await response.json();\r\n\r\n      const validatedResponse = toStrictOrdersResponse(data);\r\n      \r\n      if (isStrictApiError(validatedResponse)) {\r\n        setError(validatedResponse.error);\r\n        toast({\r\n          title: 'Error al cargar orden',\r\n          description: validatedResponse.error,\r\n          variant: 'destructive'\r\n        });\r\n      } else {\r\n        // Para orden individual, extraer la primera orden\r\n        const orderData = validatedResponse.data.orders[0] || null;\r\n        setOrder(orderData);\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      setError(errorMessage);\r\n      toast({\r\n        title: 'Error al cargar orden',\r\n        description: errorMessage,\r\n        variant: 'destructive'\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [orderId, toast]);\r\n\r\n  useEffect(() => {\r\n    fetchOrder();\r\n  }, [fetchOrder]);\r\n\r\n  return {\r\n    order,\r\n    isLoading,\r\n    error,\r\n    refetch: fetchOrder\r\n  };\r\n}\r\n\r\n// ===================================\r\n// UTILIDADES EXPORTADAS\r\n// ===================================\r\n\r\n/**\r\n * Utilidades de cache movidas a useOrdersCache.ts\r\n * Estas funciones est\xE1n disponibles a trav\xE9s del hook useOrdersCache\r\n */\r\n\r\n// Las utilidades de cache ahora est\xE1n disponibles a trav\xE9s del hook useOrdersCache:\r\n// - cache.clearCache()\r\n// - cache.getCacheStats()\r\n// - cache.getPendingRequest()\r\n// - cache.setPendingRequest()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useOrderDetailStrict", "useOrdersEnterpriseStrict", "debounce", "func", "wait", "timeout", "args", "clearTimeout", "setTimeout", "DEFAULT_OPTIONS", "autoFetch", "refetchInterval", "maxRetries", "enableCache", "cacheTimeout", "initialFilters", "options", "toast", "useToast", "apiMonitoring", "useApiMonitoring", "opts", "useMemo", "recordDiscrepancy", "useCallback", "recordRenderingIssue", "cache", "useOrdersCache", "maxSize", "cleanupInterval", "minRequestInterval", "devPersistence", "useOrdersDevState", "state", "useOrdersState", "api", "useOrdersApi", "retryCountRef", "useRef", "refetchIntervalRef", "debounceTimeoutRef", "fetchOrdersInternal", "fetchOrdersImmediate", "newFilters", "console", "log", "filters", "requestKey", "JSON", "stringify", "hasFiltersChanged", "isLoading", "updateFilters", "setLoading", "current", "attemptFetch", "attempt", "currentFilters", "getLastFilters", "result", "isStrictApiResponse", "data", "expectedCount", "pagination", "total", "actualCount", "orders", "length", "endpoint", "URLSearchParams", "page", "toString", "limit", "status", "payment_status", "fulfillment_status", "sort_by", "sort_order", "expectedPageCount", "Math", "min", "setOrders", "setPagination", "setAnalytics", "analytics", "process", "env", "NODE_ENV", "persistState", "hasData", "lastFetchTime", "Date", "now", "code", "delay", "pow", "Promise", "resolve", "setError", "error", "title", "description", "variant", "fetchOrders", "debounceMs", "refreshOrders", "clearCache", "clearError", "retryLastRequest", "lastFilters", "hasRestoredRef", "useEffect", "hasValidPersistedData", "persistedState", "getPersistedState", "ordersCount", "filtersRef", "isInitialMount", "hasChanged", "abortCurrentRequest", "clearInterval", "lastFetch", "orderId", "order", "setOrder", "useState", "setIsLoading", "fetchOrder", "response", "fetch", "credentials", "json", "validatedResponse", "toStrictOrdersResponse", "isStrictApiError", "orderData", "err", "errorMessage", "Error", "message", "refetch"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5bd9da45561e7bfeb44c0171ad3ba3691f647b99"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_3yn7trxgi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_3yn7trxgi();
cov_3yn7trxgi().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_3yn7trxgi().f[0]++;
  cov_3yn7trxgi().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_3yn7trxgi().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_3yn7trxgi().s[3]++;
_export(exports, {
  get useOrderDetailStrict() {
    /* istanbul ignore next */
    cov_3yn7trxgi().f[1]++;
    cov_3yn7trxgi().s[4]++;
    return useOrderDetailStrict;
  },
  get useOrdersEnterpriseStrict() {
    /* istanbul ignore next */
    cov_3yn7trxgi().f[2]++;
    cov_3yn7trxgi().s[5]++;
    return useOrdersEnterpriseStrict;
  }
});
const _react =
/* istanbul ignore next */
(cov_3yn7trxgi().s[6]++, require("react"));
const _usetoast =
/* istanbul ignore next */
(cov_3yn7trxgi().s[7]++, require("../use-toast"));
const _apistrict =
/* istanbul ignore next */
(cov_3yn7trxgi().s[8]++, require("../../types/api-strict"));
const _apimonitoring =
/* istanbul ignore next */
(cov_3yn7trxgi().s[9]++, require("../../utils/api-monitoring"));
const _useOrdersCache =
/* istanbul ignore next */
(cov_3yn7trxgi().s[10]++, require("./useOrdersCache"));
const _useOrdersApi =
/* istanbul ignore next */
(cov_3yn7trxgi().s[11]++, require("./useOrdersApi"));
const _useOrdersState =
/* istanbul ignore next */
(cov_3yn7trxgi().s[12]++, require("./useOrdersState"));
const _useOrdersDevPersistence =
/* istanbul ignore next */
(cov_3yn7trxgi().s[13]++, require("./useOrdersDevPersistence"));
// Función de debounce para evitar peticiones múltiples
function debounce(func, wait) {
  /* istanbul ignore next */
  cov_3yn7trxgi().f[3]++;
  let timeout;
  /* istanbul ignore next */
  cov_3yn7trxgi().s[14]++;
  return (...args) => {
    /* istanbul ignore next */
    cov_3yn7trxgi().f[4]++;
    cov_3yn7trxgi().s[15]++;
    clearTimeout(timeout);
    /* istanbul ignore next */
    cov_3yn7trxgi().s[16]++;
    timeout = setTimeout(() => {
      /* istanbul ignore next */
      cov_3yn7trxgi().f[5]++;
      cov_3yn7trxgi().s[17]++;
      return func(...args);
    }, wait);
  };
}
const DEFAULT_OPTIONS =
/* istanbul ignore next */
(cov_3yn7trxgi().s[18]++, {
  autoFetch: true,
  refetchInterval: 0,
  maxRetries: 3,
  timeout: 10000,
  enableCache: true,
  cacheTimeout: 5 * 60 * 1000 // 5 minutes
});
function useOrdersEnterpriseStrict(initialFilters =
/* istanbul ignore next */
(cov_3yn7trxgi().b[0][0]++, {}), options =
/* istanbul ignore next */
(cov_3yn7trxgi().b[1][0]++, {})) {
  /* istanbul ignore next */
  cov_3yn7trxgi().f[6]++;
  const {
    toast
  } =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[19]++, (0, _usetoast.useToast)());
  const apiMonitoring =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[20]++, (0, _apimonitoring.useApiMonitoring)());
  const opts =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[21]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_3yn7trxgi().f[7]++;
    cov_3yn7trxgi().s[22]++;
    return {
      ...DEFAULT_OPTIONS,
      ...options
    };
  }, [options]));
  // Memoizar las funciones de monitoreo para evitar recreaciones
  const recordDiscrepancy =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[23]++, (0, _react.useCallback)(apiMonitoring.recordDiscrepancy, []));
  const recordRenderingIssue =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[24]++, (0, _react.useCallback)(apiMonitoring.recordRenderingIssue, []));
  // ===================================
  // HOOKS ESPECIALIZADOS
  // ===================================
  // Hook de cache
  const cache =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[25]++, (0, _useOrdersCache.useOrdersCache)({
    enableCache: opts.enableCache,
    cacheTimeout: opts.cacheTimeout,
    maxSize: 50,
    cleanupInterval: 10 * 60 * 1000,
    minRequestInterval: 1000
  }));
  // Hook de persistencia para desarrollo (Fast Refresh)
  const devPersistence =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[26]++, (0, _useOrdersDevPersistence.useOrdersDevState)('orders-enterprise-dev'));
  // Hook de estado
  const state =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[27]++, (0, _useOrdersState.useOrdersState)(initialFilters));
  // Hook de API
  const api =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[28]++, (0, _useOrdersApi.useOrdersApi)({
    timeout: opts.timeout,
    maxRetries: opts.maxRetries,
    enableCache: opts.enableCache,
    cache
  }));
  // Referencias para control de requests (simplificadas)
  const retryCountRef =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[29]++, (0, _react.useRef)(0));
  const refetchIntervalRef =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[30]++, (0, _react.useRef)(null));
  const debounceTimeoutRef =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[31]++, (0, _react.useRef)(null));
  // ===================================
  // FUNCIONES DE FETCH SIMPLIFICADAS
  // ===================================
  // Usar el hook de API directamente
  const fetchOrdersInternal =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[32]++, api.fetchOrdersInternal);
  // ===================================
  // FUNCIONES DE FETCH PÚBLICAS
  // ===================================
  // Lógica de fetch movida a useOrdersApi.ts
  // ===================================
  // FUNCIÓN DE FETCH PÚBLICA CON RETRY
  // ===================================
  // Función interna sin debounce para uso directo
  const fetchOrdersImmediate =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[33]++, (0, _react.useCallback)(async (newFilters =
  /* istanbul ignore next */
  (cov_3yn7trxgi().b[2][0]++, {})) => {
    /* istanbul ignore next */
    cov_3yn7trxgi().f[8]++;
    cov_3yn7trxgi().s[34]++;
    console.log('[useOrdersEnterpriseStrict] fetchOrdersImmediate called with filters:', newFilters);
    /* istanbul ignore next */
    cov_3yn7trxgi().s[35]++;
    console.log('[useOrdersEnterpriseStrict] Current state filters:', state.filters);
    // Generar clave única para esta petición
    const requestKey =
    /* istanbul ignore next */
    (cov_3yn7trxgi().s[36]++, JSON.stringify({
      ...state.filters,
      ...newFilters
    }));
    /* istanbul ignore next */
    cov_3yn7trxgi().s[37]++;
    console.log('[useOrdersEnterpriseStrict] Request key:', requestKey);
    // Evitar peticiones duplicadas
    /* istanbul ignore next */
    cov_3yn7trxgi().s[38]++;
    if (
    /* istanbul ignore next */
    (cov_3yn7trxgi().b[4][0]++, state.hasFiltersChanged({
      ...state.filters,
      ...newFilters
    })) &&
    /* istanbul ignore next */
    (cov_3yn7trxgi().b[4][1]++, state.isLoading)) {
      /* istanbul ignore next */
      cov_3yn7trxgi().b[3][0]++;
      cov_3yn7trxgi().s[39]++;
      console.log('[useOrdersEnterpriseStrict] Skipping duplicate request');
      /* istanbul ignore next */
      cov_3yn7trxgi().s[40]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_3yn7trxgi().b[3][1]++;
    }
    // Actualizar filtros y estado de carga
    cov_3yn7trxgi().s[41]++;
    console.log('[useOrdersEnterpriseStrict] Updating filters and setting loading to true');
    /* istanbul ignore next */
    cov_3yn7trxgi().s[42]++;
    state.updateFilters(newFilters);
    /* istanbul ignore next */
    cov_3yn7trxgi().s[43]++;
    state.setLoading(true);
    /* istanbul ignore next */
    cov_3yn7trxgi().s[44]++;
    retryCountRef.current = 0;
    /* istanbul ignore next */
    cov_3yn7trxgi().s[45]++;
    const attemptFetch = async attempt => {
      /* istanbul ignore next */
      cov_3yn7trxgi().f[9]++;
      const currentFilters =
      /* istanbul ignore next */
      (cov_3yn7trxgi().s[46]++, state.getLastFilters());
      /* istanbul ignore next */
      cov_3yn7trxgi().s[47]++;
      console.log('[useOrdersEnterpriseStrict] attemptFetch - attempt:', attempt, 'filters:', currentFilters);
      const result =
      /* istanbul ignore next */
      (cov_3yn7trxgi().s[48]++, await fetchOrdersInternal(currentFilters, attempt > 0));
      /* istanbul ignore next */
      cov_3yn7trxgi().s[49]++;
      console.log('[useOrdersEnterpriseStrict] API result:', result);
      /* istanbul ignore next */
      cov_3yn7trxgi().s[50]++;
      if ((0, _apistrict.isStrictApiResponse)(result)) {
        /* istanbul ignore next */
        cov_3yn7trxgi().b[5][0]++;
        cov_3yn7trxgi().s[51]++;
        console.log('[useOrdersEnterpriseStrict] Valid API response received:', result.data);
        // Monitoreo automático de discrepancias
        const expectedCount =
        /* istanbul ignore next */
        (cov_3yn7trxgi().s[52]++, result.data.pagination.total);
        const actualCount =
        /* istanbul ignore next */
        (cov_3yn7trxgi().s[53]++, result.data.orders.length);
        const endpoint =
        /* istanbul ignore next */
        (cov_3yn7trxgi().s[54]++, `/api/admin/orders?${new URLSearchParams({
          page:
          /* istanbul ignore next */
          (cov_3yn7trxgi().b[6][0]++, currentFilters.page?.toString()) ||
          /* istanbul ignore next */
          (cov_3yn7trxgi().b[6][1]++, '1'),
          limit:
          /* istanbul ignore next */
          (cov_3yn7trxgi().b[7][0]++, currentFilters.limit?.toString()) ||
          /* istanbul ignore next */
          (cov_3yn7trxgi().b[7][1]++, '20'),
          ...(
          /* istanbul ignore next */
          (cov_3yn7trxgi().b[8][0]++, currentFilters.status) &&
          /* istanbul ignore next */
          (cov_3yn7trxgi().b[8][1]++, {
            status: currentFilters.status
          })),
          ...(
          /* istanbul ignore next */
          (cov_3yn7trxgi().b[9][0]++, currentFilters.payment_status) &&
          /* istanbul ignore next */
          (cov_3yn7trxgi().b[9][1]++, {
            payment_status: currentFilters.payment_status
          })),
          ...(
          /* istanbul ignore next */
          (cov_3yn7trxgi().b[10][0]++, currentFilters.fulfillment_status) &&
          /* istanbul ignore next */
          (cov_3yn7trxgi().b[10][1]++, {
            fulfillment_status: currentFilters.fulfillment_status
          })),
          ...(
          /* istanbul ignore next */
          (cov_3yn7trxgi().b[11][0]++, currentFilters.sort_by) &&
          /* istanbul ignore next */
          (cov_3yn7trxgi().b[11][1]++, {
            sort_by: currentFilters.sort_by
          })),
          ...(
          /* istanbul ignore next */
          (cov_3yn7trxgi().b[12][0]++, currentFilters.sort_order) &&
          /* istanbul ignore next */
          (cov_3yn7trxgi().b[12][1]++, {
            sort_order: currentFilters.sort_order
          }))
        }).toString()}`);
        // Solo registrar discrepancia si hay una diferencia real (no por paginación)
        const expectedPageCount =
        /* istanbul ignore next */
        (cov_3yn7trxgi().s[55]++, Math.min(
        /* istanbul ignore next */
        (cov_3yn7trxgi().b[13][0]++, currentFilters.limit) ||
        /* istanbul ignore next */
        (cov_3yn7trxgi().b[13][1]++, 20), expectedCount - ((
        /* istanbul ignore next */
        (cov_3yn7trxgi().b[14][0]++, currentFilters.page) ||
        /* istanbul ignore next */
        (cov_3yn7trxgi().b[14][1]++, 1)) - 1) * (
        /* istanbul ignore next */
        (cov_3yn7trxgi().b[15][0]++, currentFilters.limit) ||
        /* istanbul ignore next */
        (cov_3yn7trxgi().b[15][1]++, 20))));
        /* istanbul ignore next */
        cov_3yn7trxgi().s[56]++;
        if (
        /* istanbul ignore next */
        (cov_3yn7trxgi().b[17][0]++, actualCount < expectedPageCount) &&
        /* istanbul ignore next */
        (cov_3yn7trxgi().b[17][1]++, expectedPageCount > 0)) {
          /* istanbul ignore next */
          cov_3yn7trxgi().b[16][0]++;
          cov_3yn7trxgi().s[57]++;
          recordDiscrepancy(endpoint, expectedPageCount, actualCount);
        } else
        /* istanbul ignore next */
        {
          cov_3yn7trxgi().b[16][1]++;
        }
        // Actualizar estado usando el hook especializado
        cov_3yn7trxgi().s[58]++;
        state.setOrders(result.data.orders);
        /* istanbul ignore next */
        cov_3yn7trxgi().s[59]++;
        state.setPagination(result.data.pagination);
        /* istanbul ignore next */
        cov_3yn7trxgi().s[60]++;
        state.setAnalytics(
        /* istanbul ignore next */
        (cov_3yn7trxgi().b[18][0]++, result.data.analytics) ||
        /* istanbul ignore next */
        (cov_3yn7trxgi().b[18][1]++, null));
        /* istanbul ignore next */
        cov_3yn7trxgi().s[61]++;
        retryCountRef.current = 0;
        // ✅ PERSISTIR ESTADO PARA DESARROLLO (Fast Refresh)
        /* istanbul ignore next */
        cov_3yn7trxgi().s[62]++;
        if (process.env.NODE_ENV === 'development') {
          /* istanbul ignore next */
          cov_3yn7trxgi().b[19][0]++;
          cov_3yn7trxgi().s[63]++;
          devPersistence.persistState({
            orders: result.data.orders,
            pagination: result.data.pagination,
            analytics:
            /* istanbul ignore next */
            (cov_3yn7trxgi().b[20][0]++, result.data.analytics) ||
            /* istanbul ignore next */
            (cov_3yn7trxgi().b[20][1]++, null),
            filters: currentFilters,
            hasData: true,
            lastFetchTime: Date.now()
          });
        } else
        /* istanbul ignore next */
        {
          cov_3yn7trxgi().b[19][1]++;
        }
      } else {
        /* istanbul ignore next */
        cov_3yn7trxgi().b[5][1]++;
        cov_3yn7trxgi().s[64]++;
        // Es un error
        if (
        /* istanbul ignore next */
        (cov_3yn7trxgi().b[22][0]++, attempt < opts.maxRetries) &&
        /* istanbul ignore next */
        (cov_3yn7trxgi().b[22][1]++, result.code !== 'REQUEST_CANCELLED')) {
          /* istanbul ignore next */
          cov_3yn7trxgi().b[21][0]++;
          cov_3yn7trxgi().s[65]++;
          retryCountRef.current = attempt + 1;
          // Esperar antes del retry (exponential backoff)
          const delay =
          /* istanbul ignore next */
          (cov_3yn7trxgi().s[66]++, Math.min(1000 * Math.pow(2, attempt), 10000));
          /* istanbul ignore next */
          cov_3yn7trxgi().s[67]++;
          await new Promise(resolve => {
            /* istanbul ignore next */
            cov_3yn7trxgi().f[10]++;
            cov_3yn7trxgi().s[68]++;
            return setTimeout(resolve, delay);
          });
          /* istanbul ignore next */
          cov_3yn7trxgi().s[69]++;
          return attemptFetch(attempt + 1);
        } else
        /* istanbul ignore next */
        {
          cov_3yn7trxgi().b[21][1]++;
        }
        // Máximo de reintentos alcanzado o error no recuperable
        cov_3yn7trxgi().s[70]++;
        state.setError(result.error);
        // Registrar problema de renderizado por error de API
        /* istanbul ignore next */
        cov_3yn7trxgi().s[71]++;
        recordRenderingIssue('useOrdersEnterpriseStrict', 0, 0, currentFilters, result.error);
        // Mostrar toast de error
        /* istanbul ignore next */
        cov_3yn7trxgi().s[72]++;
        if (result.code !== 'REQUEST_CANCELLED') {
          /* istanbul ignore next */
          cov_3yn7trxgi().b[23][0]++;
          cov_3yn7trxgi().s[73]++;
          toast({
            title: 'Error al cargar órdenes',
            description: result.error,
            variant: 'destructive'
          });
        } else
        /* istanbul ignore next */
        {
          cov_3yn7trxgi().b[23][1]++;
        }
      }
    };
    /* istanbul ignore next */
    cov_3yn7trxgi().s[74]++;
    await attemptFetch(0);
  }, [fetchOrdersInternal, opts.maxRetries, toast, recordDiscrepancy, recordRenderingIssue, state]));
  // Función fetchOrders con debouncing para evitar peticiones múltiples
  const fetchOrders =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[75]++, (0, _react.useCallback)((newFilters =
  /* istanbul ignore next */
  (cov_3yn7trxgi().b[24][0]++, {})) => {
    /* istanbul ignore next */
    cov_3yn7trxgi().f[11]++;
    cov_3yn7trxgi().s[76]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_3yn7trxgi().f[12]++;
      cov_3yn7trxgi().s[77]++;
      // Limpiar timeout anterior si existe
      if (debounceTimeoutRef.current) {
        /* istanbul ignore next */
        cov_3yn7trxgi().b[25][0]++;
        cov_3yn7trxgi().s[78]++;
        clearTimeout(debounceTimeoutRef.current);
      } else
      /* istanbul ignore next */
      {
        cov_3yn7trxgi().b[25][1]++;
      }
      // Configurar nuevo timeout con debounce
      const debounceMs =
      /* istanbul ignore next */
      (cov_3yn7trxgi().s[79]++, process.env.NODE_ENV === 'development' ?
      /* istanbul ignore next */
      (cov_3yn7trxgi().b[26][0]++, 300) :
      /* istanbul ignore next */
      (cov_3yn7trxgi().b[26][1]++, 150));
      /* istanbul ignore next */
      cov_3yn7trxgi().s[80]++;
      debounceTimeoutRef.current = setTimeout(async () => {
        /* istanbul ignore next */
        cov_3yn7trxgi().f[13]++;
        cov_3yn7trxgi().s[81]++;
        try {
          /* istanbul ignore next */
          cov_3yn7trxgi().s[82]++;
          await fetchOrdersImmediate(newFilters);
          /* istanbul ignore next */
          cov_3yn7trxgi().s[83]++;
          resolve();
        } catch (error) {
          /* istanbul ignore next */
          cov_3yn7trxgi().s[84]++;
          console.error('Error in debounced fetchOrders:', error);
          /* istanbul ignore next */
          cov_3yn7trxgi().s[85]++;
          resolve(); // Resolver incluso en caso de error para evitar promesas colgadas
        }
      }, debounceMs);
    });
  }, [fetchOrdersImmediate]));
  // ===================================
  // OTRAS ACCIONES
  // ===================================
  const refreshOrders =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[86]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_3yn7trxgi().f[14]++;
    cov_3yn7trxgi().s[87]++;
    // Limpiar cache para forzar refresh
    if (opts.enableCache) {
      /* istanbul ignore next */
      cov_3yn7trxgi().b[27][0]++;
      cov_3yn7trxgi().s[88]++;
      cache.clearCache();
    } else
    /* istanbul ignore next */
    {
      cov_3yn7trxgi().b[27][1]++;
    }
    cov_3yn7trxgi().s[89]++;
    await fetchOrders();
  }, [fetchOrders, opts.enableCache, cache]));
  // Usar las funciones del hook de estado directamente
  const updateFilters =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[90]++, state.updateFilters);
  const clearError =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[91]++, state.clearError);
  const retryLastRequest =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[92]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_3yn7trxgi().f[15]++;
    const lastFilters =
    /* istanbul ignore next */
    (cov_3yn7trxgi().s[93]++, state.getLastFilters());
    /* istanbul ignore next */
    cov_3yn7trxgi().s[94]++;
    if (lastFilters) {
      /* istanbul ignore next */
      cov_3yn7trxgi().b[28][0]++;
      cov_3yn7trxgi().s[95]++;
      await fetchOrders(lastFilters);
    } else
    /* istanbul ignore next */
    {
      cov_3yn7trxgi().b[28][1]++;
    }
  }, [fetchOrders, state]));
  // ===================================
  // EFECTOS
  // ===================================
  // ===================================
  // RESTAURACIÓN DE ESTADO PERSISTIDO (DESARROLLO)
  // ===================================
  const hasRestoredRef =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[96]++, (0, _react.useRef)(false));
  /* istanbul ignore next */
  cov_3yn7trxgi().s[97]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_3yn7trxgi().f[16]++;
    cov_3yn7trxgi().s[98]++;
    if (
    /* istanbul ignore next */
    (cov_3yn7trxgi().b[30][0]++, !hasRestoredRef.current) &&
    /* istanbul ignore next */
    (cov_3yn7trxgi().b[30][1]++, process.env.NODE_ENV === 'development')) {
      /* istanbul ignore next */
      cov_3yn7trxgi().b[29][0]++;
      cov_3yn7trxgi().s[99]++;
      hasRestoredRef.current = true;
      // Intentar restaurar estado persistido
      /* istanbul ignore next */
      cov_3yn7trxgi().s[100]++;
      if (devPersistence.hasValidPersistedData()) {
        /* istanbul ignore next */
        cov_3yn7trxgi().b[31][0]++;
        const persistedState =
        /* istanbul ignore next */
        (cov_3yn7trxgi().s[101]++, devPersistence.getPersistedState());
        /* istanbul ignore next */
        cov_3yn7trxgi().s[102]++;
        if (persistedState) {
          /* istanbul ignore next */
          cov_3yn7trxgi().b[32][0]++;
          cov_3yn7trxgi().s[103]++;
          console.log('[useOrdersEnterpriseStrict] Restoring persisted state:', {
            ordersCount: persistedState.orders.length,
            hasData: persistedState.hasData
          });
          // Restaurar estado
          /* istanbul ignore next */
          cov_3yn7trxgi().s[104]++;
          state.setOrders(persistedState.orders);
          /* istanbul ignore next */
          cov_3yn7trxgi().s[105]++;
          state.setPagination(persistedState.pagination);
          /* istanbul ignore next */
          cov_3yn7trxgi().s[106]++;
          state.setAnalytics(persistedState.analytics);
          /* istanbul ignore next */
          cov_3yn7trxgi().s[107]++;
          state.updateFilters(persistedState.filters);
          /* istanbul ignore next */
          cov_3yn7trxgi().s[108]++;
          return; // No hacer auto-fetch si tenemos datos persistidos
        } else
        /* istanbul ignore next */
        {
          cov_3yn7trxgi().b[32][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_3yn7trxgi().b[31][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_3yn7trxgi().b[29][1]++;
    }
    // Auto-fetch inicial solo si no hay datos persistidos
    cov_3yn7trxgi().s[109]++;
    if (
    /* istanbul ignore next */
    (cov_3yn7trxgi().b[34][0]++, opts.autoFetch) &&
    /* istanbul ignore next */
    (cov_3yn7trxgi().b[34][1]++, !hasRestoredRef.current)) {
      /* istanbul ignore next */
      cov_3yn7trxgi().b[33][0]++;
      cov_3yn7trxgi().s[110]++;
      fetchOrders();
    } else
    /* istanbul ignore next */
    {
      cov_3yn7trxgi().b[33][1]++;
    }
  }, [opts.autoFetch]); // Solo ejecutar una vez al montar
  // Escuchar cambios en filtros con debouncing optimizado
  const filtersRef =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[111]++, (0, _react.useRef)(state.filters));
  const isInitialMount =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[112]++, (0, _react.useRef)(true));
  /* istanbul ignore next */
  cov_3yn7trxgi().s[113]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_3yn7trxgi().f[17]++;
    cov_3yn7trxgi().s[114]++;
    // Evitar fetch en el primer render (ya se hace en auto-fetch)
    if (isInitialMount.current) {
      /* istanbul ignore next */
      cov_3yn7trxgi().b[35][0]++;
      cov_3yn7trxgi().s[115]++;
      isInitialMount.current = false;
      /* istanbul ignore next */
      cov_3yn7trxgi().s[116]++;
      filtersRef.current = state.filters;
      /* istanbul ignore next */
      cov_3yn7trxgi().s[117]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_3yn7trxgi().b[35][1]++;
    }
    // Solo hacer fetch si los filtros han cambiado realmente
    const hasChanged =
    /* istanbul ignore next */
    (cov_3yn7trxgi().s[118]++, JSON.stringify(filtersRef.current) !== JSON.stringify(state.filters));
    /* istanbul ignore next */
    cov_3yn7trxgi().s[119]++;
    if (hasChanged) {
      /* istanbul ignore next */
      cov_3yn7trxgi().b[36][0]++;
      cov_3yn7trxgi().s[120]++;
      filtersRef.current = state.filters;
      /* istanbul ignore next */
      cov_3yn7trxgi().s[121]++;
      fetchOrders();
    } else
    /* istanbul ignore next */
    {
      cov_3yn7trxgi().b[36][1]++;
    }
  }, [state.filters, fetchOrders]); // Dependencias mínimas y estables
  // Refetch interval - TEMPORALMENTE DESHABILITADO para evitar refresco infinito
  /* istanbul ignore next */
  cov_3yn7trxgi().s[122]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_3yn7trxgi().f[18]++;
  } // NOTA: Refetch interval deshabilitado temporalmente para solucionar refresco infinito
  // TODO: Reimplementar con useRef para fetchOrders o usar React Query
  /*
  if (opts.refetchInterval > 0) {
    refetchIntervalRef.current = setInterval(() => {
      if (!state.isLoading) {
        fetchOrders();
      }
    }, opts.refetchInterval);
      return () => {
      if (refetchIntervalRef.current) {
        clearInterval(refetchIntervalRef.current);
      }
    };
  }
  */, [opts.refetchInterval]);
  // Limpieza automática de cache movida a useOrdersCache.ts
  // Cleanup al desmontar - OPTIMIZADO: Sin dependencias inestables
  /* istanbul ignore next */
  cov_3yn7trxgi().s[123]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_3yn7trxgi().f[19]++;
    cov_3yn7trxgi().s[124]++;
    return () => {
      /* istanbul ignore next */
      cov_3yn7trxgi().f[20]++;
      cov_3yn7trxgi().s[125]++;
      // Cancelar peticiones en progreso usando el hook de API
      api.abortCurrentRequest();
      // Limpiar intervalos y timeouts
      /* istanbul ignore next */
      cov_3yn7trxgi().s[126]++;
      if (refetchIntervalRef.current) {
        /* istanbul ignore next */
        cov_3yn7trxgi().b[37][0]++;
        cov_3yn7trxgi().s[127]++;
        clearInterval(refetchIntervalRef.current);
      } else
      /* istanbul ignore next */
      {
        cov_3yn7trxgi().b[37][1]++;
      }
      cov_3yn7trxgi().s[128]++;
      if (debounceTimeoutRef.current) {
        /* istanbul ignore next */
        cov_3yn7trxgi().b[38][0]++;
        cov_3yn7trxgi().s[129]++;
        clearTimeout(debounceTimeoutRef.current);
      } else
      /* istanbul ignore next */
      {
        cov_3yn7trxgi().b[38][1]++;
      }
      cov_3yn7trxgi().s[130]++;
      if (process.env.NODE_ENV === 'development') {
        /* istanbul ignore next */
        cov_3yn7trxgi().b[39][0]++;
        cov_3yn7trxgi().s[131]++;
        console.log('[useOrdersEnterpriseStrict] Hook cleanup completed');
      } else
      /* istanbul ignore next */
      {
        cov_3yn7trxgi().b[39][1]++;
      }
    };
  }, []); // ✅ CORREGIDO: Sin dependencias para evitar remontajes por Fast Refresh
  // ===================================
  // RETORNO DEL HOOK
  // ===================================
  /* istanbul ignore next */
  cov_3yn7trxgi().s[132]++;
  return {
    // Estado
    orders: state.orders,
    pagination: state.pagination,
    filters: state.filters,
    analytics: state.analytics,
    isLoading: state.isLoading,
    error: state.error,
    lastFetch: state.lastFetch,
    // Acciones
    fetchOrders,
    refreshOrders,
    updateFilters,
    clearError,
    retryLastRequest
  };
}
function useOrderDetailStrict(orderId) {
  /* istanbul ignore next */
  cov_3yn7trxgi().f[21]++;
  const {
    toast
  } =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[133]++, (0, _usetoast.useToast)());
  const [order, setOrder] =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[134]++, useState(null));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[135]++, useState(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[136]++, useState(null));
  const fetchOrder =
  /* istanbul ignore next */
  (cov_3yn7trxgi().s[137]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_3yn7trxgi().f[22]++;
    cov_3yn7trxgi().s[138]++;
    if (!orderId) {
      /* istanbul ignore next */
      cov_3yn7trxgi().b[40][0]++;
      cov_3yn7trxgi().s[139]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_3yn7trxgi().b[40][1]++;
    }
    cov_3yn7trxgi().s[140]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_3yn7trxgi().s[141]++;
    setError(null);
    /* istanbul ignore next */
    cov_3yn7trxgi().s[142]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_3yn7trxgi().s[143]++, await fetch(`/api/admin/orders/${orderId}`, {
        credentials: 'include' // ✅ AGREGADO: Incluir cookies de sesión NextAuth.js
      }));
      const data =
      /* istanbul ignore next */
      (cov_3yn7trxgi().s[144]++, await response.json());
      const validatedResponse =
      /* istanbul ignore next */
      (cov_3yn7trxgi().s[145]++, toStrictOrdersResponse(data));
      /* istanbul ignore next */
      cov_3yn7trxgi().s[146]++;
      if ((0, _apistrict.isStrictApiError)(validatedResponse)) {
        /* istanbul ignore next */
        cov_3yn7trxgi().b[41][0]++;
        cov_3yn7trxgi().s[147]++;
        setError(validatedResponse.error);
        /* istanbul ignore next */
        cov_3yn7trxgi().s[148]++;
        toast({
          title: 'Error al cargar orden',
          description: validatedResponse.error,
          variant: 'destructive'
        });
      } else {
        /* istanbul ignore next */
        cov_3yn7trxgi().b[41][1]++;
        // Para orden individual, extraer la primera orden
        const orderData =
        /* istanbul ignore next */
        (cov_3yn7trxgi().s[149]++,
        /* istanbul ignore next */
        (cov_3yn7trxgi().b[42][0]++, validatedResponse.data.orders[0]) ||
        /* istanbul ignore next */
        (cov_3yn7trxgi().b[42][1]++, null));
        /* istanbul ignore next */
        cov_3yn7trxgi().s[150]++;
        setOrder(orderData);
      }
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_3yn7trxgi().s[151]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_3yn7trxgi().b[43][0]++, err.message) :
      /* istanbul ignore next */
      (cov_3yn7trxgi().b[43][1]++, 'Error desconocido'));
      /* istanbul ignore next */
      cov_3yn7trxgi().s[152]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_3yn7trxgi().s[153]++;
      toast({
        title: 'Error al cargar orden',
        description: errorMessage,
        variant: 'destructive'
      });
    } finally {
      /* istanbul ignore next */
      cov_3yn7trxgi().s[154]++;
      setIsLoading(false);
    }
  }, [orderId, toast]));
  /* istanbul ignore next */
  cov_3yn7trxgi().s[155]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_3yn7trxgi().f[23]++;
    cov_3yn7trxgi().s[156]++;
    fetchOrder();
  }, [fetchOrder]);
  /* istanbul ignore next */
  cov_3yn7trxgi().s[157]++;
  return {
    order,
    isLoading,
    error,
    refetch: fetchOrder
  };
} // ===================================
// UTILIDADES EXPORTADAS
// ===================================
/**
* Utilidades de cache movidas a useOrdersCache.ts
* Estas funciones están disponibles a través del hook useOrdersCache
*/ // Las utilidades de cache ahora están disponibles a través del hook useOrdersCache:
// - cache.clearCache()
// - cache.getCacheStats()
// - cache.getPendingRequest()
// - cache.setPendingRequest()
//# sourceMappingURL=data:application/json;charset=utf-8;base64,