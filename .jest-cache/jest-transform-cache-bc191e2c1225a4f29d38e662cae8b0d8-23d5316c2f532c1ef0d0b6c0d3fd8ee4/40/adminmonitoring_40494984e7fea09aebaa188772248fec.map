{"version":3,"names":["cov_2q19tdwvs8","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","cleanupOldMetrics","createAlert","getActiveAlerts","getPerformanceMetrics","logStructured","recordPerformanceMetric","withPerformanceMonitoring","supabaseUrl","process","env","NEXT_PUBLIC_SUPABASE_URL","supabaseServiceKey","SUPABASE_SERVICE_ROLE_KEY","supabase","_supabasejs","createClient","metricsCache","Map","alertsCache","metric","from","insert","endpoint","method","duration_ms","duration","status_code","status","user_id","userId","error_message","error","timestamp","key","cached","get","count","totalDuration","errors","avgDuration","errorRate","set","severity","message","metadata","Date","toISOString","console","alert","alert_type","resolved","push","length","shift","timeframe","now","startTime","getTime","data","metrics","select","gte","order","ascending","stats","totalRequests","reduce","sum","m","filter","slowRequests","endpoints","forEach","Object","keys","rawMetrics","slice","alerts","eq","limit","map","handler","request","url","URL","response","pathname","Error","level","logEntry","service","JSON","stringify","warn","log","daysToKeep","cutoffDate","setDate","getDate","delete","lt","daysKept"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\monitoring\\admin-monitoring.ts"],"sourcesContent":["/**\r\n * Sistema de monitoreo y logging para APIs administrativas\r\n * Incluye m√©tricas de performance, alertas y logging estructurado\r\n */\r\n\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;\r\nconst supabase = createClient(supabaseUrl, supabaseServiceKey);\r\n\r\n// Tipos para m√©tricas\r\nexport interface PerformanceMetric {\r\n  endpoint: string;\r\n  method: string;\r\n  duration: number;\r\n  status: number;\r\n  userId?: string;\r\n  timestamp: string;\r\n  error?: string;\r\n}\r\n\r\nexport interface SecurityAlert {\r\n  type: 'rate_limit' | 'auth_failure' | 'permission_denied' | 'suspicious_activity';\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  message: string;\r\n  metadata: Record<string, any>;\r\n  timestamp: string;\r\n}\r\n\r\n// Cache en memoria para m√©tricas (en producci√≥n usar Redis)\r\nconst metricsCache = new Map<string, any>();\r\nconst alertsCache: SecurityAlert[] = [];\r\n\r\n/**\r\n * Registrar m√©trica de performance\r\n */\r\nexport async function recordPerformanceMetric(metric: PerformanceMetric): Promise<void> {\r\n  try {\r\n    // Guardar en base de datos\r\n    await supabase\r\n      .from('admin_performance_metrics')\r\n      .insert({\r\n        endpoint: metric.endpoint,\r\n        method: metric.method,\r\n        duration_ms: metric.duration,\r\n        status_code: metric.status,\r\n        user_id: metric.userId,\r\n        error_message: metric.error,\r\n        timestamp: metric.timestamp\r\n      });\r\n\r\n    // Actualizar cache de m√©tricas\r\n    const key = `${metric.endpoint}_${metric.method}`;\r\n    const cached = metricsCache.get(key) || { count: 0, totalDuration: 0, errors: 0 };\r\n    \r\n    cached.count++;\r\n    cached.totalDuration += metric.duration;\r\n    if (metric.status >= 400) {cached.errors++;}\r\n    cached.avgDuration = cached.totalDuration / cached.count;\r\n    cached.errorRate = (cached.errors / cached.count) * 100;\r\n    \r\n    metricsCache.set(key, cached);\r\n\r\n    // Verificar si necesita alerta\r\n    if (metric.duration > 5000) { // M√°s de 5 segundos\r\n      await createAlert({\r\n        type: 'suspicious_activity',\r\n        severity: 'medium',\r\n        message: `API response time exceeded 5 seconds: ${metric.endpoint}`,\r\n        metadata: { metric },\r\n        timestamp: new Date().toISOString()\r\n      });\r\n    }\r\n\r\n    if (metric.status >= 500) {\r\n      await createAlert({\r\n        type: 'suspicious_activity',\r\n        severity: 'high',\r\n        message: `Server error in admin API: ${metric.endpoint}`,\r\n        metadata: { metric },\r\n        timestamp: new Date().toISOString()\r\n      });\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Error recording performance metric:', error);\r\n  }\r\n}\r\n\r\n/**\r\n * Crear alerta de seguridad\r\n */\r\nexport async function createAlert(alert: SecurityAlert): Promise<void> {\r\n  try {\r\n    // Guardar en base de datos\r\n    await supabase\r\n      .from('admin_security_alerts')\r\n      .insert({\r\n        alert_type: alert.type,\r\n        severity: alert.severity,\r\n        message: alert.message,\r\n        metadata: alert.metadata,\r\n        timestamp: alert.timestamp,\r\n        resolved: false\r\n      });\r\n\r\n    // Agregar al cache\r\n    alertsCache.push(alert);\r\n    \r\n    // Mantener solo las √∫ltimas 100 alertas en cache\r\n    if (alertsCache.length > 100) {\r\n      alertsCache.shift();\r\n    }\r\n\r\n    // Log cr√≠tico para alertas de alta severidad\r\n    if (alert.severity === 'critical' || alert.severity === 'high') {\r\n      console.error('üö® CRITICAL SECURITY ALERT:', alert);\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Error creating security alert:', error);\r\n  }\r\n}\r\n\r\n/**\r\n * Obtener m√©tricas de performance\r\n */\r\nexport async function getPerformanceMetrics(timeframe: '1h' | '24h' | '7d' = '24h'): Promise<any> {\r\n  try {\r\n    const now = new Date();\r\n    let startTime: Date;\r\n\r\n    switch (timeframe) {\r\n      case '1h':\r\n        startTime = new Date(now.getTime() - 60 * 60 * 1000);\r\n        break;\r\n      case '24h':\r\n        startTime = new Date(now.getTime() - 24 * 60 * 60 * 1000);\r\n        break;\r\n      case '7d':\r\n        startTime = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\r\n        break;\r\n    }\r\n\r\n    const { data: metrics, error } = await supabase\r\n      .from('admin_performance_metrics')\r\n      .select('*')\r\n      .gte('timestamp', startTime.toISOString())\r\n      .order('timestamp', { ascending: false });\r\n\r\n    if (error) {\r\n      console.error('Error fetching performance metrics:', error);\r\n      return null;\r\n    }\r\n\r\n    // Calcular estad√≠sticas\r\n    const stats = {\r\n      totalRequests: metrics.length,\r\n      avgDuration: metrics.reduce((sum, m) => sum + m.duration_ms, 0) / metrics.length || 0,\r\n      errorRate: (metrics.filter(m => m.status_code >= 400).length / metrics.length) * 100 || 0,\r\n      slowRequests: metrics.filter(m => m.duration_ms > 2000).length,\r\n      endpoints: {} as Record<string, any>\r\n    };\r\n\r\n    // Agrupar por endpoint\r\n    metrics.forEach(metric => {\r\n      const key = `${metric.method} ${metric.endpoint}`;\r\n      if (!stats.endpoints[key]) {\r\n        stats.endpoints[key] = {\r\n          count: 0,\r\n          totalDuration: 0,\r\n          errors: 0\r\n        };\r\n      }\r\n      \r\n      stats.endpoints[key].count++;\r\n      stats.endpoints[key].totalDuration += metric.duration_ms;\r\n      if (metric.status_code >= 400) {stats.endpoints[key].errors++;}\r\n    });\r\n\r\n    // Calcular promedios por endpoint\r\n    Object.keys(stats.endpoints).forEach(key => {\r\n      const endpoint = stats.endpoints[key];\r\n      endpoint.avgDuration = endpoint.totalDuration / endpoint.count;\r\n      endpoint.errorRate = (endpoint.errors / endpoint.count) * 100;\r\n    });\r\n\r\n    return {\r\n      timeframe,\r\n      stats,\r\n      rawMetrics: metrics.slice(0, 50), // √öltimas 50 m√©tricas\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n  } catch (error) {\r\n    console.error('Error getting performance metrics:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Obtener alertas de seguridad activas\r\n */\r\nexport async function getActiveAlerts(): Promise<SecurityAlert[]> {\r\n  try {\r\n    const { data: alerts, error } = await supabase\r\n      .from('admin_security_alerts')\r\n      .select('*')\r\n      .eq('resolved', false)\r\n      .order('timestamp', { ascending: false })\r\n      .limit(50);\r\n\r\n    if (error) {\r\n      console.error('Error fetching security alerts:', error);\r\n      return [];\r\n    }\r\n\r\n    return alerts.map(alert => ({\r\n      type: alert.alert_type,\r\n      severity: alert.severity,\r\n      message: alert.message,\r\n      metadata: alert.metadata,\r\n      timestamp: alert.timestamp\r\n    }));\r\n\r\n  } catch (error) {\r\n    console.error('Error getting active alerts:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\n/**\r\n * Middleware para medir performance de APIs\r\n */\r\nexport function withPerformanceMonitoring(\r\n  handler: (request: Request) => Promise<Response>\r\n) {\r\n  return async (request: Request): Promise<Response> => {\r\n    const startTime = Date.now();\r\n    const url = new URL(request.url);\r\n    \r\n    try {\r\n      const response = await handler(request);\r\n      const duration = Date.now() - startTime;\r\n\r\n      // Registrar m√©trica\r\n      await recordPerformanceMetric({\r\n        endpoint: url.pathname,\r\n        method: request.method,\r\n        duration,\r\n        status: response.status,\r\n        timestamp: new Date().toISOString()\r\n      });\r\n\r\n      return response;\r\n\r\n    } catch (error) {\r\n      const duration = Date.now() - startTime;\r\n\r\n      // Registrar m√©trica de error\r\n      await recordPerformanceMetric({\r\n        endpoint: url.pathname,\r\n        method: request.method,\r\n        duration,\r\n        status: 500,\r\n        error: error instanceof Error ? error.message : 'Unknown error',\r\n        timestamp: new Date().toISOString()\r\n      });\r\n\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Logging estructurado\r\n */\r\nexport function logStructured(\r\n  level: 'info' | 'warn' | 'error',\r\n  message: string,\r\n  metadata: Record<string, any> = {}\r\n): void {\r\n  const logEntry = {\r\n    timestamp: new Date().toISOString(),\r\n    level,\r\n    message,\r\n    metadata,\r\n    service: 'admin-api'\r\n  };\r\n\r\n  switch (level) {\r\n    case 'error':\r\n      console.error(JSON.stringify(logEntry));\r\n      break;\r\n    case 'warn':\r\n      console.warn(JSON.stringify(logEntry));\r\n      break;\r\n    default:\r\n      console.log(JSON.stringify(logEntry));\r\n  }\r\n}\r\n\r\n/**\r\n * Limpiar m√©tricas antiguas (ejecutar peri√≥dicamente)\r\n */\r\nexport async function cleanupOldMetrics(daysToKeep: number = 30): Promise<void> {\r\n  try {\r\n    const cutoffDate = new Date();\r\n    cutoffDate.setDate(cutoffDate.getDate() - daysToKeep);\r\n\r\n    await supabase\r\n      .from('admin_performance_metrics')\r\n      .delete()\r\n      .lt('timestamp', cutoffDate.toISOString());\r\n\r\n    await supabase\r\n      .from('admin_security_alerts')\r\n      .delete()\r\n      .lt('timestamp', cutoffDate.toISOString());\r\n\r\n    logStructured('info', 'Cleaned up old metrics and alerts', {\r\n      cutoffDate: cutoffDate.toISOString(),\r\n      daysKept: daysToKeep\r\n    });\r\n\r\n  } catch (error) {\r\n    logStructured('error', 'Error cleaning up old metrics', { error });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]}