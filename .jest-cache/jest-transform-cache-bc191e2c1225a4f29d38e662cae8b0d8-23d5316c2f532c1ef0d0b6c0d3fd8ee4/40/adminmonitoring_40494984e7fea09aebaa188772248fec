ad4d9defc939c621876dd93fda6eef41
/**
 * Sistema de monitoreo y logging para APIs administrativas
 * Incluye mÃ©tricas de performance, alertas y logging estructurado
 */"use strict";

/* istanbul ignore next */
function cov_2q19tdwvs8() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\monitoring\\admin-monitoring.ts";
  var hash = "a8e1652f60d43b51b43eb6cae54cb7759893581d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\monitoring\\admin-monitoring.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 36,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 27
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 31
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 37
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 29
        }
      },
      "9": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 39
        }
      },
      "10": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 41
        }
      },
      "11": {
        start: {
          line: 37,
          column: 20
        },
        end: {
          line: 37,
          column: 52
        }
      },
      "12": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 38,
          column: 56
        }
      },
      "13": {
        start: {
          line: 39,
          column: 27
        },
        end: {
          line: 39,
          column: 64
        }
      },
      "14": {
        start: {
          line: 40,
          column: 17
        },
        end: {
          line: 40,
          column: 79
        }
      },
      "15": {
        start: {
          line: 42,
          column: 21
        },
        end: {
          line: 42,
          column: 30
        }
      },
      "16": {
        start: {
          line: 43,
          column: 20
        },
        end: {
          line: 43,
          column: 22
        }
      },
      "17": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "18": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 55,
          column: 11
        }
      },
      "19": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 57,
          column: 57
        }
      },
      "20": {
        start: {
          line: 58,
          column: 23
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "21": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 23
        }
      },
      "22": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 48
        }
      },
      "23": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "24": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 28
        }
      },
      "25": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 65
        }
      },
      "26": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 62
        }
      },
      "27": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 38
        }
      },
      "28": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "29": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 81,
          column: 15
        }
      },
      "30": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "31": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 92,
          column: 15
        }
      },
      "32": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 68
        }
      },
      "33": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 121,
          column: 5
        }
      },
      "34": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 108,
          column: 11
        }
      },
      "35": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 32
        }
      },
      "36": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "37": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 32
        }
      },
      "38": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "39": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 64
        }
      },
      "40": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 63
        }
      },
      "41": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 184,
          column: 5
        }
      },
      "42": {
        start: {
          line: 125,
          column: 20
        },
        end: {
          line: 125,
          column: 30
        }
      },
      "43": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "44": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 69
        }
      },
      "45": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 22
        }
      },
      "46": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 132,
          column: 74
        }
      },
      "47": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 22
        }
      },
      "48": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 78
        }
      },
      "49": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 22
        }
      },
      "50": {
        start: {
          line: 138,
          column: 41
        },
        end: {
          line: 140,
          column: 10
        }
      },
      "51": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "52": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 72
        }
      },
      "53": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 24
        }
      },
      "54": {
        start: {
          line: 146,
          column: 22
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "55": {
        start: {
          line: 148,
          column: 50
        },
        end: {
          line: 148,
          column: 69
        }
      },
      "56": {
        start: {
          line: 149,
          column: 43
        },
        end: {
          line: 149,
          column: 63
        }
      },
      "57": {
        start: {
          line: 150,
          column: 46
        },
        end: {
          line: 150,
          column: 66
        }
      },
      "58": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 168,
          column: 11
        }
      },
      "59": {
        start: {
          line: 155,
          column: 24
        },
        end: {
          line: 155,
          column: 61
        }
      },
      "60": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 162,
          column: 13
        }
      },
      "61": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 161,
          column: 18
        }
      },
      "62": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 41
        }
      },
      "63": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 69
        }
      },
      "64": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 167,
          column: 13
        }
      },
      "65": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 166,
          column: 46
        }
      },
      "66": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 174,
          column: 11
        }
      },
      "67": {
        start: {
          line: 171,
          column: 29
        },
        end: {
          line: 171,
          column: 49
        }
      },
      "68": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 75
        }
      },
      "69": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 72
        }
      },
      "70": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 180,
          column: 10
        }
      },
      "71": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 67
        }
      },
      "72": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 20
        }
      },
      "73": {
        start: {
          line: 187,
          column: 4
        },
        end: {
          line: 205,
          column: 5
        }
      },
      "74": {
        start: {
          line: 188,
          column: 40
        },
        end: {
          line: 190,
          column: 20
        }
      },
      "75": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "76": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 68
        }
      },
      "77": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 22
        }
      },
      "78": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 201,
          column: 16
        }
      },
      "79": {
        start: {
          line: 195,
          column: 36
        },
        end: {
          line: 201,
          column: 13
        }
      },
      "80": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 203,
          column: 61
        }
      },
      "81": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 18
        }
      },
      "82": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 236,
          column: 6
        }
      },
      "83": {
        start: {
          line: 209,
          column: 26
        },
        end: {
          line: 209,
          column: 36
        }
      },
      "84": {
        start: {
          line: 210,
          column: 20
        },
        end: {
          line: 210,
          column: 40
        }
      },
      "85": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "86": {
        start: {
          line: 212,
          column: 29
        },
        end: {
          line: 212,
          column: 51
        }
      },
      "87": {
        start: {
          line: 213,
          column: 29
        },
        end: {
          line: 213,
          column: 51
        }
      },
      "88": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 221,
          column: 15
        }
      },
      "89": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 28
        }
      },
      "90": {
        start: {
          line: 224,
          column: 29
        },
        end: {
          line: 224,
          column: 51
        }
      },
      "91": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 233,
          column: 15
        }
      },
      "92": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 24
        }
      },
      "93": {
        start: {
          line: 239,
          column: 21
        },
        end: {
          line: 245,
          column: 5
        }
      },
      "94": {
        start: {
          line: 246,
          column: 4
        },
        end: {
          line: 255,
          column: 5
        }
      },
      "95": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 52
        }
      },
      "96": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 18
        }
      },
      "97": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 51
        }
      },
      "98": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 18
        }
      },
      "99": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 50
        }
      },
      "100": {
        start: {
          line: 258,
          column: 4
        },
        end: {
          line: 271,
          column: 5
        }
      },
      "101": {
        start: {
          line: 259,
          column: 27
        },
        end: {
          line: 259,
          column: 37
        }
      },
      "102": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 260,
          column: 62
        }
      },
      "103": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 261,
          column: 108
        }
      },
      "104": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 104
        }
      },
      "105": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 266,
          column: 11
        }
      },
      "106": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 270,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 29
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 23
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 27
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 33
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 25
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 35
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 37
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "8": {
        name: "recordPerformanceMetric",
        decl: {
          start: {
            line: 44,
            column: 15
          },
          end: {
            line: 44,
            column: 38
          }
        },
        loc: {
          start: {
            line: 44,
            column: 47
          },
          end: {
            line: 97,
            column: 1
          }
        },
        line: 44
      },
      "9": {
        name: "createAlert",
        decl: {
          start: {
            line: 98,
            column: 15
          },
          end: {
            line: 98,
            column: 26
          }
        },
        loc: {
          start: {
            line: 98,
            column: 34
          },
          end: {
            line: 122,
            column: 1
          }
        },
        line: 98
      },
      "10": {
        name: "getPerformanceMetrics",
        decl: {
          start: {
            line: 123,
            column: 15
          },
          end: {
            line: 123,
            column: 36
          }
        },
        loc: {
          start: {
            line: 123,
            column: 56
          },
          end: {
            line: 185,
            column: 1
          }
        },
        line: 123
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 148,
            column: 40
          },
          end: {
            line: 148,
            column: 41
          }
        },
        loc: {
          start: {
            line: 148,
            column: 50
          },
          end: {
            line: 148,
            column: 69
          }
        },
        line: 148
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 149,
            column: 38
          },
          end: {
            line: 149,
            column: 39
          }
        },
        loc: {
          start: {
            line: 149,
            column: 43
          },
          end: {
            line: 149,
            column: 63
          }
        },
        line: 149
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 150,
            column: 41
          },
          end: {
            line: 150,
            column: 42
          }
        },
        loc: {
          start: {
            line: 150,
            column: 46
          },
          end: {
            line: 150,
            column: 66
          }
        },
        line: 150
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 154,
            column: 24
          },
          end: {
            line: 154,
            column: 25
          }
        },
        loc: {
          start: {
            line: 154,
            column: 34
          },
          end: {
            line: 168,
            column: 9
          }
        },
        line: 154
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 170,
            column: 45
          },
          end: {
            line: 170,
            column: 46
          }
        },
        loc: {
          start: {
            line: 170,
            column: 52
          },
          end: {
            line: 174,
            column: 9
          }
        },
        line: 170
      },
      "16": {
        name: "getActiveAlerts",
        decl: {
          start: {
            line: 186,
            column: 15
          },
          end: {
            line: 186,
            column: 30
          }
        },
        loc: {
          start: {
            line: 186,
            column: 33
          },
          end: {
            line: 206,
            column: 1
          }
        },
        line: 186
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 195,
            column: 26
          },
          end: {
            line: 195,
            column: 27
          }
        },
        loc: {
          start: {
            line: 195,
            column: 36
          },
          end: {
            line: 201,
            column: 13
          }
        },
        line: 195
      },
      "18": {
        name: "withPerformanceMonitoring",
        decl: {
          start: {
            line: 207,
            column: 9
          },
          end: {
            line: 207,
            column: 34
          }
        },
        loc: {
          start: {
            line: 207,
            column: 44
          },
          end: {
            line: 237,
            column: 1
          }
        },
        line: 207
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 208,
            column: 11
          },
          end: {
            line: 208,
            column: 12
          }
        },
        loc: {
          start: {
            line: 208,
            column: 28
          },
          end: {
            line: 236,
            column: 5
          }
        },
        line: 208
      },
      "20": {
        name: "logStructured",
        decl: {
          start: {
            line: 238,
            column: 9
          },
          end: {
            line: 238,
            column: 22
          }
        },
        loc: {
          start: {
            line: 238,
            column: 54
          },
          end: {
            line: 256,
            column: 1
          }
        },
        line: 238
      },
      "21": {
        name: "cleanupOldMetrics",
        decl: {
          start: {
            line: 257,
            column: 15
          },
          end: {
            line: 257,
            column: 32
          }
        },
        loc: {
          start: {
            line: 257,
            column: 50
          },
          end: {
            line: 272,
            column: 1
          }
        },
        line: 257
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 58,
            column: 23
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 23
          },
          end: {
            line: 58,
            column: 44
          }
        }, {
          start: {
            line: 58,
            column: 48
          },
          end: {
            line: 62,
            column: 9
          }
        }],
        line: 58
      },
      "1": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "2": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "3": {
        loc: {
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "4": {
        loc: {
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "5": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "6": {
        loc: {
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 116,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 116,
            column: 41
          }
        }, {
          start: {
            line: 116,
            column: 45
          },
          end: {
            line: 116,
            column: 70
          }
        }],
        line: 116
      },
      "7": {
        loc: {
          start: {
            line: 123,
            column: 37
          },
          end: {
            line: 123,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 123,
            column: 49
          },
          end: {
            line: 123,
            column: 54
          }
        }],
        line: 123
      },
      "8": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 130,
            column: 22
          }
        }, {
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 133,
            column: 22
          }
        }, {
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 136,
            column: 22
          }
        }],
        line: 127
      },
      "9": {
        loc: {
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "10": {
        loc: {
          start: {
            line: 148,
            column: 25
          },
          end: {
            line: 148,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 25
          },
          end: {
            line: 148,
            column: 90
          }
        }, {
          start: {
            line: 148,
            column: 94
          },
          end: {
            line: 148,
            column: 95
          }
        }],
        line: 148
      },
      "11": {
        loc: {
          start: {
            line: 149,
            column: 23
          },
          end: {
            line: 149,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 23
          },
          end: {
            line: 149,
            column: 94
          }
        }, {
          start: {
            line: 149,
            column: 98
          },
          end: {
            line: 149,
            column: 99
          }
        }],
        line: 149
      },
      "12": {
        loc: {
          start: {
            line: 156,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "13": {
        loc: {
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 167,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 167,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "14": {
        loc: {
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "15": {
        loc: {
          start: {
            line: 231,
            column: 23
          },
          end: {
            line: 231,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 231,
            column: 48
          },
          end: {
            line: 231,
            column: 61
          }
        }, {
          start: {
            line: 231,
            column: 64
          },
          end: {
            line: 231,
            column: 79
          }
        }],
        line: 231
      },
      "16": {
        loc: {
          start: {
            line: 238,
            column: 39
          },
          end: {
            line: 238,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 238,
            column: 50
          },
          end: {
            line: 238,
            column: 52
          }
        }],
        line: 238
      },
      "17": {
        loc: {
          start: {
            line: 246,
            column: 4
          },
          end: {
            line: 255,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 249,
            column: 18
          }
        }, {
          start: {
            line: 250,
            column: 8
          },
          end: {
            line: 252,
            column: 18
          }
        }, {
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 254,
            column: 50
          }
        }],
        line: 246
      },
      "18": {
        loc: {
          start: {
            line: 257,
            column: 33
          },
          end: {
            line: 257,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 257,
            column: 46
          },
          end: {
            line: 257,
            column: 48
          }
        }],
        line: 257
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0, 0, 0],
      "18": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\monitoring\\admin-monitoring.ts"],
      sourcesContent: ["/**\r\n * Sistema de monitoreo y logging para APIs administrativas\r\n * Incluye m\xE9tricas de performance, alertas y logging estructurado\r\n */\r\n\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;\r\nconst supabase = createClient(supabaseUrl, supabaseServiceKey);\r\n\r\n// Tipos para m\xE9tricas\r\nexport interface PerformanceMetric {\r\n  endpoint: string;\r\n  method: string;\r\n  duration: number;\r\n  status: number;\r\n  userId?: string;\r\n  timestamp: string;\r\n  error?: string;\r\n}\r\n\r\nexport interface SecurityAlert {\r\n  type: 'rate_limit' | 'auth_failure' | 'permission_denied' | 'suspicious_activity';\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  message: string;\r\n  metadata: Record<string, any>;\r\n  timestamp: string;\r\n}\r\n\r\n// Cache en memoria para m\xE9tricas (en producci\xF3n usar Redis)\r\nconst metricsCache = new Map<string, any>();\r\nconst alertsCache: SecurityAlert[] = [];\r\n\r\n/**\r\n * Registrar m\xE9trica de performance\r\n */\r\nexport async function recordPerformanceMetric(metric: PerformanceMetric): Promise<void> {\r\n  try {\r\n    // Guardar en base de datos\r\n    await supabase\r\n      .from('admin_performance_metrics')\r\n      .insert({\r\n        endpoint: metric.endpoint,\r\n        method: metric.method,\r\n        duration_ms: metric.duration,\r\n        status_code: metric.status,\r\n        user_id: metric.userId,\r\n        error_message: metric.error,\r\n        timestamp: metric.timestamp\r\n      });\r\n\r\n    // Actualizar cache de m\xE9tricas\r\n    const key = `${metric.endpoint}_${metric.method}`;\r\n    const cached = metricsCache.get(key) || { count: 0, totalDuration: 0, errors: 0 };\r\n    \r\n    cached.count++;\r\n    cached.totalDuration += metric.duration;\r\n    if (metric.status >= 400) {cached.errors++;}\r\n    cached.avgDuration = cached.totalDuration / cached.count;\r\n    cached.errorRate = (cached.errors / cached.count) * 100;\r\n    \r\n    metricsCache.set(key, cached);\r\n\r\n    // Verificar si necesita alerta\r\n    if (metric.duration > 5000) { // M\xE1s de 5 segundos\r\n      await createAlert({\r\n        type: 'suspicious_activity',\r\n        severity: 'medium',\r\n        message: `API response time exceeded 5 seconds: ${metric.endpoint}`,\r\n        metadata: { metric },\r\n        timestamp: new Date().toISOString()\r\n      });\r\n    }\r\n\r\n    if (metric.status >= 500) {\r\n      await createAlert({\r\n        type: 'suspicious_activity',\r\n        severity: 'high',\r\n        message: `Server error in admin API: ${metric.endpoint}`,\r\n        metadata: { metric },\r\n        timestamp: new Date().toISOString()\r\n      });\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Error recording performance metric:', error);\r\n  }\r\n}\r\n\r\n/**\r\n * Crear alerta de seguridad\r\n */\r\nexport async function createAlert(alert: SecurityAlert): Promise<void> {\r\n  try {\r\n    // Guardar en base de datos\r\n    await supabase\r\n      .from('admin_security_alerts')\r\n      .insert({\r\n        alert_type: alert.type,\r\n        severity: alert.severity,\r\n        message: alert.message,\r\n        metadata: alert.metadata,\r\n        timestamp: alert.timestamp,\r\n        resolved: false\r\n      });\r\n\r\n    // Agregar al cache\r\n    alertsCache.push(alert);\r\n    \r\n    // Mantener solo las \xFAltimas 100 alertas en cache\r\n    if (alertsCache.length > 100) {\r\n      alertsCache.shift();\r\n    }\r\n\r\n    // Log cr\xEDtico para alertas de alta severidad\r\n    if (alert.severity === 'critical' || alert.severity === 'high') {\r\n      console.error('\uD83D\uDEA8 CRITICAL SECURITY ALERT:', alert);\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Error creating security alert:', error);\r\n  }\r\n}\r\n\r\n/**\r\n * Obtener m\xE9tricas de performance\r\n */\r\nexport async function getPerformanceMetrics(timeframe: '1h' | '24h' | '7d' = '24h'): Promise<any> {\r\n  try {\r\n    const now = new Date();\r\n    let startTime: Date;\r\n\r\n    switch (timeframe) {\r\n      case '1h':\r\n        startTime = new Date(now.getTime() - 60 * 60 * 1000);\r\n        break;\r\n      case '24h':\r\n        startTime = new Date(now.getTime() - 24 * 60 * 60 * 1000);\r\n        break;\r\n      case '7d':\r\n        startTime = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\r\n        break;\r\n    }\r\n\r\n    const { data: metrics, error } = await supabase\r\n      .from('admin_performance_metrics')\r\n      .select('*')\r\n      .gte('timestamp', startTime.toISOString())\r\n      .order('timestamp', { ascending: false });\r\n\r\n    if (error) {\r\n      console.error('Error fetching performance metrics:', error);\r\n      return null;\r\n    }\r\n\r\n    // Calcular estad\xEDsticas\r\n    const stats = {\r\n      totalRequests: metrics.length,\r\n      avgDuration: metrics.reduce((sum, m) => sum + m.duration_ms, 0) / metrics.length || 0,\r\n      errorRate: (metrics.filter(m => m.status_code >= 400).length / metrics.length) * 100 || 0,\r\n      slowRequests: metrics.filter(m => m.duration_ms > 2000).length,\r\n      endpoints: {} as Record<string, any>\r\n    };\r\n\r\n    // Agrupar por endpoint\r\n    metrics.forEach(metric => {\r\n      const key = `${metric.method} ${metric.endpoint}`;\r\n      if (!stats.endpoints[key]) {\r\n        stats.endpoints[key] = {\r\n          count: 0,\r\n          totalDuration: 0,\r\n          errors: 0\r\n        };\r\n      }\r\n      \r\n      stats.endpoints[key].count++;\r\n      stats.endpoints[key].totalDuration += metric.duration_ms;\r\n      if (metric.status_code >= 400) {stats.endpoints[key].errors++;}\r\n    });\r\n\r\n    // Calcular promedios por endpoint\r\n    Object.keys(stats.endpoints).forEach(key => {\r\n      const endpoint = stats.endpoints[key];\r\n      endpoint.avgDuration = endpoint.totalDuration / endpoint.count;\r\n      endpoint.errorRate = (endpoint.errors / endpoint.count) * 100;\r\n    });\r\n\r\n    return {\r\n      timeframe,\r\n      stats,\r\n      rawMetrics: metrics.slice(0, 50), // \xDAltimas 50 m\xE9tricas\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n  } catch (error) {\r\n    console.error('Error getting performance metrics:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Obtener alertas de seguridad activas\r\n */\r\nexport async function getActiveAlerts(): Promise<SecurityAlert[]> {\r\n  try {\r\n    const { data: alerts, error } = await supabase\r\n      .from('admin_security_alerts')\r\n      .select('*')\r\n      .eq('resolved', false)\r\n      .order('timestamp', { ascending: false })\r\n      .limit(50);\r\n\r\n    if (error) {\r\n      console.error('Error fetching security alerts:', error);\r\n      return [];\r\n    }\r\n\r\n    return alerts.map(alert => ({\r\n      type: alert.alert_type,\r\n      severity: alert.severity,\r\n      message: alert.message,\r\n      metadata: alert.metadata,\r\n      timestamp: alert.timestamp\r\n    }));\r\n\r\n  } catch (error) {\r\n    console.error('Error getting active alerts:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\n/**\r\n * Middleware para medir performance de APIs\r\n */\r\nexport function withPerformanceMonitoring(\r\n  handler: (request: Request) => Promise<Response>\r\n) {\r\n  return async (request: Request): Promise<Response> => {\r\n    const startTime = Date.now();\r\n    const url = new URL(request.url);\r\n    \r\n    try {\r\n      const response = await handler(request);\r\n      const duration = Date.now() - startTime;\r\n\r\n      // Registrar m\xE9trica\r\n      await recordPerformanceMetric({\r\n        endpoint: url.pathname,\r\n        method: request.method,\r\n        duration,\r\n        status: response.status,\r\n        timestamp: new Date().toISOString()\r\n      });\r\n\r\n      return response;\r\n\r\n    } catch (error) {\r\n      const duration = Date.now() - startTime;\r\n\r\n      // Registrar m\xE9trica de error\r\n      await recordPerformanceMetric({\r\n        endpoint: url.pathname,\r\n        method: request.method,\r\n        duration,\r\n        status: 500,\r\n        error: error instanceof Error ? error.message : 'Unknown error',\r\n        timestamp: new Date().toISOString()\r\n      });\r\n\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Logging estructurado\r\n */\r\nexport function logStructured(\r\n  level: 'info' | 'warn' | 'error',\r\n  message: string,\r\n  metadata: Record<string, any> = {}\r\n): void {\r\n  const logEntry = {\r\n    timestamp: new Date().toISOString(),\r\n    level,\r\n    message,\r\n    metadata,\r\n    service: 'admin-api'\r\n  };\r\n\r\n  switch (level) {\r\n    case 'error':\r\n      console.error(JSON.stringify(logEntry));\r\n      break;\r\n    case 'warn':\r\n      console.warn(JSON.stringify(logEntry));\r\n      break;\r\n    default:\r\n      console.log(JSON.stringify(logEntry));\r\n  }\r\n}\r\n\r\n/**\r\n * Limpiar m\xE9tricas antiguas (ejecutar peri\xF3dicamente)\r\n */\r\nexport async function cleanupOldMetrics(daysToKeep: number = 30): Promise<void> {\r\n  try {\r\n    const cutoffDate = new Date();\r\n    cutoffDate.setDate(cutoffDate.getDate() - daysToKeep);\r\n\r\n    await supabase\r\n      .from('admin_performance_metrics')\r\n      .delete()\r\n      .lt('timestamp', cutoffDate.toISOString());\r\n\r\n    await supabase\r\n      .from('admin_security_alerts')\r\n      .delete()\r\n      .lt('timestamp', cutoffDate.toISOString());\r\n\r\n    logStructured('info', 'Cleaned up old metrics and alerts', {\r\n      cutoffDate: cutoffDate.toISOString(),\r\n      daysKept: daysToKeep\r\n    });\r\n\r\n  } catch (error) {\r\n    logStructured('error', 'Error cleaning up old metrics', { error });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["cleanupOldMetrics", "createAlert", "getActiveAlerts", "getPerformanceMetrics", "logStructured", "recordPerformanceMetric", "withPerformanceMonitoring", "supabaseUrl", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "supabaseServiceKey", "SUPABASE_SERVICE_ROLE_KEY", "supabase", "createClient", "metricsCache", "Map", "alertsCache", "metric", "from", "insert", "endpoint", "method", "duration_ms", "duration", "status_code", "status", "user_id", "userId", "error_message", "error", "timestamp", "key", "cached", "get", "count", "totalDuration", "errors", "avgDuration", "errorRate", "set", "type", "severity", "message", "metadata", "Date", "toISOString", "console", "alert", "alert_type", "resolved", "push", "length", "shift", "timeframe", "now", "startTime", "getTime", "data", "metrics", "select", "gte", "order", "ascending", "stats", "totalRequests", "reduce", "sum", "m", "filter", "slowRequests", "endpoints", "forEach", "Object", "keys", "rawMetrics", "slice", "alerts", "eq", "limit", "map", "handler", "request", "url", "URL", "response", "pathname", "Error", "level", "logEntry", "service", "JSON", "stringify", "warn", "log", "daysToKeep", "cutoffDate", "setDate", "getDate", "delete", "lt", "daysKept"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a8e1652f60d43b51b43eb6cae54cb7759893581d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2q19tdwvs8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2q19tdwvs8();
cov_2q19tdwvs8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2q19tdwvs8().f[0]++;
  cov_2q19tdwvs8().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2q19tdwvs8().s[3]++;
_export(exports, {
  get cleanupOldMetrics() {
    /* istanbul ignore next */
    cov_2q19tdwvs8().f[1]++;
    cov_2q19tdwvs8().s[4]++;
    return cleanupOldMetrics;
  },
  get createAlert() {
    /* istanbul ignore next */
    cov_2q19tdwvs8().f[2]++;
    cov_2q19tdwvs8().s[5]++;
    return createAlert;
  },
  get getActiveAlerts() {
    /* istanbul ignore next */
    cov_2q19tdwvs8().f[3]++;
    cov_2q19tdwvs8().s[6]++;
    return getActiveAlerts;
  },
  get getPerformanceMetrics() {
    /* istanbul ignore next */
    cov_2q19tdwvs8().f[4]++;
    cov_2q19tdwvs8().s[7]++;
    return getPerformanceMetrics;
  },
  get logStructured() {
    /* istanbul ignore next */
    cov_2q19tdwvs8().f[5]++;
    cov_2q19tdwvs8().s[8]++;
    return logStructured;
  },
  get recordPerformanceMetric() {
    /* istanbul ignore next */
    cov_2q19tdwvs8().f[6]++;
    cov_2q19tdwvs8().s[9]++;
    return recordPerformanceMetric;
  },
  get withPerformanceMonitoring() {
    /* istanbul ignore next */
    cov_2q19tdwvs8().f[7]++;
    cov_2q19tdwvs8().s[10]++;
    return withPerformanceMonitoring;
  }
});
const _supabasejs =
/* istanbul ignore next */
(cov_2q19tdwvs8().s[11]++, require("@supabase/supabase-js"));
const supabaseUrl =
/* istanbul ignore next */
(cov_2q19tdwvs8().s[12]++, process.env.NEXT_PUBLIC_SUPABASE_URL);
const supabaseServiceKey =
/* istanbul ignore next */
(cov_2q19tdwvs8().s[13]++, process.env.SUPABASE_SERVICE_ROLE_KEY);
const supabase =
/* istanbul ignore next */
(cov_2q19tdwvs8().s[14]++, (0, _supabasejs.createClient)(supabaseUrl, supabaseServiceKey));
// Cache en memoria para mÃ©tricas (en producciÃ³n usar Redis)
const metricsCache =
/* istanbul ignore next */
(cov_2q19tdwvs8().s[15]++, new Map());
const alertsCache =
/* istanbul ignore next */
(cov_2q19tdwvs8().s[16]++, []);
async function recordPerformanceMetric(metric) {
  /* istanbul ignore next */
  cov_2q19tdwvs8().f[8]++;
  cov_2q19tdwvs8().s[17]++;
  try {
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[18]++;
    // Guardar en base de datos
    await supabase.from('admin_performance_metrics').insert({
      endpoint: metric.endpoint,
      method: metric.method,
      duration_ms: metric.duration,
      status_code: metric.status,
      user_id: metric.userId,
      error_message: metric.error,
      timestamp: metric.timestamp
    });
    // Actualizar cache de mÃ©tricas
    const key =
    /* istanbul ignore next */
    (cov_2q19tdwvs8().s[19]++, `${metric.endpoint}_${metric.method}`);
    const cached =
    /* istanbul ignore next */
    (cov_2q19tdwvs8().s[20]++,
    /* istanbul ignore next */
    (cov_2q19tdwvs8().b[0][0]++, metricsCache.get(key)) ||
    /* istanbul ignore next */
    (cov_2q19tdwvs8().b[0][1]++, {
      count: 0,
      totalDuration: 0,
      errors: 0
    }));
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[21]++;
    cached.count++;
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[22]++;
    cached.totalDuration += metric.duration;
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[23]++;
    if (metric.status >= 400) {
      /* istanbul ignore next */
      cov_2q19tdwvs8().b[1][0]++;
      cov_2q19tdwvs8().s[24]++;
      cached.errors++;
    } else
    /* istanbul ignore next */
    {
      cov_2q19tdwvs8().b[1][1]++;
    }
    cov_2q19tdwvs8().s[25]++;
    cached.avgDuration = cached.totalDuration / cached.count;
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[26]++;
    cached.errorRate = cached.errors / cached.count * 100;
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[27]++;
    metricsCache.set(key, cached);
    // Verificar si necesita alerta
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[28]++;
    if (metric.duration > 5000) {
      /* istanbul ignore next */
      cov_2q19tdwvs8().b[2][0]++;
      cov_2q19tdwvs8().s[29]++;
      await createAlert({
        type: 'suspicious_activity',
        severity: 'medium',
        message: `API response time exceeded 5 seconds: ${metric.endpoint}`,
        metadata: {
          metric
        },
        timestamp: new Date().toISOString()
      });
    } else
    /* istanbul ignore next */
    {
      cov_2q19tdwvs8().b[2][1]++;
    }
    cov_2q19tdwvs8().s[30]++;
    if (metric.status >= 500) {
      /* istanbul ignore next */
      cov_2q19tdwvs8().b[3][0]++;
      cov_2q19tdwvs8().s[31]++;
      await createAlert({
        type: 'suspicious_activity',
        severity: 'high',
        message: `Server error in admin API: ${metric.endpoint}`,
        metadata: {
          metric
        },
        timestamp: new Date().toISOString()
      });
    } else
    /* istanbul ignore next */
    {
      cov_2q19tdwvs8().b[3][1]++;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[32]++;
    console.error('Error recording performance metric:', error);
  }
}
async function createAlert(alert) {
  /* istanbul ignore next */
  cov_2q19tdwvs8().f[9]++;
  cov_2q19tdwvs8().s[33]++;
  try {
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[34]++;
    // Guardar en base de datos
    await supabase.from('admin_security_alerts').insert({
      alert_type: alert.type,
      severity: alert.severity,
      message: alert.message,
      metadata: alert.metadata,
      timestamp: alert.timestamp,
      resolved: false
    });
    // Agregar al cache
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[35]++;
    alertsCache.push(alert);
    // Mantener solo las Ãºltimas 100 alertas en cache
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[36]++;
    if (alertsCache.length > 100) {
      /* istanbul ignore next */
      cov_2q19tdwvs8().b[4][0]++;
      cov_2q19tdwvs8().s[37]++;
      alertsCache.shift();
    } else
    /* istanbul ignore next */
    {
      cov_2q19tdwvs8().b[4][1]++;
    }
    // Log crÃ­tico para alertas de alta severidad
    cov_2q19tdwvs8().s[38]++;
    if (
    /* istanbul ignore next */
    (cov_2q19tdwvs8().b[6][0]++, alert.severity === 'critical') ||
    /* istanbul ignore next */
    (cov_2q19tdwvs8().b[6][1]++, alert.severity === 'high')) {
      /* istanbul ignore next */
      cov_2q19tdwvs8().b[5][0]++;
      cov_2q19tdwvs8().s[39]++;
      console.error('ğ¨ CRITICAL SECURITY ALERT:', alert);
    } else
    /* istanbul ignore next */
    {
      cov_2q19tdwvs8().b[5][1]++;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[40]++;
    console.error('Error creating security alert:', error);
  }
}
async function getPerformanceMetrics(timeframe =
/* istanbul ignore next */
(cov_2q19tdwvs8().b[7][0]++, '24h')) {
  /* istanbul ignore next */
  cov_2q19tdwvs8().f[10]++;
  cov_2q19tdwvs8().s[41]++;
  try {
    const now =
    /* istanbul ignore next */
    (cov_2q19tdwvs8().s[42]++, new Date());
    let startTime;
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[43]++;
    switch (timeframe) {
      case '1h':
        /* istanbul ignore next */
        cov_2q19tdwvs8().b[8][0]++;
        cov_2q19tdwvs8().s[44]++;
        startTime = new Date(now.getTime() - 60 * 60 * 1000);
        /* istanbul ignore next */
        cov_2q19tdwvs8().s[45]++;
        break;
      case '24h':
        /* istanbul ignore next */
        cov_2q19tdwvs8().b[8][1]++;
        cov_2q19tdwvs8().s[46]++;
        startTime = new Date(now.getTime() - 24 * 60 * 60 * 1000);
        /* istanbul ignore next */
        cov_2q19tdwvs8().s[47]++;
        break;
      case '7d':
        /* istanbul ignore next */
        cov_2q19tdwvs8().b[8][2]++;
        cov_2q19tdwvs8().s[48]++;
        startTime = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);
        /* istanbul ignore next */
        cov_2q19tdwvs8().s[49]++;
        break;
    }
    const {
      data: metrics,
      error
    } =
    /* istanbul ignore next */
    (cov_2q19tdwvs8().s[50]++, await supabase.from('admin_performance_metrics').select('*').gte('timestamp', startTime.toISOString()).order('timestamp', {
      ascending: false
    }));
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[51]++;
    if (error) {
      /* istanbul ignore next */
      cov_2q19tdwvs8().b[9][0]++;
      cov_2q19tdwvs8().s[52]++;
      console.error('Error fetching performance metrics:', error);
      /* istanbul ignore next */
      cov_2q19tdwvs8().s[53]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_2q19tdwvs8().b[9][1]++;
    }
    // Calcular estadÃ­sticas
    const stats =
    /* istanbul ignore next */
    (cov_2q19tdwvs8().s[54]++, {
      totalRequests: metrics.length,
      avgDuration:
      /* istanbul ignore next */
      (cov_2q19tdwvs8().b[10][0]++, metrics.reduce((sum, m) => {
        /* istanbul ignore next */
        cov_2q19tdwvs8().f[11]++;
        cov_2q19tdwvs8().s[55]++;
        return sum + m.duration_ms;
      }, 0) / metrics.length) ||
      /* istanbul ignore next */
      (cov_2q19tdwvs8().b[10][1]++, 0),
      errorRate:
      /* istanbul ignore next */
      (cov_2q19tdwvs8().b[11][0]++, metrics.filter(m => {
        /* istanbul ignore next */
        cov_2q19tdwvs8().f[12]++;
        cov_2q19tdwvs8().s[56]++;
        return m.status_code >= 400;
      }).length / metrics.length * 100) ||
      /* istanbul ignore next */
      (cov_2q19tdwvs8().b[11][1]++, 0),
      slowRequests: metrics.filter(m => {
        /* istanbul ignore next */
        cov_2q19tdwvs8().f[13]++;
        cov_2q19tdwvs8().s[57]++;
        return m.duration_ms > 2000;
      }).length,
      endpoints: {}
    });
    // Agrupar por endpoint
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[58]++;
    metrics.forEach(metric => {
      /* istanbul ignore next */
      cov_2q19tdwvs8().f[14]++;
      const key =
      /* istanbul ignore next */
      (cov_2q19tdwvs8().s[59]++, `${metric.method} ${metric.endpoint}`);
      /* istanbul ignore next */
      cov_2q19tdwvs8().s[60]++;
      if (!stats.endpoints[key]) {
        /* istanbul ignore next */
        cov_2q19tdwvs8().b[12][0]++;
        cov_2q19tdwvs8().s[61]++;
        stats.endpoints[key] = {
          count: 0,
          totalDuration: 0,
          errors: 0
        };
      } else
      /* istanbul ignore next */
      {
        cov_2q19tdwvs8().b[12][1]++;
      }
      cov_2q19tdwvs8().s[62]++;
      stats.endpoints[key].count++;
      /* istanbul ignore next */
      cov_2q19tdwvs8().s[63]++;
      stats.endpoints[key].totalDuration += metric.duration_ms;
      /* istanbul ignore next */
      cov_2q19tdwvs8().s[64]++;
      if (metric.status_code >= 400) {
        /* istanbul ignore next */
        cov_2q19tdwvs8().b[13][0]++;
        cov_2q19tdwvs8().s[65]++;
        stats.endpoints[key].errors++;
      } else
      /* istanbul ignore next */
      {
        cov_2q19tdwvs8().b[13][1]++;
      }
    });
    // Calcular promedios por endpoint
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[66]++;
    Object.keys(stats.endpoints).forEach(key => {
      /* istanbul ignore next */
      cov_2q19tdwvs8().f[15]++;
      const endpoint =
      /* istanbul ignore next */
      (cov_2q19tdwvs8().s[67]++, stats.endpoints[key]);
      /* istanbul ignore next */
      cov_2q19tdwvs8().s[68]++;
      endpoint.avgDuration = endpoint.totalDuration / endpoint.count;
      /* istanbul ignore next */
      cov_2q19tdwvs8().s[69]++;
      endpoint.errorRate = endpoint.errors / endpoint.count * 100;
    });
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[70]++;
    return {
      timeframe,
      stats,
      rawMetrics: metrics.slice(0, 50),
      timestamp: new Date().toISOString()
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[71]++;
    console.error('Error getting performance metrics:', error);
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[72]++;
    return null;
  }
}
async function getActiveAlerts() {
  /* istanbul ignore next */
  cov_2q19tdwvs8().f[16]++;
  cov_2q19tdwvs8().s[73]++;
  try {
    const {
      data: alerts,
      error
    } =
    /* istanbul ignore next */
    (cov_2q19tdwvs8().s[74]++, await supabase.from('admin_security_alerts').select('*').eq('resolved', false).order('timestamp', {
      ascending: false
    }).limit(50));
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[75]++;
    if (error) {
      /* istanbul ignore next */
      cov_2q19tdwvs8().b[14][0]++;
      cov_2q19tdwvs8().s[76]++;
      console.error('Error fetching security alerts:', error);
      /* istanbul ignore next */
      cov_2q19tdwvs8().s[77]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_2q19tdwvs8().b[14][1]++;
    }
    cov_2q19tdwvs8().s[78]++;
    return alerts.map(alert => {
      /* istanbul ignore next */
      cov_2q19tdwvs8().f[17]++;
      cov_2q19tdwvs8().s[79]++;
      return {
        type: alert.alert_type,
        severity: alert.severity,
        message: alert.message,
        metadata: alert.metadata,
        timestamp: alert.timestamp
      };
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[80]++;
    console.error('Error getting active alerts:', error);
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[81]++;
    return [];
  }
}
function withPerformanceMonitoring(handler) {
  /* istanbul ignore next */
  cov_2q19tdwvs8().f[18]++;
  cov_2q19tdwvs8().s[82]++;
  return async request => {
    /* istanbul ignore next */
    cov_2q19tdwvs8().f[19]++;
    const startTime =
    /* istanbul ignore next */
    (cov_2q19tdwvs8().s[83]++, Date.now());
    const url =
    /* istanbul ignore next */
    (cov_2q19tdwvs8().s[84]++, new URL(request.url));
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[85]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2q19tdwvs8().s[86]++, await handler(request));
      const duration =
      /* istanbul ignore next */
      (cov_2q19tdwvs8().s[87]++, Date.now() - startTime);
      // Registrar mÃ©trica
      /* istanbul ignore next */
      cov_2q19tdwvs8().s[88]++;
      await recordPerformanceMetric({
        endpoint: url.pathname,
        method: request.method,
        duration,
        status: response.status,
        timestamp: new Date().toISOString()
      });
      /* istanbul ignore next */
      cov_2q19tdwvs8().s[89]++;
      return response;
    } catch (error) {
      const duration =
      /* istanbul ignore next */
      (cov_2q19tdwvs8().s[90]++, Date.now() - startTime);
      // Registrar mÃ©trica de error
      /* istanbul ignore next */
      cov_2q19tdwvs8().s[91]++;
      await recordPerformanceMetric({
        endpoint: url.pathname,
        method: request.method,
        duration,
        status: 500,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_2q19tdwvs8().b[15][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2q19tdwvs8().b[15][1]++, 'Unknown error'),
        timestamp: new Date().toISOString()
      });
      /* istanbul ignore next */
      cov_2q19tdwvs8().s[92]++;
      throw error;
    }
  };
}
function logStructured(level, message, metadata =
/* istanbul ignore next */
(cov_2q19tdwvs8().b[16][0]++, {})) {
  /* istanbul ignore next */
  cov_2q19tdwvs8().f[20]++;
  const logEntry =
  /* istanbul ignore next */
  (cov_2q19tdwvs8().s[93]++, {
    timestamp: new Date().toISOString(),
    level,
    message,
    metadata,
    service: 'admin-api'
  });
  /* istanbul ignore next */
  cov_2q19tdwvs8().s[94]++;
  switch (level) {
    case 'error':
      /* istanbul ignore next */
      cov_2q19tdwvs8().b[17][0]++;
      cov_2q19tdwvs8().s[95]++;
      console.error(JSON.stringify(logEntry));
      /* istanbul ignore next */
      cov_2q19tdwvs8().s[96]++;
      break;
    case 'warn':
      /* istanbul ignore next */
      cov_2q19tdwvs8().b[17][1]++;
      cov_2q19tdwvs8().s[97]++;
      console.warn(JSON.stringify(logEntry));
      /* istanbul ignore next */
      cov_2q19tdwvs8().s[98]++;
      break;
    default:
      /* istanbul ignore next */
      cov_2q19tdwvs8().b[17][2]++;
      cov_2q19tdwvs8().s[99]++;
      console.log(JSON.stringify(logEntry));
  }
}
async function cleanupOldMetrics(daysToKeep =
/* istanbul ignore next */
(cov_2q19tdwvs8().b[18][0]++, 30)) {
  /* istanbul ignore next */
  cov_2q19tdwvs8().f[21]++;
  cov_2q19tdwvs8().s[100]++;
  try {
    const cutoffDate =
    /* istanbul ignore next */
    (cov_2q19tdwvs8().s[101]++, new Date());
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[102]++;
    cutoffDate.setDate(cutoffDate.getDate() - daysToKeep);
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[103]++;
    await supabase.from('admin_performance_metrics').delete().lt('timestamp', cutoffDate.toISOString());
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[104]++;
    await supabase.from('admin_security_alerts').delete().lt('timestamp', cutoffDate.toISOString());
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[105]++;
    logStructured('info', 'Cleaned up old metrics and alerts', {
      cutoffDate: cutoffDate.toISOString(),
      daysKept: daysToKeep
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2q19tdwvs8().s[106]++;
    logStructured('error', 'Error cleaning up old metrics', {
      error
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,