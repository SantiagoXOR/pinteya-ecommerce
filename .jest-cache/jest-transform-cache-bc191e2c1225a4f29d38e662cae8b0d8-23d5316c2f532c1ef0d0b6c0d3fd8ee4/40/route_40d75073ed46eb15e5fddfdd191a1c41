f77c76c1cb3a2bf5513feb2b8cff4ebd
"use strict";

/* istanbul ignore next */
function cov_2edutjuu5c() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\orders\\[id]\\refund\\route.ts";
  var hash = "d60f793a24290c2eab5687ed07d44dbc2b3442ec";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\orders\\[id]\\refund\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 14
        },
        end: {
          line: 12,
          column: 47
        }
      },
      "5": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 78
        }
      },
      "6": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 66
        }
      },
      "7": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 162,
          column: 5
        }
      },
      "8": {
        start: {
          line: 17,
          column: 24
        },
        end: {
          line: 17,
          column: 33
        }
      },
      "9": {
        start: {
          line: 18,
          column: 21
        },
        end: {
          line: 18,
          column: 41
        }
      },
      "10": {
        start: {
          line: 19,
          column: 78
        },
        end: {
          line: 19,
          column: 82
        }
      },
      "11": {
        start: {
          line: 21,
          column: 24
        },
        end: {
          line: 21,
          column: 47
        }
      },
      "12": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "13": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 28,
          column: 15
        }
      },
      "14": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 35,
          column: 11
        }
      },
      "15": {
        start: {
          line: 37,
          column: 25
        },
        end: {
          line: 37,
          column: 58
        }
      },
      "16": {
        start: {
          line: 38,
          column: 51
        },
        end: {
          line: 38,
          column: 186
        }
      },
      "17": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "18": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 43,
          column: 15
        }
      },
      "19": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 49,
          column: 15
        }
      },
      "20": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "21": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 58,
          column: 15
        }
      },
      "22": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "23": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 67,
          column: 15
        }
      },
      "24": {
        start: {
          line: 69,
          column: 29
        },
        end: {
          line: 69,
          column: 50
        }
      },
      "25": {
        start: {
          line: 73,
          column: 29
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "26": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "27": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 83,
          column: 15
        }
      },
      "28": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 89,
          column: 15
        }
      },
      "29": {
        start: {
          line: 92,
          column: 27
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "30": {
        start: {
          line: 97,
          column: 39
        },
        end: {
          line: 97,
          column: 105
        }
      },
      "31": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "32": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 102,
          column: 15
        }
      },
      "33": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 108,
          column: 15
        }
      },
      "34": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "35": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 124,
          column: 15
        }
      },
      "36": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 129,
          column: 15
        }
      },
      "37": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 139,
          column: 11
        }
      },
      "38": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 150,
          column: 11
        }
      },
      "39": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 155,
          column: 11
        }
      },
      "40": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 161,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "POST",
        decl: {
          start: {
            line: 15,
            column: 15
          },
          end: {
            line: 15,
            column: 19
          }
        },
        loc: {
          start: {
            line: 15,
            column: 41
          },
          end: {
            line: 163,
            column: 1
          }
        },
        line: 15
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 24
          },
          end: {
            line: 19,
            column: 73
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 33
          },
          end: {
            line: 19,
            column: 73
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "3": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 22
          }
        }, {
          start: {
            line: 39,
            column: 26
          },
          end: {
            line: 39,
            column: 32
          }
        }],
        line: 39
      },
      "4": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "5": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "6": {
        loc: {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 61,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 61,
            column: 18
          }
        }, {
          start: {
            line: 61,
            column: 22
          },
          end: {
            line: 61,
            column: 42
          }
        }],
        line: 61
      },
      "7": {
        loc: {
          start: {
            line: 69,
            column: 29
          },
          end: {
            line: 69,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 29
          },
          end: {
            line: 69,
            column: 35
          }
        }, {
          start: {
            line: 69,
            column: 39
          },
          end: {
            line: 69,
            column: 50
          }
        }],
        line: 69
      },
      "8": {
        loc: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "9": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\orders\\[id]\\refund\\route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/auth';\r\nimport { createAdminClient } from '@/lib/integrations/supabase/server';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\n\r\n/**\r\n * POST /api/admin/orders/[id]/refund\r\n * Procesa un reembolso para una orden\r\n */\r\nexport async function POST(\r\n  request: NextRequest,\r\n  { params }: { params: { id: string } }\r\n): Promise<NextResponse> {\r\n  try {\r\n    const orderId = params.id;\r\n    const body = await request.json();\r\n    const { amount, reason = 'Reembolso solicitado por administrador' } = body;\r\n\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    logger.log(LogLevel.INFO, LogCategory.API, 'Processing refund for order', { \r\n      orderId,\r\n      userId: session.user.id,\r\n      amount,\r\n      reason\r\n    });\r\n\r\n    // Obtener datos actuales de la orden\r\n    const supabase = createAdminClient();\r\n    const { data: order, error: orderError } = await supabase\r\n      .from('orders')\r\n      .select('id, status, payment_status, total, payment_id, payment_preference_id')\r\n      .eq('id', orderId)\r\n      .single();\r\n\r\n    if (orderError || !order) {\r\n      logger.log(LogLevel.WARN, LogCategory.API, 'Order not found', { orderId, orderError });\r\n      return NextResponse.json(\r\n        { success: false, error: 'Orden no encontrada' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Verificar que la orden est\xE9 pagada\r\n    if (order.payment_status !== 'paid') {\r\n      return NextResponse.json(\r\n        { success: false, error: 'Solo se pueden reembolsar \xF3rdenes pagadas' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Verificar que el monto no exceda el total de la orden\r\n    if (amount && amount > order.total) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'El monto del reembolso no puede exceder el total de la orden' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const refundAmount = amount || order.total;\r\n\r\n    // TODO: Aqu\xED se integrar\xEDa con MercadoPago para procesar el reembolso real\r\n    // Por ahora, simularemos el proceso\r\n    \r\n    // Simular procesamiento de reembolso\r\n    const refundResult = {\r\n      success: true,\r\n      refund_id: `refund_${Date.now()}`,\r\n      amount: refundAmount,\r\n      status: 'approved'\r\n    };\r\n\r\n    if (!refundResult.success) {\r\n      logger.log(LogLevel.ERROR, LogCategory.PAYMENT, 'Error processing refund', { \r\n        orderId,\r\n        refundResult \r\n      });\r\n      return NextResponse.json(\r\n        { success: false, error: 'Error al procesar reembolso' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Actualizar estado de la orden\r\n    const updateData = {\r\n      payment_status: 'refunded',\r\n      status: 'refunded',\r\n      updated_at: new Date().toISOString()\r\n    };\r\n\r\n    const { error: updateError } = await supabase\r\n      .from('orders')\r\n      .update(updateData)\r\n      .eq('id', orderId);\r\n\r\n    if (updateError) {\r\n      logger.log(LogLevel.ERROR, LogCategory.DATABASE, 'Error updating order after refund', { \r\n        orderId,\r\n        updateError \r\n      });\r\n      return NextResponse.json(\r\n        { success: false, error: 'Error al actualizar estado de la orden' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Registrar en historial de estados\r\n    try {\r\n      await supabase\r\n        .from('order_status_history')\r\n        .insert({\r\n          order_id: orderId,\r\n          previous_status: order.status,\r\n          new_status: 'refunded',\r\n          changed_by: session.user.id,\r\n          reason: `Reembolso procesado: ${reason}`,\r\n          metadata: JSON.stringify({\r\n            refund_id: refundResult.refund_id,\r\n            refund_amount: refundAmount,\r\n            refund_reason: reason,\r\n            processed_by: session.user.id\r\n          })\r\n        });\r\n    } catch (historyError) {\r\n      // Si la tabla no existe, continuar sin registrar historial\r\n      logger.log(LogLevel.WARN, LogCategory.DATABASE, 'Could not register refund in status history', { historyError });\r\n    }\r\n\r\n    // TODO: Aqu\xED se podr\xEDan agregar acciones adicionales como:\r\n    // - Enviar email de confirmaci\xF3n de reembolso al cliente\r\n    // - Restaurar inventario si es necesario\r\n    // - Crear notificaciones\r\n\r\n    logger.log(LogLevel.INFO, LogCategory.API, 'Refund processed successfully', {\r\n      orderId,\r\n      refund_id: refundResult.refund_id,\r\n      amount: refundAmount\r\n    });\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        order_id: orderId,\r\n        refund_id: refundResult.refund_id,\r\n        refund_amount: refundAmount,\r\n        payment_status: 'refunded',\r\n        status: 'refunded'\r\n      },\r\n      message: 'Reembolso procesado exitosamente'\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Unexpected error processing refund', { \r\n      orderId: params.id,\r\n      error \r\n    });\r\n    \r\n    return NextResponse.json(\r\n      { success: false, error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],
      names: ["POST", "request", "params", "orderId", "id", "body", "json", "amount", "reason", "session", "auth", "user", "NextResponse", "success", "error", "status", "logger", "log", "LogLevel", "INFO", "LogCategory", "API", "userId", "supabase", "createAdminClient", "data", "order", "orderError", "from", "select", "eq", "single", "WARN", "payment_status", "total", "refundAmount", "refundResult", "refund_id", "Date", "now", "ERROR", "PAYMENT", "updateData", "updated_at", "toISOString", "updateError", "update", "DATABASE", "insert", "order_id", "previous_status", "new_status", "changed_by", "metadata", "JSON", "stringify", "refund_amount", "refund_reason", "processed_by", "historyError", "message"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d60f793a24290c2eab5687ed07d44dbc2b3442ec"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2edutjuu5c = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2edutjuu5c();
cov_2edutjuu5c().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2edutjuu5c().s[1]++;
Object.defineProperty(exports, "POST", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2edutjuu5c().f[0]++;
    cov_2edutjuu5c().s[2]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_2edutjuu5c().s[3]++, require("next/server"));
const _auth =
/* istanbul ignore next */
(cov_2edutjuu5c().s[4]++, require("../../../../../../auth"));
const _server1 =
/* istanbul ignore next */
(cov_2edutjuu5c().s[5]++, require("../../../../../../lib/integrations/supabase/server"));
const _logger =
/* istanbul ignore next */
(cov_2edutjuu5c().s[6]++, require("../../../../../../lib/enterprise/logger"));
async function POST(request, {
  params
}) {
  /* istanbul ignore next */
  cov_2edutjuu5c().f[1]++;
  cov_2edutjuu5c().s[7]++;
  try {
    const orderId =
    /* istanbul ignore next */
    (cov_2edutjuu5c().s[8]++, params.id);
    const body =
    /* istanbul ignore next */
    (cov_2edutjuu5c().s[9]++, await request.json());
    const {
      amount,
      reason =
      /* istanbul ignore next */
      (cov_2edutjuu5c().b[0][0]++, 'Reembolso solicitado por administrador')
    } =
    /* istanbul ignore next */
    (cov_2edutjuu5c().s[10]++, body);
    // Verificar autenticación
    const session =
    /* istanbul ignore next */
    (cov_2edutjuu5c().s[11]++, await (0, _auth.auth)());
    /* istanbul ignore next */
    cov_2edutjuu5c().s[12]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_2edutjuu5c().b[1][0]++;
      cov_2edutjuu5c().s[13]++;
      return _server.NextResponse.json({
        success: false,
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2edutjuu5c().b[1][1]++;
    }
    cov_2edutjuu5c().s[14]++;
    _logger.logger.log(_logger.LogLevel.INFO, _logger.LogCategory.API, 'Processing refund for order', {
      orderId,
      userId: session.user.id,
      amount,
      reason
    });
    // Obtener datos actuales de la orden
    const supabase =
    /* istanbul ignore next */
    (cov_2edutjuu5c().s[15]++, (0, _server1.createAdminClient)());
    const {
      data: order,
      error: orderError
    } =
    /* istanbul ignore next */
    (cov_2edutjuu5c().s[16]++, await supabase.from('orders').select('id, status, payment_status, total, payment_id, payment_preference_id').eq('id', orderId).single());
    /* istanbul ignore next */
    cov_2edutjuu5c().s[17]++;
    if (
    /* istanbul ignore next */
    (cov_2edutjuu5c().b[3][0]++, orderError) ||
    /* istanbul ignore next */
    (cov_2edutjuu5c().b[3][1]++, !order)) {
      /* istanbul ignore next */
      cov_2edutjuu5c().b[2][0]++;
      cov_2edutjuu5c().s[18]++;
      _logger.logger.log(_logger.LogLevel.WARN, _logger.LogCategory.API, 'Order not found', {
        orderId,
        orderError
      });
      /* istanbul ignore next */
      cov_2edutjuu5c().s[19]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Orden no encontrada'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_2edutjuu5c().b[2][1]++;
    }
    // Verificar que la orden esté pagada
    cov_2edutjuu5c().s[20]++;
    if (order.payment_status !== 'paid') {
      /* istanbul ignore next */
      cov_2edutjuu5c().b[4][0]++;
      cov_2edutjuu5c().s[21]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Solo se pueden reembolsar órdenes pagadas'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2edutjuu5c().b[4][1]++;
    }
    // Verificar que el monto no exceda el total de la orden
    cov_2edutjuu5c().s[22]++;
    if (
    /* istanbul ignore next */
    (cov_2edutjuu5c().b[6][0]++, amount) &&
    /* istanbul ignore next */
    (cov_2edutjuu5c().b[6][1]++, amount > order.total)) {
      /* istanbul ignore next */
      cov_2edutjuu5c().b[5][0]++;
      cov_2edutjuu5c().s[23]++;
      return _server.NextResponse.json({
        success: false,
        error: 'El monto del reembolso no puede exceder el total de la orden'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2edutjuu5c().b[5][1]++;
    }
    const refundAmount =
    /* istanbul ignore next */
    (cov_2edutjuu5c().s[24]++,
    /* istanbul ignore next */
    (cov_2edutjuu5c().b[7][0]++, amount) ||
    /* istanbul ignore next */
    (cov_2edutjuu5c().b[7][1]++, order.total));
    // TODO: Aquí se integraría con MercadoPago para procesar el reembolso real
    // Por ahora, simularemos el proceso
    // Simular procesamiento de reembolso
    const refundResult =
    /* istanbul ignore next */
    (cov_2edutjuu5c().s[25]++, {
      success: true,
      refund_id: `refund_${Date.now()}`,
      amount: refundAmount,
      status: 'approved'
    });
    /* istanbul ignore next */
    cov_2edutjuu5c().s[26]++;
    if (!refundResult.success) {
      /* istanbul ignore next */
      cov_2edutjuu5c().b[8][0]++;
      cov_2edutjuu5c().s[27]++;
      _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.PAYMENT, 'Error processing refund', {
        orderId,
        refundResult
      });
      /* istanbul ignore next */
      cov_2edutjuu5c().s[28]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Error al procesar reembolso'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2edutjuu5c().b[8][1]++;
    }
    // Actualizar estado de la orden
    const updateData =
    /* istanbul ignore next */
    (cov_2edutjuu5c().s[29]++, {
      payment_status: 'refunded',
      status: 'refunded',
      updated_at: new Date().toISOString()
    });
    const {
      error: updateError
    } =
    /* istanbul ignore next */
    (cov_2edutjuu5c().s[30]++, await supabase.from('orders').update(updateData).eq('id', orderId));
    /* istanbul ignore next */
    cov_2edutjuu5c().s[31]++;
    if (updateError) {
      /* istanbul ignore next */
      cov_2edutjuu5c().b[9][0]++;
      cov_2edutjuu5c().s[32]++;
      _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.DATABASE, 'Error updating order after refund', {
        orderId,
        updateError
      });
      /* istanbul ignore next */
      cov_2edutjuu5c().s[33]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Error al actualizar estado de la orden'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2edutjuu5c().b[9][1]++;
    }
    // Registrar en historial de estados
    cov_2edutjuu5c().s[34]++;
    try {
      /* istanbul ignore next */
      cov_2edutjuu5c().s[35]++;
      await supabase.from('order_status_history').insert({
        order_id: orderId,
        previous_status: order.status,
        new_status: 'refunded',
        changed_by: session.user.id,
        reason: `Reembolso procesado: ${reason}`,
        metadata: JSON.stringify({
          refund_id: refundResult.refund_id,
          refund_amount: refundAmount,
          refund_reason: reason,
          processed_by: session.user.id
        })
      });
    } catch (historyError) {
      /* istanbul ignore next */
      cov_2edutjuu5c().s[36]++;
      // Si la tabla no existe, continuar sin registrar historial
      _logger.logger.log(_logger.LogLevel.WARN, _logger.LogCategory.DATABASE, 'Could not register refund in status history', {
        historyError
      });
    }
    // TODO: Aquí se podrían agregar acciones adicionales como:
    // - Enviar email de confirmación de reembolso al cliente
    // - Restaurar inventario si es necesario
    // - Crear notificaciones
    /* istanbul ignore next */
    cov_2edutjuu5c().s[37]++;
    _logger.logger.log(_logger.LogLevel.INFO, _logger.LogCategory.API, 'Refund processed successfully', {
      orderId,
      refund_id: refundResult.refund_id,
      amount: refundAmount
    });
    /* istanbul ignore next */
    cov_2edutjuu5c().s[38]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        order_id: orderId,
        refund_id: refundResult.refund_id,
        refund_amount: refundAmount,
        payment_status: 'refunded',
        status: 'refunded'
      },
      message: 'Reembolso procesado exitosamente'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2edutjuu5c().s[39]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Unexpected error processing refund', {
      orderId: params.id,
      error
    });
    /* istanbul ignore next */
    cov_2edutjuu5c().s[40]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,