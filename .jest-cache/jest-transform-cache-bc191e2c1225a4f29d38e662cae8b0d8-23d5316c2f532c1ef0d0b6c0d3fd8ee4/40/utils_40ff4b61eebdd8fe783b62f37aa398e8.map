{"version":3,"names":["capitalize","cov_21w2s0fx7m","f","s","cn","debounce","formatCurrency","generateId","isEmpty","sleep","slugify","throttle","inputs","_tailwindmerge","twMerge","_clsx","clsx","amount","numAmount","b","parseFloat","Intl","NumberFormat","style","currency","format","length","Math","random","toString","substring","func","wait","timeout","args","clearTimeout","setTimeout","limit","inThrottle","ms","Promise","resolve","value","trim","Array","isArray","Object","keys","str","charAt","toUpperCase","slice","toLowerCase","replace"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\core\\utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\n/**\r\n * Utility function to merge Tailwind CSS classes with clsx\r\n * @param inputs - Class values to merge\r\n * @returns Merged class string\r\n */\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n\r\n/**\r\n * Format currency in Argentine Peso format\r\n * @param amount - Amount to format\r\n * @returns Formatted currency string\r\n */\r\nexport function formatCurrency(amount: number | string): string {\r\n  const numAmount = typeof amount === 'string' ? parseFloat(amount) : amount;\r\n  return new Intl.NumberFormat('es-AR', {\r\n    style: 'currency',\r\n    currency: 'ARS',\r\n  }).format(numAmount);\r\n}\r\n\r\n/**\r\n * Generate a random ID\r\n * @param length - Length of the ID\r\n * @returns Random ID string\r\n */\r\nexport function generateId(length: number = 8): string {\r\n  return Math.random().toString(36).substring(2, length + 2);\r\n}\r\n\r\n/**\r\n * Debounce function\r\n * @param func - Function to debounce\r\n * @param wait - Wait time in milliseconds\r\n * @returns Debounced function\r\n */\r\nexport function debounce<T extends (...args: any[]) => any>(\r\n  func: T,\r\n  wait: number\r\n): (...args: Parameters<T>) => void {\r\n  let timeout: NodeJS.Timeout;\r\n  return (...args: Parameters<T>) => {\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => func(...args), wait);\r\n  };\r\n}\r\n\r\n/**\r\n * Throttle function\r\n * @param func - Function to throttle\r\n * @param limit - Time limit in milliseconds\r\n * @returns Throttled function\r\n */\r\nexport function throttle<T extends (...args: any[]) => any>(\r\n  func: T,\r\n  limit: number\r\n): (...args: Parameters<T>) => void {\r\n  let inThrottle: boolean;\r\n  return (...args: Parameters<T>) => {\r\n    if (!inThrottle) {\r\n      func(...args);\r\n      inThrottle = true;\r\n      setTimeout(() => (inThrottle = false), limit);\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Sleep function for async operations\r\n * @param ms - Milliseconds to sleep\r\n * @returns Promise that resolves after the specified time\r\n */\r\nexport function sleep(ms: number): Promise<void> {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\n/**\r\n * Check if a value is empty (null, undefined, empty string, empty array, empty object)\r\n * @param value - Value to check\r\n * @returns True if empty, false otherwise\r\n */\r\nexport function isEmpty(value: any): boolean {\r\n  if (value == null) return true;\r\n  if (typeof value === 'string') return value.trim() === '';\r\n  if (Array.isArray(value)) return value.length === 0;\r\n  if (typeof value === 'object') return Object.keys(value).length === 0;\r\n  return false;\r\n}\r\n\r\n/**\r\n * Capitalize first letter of a string\r\n * @param str - String to capitalize\r\n * @returns Capitalized string\r\n */\r\nexport function capitalize(str: string): string {\r\n  return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\n/**\r\n * Convert string to slug format\r\n * @param str - String to convert\r\n * @returns Slug string\r\n */\r\nexport function slugify(str: string): string {\r\n  return str\r\n    .toLowerCase()\r\n    .trim()\r\n    .replace(/[^\\w\\s-]/g, '')\r\n    .replace(/[\\s_-]+/g, '-')\r\n    .replace(/^-+|-+$/g, '');\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappingskGgBA,WAAA;IAAA;IAAAC,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;WAAAH,UAAA;;MA1FAI,GAAA;IAAA;IAAAH,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;WAAAC,EAAA;;MAgCAC,SAAA;IAAA;IAAAJ,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;WAAAE,QAAA;;MAvBAC,eAAA;IAAA;IAAAL,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;WAAAG,cAAA;;MAaAC,WAAA;IAAA;IAAAN,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;WAAAI,UAAA;;MAuDAC,QAAA;IAAA;IAAAP,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;WAAAK,OAAA;;MATAC,MAAA;IAAA;IAAAR,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;WAAAM,KAAA;;MA+BAC,QAAA;IAAA;IAAAT,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;WAAAO,OAAA;;MAlDAC,SAAA;IAAA;IAAAV,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;WAAAQ,QAAA;;;;;mCAzDsB;;;mCACd;AAOjB,SAASP,GAAG,GAAGQ,MAAoB;EAAA;EAAAX,cAAA,GAAAC,CAAA;EAAAD,cAAA,GAAAE,CAAA;EACxC,OAAO,IAAAU,cAAA,CAAAC,OAAO,EAAC,IAAAC,KAAA,CAAAC,IAAI,EAACJ,MAAA;AACtB;AAOO,SAASN,eAAeW,MAAuB;EAAA;EAAAhB,cAAA,GAAAC,CAAA;EACpD,MAAMgB,SAAA;EAAA;EAAA,CAAAjB,cAAA,GAAAE,CAAA,QAAY,OAAOc,MAAA,KAAW;EAAA;EAAA,CAAAhB,cAAA,GAAAkB,CAAA,UAAWC,UAAA,CAAWH,MAAA;EAAA;EAAA,CAAAhB,cAAA,GAAAkB,CAAA,UAAUF,MAAA;EAAA;EAAAhB,cAAA,GAAAE,CAAA;EACpE,OAAO,IAAIkB,IAAA,CAAKC,YAAY,CAAC,SAAS;IACpCC,KAAA,EAAO;IACPC,QAAA,EAAU;EACZ,GAAGC,MAAM,CAACP,SAAA;AACZ;AAOO,SAASX,WAAWmB,MAAA;AAAA;AAAA,CAAAzB,cAAA,GAAAkB,CAAA,UAAiB,CAAC;EAAA;EAAAlB,cAAA,GAAAC,CAAA;EAAAD,cAAA,GAAAE,CAAA;EAC3C,OAAOwB,IAAA,CAAKC,MAAM,GAAGC,QAAQ,CAAC,IAAIC,SAAS,CAAC,GAAGJ,MAAA,GAAS;AAC1D;AAQO,SAASrB,SACd0B,IAAO,EACPC,IAAY;EAAA;EAAA/B,cAAA,GAAAC,CAAA;EAEZ,IAAI+B,OAAA;EAAA;EAAAhC,cAAA,GAAAE,CAAA;EACJ,OAAO,CAAC,GAAG+B,IAAA;IAAA;IAAAjC,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;IACTgC,YAAA,CAAaF,OAAA;IAAA;IAAAhC,cAAA,GAAAE,CAAA;IACb8B,OAAA,GAAUG,UAAA,CAAW,MAAM;MAAA;MAAAnC,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAE,CAAA;MAAA,OAAA4B,IAAA,IAAQG,IAAA;IAAA,GAAOF,IAAA;EAC5C;AACF;AAQO,SAASrB,SACdoB,IAAO,EACPM,KAAa;EAAA;EAAApC,cAAA,GAAAC,CAAA;EAEb,IAAIoC,UAAA;EAAA;EAAArC,cAAA,GAAAE,CAAA;EACJ,OAAO,CAAC,GAAG+B,IAAA;IAAA;IAAAjC,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;IACT,IAAI,CAACmC,UAAA,EAAY;MAAA;MAAArC,cAAA,GAAAkB,CAAA;MAAAlB,cAAA,GAAAE,CAAA;MACf4B,IAAA,IAAQG,IAAA;MAAA;MAAAjC,cAAA,GAAAE,CAAA;MACRmC,UAAA,GAAa;MAAA;MAAArC,cAAA,GAAAE,CAAA;MACbiC,UAAA,CAAW,MAAO;QAAA;QAAAnC,cAAA,GAAAC,CAAA;QAAAD,cAAA,GAAAE,CAAA;QAAA,OAAAmC,UAAA,GAAa;MAAA,GAAQD,KAAA;IACzC;IAAA;IAAA;MAAApC,cAAA,GAAAkB,CAAA;IAAA;EACF;AACF;AAOO,SAASV,MAAM8B,EAAU;EAAA;EAAAtC,cAAA,GAAAC,CAAA;EAAAD,cAAA,GAAAE,CAAA;EAC9B,OAAO,IAAIqC,OAAA,CAAQC,OAAA,IAAW;IAAA;IAAAxC,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;IAAA,OAAAiC,UAAA,CAAWK,OAAA,EAASF,EAAA;EAAA;AACpD;AAOO,SAAS/B,QAAQkC,KAAU;EAAA;EAAAzC,cAAA,GAAAC,CAAA;EAAAD,cAAA,GAAAE,CAAA;EAChC,IAAIuC,KAAA,IAAS,MAAM;IAAA;IAAAzC,cAAA,GAAAkB,CAAA;IAAAlB,cAAA,GAAAE,CAAA;IAAA,OAAO;EAAA;EAAA;EAAA;IAAAF,cAAA,GAAAkB,CAAA;EAAA;EAAAlB,cAAA,GAAAE,CAAA;EAC1B,IAAI,OAAOuC,KAAA,KAAU,UAAU;IAAA;IAAAzC,cAAA,GAAAkB,CAAA;IAAAlB,cAAA,GAAAE,CAAA;IAAA,OAAOuC,KAAA,CAAMC,IAAI,OAAO;EAAA;EAAA;EAAA;IAAA1C,cAAA,GAAAkB,CAAA;EAAA;EAAAlB,cAAA,GAAAE,CAAA;EACvD,IAAIyC,KAAA,CAAMC,OAAO,CAACH,KAAA,GAAQ;IAAA;IAAAzC,cAAA,GAAAkB,CAAA;IAAAlB,cAAA,GAAAE,CAAA;IAAA,OAAOuC,KAAA,CAAMhB,MAAM,KAAK;EAAA;EAAA;EAAA;IAAAzB,cAAA,GAAAkB,CAAA;EAAA;EAAAlB,cAAA,GAAAE,CAAA;EAClD,IAAI,OAAOuC,KAAA,KAAU,UAAU;IAAA;IAAAzC,cAAA,GAAAkB,CAAA;IAAAlB,cAAA,GAAAE,CAAA;IAAA,OAAO2C,MAAA,CAAOC,IAAI,CAACL,KAAA,EAAOhB,MAAM,KAAK;EAAA;EAAA;EAAA;IAAAzB,cAAA,GAAAkB,CAAA;EAAA;EAAAlB,cAAA,GAAAE,CAAA;EACpE,OAAO;AACT;AAOO,SAASH,WAAWgD,GAAW;EAAA;EAAA/C,cAAA,GAAAC,CAAA;EAAAD,cAAA,GAAAE,CAAA;EACpC,OAAO6C,GAAA,CAAIC,MAAM,CAAC,GAAGC,WAAW,KAAKF,GAAA,CAAIG,KAAK,CAAC;AACjD;AAOO,SAASzC,QAAQsC,GAAW;EAAA;EAAA/C,cAAA,GAAAC,CAAA;EAAAD,cAAA,GAAAE,CAAA;EACjC,OAAO6C,GAAA,CACJI,WAAW,GACXT,IAAI,GACJU,OAAO,CAAC,aAAa,IACrBA,OAAO,CAAC,YAAY,KACpBA,OAAO,CAAC,YAAY;AACzB","ignoreList":[]}