362664dcd1a4be5f0276f8133124b104
// ===================================
// PINTEYA E-COMMERCE - HOOK FILTER METADATA
// ===================================
"use strict";

/* istanbul ignore next */
function cov_ywnlkvkhz() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useFilterMetadata.ts";
  var hash = "d3032a6703b316de4752e3e9739b1b30d6715faa";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useFilterMetadata.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 30,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 25
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 33
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 33
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 31
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 29
        }
      },
      "9": {
        start: {
          line: 31,
          column: 20
        },
        end: {
          line: 31,
          column: 52
        }
      },
      "10": {
        start: {
          line: 35,
          column: 28
        },
        end: {
          line: 64,
          column: 1
        }
      },
      "11": {
        start: {
          line: 36,
          column: 21
        },
        end: {
          line: 41,
          column: 6
        }
      },
      "12": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "13": {
        start: {
          line: 43,
          column: 26
        },
        end: {
          line: 43,
          column: 47
        }
      },
      "14": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 48,
          column: 11
        }
      },
      "15": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 102
        }
      },
      "16": {
        start: {
          line: 51,
          column: 19
        },
        end: {
          line: 51,
          column: 40
        }
      },
      "17": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "18": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 80
        }
      },
      "19": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 75
        }
      },
      "20": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 62,
          column: 7
        }
      },
      "21": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 23
        }
      },
      "22": {
        start: {
          line: 65,
          column: 26
        },
        end: {
          line: 78,
          column: 1
        }
      },
      "23": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 77,
          column: 7
        }
      },
      "24": {
        start: {
          line: 74,
          column: 36
        },
        end: {
          line: 74,
          column: 77
        }
      },
      "25": {
        start: {
          line: 79,
          column: 26
        },
        end: {
          line: 86,
          column: 1
        }
      },
      "26": {
        start: {
          line: 80,
          column: 39
        },
        end: {
          line: 80,
          column: 58
        }
      },
      "27": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 85,
          column: 6
        }
      },
      "28": {
        start: {
          line: 87,
          column: 18
        },
        end: {
          line: 94,
          column: 1
        }
      },
      "29": {
        start: {
          line: 88,
          column: 39
        },
        end: {
          line: 88,
          column: 58
        }
      },
      "30": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 93,
          column: 6
        }
      },
      "31": {
        start: {
          line: 95,
          column: 24
        },
        end: {
          line: 103,
          column: 1
        }
      },
      "32": {
        start: {
          line: 96,
          column: 39
        },
        end: {
          line: 96,
          column: 58
        }
      },
      "33": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 102,
          column: 6
        }
      },
      "34": {
        start: {
          line: 104,
          column: 22
        },
        end: {
          line: 114,
          column: 1
        }
      },
      "35": {
        start: {
          line: 105,
          column: 39
        },
        end: {
          line: 105,
          column: 58
        }
      },
      "36": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 113,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 21
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 29
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 27
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 25
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 35,
            column: 28
          },
          end: {
            line: 35,
            column: 29
          }
        },
        loc: {
          start: {
            line: 35,
            column: 38
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 35
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 65,
            column: 26
          },
          end: {
            line: 65,
            column: 27
          }
        },
        loc: {
          start: {
            line: 65,
            column: 30
          },
          end: {
            line: 78,
            column: 1
          }
        },
        line: 65
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 74,
            column: 20
          },
          end: {
            line: 74,
            column: 21
          }
        },
        loc: {
          start: {
            line: 74,
            column: 36
          },
          end: {
            line: 74,
            column: 77
          }
        },
        line: 74
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 79,
            column: 26
          },
          end: {
            line: 79,
            column: 27
          }
        },
        loc: {
          start: {
            line: 79,
            column: 30
          },
          end: {
            line: 86,
            column: 1
          }
        },
        line: 79
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 87,
            column: 18
          },
          end: {
            line: 87,
            column: 19
          }
        },
        loc: {
          start: {
            line: 87,
            column: 22
          },
          end: {
            line: 94,
            column: 1
          }
        },
        line: 87
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 95,
            column: 24
          },
          end: {
            line: 95,
            column: 25
          }
        },
        loc: {
          start: {
            line: 95,
            column: 28
          },
          end: {
            line: 103,
            column: 1
          }
        },
        line: 95
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 104,
            column: 22
          },
          end: {
            line: 104,
            column: 23
          }
        },
        loc: {
          start: {
            line: 104,
            column: 26
          },
          end: {
            line: 114,
            column: 1
          }
        },
        line: 104
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "1": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "2": {
        loc: {
          start: {
            line: 54,
            column: 24
          },
          end: {
            line: 54,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 24
          },
          end: {
            line: 54,
            column: 36
          }
        }, {
          start: {
            line: 54,
            column: 40
          },
          end: {
            line: 54,
            column: 73
          }
        }],
        line: 54
      },
      "3": {
        loc: {
          start: {
            line: 82,
            column: 20
          },
          end: {
            line: 82,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 20
          },
          end: {
            line: 82,
            column: 36
          }
        }, {
          start: {
            line: 82,
            column: 40
          },
          end: {
            line: 82,
            column: 42
          }
        }],
        line: 82
      },
      "4": {
        loc: {
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 90,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 90,
            column: 28
          }
        }, {
          start: {
            line: 90,
            column: 32
          },
          end: {
            line: 90,
            column: 34
          }
        }],
        line: 90
      },
      "5": {
        loc: {
          start: {
            line: 98,
            column: 20
          },
          end: {
            line: 98,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 20
          },
          end: {
            line: 98,
            column: 36
          }
        }, {
          start: {
            line: 98,
            column: 40
          },
          end: {
            line: 98,
            column: 42
          }
        }],
        line: 98
      },
      "6": {
        loc: {
          start: {
            line: 99,
            column: 18
          },
          end: {
            line: 99,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 18
          },
          end: {
            line: 99,
            column: 32
          }
        }, {
          start: {
            line: 99,
            column: 36
          },
          end: {
            line: 99,
            column: 38
          }
        }],
        line: 99
      },
      "7": {
        loc: {
          start: {
            line: 107,
            column: 20
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 20
          },
          end: {
            line: 107,
            column: 36
          }
        }, {
          start: {
            line: 107,
            column: 40
          },
          end: {
            line: 110,
            column: 9
          }
        }],
        line: 107
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useFilterMetadata.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - HOOK FILTER METADATA\r\n// ===================================\r\n\r\nimport { useQuery } from '@tanstack/react-query';\r\n\r\n// ===================================\r\n// TIPOS\r\n// ===================================\r\n\r\nexport interface CategoryWithSubs {\r\n  id: number;\r\n  name: string;\r\n  slug: string;\r\n  image_url: string | null;\r\n  subcategories: {\r\n    id: number;\r\n    name: string;\r\n    slug: string;\r\n    parent_id: number;\r\n    image_url: string | null;\r\n  }[];\r\n}\r\n\r\nexport interface FilterMetadata {\r\n  categories: CategoryWithSubs[];\r\n  brands: string[];\r\n  paintTypes: string[];\r\n  finishes: string[];\r\n  priceRange: {\r\n    min: number;\r\n    max: number;\r\n  };\r\n  stats: {\r\n    totalCategories: number;\r\n    totalSubcategories: number;\r\n    totalBrands: number;\r\n    totalProducts: number;\r\n  };\r\n}\r\n\r\nexport interface FilterMetadataResponse {\r\n  success: boolean;\r\n  data: FilterMetadata;\r\n  error?: string;\r\n}\r\n\r\n// ===================================\r\n// FUNCI\xD3N DE FETCH\r\n// ===================================\r\n\r\nconst fetchFilterMetadata = async (): Promise<FilterMetadata> => {\r\n  \r\n  const response = await fetch('/api/filters/metadata', {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorText = await response.text();\r\n    console.error('\u274C useFilterMetadata: API error:', {\r\n      status: response.status,\r\n      statusText: response.statusText,\r\n      error: errorText\r\n    });\r\n    throw new Error(`Failed to fetch filter metadata: ${response.status} ${response.statusText}`);\r\n  }\r\n\r\n  const result: FilterMetadataResponse = await response.json();\r\n  \r\n  if (!result.success) {\r\n    console.error('\u274C useFilterMetadata: API returned error:', result.error);\r\n    throw new Error(result.error || 'Failed to fetch filter metadata');\r\n  }\r\n\r\n  console.log('\u2705 useFilterMetadata: Metadata fetched successfully:', {\r\n    categories: result.data.categories.length,\r\n    brands: result.data.brands.length,\r\n    paintTypes: result.data.paintTypes.length,\r\n    finishes: result.data.finishes.length,\r\n    priceRange: result.data.priceRange\r\n  });\r\n\r\n  return result.data;\r\n};\r\n\r\n// ===================================\r\n// HOOK PRINCIPAL\r\n// ===================================\r\n\r\nexport const useFilterMetadata = () => {\r\n  return useQuery({\r\n    queryKey: ['filterMetadata'],\r\n    queryFn: fetchFilterMetadata,\r\n    staleTime: 5 * 60 * 1000, // 5 minutos\r\n    gcTime: 10 * 60 * 1000, // 10 minutos (antes cacheTime)\r\n    retry: 3,\r\n    retryDelay: (attemptIndex) => Math.min(1000 * 2 ** attemptIndex, 30000),\r\n    refetchOnWindowFocus: false,\r\n    refetchOnMount: false,\r\n  });\r\n};\r\n\r\n// ===================================\r\n// HOOKS AUXILIARES\r\n// ===================================\r\n\r\n/**\r\n * Hook para obtener solo las categor\xEDas principales\r\n */\r\nexport const useMainCategories = () => {\r\n  const { data, isLoading, error } = useFilterMetadata();\r\n  \r\n  return {\r\n    categories: data?.categories || [],\r\n    isLoading,\r\n    error\r\n  };\r\n};\r\n\r\n/**\r\n * Hook para obtener solo las marcas\r\n */\r\nexport const useBrands = () => {\r\n  const { data, isLoading, error } = useFilterMetadata();\r\n  \r\n  return {\r\n    brands: data?.brands || [],\r\n    isLoading,\r\n    error\r\n  };\r\n};\r\n\r\n/**\r\n * Hook para obtener tipos de pintura y acabados\r\n */\r\nexport const usePaintOptions = () => {\r\n  const { data, isLoading, error } = useFilterMetadata();\r\n  \r\n  return {\r\n    paintTypes: data?.paintTypes || [],\r\n    finishes: data?.finishes || [],\r\n    isLoading,\r\n    error\r\n  };\r\n};\r\n\r\n/**\r\n * Hook para obtener rango de precios\r\n */\r\nexport const usePriceRange = () => {\r\n  const { data, isLoading, error } = useFilterMetadata();\r\n  \r\n  return {\r\n    priceRange: data?.priceRange || { min: 0, max: 100000 },\r\n    isLoading,\r\n    error\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useBrands", "useFilterMetadata", "useMainCategories", "usePaintOptions", "usePriceRange", "fetchFilterMetadata", "response", "fetch", "method", "headers", "ok", "errorText", "text", "console", "error", "status", "statusText", "Error", "result", "json", "success", "log", "categories", "data", "length", "brands", "paintTypes", "finishes", "priceRange", "useQuery", "queryKey", "queryFn", "staleTime", "gcTime", "retry", "retryDelay", "attemptIndex", "Math", "min", "refetchOnWindowFocus", "refetchOnMount", "isLoading", "max"],
      mappings: "AAAA,sCAAsC;AACtC,4CAA4C;AAC5C,sCAAsC;;;;;;;;;;;;QA2HzBA;eAAAA;;QAjCAC;eAAAA;;QAoBAC;eAAAA;;QA0BAC;eAAAA;;QAcAC;eAAAA;;;4BApJY;AA2CzB,sCAAsC;AACtC,mBAAmB;AACnB,sCAAsC;AAEtC,MAAMC,sBAAsB;IAE1B,MAAMC,WAAW,MAAMC,MAAM,yBAAyB;QACpDC,QAAQ;QACRC,SAAS;YACP,gBAAgB;QAClB;IACF;IAEA,IAAI,CAACH,SAASI,EAAE,EAAE;QAChB,MAAMC,YAAY,MAAML,SAASM,IAAI;QACrCC,QAAQC,KAAK,CAAC,mCAAmC;YAC/CC,QAAQT,SAASS,MAAM;YACvBC,YAAYV,SAASU,UAAU;YAC/BF,OAAOH;QACT;QACA,MAAM,IAAIM,MAAM,CAAC,iCAAiC,EAAEX,SAASS,MAAM,CAAC,CAAC,EAAET,SAASU,UAAU,EAAE;IAC9F;IAEA,MAAME,SAAiC,MAAMZ,SAASa,IAAI;IAE1D,IAAI,CAACD,OAAOE,OAAO,EAAE;QACnBP,QAAQC,KAAK,CAAC,4CAA4CI,OAAOJ,KAAK;QACtE,MAAM,IAAIG,MAAMC,OAAOJ,KAAK,IAAI;IAClC;IAEAD,QAAQQ,GAAG,CAAC,uDAAuD;QACjEC,YAAYJ,OAAOK,IAAI,CAACD,UAAU,CAACE,MAAM;QACzCC,QAAQP,OAAOK,IAAI,CAACE,MAAM,CAACD,MAAM;QACjCE,YAAYR,OAAOK,IAAI,CAACG,UAAU,CAACF,MAAM;QACzCG,UAAUT,OAAOK,IAAI,CAACI,QAAQ,CAACH,MAAM;QACrCI,YAAYV,OAAOK,IAAI,CAACK,UAAU;IACpC;IAEA,OAAOV,OAAOK,IAAI;AACpB;AAMO,MAAMtB,oBAAoB;IAC/B,OAAO4B,IAAAA,oBAAQ,EAAC;QACdC,UAAU;YAAC;SAAiB;QAC5BC,SAAS1B;QACT2B,WAAW,IAAI,KAAK;QACpBC,QAAQ,KAAK,KAAK;QAClBC,OAAO;QACPC,YAAY,CAACC,eAAiBC,KAAKC,GAAG,CAAC,OAAO,KAAKF,cAAc;QACjEG,sBAAsB;QACtBC,gBAAgB;IAClB;AACF;AASO,MAAMtC,oBAAoB;IAC/B,MAAM,EAAEqB,IAAI,EAAEkB,SAAS,EAAE3B,KAAK,EAAE,GAAGb;IAEnC,OAAO;QACLqB,YAAYC,MAAMD,cAAc,EAAE;QAClCmB;QACA3B;IACF;AACF;AAKO,MAAMd,YAAY;IACvB,MAAM,EAAEuB,IAAI,EAAEkB,SAAS,EAAE3B,KAAK,EAAE,GAAGb;IAEnC,OAAO;QACLwB,QAAQF,MAAME,UAAU,EAAE;QAC1BgB;QACA3B;IACF;AACF;AAKO,MAAMX,kBAAkB;IAC7B,MAAM,EAAEoB,IAAI,EAAEkB,SAAS,EAAE3B,KAAK,EAAE,GAAGb;IAEnC,OAAO;QACLyB,YAAYH,MAAMG,cAAc,EAAE;QAClCC,UAAUJ,MAAMI,YAAY,EAAE;QAC9Bc;QACA3B;IACF;AACF;AAKO,MAAMV,gBAAgB;IAC3B,MAAM,EAAEmB,IAAI,EAAEkB,SAAS,EAAE3B,KAAK,EAAE,GAAGb;IAEnC,OAAO;QACL2B,YAAYL,MAAMK,cAAc;YAAEU,KAAK;YAAGI,KAAK;QAAO;QACtDD;QACA3B;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d3032a6703b316de4752e3e9739b1b30d6715faa"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ywnlkvkhz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ywnlkvkhz();
cov_ywnlkvkhz().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_ywnlkvkhz().f[0]++;
  cov_ywnlkvkhz().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_ywnlkvkhz().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_ywnlkvkhz().s[3]++;
_export(exports, {
  get useBrands() {
    /* istanbul ignore next */
    cov_ywnlkvkhz().f[1]++;
    cov_ywnlkvkhz().s[4]++;
    return useBrands;
  },
  get useFilterMetadata() {
    /* istanbul ignore next */
    cov_ywnlkvkhz().f[2]++;
    cov_ywnlkvkhz().s[5]++;
    return useFilterMetadata;
  },
  get useMainCategories() {
    /* istanbul ignore next */
    cov_ywnlkvkhz().f[3]++;
    cov_ywnlkvkhz().s[6]++;
    return useMainCategories;
  },
  get usePaintOptions() {
    /* istanbul ignore next */
    cov_ywnlkvkhz().f[4]++;
    cov_ywnlkvkhz().s[7]++;
    return usePaintOptions;
  },
  get usePriceRange() {
    /* istanbul ignore next */
    cov_ywnlkvkhz().f[5]++;
    cov_ywnlkvkhz().s[8]++;
    return usePriceRange;
  }
});
const _reactquery =
/* istanbul ignore next */
(cov_ywnlkvkhz().s[9]++, require("@tanstack/react-query"));
// ===================================
// FUNCIÓN DE FETCH
// ===================================
/* istanbul ignore next */
cov_ywnlkvkhz().s[10]++;
const fetchFilterMetadata = async () => {
  /* istanbul ignore next */
  cov_ywnlkvkhz().f[6]++;
  const response =
  /* istanbul ignore next */
  (cov_ywnlkvkhz().s[11]++, await fetch('/api/filters/metadata', {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json'
    }
  }));
  /* istanbul ignore next */
  cov_ywnlkvkhz().s[12]++;
  if (!response.ok) {
    /* istanbul ignore next */
    cov_ywnlkvkhz().b[0][0]++;
    const errorText =
    /* istanbul ignore next */
    (cov_ywnlkvkhz().s[13]++, await response.text());
    /* istanbul ignore next */
    cov_ywnlkvkhz().s[14]++;
    console.error('❌ useFilterMetadata: API error:', {
      status: response.status,
      statusText: response.statusText,
      error: errorText
    });
    /* istanbul ignore next */
    cov_ywnlkvkhz().s[15]++;
    throw new Error(`Failed to fetch filter metadata: ${response.status} ${response.statusText}`);
  } else
  /* istanbul ignore next */
  {
    cov_ywnlkvkhz().b[0][1]++;
  }
  const result =
  /* istanbul ignore next */
  (cov_ywnlkvkhz().s[16]++, await response.json());
  /* istanbul ignore next */
  cov_ywnlkvkhz().s[17]++;
  if (!result.success) {
    /* istanbul ignore next */
    cov_ywnlkvkhz().b[1][0]++;
    cov_ywnlkvkhz().s[18]++;
    console.error('❌ useFilterMetadata: API returned error:', result.error);
    /* istanbul ignore next */
    cov_ywnlkvkhz().s[19]++;
    throw new Error(
    /* istanbul ignore next */
    (cov_ywnlkvkhz().b[2][0]++, result.error) ||
    /* istanbul ignore next */
    (cov_ywnlkvkhz().b[2][1]++, 'Failed to fetch filter metadata'));
  } else
  /* istanbul ignore next */
  {
    cov_ywnlkvkhz().b[1][1]++;
  }
  cov_ywnlkvkhz().s[20]++;
  console.log('✅ useFilterMetadata: Metadata fetched successfully:', {
    categories: result.data.categories.length,
    brands: result.data.brands.length,
    paintTypes: result.data.paintTypes.length,
    finishes: result.data.finishes.length,
    priceRange: result.data.priceRange
  });
  /* istanbul ignore next */
  cov_ywnlkvkhz().s[21]++;
  return result.data;
};
/* istanbul ignore next */
cov_ywnlkvkhz().s[22]++;
const useFilterMetadata = () => {
  /* istanbul ignore next */
  cov_ywnlkvkhz().f[7]++;
  cov_ywnlkvkhz().s[23]++;
  return (0, _reactquery.useQuery)({
    queryKey: ['filterMetadata'],
    queryFn: fetchFilterMetadata,
    staleTime: 5 * 60 * 1000,
    gcTime: 10 * 60 * 1000,
    retry: 3,
    retryDelay: attemptIndex => {
      /* istanbul ignore next */
      cov_ywnlkvkhz().f[8]++;
      cov_ywnlkvkhz().s[24]++;
      return Math.min(1000 * 2 ** attemptIndex, 30000);
    },
    refetchOnWindowFocus: false,
    refetchOnMount: false
  });
};
/* istanbul ignore next */
cov_ywnlkvkhz().s[25]++;
const useMainCategories = () => {
  /* istanbul ignore next */
  cov_ywnlkvkhz().f[9]++;
  const {
    data,
    isLoading,
    error
  } =
  /* istanbul ignore next */
  (cov_ywnlkvkhz().s[26]++, useFilterMetadata());
  /* istanbul ignore next */
  cov_ywnlkvkhz().s[27]++;
  return {
    categories:
    /* istanbul ignore next */
    (cov_ywnlkvkhz().b[3][0]++, data?.categories) ||
    /* istanbul ignore next */
    (cov_ywnlkvkhz().b[3][1]++, []),
    isLoading,
    error
  };
};
/* istanbul ignore next */
cov_ywnlkvkhz().s[28]++;
const useBrands = () => {
  /* istanbul ignore next */
  cov_ywnlkvkhz().f[10]++;
  const {
    data,
    isLoading,
    error
  } =
  /* istanbul ignore next */
  (cov_ywnlkvkhz().s[29]++, useFilterMetadata());
  /* istanbul ignore next */
  cov_ywnlkvkhz().s[30]++;
  return {
    brands:
    /* istanbul ignore next */
    (cov_ywnlkvkhz().b[4][0]++, data?.brands) ||
    /* istanbul ignore next */
    (cov_ywnlkvkhz().b[4][1]++, []),
    isLoading,
    error
  };
};
/* istanbul ignore next */
cov_ywnlkvkhz().s[31]++;
const usePaintOptions = () => {
  /* istanbul ignore next */
  cov_ywnlkvkhz().f[11]++;
  const {
    data,
    isLoading,
    error
  } =
  /* istanbul ignore next */
  (cov_ywnlkvkhz().s[32]++, useFilterMetadata());
  /* istanbul ignore next */
  cov_ywnlkvkhz().s[33]++;
  return {
    paintTypes:
    /* istanbul ignore next */
    (cov_ywnlkvkhz().b[5][0]++, data?.paintTypes) ||
    /* istanbul ignore next */
    (cov_ywnlkvkhz().b[5][1]++, []),
    finishes:
    /* istanbul ignore next */
    (cov_ywnlkvkhz().b[6][0]++, data?.finishes) ||
    /* istanbul ignore next */
    (cov_ywnlkvkhz().b[6][1]++, []),
    isLoading,
    error
  };
};
/* istanbul ignore next */
cov_ywnlkvkhz().s[34]++;
const usePriceRange = () => {
  /* istanbul ignore next */
  cov_ywnlkvkhz().f[12]++;
  const {
    data,
    isLoading,
    error
  } =
  /* istanbul ignore next */
  (cov_ywnlkvkhz().s[35]++, useFilterMetadata());
  /* istanbul ignore next */
  cov_ywnlkvkhz().s[36]++;
  return {
    priceRange:
    /* istanbul ignore next */
    (cov_ywnlkvkhz().b[7][0]++, data?.priceRange) ||
    /* istanbul ignore next */
    (cov_ywnlkvkhz().b[7][1]++, {
      min: 0,
      max: 100000
    }),
    isLoading,
    error
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,