{"version":3,"names":["TrustedDevices","cov_6pp2pf0t9","f","sessions","isLoading","refreshSessions","s","_useUserSessions","useUserSessions","trustedDevices","setTrustedDevices","_react","useState","useEffect","b","trusted","filter","session","is_trusted","getDeviceIcon","deviceType","_jsxruntime","jsx","_lucidereact","Smartphone","className","Tablet","Monitor","getTrustLevelColor","trustLevel","getTrustLevelText","handleTrustDevice","deviceId","trust","response","fetch","method","headers","body","JSON","stringify","ok","Error","_sonner","toast","success","error","handleRemoveDevice","confirmed","window","confirm","formatLastActivity","dateString","date","Date","now","diffInMinutes","Math","floor","getTime","jsxs","_card","Card","CardHeader","CardTitle","Shield","CardDescription","CardContent","map","i","length","ShieldX","_button","Button","onClick","variant","device","device_type","device_name","ShieldCheck","browser","os","location","MapPin","Calendar","last_activity","_badge","Badge","trust_level","_dropdownmenu","DropdownMenu","DropdownMenuTrigger","asChild","size","MoreVertical","DropdownMenuContent","align","DropdownMenuItem","id","Trash2","href"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\User\\Security\\TrustedDevices.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { \r\n  Smartphone, \r\n  Monitor, \r\n  Tablet, \r\n  Shield, \r\n  ShieldCheck, \r\n  ShieldX,\r\n  MoreVertical,\r\n  Calendar,\r\n  MapPin,\r\n  Trash2\r\n} from 'lucide-react';\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger,\r\n} from '@/components/ui/dropdown-menu';\r\nimport { useUserSessions } from '@/hooks/useUserSessions';\r\nimport { toast } from 'sonner';\r\n\r\ninterface TrustedDevice {\r\n  id: string;\r\n  device_name: string;\r\n  device_type: 'desktop' | 'mobile' | 'tablet';\r\n  browser: string;\r\n  os: string;\r\n  ip_address: string;\r\n  location?: string;\r\n  is_trusted: boolean;\r\n  last_activity: string;\r\n  created_at: string;\r\n  trust_level: number;\r\n}\r\n\r\nexport function TrustedDevices() {\r\n  const { sessions, isLoading, refreshSessions } = useUserSessions();\r\n  const [trustedDevices, setTrustedDevices] = useState<TrustedDevice[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (sessions) {\r\n      // Filtrar solo dispositivos de confianza\r\n      const trusted = sessions.filter(session => session.is_trusted);\r\n      setTrustedDevices(trusted);\r\n    }\r\n  }, [sessions]);\r\n\r\n  const getDeviceIcon = (deviceType: string) => {\r\n    switch (deviceType) {\r\n      case 'mobile':\r\n        return <Smartphone className=\"h-5 w-5\" />;\r\n      case 'tablet':\r\n        return <Tablet className=\"h-5 w-5\" />;\r\n      default:\r\n        return <Monitor className=\"h-5 w-5\" />;\r\n    }\r\n  };\r\n\r\n  const getTrustLevelColor = (trustLevel: number) => {\r\n    if (trustLevel >= 80) return 'text-green-600 bg-green-50';\r\n    if (trustLevel >= 60) return 'text-yellow-600 bg-yellow-50';\r\n    return 'text-red-600 bg-red-50';\r\n  };\r\n\r\n  const getTrustLevelText = (trustLevel: number) => {\r\n    if (trustLevel >= 80) return 'Alta confianza';\r\n    if (trustLevel >= 60) return 'Confianza media';\r\n    return 'Confianza baja';\r\n  };\r\n\r\n  const handleTrustDevice = async (deviceId: string, trust: boolean) => {\r\n    try {\r\n      const response = await fetch(`/api/user/trusted-devices/${deviceId}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ is_trusted: trust }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al actualizar dispositivo');\r\n      }\r\n\r\n      await refreshSessions();\r\n      toast.success(trust ? 'Dispositivo marcado como confiable' : 'Confianza removida del dispositivo');\r\n    } catch (error) {\r\n      toast.error('Error al actualizar dispositivo');\r\n    }\r\n  };\r\n\r\n  const handleRemoveDevice = async (deviceId: string) => {\r\n    const confirmed = window.confirm(\r\n      '¿Estás seguro de que quieres eliminar este dispositivo de confianza? Esto cerrará todas las sesiones activas en este dispositivo.'\r\n    );\r\n\r\n    if (!confirmed) return;\r\n\r\n    try {\r\n      const response = await fetch(`/api/user/trusted-devices/${deviceId}`, {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al eliminar dispositivo');\r\n      }\r\n\r\n      await refreshSessions();\r\n      toast.success('Dispositivo eliminado correctamente');\r\n    } catch (error) {\r\n      toast.error('Error al eliminar dispositivo');\r\n    }\r\n  };\r\n\r\n  const formatLastActivity = (dateString: string) => {\r\n    const date = new Date(dateString);\r\n    const now = new Date();\r\n    const diffInMinutes = Math.floor((now.getTime() - date.getTime()) / (1000 * 60));\r\n\r\n    if (diffInMinutes < 1) return 'Ahora mismo';\r\n    if (diffInMinutes < 60) return `Hace ${diffInMinutes} minutos`;\r\n    if (diffInMinutes < 1440) return `Hace ${Math.floor(diffInMinutes / 60)} horas`;\r\n    return `Hace ${Math.floor(diffInMinutes / 1440)} días`;\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center\">\r\n            <Shield className=\"h-5 w-5 mr-2\" />\r\n            Dispositivos de Confianza\r\n          </CardTitle>\r\n          <CardDescription>\r\n            Gestiona los dispositivos que consideras seguros para acceder a tu cuenta.\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"space-y-4\">\r\n            {[1, 2, 3].map((i) => (\r\n              <div key={i} className=\"animate-pulse\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-1/4 mb-2\"></div>\r\n                <div className=\"h-3 bg-gray-200 rounded w-1/2\"></div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle className=\"flex items-center\">\r\n          <Shield className=\"h-5 w-5 mr-2\" />\r\n          Dispositivos de Confianza\r\n        </CardTitle>\r\n        <CardDescription>\r\n          Gestiona los dispositivos que consideras seguros para acceder a tu cuenta.\r\n          Los dispositivos de confianza no requerirán verificación adicional.\r\n        </CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        {trustedDevices.length === 0 ? (\r\n          <div className=\"text-center py-8\">\r\n            <ShieldX className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\r\n              No hay dispositivos de confianza\r\n            </h3>\r\n            <p className=\"text-gray-600 mb-4\">\r\n              Marca dispositivos como confiables para facilitar futuros accesos.\r\n            </p>\r\n            <Button onClick={refreshSessions} variant=\"outline\">\r\n              Actualizar lista\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"space-y-4\">\r\n            {trustedDevices.map((device) => (\r\n              <div\r\n                key={device.id}\r\n                className=\"flex items-center justify-between p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors\"\r\n              >\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    {getDeviceIcon(device.device_type)}\r\n                  </div>\r\n                  \r\n                  <div className=\"flex-1 min-w-0\">\r\n                    <div className=\"flex items-center space-x-2 mb-1\">\r\n                      <h4 className=\"text-sm font-medium text-gray-900 truncate\">\r\n                        {device.device_name}\r\n                      </h4>\r\n                      <ShieldCheck className=\"h-4 w-4 text-green-600\" />\r\n                    </div>\r\n                    \r\n                    <div className=\"flex items-center space-x-4 text-sm text-gray-600\">\r\n                      <span>{device.browser} en {device.os}</span>\r\n                      {device.location && (\r\n                        <span className=\"flex items-center\">\r\n                          <MapPin className=\"h-3 w-3 mr-1\" />\r\n                          {device.location}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                    \r\n                    <div className=\"flex items-center space-x-4 mt-2\">\r\n                      <span className=\"flex items-center text-xs text-gray-500\">\r\n                        <Calendar className=\"h-3 w-3 mr-1\" />\r\n                        {formatLastActivity(device.last_activity)}\r\n                      </span>\r\n                      \r\n                      <Badge className={getTrustLevelColor(device.trust_level)}>\r\n                        {getTrustLevelText(device.trust_level)}\r\n                      </Badge>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <DropdownMenu>\r\n                    <DropdownMenuTrigger asChild>\r\n                      <Button variant=\"ghost\" size=\"sm\">\r\n                        <MoreVertical className=\"h-4 w-4\" />\r\n                      </Button>\r\n                    </DropdownMenuTrigger>\r\n                    <DropdownMenuContent align=\"end\">\r\n                      <DropdownMenuItem\r\n                        onClick={() => handleTrustDevice(device.id, false)}\r\n                      >\r\n                        <ShieldX className=\"h-4 w-4 mr-2\" />\r\n                        Remover confianza\r\n                      </DropdownMenuItem>\r\n                      <DropdownMenuItem\r\n                        onClick={() => handleRemoveDevice(device.id)}\r\n                        className=\"text-red-600\"\r\n                      >\r\n                        <Trash2 className=\"h-4 w-4 mr-2\" />\r\n                        Eliminar dispositivo\r\n                      </DropdownMenuItem>\r\n                    </DropdownMenuContent>\r\n                  </DropdownMenu>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {/* Información adicional */}\r\n        <div className=\"mt-6 p-4 bg-blue-50 rounded-lg\">\r\n          <div className=\"flex items-start\">\r\n            <Shield className=\"h-5 w-5 text-blue-600 mr-3 mt-0.5\" />\r\n            <div>\r\n              <h4 className=\"font-medium text-blue-900 mb-1\">\r\n                ¿Qué son los dispositivos de confianza?\r\n              </h4>\r\n              <p className=\"text-sm text-blue-800\">\r\n                Los dispositivos de confianza son aquellos que has marcado como seguros.\r\n                Estos dispositivos pueden acceder a tu cuenta sin verificación adicional,\r\n                pero aún así se monitorean por actividad sospechosa.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Acciones */}\r\n        <div className=\"flex justify-end space-x-3 mt-6\">\r\n          <Button variant=\"outline\" onClick={refreshSessions}>\r\n            Actualizar lista\r\n          </Button>\r\n          <Button onClick={() => window.location.href = '/dashboard/sessions'}>\r\n            Ver todas las sesiones\r\n          </Button>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}