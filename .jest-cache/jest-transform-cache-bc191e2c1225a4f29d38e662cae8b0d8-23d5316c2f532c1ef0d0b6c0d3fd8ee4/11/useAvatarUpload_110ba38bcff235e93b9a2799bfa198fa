b6ac00906445c8c152eeac0e826eacd7
'use client';
"use strict";

/* istanbul ignore next */
function cov_2gaevugybo() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useAvatarUpload.ts";
  var hash = "078a70a456570914f429e98bdc79f6eb986cea6e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useAvatarUpload.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 31
        }
      },
      "3": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 31
        }
      },
      "4": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 37
        }
      },
      "5": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 33
        }
      },
      "6": {
        start: {
          line: 16,
          column: 22
        },
        end: {
          line: 21,
          column: 1
        }
      },
      "7": {
        start: {
          line: 22,
          column: 22
        },
        end: {
          line: 22,
          column: 37
        }
      },
      "8": {
        start: {
          line: 23,
          column: 23
        },
        end: {
          line: 26,
          column: 1
        }
      },
      "9": {
        start: {
          line: 28,
          column: 27
        },
        end: {
          line: 28,
          column: 50
        }
      },
      "10": {
        start: {
          line: 29,
          column: 38
        },
        end: {
          line: 29,
          column: 65
        }
      },
      "11": {
        start: {
          line: 30,
          column: 36
        },
        end: {
          line: 30,
          column: 59
        }
      },
      "12": {
        start: {
          line: 31,
          column: 30
        },
        end: {
          line: 31,
          column: 56
        }
      },
      "13": {
        start: {
          line: 32,
          column: 34
        },
        end: {
          line: 32,
          column: 60
        }
      },
      "14": {
        start: {
          line: 34,
          column: 25
        },
        end: {
          line: 52,
          column: 10
        }
      },
      "15": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "16": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 40,
          column: 14
        }
      },
      "17": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "18": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 47,
          column: 14
        }
      },
      "19": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 51,
          column: 10
        }
      },
      "20": {
        start: {
          line: 54,
          column: 28
        },
        end: {
          line: 73,
          column: 6
        }
      },
      "21": {
        start: {
          line: 55,
          column: 27
        },
        end: {
          line: 55,
          column: 45
        }
      },
      "22": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "23": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 62
        }
      },
      "24": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 19
        }
      },
      "25": {
        start: {
          line: 60,
          column: 23
        },
        end: {
          line: 60,
          column: 39
        }
      },
      "26": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 66,
          column: 10
        }
      },
      "27": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 65,
          column: 13
        }
      },
      "28": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 44
        }
      },
      "29": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 64,
          column: 31
        }
      },
      "30": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 69,
          column: 10
        }
      },
      "31": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 49
        }
      },
      "32": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 35
        }
      },
      "33": {
        start: {
          line: 75,
          column: 25
        },
        end: {
          line: 79,
          column: 10
        }
      },
      "34": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 25
        }
      },
      "35": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 23
        }
      },
      "36": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 23
        }
      },
      "37": {
        start: {
          line: 81,
          column: 36
        },
        end: {
          line: 97,
          column: 10
        }
      },
      "38": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 96,
          column: 11
        }
      },
      "39": {
        start: {
          line: 83,
          column: 24
        },
        end: {
          line: 83,
          column: 35
        }
      },
      "40": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 90,
          column: 14
        }
      },
      "41": {
        start: {
          line: 85,
          column: 32
        },
        end: {
          line: 85,
          column: 104
        }
      },
      "42": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 88,
          column: 17
        }
      },
      "43": {
        start: {
          line: 87,
          column: 20
        },
        end: {
          line: 87,
          column: 122
        }
      },
      "44": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 33
        }
      },
      "45": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 94,
          column: 14
        }
      },
      "46": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 74
        }
      },
      "47": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 93,
          column: 31
        }
      },
      "48": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 48
        }
      },
      "49": {
        start: {
          line: 99,
          column: 25
        },
        end: {
          line: 165,
          column: 6
        }
      },
      "50": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "51": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 80
        }
      },
      "52": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 24
        }
      },
      "53": {
        start: {
          line: 105,
          column: 27
        },
        end: {
          line: 105,
          column: 45
        }
      },
      "54": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "55": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 62
        }
      },
      "56": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 73
        }
      },
      "57": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 24
        }
      },
      "58": {
        start: {
          line: 112,
          column: 32
        },
        end: {
          line: 112,
          column: 67
        }
      },
      "59": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "60": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 79
        }
      },
      "61": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 24
        }
      },
      "62": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "63": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 31
        }
      },
      "64": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 27
        }
      },
      "65": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 27
        }
      },
      "66": {
        start: {
          line: 121,
          column: 29
        },
        end: {
          line: 121,
          column: 43
        }
      },
      "67": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 44
        }
      },
      "68": {
        start: {
          line: 124,
          column: 37
        },
        end: {
          line: 132,
          column: 19
        }
      },
      "69": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 131,
          column: 19
        }
      },
      "70": {
        start: {
          line: 126,
          column: 20
        },
        end: {
          line: 129,
          column: 21
        }
      },
      "71": {
        start: {
          line: 127,
          column: 24
        },
        end: {
          line: 127,
          column: 56
        }
      },
      "72": {
        start: {
          line: 128,
          column: 24
        },
        end: {
          line: 128,
          column: 34
        }
      },
      "73": {
        start: {
          line: 130,
          column: 20
        },
        end: {
          line: 130,
          column: 37
        }
      },
      "74": {
        start: {
          line: 133,
          column: 29
        },
        end: {
          line: 136,
          column: 14
        }
      },
      "75": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 44
        }
      },
      "76": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 29
        }
      },
      "77": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 141,
          column: 13
        }
      },
      "78": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 60
        }
      },
      "79": {
        start: {
          line: 142,
          column: 27
        },
        end: {
          line: 142,
          column: 48
        }
      },
      "80": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 149,
          column: 13
        }
      },
      "81": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 144,
          column: 69
        }
      },
      "82": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 145,
          column: 31
        }
      },
      "83": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 41
        }
      },
      "84": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 148,
          column: 76
        }
      },
      "85": {
        start: {
          line: 151,
          column: 33
        },
        end: {
          line: 151,
          column: 89
        }
      },
      "86": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 35
        }
      },
      "87": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 46
        }
      },
      "88": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 57
        }
      },
      "89": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 24
        }
      },
      "90": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 32
        }
      },
      "91": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 27
        }
      },
      "92": {
        start: {
          line: 167,
          column: 25
        },
        end: {
          line: 201,
          column: 6
        }
      },
      "93": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "94": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 83
        }
      },
      "95": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 25
        }
      },
      "96": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 197,
          column: 9
        }
      },
      "97": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 31
        }
      },
      "98": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 27
        }
      },
      "99": {
        start: {
          line: 175,
          column: 29
        },
        end: {
          line: 177,
          column: 14
        }
      },
      "100": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 180,
          column: 13
        }
      },
      "101": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 179,
          column: 63
        }
      },
      "102": {
        start: {
          line: 181,
          column: 27
        },
        end: {
          line: 181,
          column: 48
        }
      },
      "103": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 188,
          column: 13
        }
      },
      "104": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 183,
          column: 72
        }
      },
      "105": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 184,
          column: 31
        }
      },
      "106": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 185,
          column: 28
        }
      },
      "107": {
        start: {
          line: 187,
          column: 16
        },
        end: {
          line: 187,
          column: 79
        }
      },
      "108": {
        start: {
          line: 190,
          column: 33
        },
        end: {
          line: 190,
          column: 89
        }
      },
      "109": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 35
        }
      },
      "110": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 46
        }
      },
      "111": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 60
        }
      },
      "112": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 25
        }
      },
      "113": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 32
        }
      },
      "114": {
        start: {
          line: 202,
          column: 4
        },
        end: {
          line: 212,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "useAvatarUpload",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 24
          }
        },
        loc: {
          start: {
            line: 27,
            column: 27
          },
          end: {
            line: 213,
            column: 1
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 34,
            column: 49
          },
          end: {
            line: 34,
            column: 50
          }
        },
        loc: {
          start: {
            line: 34,
            column: 57
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 34
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 54,
            column: 52
          },
          end: {
            line: 54,
            column: 53
          }
        },
        loc: {
          start: {
            line: 54,
            column: 60
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 54
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 61,
            column: 24
          },
          end: {
            line: 61,
            column: 25
          }
        },
        loc: {
          start: {
            line: 61,
            column: 29
          },
          end: {
            line: 66,
            column: 9
          }
        },
        line: 61
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 67,
            column: 25
          },
          end: {
            line: 67,
            column: 26
          }
        },
        loc: {
          start: {
            line: 67,
            column: 29
          },
          end: {
            line: 69,
            column: 9
          }
        },
        line: 67
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 75,
            column: 49
          },
          end: {
            line: 75,
            column: 50
          }
        },
        loc: {
          start: {
            line: 75,
            column: 53
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 75
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 81,
            column: 60
          },
          end: {
            line: 81,
            column: 61
          }
        },
        loc: {
          start: {
            line: 81,
            column: 68
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 81
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 82,
            column: 27
          },
          end: {
            line: 82,
            column: 28
          }
        },
        loc: {
          start: {
            line: 82,
            column: 38
          },
          end: {
            line: 96,
            column: 9
          }
        },
        line: 82
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 84,
            column: 25
          },
          end: {
            line: 84,
            column: 26
          }
        },
        loc: {
          start: {
            line: 84,
            column: 29
          },
          end: {
            line: 90,
            column: 13
          }
        },
        line: 84
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 91,
            column: 26
          },
          end: {
            line: 91,
            column: 27
          }
        },
        loc: {
          start: {
            line: 91,
            column: 30
          },
          end: {
            line: 94,
            column: 13
          }
        },
        line: 91
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 99,
            column: 49
          },
          end: {
            line: 99,
            column: 50
          }
        },
        loc: {
          start: {
            line: 99,
            column: 63
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 99
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 124,
            column: 49
          },
          end: {
            line: 124,
            column: 50
          }
        },
        loc: {
          start: {
            line: 124,
            column: 53
          },
          end: {
            line: 132,
            column: 13
          }
        },
        line: 124
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 125,
            column: 28
          },
          end: {
            line: 125,
            column: 29
          }
        },
        loc: {
          start: {
            line: 125,
            column: 36
          },
          end: {
            line: 131,
            column: 17
          }
        },
        line: 125
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 167,
            column: 49
          },
          end: {
            line: 167,
            column: 50
          }
        },
        loc: {
          start: {
            line: 167,
            column: 59
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 167
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "1": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "2": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "3": {
        loc: {
          start: {
            line: 57,
            column: 21
          },
          end: {
            line: 57,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 21
          },
          end: {
            line: 57,
            column: 37
          }
        }, {
          start: {
            line: 57,
            column: 41
          },
          end: {
            line: 57,
            column: 60
          }
        }],
        line: 57
      },
      "4": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 65,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 65,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "5": {
        loc: {
          start: {
            line: 85,
            column: 32
          },
          end: {
            line: 85,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 32
          },
          end: {
            line: 85,
            column: 65
          }
        }, {
          start: {
            line: 85,
            column: 69
          },
          end: {
            line: 85,
            column: 104
          }
        }],
        line: 85
      },
      "6": {
        loc: {
          start: {
            line: 86,
            column: 16
          },
          end: {
            line: 88,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 16
          },
          end: {
            line: 88,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "7": {
        loc: {
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "8": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "9": {
        loc: {
          start: {
            line: 107,
            column: 21
          },
          end: {
            line: 107,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 21
          },
          end: {
            line: 107,
            column: 37
          }
        }, {
          start: {
            line: 107,
            column: 41
          },
          end: {
            line: 107,
            column: 60
          }
        }],
        line: 107
      },
      "10": {
        loc: {
          start: {
            line: 108,
            column: 32
          },
          end: {
            line: 108,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 32
          },
          end: {
            line: 108,
            column: 48
          }
        }, {
          start: {
            line: 108,
            column: 52
          },
          end: {
            line: 108,
            column: 71
          }
        }],
        line: 108
      },
      "11": {
        loc: {
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "12": {
        loc: {
          start: {
            line: 126,
            column: 20
          },
          end: {
            line: 129,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 20
          },
          end: {
            line: 129,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "13": {
        loc: {
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 141,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 141,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "14": {
        loc: {
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 149,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 149,
            column: 13
          }
        }, {
          start: {
            line: 147,
            column: 19
          },
          end: {
            line: 149,
            column: 13
          }
        }],
        line: 143
      },
      "15": {
        loc: {
          start: {
            line: 143,
            column: 16
          },
          end: {
            line: 143,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 143,
            column: 16
          },
          end: {
            line: 143,
            column: 30
          }
        }, {
          start: {
            line: 143,
            column: 34
          },
          end: {
            line: 143,
            column: 51
          }
        }],
        line: 143
      },
      "16": {
        loc: {
          start: {
            line: 148,
            column: 32
          },
          end: {
            line: 148,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 32
          },
          end: {
            line: 148,
            column: 44
          }
        }, {
          start: {
            line: 148,
            column: 48
          },
          end: {
            line: 148,
            column: 74
          }
        }],
        line: 148
      },
      "17": {
        loc: {
          start: {
            line: 151,
            column: 33
          },
          end: {
            line: 151,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 151,
            column: 56
          },
          end: {
            line: 151,
            column: 67
          }
        }, {
          start: {
            line: 151,
            column: 70
          },
          end: {
            line: 151,
            column: 89
          }
        }],
        line: 151
      },
      "18": {
        loc: {
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "19": {
        loc: {
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "20": {
        loc: {
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 188,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 188,
            column: 13
          }
        }, {
          start: {
            line: 186,
            column: 19
          },
          end: {
            line: 188,
            column: 13
          }
        }],
        line: 182
      },
      "21": {
        loc: {
          start: {
            line: 187,
            column: 32
          },
          end: {
            line: 187,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 32
          },
          end: {
            line: 187,
            column: 44
          }
        }, {
          start: {
            line: 187,
            column: 48
          },
          end: {
            line: 187,
            column: 77
          }
        }],
        line: 187
      },
      "22": {
        loc: {
          start: {
            line: 190,
            column: 33
          },
          end: {
            line: 190,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 190,
            column: 56
          },
          end: {
            line: 190,
            column: 67
          }
        }, {
          start: {
            line: 190,
            column: 70
          },
          end: {
            line: 190,
            column: 89
          }
        }],
        line: 190
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useAvatarUpload.ts"],
      sourcesContent: ["'use client';\r\n\r\nimport { useState, useCallback } from 'react';\r\nimport { useAuth } from './useAuth';\r\nimport { toast } from 'sonner';\r\n\r\ninterface UseAvatarUploadReturn {\r\n  uploading: boolean;\r\n  progress: number;\r\n  error: string | null;\r\n  preview: string | null;\r\n  uploadAvatar: (file: File) => Promise<string | null>;\r\n  deleteAvatar: () => Promise<boolean>;\r\n  validateFile: (file: File) => { valid: boolean; error?: string };\r\n  generatePreview: (file: File) => void;\r\n  clearPreview: () => void;\r\n}\r\n\r\n// Configuraci\xF3n de validaci\xF3n de archivos\r\nconst ALLOWED_TYPES = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];\r\nconst MAX_FILE_SIZE = 5 * 1024 * 1024; // 5MB\r\nconst MAX_DIMENSIONS = { width: 2048, height: 2048 };\r\n\r\nexport function useAvatarUpload(): UseAvatarUploadReturn {\r\n  const { isSignedIn } = useAuth();\r\n  const [uploading, setUploading] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [preview, setPreview] = useState<string | null>(null);\r\n\r\n  // Funci\xF3n para validar archivos\r\n  const validateFile = useCallback((file: File): { valid: boolean; error?: string } => {\r\n    // Verificar tipo de archivo\r\n    if (!ALLOWED_TYPES.includes(file.type)) {\r\n      return {\r\n        valid: false,\r\n        error: 'Tipo de archivo no permitido. Solo se permiten im\xE1genes JPG, PNG y WebP.',\r\n      };\r\n    }\r\n\r\n    // Verificar tama\xF1o\r\n    if (file.size > MAX_FILE_SIZE) {\r\n      return {\r\n        valid: false,\r\n        error: 'El archivo es demasiado grande. El tama\xF1o m\xE1ximo es 5MB.',\r\n      };\r\n    }\r\n\r\n    return { valid: true };\r\n  }, []);\r\n\r\n  // Funci\xF3n para generar preview\r\n  const generatePreview = useCallback((file: File) => {\r\n    const validation = validateFile(file);\r\n    if (!validation.valid) {\r\n      setError(validation.error || 'Archivo no v\xE1lido');\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      if (e.target?.result) {\r\n        setPreview(e.target.result as string);\r\n        setError(null);\r\n      }\r\n    };\r\n    reader.onerror = () => {\r\n      setError('Error al leer el archivo');\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }, [validateFile]);\r\n\r\n  // Funci\xF3n para limpiar preview\r\n  const clearPreview = useCallback(() => {\r\n    setPreview(null);\r\n    setError(null);\r\n    setProgress(0);\r\n  }, []);\r\n\r\n  // Funci\xF3n para validar dimensiones de imagen\r\n  const validateImageDimensions = useCallback((file: File): Promise<boolean> => {\r\n    return new Promise((resolve) => {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        const isValid = img.width <= MAX_DIMENSIONS.width && img.height <= MAX_DIMENSIONS.height;\r\n        if (!isValid) {\r\n          setError(`Las dimensiones m\xE1ximas permitidas son ${MAX_DIMENSIONS.width}x${MAX_DIMENSIONS.height}px`);\r\n        }\r\n        resolve(isValid);\r\n      };\r\n      img.onerror = () => {\r\n        setError('Error al validar las dimensiones de la imagen');\r\n        resolve(false);\r\n      };\r\n      img.src = URL.createObjectURL(file);\r\n    });\r\n  }, []);\r\n\r\n  // Funci\xF3n para subir avatar\r\n  const uploadAvatar = useCallback(async (file: File): Promise<string | null> => {\r\n    if (!isSignedIn) {\r\n      toast.error('Debes estar autenticado para subir un avatar');\r\n      return null;\r\n    }\r\n\r\n    // Validar archivo\r\n    const validation = validateFile(file);\r\n    if (!validation.valid) {\r\n      setError(validation.error || 'Archivo no v\xE1lido');\r\n      toast.error(validation.error || 'Archivo no v\xE1lido');\r\n      return null;\r\n    }\r\n\r\n    // Validar dimensiones\r\n    const dimensionsValid = await validateImageDimensions(file);\r\n    if (!dimensionsValid) {\r\n      toast.error('Las dimensiones de la imagen no son v\xE1lidas');\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      setUploading(true);\r\n      setError(null);\r\n      setProgress(0);\r\n\r\n      const formData = new FormData();\r\n      formData.append('avatar', file);\r\n\r\n      // Simular progreso de subida\r\n      const progressInterval = setInterval(() => {\r\n        setProgress((prev) => {\r\n          if (prev >= 90) {\r\n            clearInterval(progressInterval);\r\n            return 90;\r\n          }\r\n          return prev + 10;\r\n        });\r\n      }, 100);\r\n\r\n      const response = await fetch('/api/user/avatar', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      clearInterval(progressInterval);\r\n      setProgress(100);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al subir el avatar');\r\n      }\r\n\r\n      const result = await response.json();\r\n      \r\n      if (result.success && result.avatar_url) {\r\n        toast.success('Avatar subido correctamente');\r\n        clearPreview();\r\n        return result.avatar_url;\r\n      } else {\r\n        throw new Error(result.error || 'Error al subir el avatar');\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      setError(errorMessage);\r\n      toast.error(errorMessage);\r\n      console.error('Error al subir avatar:', err);\r\n      return null;\r\n    } finally {\r\n      setUploading(false);\r\n      setProgress(0);\r\n    }\r\n  }, [isSignedIn, validateFile, validateImageDimensions, clearPreview]);\r\n\r\n  // Funci\xF3n para eliminar avatar\r\n  const deleteAvatar = useCallback(async (): Promise<boolean> => {\r\n    if (!isSignedIn) {\r\n      toast.error('Debes estar autenticado para eliminar tu avatar');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      setUploading(true);\r\n      setError(null);\r\n\r\n      const response = await fetch('/api/user/avatar', {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al eliminar el avatar');\r\n      }\r\n\r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        toast.success('Avatar eliminado correctamente');\r\n        clearPreview();\r\n        return true;\r\n      } else {\r\n        throw new Error(result.error || 'Error al eliminar el avatar');\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      setError(errorMessage);\r\n      toast.error(errorMessage);\r\n      console.error('Error al eliminar avatar:', err);\r\n      return false;\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  }, [isSignedIn, clearPreview]);\r\n\r\n  return {\r\n    uploading,\r\n    progress,\r\n    error,\r\n    preview,\r\n    uploadAvatar,\r\n    deleteAvatar,\r\n    validateFile,\r\n    generatePreview,\r\n    clearPreview,\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useAvatarUpload", "ALLOWED_TYPES", "MAX_FILE_SIZE", "MAX_DIMENSIONS", "width", "height", "isSignedIn", "useAuth", "uploading", "setUploading", "useState", "progress", "setProgress", "error", "setError", "preview", "setPreview", "validateFile", "useCallback", "file", "includes", "type", "valid", "size", "generatePreview", "validation", "reader", "FileReader", "onload", "e", "target", "result", "onerror", "readAsDataURL", "clearPreview", "validateImageDimensions", "Promise", "resolve", "img", "Image", "isValid", "src", "URL", "createObjectURL", "uploadAvatar", "toast", "dimensionsValid", "formData", "FormData", "append", "progressInterval", "setInterval", "prev", "clearInterval", "response", "fetch", "method", "body", "ok", "Error", "json", "success", "avatar_url", "err", "errorMessage", "message", "console", "deleteAvatar"],
      mappings: "AAAA;;;;;+BAuBgBA;;;eAAAA;;;uBArBsB;yBACd;wBACF;AActB,0CAA0C;AAC1C,MAAMC,gBAAgB;IAAC;IAAc;IAAa;IAAa;CAAa;AAC5E,MAAMC,gBAAgB,IAAI,OAAO,MAAM,MAAM;AAC7C,MAAMC,iBAAiB;IAAEC,OAAO;IAAMC,QAAQ;AAAK;AAE5C,SAASL;IACd,MAAM,EAAEM,UAAU,EAAE,GAAGC,IAAAA,gBAAO;IAC9B,MAAM,CAACC,WAAWC,aAAa,GAAGC,IAAAA,eAAQ,EAAC;IAC3C,MAAM,CAACC,UAAUC,YAAY,GAAGF,IAAAA,eAAQ,EAAC;IACzC,MAAM,CAACG,OAAOC,SAAS,GAAGJ,IAAAA,eAAQ,EAAgB;IAClD,MAAM,CAACK,SAASC,WAAW,GAAGN,IAAAA,eAAQ,EAAgB;IAEtD,gCAAgC;IAChC,MAAMO,eAAeC,IAAAA,kBAAW,EAAC,CAACC;QAChC,4BAA4B;QAC5B,IAAI,CAAClB,cAAcmB,QAAQ,CAACD,KAAKE,IAAI,GAAG;YACtC,OAAO;gBACLC,OAAO;gBACPT,OAAO;YACT;QACF;QAEA,mBAAmB;QACnB,IAAIM,KAAKI,IAAI,GAAGrB,eAAe;YAC7B,OAAO;gBACLoB,OAAO;gBACPT,OAAO;YACT;QACF;QAEA,OAAO;YAAES,OAAO;QAAK;IACvB,GAAG,EAAE;IAEL,+BAA+B;IAC/B,MAAME,kBAAkBN,IAAAA,kBAAW,EAAC,CAACC;QACnC,MAAMM,aAAaR,aAAaE;QAChC,IAAI,CAACM,WAAWH,KAAK,EAAE;YACrBR,SAASW,WAAWZ,KAAK,IAAI;YAC7B;QACF;QAEA,MAAMa,SAAS,IAAIC;QACnBD,OAAOE,MAAM,GAAG,CAACC;YACf,IAAIA,EAAEC,MAAM,EAAEC,QAAQ;gBACpBf,WAAWa,EAAEC,MAAM,CAACC,MAAM;gBAC1BjB,SAAS;YACX;QACF;QACAY,OAAOM,OAAO,GAAG;YACflB,SAAS;QACX;QACAY,OAAOO,aAAa,CAACd;IACvB,GAAG;QAACF;KAAa;IAEjB,+BAA+B;IAC/B,MAAMiB,eAAehB,IAAAA,kBAAW,EAAC;QAC/BF,WAAW;QACXF,SAAS;QACTF,YAAY;IACd,GAAG,EAAE;IAEL,6CAA6C;IAC7C,MAAMuB,0BAA0BjB,IAAAA,kBAAW,EAAC,CAACC;QAC3C,OAAO,IAAIiB,QAAQ,CAACC;YAClB,MAAMC,MAAM,IAAIC;YAChBD,IAAIV,MAAM,GAAG;gBACX,MAAMY,UAAUF,IAAIlC,KAAK,IAAID,eAAeC,KAAK,IAAIkC,IAAIjC,MAAM,IAAIF,eAAeE,MAAM;gBACxF,IAAI,CAACmC,SAAS;oBACZ1B,SAAS,CAAC,uCAAuC,EAAEX,eAAeC,KAAK,CAAC,CAAC,EAAED,eAAeE,MAAM,CAAC,EAAE,CAAC;gBACtG;gBACAgC,QAAQG;YACV;YACAF,IAAIN,OAAO,GAAG;gBACZlB,SAAS;gBACTuB,QAAQ;YACV;YACAC,IAAIG,GAAG,GAAGC,IAAIC,eAAe,CAACxB;QAChC;IACF,GAAG,EAAE;IAEL,4BAA4B;IAC5B,MAAMyB,eAAe1B,IAAAA,kBAAW,EAAC,OAAOC;QACtC,IAAI,CAACb,YAAY;YACfuC,aAAK,CAAChC,KAAK,CAAC;YACZ,OAAO;QACT;QAEA,kBAAkB;QAClB,MAAMY,aAAaR,aAAaE;QAChC,IAAI,CAACM,WAAWH,KAAK,EAAE;YACrBR,SAASW,WAAWZ,KAAK,IAAI;YAC7BgC,aAAK,CAAChC,KAAK,CAACY,WAAWZ,KAAK,IAAI;YAChC,OAAO;QACT;QAEA,sBAAsB;QACtB,MAAMiC,kBAAkB,MAAMX,wBAAwBhB;QACtD,IAAI,CAAC2B,iBAAiB;YACpBD,aAAK,CAAChC,KAAK,CAAC;YACZ,OAAO;QACT;QAEA,IAAI;YACFJ,aAAa;YACbK,SAAS;YACTF,YAAY;YAEZ,MAAMmC,WAAW,IAAIC;YACrBD,SAASE,MAAM,CAAC,UAAU9B;YAE1B,6BAA6B;YAC7B,MAAM+B,mBAAmBC,YAAY;gBACnCvC,YAAY,CAACwC;oBACX,IAAIA,QAAQ,IAAI;wBACdC,cAAcH;wBACd,OAAO;oBACT;oBACA,OAAOE,OAAO;gBAChB;YACF,GAAG;YAEH,MAAME,WAAW,MAAMC,MAAM,oBAAoB;gBAC/CC,QAAQ;gBACRC,MAAMV;YACR;YAEAM,cAAcH;YACdtC,YAAY;YAEZ,IAAI,CAAC0C,SAASI,EAAE,EAAE;gBAChB,MAAM,IAAIC,MAAM;YAClB;YAEA,MAAM5B,SAAS,MAAMuB,SAASM,IAAI;YAElC,IAAI7B,OAAO8B,OAAO,IAAI9B,OAAO+B,UAAU,EAAE;gBACvCjB,aAAK,CAACgB,OAAO,CAAC;gBACd3B;gBACA,OAAOH,OAAO+B,UAAU;YAC1B,OAAO;gBACL,MAAM,IAAIH,MAAM5B,OAAOlB,KAAK,IAAI;YAClC;QACF,EAAE,OAAOkD,KAAK;YACZ,MAAMC,eAAeD,eAAeJ,QAAQI,IAAIE,OAAO,GAAG;YAC1DnD,SAASkD;YACTnB,aAAK,CAAChC,KAAK,CAACmD;YACZE,QAAQrD,KAAK,CAAC,0BAA0BkD;YACxC,OAAO;QACT,SAAU;YACRtD,aAAa;YACbG,YAAY;QACd;IACF,GAAG;QAACN;QAAYW;QAAckB;QAAyBD;KAAa;IAEpE,+BAA+B;IAC/B,MAAMiC,eAAejD,IAAAA,kBAAW,EAAC;QAC/B,IAAI,CAACZ,YAAY;YACfuC,aAAK,CAAChC,KAAK,CAAC;YACZ,OAAO;QACT;QAEA,IAAI;YACFJ,aAAa;YACbK,SAAS;YAET,MAAMwC,WAAW,MAAMC,MAAM,oBAAoB;gBAC/CC,QAAQ;YACV;YAEA,IAAI,CAACF,SAASI,EAAE,EAAE;gBAChB,MAAM,IAAIC,MAAM;YAClB;YAEA,MAAM5B,SAAS,MAAMuB,SAASM,IAAI;YAElC,IAAI7B,OAAO8B,OAAO,EAAE;gBAClBhB,aAAK,CAACgB,OAAO,CAAC;gBACd3B;gBACA,OAAO;YACT,OAAO;gBACL,MAAM,IAAIyB,MAAM5B,OAAOlB,KAAK,IAAI;YAClC;QACF,EAAE,OAAOkD,KAAK;YACZ,MAAMC,eAAeD,eAAeJ,QAAQI,IAAIE,OAAO,GAAG;YAC1DnD,SAASkD;YACTnB,aAAK,CAAChC,KAAK,CAACmD;YACZE,QAAQrD,KAAK,CAAC,6BAA6BkD;YAC3C,OAAO;QACT,SAAU;YACRtD,aAAa;QACf;IACF,GAAG;QAACH;QAAY4B;KAAa;IAE7B,OAAO;QACL1B;QACAG;QACAE;QACAE;QACA6B;QACAuB;QACAlD;QACAO;QACAU;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "078a70a456570914f429e98bdc79f6eb986cea6e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2gaevugybo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2gaevugybo();
cov_2gaevugybo().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2gaevugybo().s[1]++;
Object.defineProperty(exports, "useAvatarUpload", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2gaevugybo().f[0]++;
    cov_2gaevugybo().s[2]++;
    return useAvatarUpload;
  }
});
const _react =
/* istanbul ignore next */
(cov_2gaevugybo().s[3]++, require("react"));
const _useAuth =
/* istanbul ignore next */
(cov_2gaevugybo().s[4]++, require("./useAuth"));
const _sonner =
/* istanbul ignore next */
(cov_2gaevugybo().s[5]++, require("sonner"));
// Configuración de validación de archivos
const ALLOWED_TYPES =
/* istanbul ignore next */
(cov_2gaevugybo().s[6]++, ['image/jpeg', 'image/jpg', 'image/png', 'image/webp']);
const MAX_FILE_SIZE =
/* istanbul ignore next */
(cov_2gaevugybo().s[7]++, 5 * 1024 * 1024); // 5MB
const MAX_DIMENSIONS =
/* istanbul ignore next */
(cov_2gaevugybo().s[8]++, {
  width: 2048,
  height: 2048
});
function useAvatarUpload() {
  /* istanbul ignore next */
  cov_2gaevugybo().f[1]++;
  const {
    isSignedIn
  } =
  /* istanbul ignore next */
  (cov_2gaevugybo().s[9]++, (0, _useAuth.useAuth)());
  const [uploading, setUploading] =
  /* istanbul ignore next */
  (cov_2gaevugybo().s[10]++, (0, _react.useState)(false));
  const [progress, setProgress] =
  /* istanbul ignore next */
  (cov_2gaevugybo().s[11]++, (0, _react.useState)(0));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_2gaevugybo().s[12]++, (0, _react.useState)(null));
  const [preview, setPreview] =
  /* istanbul ignore next */
  (cov_2gaevugybo().s[13]++, (0, _react.useState)(null));
  // Función para validar archivos
  const validateFile =
  /* istanbul ignore next */
  (cov_2gaevugybo().s[14]++, (0, _react.useCallback)(file => {
    /* istanbul ignore next */
    cov_2gaevugybo().f[2]++;
    cov_2gaevugybo().s[15]++;
    // Verificar tipo de archivo
    if (!ALLOWED_TYPES.includes(file.type)) {
      /* istanbul ignore next */
      cov_2gaevugybo().b[0][0]++;
      cov_2gaevugybo().s[16]++;
      return {
        valid: false,
        error: 'Tipo de archivo no permitido. Solo se permiten imágenes JPG, PNG y WebP.'
      };
    } else
    /* istanbul ignore next */
    {
      cov_2gaevugybo().b[0][1]++;
    }
    // Verificar tamaño
    cov_2gaevugybo().s[17]++;
    if (file.size > MAX_FILE_SIZE) {
      /* istanbul ignore next */
      cov_2gaevugybo().b[1][0]++;
      cov_2gaevugybo().s[18]++;
      return {
        valid: false,
        error: 'El archivo es demasiado grande. El tamaño máximo es 5MB.'
      };
    } else
    /* istanbul ignore next */
    {
      cov_2gaevugybo().b[1][1]++;
    }
    cov_2gaevugybo().s[19]++;
    return {
      valid: true
    };
  }, []));
  // Función para generar preview
  const generatePreview =
  /* istanbul ignore next */
  (cov_2gaevugybo().s[20]++, (0, _react.useCallback)(file => {
    /* istanbul ignore next */
    cov_2gaevugybo().f[3]++;
    const validation =
    /* istanbul ignore next */
    (cov_2gaevugybo().s[21]++, validateFile(file));
    /* istanbul ignore next */
    cov_2gaevugybo().s[22]++;
    if (!validation.valid) {
      /* istanbul ignore next */
      cov_2gaevugybo().b[2][0]++;
      cov_2gaevugybo().s[23]++;
      setError(
      /* istanbul ignore next */
      (cov_2gaevugybo().b[3][0]++, validation.error) ||
      /* istanbul ignore next */
      (cov_2gaevugybo().b[3][1]++, 'Archivo no válido'));
      /* istanbul ignore next */
      cov_2gaevugybo().s[24]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2gaevugybo().b[2][1]++;
    }
    const reader =
    /* istanbul ignore next */
    (cov_2gaevugybo().s[25]++, new FileReader());
    /* istanbul ignore next */
    cov_2gaevugybo().s[26]++;
    reader.onload = e => {
      /* istanbul ignore next */
      cov_2gaevugybo().f[4]++;
      cov_2gaevugybo().s[27]++;
      if (e.target?.result) {
        /* istanbul ignore next */
        cov_2gaevugybo().b[4][0]++;
        cov_2gaevugybo().s[28]++;
        setPreview(e.target.result);
        /* istanbul ignore next */
        cov_2gaevugybo().s[29]++;
        setError(null);
      } else
      /* istanbul ignore next */
      {
        cov_2gaevugybo().b[4][1]++;
      }
    };
    /* istanbul ignore next */
    cov_2gaevugybo().s[30]++;
    reader.onerror = () => {
      /* istanbul ignore next */
      cov_2gaevugybo().f[5]++;
      cov_2gaevugybo().s[31]++;
      setError('Error al leer el archivo');
    };
    /* istanbul ignore next */
    cov_2gaevugybo().s[32]++;
    reader.readAsDataURL(file);
  }, [validateFile]));
  // Función para limpiar preview
  const clearPreview =
  /* istanbul ignore next */
  (cov_2gaevugybo().s[33]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2gaevugybo().f[6]++;
    cov_2gaevugybo().s[34]++;
    setPreview(null);
    /* istanbul ignore next */
    cov_2gaevugybo().s[35]++;
    setError(null);
    /* istanbul ignore next */
    cov_2gaevugybo().s[36]++;
    setProgress(0);
  }, []));
  // Función para validar dimensiones de imagen
  const validateImageDimensions =
  /* istanbul ignore next */
  (cov_2gaevugybo().s[37]++, (0, _react.useCallback)(file => {
    /* istanbul ignore next */
    cov_2gaevugybo().f[7]++;
    cov_2gaevugybo().s[38]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_2gaevugybo().f[8]++;
      const img =
      /* istanbul ignore next */
      (cov_2gaevugybo().s[39]++, new Image());
      /* istanbul ignore next */
      cov_2gaevugybo().s[40]++;
      img.onload = () => {
        /* istanbul ignore next */
        cov_2gaevugybo().f[9]++;
        const isValid =
        /* istanbul ignore next */
        (cov_2gaevugybo().s[41]++,
        /* istanbul ignore next */
        (cov_2gaevugybo().b[5][0]++, img.width <= MAX_DIMENSIONS.width) &&
        /* istanbul ignore next */
        (cov_2gaevugybo().b[5][1]++, img.height <= MAX_DIMENSIONS.height));
        /* istanbul ignore next */
        cov_2gaevugybo().s[42]++;
        if (!isValid) {
          /* istanbul ignore next */
          cov_2gaevugybo().b[6][0]++;
          cov_2gaevugybo().s[43]++;
          setError(`Las dimensiones máximas permitidas son ${MAX_DIMENSIONS.width}x${MAX_DIMENSIONS.height}px`);
        } else
        /* istanbul ignore next */
        {
          cov_2gaevugybo().b[6][1]++;
        }
        cov_2gaevugybo().s[44]++;
        resolve(isValid);
      };
      /* istanbul ignore next */
      cov_2gaevugybo().s[45]++;
      img.onerror = () => {
        /* istanbul ignore next */
        cov_2gaevugybo().f[10]++;
        cov_2gaevugybo().s[46]++;
        setError('Error al validar las dimensiones de la imagen');
        /* istanbul ignore next */
        cov_2gaevugybo().s[47]++;
        resolve(false);
      };
      /* istanbul ignore next */
      cov_2gaevugybo().s[48]++;
      img.src = URL.createObjectURL(file);
    });
  }, []));
  // Función para subir avatar
  const uploadAvatar =
  /* istanbul ignore next */
  (cov_2gaevugybo().s[49]++, (0, _react.useCallback)(async file => {
    /* istanbul ignore next */
    cov_2gaevugybo().f[11]++;
    cov_2gaevugybo().s[50]++;
    if (!isSignedIn) {
      /* istanbul ignore next */
      cov_2gaevugybo().b[7][0]++;
      cov_2gaevugybo().s[51]++;
      _sonner.toast.error('Debes estar autenticado para subir un avatar');
      /* istanbul ignore next */
      cov_2gaevugybo().s[52]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_2gaevugybo().b[7][1]++;
    }
    // Validar archivo
    const validation =
    /* istanbul ignore next */
    (cov_2gaevugybo().s[53]++, validateFile(file));
    /* istanbul ignore next */
    cov_2gaevugybo().s[54]++;
    if (!validation.valid) {
      /* istanbul ignore next */
      cov_2gaevugybo().b[8][0]++;
      cov_2gaevugybo().s[55]++;
      setError(
      /* istanbul ignore next */
      (cov_2gaevugybo().b[9][0]++, validation.error) ||
      /* istanbul ignore next */
      (cov_2gaevugybo().b[9][1]++, 'Archivo no válido'));
      /* istanbul ignore next */
      cov_2gaevugybo().s[56]++;
      _sonner.toast.error(
      /* istanbul ignore next */
      (cov_2gaevugybo().b[10][0]++, validation.error) ||
      /* istanbul ignore next */
      (cov_2gaevugybo().b[10][1]++, 'Archivo no válido'));
      /* istanbul ignore next */
      cov_2gaevugybo().s[57]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_2gaevugybo().b[8][1]++;
    }
    // Validar dimensiones
    const dimensionsValid =
    /* istanbul ignore next */
    (cov_2gaevugybo().s[58]++, await validateImageDimensions(file));
    /* istanbul ignore next */
    cov_2gaevugybo().s[59]++;
    if (!dimensionsValid) {
      /* istanbul ignore next */
      cov_2gaevugybo().b[11][0]++;
      cov_2gaevugybo().s[60]++;
      _sonner.toast.error('Las dimensiones de la imagen no son válidas');
      /* istanbul ignore next */
      cov_2gaevugybo().s[61]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_2gaevugybo().b[11][1]++;
    }
    cov_2gaevugybo().s[62]++;
    try {
      /* istanbul ignore next */
      cov_2gaevugybo().s[63]++;
      setUploading(true);
      /* istanbul ignore next */
      cov_2gaevugybo().s[64]++;
      setError(null);
      /* istanbul ignore next */
      cov_2gaevugybo().s[65]++;
      setProgress(0);
      const formData =
      /* istanbul ignore next */
      (cov_2gaevugybo().s[66]++, new FormData());
      /* istanbul ignore next */
      cov_2gaevugybo().s[67]++;
      formData.append('avatar', file);
      // Simular progreso de subida
      const progressInterval =
      /* istanbul ignore next */
      (cov_2gaevugybo().s[68]++, setInterval(() => {
        /* istanbul ignore next */
        cov_2gaevugybo().f[12]++;
        cov_2gaevugybo().s[69]++;
        setProgress(prev => {
          /* istanbul ignore next */
          cov_2gaevugybo().f[13]++;
          cov_2gaevugybo().s[70]++;
          if (prev >= 90) {
            /* istanbul ignore next */
            cov_2gaevugybo().b[12][0]++;
            cov_2gaevugybo().s[71]++;
            clearInterval(progressInterval);
            /* istanbul ignore next */
            cov_2gaevugybo().s[72]++;
            return 90;
          } else
          /* istanbul ignore next */
          {
            cov_2gaevugybo().b[12][1]++;
          }
          cov_2gaevugybo().s[73]++;
          return prev + 10;
        });
      }, 100));
      const response =
      /* istanbul ignore next */
      (cov_2gaevugybo().s[74]++, await fetch('/api/user/avatar', {
        method: 'POST',
        body: formData
      }));
      /* istanbul ignore next */
      cov_2gaevugybo().s[75]++;
      clearInterval(progressInterval);
      /* istanbul ignore next */
      cov_2gaevugybo().s[76]++;
      setProgress(100);
      /* istanbul ignore next */
      cov_2gaevugybo().s[77]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2gaevugybo().b[13][0]++;
        cov_2gaevugybo().s[78]++;
        throw new Error('Error al subir el avatar');
      } else
      /* istanbul ignore next */
      {
        cov_2gaevugybo().b[13][1]++;
      }
      const result =
      /* istanbul ignore next */
      (cov_2gaevugybo().s[79]++, await response.json());
      /* istanbul ignore next */
      cov_2gaevugybo().s[80]++;
      if (
      /* istanbul ignore next */
      (cov_2gaevugybo().b[15][0]++, result.success) &&
      /* istanbul ignore next */
      (cov_2gaevugybo().b[15][1]++, result.avatar_url)) {
        /* istanbul ignore next */
        cov_2gaevugybo().b[14][0]++;
        cov_2gaevugybo().s[81]++;
        _sonner.toast.success('Avatar subido correctamente');
        /* istanbul ignore next */
        cov_2gaevugybo().s[82]++;
        clearPreview();
        /* istanbul ignore next */
        cov_2gaevugybo().s[83]++;
        return result.avatar_url;
      } else {
        /* istanbul ignore next */
        cov_2gaevugybo().b[14][1]++;
        cov_2gaevugybo().s[84]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_2gaevugybo().b[16][0]++, result.error) ||
        /* istanbul ignore next */
        (cov_2gaevugybo().b[16][1]++, 'Error al subir el avatar'));
      }
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_2gaevugybo().s[85]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_2gaevugybo().b[17][0]++, err.message) :
      /* istanbul ignore next */
      (cov_2gaevugybo().b[17][1]++, 'Error desconocido'));
      /* istanbul ignore next */
      cov_2gaevugybo().s[86]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_2gaevugybo().s[87]++;
      _sonner.toast.error(errorMessage);
      /* istanbul ignore next */
      cov_2gaevugybo().s[88]++;
      console.error('Error al subir avatar:', err);
      /* istanbul ignore next */
      cov_2gaevugybo().s[89]++;
      return null;
    } finally {
      /* istanbul ignore next */
      cov_2gaevugybo().s[90]++;
      setUploading(false);
      /* istanbul ignore next */
      cov_2gaevugybo().s[91]++;
      setProgress(0);
    }
  }, [isSignedIn, validateFile, validateImageDimensions, clearPreview]));
  // Función para eliminar avatar
  const deleteAvatar =
  /* istanbul ignore next */
  (cov_2gaevugybo().s[92]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_2gaevugybo().f[14]++;
    cov_2gaevugybo().s[93]++;
    if (!isSignedIn) {
      /* istanbul ignore next */
      cov_2gaevugybo().b[18][0]++;
      cov_2gaevugybo().s[94]++;
      _sonner.toast.error('Debes estar autenticado para eliminar tu avatar');
      /* istanbul ignore next */
      cov_2gaevugybo().s[95]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_2gaevugybo().b[18][1]++;
    }
    cov_2gaevugybo().s[96]++;
    try {
      /* istanbul ignore next */
      cov_2gaevugybo().s[97]++;
      setUploading(true);
      /* istanbul ignore next */
      cov_2gaevugybo().s[98]++;
      setError(null);
      const response =
      /* istanbul ignore next */
      (cov_2gaevugybo().s[99]++, await fetch('/api/user/avatar', {
        method: 'DELETE'
      }));
      /* istanbul ignore next */
      cov_2gaevugybo().s[100]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2gaevugybo().b[19][0]++;
        cov_2gaevugybo().s[101]++;
        throw new Error('Error al eliminar el avatar');
      } else
      /* istanbul ignore next */
      {
        cov_2gaevugybo().b[19][1]++;
      }
      const result =
      /* istanbul ignore next */
      (cov_2gaevugybo().s[102]++, await response.json());
      /* istanbul ignore next */
      cov_2gaevugybo().s[103]++;
      if (result.success) {
        /* istanbul ignore next */
        cov_2gaevugybo().b[20][0]++;
        cov_2gaevugybo().s[104]++;
        _sonner.toast.success('Avatar eliminado correctamente');
        /* istanbul ignore next */
        cov_2gaevugybo().s[105]++;
        clearPreview();
        /* istanbul ignore next */
        cov_2gaevugybo().s[106]++;
        return true;
      } else {
        /* istanbul ignore next */
        cov_2gaevugybo().b[20][1]++;
        cov_2gaevugybo().s[107]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_2gaevugybo().b[21][0]++, result.error) ||
        /* istanbul ignore next */
        (cov_2gaevugybo().b[21][1]++, 'Error al eliminar el avatar'));
      }
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_2gaevugybo().s[108]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_2gaevugybo().b[22][0]++, err.message) :
      /* istanbul ignore next */
      (cov_2gaevugybo().b[22][1]++, 'Error desconocido'));
      /* istanbul ignore next */
      cov_2gaevugybo().s[109]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_2gaevugybo().s[110]++;
      _sonner.toast.error(errorMessage);
      /* istanbul ignore next */
      cov_2gaevugybo().s[111]++;
      console.error('Error al eliminar avatar:', err);
      /* istanbul ignore next */
      cov_2gaevugybo().s[112]++;
      return false;
    } finally {
      /* istanbul ignore next */
      cov_2gaevugybo().s[113]++;
      setUploading(false);
    }
  }, [isSignedIn, clearPreview]));
  /* istanbul ignore next */
  cov_2gaevugybo().s[114]++;
  return {
    uploading,
    progress,
    error,
    preview,
    uploadAvatar,
    deleteAvatar,
    validateFile,
    generatePreview,
    clearPreview
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,