79d564b58d03761b78aeaabadae6a8e3
// =====================================================
// COMPONENTE: VISUALIZACIÓN DE RUTAS EN GOOGLE MAPS
// Descripción: Renderizado de rutas optimizadas con Directions API
// Funcionalidades: Múltiples rutas, colores dinámicos, métricas
// =====================================================
'use client';
"use strict";

/* istanbul ignore next */
function cov_144b6dplou() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\logistics\\RouteVisualization.tsx";
  var hash = "0a3fd4d3f5769aea6e9837d35442682c2ab9786b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\logistics\\RouteVisualization.tsx",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "1": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 15,
          column: 7
        }
      },
      "2": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 15,
          column: 7
        }
      },
      "3": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "4": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 34
        }
      },
      "5": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 24
        }
      },
      "6": {
        start: {
          line: 25,
          column: 20
        },
        end: {
          line: 25,
          column: 48
        }
      },
      "7": {
        start: {
          line: 26,
          column: 29
        },
        end: {
          line: 26,
          column: 72
        }
      },
      "8": {
        start: {
          line: 27,
          column: 25
        },
        end: {
          line: 27,
          column: 61
        }
      },
      "9": {
        start: {
          line: 28,
          column: 14
        },
        end: {
          line: 28,
          column: 38
        }
      },
      "10": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 42
        }
      },
      "11": {
        start: {
          line: 30,
          column: 15
        },
        end: {
          line: 30,
          column: 40
        }
      },
      "12": {
        start: {
          line: 31,
          column: 21
        },
        end: {
          line: 31,
          column: 44
        }
      },
      "13": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 51
        }
      },
      "14": {
        start: {
          line: 33,
          column: 39
        },
        end: {
          line: 33,
          column: 51
        }
      },
      "15": {
        start: {
          line: 34,
          column: 28
        },
        end: {
          line: 34,
          column: 41
        }
      },
      "16": {
        start: {
          line: 35,
          column: 27
        },
        end: {
          line: 35,
          column: 40
        }
      },
      "17": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 38,
          column: 20
        }
      },
      "18": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 66
        }
      },
      "19": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "20": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 19
        }
      },
      "21": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "22": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 47,
          column: 10
        }
      },
      "23": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 53
        }
      },
      "24": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "25": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 30
        }
      },
      "26": {
        start: {
          line: 53,
          column: 17
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "27": {
        start: {
          line: 56,
          column: 32
        },
        end: {
          line: 56,
          column: 88
        }
      },
      "28": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "29": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "30": {
        start: {
          line: 59,
          column: 23
        },
        end: {
          line: 59,
          column: 95
        }
      },
      "31": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 64,
          column: 13
        }
      },
      "32": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 57
        }
      },
      "33": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 39
        }
      },
      "34": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 25
        }
      },
      "35": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "36": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 31
        }
      },
      "37": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 18
        }
      },
      "38": {
        start: {
          line: 76,
          column: 21
        },
        end: {
          line: 87,
          column: 1
        }
      },
      "39": {
        start: {
          line: 88,
          column: 22
        },
        end: {
          line: 92,
          column: 1
        }
      },
      "40": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 46
        }
      },
      "41": {
        start: {
          line: 95,
          column: 56
        },
        end: {
          line: 95,
          column: 80
        }
      },
      "42": {
        start: {
          line: 96,
          column: 58
        },
        end: {
          line: 96,
          column: 82
        }
      },
      "43": {
        start: {
          line: 97,
          column: 44
        },
        end: {
          line: 97,
          column: 75
        }
      },
      "44": {
        start: {
          line: 98,
          column: 46
        },
        end: {
          line: 98,
          column: 77
        }
      },
      "45": {
        start: {
          line: 99,
          column: 46
        },
        end: {
          line: 99,
          column: 73
        }
      },
      "46": {
        start: {
          line: 100,
          column: 46
        },
        end: {
          line: 100,
          column: 73
        }
      },
      "47": {
        start: {
          line: 102,
          column: 26
        },
        end: {
          line: 110,
          column: 6
        }
      },
      "48": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 41
        }
      },
      "49": {
        start: {
          line: 103,
          column: 27
        },
        end: {
          line: 103,
          column: 41
        }
      },
      "50": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 81
        }
      },
      "51": {
        start: {
          line: 104,
          column: 29
        },
        end: {
          line: 104,
          column: 81
        }
      },
      "52": {
        start: {
          line: 104,
          column: 55
        },
        end: {
          line: 104,
          column: 79
        }
      },
      "53": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 18
        }
      },
      "54": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 151,
          column: 7
        }
      },
      "55": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 43
        }
      },
      "56": {
        start: {
          line: 113,
          column: 36
        },
        end: {
          line: 113,
          column: 43
        }
      },
      "57": {
        start: {
          line: 114,
          column: 25
        },
        end: {
          line: 114,
          column: 27
        }
      },
      "58": {
        start: {
          line: 115,
          column: 26
        },
        end: {
          line: 115,
          column: 28
        }
      },
      "59": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 141,
          column: 11
        }
      },
      "60": {
        start: {
          line: 117,
          column: 28
        },
        end: {
          line: 117,
          column: 63
        }
      },
      "61": {
        start: {
          line: 118,
          column: 29
        },
        end: {
          line: 138,
          column: 14
        }
      },
      "62": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 35
        }
      },
      "63": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 37
        }
      },
      "64": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 40
        }
      },
      "65": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 42
        }
      },
      "66": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 147,
          column: 10
        }
      },
      "67": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 65
        }
      },
      "68": {
        start: {
          line: 146,
          column: 42
        },
        end: {
          line: 146,
          column: 63
        }
      },
      "69": {
        start: {
          line: 153,
          column: 28
        },
        end: {
          line: 211,
          column: 6
        }
      },
      "70": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 60
        }
      },
      "71": {
        start: {
          line: 154,
          column: 53
        },
        end: {
          line: 154,
          column: 60
        }
      },
      "72": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 31
        }
      },
      "73": {
        start: {
          line: 156,
          column: 27
        },
        end: {
          line: 156,
          column: 36
        }
      },
      "74": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "75": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 198,
          column: 13
        }
      },
      "76": {
        start: {
          line: 158,
          column: 24
        },
        end: {
          line: 158,
          column: 25
        }
      },
      "77": {
        start: {
          line: 159,
          column: 30
        },
        end: {
          line: 159,
          column: 46
        }
      },
      "78": {
        start: {
          line: 160,
          column: 32
        },
        end: {
          line: 160,
          column: 53
        }
      },
      "79": {
        start: {
          line: 161,
          column: 33
        },
        end: {
          line: 161,
          column: 55
        }
      },
      "80": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 57
        }
      },
      "81": {
        start: {
          line: 162,
          column: 48
        },
        end: {
          line: 162,
          column: 57
        }
      },
      "82": {
        start: {
          line: 164,
          column: 31
        },
        end: {
          line: 164,
          column: 49
        }
      },
      "83": {
        start: {
          line: 165,
          column: 36
        },
        end: {
          line: 165,
          column: 79
        }
      },
      "84": {
        start: {
          line: 166,
          column: 34
        },
        end: {
          line: 169,
          column: 23
        }
      },
      "85": {
        start: {
          line: 166,
          column: 77
        },
        end: {
          line: 169,
          column: 21
        }
      },
      "86": {
        start: {
          line: 170,
          column: 32
        },
        end: {
          line: 179,
          column: 17
        }
      },
      "87": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 197,
          column: 17
        }
      },
      "88": {
        start: {
          line: 181,
          column: 35
        },
        end: {
          line: 189,
          column: 22
        }
      },
      "89": {
        start: {
          line: 182,
          column: 24
        },
        end: {
          line: 188,
          column: 27
        }
      },
      "90": {
        start: {
          line: 183,
          column: 28
        },
        end: {
          line: 187,
          column: 29
        }
      },
      "91": {
        start: {
          line: 184,
          column: 32
        },
        end: {
          line: 184,
          column: 48
        }
      },
      "92": {
        start: {
          line: 186,
          column: 32
        },
        end: {
          line: 186,
          column: 90
        }
      },
      "93": {
        start: {
          line: 190,
          column: 20
        },
        end: {
          line: 190,
          column: 53
        }
      },
      "94": {
        start: {
          line: 192,
          column: 20
        },
        end: {
          line: 194,
          column: 21
        }
      },
      "95": {
        start: {
          line: 193,
          column: 24
        },
        end: {
          line: 193,
          column: 55
        }
      },
      "96": {
        start: {
          line: 196,
          column: 20
        },
        end: {
          line: 196,
          column: 81
        }
      },
      "97": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 40
        }
      },
      "98": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 60
        }
      },
      "99": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 36
        }
      },
      "100": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 219,
          column: 7
        }
      },
      "101": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 216,
          column: 9
        }
      },
      "102": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 30
        }
      },
      "103": {
        start: {
          line: 221,
          column: 34
        },
        end: {
          line: 246,
          column: 6
        }
      },
      "104": {
        start: {
          line: 222,
          column: 33
        },
        end: {
          line: 222,
          column: 55
        }
      },
      "105": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "106": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 45
        }
      },
      "107": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 42
        }
      },
      "108": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 228,
          column: 43
        }
      },
      "109": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 240,
          column: 11
        }
      },
      "110": {
        start: {
          line: 231,
          column: 29
        },
        end: {
          line: 231,
          column: 55
        }
      },
      "111": {
        start: {
          line: 232,
          column: 27
        },
        end: {
          line: 232,
          column: 53
        }
      },
      "112": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 239,
          column: 13
        }
      },
      "113": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 238,
          column: 17
        }
      },
      "114": {
        start: {
          line: 235,
          column: 20
        },
        end: {
          line: 235,
          column: 51
        }
      },
      "115": {
        start: {
          line: 237,
          column: 20
        },
        end: {
          line: 237,
          column: 49
        }
      },
      "116": {
        start: {
          line: 248,
          column: 28
        },
        end: {
          line: 270,
          column: 6
        }
      },
      "117": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 264,
          column: 9
        }
      },
      "118": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 40
        }
      },
      "119": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 82
        }
      },
      "120": {
        start: {
          line: 252,
          column: 52
        },
        end: {
          line: 252,
          column: 80
        }
      },
      "121": {
        start: {
          line: 255,
          column: 32
        },
        end: {
          line: 255,
          column: 69
        }
      },
      "122": {
        start: {
          line: 255,
          column: 63
        },
        end: {
          line: 255,
          column: 67
        }
      },
      "123": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 42
        }
      },
      "124": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 263,
          column: 15
        }
      },
      "125": {
        start: {
          line: 258,
          column: 33
        },
        end: {
          line: 258,
          column: 59
        }
      },
      "126": {
        start: {
          line: 259,
          column: 31
        },
        end: {
          line: 259,
          column: 57
        }
      },
      "127": {
        start: {
          line: 260,
          column: 16
        },
        end: {
          line: 262,
          column: 17
        }
      },
      "128": {
        start: {
          line: 261,
          column: 20
        },
        end: {
          line: 261,
          column: 51
        }
      },
      "129": {
        start: {
          line: 272,
          column: 26
        },
        end: {
          line: 289,
          column: 6
        }
      },
      "130": {
        start: {
          line: 273,
          column: 22
        },
        end: {
          line: 273,
          column: 63
        }
      },
      "131": {
        start: {
          line: 273,
          column: 46
        },
        end: {
          line: 273,
          column: 62
        }
      },
      "132": {
        start: {
          line: 274,
          column: 23
        },
        end: {
          line: 274,
          column: 48
        }
      },
      "133": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "134": {
        start: {
          line: 276,
          column: 27
        },
        end: {
          line: 276,
          column: 57
        }
      },
      "135": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 280,
          column: 15
        }
      },
      "136": {
        start: {
          line: 278,
          column: 16
        },
        end: {
          line: 278,
          column: 50
        }
      },
      "137": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 279,
          column: 48
        }
      },
      "138": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 281,
          column: 34
        }
      },
      "139": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 37
        }
      },
      "140": {
        start: {
          line: 291,
          column: 25
        },
        end: {
          line: 302,
          column: 6
        }
      },
      "141": {
        start: {
          line: 292,
          column: 33
        },
        end: {
          line: 292,
          column: 111
        }
      },
      "142": {
        start: {
          line: 292,
          column: 59
        },
        end: {
          line: 292,
          column: 110
        }
      },
      "143": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 298,
          column: 10
        }
      },
      "144": {
        start: {
          line: 294,
          column: 61
        },
        end: {
          line: 294,
          column: 83
        }
      },
      "145": {
        start: {
          line: 295,
          column: 57
        },
        end: {
          line: 295,
          column: 79
        }
      },
      "146": {
        start: {
          line: 296,
          column: 62
        },
        end: {
          line: 296,
          column: 86
        }
      },
      "147": {
        start: {
          line: 297,
          column: 86
        },
        end: {
          line: 297,
          column: 112
        }
      },
      "148": {
        start: {
          line: 303,
          column: 4
        },
        end: {
          line: 329,
          column: 5
        }
      },
      "149": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 328,
          column: 11
        }
      },
      "150": {
        start: {
          line: 330,
          column: 4
        },
        end: {
          line: 574,
          column: 7
        }
      },
      "151": {
        start: {
          line: 489,
          column: 50
        },
        end: {
          line: 489,
          column: 105
        }
      },
      "152": {
        start: {
          line: 490,
          column: 46
        },
        end: {
          line: 490,
          column: 118
        }
      },
      "153": {
        start: {
          line: 491,
          column: 32
        },
        end: {
          line: 567,
          column: 45
        }
      },
      "154": {
        start: {
          line: 532,
          column: 65
        },
        end: {
          line: 532,
          column: 88
        }
      },
      "155": {
        start: {
          line: 544,
          column: 65
        },
        end: {
          line: 544,
          column: 96
        }
      },
      "156": {
        start: {
          line: 576,
          column: 17
        },
        end: {
          line: 576,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 16
          }
        },
        loc: {
          start: {
            line: 11,
            column: 30
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 30
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 19
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "3": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 33
          }
        },
        loc: {
          start: {
            line: 32,
            column: 47
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 32
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 36,
            column: 39
          },
          end: {
            line: 36,
            column: 40
          }
        },
        loc: {
          start: {
            line: 36,
            column: 61
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "5": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 40,
            column: 9
          },
          end: {
            line: 40,
            column: 34
          }
        },
        loc: {
          start: {
            line: 40,
            column: 53
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 40
      },
      "6": {
        name: "RouteVisualization",
        decl: {
          start: {
            line: 93,
            column: 9
          },
          end: {
            line: 93,
            column: 27
          }
        },
        loc: {
          start: {
            line: 93,
            column: 95
          },
          end: {
            line: 575,
            column: 1
          }
        },
        line: 93
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 102,
            column: 46
          },
          end: {
            line: 102,
            column: 47
          }
        },
        loc: {
          start: {
            line: 102,
            column: 50
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 102
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 104,
            column: 50
          },
          end: {
            line: 104,
            column: 51
          }
        },
        loc: {
          start: {
            line: 104,
            column: 55
          },
          end: {
            line: 104,
            column: 79
          }
        },
        line: 104
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 112,
            column: 26
          },
          end: {
            line: 112,
            column: 27
          }
        },
        loc: {
          start: {
            line: 112,
            column: 30
          },
          end: {
            line: 148,
            column: 5
          }
        },
        line: 112
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 116,
            column: 30
          },
          end: {
            line: 116,
            column: 31
          }
        },
        loc: {
          start: {
            line: 116,
            column: 46
          },
          end: {
            line: 141,
            column: 9
          }
        },
        line: 116
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 145,
            column: 15
          },
          end: {
            line: 145,
            column: 16
          }
        },
        loc: {
          start: {
            line: 145,
            column: 19
          },
          end: {
            line: 147,
            column: 9
          }
        },
        line: 145
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 146,
            column: 30
          },
          end: {
            line: 146,
            column: 31
          }
        },
        loc: {
          start: {
            line: 146,
            column: 42
          },
          end: {
            line: 146,
            column: 63
          }
        },
        line: 146
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 153,
            column: 52
          },
          end: {
            line: 153,
            column: 53
          }
        },
        loc: {
          start: {
            line: 153,
            column: 62
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 153
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 166,
            column: 67
          },
          end: {
            line: 166,
            column: 68
          }
        },
        loc: {
          start: {
            line: 166,
            column: 77
          },
          end: {
            line: 169,
            column: 21
          }
        },
        line: 166
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 181,
            column: 53
          },
          end: {
            line: 181,
            column: 54
          }
        },
        loc: {
          start: {
            line: 181,
            column: 72
          },
          end: {
            line: 189,
            column: 21
          }
        },
        line: 181
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 182,
            column: 47
          },
          end: {
            line: 182,
            column: 48
          }
        },
        loc: {
          start: {
            line: 182,
            column: 65
          },
          end: {
            line: 188,
            column: 25
          }
        },
        line: 182
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 213,
            column: 26
          },
          end: {
            line: 213,
            column: 27
          }
        },
        loc: {
          start: {
            line: 213,
            column: 30
          },
          end: {
            line: 217,
            column: 5
          }
        },
        line: 213
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 221,
            column: 58
          },
          end: {
            line: 221,
            column: 59
          }
        },
        loc: {
          start: {
            line: 221,
            column: 69
          },
          end: {
            line: 241,
            column: 5
          }
        },
        line: 221
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 230,
            column: 30
          },
          end: {
            line: 230,
            column: 31
          }
        },
        loc: {
          start: {
            line: 230,
            column: 46
          },
          end: {
            line: 240,
            column: 9
          }
        },
        line: 230
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 248,
            column: 52
          },
          end: {
            line: 248,
            column: 53
          }
        },
        loc: {
          start: {
            line: 248,
            column: 56
          },
          end: {
            line: 265,
            column: 5
          }
        },
        line: 248
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 252,
            column: 40
          },
          end: {
            line: 252,
            column: 41
          }
        },
        loc: {
          start: {
            line: 252,
            column: 52
          },
          end: {
            line: 252,
            column: 80
          }
        },
        line: 252
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 255,
            column: 58
          },
          end: {
            line: 255,
            column: 59
          }
        },
        loc: {
          start: {
            line: 255,
            column: 63
          },
          end: {
            line: 255,
            column: 67
          }
        },
        line: 255
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 257,
            column: 34
          },
          end: {
            line: 257,
            column: 35
          }
        },
        loc: {
          start: {
            line: 257,
            column: 50
          },
          end: {
            line: 263,
            column: 13
          }
        },
        line: 257
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 272,
            column: 50
          },
          end: {
            line: 272,
            column: 51
          }
        },
        loc: {
          start: {
            line: 272,
            column: 61
          },
          end: {
            line: 284,
            column: 5
          }
        },
        line: 272
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 273,
            column: 41
          },
          end: {
            line: 273,
            column: 42
          }
        },
        loc: {
          start: {
            line: 273,
            column: 46
          },
          end: {
            line: 273,
            column: 62
          }
        },
        line: 273
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 277,
            column: 42
          },
          end: {
            line: 277,
            column: 43
          }
        },
        loc: {
          start: {
            line: 277,
            column: 49
          },
          end: {
            line: 280,
            column: 13
          }
        },
        line: 277
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 291,
            column: 45
          },
          end: {
            line: 291,
            column: 46
          }
        },
        loc: {
          start: {
            line: 291,
            column: 49
          },
          end: {
            line: 299,
            column: 5
          }
        },
        line: 291
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 292,
            column: 54
          },
          end: {
            line: 292,
            column: 55
          }
        },
        loc: {
          start: {
            line: 292,
            column: 59
          },
          end: {
            line: 292,
            column: 110
          }
        },
        line: 292
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 294,
            column: 51
          },
          end: {
            line: 294,
            column: 52
          }
        },
        loc: {
          start: {
            line: 294,
            column: 61
          },
          end: {
            line: 294,
            column: 83
          }
        },
        line: 294
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 295,
            column: 47
          },
          end: {
            line: 295,
            column: 48
          }
        },
        loc: {
          start: {
            line: 295,
            column: 57
          },
          end: {
            line: 295,
            column: 79
          }
        },
        line: 295
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 296,
            column: 52
          },
          end: {
            line: 296,
            column: 53
          }
        },
        loc: {
          start: {
            line: 296,
            column: 62
          },
          end: {
            line: 296,
            column: 86
          }
        },
        line: 296
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 297,
            column: 76
          },
          end: {
            line: 297,
            column: 77
          }
        },
        loc: {
          start: {
            line: 297,
            column: 86
          },
          end: {
            line: 297,
            column: 112
          }
        },
        line: 297
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 488,
            column: 56
          },
          end: {
            line: 488,
            column: 57
          }
        },
        loc: {
          start: {
            line: 488,
            column: 72
          },
          end: {
            line: 568,
            column: 29
          }
        },
        line: 488
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 532,
            column: 61
          },
          end: {
            line: 532,
            column: 62
          }
        },
        loc: {
          start: {
            line: 532,
            column: 65
          },
          end: {
            line: 532,
            column: 88
          }
        },
        line: 532
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 544,
            column: 61
          },
          end: {
            line: 544,
            column: 62
          }
        },
        loc: {
          start: {
            line: 544,
            column: 65
          },
          end: {
            line: 544,
            column: 96
          }
        },
        line: 544
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "1": {
        loc: {
          start: {
            line: 37,
            column: 15
          },
          end: {
            line: 37,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 37,
            column: 29
          },
          end: {
            line: 37,
            column: 45
          }
        }, {
          start: {
            line: 37,
            column: 48
          },
          end: {
            line: 37,
            column: 65
          }
        }],
        line: 37
      },
      "2": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "3": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 20
          }
        }, {
          start: {
            line: 41,
            column: 24
          },
          end: {
            line: 41,
            column: 27
          }
        }, {
          start: {
            line: 41,
            column: 31
          },
          end: {
            line: 41,
            column: 45
          }
        }],
        line: 41
      },
      "4": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "5": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 20
          }
        }, {
          start: {
            line: 44,
            column: 24
          },
          end: {
            line: 44,
            column: 47
          }
        }, {
          start: {
            line: 44,
            column: 51
          },
          end: {
            line: 44,
            column: 76
          }
        }],
        line: 44
      },
      "6": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "7": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 50,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 50,
            column: 13
          }
        }, {
          start: {
            line: 50,
            column: 17
          },
          end: {
            line: 50,
            column: 31
          }
        }],
        line: 50
      },
      "8": {
        loc: {
          start: {
            line: 56,
            column: 32
          },
          end: {
            line: 56,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 32
          },
          end: {
            line: 56,
            column: 53
          }
        }, {
          start: {
            line: 56,
            column: 57
          },
          end: {
            line: 56,
            column: 88
          }
        }],
        line: 56
      },
      "9": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "10": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 58,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 58,
            column: 29
          }
        }, {
          start: {
            line: 58,
            column: 33
          },
          end: {
            line: 58,
            column: 79
          }
        }],
        line: 58
      },
      "11": {
        loc: {
          start: {
            line: 59,
            column: 23
          },
          end: {
            line: 59,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 47
          },
          end: {
            line: 59,
            column: 88
          }
        }, {
          start: {
            line: 59,
            column: 91
          },
          end: {
            line: 59,
            column: 95
          }
        }],
        line: 59
      },
      "12": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        }, {
          start: {
            line: 62,
            column: 19
          },
          end: {
            line: 64,
            column: 13
          }
        }],
        line: 60
      },
      "13": {
        loc: {
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 60,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 60,
            column: 20
          }
        }, {
          start: {
            line: 60,
            column: 25
          },
          end: {
            line: 60,
            column: 33
          }
        }, {
          start: {
            line: 60,
            column: 37
          },
          end: {
            line: 60,
            column: 45
          }
        }],
        line: 60
      },
      "14": {
        loc: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "15": {
        loc: {
          start: {
            line: 93,
            column: 70
          },
          end: {
            line: 93,
            column: 91
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 93,
            column: 86
          },
          end: {
            line: 93,
            column: 91
          }
        }],
        line: 93
      },
      "16": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 103,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 103,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "17": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 104,
            column: 81
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 104,
            column: 81
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "18": {
        loc: {
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 113,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 113,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "19": {
        loc: {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 113,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 113,
            column: 16
          }
        }, {
          start: {
            line: 113,
            column: 20
          },
          end: {
            line: 113,
            column: 34
          }
        }],
        line: 113
      },
      "20": {
        loc: {
          start: {
            line: 123,
            column: 33
          },
          end: {
            line: 123,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 33
          },
          end: {
            line: 123,
            column: 60
          }
        }, {
          start: {
            line: 123,
            column: 64
          },
          end: {
            line: 123,
            column: 105
          }
        }],
        line: 123
      },
      "21": {
        loc: {
          start: {
            line: 124,
            column: 34
          },
          end: {
            line: 124,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 124,
            column: 62
          },
          end: {
            line: 124,
            column: 63
          }
        }, {
          start: {
            line: 124,
            column: 66
          },
          end: {
            line: 124,
            column: 67
          }
        }],
        line: 124
      },
      "22": {
        loc: {
          start: {
            line: 126,
            column: 28
          },
          end: {
            line: 126,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 126,
            column: 56
          },
          end: {
            line: 126,
            column: 60
          }
        }, {
          start: {
            line: 126,
            column: 63
          },
          end: {
            line: 126,
            column: 66
          }
        }],
        line: 126
      },
      "23": {
        loc: {
          start: {
            line: 132,
            column: 35
          },
          end: {
            line: 132,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 35
          },
          end: {
            line: 132,
            column: 62
          }
        }, {
          start: {
            line: 132,
            column: 66
          },
          end: {
            line: 132,
            column: 107
          }
        }],
        line: 132
      },
      "24": {
        loc: {
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 154,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 154,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "25": {
        loc: {
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 154,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 154,
            column: 16
          }
        }, {
          start: {
            line: 154,
            column: 20
          },
          end: {
            line: 154,
            column: 51
          }
        }],
        line: 154
      },
      "26": {
        loc: {
          start: {
            line: 162,
            column: 16
          },
          end: {
            line: 162,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 16
          },
          end: {
            line: 162,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "27": {
        loc: {
          start: {
            line: 183,
            column: 28
          },
          end: {
            line: 187,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 28
          },
          end: {
            line: 187,
            column: 29
          }
        }, {
          start: {
            line: 185,
            column: 35
          },
          end: {
            line: 187,
            column: 29
          }
        }],
        line: 183
      },
      "28": {
        loc: {
          start: {
            line: 183,
            column: 32
          },
          end: {
            line: 183,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 32
          },
          end: {
            line: 183,
            column: 74
          }
        }, {
          start: {
            line: 183,
            column: 78
          },
          end: {
            line: 183,
            column: 84
          }
        }],
        line: 183
      },
      "29": {
        loc: {
          start: {
            line: 192,
            column: 20
          },
          end: {
            line: 194,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 20
          },
          end: {
            line: 194,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "30": {
        loc: {
          start: {
            line: 192,
            column: 24
          },
          end: {
            line: 192,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 24
          },
          end: {
            line: 192,
            column: 51
          }
        }, {
          start: {
            line: 192,
            column: 55
          },
          end: {
            line: 192,
            column: 79
          }
        }],
        line: 192
      },
      "31": {
        loc: {
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 216,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 216,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "32": {
        loc: {
          start: {
            line: 223,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        }, {
          start: {
            line: 225,
            column: 15
          },
          end: {
            line: 227,
            column: 9
          }
        }],
        line: 223
      },
      "33": {
        loc: {
          start: {
            line: 233,
            column: 12
          },
          end: {
            line: 239,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 12
          },
          end: {
            line: 239,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "34": {
        loc: {
          start: {
            line: 233,
            column: 16
          },
          end: {
            line: 233,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 233,
            column: 16
          },
          end: {
            line: 233,
            column: 22
          }
        }, {
          start: {
            line: 233,
            column: 26
          },
          end: {
            line: 233,
            column: 34
          }
        }],
        line: 233
      },
      "35": {
        loc: {
          start: {
            line: 234,
            column: 16
          },
          end: {
            line: 238,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 16
          },
          end: {
            line: 238,
            column: 17
          }
        }, {
          start: {
            line: 236,
            column: 23
          },
          end: {
            line: 238,
            column: 17
          }
        }],
        line: 234
      },
      "36": {
        loc: {
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 264,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 264,
            column: 9
          }
        }, {
          start: {
            line: 253,
            column: 15
          },
          end: {
            line: 264,
            column: 9
          }
        }],
        line: 249
      },
      "37": {
        loc: {
          start: {
            line: 260,
            column: 16
          },
          end: {
            line: 262,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 16
          },
          end: {
            line: 262,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "38": {
        loc: {
          start: {
            line: 260,
            column: 20
          },
          end: {
            line: 260,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 260,
            column: 20
          },
          end: {
            line: 260,
            column: 26
          }
        }, {
          start: {
            line: 260,
            column: 30
          },
          end: {
            line: 260,
            column: 38
          }
        }],
        line: 260
      },
      "39": {
        loc: {
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 283,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 283,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 275
      },
      "40": {
        loc: {
          start: {
            line: 275,
            column: 12
          },
          end: {
            line: 275,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 275,
            column: 12
          },
          end: {
            line: 275,
            column: 17
          }
        }, {
          start: {
            line: 275,
            column: 21
          },
          end: {
            line: 275,
            column: 27
          }
        }, {
          start: {
            line: 275,
            column: 31
          },
          end: {
            line: 275,
            column: 34
          }
        }],
        line: 275
      },
      "41": {
        loc: {
          start: {
            line: 292,
            column: 59
          },
          end: {
            line: 292,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 292,
            column: 59
          },
          end: {
            line: 292,
            column: 82
          }
        }, {
          start: {
            line: 292,
            column: 86
          },
          end: {
            line: 292,
            column: 110
          }
        }],
        line: 292
      },
      "42": {
        loc: {
          start: {
            line: 297,
            column: 22
          },
          end: {
            line: 297,
            column: 146
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 297,
            column: 52
          },
          end: {
            line: 297,
            column: 142
          }
        }, {
          start: {
            line: 297,
            column: 145
          },
          end: {
            line: 297,
            column: 146
          }
        }],
        line: 297
      },
      "43": {
        loc: {
          start: {
            line: 303,
            column: 4
          },
          end: {
            line: 329,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 4
          },
          end: {
            line: 329,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "44": {
        loc: {
          start: {
            line: 454,
            column: 40
          },
          end: {
            line: 458,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 454,
            column: 40
          },
          end: {
            line: 454,
            column: 53
          }
        }, {
          start: {
            line: 454,
            column: 71
          },
          end: {
            line: 458,
            column: 42
          }
        }],
        line: 454
      },
      "45": {
        loc: {
          start: {
            line: 466,
            column: 46
          },
          end: {
            line: 480,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 466,
            column: 106
          },
          end: {
            line: 473,
            column: 38
          }
        }, {
          start: {
            line: 473,
            column: 55
          },
          end: {
            line: 480,
            column: 38
          }
        }],
        line: 466
      },
      "46": {
        loc: {
          start: {
            line: 489,
            column: 50
          },
          end: {
            line: 489,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 489,
            column: 50
          },
          end: {
            line: 489,
            column: 77
          }
        }, {
          start: {
            line: 489,
            column: 81
          },
          end: {
            line: 489,
            column: 105
          }
        }],
        line: 489
      },
      "47": {
        loc: {
          start: {
            line: 490,
            column: 46
          },
          end: {
            line: 490,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 490,
            column: 46
          },
          end: {
            line: 490,
            column: 73
          }
        }, {
          start: {
            line: 490,
            column: 77
          },
          end: {
            line: 490,
            column: 118
          }
        }],
        line: 490
      },
      "48": {
        loc: {
          start: {
            line: 523,
            column: 71
          },
          end: {
            line: 523,
            column: 217
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 523,
            column: 100
          },
          end: {
            line: 523,
            column: 127
          }
        }, {
          start: {
            line: 523,
            column: 130
          },
          end: {
            line: 523,
            column: 217
          }
        }],
        line: 523
      },
      "49": {
        loc: {
          start: {
            line: 523,
            column: 130
          },
          end: {
            line: 523,
            column: 217
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 523,
            column: 158
          },
          end: {
            line: 523,
            column: 187
          }
        }, {
          start: {
            line: 523,
            column: 190
          },
          end: {
            line: 523,
            column: 217
          }
        }],
        line: 523
      },
      "50": {
        loc: {
          start: {
            line: 524,
            column: 62
          },
          end: {
            line: 524,
            column: 158
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 524,
            column: 91
          },
          end: {
            line: 524,
            column: 104
          }
        }, {
          start: {
            line: 524,
            column: 107
          },
          end: {
            line: 524,
            column: 158
          }
        }],
        line: 524
      },
      "51": {
        loc: {
          start: {
            line: 524,
            column: 107
          },
          end: {
            line: 524,
            column: 158
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 524,
            column: 135
          },
          end: {
            line: 524,
            column: 143
          }
        }, {
          start: {
            line: 524,
            column: 146
          },
          end: {
            line: 524,
            column: 158
          }
        }],
        line: 524
      },
      "52": {
        loc: {
          start: {
            line: 545,
            column: 61
          },
          end: {
            line: 545,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 545,
            column: 73
          },
          end: {
            line: 545,
            column: 82
          }
        }, {
          start: {
            line: 545,
            column: 85
          },
          end: {
            line: 545,
            column: 94
          }
        }],
        line: 545
      },
      "53": {
        loc: {
          start: {
            line: 548,
            column: 62
          },
          end: {
            line: 562,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 548,
            column: 88
          },
          end: {
            line: 555,
            column: 54
          }
        }, {
          start: {
            line: 555,
            column: 71
          },
          end: {
            line: 562,
            column: 54
          }
        }],
        line: 548
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\logistics\\RouteVisualization.tsx"],
      sourcesContent: ["// =====================================================\r\n// COMPONENTE: VISUALIZACI\xD3N DE RUTAS EN GOOGLE MAPS\r\n// Descripci\xF3n: Renderizado de rutas optimizadas con Directions API\r\n// Funcionalidades: M\xFAltiples rutas, colores din\xE1micos, m\xE9tricas\r\n// =====================================================\r\n\r\n'use client';\r\n\r\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\r\nimport { useMap } from '@vis.gl/react-google-maps';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { \r\n  Route, \r\n  MapPin, \r\n  Clock, \r\n  Truck, \r\n  Eye, \r\n  EyeOff,\r\n  Navigation,\r\n  Zap,\r\n  TrendingUp\r\n} from 'lucide-react';\r\n\r\n// =====================================================\r\n// INTERFACES Y TIPOS\r\n// =====================================================\r\n\r\ninterface Coordinates {\r\n  lat: number;\r\n  lng: number;\r\n}\r\n\r\ninterface OptimizedRoute {\r\n  id: string;\r\n  name: string;\r\n  shipments: any[];\r\n  total_distance: number;\r\n  estimated_time: number;\r\n  driver?: any;\r\n  status: 'planned' | 'active' | 'completed';\r\n  start_location?: Coordinates;\r\n  waypoints: Coordinates[];\r\n  optimization_score: number;\r\n}\r\n\r\ninterface RouteVisualizationProps {\r\n  routes: OptimizedRoute[];\r\n  selectedRouteId?: string;\r\n  onRouteSelect?: (routeId: string) => void;\r\n  showAllRoutes?: boolean;\r\n}\r\n\r\ninterface DirectionsResult {\r\n  routes: google.maps.DirectionsRoute[];\r\n}\r\n\r\n// =====================================================\r\n// CONFIGURACI\xD3N DE COLORES\r\n// =====================================================\r\n\r\nconst ROUTE_COLORS = [\r\n  '#3B82F6', // Azul\r\n  '#EF4444', // Rojo\r\n  '#10B981', // Verde\r\n  '#F59E0B', // Amarillo\r\n  '#8B5CF6', // P\xFArpura\r\n  '#06B6D4', // Cian\r\n  '#F97316', // Naranja\r\n  '#84CC16', // Lima\r\n  '#EC4899', // Rosa\r\n  '#6B7280'  // Gris\r\n];\r\n\r\nconst STATUS_COLORS = {\r\n  planned: '#3B82F6',\r\n  active: '#10B981',\r\n  completed: '#6B7280'\r\n};\r\n\r\n// =====================================================\r\n// COMPONENTE PRINCIPAL\r\n// =====================================================\r\n\r\nexport function RouteVisualization({ \r\n  routes, \r\n  selectedRouteId, \r\n  onRouteSelect,\r\n  showAllRoutes = false \r\n}: RouteVisualizationProps) {\r\n  const map = useMap();\r\n  const [directionsServices, setDirectionsServices] = useState<google.maps.DirectionsService[]>([]);\r\n  const [directionsRenderers, setDirectionsRenderers] = useState<google.maps.DirectionsRenderer[]>([]);\r\n  const [routeResults, setRouteResults] = useState<Map<string, DirectionsResult>>(new Map());\r\n  const [visibleRoutes, setVisibleRoutes] = useState<Set<string>>(new Set());\r\n  const [isCalculating, setIsCalculating] = useState(false);\r\n  const [selectedRoute, setSelectedRoute] = useState<string>('all');\r\n\r\n  // Rutas a mostrar\r\n  const displayRoutes = useMemo(() => {\r\n    if (showAllRoutes) return routes;\r\n    if (selectedRouteId) return routes.filter(r => r.id === selectedRouteId);\r\n    return [];\r\n  }, [routes, selectedRouteId, showAllRoutes]);\r\n\r\n  // Inicializar servicios de Google Maps\r\n  useEffect(() => {\r\n    if (!map || !window.google) return;\r\n\r\n    const services: google.maps.DirectionsService[] = [];\r\n    const renderers: google.maps.DirectionsRenderer[] = [];\r\n\r\n    displayRoutes.forEach((route, index) => {\r\n      const service = new google.maps.DirectionsService();\r\n      const renderer = new google.maps.DirectionsRenderer({\r\n        map: map,\r\n        suppressMarkers: false,\r\n        suppressInfoWindows: false,\r\n        polylineOptions: {\r\n          strokeColor: STATUS_COLORS[route.status] || ROUTE_COLORS[index % ROUTE_COLORS.length],\r\n          strokeWeight: route.status === 'active' ? 6 : 4,\r\n          strokeOpacity: 0.8,\r\n          zIndex: route.status === 'active' ? 1000 : 100\r\n        },\r\n        markerOptions: {\r\n          icon: {\r\n            path: google.maps.SymbolPath.CIRCLE,\r\n            scale: 8,\r\n            fillColor: STATUS_COLORS[route.status] || ROUTE_COLORS[index % ROUTE_COLORS.length],\r\n            fillOpacity: 1,\r\n            strokeColor: '#ffffff',\r\n            strokeWeight: 2\r\n          }\r\n        }\r\n      });\r\n\r\n      services.push(service);\r\n      renderers.push(renderer);\r\n    });\r\n\r\n    setDirectionsServices(services);\r\n    setDirectionsRenderers(renderers);\r\n\r\n    // Cleanup\r\n    return () => {\r\n      renderers.forEach(renderer => renderer.setMap(null));\r\n    };\r\n  }, [map, displayRoutes]);\r\n\r\n  // Calcular rutas con Directions API\r\n  const calculateRoutes = useCallback(async () => {\r\n    if (!map || directionsServices.length === 0) return;\r\n\r\n    setIsCalculating(true);\r\n    const newResults = new Map<string, DirectionsResult>();\r\n\r\n    try {\r\n      for (let i = 0; i < displayRoutes.length; i++) {\r\n        const route = displayRoutes[i];\r\n        const service = directionsServices[i];\r\n        const renderer = directionsRenderers[i];\r\n\r\n        if (route.waypoints.length < 2) continue;\r\n\r\n        // Configurar request para Directions API\r\n        const origin = route.waypoints[0];\r\n        const destination = route.waypoints[route.waypoints.length - 1];\r\n        const waypoints = route.waypoints.slice(1, -1).map(point => ({\r\n          location: new google.maps.LatLng(point.lat, point.lng),\r\n          stopover: true\r\n        }));\r\n\r\n        const request: google.maps.DirectionsRequest = {\r\n          origin: new google.maps.LatLng(origin.lat, origin.lng),\r\n          destination: new google.maps.LatLng(destination.lat, destination.lng),\r\n          waypoints: waypoints,\r\n          optimizeWaypoints: false, // Ya optimizamos con nuestro algoritmo\r\n          travelMode: google.maps.TravelMode.DRIVING,\r\n          unitSystem: google.maps.UnitSystem.METRIC,\r\n          avoidHighways: false,\r\n          avoidTolls: false\r\n        };\r\n\r\n        try {\r\n          const result = await new Promise<google.maps.DirectionsResult>((resolve, reject) => {\r\n            service.route(request, (result, status) => {\r\n              if (status === google.maps.DirectionsStatus.OK && result) {\r\n                resolve(result);\r\n              } else {\r\n                reject(new Error(`Directions request failed: ${status}`));\r\n              }\r\n            });\r\n          });\r\n\r\n          newResults.set(route.id, result);\r\n          \r\n          // Mostrar ruta si est\xE1 visible\r\n          if (visibleRoutes.has(route.id) || visibleRoutes.size === 0) {\r\n            renderer.setDirections(result);\r\n          }\r\n\r\n        } catch (error) {\r\n          console.error(`Error calculando ruta ${route.name}:`, error);\r\n        }\r\n      }\r\n\r\n      setRouteResults(newResults);\r\n    } catch (error) {\r\n      console.error('Error calculando rutas:', error);\r\n    } finally {\r\n      setIsCalculating(false);\r\n    }\r\n  }, [map, displayRoutes, directionsServices, directionsRenderers, visibleRoutes]);\r\n\r\n  // Calcular rutas cuando cambien los datos\r\n  useEffect(() => {\r\n    if (displayRoutes.length > 0) {\r\n      calculateRoutes();\r\n    }\r\n  }, [calculateRoutes]);\r\n\r\n  // Manejar visibilidad de rutas\r\n  const toggleRouteVisibility = useCallback((routeId: string) => {\r\n    const newVisibleRoutes = new Set(visibleRoutes);\r\n    \r\n    if (newVisibleRoutes.has(routeId)) {\r\n      newVisibleRoutes.delete(routeId);\r\n    } else {\r\n      newVisibleRoutes.add(routeId);\r\n    }\r\n    \r\n    setVisibleRoutes(newVisibleRoutes);\r\n\r\n    // Actualizar renderers\r\n    displayRoutes.forEach((route, index) => {\r\n      const renderer = directionsRenderers[index];\r\n      const result = routeResults.get(route.id);\r\n      \r\n      if (result && renderer) {\r\n        if (newVisibleRoutes.has(route.id)) {\r\n          renderer.setDirections(result);\r\n        } else {\r\n          renderer.setDirections(null);\r\n        }\r\n      }\r\n    });\r\n  }, [visibleRoutes, displayRoutes, directionsRenderers, routeResults]);\r\n\r\n  // Mostrar/ocultar todas las rutas\r\n  const toggleAllRoutes = useCallback(() => {\r\n    if (visibleRoutes.size === displayRoutes.length) {\r\n      // Ocultar todas\r\n      setVisibleRoutes(new Set());\r\n      directionsRenderers.forEach(renderer => renderer.setDirections(null));\r\n    } else {\r\n      // Mostrar todas\r\n      const allRouteIds = new Set(displayRoutes.map(r => r.id));\r\n      setVisibleRoutes(allRouteIds);\r\n      \r\n      displayRoutes.forEach((route, index) => {\r\n        const renderer = directionsRenderers[index];\r\n        const result = routeResults.get(route.id);\r\n        if (result && renderer) {\r\n          renderer.setDirections(result);\r\n        }\r\n      });\r\n    }\r\n  }, [visibleRoutes, displayRoutes, directionsRenderers, routeResults]);\r\n\r\n  // Centrar mapa en ruta espec\xEDfica\r\n  const centerOnRoute = useCallback((routeId: string) => {\r\n    const route = displayRoutes.find(r => r.id === routeId);\r\n    const result = routeResults.get(routeId);\r\n    \r\n    if (route && result && map) {\r\n      const bounds = new google.maps.LatLngBounds();\r\n      \r\n      result.routes[0].legs.forEach(leg => {\r\n        bounds.extend(leg.start_location);\r\n        bounds.extend(leg.end_location);\r\n      });\r\n      \r\n      map.fitBounds(bounds);\r\n      onRouteSelect?.(routeId);\r\n    }\r\n  }, [displayRoutes, routeResults, map, onRouteSelect]);\r\n\r\n  // Calcular m\xE9tricas totales\r\n  const totalMetrics = useMemo(() => {\r\n    const visibleRouteData = displayRoutes.filter(r => visibleRoutes.has(r.id) || visibleRoutes.size === 0);\r\n    \r\n    return {\r\n      totalDistance: visibleRouteData.reduce((sum, r) => sum + r.total_distance, 0),\r\n      totalTime: visibleRouteData.reduce((sum, r) => sum + r.estimated_time, 0),\r\n      totalShipments: visibleRouteData.reduce((sum, r) => sum + r.shipments.length, 0),\r\n      avgScore: visibleRouteData.length > 0 \r\n        ? visibleRouteData.reduce((sum, r) => sum + r.optimization_score, 0) / visibleRouteData.length \r\n        : 0\r\n    };\r\n  }, [displayRoutes, visibleRoutes]);\r\n\r\n  if (displayRoutes.length === 0) {\r\n    return (\r\n      <Card>\r\n        <CardContent className=\"flex items-center justify-center h-64\">\r\n          <div className=\"text-center space-y-4\">\r\n            <Navigation className=\"w-12 h-12 text-gray-400 mx-auto\" />\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold\">No hay rutas para mostrar</h3>\r\n              <p className=\"text-gray-600 mt-2\">\r\n                Optimiza rutas para ver la visualizaci\xF3n en el mapa.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {/* M\xE9tricas totales */}\r\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <MapPin className=\"w-4 h-4 text-blue-600\" />\r\n              <span className=\"text-sm font-medium\">Distancia Total</span>\r\n            </div>\r\n            <p className=\"text-2xl font-bold text-blue-600\">\r\n              {totalMetrics.totalDistance.toFixed(1)} km\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n        \r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <Clock className=\"w-4 h-4 text-green-600\" />\r\n              <span className=\"text-sm font-medium\">Tiempo Total</span>\r\n            </div>\r\n            <p className=\"text-2xl font-bold text-green-600\">\r\n              {Math.round(totalMetrics.totalTime / 60)}h {totalMetrics.totalTime % 60}m\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n        \r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <Truck className=\"w-4 h-4 text-purple-600\" />\r\n              <span className=\"text-sm font-medium\">Env\xEDos</span>\r\n            </div>\r\n            <p className=\"text-2xl font-bold text-purple-600\">\r\n              {totalMetrics.totalShipments}\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n        \r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <TrendingUp className=\"w-4 h-4 text-orange-600\" />\r\n              <span className=\"text-sm font-medium\">Score Promedio</span>\r\n            </div>\r\n            <p className=\"text-2xl font-bold text-orange-600\">\r\n              {totalMetrics.avgScore.toFixed(0)}%\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Controles de rutas */}\r\n      <Card>\r\n        <CardHeader>\r\n          <div className=\"flex items-center justify-between\">\r\n            <CardTitle className=\"flex items-center gap-2\">\r\n              <Navigation className=\"w-5 h-5\" />\r\n              Control de Rutas\r\n              {isCalculating && (\r\n                <Badge variant=\"outline\" className=\"ml-2\">\r\n                  Calculando...\r\n                </Badge>\r\n              )}\r\n            </CardTitle>\r\n            <Button\r\n              onClick={toggleAllRoutes}\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              className=\"flex items-center gap-2\"\r\n            >\r\n              {visibleRoutes.size === displayRoutes.length ? (\r\n                <>\r\n                  <EyeOff className=\"w-4 h-4\" />\r\n                  Ocultar Todas\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Eye className=\"w-4 h-4\" />\r\n                  Mostrar Todas\r\n                </>\r\n              )}\r\n            </Button>\r\n          </div>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"space-y-3\">\r\n            {displayRoutes.map((route, index) => {\r\n              const isVisible = visibleRoutes.has(route.id) || visibleRoutes.size === 0;\r\n              const color = STATUS_COLORS[route.status] || ROUTE_COLORS[index % ROUTE_COLORS.length];\r\n              \r\n              return (\r\n                <div\r\n                  key={route.id}\r\n                  className=\"flex items-center justify-between p-3 border rounded-lg hover:bg-gray-50\"\r\n                >\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <div\r\n                      className=\"w-4 h-4 rounded-full border-2 border-white shadow-sm\"\r\n                      style={{ backgroundColor: color }}\r\n                    />\r\n                    <div>\r\n                      <h4 className=\"font-medium\">{route.name}</h4>\r\n                      <p className=\"text-sm text-gray-600\">\r\n                        {route.shipments.length} env\xEDos \u2022 {route.total_distance} km \u2022 {Math.round(route.estimated_time / 60)}h\r\n                      </p>\r\n                    </div>\r\n                    <Badge className={`ml-2 ${\r\n                      route.status === 'planned' ? 'bg-blue-100 text-blue-800' :\r\n                      route.status === 'active' ? 'bg-green-100 text-green-800' :\r\n                      'bg-gray-100 text-gray-800'\r\n                    }`}>\r\n                      {route.status === 'planned' ? 'Planificada' :\r\n                       route.status === 'active' ? 'Activa' : 'Completada'}\r\n                    </Badge>\r\n                  </div>\r\n                  \r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Button\r\n                      onClick={() => centerOnRoute(route.id)}\r\n                      variant=\"outline\"\r\n                      size=\"sm\"\r\n                      className=\"flex items-center gap-1\"\r\n                    >\r\n                      <Navigation className=\"w-4 h-4\" />\r\n                      Centrar\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => toggleRouteVisibility(route.id)}\r\n                      variant={isVisible ? \"default\" : \"outline\"}\r\n                      size=\"sm\"\r\n                      className=\"flex items-center gap-1\"\r\n                    >\r\n                      {isVisible ? (\r\n                        <>\r\n                          <Eye className=\"w-4 h-4\" />\r\n                          Visible\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <EyeOff className=\"w-4 h-4\" />\r\n                          Oculta\r\n                        </>\r\n                      )}\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RouteVisualization;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["RouteVisualization", "ROUTE_COLORS", "STATUS_COLORS", "planned", "active", "completed", "routes", "selectedRouteId", "onRouteSelect", "showAllRoutes", "map", "useMap", "directionsServices", "setDirectionsServices", "useState", "directionsRenderers", "setDirectionsRenderers", "routeResults", "setRouteResults", "Map", "visibleRoutes", "setVisibleRoutes", "Set", "isCalculating", "setIsCalculating", "selectedRoute", "setSelectedRoute", "displayRoutes", "useMemo", "filter", "r", "id", "useEffect", "window", "google", "services", "renderers", "forEach", "route", "index", "service", "maps", "DirectionsService", "renderer", "DirectionsRenderer", "suppressMarkers", "suppressInfoWindows", "polylineOptions", "strokeColor", "status", "length", "strokeWeight", "strokeOpacity", "zIndex", "markerOptions", "icon", "path", "SymbolPath", "CIRCLE", "scale", "fillColor", "fillOpacity", "push", "setMap", "calculateRoutes", "useCallback", "newResults", "i", "waypoints", "origin", "destination", "slice", "point", "location", "LatLng", "lat", "lng", "stopover", "request", "optimizeWaypoints", "travelMode", "TravelMode", "DRIVING", "unitSystem", "UnitSystem", "METRIC", "avoidHighways", "avoidTolls", "result", "Promise", "resolve", "reject", "DirectionsStatus", "OK", "Error", "set", "has", "size", "setDirections", "error", "console", "name", "toggleRouteVisibility", "routeId", "newVisibleRoutes", "delete", "add", "get", "toggleAllRoutes", "allRouteIds", "centerOnRoute", "find", "bounds", "LatLngBounds", "legs", "leg", "extend", "start_location", "end_location", "fitBounds", "totalMetrics", "visibleRouteData", "totalDistance", "reduce", "sum", "total_distance", "totalTime", "estimated_time", "totalShipments", "shipments", "avgScore", "optimization_score", "Card", "CardContent", "className", "div", "Navigation", "h3", "p", "MapPin", "span", "toFixed", "Clock", "Math", "round", "Truck", "TrendingUp", "CardHeader", "CardTitle", "Badge", "variant", "Button", "onClick", "EyeOff", "Eye", "isVisible", "color", "style", "backgroundColor", "h4"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0a3fd4d3f5769aea6e9837d35442682c2ab9786b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_144b6dplou = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_144b6dplou();
cov_144b6dplou().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_144b6dplou().f[0]++;
  cov_144b6dplou().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_144b6dplou().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_144b6dplou().s[3]++;
_export(exports, {
  get RouteVisualization() {
    /* istanbul ignore next */
    cov_144b6dplou().f[1]++;
    cov_144b6dplou().s[4]++;
    return RouteVisualization;
  },
  get default() {
    /* istanbul ignore next */
    cov_144b6dplou().f[2]++;
    cov_144b6dplou().s[5]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_144b6dplou().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_144b6dplou().s[7]++, _interop_require_wildcard(require("react")));
const _reactgooglemaps =
/* istanbul ignore next */
(cov_144b6dplou().s[8]++, require("@vis.gl/react-google-maps"));
const _card =
/* istanbul ignore next */
(cov_144b6dplou().s[9]++, require("../../ui/card"));
const _button =
/* istanbul ignore next */
(cov_144b6dplou().s[10]++, require("../../ui/button"));
const _badge =
/* istanbul ignore next */
(cov_144b6dplou().s[11]++, require("../../ui/badge"));
const _lucidereact =
/* istanbul ignore next */
(cov_144b6dplou().s[12]++, require("lucide-react"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_144b6dplou().f[3]++;
  cov_144b6dplou().s[13]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_144b6dplou().b[0][0]++;
    cov_144b6dplou().s[14]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_144b6dplou().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_144b6dplou().s[15]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_144b6dplou().s[16]++, new WeakMap());
  /* istanbul ignore next */
  cov_144b6dplou().s[17]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_144b6dplou().f[4]++;
    cov_144b6dplou().s[18]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_144b6dplou().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_144b6dplou().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_144b6dplou().f[5]++;
  cov_144b6dplou().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_144b6dplou().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_144b6dplou().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_144b6dplou().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_144b6dplou().b[2][0]++;
    cov_144b6dplou().s[20]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_144b6dplou().b[2][1]++;
  }
  cov_144b6dplou().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_144b6dplou().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_144b6dplou().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_144b6dplou().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_144b6dplou().b[4][0]++;
    cov_144b6dplou().s[22]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_144b6dplou().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_144b6dplou().s[23]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_144b6dplou().s[24]++;
  if (
  /* istanbul ignore next */
  (cov_144b6dplou().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_144b6dplou().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_144b6dplou().b[6][0]++;
    cov_144b6dplou().s[25]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_144b6dplou().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_144b6dplou().s[26]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_144b6dplou().s[27]++,
  /* istanbul ignore next */
  (cov_144b6dplou().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_144b6dplou().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_144b6dplou().s[28]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_144b6dplou().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_144b6dplou().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_144b6dplou().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_144b6dplou().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_144b6dplou().s[30]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_144b6dplou().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_144b6dplou().b[11][1]++, null));
      /* istanbul ignore next */
      cov_144b6dplou().s[31]++;
      if (
      /* istanbul ignore next */
      (cov_144b6dplou().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_144b6dplou().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_144b6dplou().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_144b6dplou().b[12][0]++;
        cov_144b6dplou().s[32]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_144b6dplou().b[12][1]++;
        cov_144b6dplou().s[33]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_144b6dplou().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_144b6dplou().s[34]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_144b6dplou().s[35]++;
  if (cache) {
    /* istanbul ignore next */
    cov_144b6dplou().b[14][0]++;
    cov_144b6dplou().s[36]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_144b6dplou().b[14][1]++;
  }
  cov_144b6dplou().s[37]++;
  return newObj;
}
// =====================================================
// CONFIGURACIÓN DE COLORES
// =====================================================
const ROUTE_COLORS =
/* istanbul ignore next */
(cov_144b6dplou().s[38]++, ['#3B82F6', '#EF4444', '#10B981', '#F59E0B', '#8B5CF6', '#06B6D4', '#F97316', '#84CC16', '#EC4899', '#6B7280' // Gris
]);
const STATUS_COLORS =
/* istanbul ignore next */
(cov_144b6dplou().s[39]++, {
  planned: '#3B82F6',
  active: '#10B981',
  completed: '#6B7280'
});
function RouteVisualization({
  routes,
  selectedRouteId,
  onRouteSelect,
  showAllRoutes =
  /* istanbul ignore next */
  (cov_144b6dplou().b[15][0]++, false)
}) {
  /* istanbul ignore next */
  cov_144b6dplou().f[6]++;
  const map =
  /* istanbul ignore next */
  (cov_144b6dplou().s[40]++, (0, _reactgooglemaps.useMap)());
  const [directionsServices, setDirectionsServices] =
  /* istanbul ignore next */
  (cov_144b6dplou().s[41]++, (0, _react.useState)([]));
  const [directionsRenderers, setDirectionsRenderers] =
  /* istanbul ignore next */
  (cov_144b6dplou().s[42]++, (0, _react.useState)([]));
  const [routeResults, setRouteResults] =
  /* istanbul ignore next */
  (cov_144b6dplou().s[43]++, (0, _react.useState)(new Map()));
  const [visibleRoutes, setVisibleRoutes] =
  /* istanbul ignore next */
  (cov_144b6dplou().s[44]++, (0, _react.useState)(new Set()));
  const [isCalculating, setIsCalculating] =
  /* istanbul ignore next */
  (cov_144b6dplou().s[45]++, (0, _react.useState)(false));
  const [selectedRoute, setSelectedRoute] =
  /* istanbul ignore next */
  (cov_144b6dplou().s[46]++, (0, _react.useState)('all'));
  // Rutas a mostrar
  const displayRoutes =
  /* istanbul ignore next */
  (cov_144b6dplou().s[47]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_144b6dplou().f[7]++;
    cov_144b6dplou().s[48]++;
    if (showAllRoutes) {
      /* istanbul ignore next */
      cov_144b6dplou().b[16][0]++;
      cov_144b6dplou().s[49]++;
      return routes;
    } else
    /* istanbul ignore next */
    {
      cov_144b6dplou().b[16][1]++;
    }
    cov_144b6dplou().s[50]++;
    if (selectedRouteId) {
      /* istanbul ignore next */
      cov_144b6dplou().b[17][0]++;
      cov_144b6dplou().s[51]++;
      return routes.filter(r => {
        /* istanbul ignore next */
        cov_144b6dplou().f[8]++;
        cov_144b6dplou().s[52]++;
        return r.id === selectedRouteId;
      });
    } else
    /* istanbul ignore next */
    {
      cov_144b6dplou().b[17][1]++;
    }
    cov_144b6dplou().s[53]++;
    return [];
  }, [routes, selectedRouteId, showAllRoutes]));
  // Inicializar servicios de Google Maps
  /* istanbul ignore next */
  cov_144b6dplou().s[54]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_144b6dplou().f[9]++;
    cov_144b6dplou().s[55]++;
    if (
    /* istanbul ignore next */
    (cov_144b6dplou().b[19][0]++, !map) ||
    /* istanbul ignore next */
    (cov_144b6dplou().b[19][1]++, !window.google)) {
      /* istanbul ignore next */
      cov_144b6dplou().b[18][0]++;
      cov_144b6dplou().s[56]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_144b6dplou().b[18][1]++;
    }
    const services =
    /* istanbul ignore next */
    (cov_144b6dplou().s[57]++, []);
    const renderers =
    /* istanbul ignore next */
    (cov_144b6dplou().s[58]++, []);
    /* istanbul ignore next */
    cov_144b6dplou().s[59]++;
    displayRoutes.forEach((route, index) => {
      /* istanbul ignore next */
      cov_144b6dplou().f[10]++;
      const service =
      /* istanbul ignore next */
      (cov_144b6dplou().s[60]++, new google.maps.DirectionsService());
      const renderer =
      /* istanbul ignore next */
      (cov_144b6dplou().s[61]++, new google.maps.DirectionsRenderer({
        map: map,
        suppressMarkers: false,
        suppressInfoWindows: false,
        polylineOptions: {
          strokeColor:
          /* istanbul ignore next */
          (cov_144b6dplou().b[20][0]++, STATUS_COLORS[route.status]) ||
          /* istanbul ignore next */
          (cov_144b6dplou().b[20][1]++, ROUTE_COLORS[index % ROUTE_COLORS.length]),
          strokeWeight: route.status === 'active' ?
          /* istanbul ignore next */
          (cov_144b6dplou().b[21][0]++, 6) :
          /* istanbul ignore next */
          (cov_144b6dplou().b[21][1]++, 4),
          strokeOpacity: 0.8,
          zIndex: route.status === 'active' ?
          /* istanbul ignore next */
          (cov_144b6dplou().b[22][0]++, 1000) :
          /* istanbul ignore next */
          (cov_144b6dplou().b[22][1]++, 100)
        },
        markerOptions: {
          icon: {
            path: google.maps.SymbolPath.CIRCLE,
            scale: 8,
            fillColor:
            /* istanbul ignore next */
            (cov_144b6dplou().b[23][0]++, STATUS_COLORS[route.status]) ||
            /* istanbul ignore next */
            (cov_144b6dplou().b[23][1]++, ROUTE_COLORS[index % ROUTE_COLORS.length]),
            fillOpacity: 1,
            strokeColor: '#ffffff',
            strokeWeight: 2
          }
        }
      }));
      /* istanbul ignore next */
      cov_144b6dplou().s[62]++;
      services.push(service);
      /* istanbul ignore next */
      cov_144b6dplou().s[63]++;
      renderers.push(renderer);
    });
    /* istanbul ignore next */
    cov_144b6dplou().s[64]++;
    setDirectionsServices(services);
    /* istanbul ignore next */
    cov_144b6dplou().s[65]++;
    setDirectionsRenderers(renderers);
    // Cleanup
    /* istanbul ignore next */
    cov_144b6dplou().s[66]++;
    return () => {
      /* istanbul ignore next */
      cov_144b6dplou().f[11]++;
      cov_144b6dplou().s[67]++;
      renderers.forEach(renderer => {
        /* istanbul ignore next */
        cov_144b6dplou().f[12]++;
        cov_144b6dplou().s[68]++;
        return renderer.setMap(null);
      });
    };
  }, [map, displayRoutes]);
  // Calcular rutas con Directions API
  const calculateRoutes =
  /* istanbul ignore next */
  (cov_144b6dplou().s[69]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_144b6dplou().f[13]++;
    cov_144b6dplou().s[70]++;
    if (
    /* istanbul ignore next */
    (cov_144b6dplou().b[25][0]++, !map) ||
    /* istanbul ignore next */
    (cov_144b6dplou().b[25][1]++, directionsServices.length === 0)) {
      /* istanbul ignore next */
      cov_144b6dplou().b[24][0]++;
      cov_144b6dplou().s[71]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_144b6dplou().b[24][1]++;
    }
    cov_144b6dplou().s[72]++;
    setIsCalculating(true);
    const newResults =
    /* istanbul ignore next */
    (cov_144b6dplou().s[73]++, new Map());
    /* istanbul ignore next */
    cov_144b6dplou().s[74]++;
    try {
      /* istanbul ignore next */
      cov_144b6dplou().s[75]++;
      for (let i =
      /* istanbul ignore next */
      (cov_144b6dplou().s[76]++, 0); i < displayRoutes.length; i++) {
        const route =
        /* istanbul ignore next */
        (cov_144b6dplou().s[77]++, displayRoutes[i]);
        const service =
        /* istanbul ignore next */
        (cov_144b6dplou().s[78]++, directionsServices[i]);
        const renderer =
        /* istanbul ignore next */
        (cov_144b6dplou().s[79]++, directionsRenderers[i]);
        /* istanbul ignore next */
        cov_144b6dplou().s[80]++;
        if (route.waypoints.length < 2) {
          /* istanbul ignore next */
          cov_144b6dplou().b[26][0]++;
          cov_144b6dplou().s[81]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_144b6dplou().b[26][1]++;
        }
        // Configurar request para Directions API
        const origin =
        /* istanbul ignore next */
        (cov_144b6dplou().s[82]++, route.waypoints[0]);
        const destination =
        /* istanbul ignore next */
        (cov_144b6dplou().s[83]++, route.waypoints[route.waypoints.length - 1]);
        const waypoints =
        /* istanbul ignore next */
        (cov_144b6dplou().s[84]++, route.waypoints.slice(1, -1).map(point => {
          /* istanbul ignore next */
          cov_144b6dplou().f[14]++;
          cov_144b6dplou().s[85]++;
          return {
            location: new google.maps.LatLng(point.lat, point.lng),
            stopover: true
          };
        }));
        const request =
        /* istanbul ignore next */
        (cov_144b6dplou().s[86]++, {
          origin: new google.maps.LatLng(origin.lat, origin.lng),
          destination: new google.maps.LatLng(destination.lat, destination.lng),
          waypoints: waypoints,
          optimizeWaypoints: false,
          travelMode: google.maps.TravelMode.DRIVING,
          unitSystem: google.maps.UnitSystem.METRIC,
          avoidHighways: false,
          avoidTolls: false
        });
        /* istanbul ignore next */
        cov_144b6dplou().s[87]++;
        try {
          const result =
          /* istanbul ignore next */
          (cov_144b6dplou().s[88]++, await new Promise((resolve, reject) => {
            /* istanbul ignore next */
            cov_144b6dplou().f[15]++;
            cov_144b6dplou().s[89]++;
            service.route(request, (result, status) => {
              /* istanbul ignore next */
              cov_144b6dplou().f[16]++;
              cov_144b6dplou().s[90]++;
              if (
              /* istanbul ignore next */
              (cov_144b6dplou().b[28][0]++, status === google.maps.DirectionsStatus.OK) &&
              /* istanbul ignore next */
              (cov_144b6dplou().b[28][1]++, result)) {
                /* istanbul ignore next */
                cov_144b6dplou().b[27][0]++;
                cov_144b6dplou().s[91]++;
                resolve(result);
              } else {
                /* istanbul ignore next */
                cov_144b6dplou().b[27][1]++;
                cov_144b6dplou().s[92]++;
                reject(new Error(`Directions request failed: ${status}`));
              }
            });
          }));
          /* istanbul ignore next */
          cov_144b6dplou().s[93]++;
          newResults.set(route.id, result);
          // Mostrar ruta si está visible
          /* istanbul ignore next */
          cov_144b6dplou().s[94]++;
          if (
          /* istanbul ignore next */
          (cov_144b6dplou().b[30][0]++, visibleRoutes.has(route.id)) ||
          /* istanbul ignore next */
          (cov_144b6dplou().b[30][1]++, visibleRoutes.size === 0)) {
            /* istanbul ignore next */
            cov_144b6dplou().b[29][0]++;
            cov_144b6dplou().s[95]++;
            renderer.setDirections(result);
          } else
          /* istanbul ignore next */
          {
            cov_144b6dplou().b[29][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_144b6dplou().s[96]++;
          console.error(`Error calculando ruta ${route.name}:`, error);
        }
      }
      /* istanbul ignore next */
      cov_144b6dplou().s[97]++;
      setRouteResults(newResults);
    } catch (error) {
      /* istanbul ignore next */
      cov_144b6dplou().s[98]++;
      console.error('Error calculando rutas:', error);
    } finally {
      /* istanbul ignore next */
      cov_144b6dplou().s[99]++;
      setIsCalculating(false);
    }
  }, [map, displayRoutes, directionsServices, directionsRenderers, visibleRoutes]));
  // Calcular rutas cuando cambien los datos
  /* istanbul ignore next */
  cov_144b6dplou().s[100]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_144b6dplou().f[17]++;
    cov_144b6dplou().s[101]++;
    if (displayRoutes.length > 0) {
      /* istanbul ignore next */
      cov_144b6dplou().b[31][0]++;
      cov_144b6dplou().s[102]++;
      calculateRoutes();
    } else
    /* istanbul ignore next */
    {
      cov_144b6dplou().b[31][1]++;
    }
  }, [calculateRoutes]);
  // Manejar visibilidad de rutas
  const toggleRouteVisibility =
  /* istanbul ignore next */
  (cov_144b6dplou().s[103]++, (0, _react.useCallback)(routeId => {
    /* istanbul ignore next */
    cov_144b6dplou().f[18]++;
    const newVisibleRoutes =
    /* istanbul ignore next */
    (cov_144b6dplou().s[104]++, new Set(visibleRoutes));
    /* istanbul ignore next */
    cov_144b6dplou().s[105]++;
    if (newVisibleRoutes.has(routeId)) {
      /* istanbul ignore next */
      cov_144b6dplou().b[32][0]++;
      cov_144b6dplou().s[106]++;
      newVisibleRoutes.delete(routeId);
    } else {
      /* istanbul ignore next */
      cov_144b6dplou().b[32][1]++;
      cov_144b6dplou().s[107]++;
      newVisibleRoutes.add(routeId);
    }
    /* istanbul ignore next */
    cov_144b6dplou().s[108]++;
    setVisibleRoutes(newVisibleRoutes);
    // Actualizar renderers
    /* istanbul ignore next */
    cov_144b6dplou().s[109]++;
    displayRoutes.forEach((route, index) => {
      /* istanbul ignore next */
      cov_144b6dplou().f[19]++;
      const renderer =
      /* istanbul ignore next */
      (cov_144b6dplou().s[110]++, directionsRenderers[index]);
      const result =
      /* istanbul ignore next */
      (cov_144b6dplou().s[111]++, routeResults.get(route.id));
      /* istanbul ignore next */
      cov_144b6dplou().s[112]++;
      if (
      /* istanbul ignore next */
      (cov_144b6dplou().b[34][0]++, result) &&
      /* istanbul ignore next */
      (cov_144b6dplou().b[34][1]++, renderer)) {
        /* istanbul ignore next */
        cov_144b6dplou().b[33][0]++;
        cov_144b6dplou().s[113]++;
        if (newVisibleRoutes.has(route.id)) {
          /* istanbul ignore next */
          cov_144b6dplou().b[35][0]++;
          cov_144b6dplou().s[114]++;
          renderer.setDirections(result);
        } else {
          /* istanbul ignore next */
          cov_144b6dplou().b[35][1]++;
          cov_144b6dplou().s[115]++;
          renderer.setDirections(null);
        }
      } else
      /* istanbul ignore next */
      {
        cov_144b6dplou().b[33][1]++;
      }
    });
  }, [visibleRoutes, displayRoutes, directionsRenderers, routeResults]));
  // Mostrar/ocultar todas las rutas
  const toggleAllRoutes =
  /* istanbul ignore next */
  (cov_144b6dplou().s[116]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_144b6dplou().f[20]++;
    cov_144b6dplou().s[117]++;
    if (visibleRoutes.size === displayRoutes.length) {
      /* istanbul ignore next */
      cov_144b6dplou().b[36][0]++;
      cov_144b6dplou().s[118]++;
      // Ocultar todas
      setVisibleRoutes(new Set());
      /* istanbul ignore next */
      cov_144b6dplou().s[119]++;
      directionsRenderers.forEach(renderer => {
        /* istanbul ignore next */
        cov_144b6dplou().f[21]++;
        cov_144b6dplou().s[120]++;
        return renderer.setDirections(null);
      });
    } else {
      /* istanbul ignore next */
      cov_144b6dplou().b[36][1]++;
      // Mostrar todas
      const allRouteIds =
      /* istanbul ignore next */
      (cov_144b6dplou().s[121]++, new Set(displayRoutes.map(r => {
        /* istanbul ignore next */
        cov_144b6dplou().f[22]++;
        cov_144b6dplou().s[122]++;
        return r.id;
      })));
      /* istanbul ignore next */
      cov_144b6dplou().s[123]++;
      setVisibleRoutes(allRouteIds);
      /* istanbul ignore next */
      cov_144b6dplou().s[124]++;
      displayRoutes.forEach((route, index) => {
        /* istanbul ignore next */
        cov_144b6dplou().f[23]++;
        const renderer =
        /* istanbul ignore next */
        (cov_144b6dplou().s[125]++, directionsRenderers[index]);
        const result =
        /* istanbul ignore next */
        (cov_144b6dplou().s[126]++, routeResults.get(route.id));
        /* istanbul ignore next */
        cov_144b6dplou().s[127]++;
        if (
        /* istanbul ignore next */
        (cov_144b6dplou().b[38][0]++, result) &&
        /* istanbul ignore next */
        (cov_144b6dplou().b[38][1]++, renderer)) {
          /* istanbul ignore next */
          cov_144b6dplou().b[37][0]++;
          cov_144b6dplou().s[128]++;
          renderer.setDirections(result);
        } else
        /* istanbul ignore next */
        {
          cov_144b6dplou().b[37][1]++;
        }
      });
    }
  }, [visibleRoutes, displayRoutes, directionsRenderers, routeResults]));
  // Centrar mapa en ruta específica
  const centerOnRoute =
  /* istanbul ignore next */
  (cov_144b6dplou().s[129]++, (0, _react.useCallback)(routeId => {
    /* istanbul ignore next */
    cov_144b6dplou().f[24]++;
    const route =
    /* istanbul ignore next */
    (cov_144b6dplou().s[130]++, displayRoutes.find(r => {
      /* istanbul ignore next */
      cov_144b6dplou().f[25]++;
      cov_144b6dplou().s[131]++;
      return r.id === routeId;
    }));
    const result =
    /* istanbul ignore next */
    (cov_144b6dplou().s[132]++, routeResults.get(routeId));
    /* istanbul ignore next */
    cov_144b6dplou().s[133]++;
    if (
    /* istanbul ignore next */
    (cov_144b6dplou().b[40][0]++, route) &&
    /* istanbul ignore next */
    (cov_144b6dplou().b[40][1]++, result) &&
    /* istanbul ignore next */
    (cov_144b6dplou().b[40][2]++, map)) {
      /* istanbul ignore next */
      cov_144b6dplou().b[39][0]++;
      const bounds =
      /* istanbul ignore next */
      (cov_144b6dplou().s[134]++, new google.maps.LatLngBounds());
      /* istanbul ignore next */
      cov_144b6dplou().s[135]++;
      result.routes[0].legs.forEach(leg => {
        /* istanbul ignore next */
        cov_144b6dplou().f[26]++;
        cov_144b6dplou().s[136]++;
        bounds.extend(leg.start_location);
        /* istanbul ignore next */
        cov_144b6dplou().s[137]++;
        bounds.extend(leg.end_location);
      });
      /* istanbul ignore next */
      cov_144b6dplou().s[138]++;
      map.fitBounds(bounds);
      /* istanbul ignore next */
      cov_144b6dplou().s[139]++;
      onRouteSelect?.(routeId);
    } else
    /* istanbul ignore next */
    {
      cov_144b6dplou().b[39][1]++;
    }
  }, [displayRoutes, routeResults, map, onRouteSelect]));
  // Calcular métricas totales
  const totalMetrics =
  /* istanbul ignore next */
  (cov_144b6dplou().s[140]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_144b6dplou().f[27]++;
    const visibleRouteData =
    /* istanbul ignore next */
    (cov_144b6dplou().s[141]++, displayRoutes.filter(r => {
      /* istanbul ignore next */
      cov_144b6dplou().f[28]++;
      cov_144b6dplou().s[142]++;
      return /* istanbul ignore next */(cov_144b6dplou().b[41][0]++, visibleRoutes.has(r.id)) ||
      /* istanbul ignore next */
      (cov_144b6dplou().b[41][1]++, visibleRoutes.size === 0);
    }));
    /* istanbul ignore next */
    cov_144b6dplou().s[143]++;
    return {
      totalDistance: visibleRouteData.reduce((sum, r) => {
        /* istanbul ignore next */
        cov_144b6dplou().f[29]++;
        cov_144b6dplou().s[144]++;
        return sum + r.total_distance;
      }, 0),
      totalTime: visibleRouteData.reduce((sum, r) => {
        /* istanbul ignore next */
        cov_144b6dplou().f[30]++;
        cov_144b6dplou().s[145]++;
        return sum + r.estimated_time;
      }, 0),
      totalShipments: visibleRouteData.reduce((sum, r) => {
        /* istanbul ignore next */
        cov_144b6dplou().f[31]++;
        cov_144b6dplou().s[146]++;
        return sum + r.shipments.length;
      }, 0),
      avgScore: visibleRouteData.length > 0 ?
      /* istanbul ignore next */
      (cov_144b6dplou().b[42][0]++, visibleRouteData.reduce((sum, r) => {
        /* istanbul ignore next */
        cov_144b6dplou().f[32]++;
        cov_144b6dplou().s[147]++;
        return sum + r.optimization_score;
      }, 0) / visibleRouteData.length) :
      /* istanbul ignore next */
      (cov_144b6dplou().b[42][1]++, 0)
    };
  }, [displayRoutes, visibleRoutes]));
  /* istanbul ignore next */
  cov_144b6dplou().s[148]++;
  if (displayRoutes.length === 0) {
    /* istanbul ignore next */
    cov_144b6dplou().b[43][0]++;
    cov_144b6dplou().s[149]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(_card.Card, {
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
        className: "flex items-center justify-center h-64",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "text-center space-y-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Navigation, {
            className: "w-12 h-12 text-gray-400 mx-auto"
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
              className: "text-lg font-semibold",
              children: "No hay rutas para mostrar"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-gray-600 mt-2",
              children: "Optimiza rutas para ver la visualizaci\xf3n en el mapa."
            })]
          })]
        })
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_144b6dplou().b[43][1]++;
  }
  cov_144b6dplou().s[150]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "space-y-4",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "grid grid-cols-2 md:grid-cols-4 gap-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.Card, {
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
          className: "p-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center gap-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.MapPin, {
              className: "w-4 h-4 text-blue-600"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-sm font-medium",
              children: "Distancia Total"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
            className: "text-2xl font-bold text-blue-600",
            children: [totalMetrics.totalDistance.toFixed(1), " km"]
          })]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.Card, {
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
          className: "p-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center gap-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Clock, {
              className: "w-4 h-4 text-green-600"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-sm font-medium",
              children: "Tiempo Total"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
            className: "text-2xl font-bold text-green-600",
            children: [Math.round(totalMetrics.totalTime / 60), "h ", totalMetrics.totalTime % 60, "m"]
          })]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.Card, {
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
          className: "p-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center gap-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Truck, {
              className: "w-4 h-4 text-purple-600"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-sm font-medium",
              children: "Env\xedos"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-2xl font-bold text-purple-600",
            children: totalMetrics.totalShipments
          })]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.Card, {
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
          className: "p-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center gap-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.TrendingUp, {
              className: "w-4 h-4 text-orange-600"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-sm font-medium",
              children: "Score Promedio"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
            className: "text-2xl font-bold text-orange-600",
            children: [totalMetrics.avgScore.toFixed(0), "%"]
          })]
        })
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center justify-between",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardTitle, {
            className: "flex items-center gap-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Navigation, {
              className: "w-5 h-5"
            }), "Control de Rutas",
            /* istanbul ignore next */
            (cov_144b6dplou().b[44][0]++, isCalculating) &&
            /* istanbul ignore next */
            (cov_144b6dplou().b[44][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
              variant: "outline",
              className: "ml-2",
              children: "Calculando..."
            }))]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
            onClick: toggleAllRoutes,
            variant: "outline",
            size: "sm",
            className: "flex items-center gap-2",
            children: visibleRoutes.size === displayRoutes.length ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_144b6dplou().b[45][0]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.EyeOff, {
                className: "w-4 h-4"
              }), "Ocultar Todas"]
            })) :
            /* istanbul ignore next */
            (/*#__PURE__*/cov_144b6dplou().b[45][1]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Eye, {
                className: "w-4 h-4"
              }), "Mostrar Todas"]
            }))
          })]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "space-y-3",
          children: displayRoutes.map((route, index) => {
            /* istanbul ignore next */
            cov_144b6dplou().f[33]++;
            const isVisible =
            /* istanbul ignore next */
            (cov_144b6dplou().s[151]++,
            /* istanbul ignore next */
            (cov_144b6dplou().b[46][0]++, visibleRoutes.has(route.id)) ||
            /* istanbul ignore next */
            (cov_144b6dplou().b[46][1]++, visibleRoutes.size === 0));
            const color =
            /* istanbul ignore next */
            (cov_144b6dplou().s[152]++,
            /* istanbul ignore next */
            (cov_144b6dplou().b[47][0]++, STATUS_COLORS[route.status]) ||
            /* istanbul ignore next */
            (cov_144b6dplou().b[47][1]++, ROUTE_COLORS[index % ROUTE_COLORS.length]));
            /* istanbul ignore next */
            cov_144b6dplou().s[153]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center justify-between p-3 border rounded-lg hover:bg-gray-50",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center gap-3",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "w-4 h-4 rounded-full border-2 border-white shadow-sm",
                  style: {
                    backgroundColor: color
                  }
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
                    className: "font-medium",
                    children: route.name
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                    className: "text-sm text-gray-600",
                    children: [route.shipments.length, " env\xedos • ", route.total_distance, " km • ", Math.round(route.estimated_time / 60), "h"]
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                  className: `ml-2 ${route.status === 'planned' ?
                  /* istanbul ignore next */
                  (cov_144b6dplou().b[48][0]++, 'bg-blue-100 text-blue-800') :
                  /* istanbul ignore next */
                  (cov_144b6dplou().b[48][1]++, route.status === 'active' ?
                  /* istanbul ignore next */
                  (cov_144b6dplou().b[49][0]++, 'bg-green-100 text-green-800') :
                  /* istanbul ignore next */
                  (cov_144b6dplou().b[49][1]++, 'bg-gray-100 text-gray-800'))}`,
                  children: route.status === 'planned' ?
                  /* istanbul ignore next */
                  (cov_144b6dplou().b[50][0]++, 'Planificada') :
                  /* istanbul ignore next */
                  (cov_144b6dplou().b[50][1]++, route.status === 'active' ?
                  /* istanbul ignore next */
                  (cov_144b6dplou().b[51][0]++, 'Activa') :
                  /* istanbul ignore next */
                  (cov_144b6dplou().b[51][1]++, 'Completada'))
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center gap-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
                  onClick: () => {
                    /* istanbul ignore next */
                    cov_144b6dplou().f[34]++;
                    cov_144b6dplou().s[154]++;
                    return centerOnRoute(route.id);
                  },
                  variant: "outline",
                  size: "sm",
                  className: "flex items-center gap-1",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Navigation, {
                    className: "w-4 h-4"
                  }), "Centrar"]
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                  onClick: () => {
                    /* istanbul ignore next */
                    cov_144b6dplou().f[35]++;
                    cov_144b6dplou().s[155]++;
                    return toggleRouteVisibility(route.id);
                  },
                  variant: isVisible ?
                  /* istanbul ignore next */
                  (cov_144b6dplou().b[52][0]++, "default") :
                  /* istanbul ignore next */
                  (cov_144b6dplou().b[52][1]++, "outline"),
                  size: "sm",
                  className: "flex items-center gap-1",
                  children: isVisible ?
                  /* istanbul ignore next */
                  (/*#__PURE__*/cov_144b6dplou().b[53][0]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Eye, {
                      className: "w-4 h-4"
                    }), "Visible"]
                  })) :
                  /* istanbul ignore next */
                  (/*#__PURE__*/cov_144b6dplou().b[53][1]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.EyeOff, {
                      className: "w-4 h-4"
                    }), "Oculta"]
                  }))
                })]
              })]
            }, route.id);
          })
        })
      })]
    })]
  });
}
const _default =
/* istanbul ignore next */
(cov_144b6dplou().s[156]++, RouteVisualization);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,