f515836f38d55da820f8c2fcf02c8389
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_ulew4kg14() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\test-screenshots\\route.ts";
  var hash = "bb393904f86cb27cff3def26b960d4e999d88937";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\test-screenshots\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 22
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 20
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 23
        }
      },
      "8": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "9": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 41
        }
      },
      "10": {
        start: {
          line: 28,
          column: 32
        },
        end: {
          line: 28,
          column: 85
        }
      },
      "11": {
        start: {
          line: 29,
          column: 28
        },
        end: {
          line: 29,
          column: 69
        }
      },
      "12": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "13": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 24
        }
      },
      "14": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "15": {
        start: {
          line: 38,
          column: 21
        },
        end: {
          line: 38,
          column: 41
        }
      },
      "16": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "17": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 46,
          column: 15
        }
      },
      "18": {
        start: {
          line: 49,
          column: 31
        },
        end: {
          line: 49,
          column: 94
        }
      },
      "19": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 52,
          column: 11
        }
      },
      "20": {
        start: {
          line: 54,
          column: 26
        },
        end: {
          line: 54,
          column: 72
        }
      },
      "21": {
        start: {
          line: 55,
          column: 25
        },
        end: {
          line: 55,
          column: 70
        }
      },
      "22": {
        start: {
          line: 56,
          column: 25
        },
        end: {
          line: 56,
          column: 69
        }
      },
      "23": {
        start: {
          line: 57,
          column: 25
        },
        end: {
          line: 57,
          column: 69
        }
      },
      "24": {
        start: {
          line: 59,
          column: 24
        },
        end: {
          line: 61,
          column: 10
        }
      },
      "25": {
        start: {
          line: 62,
          column: 21
        },
        end: {
          line: 67,
          column: 10
        }
      },
      "26": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "27": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 72,
          column: 15
        }
      },
      "28": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 44
        }
      },
      "29": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 80,
          column: 13
        }
      },
      "30": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 79,
          column: 19
        }
      },
      "31": {
        start: {
          line: 82,
          column: 38
        },
        end: {
          line: 86,
          column: 13
        }
      },
      "32": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 53
        }
      },
      "33": {
        start: {
          line: 89,
          column: 26
        },
        end: {
          line: 89,
          column: 64
        }
      },
      "34": {
        start: {
          line: 90,
          column: 31
        },
        end: {
          line: 101,
          column: 13
        }
      },
      "35": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 84
        }
      },
      "36": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 106,
          column: 15
        }
      },
      "37": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 34
        }
      },
      "38": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 61
        }
      },
      "39": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 117,
          column: 11
        }
      },
      "40": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 158,
          column: 5
        }
      },
      "41": {
        start: {
          line: 122,
          column: 31
        },
        end: {
          line: 122,
          column: 94
        }
      },
      "42": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "43": {
        start: {
          line: 124,
          column: 26
        },
        end: {
          line: 124,
          column: 73
        }
      },
      "44": {
        start: {
          line: 125,
          column: 32
        },
        end: {
          line: 125,
          column: 34
        }
      },
      "45": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 138,
          column: 13
        }
      },
      "46": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 137,
          column: 17
        }
      },
      "47": {
        start: {
          line: 128,
          column: 37
        },
        end: {
          line: 128,
          column: 77
        }
      },
      "48": {
        start: {
          line: 129,
          column: 34
        },
        end: {
          line: 129,
          column: 72
        }
      },
      "49": {
        start: {
          line: 130,
          column: 20
        },
        end: {
          line: 136,
          column: 23
        }
      },
      "50": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 142,
          column: 15
        }
      },
      "51": {
        start: {
          line: 141,
          column: 54
        },
        end: {
          line: 141,
          column: 115
        }
      },
      "52": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 148,
          column: 15
        }
      },
      "53": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 60
        }
      },
      "54": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 157,
          column: 11
        }
      },
      "55": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 219,
          column: 5
        }
      },
      "56": {
        start: {
          line: 162,
          column: 33
        },
        end: {
          line: 162,
          column: 53
        }
      },
      "57": {
        start: {
          line: 163,
          column: 26
        },
        end: {
          line: 163,
          column: 55
        }
      },
      "58": {
        start: {
          line: 165,
          column: 24
        },
        end: {
          line: 165,
          column: 51
        }
      },
      "59": {
        start: {
          line: 167,
          column: 31
        },
        end: {
          line: 167,
          column: 94
        }
      },
      "60": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 210,
          column: 9
        }
      },
      "61": {
        start: {
          line: 169,
          column: 26
        },
        end: {
          line: 169,
          column: 73
        }
      },
      "62": {
        start: {
          line: 170,
          column: 31
        },
        end: {
          line: 170,
          column: 32
        }
      },
      "63": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 198,
          column: 13
        }
      },
      "64": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 174,
          column: 17
        }
      },
      "65": {
        start: {
          line: 173,
          column: 20
        },
        end: {
          line: 173,
          column: 29
        }
      },
      "66": {
        start: {
          line: 175,
          column: 35
        },
        end: {
          line: 175,
          column: 40
        }
      },
      "67": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 179,
          column: 17
        }
      },
      "68": {
        start: {
          line: 178,
          column: 20
        },
        end: {
          line: 178,
          column: 29
        }
      },
      "69": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 191,
          column: 17
        }
      },
      "70": {
        start: {
          line: 182,
          column: 37
        },
        end: {
          line: 182,
          column: 77
        }
      },
      "71": {
        start: {
          line: 183,
          column: 34
        },
        end: {
          line: 183,
          column: 72
        }
      },
      "72": {
        start: {
          line: 184,
          column: 37
        },
        end: {
          line: 184,
          column: 92
        }
      },
      "73": {
        start: {
          line: 185,
          column: 20
        },
        end: {
          line: 187,
          column: 21
        }
      },
      "74": {
        start: {
          line: 186,
          column: 24
        },
        end: {
          line: 186,
          column: 44
        }
      },
      "75": {
        start: {
          line: 190,
          column: 20
        },
        end: {
          line: 190,
          column: 40
        }
      },
      "76": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 197,
          column: 17
        }
      },
      "77": {
        start: {
          line: 193,
          column: 37
        },
        end: {
          line: 193,
          column: 77
        }
      },
      "78": {
        start: {
          line: 194,
          column: 20
        },
        end: {
          line: 194,
          column: 61
        }
      },
      "79": {
        start: {
          line: 195,
          column: 20
        },
        end: {
          line: 195,
          column: 35
        }
      },
      "80": {
        start: {
          line: 196,
          column: 20
        },
        end: {
          line: 196,
          column: 69
        }
      },
      "81": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 203,
          column: 15
        }
      },
      "82": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 209,
          column: 15
        }
      },
      "83": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 62
        }
      },
      "84": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 218,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 30,
            column: 33
          }
        },
        loc: {
          start: {
            line: 30,
            column: 39
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 30
      },
      "6": {
        name: "POST",
        decl: {
          start: {
            line: 36,
            column: 15
          },
          end: {
            line: 36,
            column: 19
          }
        },
        loc: {
          start: {
            line: 36,
            column: 29
          },
          end: {
            line: 119,
            column: 1
          }
        },
        line: 36
      },
      "7": {
        name: "GET",
        decl: {
          start: {
            line: 120,
            column: 15
          },
          end: {
            line: 120,
            column: 18
          }
        },
        loc: {
          start: {
            line: 120,
            column: 28
          },
          end: {
            line: 159,
            column: 1
          }
        },
        line: 120
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 141,
            column: 46
          },
          end: {
            line: 141,
            column: 47
          }
        },
        loc: {
          start: {
            line: 141,
            column: 54
          },
          end: {
            line: 141,
            column: 115
          }
        },
        line: 141
      },
      "9": {
        name: "DELETE",
        decl: {
          start: {
            line: 160,
            column: 15
          },
          end: {
            line: 160,
            column: 21
          }
        },
        loc: {
          start: {
            line: 160,
            column: 31
          },
          end: {
            line: 220,
            column: 1
          }
        },
        line: 160
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 11
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 31,
            column: 35
          },
          end: {
            line: 31,
            column: 38
          }
        }, {
          start: {
            line: 31,
            column: 41
          },
          end: {
            line: 33,
            column: 5
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 11
          },
          end: {
            line: 31,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 11
          },
          end: {
            line: 31,
            column: 14
          }
        }, {
          start: {
            line: 31,
            column: 18
          },
          end: {
            line: 31,
            column: 32
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "3": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 21
          }
        }, {
          start: {
            line: 40,
            column: 25
          },
          end: {
            line: 40,
            column: 39
          }
        }],
        line: 40
      },
      "4": {
        loc: {
          start: {
            line: 64,
            column: 23
          },
          end: {
            line: 64,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 23
          },
          end: {
            line: 64,
            column: 33
          }
        }, {
          start: {
            line: 64,
            column: 37
          },
          end: {
            line: 64,
            column: 41
          }
        }],
        line: 64
      },
      "5": {
        loc: {
          start: {
            line: 65,
            column: 24
          },
          end: {
            line: 65,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 24
          },
          end: {
            line: 65,
            column: 35
          }
        }, {
          start: {
            line: 65,
            column: 39
          },
          end: {
            line: 65,
            column: 43
          }
        }],
        line: 65
      },
      "6": {
        loc: {
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "7": {
        loc: {
          start: {
            line: 96,
            column: 27
          },
          end: {
            line: 96,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 27
          },
          end: {
            line: 96,
            column: 37
          }
        }, {
          start: {
            line: 96,
            column: 41
          },
          end: {
            line: 96,
            column: 45
          }
        }],
        line: 96
      },
      "8": {
        loc: {
          start: {
            line: 97,
            column: 28
          },
          end: {
            line: 97,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 28
          },
          end: {
            line: 97,
            column: 39
          }
        }, {
          start: {
            line: 97,
            column: 43
          },
          end: {
            line: 97,
            column: 47
          }
        }],
        line: 97
      },
      "9": {
        loc: {
          start: {
            line: 114,
            column: 19
          },
          end: {
            line: 114,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 114,
            column: 44
          },
          end: {
            line: 114,
            column: 57
          }
        }, {
          start: {
            line: 114,
            column: 60
          },
          end: {
            line: 114,
            column: 79
          }
        }],
        line: 114
      },
      "10": {
        loc: {
          start: {
            line: 127,
            column: 16
          },
          end: {
            line: 137,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 16
          },
          end: {
            line: 137,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "11": {
        loc: {
          start: {
            line: 154,
            column: 19
          },
          end: {
            line: 154,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 154,
            column: 44
          },
          end: {
            line: 154,
            column: 57
          }
        }, {
          start: {
            line: 154,
            column: 60
          },
          end: {
            line: 154,
            column: 79
          }
        }],
        line: 154
      },
      "12": {
        loc: {
          start: {
            line: 172,
            column: 16
          },
          end: {
            line: 174,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 16
          },
          end: {
            line: 174,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "13": {
        loc: {
          start: {
            line: 177,
            column: 16
          },
          end: {
            line: 179,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 16
          },
          end: {
            line: 179,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "14": {
        loc: {
          start: {
            line: 177,
            column: 20
          },
          end: {
            line: 177,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 20
          },
          end: {
            line: 177,
            column: 27
          }
        }, {
          start: {
            line: 177,
            column: 31
          },
          end: {
            line: 177,
            column: 54
          }
        }],
        line: 177
      },
      "15": {
        loc: {
          start: {
            line: 181,
            column: 16
          },
          end: {
            line: 191,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 16
          },
          end: {
            line: 191,
            column: 17
          }
        }, {
          start: {
            line: 188,
            column: 23
          },
          end: {
            line: 191,
            column: 17
          }
        }],
        line: 181
      },
      "16": {
        loc: {
          start: {
            line: 185,
            column: 20
          },
          end: {
            line: 187,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 20
          },
          end: {
            line: 187,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "17": {
        loc: {
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 197,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 197,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "18": {
        loc: {
          start: {
            line: 215,
            column: 19
          },
          end: {
            line: 215,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 215,
            column: 44
          },
          end: {
            line: 215,
            column: 57
          }
        }, {
          start: {
            line: 215,
            column: 60
          },
          end: {
            line: 215,
            column: 79
          }
        }],
        line: 215
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\test-screenshots\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// API ENDPOINT PARA GENERAR SCREENSHOTS DE TESTING\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server'\r\nimport { chromium } from 'playwright'\r\nimport fs from 'fs/promises'\r\nimport path from 'path'\r\n\r\ninterface ScreenshotRequest {\r\n  url: string\r\n  stepName: string\r\n  description: string\r\n  selector?: string\r\n  fullPage?: boolean\r\n  width?: number\r\n  height?: number\r\n}\r\n\r\ninterface ScreenshotResponse {\r\n  success: boolean\r\n  screenshot?: {\r\n    id: string\r\n    filename: string\r\n    path: string\r\n    url: string\r\n    metadata: {\r\n      width: number\r\n      height: number\r\n      size: number\r\n      timestamp: string\r\n    }\r\n  }\r\n  error?: string\r\n}\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body: ScreenshotRequest = await request.json()\r\n    \r\n    // Validar par\xE1metros requeridos\r\n    if (!body.url || !body.stepName) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'URL y stepName son requeridos'\r\n      }, { status: 400 })\r\n    }\r\n\r\n    // Configurar directorio de screenshots\r\n    const screenshotsDir = path.join(process.cwd(), 'public', 'test-screenshots')\r\n    await fs.mkdir(screenshotsDir, { recursive: true })\r\n\r\n    // Generar nombre de archivo \xFAnico\r\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-')\r\n    const safeName = body.stepName.replace(/[^a-zA-Z0-9-_]/g, '_')\r\n    const filename = `checkout-flow-${safeName}-${timestamp}.png`\r\n    const filepath = path.join(screenshotsDir, filename)\r\n\r\n    // Lanzar browser y capturar screenshot\r\n    const browser = await chromium.launch({ headless: true })\r\n    const page = await browser.newPage({\r\n      viewport: {\r\n        width: body.width || 1920,\r\n        height: body.height || 1080\r\n      }\r\n    })\r\n\r\n    try {\r\n      // Navegar a la URL\r\n      await page.goto(body.url, { waitUntil: 'networkidle' })\r\n\r\n      // Esperar un poco para que la p\xE1gina se estabilice\r\n      await page.waitForTimeout(1000)\r\n\r\n      // Si hay un selector espec\xEDfico, esperar a que sea visible\r\n      if (body.selector) {\r\n        await page.waitForSelector(body.selector, { timeout: 10000 })\r\n      }\r\n\r\n      // Capturar screenshot\r\n      const screenshotOptions: any = {\r\n        path: filepath,\r\n        fullPage: body.fullPage !== false,\r\n        type: 'png'\r\n      }\r\n\r\n      await page.screenshot(screenshotOptions)\r\n\r\n      // Obtener informaci\xF3n del archivo\r\n      const stats = await fs.stat(filepath)\r\n      const screenshot = {\r\n        id: `${safeName}-${timestamp}`,\r\n        filename,\r\n        path: filepath,\r\n        url: `/test-screenshots/${filename}`,\r\n        metadata: {\r\n          width: body.width || 1920,\r\n          height: body.height || 1080,\r\n          size: stats.size,\r\n          timestamp: new Date().toISOString()\r\n        }\r\n      }\r\n\r\n      console.log(`\uD83D\uDCF8 Screenshot capturado: ${body.stepName} -> ${filename}`)\r\n\r\n      return NextResponse.json({\r\n        success: true,\r\n        screenshot\r\n      })\r\n\r\n    } finally {\r\n      await browser.close()\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Error capturando screenshot:', error)\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: error instanceof Error ? error.message : 'Error desconocido'\r\n    }, { status: 500 })\r\n  }\r\n}\r\n\r\n// Endpoint GET para listar screenshots existentes\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const screenshotsDir = path.join(process.cwd(), 'public', 'test-screenshots')\r\n    \r\n    try {\r\n      const files = await fs.readdir(screenshotsDir)\r\n      const screenshots = []\r\n\r\n      for (const file of files) {\r\n        if (file.endsWith('.png')) {\r\n          const filepath = path.join(screenshotsDir, file)\r\n          const stats = await fs.stat(filepath)\r\n          \r\n          screenshots.push({\r\n            filename: file,\r\n            url: `/test-screenshots/${file}`,\r\n            size: stats.size,\r\n            created: stats.birthtime.toISOString(),\r\n            modified: stats.mtime.toISOString()\r\n          })\r\n        }\r\n      }\r\n\r\n      return NextResponse.json({\r\n        success: true,\r\n        screenshots: screenshots.sort((a, b) => \r\n          new Date(b.created).getTime() - new Date(a.created).getTime()\r\n        )\r\n      })\r\n\r\n    } catch (dirError) {\r\n      // Directorio no existe, devolver lista vac\xEDa\r\n      return NextResponse.json({\r\n        success: true,\r\n        screenshots: []\r\n      })\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Error listando screenshots:', error)\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: error instanceof Error ? error.message : 'Error desconocido'\r\n    }, { status: 500 })\r\n  }\r\n}\r\n\r\n// Endpoint DELETE para limpiar screenshots antiguos\r\nexport async function DELETE(request: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(request.url)\r\n    const olderThan = searchParams.get('olderThan') // en horas\r\n    const pattern = searchParams.get('pattern') // patr\xF3n de nombre de archivo\r\n\r\n    const screenshotsDir = path.join(process.cwd(), 'public', 'test-screenshots')\r\n    \r\n    try {\r\n      const files = await fs.readdir(screenshotsDir)\r\n      let deletedCount = 0\r\n\r\n      for (const file of files) {\r\n        if (!file.endsWith('.png')) {continue}\r\n\r\n        let shouldDelete = false\r\n\r\n        // Filtrar por patr\xF3n si se especifica\r\n        if (pattern && !file.includes(pattern)) {continue}\r\n\r\n        // Filtrar por antig\xFCedad si se especifica\r\n        if (olderThan) {\r\n          const filepath = path.join(screenshotsDir, file)\r\n          const stats = await fs.stat(filepath)\r\n          const hoursOld = (Date.now() - stats.mtime.getTime()) / (1000 * 60 * 60)\r\n          \r\n          if (hoursOld > parseInt(olderThan)) {\r\n            shouldDelete = true\r\n          }\r\n        } else {\r\n          // Si no se especifica antig\xFCedad, eliminar todos los que coincidan con el patr\xF3n\r\n          shouldDelete = true\r\n        }\r\n\r\n        if (shouldDelete) {\r\n          const filepath = path.join(screenshotsDir, file)\r\n          await fs.unlink(filepath)\r\n          deletedCount++\r\n          console.log(`\uD83D\uDDD1\uFE0F Screenshot eliminado: ${file}`)\r\n        }\r\n      }\r\n\r\n      return NextResponse.json({\r\n        success: true,\r\n        deletedCount,\r\n        message: `${deletedCount} screenshots eliminados`\r\n      })\r\n\r\n    } catch (dirError) {\r\n      return NextResponse.json({\r\n        success: true,\r\n        deletedCount: 0,\r\n        message: 'Directorio de screenshots no existe'\r\n      })\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Error eliminando screenshots:', error)\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: error instanceof Error ? error.message : 'Error desconocido'\r\n    }, { status: 500 })\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["DELETE", "GET", "POST", "runtime", "request", "body", "json", "url", "stepName", "NextResponse", "success", "error", "status", "screenshotsDir", "path", "join", "process", "cwd", "fs", "mkdir", "recursive", "timestamp", "Date", "toISOString", "replace", "safeName", "filename", "filepath", "browser", "chromium", "launch", "headless", "page", "newPage", "viewport", "width", "height", "goto", "waitUntil", "waitForTimeout", "selector", "waitForSelector", "timeout", "screenshotOptions", "fullPage", "type", "screenshot", "stats", "stat", "id", "metadata", "size", "console", "log", "close", "Error", "message", "files", "readdir", "screenshots", "file", "endsWith", "push", "created", "birthtime", "modified", "mtime", "sort", "a", "b", "getTime", "dirError", "searchParams", "URL", "olderThan", "get", "pattern", "deletedCount", "shouldDelete", "includes", "hoursOld", "now", "parseInt", "unlink"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bb393904f86cb27cff3def26b960d4e999d88937"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ulew4kg14 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ulew4kg14();
cov_ulew4kg14().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_ulew4kg14().f[0]++;
  cov_ulew4kg14().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_ulew4kg14().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_ulew4kg14().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_ulew4kg14().f[1]++;
    cov_ulew4kg14().s[4]++;
    return DELETE;
  },
  get GET() {
    /* istanbul ignore next */
    cov_ulew4kg14().f[2]++;
    cov_ulew4kg14().s[5]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_ulew4kg14().f[3]++;
    cov_ulew4kg14().s[6]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_ulew4kg14().f[4]++;
    cov_ulew4kg14().s[7]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_ulew4kg14().s[8]++, require("next/server"));
const _playwright =
/* istanbul ignore next */
(cov_ulew4kg14().s[9]++, require("playwright"));
const _promises =
/* istanbul ignore next */
(/*#__PURE__*/cov_ulew4kg14().s[10]++, _interop_require_default(require("node:fs/promises")));
const _path =
/* istanbul ignore next */
(/*#__PURE__*/cov_ulew4kg14().s[11]++, _interop_require_default(require("path")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_ulew4kg14().f[5]++;
  cov_ulew4kg14().s[12]++;
  return /* istanbul ignore next */(cov_ulew4kg14().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_ulew4kg14().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_ulew4kg14().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_ulew4kg14().b[0][1]++, {
    default: obj
  });
}
const runtime =
/* istanbul ignore next */
(cov_ulew4kg14().s[13]++, 'nodejs');
async function POST(request) {
  /* istanbul ignore next */
  cov_ulew4kg14().f[6]++;
  cov_ulew4kg14().s[14]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_ulew4kg14().s[15]++, await request.json());
    // Validar parÃ¡metros requeridos
    /* istanbul ignore next */
    cov_ulew4kg14().s[16]++;
    if (
    /* istanbul ignore next */
    (cov_ulew4kg14().b[3][0]++, !body.url) ||
    /* istanbul ignore next */
    (cov_ulew4kg14().b[3][1]++, !body.stepName)) {
      /* istanbul ignore next */
      cov_ulew4kg14().b[2][0]++;
      cov_ulew4kg14().s[17]++;
      return _server.NextResponse.json({
        success: false,
        error: 'URL y stepName son requeridos'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_ulew4kg14().b[2][1]++;
    }
    // Configurar directorio de screenshots
    const screenshotsDir =
    /* istanbul ignore next */
    (cov_ulew4kg14().s[18]++, _path.default.join(process.cwd(), 'public', 'test-screenshots'));
    /* istanbul ignore next */
    cov_ulew4kg14().s[19]++;
    await _promises.default.mkdir(screenshotsDir, {
      recursive: true
    });
    // Generar nombre de archivo Ãºnico
    const timestamp =
    /* istanbul ignore next */
    (cov_ulew4kg14().s[20]++, new Date().toISOString().replace(/[:.]/g, '-'));
    const safeName =
    /* istanbul ignore next */
    (cov_ulew4kg14().s[21]++, body.stepName.replace(/[^a-zA-Z0-9-_]/g, '_'));
    const filename =
    /* istanbul ignore next */
    (cov_ulew4kg14().s[22]++, `checkout-flow-${safeName}-${timestamp}.png`);
    const filepath =
    /* istanbul ignore next */
    (cov_ulew4kg14().s[23]++, _path.default.join(screenshotsDir, filename));
    // Lanzar browser y capturar screenshot
    const browser =
    /* istanbul ignore next */
    (cov_ulew4kg14().s[24]++, await _playwright.chromium.launch({
      headless: true
    }));
    const page =
    /* istanbul ignore next */
    (cov_ulew4kg14().s[25]++, await browser.newPage({
      viewport: {
        width:
        /* istanbul ignore next */
        (cov_ulew4kg14().b[4][0]++, body.width) ||
        /* istanbul ignore next */
        (cov_ulew4kg14().b[4][1]++, 1920),
        height:
        /* istanbul ignore next */
        (cov_ulew4kg14().b[5][0]++, body.height) ||
        /* istanbul ignore next */
        (cov_ulew4kg14().b[5][1]++, 1080)
      }
    }));
    /* istanbul ignore next */
    cov_ulew4kg14().s[26]++;
    try {
      /* istanbul ignore next */
      cov_ulew4kg14().s[27]++;
      // Navegar a la URL
      await page.goto(body.url, {
        waitUntil: 'networkidle'
      });
      // Esperar un poco para que la pÃ¡gina se estabilice
      /* istanbul ignore next */
      cov_ulew4kg14().s[28]++;
      await page.waitForTimeout(1000);
      // Si hay un selector especÃ­fico, esperar a que sea visible
      /* istanbul ignore next */
      cov_ulew4kg14().s[29]++;
      if (body.selector) {
        /* istanbul ignore next */
        cov_ulew4kg14().b[6][0]++;
        cov_ulew4kg14().s[30]++;
        await page.waitForSelector(body.selector, {
          timeout: 10000
        });
      } else
      /* istanbul ignore next */
      {
        cov_ulew4kg14().b[6][1]++;
      }
      // Capturar screenshot
      const screenshotOptions =
      /* istanbul ignore next */
      (cov_ulew4kg14().s[31]++, {
        path: filepath,
        fullPage: body.fullPage !== false,
        type: 'png'
      });
      /* istanbul ignore next */
      cov_ulew4kg14().s[32]++;
      await page.screenshot(screenshotOptions);
      // Obtener informaciÃ³n del archivo
      const stats =
      /* istanbul ignore next */
      (cov_ulew4kg14().s[33]++, await _promises.default.stat(filepath));
      const screenshot =
      /* istanbul ignore next */
      (cov_ulew4kg14().s[34]++, {
        id: `${safeName}-${timestamp}`,
        filename,
        path: filepath,
        url: `/test-screenshots/${filename}`,
        metadata: {
          width:
          /* istanbul ignore next */
          (cov_ulew4kg14().b[7][0]++, body.width) ||
          /* istanbul ignore next */
          (cov_ulew4kg14().b[7][1]++, 1920),
          height:
          /* istanbul ignore next */
          (cov_ulew4kg14().b[8][0]++, body.height) ||
          /* istanbul ignore next */
          (cov_ulew4kg14().b[8][1]++, 1080),
          size: stats.size,
          timestamp: new Date().toISOString()
        }
      });
      /* istanbul ignore next */
      cov_ulew4kg14().s[35]++;
      console.log(`ğ¸ Screenshot capturado: ${body.stepName} -> ${filename}`);
      /* istanbul ignore next */
      cov_ulew4kg14().s[36]++;
      return _server.NextResponse.json({
        success: true,
        screenshot
      });
    } finally {
      /* istanbul ignore next */
      cov_ulew4kg14().s[37]++;
      await browser.close();
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_ulew4kg14().s[38]++;
    console.error('Error capturando screenshot:', error);
    /* istanbul ignore next */
    cov_ulew4kg14().s[39]++;
    return _server.NextResponse.json({
      success: false,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_ulew4kg14().b[9][0]++, error.message) :
      /* istanbul ignore next */
      (cov_ulew4kg14().b[9][1]++, 'Error desconocido')
    }, {
      status: 500
    });
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_ulew4kg14().f[7]++;
  cov_ulew4kg14().s[40]++;
  try {
    const screenshotsDir =
    /* istanbul ignore next */
    (cov_ulew4kg14().s[41]++, _path.default.join(process.cwd(), 'public', 'test-screenshots'));
    /* istanbul ignore next */
    cov_ulew4kg14().s[42]++;
    try {
      const files =
      /* istanbul ignore next */
      (cov_ulew4kg14().s[43]++, await _promises.default.readdir(screenshotsDir));
      const screenshots =
      /* istanbul ignore next */
      (cov_ulew4kg14().s[44]++, []);
      /* istanbul ignore next */
      cov_ulew4kg14().s[45]++;
      for (const file of files) {
        /* istanbul ignore next */
        cov_ulew4kg14().s[46]++;
        if (file.endsWith('.png')) {
          /* istanbul ignore next */
          cov_ulew4kg14().b[10][0]++;
          const filepath =
          /* istanbul ignore next */
          (cov_ulew4kg14().s[47]++, _path.default.join(screenshotsDir, file));
          const stats =
          /* istanbul ignore next */
          (cov_ulew4kg14().s[48]++, await _promises.default.stat(filepath));
          /* istanbul ignore next */
          cov_ulew4kg14().s[49]++;
          screenshots.push({
            filename: file,
            url: `/test-screenshots/${file}`,
            size: stats.size,
            created: stats.birthtime.toISOString(),
            modified: stats.mtime.toISOString()
          });
        } else
        /* istanbul ignore next */
        {
          cov_ulew4kg14().b[10][1]++;
        }
      }
      /* istanbul ignore next */
      cov_ulew4kg14().s[50]++;
      return _server.NextResponse.json({
        success: true,
        screenshots: screenshots.sort((a, b) => {
          /* istanbul ignore next */
          cov_ulew4kg14().f[8]++;
          cov_ulew4kg14().s[51]++;
          return new Date(b.created).getTime() - new Date(a.created).getTime();
        })
      });
    } catch (dirError) {
      /* istanbul ignore next */
      cov_ulew4kg14().s[52]++;
      // Directorio no existe, devolver lista vacÃ­a
      return _server.NextResponse.json({
        success: true,
        screenshots: []
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_ulew4kg14().s[53]++;
    console.error('Error listando screenshots:', error);
    /* istanbul ignore next */
    cov_ulew4kg14().s[54]++;
    return _server.NextResponse.json({
      success: false,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_ulew4kg14().b[11][0]++, error.message) :
      /* istanbul ignore next */
      (cov_ulew4kg14().b[11][1]++, 'Error desconocido')
    }, {
      status: 500
    });
  }
}
async function DELETE(request) {
  /* istanbul ignore next */
  cov_ulew4kg14().f[9]++;
  cov_ulew4kg14().s[55]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_ulew4kg14().s[56]++, new URL(request.url));
    const olderThan =
    /* istanbul ignore next */
    (cov_ulew4kg14().s[57]++, searchParams.get('olderThan')) // en horas
    ;
    const pattern =
    /* istanbul ignore next */
    (cov_ulew4kg14().s[58]++, searchParams.get('pattern')) // patrÃ³n de nombre de archivo
    ;
    const screenshotsDir =
    /* istanbul ignore next */
    (cov_ulew4kg14().s[59]++, _path.default.join(process.cwd(), 'public', 'test-screenshots'));
    /* istanbul ignore next */
    cov_ulew4kg14().s[60]++;
    try {
      const files =
      /* istanbul ignore next */
      (cov_ulew4kg14().s[61]++, await _promises.default.readdir(screenshotsDir));
      let deletedCount =
      /* istanbul ignore next */
      (cov_ulew4kg14().s[62]++, 0);
      /* istanbul ignore next */
      cov_ulew4kg14().s[63]++;
      for (const file of files) {
        /* istanbul ignore next */
        cov_ulew4kg14().s[64]++;
        if (!file.endsWith('.png')) {
          /* istanbul ignore next */
          cov_ulew4kg14().b[12][0]++;
          cov_ulew4kg14().s[65]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_ulew4kg14().b[12][1]++;
        }
        let shouldDelete =
        /* istanbul ignore next */
        (cov_ulew4kg14().s[66]++, false);
        // Filtrar por patrÃ³n si se especifica
        /* istanbul ignore next */
        cov_ulew4kg14().s[67]++;
        if (
        /* istanbul ignore next */
        (cov_ulew4kg14().b[14][0]++, pattern) &&
        /* istanbul ignore next */
        (cov_ulew4kg14().b[14][1]++, !file.includes(pattern))) {
          /* istanbul ignore next */
          cov_ulew4kg14().b[13][0]++;
          cov_ulew4kg14().s[68]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_ulew4kg14().b[13][1]++;
        }
        // Filtrar por antigÃ¼edad si se especifica
        cov_ulew4kg14().s[69]++;
        if (olderThan) {
          /* istanbul ignore next */
          cov_ulew4kg14().b[15][0]++;
          const filepath =
          /* istanbul ignore next */
          (cov_ulew4kg14().s[70]++, _path.default.join(screenshotsDir, file));
          const stats =
          /* istanbul ignore next */
          (cov_ulew4kg14().s[71]++, await _promises.default.stat(filepath));
          const hoursOld =
          /* istanbul ignore next */
          (cov_ulew4kg14().s[72]++, (Date.now() - stats.mtime.getTime()) / (1000 * 60 * 60));
          /* istanbul ignore next */
          cov_ulew4kg14().s[73]++;
          if (hoursOld > parseInt(olderThan)) {
            /* istanbul ignore next */
            cov_ulew4kg14().b[16][0]++;
            cov_ulew4kg14().s[74]++;
            shouldDelete = true;
          } else
          /* istanbul ignore next */
          {
            cov_ulew4kg14().b[16][1]++;
          }
        } else {
          /* istanbul ignore next */
          cov_ulew4kg14().b[15][1]++;
          cov_ulew4kg14().s[75]++;
          // Si no se especifica antigÃ¼edad, eliminar todos los que coincidan con el patrÃ³n
          shouldDelete = true;
        }
        /* istanbul ignore next */
        cov_ulew4kg14().s[76]++;
        if (shouldDelete) {
          /* istanbul ignore next */
          cov_ulew4kg14().b[17][0]++;
          const filepath =
          /* istanbul ignore next */
          (cov_ulew4kg14().s[77]++, _path.default.join(screenshotsDir, file));
          /* istanbul ignore next */
          cov_ulew4kg14().s[78]++;
          await _promises.default.unlink(filepath);
          /* istanbul ignore next */
          cov_ulew4kg14().s[79]++;
          deletedCount++;
          /* istanbul ignore next */
          cov_ulew4kg14().s[80]++;
          console.log(`ğï¸ Screenshot eliminado: ${file}`);
        } else
        /* istanbul ignore next */
        {
          cov_ulew4kg14().b[17][1]++;
        }
      }
      /* istanbul ignore next */
      cov_ulew4kg14().s[81]++;
      return _server.NextResponse.json({
        success: true,
        deletedCount,
        message: `${deletedCount} screenshots eliminados`
      });
    } catch (dirError) {
      /* istanbul ignore next */
      cov_ulew4kg14().s[82]++;
      return _server.NextResponse.json({
        success: true,
        deletedCount: 0,
        message: 'Directorio de screenshots no existe'
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_ulew4kg14().s[83]++;
    console.error('Error eliminando screenshots:', error);
    /* istanbul ignore next */
    cov_ulew4kg14().s[84]++;
    return _server.NextResponse.json({
      success: false,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_ulew4kg14().b[18][0]++, error.message) :
      /* istanbul ignore next */
      (cov_ulew4kg14().b[18][1]++, 'Error desconocido')
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,