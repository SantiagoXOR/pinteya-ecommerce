4614e7f51ab78ff5fe8d7e159b32b6c9
// ===================================
// PINTEYA E-COMMERCE - SECURITY LOGGER
// ===================================
"use strict";

/* istanbul ignore next */
function cov_1y1c9345is() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\security-logger.ts";
  var hash = "53c70843e144bfdac5704fcb8f5ebb6d8e61dc3c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\security-logger.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 30,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 32
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 30
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 32
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 30
        }
      },
      "9": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 46
        }
      },
      "10": {
        start: {
          line: 32,
          column: 38
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "11": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 65
        }
      },
      "12": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 65
        }
      },
      "13": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 62
        }
      },
      "14": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 69
        }
      },
      "15": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 69
        }
      },
      "16": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 53
        }
      },
      "17": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 65
        }
      },
      "18": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 71
        }
      },
      "19": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 67
        }
      },
      "20": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 73
        }
      },
      "21": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 73
        }
      },
      "22": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 53
        }
      },
      "23": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 55
        }
      },
      "24": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 69
        }
      },
      "25": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 75
        }
      },
      "26": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 49
        }
      },
      "27": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 83
        }
      },
      "28": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 67
        }
      },
      "29": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 71
        }
      },
      "30": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 29
        }
      },
      "31": {
        start: {
          line: 54,
          column: 37
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "32": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 36
        }
      },
      "33": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 42
        }
      },
      "34": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 38
        }
      },
      "35": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 46
        }
      },
      "36": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 28
        }
      },
      "37": {
        start: {
          line: 63,
          column: 27
        },
        end: {
          line: 72,
          column: 1
        }
      },
      "38": {
        start: {
          line: 75,
          column: 29
        },
        end: {
          line: 88,
          column: 1
        }
      },
      "39": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 30
        }
      },
      "40": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 95,
          column: 10
        }
      },
      "41": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 34
        }
      },
      "42": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "43": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 65
        }
      },
      "44": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 39
        }
      },
      "45": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "46": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 19
        }
      },
      "47": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "48": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 19
        }
      },
      "49": {
        start: {
          line: 114,
          column: 22
        },
        end: {
          line: 128,
          column: 9
        }
      },
      "50": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 37
        }
      },
      "51": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "52": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 37
        }
      },
      "53": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 136,
          column: 13
        }
      },
      "54": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 49
        }
      },
      "55": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 33
        }
      },
      "56": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 149,
          column: 11
        }
      },
      "57": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 160,
          column: 11
        }
      },
      "58": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 173,
          column: 11
        }
      },
      "59": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 185,
          column: 11
        }
      },
      "60": {
        start: {
          line: 190,
          column: 25
        },
        end: {
          line: 190,
          column: 117
        }
      },
      "61": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 199,
          column: 11
        }
      },
      "62": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 212,
          column: 11
        }
      },
      "63": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 227,
          column: 11
        }
      },
      "64": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 240,
          column: 11
        }
      },
      "65": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 252,
          column: 11
        }
      },
      "66": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 263,
          column: 11
        }
      },
      "67": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 277,
          column: 11
        }
      },
      "68": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 290,
          column: 11
        }
      },
      "69": {
        start: {
          line: 297,
          column: 31
        },
        end: {
          line: 302,
          column: 9
        }
      },
      "70": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 303,
          column: 80
        }
      },
      "71": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 310,
          column: 9
        }
      },
      "72": {
        start: {
          line: 309,
          column: 12
        },
        end: {
          line: 309,
          column: 27
        }
      },
      "73": {
        start: {
          line: 311,
          column: 26
        },
        end: {
          line: 313,
          column: 9
        }
      },
      "74": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 317,
          column: 9
        }
      },
      "75": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 316,
          column: 77
        }
      },
      "76": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 321,
          column: 9
        }
      },
      "77": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 320,
          column: 76
        }
      },
      "78": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "79": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 70
        }
      },
      "80": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 326,
          column: 25
        }
      },
      "81": {
        start: {
          line: 331,
          column: 23
        },
        end: {
          line: 333,
          column: 9
        }
      },
      "82": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 338,
          column: 11
        }
      },
      "83": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 337,
          column: 13
        }
      },
      "84": {
        start: {
          line: 335,
          column: 47
        },
        end: {
          line: 335,
          column: 80
        }
      },
      "85": {
        start: {
          line: 336,
          column: 16
        },
        end: {
          line: 336,
          column: 45
        }
      },
      "86": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 339,
          column: 22
        }
      },
      "87": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 346,
          column: 9
        }
      },
      "88": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 345,
          column: 77
        }
      },
      "89": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 349,
          column: 9
        }
      },
      "90": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 348,
          column: 24
        }
      },
      "91": {
        start: {
          line: 350,
          column: 23
        },
        end: {
          line: 354,
          column: 9
        }
      },
      "92": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 361,
          column: 11
        }
      },
      "93": {
        start: {
          line: 356,
          column: 12
        },
        end: {
          line: 360,
          column: 13
        }
      },
      "94": {
        start: {
          line: 356,
          column: 47
        },
        end: {
          line: 356,
          column: 80
        }
      },
      "95": {
        start: {
          line: 357,
          column: 16
        },
        end: {
          line: 357,
          column: 45
        }
      },
      "96": {
        start: {
          line: 358,
          column: 19
        },
        end: {
          line: 360,
          column: 13
        }
      },
      "97": {
        start: {
          line: 359,
          column: 16
        },
        end: {
          line: 359,
          column: 66
        }
      },
      "98": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 362,
          column: 22
        }
      },
      "99": {
        start: {
          line: 367,
          column: 32
        },
        end: {
          line: 367,
          column: 48
        }
      },
      "100": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 370,
          column: 9
        }
      },
      "101": {
        start: {
          line: 369,
          column: 12
        },
        end: {
          line: 369,
          column: 34
        }
      },
      "102": {
        start: {
          line: 371,
          column: 28
        },
        end: {
          line: 371,
          column: 84
        }
      },
      "103": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 372,
          column: 42
        }
      },
      "104": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 377,
          column: 137
        }
      },
      "105": {
        start: {
          line: 382,
          column: 25
        },
        end: {
          line: 382,
          column: 57
        }
      },
      "106": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 383,
          column: 112
        }
      },
      "107": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 399,
          column: 9
        }
      },
      "108": {
        start: {
          line: 390,
          column: 16
        },
        end: {
          line: 390,
          column: 45
        }
      },
      "109": {
        start: {
          line: 392,
          column: 16
        },
        end: {
          line: 392,
          column: 45
        }
      },
      "110": {
        start: {
          line: 394,
          column: 16
        },
        end: {
          line: 394,
          column: 46
        }
      },
      "111": {
        start: {
          line: 396,
          column: 16
        },
        end: {
          line: 396,
          column: 46
        }
      },
      "112": {
        start: {
          line: 398,
          column: 16
        },
        end: {
          line: 398,
          column: 45
        }
      },
      "113": {
        start: {
          line: 405,
          column: 8
        },
        end: {
          line: 410,
          column: 11
        }
      },
      "114": {
        start: {
          line: 415,
          column: 8
        },
        end: {
          line: 415,
          column: 78
        }
      },
      "115": {
        start: {
          line: 420,
          column: 8
        },
        end: {
          line: 422,
          column: 18
        }
      },
      "116": {
        start: {
          line: 421,
          column: 12
        },
        end: {
          line: 421,
          column: 31
        }
      },
      "117": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 429,
          column: 9
        }
      },
      "118": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 428,
          column: 19
        }
      },
      "119": {
        start: {
          line: 431,
          column: 8
        },
        end: {
          line: 433,
          column: 41
        }
      },
      "120": {
        start: {
          line: 434,
          column: 8
        },
        end: {
          line: 434,
          column: 30
        }
      },
      "121": {
        start: {
          line: 439,
          column: 33
        },
        end: {
          line: 442,
          column: 14
        }
      },
      "122": {
        start: {
          line: 440,
          column: 12
        },
        end: {
          line: 440,
          column: 65
        }
      },
      "123": {
        start: {
          line: 441,
          column: 12
        },
        end: {
          line: 441,
          column: 23
        }
      },
      "124": {
        start: {
          line: 443,
          column: 29
        },
        end: {
          line: 446,
          column: 14
        }
      },
      "125": {
        start: {
          line: 444,
          column: 12
        },
        end: {
          line: 444,
          column: 57
        }
      },
      "126": {
        start: {
          line: 445,
          column: 12
        },
        end: {
          line: 445,
          column: 23
        }
      },
      "127": {
        start: {
          line: 447,
          column: 8
        },
        end: {
          line: 452,
          column: 10
        }
      },
      "128": {
        start: {
          line: 457,
          column: 8
        },
        end: {
          line: 459,
          column: 9
        }
      },
      "129": {
        start: {
          line: 458,
          column: 12
        },
        end: {
          line: 458,
          column: 46
        }
      },
      "130": {
        start: {
          line: 460,
          column: 8
        },
        end: {
          line: 460,
          column: 27
        }
      },
      "131": {
        start: {
          line: 463,
          column: 23
        },
        end: {
          line: 463,
          column: 51
        }
      },
      "132": {
        start: {
          line: 464,
          column: 25
        },
        end: {
          line: 525,
          column: 1
        }
      },
      "133": {
        start: {
          line: 468,
          column: 24
        },
        end: {
          line: 468,
          column: 45
        }
      },
      "134": {
        start: {
          line: 469,
          column: 26
        },
        end: {
          line: 469,
          column: 53
        }
      },
      "135": {
        start: {
          line: 470,
          column: 8
        },
        end: {
          line: 481,
          column: 10
        }
      },
      "136": {
        start: {
          line: 486,
          column: 8
        },
        end: {
          line: 488,
          column: 9
        }
      },
      "137": {
        start: {
          line: 487,
          column: 12
        },
        end: {
          line: 487,
          column: 28
        }
      },
      "138": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 491,
          column: 9
        }
      },
      "139": {
        start: {
          line: 490,
          column: 12
        },
        end: {
          line: 490,
          column: 28
        }
      },
      "140": {
        start: {
          line: 492,
          column: 8
        },
        end: {
          line: 494,
          column: 9
        }
      },
      "141": {
        start: {
          line: 493,
          column: 12
        },
        end: {
          line: 493,
          column: 29
        }
      },
      "142": {
        start: {
          line: 495,
          column: 8
        },
        end: {
          line: 495,
          column: 25
        }
      },
      "143": {
        start: {
          line: 500,
          column: 8
        },
        end: {
          line: 502,
          column: 9
        }
      },
      "144": {
        start: {
          line: 501,
          column: 12
        },
        end: {
          line: 501,
          column: 28
        }
      },
      "145": {
        start: {
          line: 503,
          column: 8
        },
        end: {
          line: 505,
          column: 9
        }
      },
      "146": {
        start: {
          line: 504,
          column: 12
        },
        end: {
          line: 504,
          column: 29
        }
      },
      "147": {
        start: {
          line: 506,
          column: 8
        },
        end: {
          line: 508,
          column: 9
        }
      },
      "148": {
        start: {
          line: 507,
          column: 12
        },
        end: {
          line: 507,
          column: 28
        }
      },
      "149": {
        start: {
          line: 509,
          column: 8
        },
        end: {
          line: 511,
          column: 9
        }
      },
      "150": {
        start: {
          line: 510,
          column: 12
        },
        end: {
          line: 510,
          column: 26
        }
      },
      "151": {
        start: {
          line: 512,
          column: 8
        },
        end: {
          line: 512,
          column: 25
        }
      },
      "152": {
        start: {
          line: 517,
          column: 26
        },
        end: {
          line: 517,
          column: 28
        }
      },
      "153": {
        start: {
          line: 518,
          column: 8
        },
        end: {
          line: 522,
          column: 11
        }
      },
      "154": {
        start: {
          line: 519,
          column: 12
        },
        end: {
          line: 521,
          column: 13
        }
      },
      "155": {
        start: {
          line: 519,
          column: 48
        },
        end: {
          line: 519,
          column: 81
        }
      },
      "156": {
        start: {
          line: 520,
          column: 16
        },
        end: {
          line: 520,
          column: 54
        }
      },
      "157": {
        start: {
          line: 523,
          column: 8
        },
        end: {
          line: 523,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 29
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 26
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 32,
            column: 38
          },
          end: {
            line: 32,
            column: 39
          }
        },
        loc: {
          start: {
            line: 32,
            column: 66
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 32
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 54,
            column: 37
          },
          end: {
            line: 54,
            column: 38
          }
        },
        loc: {
          start: {
            line: 54,
            column: 64
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 54
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        loc: {
          start: {
            line: 90,
            column: 28
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 90
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        },
        loc: {
          start: {
            line: 98,
            column: 31
          },
          end: {
            line: 103,
            column: 5
          }
        },
        line: 98
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 106,
            column: 6
          },
          end: {
            line: 106,
            column: 7
          }
        },
        loc: {
          start: {
            line: 106,
            column: 89
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 106
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 145,
            column: 6
          },
          end: {
            line: 145,
            column: 7
          }
        },
        loc: {
          start: {
            line: 145,
            column: 40
          },
          end: {
            line: 150,
            column: 5
          }
        },
        line: 145
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 153,
            column: 6
          },
          end: {
            line: 153,
            column: 7
          }
        },
        loc: {
          start: {
            line: 153,
            column: 72
          },
          end: {
            line: 161,
            column: 5
          }
        },
        line: 153
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 164,
            column: 6
          },
          end: {
            line: 164,
            column: 7
          }
        },
        loc: {
          start: {
            line: 164,
            column: 56
          },
          end: {
            line: 174,
            column: 5
          }
        },
        line: 164
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 177,
            column: 6
          },
          end: {
            line: 177,
            column: 7
          }
        },
        loc: {
          start: {
            line: 177,
            column: 51
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 177
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 189,
            column: 6
          },
          end: {
            line: 189,
            column: 7
          }
        },
        loc: {
          start: {
            line: 189,
            column: 61
          },
          end: {
            line: 200,
            column: 5
          }
        },
        line: 189
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 203,
            column: 6
          },
          end: {
            line: 203,
            column: 7
          }
        },
        loc: {
          start: {
            line: 203,
            column: 56
          },
          end: {
            line: 213,
            column: 5
          }
        },
        line: 203
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 216,
            column: 6
          },
          end: {
            line: 216,
            column: 7
          }
        },
        loc: {
          start: {
            line: 216,
            column: 70
          },
          end: {
            line: 228,
            column: 5
          }
        },
        line: 216
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 231,
            column: 6
          },
          end: {
            line: 231,
            column: 7
          }
        },
        loc: {
          start: {
            line: 231,
            column: 54
          },
          end: {
            line: 241,
            column: 5
          }
        },
        line: 231
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 244,
            column: 6
          },
          end: {
            line: 244,
            column: 7
          }
        },
        loc: {
          start: {
            line: 244,
            column: 45
          },
          end: {
            line: 253,
            column: 5
          }
        },
        line: 244
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 256,
            column: 6
          },
          end: {
            line: 256,
            column: 7
          }
        },
        loc: {
          start: {
            line: 256,
            column: 38
          },
          end: {
            line: 264,
            column: 5
          }
        },
        line: 256
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 267,
            column: 6
          },
          end: {
            line: 267,
            column: 7
          }
        },
        loc: {
          start: {
            line: 267,
            column: 61
          },
          end: {
            line: 278,
            column: 5
          }
        },
        line: 267
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 281,
            column: 6
          },
          end: {
            line: 281,
            column: 7
          }
        },
        loc: {
          start: {
            line: 281,
            column: 47
          },
          end: {
            line: 291,
            column: 5
          }
        },
        line: 281
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 296,
            column: 6
          },
          end: {
            line: 296,
            column: 7
          }
        },
        loc: {
          start: {
            line: 296,
            column: 26
          },
          end: {
            line: 304,
            column: 5
          }
        },
        line: 296
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 307,
            column: 6
          },
          end: {
            line: 307,
            column: 7
          }
        },
        loc: {
          start: {
            line: 307,
            column: 31
          },
          end: {
            line: 327,
            column: 5
          }
        },
        line: 307
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 330,
            column: 6
          },
          end: {
            line: 330,
            column: 7
          }
        },
        loc: {
          start: {
            line: 330,
            column: 36
          },
          end: {
            line: 340,
            column: 5
          }
        },
        line: 330
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 334,
            column: 36
          },
          end: {
            line: 334,
            column: 37
          }
        },
        loc: {
          start: {
            line: 334,
            column: 43
          },
          end: {
            line: 338,
            column: 9
          }
        },
        line: 334
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 335,
            column: 38
          },
          end: {
            line: 335,
            column: 39
          }
        },
        loc: {
          start: {
            line: 335,
            column: 47
          },
          end: {
            line: 335,
            column: 80
          }
        },
        line: 335
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 343,
            column: 6
          },
          end: {
            line: 343,
            column: 7
          }
        },
        loc: {
          start: {
            line: 343,
            column: 30
          },
          end: {
            line: 363,
            column: 5
          }
        },
        line: 343
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 355,
            column: 36
          },
          end: {
            line: 355,
            column: 37
          }
        },
        loc: {
          start: {
            line: 355,
            column: 43
          },
          end: {
            line: 361,
            column: 9
          }
        },
        line: 355
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 356,
            column: 38
          },
          end: {
            line: 356,
            column: 39
          }
        },
        loc: {
          start: {
            line: 356,
            column: 47
          },
          end: {
            line: 356,
            column: 80
          }
        },
        line: 356
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 366,
            column: 6
          },
          end: {
            line: 366,
            column: 7
          }
        },
        loc: {
          start: {
            line: 366,
            column: 23
          },
          end: {
            line: 373,
            column: 5
          }
        },
        line: 366
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 376,
            column: 6
          },
          end: {
            line: 376,
            column: 7
          }
        },
        loc: {
          start: {
            line: 376,
            column: 26
          },
          end: {
            line: 378,
            column: 5
          }
        },
        line: 376
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 381,
            column: 6
          },
          end: {
            line: 381,
            column: 7
          }
        },
        loc: {
          start: {
            line: 381,
            column: 26
          },
          end: {
            line: 384,
            column: 5
          }
        },
        line: 381
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 387,
            column: 6
          },
          end: {
            line: 387,
            column: 7
          }
        },
        loc: {
          start: {
            line: 387,
            column: 28
          },
          end: {
            line: 400,
            column: 5
          }
        },
        line: 387
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 403,
            column: 6
          },
          end: {
            line: 403,
            column: 7
          }
        },
        loc: {
          start: {
            line: 403,
            column: 34
          },
          end: {
            line: 411,
            column: 5
          }
        },
        line: 403
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 414,
            column: 6
          },
          end: {
            line: 414,
            column: 7
          }
        },
        loc: {
          start: {
            line: 414,
            column: 24
          },
          end: {
            line: 416,
            column: 5
          }
        },
        line: 414
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 419,
            column: 6
          },
          end: {
            line: 419,
            column: 7
          }
        },
        loc: {
          start: {
            line: 419,
            column: 27
          },
          end: {
            line: 423,
            column: 5
          }
        },
        line: 419
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 420,
            column: 41
          },
          end: {
            line: 420,
            column: 42
          }
        },
        loc: {
          start: {
            line: 420,
            column: 45
          },
          end: {
            line: 422,
            column: 9
          }
        },
        line: 420
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 426,
            column: 6
          },
          end: {
            line: 426,
            column: 7
          }
        },
        loc: {
          start: {
            line: 426,
            column: 20
          },
          end: {
            line: 435,
            column: 5
          }
        },
        line: 426
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 438,
            column: 6
          },
          end: {
            line: 438,
            column: 7
          }
        },
        loc: {
          start: {
            line: 438,
            column: 25
          },
          end: {
            line: 453,
            column: 5
          }
        },
        line: 438
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 439,
            column: 57
          },
          end: {
            line: 439,
            column: 58
          }
        },
        loc: {
          start: {
            line: 439,
            column: 71
          },
          end: {
            line: 442,
            column: 9
          }
        },
        line: 439
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 443,
            column: 53
          },
          end: {
            line: 443,
            column: 54
          }
        },
        loc: {
          start: {
            line: 443,
            column: 67
          },
          end: {
            line: 446,
            column: 9
          }
        },
        line: 443
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 456,
            column: 6
          },
          end: {
            line: 456,
            column: 7
          }
        },
        loc: {
          start: {
            line: 456,
            column: 16
          },
          end: {
            line: 461,
            column: 5
          }
        },
        line: 456
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 467,
            column: 6
          },
          end: {
            line: 467,
            column: 7
          }
        },
        loc: {
          start: {
            line: 467,
            column: 39
          },
          end: {
            line: 482,
            column: 5
          }
        },
        line: 467
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 485,
            column: 6
          },
          end: {
            line: 485,
            column: 7
          }
        },
        loc: {
          start: {
            line: 485,
            column: 35
          },
          end: {
            line: 496,
            column: 5
          }
        },
        line: 485
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 499,
            column: 6
          },
          end: {
            line: 499,
            column: 7
          }
        },
        loc: {
          start: {
            line: 499,
            column: 33
          },
          end: {
            line: 513,
            column: 5
          }
        },
        line: 499
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 516,
            column: 6
          },
          end: {
            line: 516,
            column: 7
          }
        },
        loc: {
          start: {
            line: 516,
            column: 32
          },
          end: {
            line: 524,
            column: 5
          }
        },
        line: 516
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 518,
            column: 37
          },
          end: {
            line: 518,
            column: 38
          }
        },
        loc: {
          start: {
            line: 518,
            column: 44
          },
          end: {
            line: 522,
            column: 9
          }
        },
        line: 518
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 519,
            column: 39
          },
          end: {
            line: 519,
            column: 40
          }
        },
        loc: {
          start: {
            line: 519,
            column: 48
          },
          end: {
            line: 519,
            column: 81
          }
        },
        line: 519
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 90,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 90,
            column: 25
          },
          end: {
            line: 90,
            column: 27
          }
        }],
        line: 90
      },
      "1": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "2": {
        loc: {
          start: {
            line: 106,
            column: 48
          },
          end: {
            line: 106,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 106,
            column: 58
          },
          end: {
            line: 106,
            column: 60
          }
        }],
        line: 106
      },
      "3": {
        loc: {
          start: {
            line: 106,
            column: 62
          },
          end: {
            line: 106,
            column: 76
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 106,
            column: 71
          },
          end: {
            line: 106,
            column: 76
          }
        }],
        line: 106
      },
      "4": {
        loc: {
          start: {
            line: 106,
            column: 78
          },
          end: {
            line: 106,
            column: 87
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 106,
            column: 85
          },
          end: {
            line: 106,
            column: 87
          }
        }],
        line: 106
      },
      "5": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "6": {
        loc: {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "7": {
        loc: {
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "8": {
        loc: {
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 136,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 136,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "9": {
        loc: {
          start: {
            line: 146,
            column: 90
          },
          end: {
            line: 146,
            column: 125
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 90
          },
          end: {
            line: 146,
            column: 107
          }
        }, {
          start: {
            line: 146,
            column: 111
          },
          end: {
            line: 146,
            column: 125
          }
        }],
        line: 146
      },
      "10": {
        loc: {
          start: {
            line: 153,
            column: 40
          },
          end: {
            line: 153,
            column: 70
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 153,
            column: 49
          },
          end: {
            line: 153,
            column: 70
          }
        }],
        line: 153
      },
      "11": {
        loc: {
          start: {
            line: 190,
            column: 25
          },
          end: {
            line: 190,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 190,
            column: 43
          },
          end: {
            line: 190,
            column: 53
          }
        }, {
          start: {
            line: 190,
            column: 56
          },
          end: {
            line: 190,
            column: 117
          }
        }],
        line: 190
      },
      "12": {
        loc: {
          start: {
            line: 190,
            column: 56
          },
          end: {
            line: 190,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 190,
            column: 74
          },
          end: {
            line: 190,
            column: 80
          }
        }, {
          start: {
            line: 190,
            column: 83
          },
          end: {
            line: 190,
            column: 117
          }
        }],
        line: 190
      },
      "13": {
        loc: {
          start: {
            line: 190,
            column: 83
          },
          end: {
            line: 190,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 190,
            column: 101
          },
          end: {
            line: 190,
            column: 109
          }
        }, {
          start: {
            line: 190,
            column: 112
          },
          end: {
            line: 190,
            column: 117
          }
        }],
        line: 190
      },
      "14": {
        loc: {
          start: {
            line: 203,
            column: 39
          },
          end: {
            line: 203,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 203,
            column: 53
          },
          end: {
            line: 203,
            column: 54
          }
        }],
        line: 203
      },
      "15": {
        loc: {
          start: {
            line: 216,
            column: 53
          },
          end: {
            line: 216,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 216,
            column: 67
          },
          end: {
            line: 216,
            column: 68
          }
        }],
        line: 216
      },
      "16": {
        loc: {
          start: {
            line: 308,
            column: 8
          },
          end: {
            line: 310,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 308,
            column: 8
          },
          end: {
            line: 310,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 308
      },
      "17": {
        loc: {
          start: {
            line: 315,
            column: 8
          },
          end: {
            line: 317,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 315,
            column: 8
          },
          end: {
            line: 317,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 315
      },
      "18": {
        loc: {
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 321,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 321,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 319
      },
      "19": {
        loc: {
          start: {
            line: 323,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 323,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 323
      },
      "20": {
        loc: {
          start: {
            line: 335,
            column: 12
          },
          end: {
            line: 337,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 335,
            column: 12
          },
          end: {
            line: 337,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 335
      },
      "21": {
        loc: {
          start: {
            line: 344,
            column: 8
          },
          end: {
            line: 346,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 8
          },
          end: {
            line: 346,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      },
      "22": {
        loc: {
          start: {
            line: 345,
            column: 19
          },
          end: {
            line: 345,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 345,
            column: 39
          },
          end: {
            line: 345,
            column: 69
          }
        }, {
          start: {
            line: 345,
            column: 72
          },
          end: {
            line: 345,
            column: 76
          }
        }],
        line: 345
      },
      "23": {
        loc: {
          start: {
            line: 347,
            column: 8
          },
          end: {
            line: 349,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 347,
            column: 8
          },
          end: {
            line: 349,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 347
      },
      "24": {
        loc: {
          start: {
            line: 347,
            column: 12
          },
          end: {
            line: 347,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 347,
            column: 12
          },
          end: {
            line: 347,
            column: 36
          }
        }, {
          start: {
            line: 347,
            column: 40
          },
          end: {
            line: 347,
            column: 53
          }
        }],
        line: 347
      },
      "25": {
        loc: {
          start: {
            line: 350,
            column: 23
          },
          end: {
            line: 354,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 350,
            column: 45
          },
          end: {
            line: 352,
            column: 9
          }
        }, {
          start: {
            line: 352,
            column: 12
          },
          end: {
            line: 354,
            column: 9
          }
        }],
        line: 350
      },
      "26": {
        loc: {
          start: {
            line: 356,
            column: 12
          },
          end: {
            line: 360,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 356,
            column: 12
          },
          end: {
            line: 360,
            column: 13
          }
        }, {
          start: {
            line: 358,
            column: 19
          },
          end: {
            line: 360,
            column: 13
          }
        }],
        line: 356
      },
      "27": {
        loc: {
          start: {
            line: 358,
            column: 19
          },
          end: {
            line: 360,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 358,
            column: 19
          },
          end: {
            line: 360,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 358
      },
      "28": {
        loc: {
          start: {
            line: 368,
            column: 8
          },
          end: {
            line: 370,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 368,
            column: 8
          },
          end: {
            line: 370,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 368
      },
      "29": {
        loc: {
          start: {
            line: 371,
            column: 28
          },
          end: {
            line: 371,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 371,
            column: 47
          },
          end: {
            line: 371,
            column: 76
          }
        }, {
          start: {
            line: 371,
            column: 79
          },
          end: {
            line: 371,
            column: 84
          }
        }],
        line: 371
      },
      "30": {
        loc: {
          start: {
            line: 388,
            column: 8
          },
          end: {
            line: 399,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 389,
            column: 12
          },
          end: {
            line: 390,
            column: 45
          }
        }, {
          start: {
            line: 391,
            column: 12
          },
          end: {
            line: 392,
            column: 45
          }
        }, {
          start: {
            line: 393,
            column: 12
          },
          end: {
            line: 394,
            column: 46
          }
        }, {
          start: {
            line: 395,
            column: 12
          },
          end: {
            line: 396,
            column: 46
          }
        }, {
          start: {
            line: 397,
            column: 12
          },
          end: {
            line: 398,
            column: 45
          }
        }],
        line: 388
      },
      "31": {
        loc: {
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 429,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 429,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 427
      },
      "32": {
        loc: {
          start: {
            line: 440,
            column: 35
          },
          end: {
            line: 440,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 440,
            column: 35
          },
          end: {
            line: 440,
            column: 54
          }
        }, {
          start: {
            line: 440,
            column: 58
          },
          end: {
            line: 440,
            column: 59
          }
        }],
        line: 440
      },
      "33": {
        loc: {
          start: {
            line: 444,
            column: 31
          },
          end: {
            line: 444,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 444,
            column: 31
          },
          end: {
            line: 444,
            column: 46
          }
        }, {
          start: {
            line: 444,
            column: 50
          },
          end: {
            line: 444,
            column: 51
          }
        }],
        line: 444
      },
      "34": {
        loc: {
          start: {
            line: 457,
            column: 8
          },
          end: {
            line: 459,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 457,
            column: 8
          },
          end: {
            line: 459,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 457
      },
      "35": {
        loc: {
          start: {
            line: 468,
            column: 24
          },
          end: {
            line: 468,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 468,
            column: 24
          },
          end: {
            line: 468,
            column: 39
          }
        }, {
          start: {
            line: 468,
            column: 43
          },
          end: {
            line: 468,
            column: 45
          }
        }],
        line: 468
      },
      "36": {
        loc: {
          start: {
            line: 469,
            column: 26
          },
          end: {
            line: 469,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 469,
            column: 26
          },
          end: {
            line: 469,
            column: 47
          }
        }, {
          start: {
            line: 469,
            column: 51
          },
          end: {
            line: 469,
            column: 53
          }
        }],
        line: 469
      },
      "37": {
        loc: {
          start: {
            line: 471,
            column: 16
          },
          end: {
            line: 471,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 471,
            column: 16
          },
          end: {
            line: 471,
            column: 42
          }
        }, {
          start: {
            line: 471,
            column: 46
          },
          end: {
            line: 471,
            column: 66
          }
        }, {
          start: {
            line: 471,
            column: 70
          },
          end: {
            line: 471,
            column: 80
          }
        }],
        line: 471
      },
      "38": {
        loc: {
          start: {
            line: 475,
            column: 22
          },
          end: {
            line: 475,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 475,
            column: 22
          },
          end: {
            line: 475,
            column: 37
          }
        }, {
          start: {
            line: 475,
            column: 41
          },
          end: {
            line: 475,
            column: 57
          }
        }],
        line: 475
      },
      "39": {
        loc: {
          start: {
            line: 486,
            column: 8
          },
          end: {
            line: 488,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 486,
            column: 8
          },
          end: {
            line: 488,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 486
      },
      "40": {
        loc: {
          start: {
            line: 489,
            column: 8
          },
          end: {
            line: 491,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 489,
            column: 8
          },
          end: {
            line: 491,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 489
      },
      "41": {
        loc: {
          start: {
            line: 492,
            column: 8
          },
          end: {
            line: 494,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 492,
            column: 8
          },
          end: {
            line: 494,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 492
      },
      "42": {
        loc: {
          start: {
            line: 500,
            column: 8
          },
          end: {
            line: 502,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 500,
            column: 8
          },
          end: {
            line: 502,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 500
      },
      "43": {
        loc: {
          start: {
            line: 503,
            column: 8
          },
          end: {
            line: 505,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 503,
            column: 8
          },
          end: {
            line: 505,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 503
      },
      "44": {
        loc: {
          start: {
            line: 506,
            column: 8
          },
          end: {
            line: 508,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 506,
            column: 8
          },
          end: {
            line: 508,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 506
      },
      "45": {
        loc: {
          start: {
            line: 509,
            column: 8
          },
          end: {
            line: 511,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 509,
            column: 8
          },
          end: {
            line: 511,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 509
      },
      "46": {
        loc: {
          start: {
            line: 519,
            column: 12
          },
          end: {
            line: 521,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 519,
            column: 12
          },
          end: {
            line: 521,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 519
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0, 0, 0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\security-logger.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - SECURITY LOGGER\r\n// ===================================\r\n\r\nimport { logger, LogCategory, LogLevel } from './enterprise/logger';\r\n\r\n/**\r\n * Tipos de eventos de seguridad\r\n */\r\nexport enum SecurityEventType {\r\n  AUTHENTICATION_SUCCESS = 'auth_success',\r\n  AUTHENTICATION_FAILURE = 'auth_failure',\r\n  AUTHORIZATION_DENIED = 'auth_denied',\r\n  RATE_LIMIT_EXCEEDED = 'rate_limit_exceeded',\r\n  SUSPICIOUS_ACTIVITY = 'suspicious_activity',\r\n  DATA_ACCESS = 'data_access',\r\n  DATA_MODIFICATION = 'data_modification',\r\n  PRIVILEGE_ESCALATION = 'privilege_escalation',\r\n  SECURITY_VIOLATION = 'security_violation',\r\n  PAYMENT_FRAUD_ATTEMPT = 'payment_fraud_attempt',\r\n  SQL_INJECTION_ATTEMPT = 'sql_injection_attempt',\r\n  XSS_ATTEMPT = 'xss_attempt',\r\n  CSRF_ATTEMPT = 'csrf_attempt',\r\n  BRUTE_FORCE_ATTEMPT = 'brute_force_attempt',\r\n  SESSION_HIJACK_ATTEMPT = 'session_hijack_attempt',\r\n  API_ABUSE = 'api_abuse',\r\n  WEBHOOK_VALIDATION_FAILURE = 'webhook_validation_failure',\r\n  ENCRYPTION_FAILURE = 'encryption_failure',\r\n  COMPLIANCE_VIOLATION = 'compliance_violation'\r\n}\r\n\r\n/**\r\n * Severidad de eventos de seguridad\r\n */\r\nexport enum SecuritySeverity {\r\n  LOW = 'low',\r\n  MEDIUM = 'medium',\r\n  HIGH = 'high',\r\n  CRITICAL = 'critical'\r\n}\r\n\r\n/**\r\n * Contexto de seguridad\r\n */\r\nexport interface SecurityContext {\r\n  // Informaci\xF3n del usuario\r\n  userId?: string;\r\n  userEmail?: string;\r\n  userRole?: string;\r\n  sessionId?: string;\r\n  \r\n  // Informaci\xF3n de la request\r\n  ip?: string;\r\n  userAgent?: string;\r\n  method?: string;\r\n  endpoint?: string;\r\n  headers?: Record<string, string>;\r\n  \r\n  // Informaci\xF3n geogr\xE1fica\r\n  country?: string;\r\n  region?: string;\r\n  city?: string;\r\n  \r\n  // Informaci\xF3n del dispositivo\r\n  deviceType?: 'mobile' | 'desktop' | 'tablet' | 'unknown';\r\n  browser?: string;\r\n  os?: string;\r\n  \r\n  // Informaci\xF3n adicional\r\n  referrer?: string;\r\n  timestamp?: number;\r\n  requestId?: string;\r\n  \r\n  // Datos espec\xEDficos del evento\r\n  resource?: string;\r\n  action?: string;\r\n  targetUserId?: string;\r\n  dataType?: string;\r\n  recordCount?: number;\r\n  \r\n  // Informaci\xF3n de seguridad\r\n  riskScore?: number;\r\n  threatLevel?: SecuritySeverity;\r\n  mitigationApplied?: string[];\r\n  \r\n  // Metadatos adicionales\r\n  metadata?: Record<string, any>;\r\n}\r\n\r\n/**\r\n * Evento de seguridad\r\n */\r\nexport interface SecurityEvent {\r\n  id: string;\r\n  type: SecurityEventType;\r\n  severity: SecuritySeverity;\r\n  message: string;\r\n  context: SecurityContext;\r\n  timestamp: number;\r\n  source: string;\r\n  tags: string[];\r\n}\r\n\r\n/**\r\n * Configuraci\xF3n del logger de seguridad\r\n */\r\nexport interface SecurityLoggerConfig {\r\n  enabled: boolean;\r\n  logLevel: SecuritySeverity;\r\n  includeStackTrace: boolean;\r\n  maskSensitiveData: boolean;\r\n  alertOnCritical: boolean;\r\n  persistToDatabase: boolean;\r\n  exportToSIEM: boolean;\r\n  retentionDays: number;\r\n}\r\n\r\n/**\r\n * Configuraci\xF3n por defecto\r\n */\r\nconst DEFAULT_CONFIG: SecurityLoggerConfig = {\r\n  enabled: true,\r\n  logLevel: SecuritySeverity.LOW,\r\n  includeStackTrace: false,\r\n  maskSensitiveData: true,\r\n  alertOnCritical: true,\r\n  persistToDatabase: true,\r\n  exportToSIEM: false,\r\n  retentionDays: 90\r\n};\r\n\r\n/**\r\n * Datos sensibles que deben ser enmascarados\r\n */\r\nconst SENSITIVE_FIELDS = [\r\n  'password',\r\n  'token',\r\n  'secret',\r\n  'key',\r\n  'authorization',\r\n  'cookie',\r\n  'session',\r\n  'credit_card',\r\n  'ssn',\r\n  'phone',\r\n  'email',\r\n  'address'\r\n];\r\n\r\n/**\r\n * Logger de seguridad especializado\r\n */\r\nexport class SecurityLogger {\r\n  private static instance: SecurityLogger;\r\n  private config: SecurityLoggerConfig;\r\n  private eventBuffer: SecurityEvent[] = [];\r\n  private flushInterval?: NodeJS.Timeout;\r\n\r\n  private constructor(config: Partial<SecurityLoggerConfig> = {}) {\r\n    this.config = { ...DEFAULT_CONFIG, ...config };\r\n    this.startPeriodicFlush();\r\n  }\r\n\r\n  static getInstance(config?: Partial<SecurityLoggerConfig>): SecurityLogger {\r\n    if (!SecurityLogger.instance) {\r\n      SecurityLogger.instance = new SecurityLogger(config);\r\n    }\r\n    return SecurityLogger.instance;\r\n  }\r\n\r\n  /**\r\n   * Registra un evento de seguridad\r\n   */\r\n  logSecurityEvent(\r\n    type: SecurityEventType,\r\n    severity: SecuritySeverity,\r\n    message: string,\r\n    context: SecurityContext = {},\r\n    source: string = 'api',\r\n    tags: string[] = []\r\n  ): void {\r\n    if (!this.config.enabled) {return;}\r\n\r\n    // Verificar si el nivel de severidad cumple el umbral\r\n    if (!this.shouldLog(severity)) {return;}\r\n\r\n    const event: SecurityEvent = {\r\n      id: this.generateEventId(),\r\n      type,\r\n      severity,\r\n      message,\r\n      context: this.sanitizeContext(context),\r\n      timestamp: Date.now(),\r\n      source,\r\n      tags: [...tags, 'security', severity, type]\r\n    };\r\n\r\n    // Agregar al buffer\r\n    this.eventBuffer.push(event);\r\n\r\n    // Log inmediato para eventos cr\xEDticos\r\n    if (severity === SecuritySeverity.CRITICAL) {\r\n      this.logImmediate(event);\r\n      \r\n      if (this.config.alertOnCritical) {\r\n        this.triggerCriticalAlert(event);\r\n      }\r\n    }\r\n\r\n    // Log normal para otros eventos\r\n    this.logToConsole(event);\r\n  }\r\n\r\n  /**\r\n   * Logs espec\xEDficos por tipo de evento\r\n   */\r\n\r\n  /**\r\n   * Log de autenticaci\xF3n exitosa\r\n   */\r\n  logAuthenticationSuccess(context: SecurityContext): void {\r\n    this.logSecurityEvent(\r\n      SecurityEventType.AUTHENTICATION_SUCCESS,\r\n      SecuritySeverity.LOW,\r\n      `Usuario autenticado exitosamente: ${context.userEmail || context.userId}`,\r\n      context,\r\n      'auth',\r\n      ['authentication', 'success']\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Log de fallo de autenticaci\xF3n\r\n   */\r\n  logAuthenticationFailure(context: SecurityContext, reason: string = 'Invalid credentials'): void {\r\n    this.logSecurityEvent(\r\n      SecurityEventType.AUTHENTICATION_FAILURE,\r\n      SecuritySeverity.MEDIUM,\r\n      `Fallo de autenticaci\xF3n: ${reason}`,\r\n      { ...context, failureReason: reason },\r\n      'auth',\r\n      ['authentication', 'failure']\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Log de acceso denegado\r\n   */\r\n  logAuthorizationDenied(context: SecurityContext, resource: string, action: string): void {\r\n    this.logSecurityEvent(\r\n      SecurityEventType.AUTHORIZATION_DENIED,\r\n      SecuritySeverity.MEDIUM,\r\n      `Acceso denegado a recurso: ${resource} (acci\xF3n: ${action})`,\r\n      { ...context, resource, action },\r\n      'auth',\r\n      ['authorization', 'denied', resource]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Log de rate limiting\r\n   */\r\n  logRateLimitExceeded(context: SecurityContext, limit: number, window: string): void {\r\n    this.logSecurityEvent(\r\n      SecurityEventType.RATE_LIMIT_EXCEEDED,\r\n      SecuritySeverity.MEDIUM,\r\n      `Rate limit excedido: ${limit} requests en ${window}`,\r\n      { ...context, rateLimit: limit, timeWindow: window },\r\n      'rate-limiter',\r\n      ['rate-limit', 'exceeded']\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Log de actividad sospechosa\r\n   */\r\n  logSuspiciousActivity(context: SecurityContext, description: string, riskScore: number): void {\r\n    const severity = riskScore >= 80 ? SecuritySeverity.CRITICAL :\r\n                    riskScore >= 60 ? SecuritySeverity.HIGH :\r\n                    riskScore >= 40 ? SecuritySeverity.MEDIUM : SecuritySeverity.LOW;\r\n\r\n    this.logSecurityEvent(\r\n      SecurityEventType.SUSPICIOUS_ACTIVITY,\r\n      severity,\r\n      `Actividad sospechosa detectada: ${description}`,\r\n      { ...context, riskScore, description },\r\n      'security-monitor',\r\n      ['suspicious', 'activity', `risk-${Math.floor(riskScore / 20) * 20}`]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Log de acceso a datos sensibles\r\n   */\r\n  logDataAccess(context: SecurityContext, dataType: string, recordCount: number = 1): void {\r\n    this.logSecurityEvent(\r\n      SecurityEventType.DATA_ACCESS,\r\n      SecuritySeverity.LOW,\r\n      `Acceso a datos: ${dataType} (${recordCount} registros)`,\r\n      { ...context, dataType, recordCount },\r\n      'data-access',\r\n      ['data', 'access', dataType]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Log de modificaci\xF3n de datos\r\n   */\r\n  logDataModification(context: SecurityContext, dataType: string, action: string, recordCount: number = 1): void {\r\n    this.logSecurityEvent(\r\n      SecurityEventType.DATA_MODIFICATION,\r\n      SecuritySeverity.MEDIUM,\r\n      `Modificaci\xF3n de datos: ${action} en ${dataType} (${recordCount} registros)`,\r\n      { ...context, dataType, action, recordCount },\r\n      'data-modification',\r\n      ['data', 'modification', action, dataType]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Log de intento de fraude en pagos\r\n   */\r\n  logPaymentFraudAttempt(context: SecurityContext, reason: string, amount?: number): void {\r\n    this.logSecurityEvent(\r\n      SecurityEventType.PAYMENT_FRAUD_ATTEMPT,\r\n      SecuritySeverity.CRITICAL,\r\n      `Intento de fraude en pago detectado: ${reason}`,\r\n      { ...context, fraudReason: reason, amount },\r\n      'payment-security',\r\n      ['payment', 'fraud', 'attempt']\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Log de intento de inyecci\xF3n SQL\r\n   */\r\n  logSQLInjectionAttempt(context: SecurityContext, query: string): void {\r\n    this.logSecurityEvent(\r\n      SecurityEventType.SQL_INJECTION_ATTEMPT,\r\n      SecuritySeverity.HIGH,\r\n      'Intento de inyecci\xF3n SQL detectado',\r\n      { ...context, suspiciousQuery: this.maskSensitiveData(query) },\r\n      'sql-security',\r\n      ['sql', 'injection', 'attempt']\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Log de intento XSS\r\n   */\r\n  logXSSAttempt(context: SecurityContext, payload: string): void {\r\n    this.logSecurityEvent(\r\n      SecurityEventType.XSS_ATTEMPT,\r\n      SecuritySeverity.HIGH,\r\n      'Intento de XSS detectado',\r\n      { ...context, xssPayload: this.maskSensitiveData(payload) },\r\n      'xss-security',\r\n      ['xss', 'attempt']\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Log de fallo de validaci\xF3n de webhook\r\n   */\r\n  logWebhookValidationFailure(context: SecurityContext, provider: string, reason: string): void {\r\n    this.logSecurityEvent(\r\n      SecurityEventType.WEBHOOK_VALIDATION_FAILURE,\r\n      SecuritySeverity.HIGH,\r\n      `Fallo de validaci\xF3n de webhook de ${provider}: ${reason}`,\r\n      { ...context, provider, validationFailure: reason },\r\n      'webhook-security',\r\n      ['webhook', 'validation', 'failure', provider]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Log de abuso de API\r\n   */\r\n  logAPIAbuse(context: SecurityContext, pattern: string, frequency: number): void {\r\n    this.logSecurityEvent(\r\n      SecurityEventType.API_ABUSE,\r\n      SecuritySeverity.HIGH,\r\n      `Abuso de API detectado: ${pattern} (${frequency} veces)`,\r\n      { ...context, abusePattern: pattern, frequency },\r\n      'api-security',\r\n      ['api', 'abuse', pattern]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * M\xE9todos auxiliares\r\n   */\r\n\r\n  /**\r\n   * Verifica si debe registrar el evento seg\xFAn la configuraci\xF3n\r\n   */\r\n  private shouldLog(severity: SecuritySeverity): boolean {\r\n    const severityLevels = {\r\n      [SecuritySeverity.LOW]: 0,\r\n      [SecuritySeverity.MEDIUM]: 1,\r\n      [SecuritySeverity.HIGH]: 2,\r\n      [SecuritySeverity.CRITICAL]: 3\r\n    };\r\n\r\n    return severityLevels[severity] >= severityLevels[this.config.logLevel];\r\n  }\r\n\r\n  /**\r\n   * Sanitiza el contexto removiendo datos sensibles\r\n   */\r\n  private sanitizeContext(context: SecurityContext): SecurityContext {\r\n    if (!this.config.maskSensitiveData) {return context;}\r\n\r\n    const sanitized = { ...context };\r\n\r\n    // Enmascarar headers sensibles\r\n    if (sanitized.headers) {\r\n      sanitized.headers = this.maskSensitiveHeaders(sanitized.headers);\r\n    }\r\n\r\n    // Enmascarar metadata sensible\r\n    if (sanitized.metadata) {\r\n      sanitized.metadata = this.maskSensitiveData(sanitized.metadata);\r\n    }\r\n\r\n    // Enmascarar email parcialmente\r\n    if (sanitized.userEmail) {\r\n      sanitized.userEmail = this.maskEmail(sanitized.userEmail);\r\n    }\r\n\r\n    return sanitized;\r\n  }\r\n\r\n  /**\r\n   * Enmascara headers sensibles\r\n   */\r\n  private maskSensitiveHeaders(headers: Record<string, string>): Record<string, string> {\r\n    const masked = { ...headers };\r\n\r\n    Object.keys(masked).forEach(key => {\r\n      if (SENSITIVE_FIELDS.some(field => key.toLowerCase().includes(field))) {\r\n        masked[key] = '***MASKED***';\r\n      }\r\n    });\r\n\r\n    return masked;\r\n  }\r\n\r\n  /**\r\n   * Enmascara datos sensibles en objetos\r\n   */\r\n  private maskSensitiveData(data: any): any {\r\n    if (typeof data === 'string') {\r\n      return data.length > 100 ? data.substring(0, 100) + '...' : data;\r\n    }\r\n\r\n    if (typeof data !== 'object' || data === null) {\r\n      return data;\r\n    }\r\n\r\n    const masked = Array.isArray(data) ? [...data] : { ...data };\r\n\r\n    Object.keys(masked).forEach(key => {\r\n      if (SENSITIVE_FIELDS.some(field => key.toLowerCase().includes(field))) {\r\n        masked[key] = '***MASKED***';\r\n      } else if (typeof masked[key] === 'object') {\r\n        masked[key] = this.maskSensitiveData(masked[key]);\r\n      }\r\n    });\r\n\r\n    return masked;\r\n  }\r\n\r\n  /**\r\n   * Enmascara email parcialmente\r\n   */\r\n  private maskEmail(email: string): string {\r\n    const [local, domain] = email.split('@');\r\n    if (!domain) {return '***MASKED***';}\r\n\r\n    const maskedLocal = local.length > 2 \r\n      ? local.substring(0, 2) + '***' \r\n      : '***';\r\n\r\n    return `${maskedLocal}@${domain}`;\r\n  }\r\n\r\n  /**\r\n   * Log inmediato para eventos cr\xEDticos\r\n   */\r\n  private logImmediate(event: SecurityEvent): void {\r\n    logger.error(LogLevel.ERROR, `SECURITY CRITICAL: ${event.message}`, event.context, LogCategory.SECURITY);\r\n  }\r\n\r\n  /**\r\n   * Log a consola\r\n   */\r\n  private logToConsole(event: SecurityEvent): void {\r\n    const logLevel = this.getLogLevel(event.severity);\r\n    logger.log(logLevel, `SECURITY: ${event.message}`, event.context, LogCategory.SECURITY);\r\n  }\r\n\r\n  /**\r\n   * Convierte severidad de seguridad a nivel de log\r\n   */\r\n  private getLogLevel(severity: SecuritySeverity): LogLevel {\r\n    switch (severity) {\r\n      case SecuritySeverity.LOW:\r\n        return LogLevel.INFO;\r\n      case SecuritySeverity.MEDIUM:\r\n        return LogLevel.WARN;\r\n      case SecuritySeverity.HIGH:\r\n        return LogLevel.ERROR;\r\n      case SecuritySeverity.CRITICAL:\r\n        return LogLevel.ERROR;\r\n      default:\r\n        return LogLevel.INFO;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dispara alerta cr\xEDtica\r\n   */\r\n  private triggerCriticalAlert(event: SecurityEvent): void {\r\n    // En implementaci\xF3n real, enviar a sistema de alertas\r\n    console.error('\uD83D\uDEA8 CRITICAL SECURITY ALERT \uD83D\uDEA8', {\r\n      type: event.type,\r\n      message: event.message,\r\n      timestamp: new Date(event.timestamp).toISOString(),\r\n      context: event.context\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Genera ID \xFAnico para evento\r\n   */\r\n  private generateEventId(): string {\r\n    return `sec_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  /**\r\n   * Inicia flush peri\xF3dico del buffer\r\n   */\r\n  private startPeriodicFlush(): void {\r\n    this.flushInterval = setInterval(() => {\r\n      this.flushBuffer();\r\n    }, 60000); // Cada minuto\r\n  }\r\n\r\n  /**\r\n   * Flush del buffer de eventos\r\n   */\r\n  private flushBuffer(): void {\r\n    if (this.eventBuffer.length === 0) {return;}\r\n\r\n    // En implementaci\xF3n real, persistir en base de datos o SIEM\r\n    logger.info(LogLevel.INFO, `Flushing ${this.eventBuffer.length} security events`, {\r\n      eventCount: this.eventBuffer.length\r\n    }, LogCategory.SECURITY);\r\n\r\n    this.eventBuffer = [];\r\n  }\r\n\r\n  /**\r\n   * Obtiene estad\xEDsticas de seguridad\r\n   */\r\n  getSecurityStats(): {\r\n    totalEvents: number;\r\n    eventsBySeverity: Record<SecuritySeverity, number>;\r\n    eventsByType: Record<SecurityEventType, number>;\r\n    recentEvents: SecurityEvent[];\r\n  } {\r\n    const eventsBySeverity = this.eventBuffer.reduce((acc, event) => {\r\n      acc[event.severity] = (acc[event.severity] || 0) + 1;\r\n      return acc;\r\n    }, {} as Record<SecuritySeverity, number>);\r\n\r\n    const eventsByType = this.eventBuffer.reduce((acc, event) => {\r\n      acc[event.type] = (acc[event.type] || 0) + 1;\r\n      return acc;\r\n    }, {} as Record<SecurityEventType, number>);\r\n\r\n    return {\r\n      totalEvents: this.eventBuffer.length,\r\n      eventsBySeverity,\r\n      eventsByType,\r\n      recentEvents: this.eventBuffer.slice(-10)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Destructor\r\n   */\r\n  destroy(): void {\r\n    if (this.flushInterval) {\r\n      clearInterval(this.flushInterval);\r\n    }\r\n    this.flushBuffer();\r\n  }\r\n}\r\n\r\n// Instancia singleton\r\nexport const securityLogger = SecurityLogger.getInstance();\r\n\r\n/**\r\n * Utilidades para logging de seguridad\r\n */\r\nexport const SecurityLogUtils = {\r\n  /**\r\n   * Extrae contexto de seguridad de una request\r\n   */\r\n  extractSecurityContext(request: any): SecurityContext {\r\n    const headers = request.headers || {};\r\n    const userAgent = headers['user-agent'] || '';\r\n    \r\n    return {\r\n      ip: headers['x-forwarded-for'] || headers['x-real-ip'] || request.ip,\r\n      userAgent,\r\n      method: request.method,\r\n      endpoint: request.url,\r\n      referrer: headers.referer || headers.referrer,\r\n      timestamp: Date.now(),\r\n      requestId: headers['x-request-id'],\r\n      deviceType: this.detectDeviceType(userAgent),\r\n      browser: this.extractBrowser(userAgent),\r\n      headers: this.sanitizeHeaders(headers)\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Detecta tipo de dispositivo\r\n   */\r\n  detectDeviceType(userAgent: string): SecurityContext['deviceType'] {\r\n    if (/mobile|android|iphone/i.test(userAgent)) {return 'mobile';}\r\n    if (/tablet|ipad/i.test(userAgent)) {return 'tablet';}\r\n    if (/desktop|windows|mac|linux/i.test(userAgent)) {return 'desktop';}\r\n    return 'unknown';\r\n  },\r\n\r\n  /**\r\n   * Extrae informaci\xF3n del navegador\r\n   */\r\n  extractBrowser(userAgent: string): string {\r\n    if (/chrome/i.test(userAgent)) {return 'Chrome';}\r\n    if (/firefox/i.test(userAgent)) {return 'Firefox';}\r\n    if (/safari/i.test(userAgent)) {return 'Safari';}\r\n    if (/edge/i.test(userAgent)) {return 'Edge';}\r\n    return 'Unknown';\r\n  },\r\n\r\n  /**\r\n   * Sanitiza headers para logging\r\n   */\r\n  sanitizeHeaders(headers: Record<string, any>): Record<string, string> {\r\n    const sanitized: Record<string, string> = {};\r\n    \r\n    Object.keys(headers).forEach(key => {\r\n      if (!SENSITIVE_FIELDS.some(field => key.toLowerCase().includes(field))) {\r\n        sanitized[key] = String(headers[key]);\r\n      }\r\n    });\r\n    \r\n    return sanitized;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["SecurityEventType", "SecurityLogUtils", "SecurityLogger", "SecuritySeverity", "securityLogger", "DEFAULT_CONFIG", "enabled", "logLevel", "includeStackTrace", "maskSensitiveData", "alertOnCritical", "persistToDatabase", "exportToSIEM", "retentionDays", "SENSITIVE_FIELDS", "config", "eventBuffer", "startPeriodicFlush", "getInstance", "instance", "logSecurityEvent", "type", "severity", "message", "context", "source", "tags", "shouldLog", "event", "id", "generateEventId", "sanitizeContext", "timestamp", "Date", "now", "push", "logImmediate", "triggerCriticalAlert", "logToConsole", "logAuthenticationSuccess", "userEmail", "userId", "logAuthenticationFailure", "reason", "failureReason", "logAuthorizationDenied", "resource", "action", "logRateLimitExceeded", "limit", "window", "rateLimit", "timeWindow", "logSuspiciousActivity", "description", "riskScore", "Math", "floor", "logDataAccess", "dataType", "recordCount", "logDataModification", "logPaymentFraudAttempt", "amount", "fraudReason", "logSQLInjectionAttempt", "query", "suspiciousQuery", "logXSSAttempt", "payload", "xssPayload", "logWebhookValidationFailure", "provider", "validationFailure", "logAPIAbuse", "pattern", "frequency", "abusePattern", "severityLevels", "sanitized", "headers", "maskSensitiveHeaders", "metadata", "maskEmail", "masked", "Object", "keys", "forEach", "key", "some", "field", "toLowerCase", "includes", "data", "length", "substring", "Array", "isArray", "email", "local", "domain", "split", "maskedLocal", "logger", "error", "LogLevel", "ERROR", "LogCategory", "SECURITY", "getLogLevel", "log", "INFO", "WARN", "console", "toISOString", "random", "toString", "substr", "flushInterval", "setInterval", "flushBuffer", "info", "eventCount", "getSecurityStats", "eventsBySeverity", "reduce", "acc", "eventsByType", "totalEvents", "recentEvents", "slice", "destroy", "clearInterval", "extractSecurityContext", "request", "userAgent", "ip", "method", "endpoint", "url", "referrer", "referer", "requestId", "deviceType", "detectDeviceType", "browser", "extractBrowser", "sanitizeHeaders", "test", "String"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "53c70843e144bfdac5704fcb8f5ebb6d8e61dc3c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1y1c9345is = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1y1c9345is();
cov_1y1c9345is().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1y1c9345is().f[0]++;
  cov_1y1c9345is().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1y1c9345is().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1y1c9345is().s[3]++;
_export(exports, {
  get SecurityEventType() {
    /* istanbul ignore next */
    cov_1y1c9345is().f[1]++;
    cov_1y1c9345is().s[4]++;
    return SecurityEventType;
  },
  get SecurityLogUtils() {
    /* istanbul ignore next */
    cov_1y1c9345is().f[2]++;
    cov_1y1c9345is().s[5]++;
    return SecurityLogUtils;
  },
  get SecurityLogger() {
    /* istanbul ignore next */
    cov_1y1c9345is().f[3]++;
    cov_1y1c9345is().s[6]++;
    return SecurityLogger;
  },
  get SecuritySeverity() {
    /* istanbul ignore next */
    cov_1y1c9345is().f[4]++;
    cov_1y1c9345is().s[7]++;
    return SecuritySeverity;
  },
  get securityLogger() {
    /* istanbul ignore next */
    cov_1y1c9345is().f[5]++;
    cov_1y1c9345is().s[8]++;
    return securityLogger;
  }
});
const _logger =
/* istanbul ignore next */
(cov_1y1c9345is().s[9]++, require("./enterprise/logger"));
var SecurityEventType =
/* istanbul ignore next */
(/*#__PURE__*/cov_1y1c9345is().s[10]++, function (SecurityEventType) {
  /* istanbul ignore next */
  cov_1y1c9345is().f[6]++;
  cov_1y1c9345is().s[11]++;
  SecurityEventType["AUTHENTICATION_SUCCESS"] = "auth_success";
  /* istanbul ignore next */
  cov_1y1c9345is().s[12]++;
  SecurityEventType["AUTHENTICATION_FAILURE"] = "auth_failure";
  /* istanbul ignore next */
  cov_1y1c9345is().s[13]++;
  SecurityEventType["AUTHORIZATION_DENIED"] = "auth_denied";
  /* istanbul ignore next */
  cov_1y1c9345is().s[14]++;
  SecurityEventType["RATE_LIMIT_EXCEEDED"] = "rate_limit_exceeded";
  /* istanbul ignore next */
  cov_1y1c9345is().s[15]++;
  SecurityEventType["SUSPICIOUS_ACTIVITY"] = "suspicious_activity";
  /* istanbul ignore next */
  cov_1y1c9345is().s[16]++;
  SecurityEventType["DATA_ACCESS"] = "data_access";
  /* istanbul ignore next */
  cov_1y1c9345is().s[17]++;
  SecurityEventType["DATA_MODIFICATION"] = "data_modification";
  /* istanbul ignore next */
  cov_1y1c9345is().s[18]++;
  SecurityEventType["PRIVILEGE_ESCALATION"] = "privilege_escalation";
  /* istanbul ignore next */
  cov_1y1c9345is().s[19]++;
  SecurityEventType["SECURITY_VIOLATION"] = "security_violation";
  /* istanbul ignore next */
  cov_1y1c9345is().s[20]++;
  SecurityEventType["PAYMENT_FRAUD_ATTEMPT"] = "payment_fraud_attempt";
  /* istanbul ignore next */
  cov_1y1c9345is().s[21]++;
  SecurityEventType["SQL_INJECTION_ATTEMPT"] = "sql_injection_attempt";
  /* istanbul ignore next */
  cov_1y1c9345is().s[22]++;
  SecurityEventType["XSS_ATTEMPT"] = "xss_attempt";
  /* istanbul ignore next */
  cov_1y1c9345is().s[23]++;
  SecurityEventType["CSRF_ATTEMPT"] = "csrf_attempt";
  /* istanbul ignore next */
  cov_1y1c9345is().s[24]++;
  SecurityEventType["BRUTE_FORCE_ATTEMPT"] = "brute_force_attempt";
  /* istanbul ignore next */
  cov_1y1c9345is().s[25]++;
  SecurityEventType["SESSION_HIJACK_ATTEMPT"] = "session_hijack_attempt";
  /* istanbul ignore next */
  cov_1y1c9345is().s[26]++;
  SecurityEventType["API_ABUSE"] = "api_abuse";
  /* istanbul ignore next */
  cov_1y1c9345is().s[27]++;
  SecurityEventType["WEBHOOK_VALIDATION_FAILURE"] = "webhook_validation_failure";
  /* istanbul ignore next */
  cov_1y1c9345is().s[28]++;
  SecurityEventType["ENCRYPTION_FAILURE"] = "encryption_failure";
  /* istanbul ignore next */
  cov_1y1c9345is().s[29]++;
  SecurityEventType["COMPLIANCE_VIOLATION"] = "compliance_violation";
  /* istanbul ignore next */
  cov_1y1c9345is().s[30]++;
  return SecurityEventType;
}({}));
var SecuritySeverity =
/* istanbul ignore next */
(/*#__PURE__*/cov_1y1c9345is().s[31]++, function (SecuritySeverity) {
  /* istanbul ignore next */
  cov_1y1c9345is().f[7]++;
  cov_1y1c9345is().s[32]++;
  SecuritySeverity["LOW"] = "low";
  /* istanbul ignore next */
  cov_1y1c9345is().s[33]++;
  SecuritySeverity["MEDIUM"] = "medium";
  /* istanbul ignore next */
  cov_1y1c9345is().s[34]++;
  SecuritySeverity["HIGH"] = "high";
  /* istanbul ignore next */
  cov_1y1c9345is().s[35]++;
  SecuritySeverity["CRITICAL"] = "critical";
  /* istanbul ignore next */
  cov_1y1c9345is().s[36]++;
  return SecuritySeverity;
}({}));
/**
 * Configuración por defecto
 */
const DEFAULT_CONFIG =
/* istanbul ignore next */
(cov_1y1c9345is().s[37]++, {
  enabled: true,
  logLevel: "low",
  includeStackTrace: false,
  maskSensitiveData: true,
  alertOnCritical: true,
  persistToDatabase: true,
  exportToSIEM: false,
  retentionDays: 90
});
/**
 * Datos sensibles que deben ser enmascarados
 */
const SENSITIVE_FIELDS =
/* istanbul ignore next */
(cov_1y1c9345is().s[38]++, ['password', 'token', 'secret', 'key', 'authorization', 'cookie', 'session', 'credit_card', 'ssn', 'phone', 'email', 'address']);
class SecurityLogger {
  constructor(config =
  /* istanbul ignore next */
  (cov_1y1c9345is().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[8]++;
    cov_1y1c9345is().s[39]++;
    this.eventBuffer = [];
    /* istanbul ignore next */
    cov_1y1c9345is().s[40]++;
    this.config = {
      ...DEFAULT_CONFIG,
      ...config
    };
    /* istanbul ignore next */
    cov_1y1c9345is().s[41]++;
    this.startPeriodicFlush();
  }
  static getInstance(config) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[9]++;
    cov_1y1c9345is().s[42]++;
    if (!SecurityLogger.instance) {
      /* istanbul ignore next */
      cov_1y1c9345is().b[1][0]++;
      cov_1y1c9345is().s[43]++;
      SecurityLogger.instance = new SecurityLogger(config);
    } else
    /* istanbul ignore next */
    {
      cov_1y1c9345is().b[1][1]++;
    }
    cov_1y1c9345is().s[44]++;
    return SecurityLogger.instance;
  }
  /**
  * Registra un evento de seguridad
  */
  logSecurityEvent(type, severity, message, context =
  /* istanbul ignore next */
  (cov_1y1c9345is().b[2][0]++, {}), source =
  /* istanbul ignore next */
  (cov_1y1c9345is().b[3][0]++, 'api'), tags =
  /* istanbul ignore next */
  (cov_1y1c9345is().b[4][0]++, [])) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[10]++;
    cov_1y1c9345is().s[45]++;
    if (!this.config.enabled) {
      /* istanbul ignore next */
      cov_1y1c9345is().b[5][0]++;
      cov_1y1c9345is().s[46]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1y1c9345is().b[5][1]++;
    }
    // Verificar si el nivel de severidad cumple el umbral
    cov_1y1c9345is().s[47]++;
    if (!this.shouldLog(severity)) {
      /* istanbul ignore next */
      cov_1y1c9345is().b[6][0]++;
      cov_1y1c9345is().s[48]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1y1c9345is().b[6][1]++;
    }
    const event =
    /* istanbul ignore next */
    (cov_1y1c9345is().s[49]++, {
      id: this.generateEventId(),
      type,
      severity,
      message,
      context: this.sanitizeContext(context),
      timestamp: Date.now(),
      source,
      tags: [...tags, 'security', severity, type]
    });
    // Agregar al buffer
    /* istanbul ignore next */
    cov_1y1c9345is().s[50]++;
    this.eventBuffer.push(event);
    // Log inmediato para eventos críticos
    /* istanbul ignore next */
    cov_1y1c9345is().s[51]++;
    if (severity === "critical") {
      /* istanbul ignore next */
      cov_1y1c9345is().b[7][0]++;
      cov_1y1c9345is().s[52]++;
      this.logImmediate(event);
      /* istanbul ignore next */
      cov_1y1c9345is().s[53]++;
      if (this.config.alertOnCritical) {
        /* istanbul ignore next */
        cov_1y1c9345is().b[8][0]++;
        cov_1y1c9345is().s[54]++;
        this.triggerCriticalAlert(event);
      } else
      /* istanbul ignore next */
      {
        cov_1y1c9345is().b[8][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1y1c9345is().b[7][1]++;
    }
    // Log normal para otros eventos
    cov_1y1c9345is().s[55]++;
    this.logToConsole(event);
  }
  /**
  * Logs específicos por tipo de evento
  */ /**
     * Log de autenticación exitosa
     */
  logAuthenticationSuccess(context) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[11]++;
    cov_1y1c9345is().s[56]++;
    this.logSecurityEvent("auth_success", "low", `Usuario autenticado exitosamente: ${
    /* istanbul ignore next */
    (cov_1y1c9345is().b[9][0]++, context.userEmail) ||
    /* istanbul ignore next */
    (cov_1y1c9345is().b[9][1]++, context.userId)}`, context, 'auth', ['authentication', 'success']);
  }
  /**
  * Log de fallo de autenticación
  */
  logAuthenticationFailure(context, reason =
  /* istanbul ignore next */
  (cov_1y1c9345is().b[10][0]++, 'Invalid credentials')) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[12]++;
    cov_1y1c9345is().s[57]++;
    this.logSecurityEvent("auth_failure", "medium", `Fallo de autenticación: ${reason}`, {
      ...context,
      failureReason: reason
    }, 'auth', ['authentication', 'failure']);
  }
  /**
  * Log de acceso denegado
  */
  logAuthorizationDenied(context, resource, action) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[13]++;
    cov_1y1c9345is().s[58]++;
    this.logSecurityEvent("auth_denied", "medium", `Acceso denegado a recurso: ${resource} (acción: ${action})`, {
      ...context,
      resource,
      action
    }, 'auth', ['authorization', 'denied', resource]);
  }
  /**
  * Log de rate limiting
  */
  logRateLimitExceeded(context, limit, window) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[14]++;
    cov_1y1c9345is().s[59]++;
    this.logSecurityEvent("rate_limit_exceeded", "medium", `Rate limit excedido: ${limit} requests en ${window}`, {
      ...context,
      rateLimit: limit,
      timeWindow: window
    }, 'rate-limiter', ['rate-limit', 'exceeded']);
  }
  /**
  * Log de actividad sospechosa
  */
  logSuspiciousActivity(context, description, riskScore) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[15]++;
    const severity =
    /* istanbul ignore next */
    (cov_1y1c9345is().s[60]++, riskScore >= 80 ?
    /* istanbul ignore next */
    (cov_1y1c9345is().b[11][0]++, "critical") :
    /* istanbul ignore next */
    (cov_1y1c9345is().b[11][1]++, riskScore >= 60 ?
    /* istanbul ignore next */
    (cov_1y1c9345is().b[12][0]++, "high") :
    /* istanbul ignore next */
    (cov_1y1c9345is().b[12][1]++, riskScore >= 40 ?
    /* istanbul ignore next */
    (cov_1y1c9345is().b[13][0]++, "medium") :
    /* istanbul ignore next */
    (cov_1y1c9345is().b[13][1]++, "low"))));
    /* istanbul ignore next */
    cov_1y1c9345is().s[61]++;
    this.logSecurityEvent("suspicious_activity", severity, `Actividad sospechosa detectada: ${description}`, {
      ...context,
      riskScore,
      description
    }, 'security-monitor', ['suspicious', 'activity', `risk-${Math.floor(riskScore / 20) * 20}`]);
  }
  /**
  * Log de acceso a datos sensibles
  */
  logDataAccess(context, dataType, recordCount =
  /* istanbul ignore next */
  (cov_1y1c9345is().b[14][0]++, 1)) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[16]++;
    cov_1y1c9345is().s[62]++;
    this.logSecurityEvent("data_access", "low", `Acceso a datos: ${dataType} (${recordCount} registros)`, {
      ...context,
      dataType,
      recordCount
    }, 'data-access', ['data', 'access', dataType]);
  }
  /**
  * Log de modificación de datos
  */
  logDataModification(context, dataType, action, recordCount =
  /* istanbul ignore next */
  (cov_1y1c9345is().b[15][0]++, 1)) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[17]++;
    cov_1y1c9345is().s[63]++;
    this.logSecurityEvent("data_modification", "medium", `Modificación de datos: ${action} en ${dataType} (${recordCount} registros)`, {
      ...context,
      dataType,
      action,
      recordCount
    }, 'data-modification', ['data', 'modification', action, dataType]);
  }
  /**
  * Log de intento de fraude en pagos
  */
  logPaymentFraudAttempt(context, reason, amount) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[18]++;
    cov_1y1c9345is().s[64]++;
    this.logSecurityEvent("payment_fraud_attempt", "critical", `Intento de fraude en pago detectado: ${reason}`, {
      ...context,
      fraudReason: reason,
      amount
    }, 'payment-security', ['payment', 'fraud', 'attempt']);
  }
  /**
  * Log de intento de inyección SQL
  */
  logSQLInjectionAttempt(context, query) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[19]++;
    cov_1y1c9345is().s[65]++;
    this.logSecurityEvent("sql_injection_attempt", "high", 'Intento de inyección SQL detectado', {
      ...context,
      suspiciousQuery: this.maskSensitiveData(query)
    }, 'sql-security', ['sql', 'injection', 'attempt']);
  }
  /**
  * Log de intento XSS
  */
  logXSSAttempt(context, payload) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[20]++;
    cov_1y1c9345is().s[66]++;
    this.logSecurityEvent("xss_attempt", "high", 'Intento de XSS detectado', {
      ...context,
      xssPayload: this.maskSensitiveData(payload)
    }, 'xss-security', ['xss', 'attempt']);
  }
  /**
  * Log de fallo de validación de webhook
  */
  logWebhookValidationFailure(context, provider, reason) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[21]++;
    cov_1y1c9345is().s[67]++;
    this.logSecurityEvent("webhook_validation_failure", "high", `Fallo de validación de webhook de ${provider}: ${reason}`, {
      ...context,
      provider,
      validationFailure: reason
    }, 'webhook-security', ['webhook', 'validation', 'failure', provider]);
  }
  /**
  * Log de abuso de API
  */
  logAPIAbuse(context, pattern, frequency) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[22]++;
    cov_1y1c9345is().s[68]++;
    this.logSecurityEvent("api_abuse", "high", `Abuso de API detectado: ${pattern} (${frequency} veces)`, {
      ...context,
      abusePattern: pattern,
      frequency
    }, 'api-security', ['api', 'abuse', pattern]);
  }
  /**
  * Métodos auxiliares
  */ /**
     * Verifica si debe registrar el evento según la configuración
     */
  shouldLog(severity) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[23]++;
    const severityLevels =
    /* istanbul ignore next */
    (cov_1y1c9345is().s[69]++, {
      ["low"]: 0,
      ["medium"]: 1,
      ["high"]: 2,
      ["critical"]: 3
    });
    /* istanbul ignore next */
    cov_1y1c9345is().s[70]++;
    return severityLevels[severity] >= severityLevels[this.config.logLevel];
  }
  /**
  * Sanitiza el contexto removiendo datos sensibles
  */
  sanitizeContext(context) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[24]++;
    cov_1y1c9345is().s[71]++;
    if (!this.config.maskSensitiveData) {
      /* istanbul ignore next */
      cov_1y1c9345is().b[16][0]++;
      cov_1y1c9345is().s[72]++;
      return context;
    } else
    /* istanbul ignore next */
    {
      cov_1y1c9345is().b[16][1]++;
    }
    const sanitized =
    /* istanbul ignore next */
    (cov_1y1c9345is().s[73]++, {
      ...context
    });
    // Enmascarar headers sensibles
    /* istanbul ignore next */
    cov_1y1c9345is().s[74]++;
    if (sanitized.headers) {
      /* istanbul ignore next */
      cov_1y1c9345is().b[17][0]++;
      cov_1y1c9345is().s[75]++;
      sanitized.headers = this.maskSensitiveHeaders(sanitized.headers);
    } else
    /* istanbul ignore next */
    {
      cov_1y1c9345is().b[17][1]++;
    }
    // Enmascarar metadata sensible
    cov_1y1c9345is().s[76]++;
    if (sanitized.metadata) {
      /* istanbul ignore next */
      cov_1y1c9345is().b[18][0]++;
      cov_1y1c9345is().s[77]++;
      sanitized.metadata = this.maskSensitiveData(sanitized.metadata);
    } else
    /* istanbul ignore next */
    {
      cov_1y1c9345is().b[18][1]++;
    }
    // Enmascarar email parcialmente
    cov_1y1c9345is().s[78]++;
    if (sanitized.userEmail) {
      /* istanbul ignore next */
      cov_1y1c9345is().b[19][0]++;
      cov_1y1c9345is().s[79]++;
      sanitized.userEmail = this.maskEmail(sanitized.userEmail);
    } else
    /* istanbul ignore next */
    {
      cov_1y1c9345is().b[19][1]++;
    }
    cov_1y1c9345is().s[80]++;
    return sanitized;
  }
  /**
  * Enmascara headers sensibles
  */
  maskSensitiveHeaders(headers) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[25]++;
    const masked =
    /* istanbul ignore next */
    (cov_1y1c9345is().s[81]++, {
      ...headers
    });
    /* istanbul ignore next */
    cov_1y1c9345is().s[82]++;
    Object.keys(masked).forEach(key => {
      /* istanbul ignore next */
      cov_1y1c9345is().f[26]++;
      cov_1y1c9345is().s[83]++;
      if (SENSITIVE_FIELDS.some(field => {
        /* istanbul ignore next */
        cov_1y1c9345is().f[27]++;
        cov_1y1c9345is().s[84]++;
        return key.toLowerCase().includes(field);
      })) {
        /* istanbul ignore next */
        cov_1y1c9345is().b[20][0]++;
        cov_1y1c9345is().s[85]++;
        masked[key] = '***MASKED***';
      } else
      /* istanbul ignore next */
      {
        cov_1y1c9345is().b[20][1]++;
      }
    });
    /* istanbul ignore next */
    cov_1y1c9345is().s[86]++;
    return masked;
  }
  /**
  * Enmascara datos sensibles en objetos
  */
  maskSensitiveData(data) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[28]++;
    cov_1y1c9345is().s[87]++;
    if (typeof data === 'string') {
      /* istanbul ignore next */
      cov_1y1c9345is().b[21][0]++;
      cov_1y1c9345is().s[88]++;
      return data.length > 100 ?
      /* istanbul ignore next */
      (cov_1y1c9345is().b[22][0]++, data.substring(0, 100) + '...') :
      /* istanbul ignore next */
      (cov_1y1c9345is().b[22][1]++, data);
    } else
    /* istanbul ignore next */
    {
      cov_1y1c9345is().b[21][1]++;
    }
    cov_1y1c9345is().s[89]++;
    if (
    /* istanbul ignore next */
    (cov_1y1c9345is().b[24][0]++, typeof data !== 'object') ||
    /* istanbul ignore next */
    (cov_1y1c9345is().b[24][1]++, data === null)) {
      /* istanbul ignore next */
      cov_1y1c9345is().b[23][0]++;
      cov_1y1c9345is().s[90]++;
      return data;
    } else
    /* istanbul ignore next */
    {
      cov_1y1c9345is().b[23][1]++;
    }
    const masked =
    /* istanbul ignore next */
    (cov_1y1c9345is().s[91]++, Array.isArray(data) ?
    /* istanbul ignore next */
    (cov_1y1c9345is().b[25][0]++, [...data]) :
    /* istanbul ignore next */
    (cov_1y1c9345is().b[25][1]++, {
      ...data
    }));
    /* istanbul ignore next */
    cov_1y1c9345is().s[92]++;
    Object.keys(masked).forEach(key => {
      /* istanbul ignore next */
      cov_1y1c9345is().f[29]++;
      cov_1y1c9345is().s[93]++;
      if (SENSITIVE_FIELDS.some(field => {
        /* istanbul ignore next */
        cov_1y1c9345is().f[30]++;
        cov_1y1c9345is().s[94]++;
        return key.toLowerCase().includes(field);
      })) {
        /* istanbul ignore next */
        cov_1y1c9345is().b[26][0]++;
        cov_1y1c9345is().s[95]++;
        masked[key] = '***MASKED***';
      } else {
        /* istanbul ignore next */
        cov_1y1c9345is().b[26][1]++;
        cov_1y1c9345is().s[96]++;
        if (typeof masked[key] === 'object') {
          /* istanbul ignore next */
          cov_1y1c9345is().b[27][0]++;
          cov_1y1c9345is().s[97]++;
          masked[key] = this.maskSensitiveData(masked[key]);
        } else
        /* istanbul ignore next */
        {
          cov_1y1c9345is().b[27][1]++;
        }
      }
    });
    /* istanbul ignore next */
    cov_1y1c9345is().s[98]++;
    return masked;
  }
  /**
  * Enmascara email parcialmente
  */
  maskEmail(email) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[31]++;
    const [local, domain] =
    /* istanbul ignore next */
    (cov_1y1c9345is().s[99]++, email.split('@'));
    /* istanbul ignore next */
    cov_1y1c9345is().s[100]++;
    if (!domain) {
      /* istanbul ignore next */
      cov_1y1c9345is().b[28][0]++;
      cov_1y1c9345is().s[101]++;
      return '***MASKED***';
    } else
    /* istanbul ignore next */
    {
      cov_1y1c9345is().b[28][1]++;
    }
    const maskedLocal =
    /* istanbul ignore next */
    (cov_1y1c9345is().s[102]++, local.length > 2 ?
    /* istanbul ignore next */
    (cov_1y1c9345is().b[29][0]++, local.substring(0, 2) + '***') :
    /* istanbul ignore next */
    (cov_1y1c9345is().b[29][1]++, '***'));
    /* istanbul ignore next */
    cov_1y1c9345is().s[103]++;
    return `${maskedLocal}@${domain}`;
  }
  /**
  * Log inmediato para eventos críticos
  */
  logImmediate(event) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[32]++;
    cov_1y1c9345is().s[104]++;
    _logger.logger.error(_logger.LogLevel.ERROR, `SECURITY CRITICAL: ${event.message}`, event.context, _logger.LogCategory.SECURITY);
  }
  /**
  * Log a consola
  */
  logToConsole(event) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[33]++;
    const logLevel =
    /* istanbul ignore next */
    (cov_1y1c9345is().s[105]++, this.getLogLevel(event.severity));
    /* istanbul ignore next */
    cov_1y1c9345is().s[106]++;
    _logger.logger.log(logLevel, `SECURITY: ${event.message}`, event.context, _logger.LogCategory.SECURITY);
  }
  /**
  * Convierte severidad de seguridad a nivel de log
  */
  getLogLevel(severity) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[34]++;
    cov_1y1c9345is().s[107]++;
    switch (severity) {
      case "low":
        /* istanbul ignore next */
        cov_1y1c9345is().b[30][0]++;
        cov_1y1c9345is().s[108]++;
        return _logger.LogLevel.INFO;
      case "medium":
        /* istanbul ignore next */
        cov_1y1c9345is().b[30][1]++;
        cov_1y1c9345is().s[109]++;
        return _logger.LogLevel.WARN;
      case "high":
        /* istanbul ignore next */
        cov_1y1c9345is().b[30][2]++;
        cov_1y1c9345is().s[110]++;
        return _logger.LogLevel.ERROR;
      case "critical":
        /* istanbul ignore next */
        cov_1y1c9345is().b[30][3]++;
        cov_1y1c9345is().s[111]++;
        return _logger.LogLevel.ERROR;
      default:
        /* istanbul ignore next */
        cov_1y1c9345is().b[30][4]++;
        cov_1y1c9345is().s[112]++;
        return _logger.LogLevel.INFO;
    }
  }
  /**
  * Dispara alerta crítica
  */
  triggerCriticalAlert(event) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[35]++;
    cov_1y1c9345is().s[113]++;
    // En implementación real, enviar a sistema de alertas
    console.error('🚨 CRITICAL SECURITY ALERT 🚨', {
      type: event.type,
      message: event.message,
      timestamp: new Date(event.timestamp).toISOString(),
      context: event.context
    });
  }
  /**
  * Genera ID único para evento
  */
  generateEventId() {
    /* istanbul ignore next */
    cov_1y1c9345is().f[36]++;
    cov_1y1c9345is().s[114]++;
    return `sec_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  /**
  * Inicia flush periódico del buffer
  */
  startPeriodicFlush() {
    /* istanbul ignore next */
    cov_1y1c9345is().f[37]++;
    cov_1y1c9345is().s[115]++;
    this.flushInterval = setInterval(() => {
      /* istanbul ignore next */
      cov_1y1c9345is().f[38]++;
      cov_1y1c9345is().s[116]++;
      this.flushBuffer();
    }, 60000); // Cada minuto
  }
  /**
  * Flush del buffer de eventos
  */
  flushBuffer() {
    /* istanbul ignore next */
    cov_1y1c9345is().f[39]++;
    cov_1y1c9345is().s[117]++;
    if (this.eventBuffer.length === 0) {
      /* istanbul ignore next */
      cov_1y1c9345is().b[31][0]++;
      cov_1y1c9345is().s[118]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1y1c9345is().b[31][1]++;
    }
    // En implementación real, persistir en base de datos o SIEM
    cov_1y1c9345is().s[119]++;
    _logger.logger.info(_logger.LogLevel.INFO, `Flushing ${this.eventBuffer.length} security events`, {
      eventCount: this.eventBuffer.length
    }, _logger.LogCategory.SECURITY);
    /* istanbul ignore next */
    cov_1y1c9345is().s[120]++;
    this.eventBuffer = [];
  }
  /**
  * Obtiene estadísticas de seguridad
  */
  getSecurityStats() {
    /* istanbul ignore next */
    cov_1y1c9345is().f[40]++;
    const eventsBySeverity =
    /* istanbul ignore next */
    (cov_1y1c9345is().s[121]++, this.eventBuffer.reduce((acc, event) => {
      /* istanbul ignore next */
      cov_1y1c9345is().f[41]++;
      cov_1y1c9345is().s[122]++;
      acc[event.severity] = (
      /* istanbul ignore next */
      (cov_1y1c9345is().b[32][0]++, acc[event.severity]) ||
      /* istanbul ignore next */
      (cov_1y1c9345is().b[32][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_1y1c9345is().s[123]++;
      return acc;
    }, {}));
    const eventsByType =
    /* istanbul ignore next */
    (cov_1y1c9345is().s[124]++, this.eventBuffer.reduce((acc, event) => {
      /* istanbul ignore next */
      cov_1y1c9345is().f[42]++;
      cov_1y1c9345is().s[125]++;
      acc[event.type] = (
      /* istanbul ignore next */
      (cov_1y1c9345is().b[33][0]++, acc[event.type]) ||
      /* istanbul ignore next */
      (cov_1y1c9345is().b[33][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_1y1c9345is().s[126]++;
      return acc;
    }, {}));
    /* istanbul ignore next */
    cov_1y1c9345is().s[127]++;
    return {
      totalEvents: this.eventBuffer.length,
      eventsBySeverity,
      eventsByType,
      recentEvents: this.eventBuffer.slice(-10)
    };
  }
  /**
  * Destructor
  */
  destroy() {
    /* istanbul ignore next */
    cov_1y1c9345is().f[43]++;
    cov_1y1c9345is().s[128]++;
    if (this.flushInterval) {
      /* istanbul ignore next */
      cov_1y1c9345is().b[34][0]++;
      cov_1y1c9345is().s[129]++;
      clearInterval(this.flushInterval);
    } else
    /* istanbul ignore next */
    {
      cov_1y1c9345is().b[34][1]++;
    }
    cov_1y1c9345is().s[130]++;
    this.flushBuffer();
  }
}
const securityLogger =
/* istanbul ignore next */
(cov_1y1c9345is().s[131]++, SecurityLogger.getInstance());
const SecurityLogUtils =
/* istanbul ignore next */
(cov_1y1c9345is().s[132]++, {
  /**
  * Extrae contexto de seguridad de una request
  */
  extractSecurityContext(request) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[44]++;
    const headers =
    /* istanbul ignore next */
    (cov_1y1c9345is().s[133]++,
    /* istanbul ignore next */
    (cov_1y1c9345is().b[35][0]++, request.headers) ||
    /* istanbul ignore next */
    (cov_1y1c9345is().b[35][1]++, {}));
    const userAgent =
    /* istanbul ignore next */
    (cov_1y1c9345is().s[134]++,
    /* istanbul ignore next */
    (cov_1y1c9345is().b[36][0]++, headers['user-agent']) ||
    /* istanbul ignore next */
    (cov_1y1c9345is().b[36][1]++, ''));
    /* istanbul ignore next */
    cov_1y1c9345is().s[135]++;
    return {
      ip:
      /* istanbul ignore next */
      (cov_1y1c9345is().b[37][0]++, headers['x-forwarded-for']) ||
      /* istanbul ignore next */
      (cov_1y1c9345is().b[37][1]++, headers['x-real-ip']) ||
      /* istanbul ignore next */
      (cov_1y1c9345is().b[37][2]++, request.ip),
      userAgent,
      method: request.method,
      endpoint: request.url,
      referrer:
      /* istanbul ignore next */
      (cov_1y1c9345is().b[38][0]++, headers.referer) ||
      /* istanbul ignore next */
      (cov_1y1c9345is().b[38][1]++, headers.referrer),
      timestamp: Date.now(),
      requestId: headers['x-request-id'],
      deviceType: this.detectDeviceType(userAgent),
      browser: this.extractBrowser(userAgent),
      headers: this.sanitizeHeaders(headers)
    };
  },
  /**
  * Detecta tipo de dispositivo
  */
  detectDeviceType(userAgent) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[45]++;
    cov_1y1c9345is().s[136]++;
    if (/mobile|android|iphone/i.test(userAgent)) {
      /* istanbul ignore next */
      cov_1y1c9345is().b[39][0]++;
      cov_1y1c9345is().s[137]++;
      return 'mobile';
    } else
    /* istanbul ignore next */
    {
      cov_1y1c9345is().b[39][1]++;
    }
    cov_1y1c9345is().s[138]++;
    if (/tablet|ipad/i.test(userAgent)) {
      /* istanbul ignore next */
      cov_1y1c9345is().b[40][0]++;
      cov_1y1c9345is().s[139]++;
      return 'tablet';
    } else
    /* istanbul ignore next */
    {
      cov_1y1c9345is().b[40][1]++;
    }
    cov_1y1c9345is().s[140]++;
    if (/desktop|windows|mac|linux/i.test(userAgent)) {
      /* istanbul ignore next */
      cov_1y1c9345is().b[41][0]++;
      cov_1y1c9345is().s[141]++;
      return 'desktop';
    } else
    /* istanbul ignore next */
    {
      cov_1y1c9345is().b[41][1]++;
    }
    cov_1y1c9345is().s[142]++;
    return 'unknown';
  },
  /**
  * Extrae información del navegador
  */
  extractBrowser(userAgent) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[46]++;
    cov_1y1c9345is().s[143]++;
    if (/chrome/i.test(userAgent)) {
      /* istanbul ignore next */
      cov_1y1c9345is().b[42][0]++;
      cov_1y1c9345is().s[144]++;
      return 'Chrome';
    } else
    /* istanbul ignore next */
    {
      cov_1y1c9345is().b[42][1]++;
    }
    cov_1y1c9345is().s[145]++;
    if (/firefox/i.test(userAgent)) {
      /* istanbul ignore next */
      cov_1y1c9345is().b[43][0]++;
      cov_1y1c9345is().s[146]++;
      return 'Firefox';
    } else
    /* istanbul ignore next */
    {
      cov_1y1c9345is().b[43][1]++;
    }
    cov_1y1c9345is().s[147]++;
    if (/safari/i.test(userAgent)) {
      /* istanbul ignore next */
      cov_1y1c9345is().b[44][0]++;
      cov_1y1c9345is().s[148]++;
      return 'Safari';
    } else
    /* istanbul ignore next */
    {
      cov_1y1c9345is().b[44][1]++;
    }
    cov_1y1c9345is().s[149]++;
    if (/edge/i.test(userAgent)) {
      /* istanbul ignore next */
      cov_1y1c9345is().b[45][0]++;
      cov_1y1c9345is().s[150]++;
      return 'Edge';
    } else
    /* istanbul ignore next */
    {
      cov_1y1c9345is().b[45][1]++;
    }
    cov_1y1c9345is().s[151]++;
    return 'Unknown';
  },
  /**
  * Sanitiza headers para logging
  */
  sanitizeHeaders(headers) {
    /* istanbul ignore next */
    cov_1y1c9345is().f[47]++;
    const sanitized =
    /* istanbul ignore next */
    (cov_1y1c9345is().s[152]++, {});
    /* istanbul ignore next */
    cov_1y1c9345is().s[153]++;
    Object.keys(headers).forEach(key => {
      /* istanbul ignore next */
      cov_1y1c9345is().f[48]++;
      cov_1y1c9345is().s[154]++;
      if (!SENSITIVE_FIELDS.some(field => {
        /* istanbul ignore next */
        cov_1y1c9345is().f[49]++;
        cov_1y1c9345is().s[155]++;
        return key.toLowerCase().includes(field);
      })) {
        /* istanbul ignore next */
        cov_1y1c9345is().b[46][0]++;
        cov_1y1c9345is().s[156]++;
        sanitized[key] = String(headers[key]);
      } else
      /* istanbul ignore next */
      {
        cov_1y1c9345is().b[46][1]++;
      }
    });
    /* istanbul ignore next */
    cov_1y1c9345is().s[157]++;
    return sanitized;
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,