b19d2e6e90bc18301ba65125322667a1
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _card = require("../ui/card");
const _checkbox = require("../ui/checkbox");
const _badge = require("../ui/badge");
const _lucidereact = require("lucide-react");
const CategoryItem = ({ category, onCategorySelect, isSelected })=>{
    const handleClick = ()=>{
        if (category.slug) {
            onCategorySelect(category.slug);
        }
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "flex items-center justify-between py-2 px-1 hover:bg-gray-50 rounded-md transition-colors",
        "data-testid": "category-filter",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                id: `category-${category.id || category.slug}`,
                checked: isSelected,
                onCheckedChange: handleClick,
                label: category.name,
                className: "flex-1"
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_badge.Badge, {
                variant: isSelected ? "default" : "secondary",
                size: "sm",
                className: "ml-2",
                children: category.products
            })
        ]
    });
};
const CategoryDropdown = ({ categories, onCategorySelect, selectedCategory, loading = false })=>{
    const [toggleDropdown, setToggleDropdown] = (0, _react.useState)(true);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.Card, {
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardContent, {
            className: "p-0",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                    onClick: (e)=>{
                        e.preventDefault();
                        setToggleDropdown(!toggleDropdown);
                    },
                    className: "w-full flex items-center justify-between py-4 px-5 hover:bg-gray-50 transition-colors",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center gap-2",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Tag, {
                                    className: "w-4 h-4 text-primary"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                    className: "font-medium text-gray-900",
                                    children: "Categor\xedas"
                                }),
                                loading && /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Loader2, {
                                    className: "w-4 h-4 animate-spin text-gray-400"
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.ChevronDown, {
                            className: `w-5 h-5 text-gray-600 transition-transform duration-200 ${toggleDropdown ? "rotate-180" : ""}`
                        })
                    ]
                }),
                toggleDropdown && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "border-t border-gray-200 p-4 space-y-2",
                    children: loading ? /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center justify-center py-8 text-gray-500",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Loader2, {
                                className: "w-5 h-5 animate-spin mr-2"
                            }),
                            "Cargando categor\xedas..."
                        ]
                    }) : categories.length === 0 ? /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex flex-col items-center justify-center py-8 text-gray-500",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Tag, {
                                className: "w-8 h-8 mb-2 text-gray-300"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                className: "text-sm",
                                children: "No hay categor\xedas disponibles"
                            })
                        ]
                    }) : categories.map((category, key)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(CategoryItem, {
                            category: category,
                            onCategorySelect: onCategorySelect,
                            isSelected: selectedCategory === category.slug
                        }, category.id || key))
                })
            ]
        })
    });
};
const _default = CategoryDropdown;

//# sourceMappingURL=data:application/json;base64,