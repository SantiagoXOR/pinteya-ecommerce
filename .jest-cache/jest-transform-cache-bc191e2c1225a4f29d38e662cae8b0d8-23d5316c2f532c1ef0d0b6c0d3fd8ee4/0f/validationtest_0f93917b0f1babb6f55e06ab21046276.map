{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\__tests__\\utils\\validation.test.ts"],"sourcesContent":["// ===================================\n// PINTEYA E-COMMERCE - TESTS PARA VALIDATION UTILS\n// ===================================\n\nimport { validateEmail, validatePhoneNumber } from '@/lib/utils/validation'\n\ndescribe('Validation Utils', () => {\n  describe('validateEmail', () => {\n    it('should validate correct email formats', () => {\n      expect(validateEmail('test@example.com')).toBe(true)\n      expect(validateEmail('user.name@domain.co.ar')).toBe(true)\n      expect(validateEmail('juan.perez@test.com')).toBe(true)\n    })\n\n    it('should reject invalid email formats', () => {\n      expect(validateEmail('invalid-email')).toBe(false)\n      expect(validateEmail('test@')).toBe(false)\n      expect(validateEmail('@domain.com')).toBe(false)\n    })\n  })\n\n  describe('validatePhoneNumber', () => {\n    it('should validate Argentine phone formats', () => {\n      // Formato que causó el error en el reporte\n      expect(validatePhoneNumber('+54 351 123-4567')).toBe(true)\n\n      // Otros formatos válidos\n      expect(validatePhoneNumber('+54 9 351 123 4567')).toBe(true)\n      expect(validatePhoneNumber('+54 351 123 4567')).toBe(true)\n      expect(validatePhoneNumber('351 123 4567')).toBe(true)\n      expect(validatePhoneNumber('3511234567')).toBe(true)\n      expect(validatePhoneNumber('+543511234567')).toBe(true)\n      expect(validatePhoneNumber('+5493511234567')).toBe(true)\n    })\n\n    it('should reject invalid phone formats', () => {\n      expect(validatePhoneNumber('123')).toBe(false)\n      expect(validatePhoneNumber('abc123456789')).toBe(false)\n      expect(validatePhoneNumber('')).toBe(false)\n      expect(validatePhoneNumber('12345')).toBe(false)\n    })\n\n    it('should handle phone numbers with various separators', () => {\n      expect(validatePhoneNumber('+54-351-123-4567')).toBe(true)\n      expect(validatePhoneNumber('+54 (351) 123-4567')).toBe(true)\n      expect(validatePhoneNumber('351-123-4567')).toBe(true)\n    })\n  })\n})\n"],"names":["describe","it","expect","validateEmail","toBe","validatePhoneNumber"],"mappings":"AAAA,sCAAsC;AACtC,mDAAmD;AACnD,sCAAsC;;;;;4BAEa;AAEnDA,SAAS,oBAAoB;IAC3BA,SAAS,iBAAiB;QACxBC,GAAG,yCAAyC;YAC1CC,OAAOC,IAAAA,yBAAa,EAAC,qBAAqBC,IAAI,CAAC;YAC/CF,OAAOC,IAAAA,yBAAa,EAAC,2BAA2BC,IAAI,CAAC;YACrDF,OAAOC,IAAAA,yBAAa,EAAC,wBAAwBC,IAAI,CAAC;QACpD;QAEAH,GAAG,uCAAuC;YACxCC,OAAOC,IAAAA,yBAAa,EAAC,kBAAkBC,IAAI,CAAC;YAC5CF,OAAOC,IAAAA,yBAAa,EAAC,UAAUC,IAAI,CAAC;YACpCF,OAAOC,IAAAA,yBAAa,EAAC,gBAAgBC,IAAI,CAAC;QAC5C;IACF;IAEAJ,SAAS,uBAAuB;QAC9BC,GAAG,2CAA2C;YAC5C,2CAA2C;YAC3CC,OAAOG,IAAAA,+BAAmB,EAAC,qBAAqBD,IAAI,CAAC;YAErD,yBAAyB;YACzBF,OAAOG,IAAAA,+BAAmB,EAAC,uBAAuBD,IAAI,CAAC;YACvDF,OAAOG,IAAAA,+BAAmB,EAAC,qBAAqBD,IAAI,CAAC;YACrDF,OAAOG,IAAAA,+BAAmB,EAAC,iBAAiBD,IAAI,CAAC;YACjDF,OAAOG,IAAAA,+BAAmB,EAAC,eAAeD,IAAI,CAAC;YAC/CF,OAAOG,IAAAA,+BAAmB,EAAC,kBAAkBD,IAAI,CAAC;YAClDF,OAAOG,IAAAA,+BAAmB,EAAC,mBAAmBD,IAAI,CAAC;QACrD;QAEAH,GAAG,uCAAuC;YACxCC,OAAOG,IAAAA,+BAAmB,EAAC,QAAQD,IAAI,CAAC;YACxCF,OAAOG,IAAAA,+BAAmB,EAAC,iBAAiBD,IAAI,CAAC;YACjDF,OAAOG,IAAAA,+BAAmB,EAAC,KAAKD,IAAI,CAAC;YACrCF,OAAOG,IAAAA,+BAAmB,EAAC,UAAUD,IAAI,CAAC;QAC5C;QAEAH,GAAG,uDAAuD;YACxDC,OAAOG,IAAAA,+BAAmB,EAAC,qBAAqBD,IAAI,CAAC;YACrDF,OAAOG,IAAAA,+BAAmB,EAAC,uBAAuBD,IAAI,CAAC;YACvDF,OAAOG,IAAAA,+BAAmB,EAAC,iBAAiBD,IAAI,CAAC;QACnD;IACF;AACF"}