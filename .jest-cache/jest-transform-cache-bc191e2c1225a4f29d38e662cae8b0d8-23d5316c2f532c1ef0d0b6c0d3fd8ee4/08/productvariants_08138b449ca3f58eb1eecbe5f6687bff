28cf5e38c5be1fdbe3f1bd0ffe576633
// ===================================
// PINTEYA E-COMMERCE - FUNCIONES DE API PARA VARIANTES DE PRODUCTOS
// ===================================
"use strict";

/* istanbul ignore next */
function cov_hl0h9cv9x() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\api\\product-variants.ts";
  var hash = "12ad86cb8a3fb94b929191a016ad0351c41202ec";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\api\\product-variants.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 39,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 35
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 40
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 37
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 38
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 37
        }
      },
      "9": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 33
        }
      },
      "10": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 34
        }
      },
      "11": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 27
        }
      },
      "12": {
        start: {
          line: 40,
          column: 19
        },
        end: {
          line: 40,
          column: 43
        }
      },
      "13": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "14": {
        start: {
          line: 43,
          column: 25
        },
        end: {
          line: 48,
          column: 10
        }
      },
      "15": {
        start: {
          line: 50,
          column: 23
        },
        end: {
          line: 50,
          column: 74
        }
      },
      "16": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "17": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 75
        }
      },
      "18": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 27
        }
      },
      "19": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 86
        }
      },
      "20": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 20
        }
      },
      "21": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 56
        }
      },
      "22": {
        start: {
          line: 61,
          column: 44
        },
        end: {
          line: 61,
          column: 56
        }
      },
      "23": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 66,
          column: 7
        }
      },
      "24": {
        start: {
          line: 63,
          column: 30
        },
        end: {
          line: 63,
          column: 85
        }
      },
      "25": {
        start: {
          line: 64,
          column: 29
        },
        end: {
          line: 64,
          column: 82
        }
      },
      "26": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 65
        }
      },
      "27": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 56
        }
      },
      "28": {
        start: {
          line: 69,
          column: 44
        },
        end: {
          line: 69,
          column: 56
        }
      },
      "29": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 74,
          column: 7
        }
      },
      "30": {
        start: {
          line: 71,
          column: 31
        },
        end: {
          line: 71,
          column: 88
        }
      },
      "31": {
        start: {
          line: 72,
          column: 29
        },
        end: {
          line: 72,
          column: 82
        }
      },
      "32": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 67
        }
      },
      "33": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 77,
          column: 56
        }
      },
      "34": {
        start: {
          line: 77,
          column: 44
        },
        end: {
          line: 77,
          column: 56
        }
      },
      "35": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 78,
          column: 103
        }
      },
      "36": {
        start: {
          line: 78,
          column: 36
        },
        end: {
          line: 78,
          column: 93
        }
      },
      "37": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 81,
          column: 54
        }
      },
      "38": {
        start: {
          line: 81,
          column: 44
        },
        end: {
          line: 81,
          column: 54
        }
      },
      "39": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 87,
          column: 7
        }
      },
      "40": {
        start: {
          line: 82,
          column: 35
        },
        end: {
          line: 82,
          column: 51
        }
      },
      "41": {
        start: {
          line: 82,
          column: 86
        },
        end: {
          line: 82,
          column: 119
        }
      },
      "42": {
        start: {
          line: 84,
          column: 21
        },
        end: {
          line: 84,
          column: 59
        }
      },
      "43": {
        start: {
          line: 85,
          column: 21
        },
        end: {
          line: 85,
          column: 59
        }
      },
      "44": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 27
        }
      },
      "45": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 90,
          column: 65
        }
      },
      "46": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 113
        }
      },
      "47": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 96,
          column: 40
        }
      },
      "48": {
        start: {
          line: 96,
          column: 31
        },
        end: {
          line: 96,
          column: 40
        }
      },
      "49": {
        start: {
          line: 97,
          column: 26
        },
        end: {
          line: 97,
          column: 51
        }
      },
      "50": {
        start: {
          line: 98,
          column: 28
        },
        end: {
          line: 98,
          column: 64
        }
      },
      "51": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 99,
          column: 79
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 31
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 36
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 33
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 34
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 33
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 29
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 30
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 23
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "9": {
        name: "getProductVariants",
        decl: {
          start: {
            line: 41,
            column: 15
          },
          end: {
            line: 41,
            column: 33
          }
        },
        loc: {
          start: {
            line: 41,
            column: 45
          },
          end: {
            line: 59,
            column: 1
          }
        },
        line: 41
      },
      "10": {
        name: "findCheapestVariant",
        decl: {
          start: {
            line: 60,
            column: 9
          },
          end: {
            line: 60,
            column: 28
          }
        },
        loc: {
          start: {
            line: 60,
            column: 39
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 60
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 62,
            column: 27
          },
          end: {
            line: 62,
            column: 28
          }
        },
        loc: {
          start: {
            line: 62,
            column: 48
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 62
      },
      "12": {
        name: "findMostExpensiveVariant",
        decl: {
          start: {
            line: 68,
            column: 9
          },
          end: {
            line: 68,
            column: 33
          }
        },
        loc: {
          start: {
            line: 68,
            column: 44
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 68
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 70,
            column: 27
          },
          end: {
            line: 70,
            column: 28
          }
        },
        loc: {
          start: {
            line: 70,
            column: 49
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 70
      },
      "14": {
        name: "findVariantByCapacity",
        decl: {
          start: {
            line: 76,
            column: 9
          },
          end: {
            line: 76,
            column: 30
          }
        },
        loc: {
          start: {
            line: 76,
            column: 51
          },
          end: {
            line: 79,
            column: 1
          }
        },
        line: 76
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 78,
            column: 25
          },
          end: {
            line: 78,
            column: 26
          }
        },
        loc: {
          start: {
            line: 78,
            column: 36
          },
          end: {
            line: 78,
            column: 93
          }
        },
        line: 78
      },
      "16": {
        name: "getAvailableCapacities",
        decl: {
          start: {
            line: 80,
            column: 9
          },
          end: {
            line: 80,
            column: 31
          }
        },
        loc: {
          start: {
            line: 80,
            column: 42
          },
          end: {
            line: 88,
            column: 1
          }
        },
        line: 80
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 82,
            column: 24
          },
          end: {
            line: 82,
            column: 25
          }
        },
        loc: {
          start: {
            line: 82,
            column: 35
          },
          end: {
            line: 82,
            column: 51
          }
        },
        line: 82
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 82,
            column: 60
          },
          end: {
            line: 82,
            column: 61
          }
        },
        loc: {
          start: {
            line: 82,
            column: 86
          },
          end: {
            line: 82,
            column: 119
          }
        },
        line: 82
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 82,
            column: 126
          },
          end: {
            line: 82,
            column: 127
          }
        },
        loc: {
          start: {
            line: 82,
            column: 134
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 82
      },
      "20": {
        name: "getEffectivePrice",
        decl: {
          start: {
            line: 89,
            column: 9
          },
          end: {
            line: 89,
            column: 26
          }
        },
        loc: {
          start: {
            line: 89,
            column: 36
          },
          end: {
            line: 91,
            column: 1
          }
        },
        line: 89
      },
      "21": {
        name: "hasDiscount",
        decl: {
          start: {
            line: 92,
            column: 9
          },
          end: {
            line: 92,
            column: 20
          }
        },
        loc: {
          start: {
            line: 92,
            column: 30
          },
          end: {
            line: 94,
            column: 1
          }
        },
        line: 92
      },
      "22": {
        name: "getDiscountPercentage",
        decl: {
          start: {
            line: 95,
            column: 9
          },
          end: {
            line: 95,
            column: 30
          }
        },
        loc: {
          start: {
            line: 95,
            column: 40
          },
          end: {
            line: 100,
            column: 1
          }
        },
        line: 95
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "1": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 19
          }
        }, {
          start: {
            line: 51,
            column: 23
          },
          end: {
            line: 51,
            column: 38
          }
        }, {
          start: {
            line: 51,
            column: 42
          },
          end: {
            line: 51,
            column: 54
          }
        }],
        line: 51
      },
      "2": {
        loc: {
          start: {
            line: 52,
            column: 28
          },
          end: {
            line: 52,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 28
          },
          end: {
            line: 52,
            column: 41
          }
        }, {
          start: {
            line: 52,
            column: 45
          },
          end: {
            line: 52,
            column: 73
          }
        }],
        line: 52
      },
      "3": {
        loc: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "4": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 61,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 61,
            column: 17
          }
        }, {
          start: {
            line: 61,
            column: 21
          },
          end: {
            line: 61,
            column: 42
          }
        }],
        line: 61
      },
      "5": {
        loc: {
          start: {
            line: 63,
            column: 41
          },
          end: {
            line: 63,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 41
          },
          end: {
            line: 63,
            column: 66
          }
        }, {
          start: {
            line: 63,
            column: 70
          },
          end: {
            line: 63,
            column: 84
          }
        }],
        line: 63
      },
      "6": {
        loc: {
          start: {
            line: 64,
            column: 40
          },
          end: {
            line: 64,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 40
          },
          end: {
            line: 64,
            column: 64
          }
        }, {
          start: {
            line: 64,
            column: 68
          },
          end: {
            line: 64,
            column: 81
          }
        }],
        line: 64
      },
      "7": {
        loc: {
          start: {
            line: 65,
            column: 15
          },
          end: {
            line: 65,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 65,
            column: 46
          },
          end: {
            line: 65,
            column: 53
          }
        }, {
          start: {
            line: 65,
            column: 56
          },
          end: {
            line: 65,
            column: 64
          }
        }],
        line: 65
      },
      "8": {
        loc: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "9": {
        loc: {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 69,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 69,
            column: 17
          }
        }, {
          start: {
            line: 69,
            column: 21
          },
          end: {
            line: 69,
            column: 42
          }
        }],
        line: 69
      },
      "10": {
        loc: {
          start: {
            line: 71,
            column: 42
          },
          end: {
            line: 71,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 42
          },
          end: {
            line: 71,
            column: 68
          }
        }, {
          start: {
            line: 71,
            column: 72
          },
          end: {
            line: 71,
            column: 87
          }
        }],
        line: 71
      },
      "11": {
        loc: {
          start: {
            line: 72,
            column: 40
          },
          end: {
            line: 72,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 40
          },
          end: {
            line: 72,
            column: 64
          }
        }, {
          start: {
            line: 72,
            column: 68
          },
          end: {
            line: 72,
            column: 81
          }
        }],
        line: 72
      },
      "12": {
        loc: {
          start: {
            line: 73,
            column: 15
          },
          end: {
            line: 73,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 47
          },
          end: {
            line: 73,
            column: 54
          }
        }, {
          start: {
            line: 73,
            column: 57
          },
          end: {
            line: 73,
            column: 66
          }
        }],
        line: 73
      },
      "13": {
        loc: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 77,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 77,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "14": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 77,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 77,
            column: 17
          }
        }, {
          start: {
            line: 77,
            column: 21
          },
          end: {
            line: 77,
            column: 42
          }
        }],
        line: 77
      },
      "15": {
        loc: {
          start: {
            line: 78,
            column: 11
          },
          end: {
            line: 78,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 11
          },
          end: {
            line: 78,
            column: 94
          }
        }, {
          start: {
            line: 78,
            column: 98
          },
          end: {
            line: 78,
            column: 102
          }
        }],
        line: 78
      },
      "16": {
        loc: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 81,
            column: 54
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 81,
            column: 54
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "17": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 81,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 81,
            column: 17
          }
        }, {
          start: {
            line: 81,
            column: 21
          },
          end: {
            line: 81,
            column: 42
          }
        }],
        line: 81
      },
      "18": {
        loc: {
          start: {
            line: 84,
            column: 21
          },
          end: {
            line: 84,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 21
          },
          end: {
            line: 84,
            column: 54
          }
        }, {
          start: {
            line: 84,
            column: 58
          },
          end: {
            line: 84,
            column: 59
          }
        }],
        line: 84
      },
      "19": {
        loc: {
          start: {
            line: 85,
            column: 21
          },
          end: {
            line: 85,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 21
          },
          end: {
            line: 85,
            column: 54
          }
        }, {
          start: {
            line: 85,
            column: 58
          },
          end: {
            line: 85,
            column: 59
          }
        }],
        line: 85
      },
      "20": {
        loc: {
          start: {
            line: 90,
            column: 22
          },
          end: {
            line: 90,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 22
          },
          end: {
            line: 90,
            column: 46
          }
        }, {
          start: {
            line: 90,
            column: 50
          },
          end: {
            line: 90,
            column: 63
          }
        }],
        line: 90
      },
      "21": {
        loc: {
          start: {
            line: 93,
            column: 11
          },
          end: {
            line: 93,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 11
          },
          end: {
            line: 93,
            column: 44
          }
        }, {
          start: {
            line: 93,
            column: 48
          },
          end: {
            line: 93,
            column: 112
          }
        }],
        line: 93
      },
      "22": {
        loc: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 96,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 96,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\api\\product-variants.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - FUNCIONES DE API PARA VARIANTES DE PRODUCTOS\r\n// ===================================\r\n\r\nimport { ApiResponse } from '@/types/api';\r\nimport { safeApiResponseJson } from '@/lib/json-utils';\r\n\r\n// Tipo para variante de producto\r\nexport interface ProductVariant {\r\n  id: number;\r\n  name: string;\r\n  price: string;\r\n  discounted_price: string | null;\r\n  capacity: string;\r\n  stock: number;\r\n  is_active: boolean;\r\n}\r\n\r\n/**\r\n * Obtiene las variantes de un producto por ID\r\n * @param productId - ID del producto\r\n * @returns Promise<ApiResponse<ProductVariant[]>>\r\n */\r\nexport async function getProductVariants(productId: number): Promise<ApiResponse<ProductVariant[]>> {\r\n  try {\r\n    const response = await fetch(`/api/products/${productId}/variants`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    // Usar parsing seguro de JSON\r\n    const result = await safeApiResponseJson<ApiResponse<ProductVariant[]>>(response);\r\n\r\n    if (!result || !result.success || !result.data) {\r\n      throw new Error(result?.error || 'Error parsing API response');\r\n    }\r\n\r\n    return result.data;\r\n  } catch (error) {\r\n    console.error(`Error obteniendo variantes del producto ${productId}:`, error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Encuentra la variante con el precio m\xE1s bajo\r\n * @param variants - Array de variantes\r\n * @returns ProductVariant | null\r\n */\r\nexport function findCheapestVariant(variants: ProductVariant[]): ProductVariant | null {\r\n  if (!variants || variants.length === 0) return null;\r\n  \r\n  return variants.reduce((cheapest, current) => {\r\n    const cheapestPrice = parseFloat(cheapest.discounted_price || cheapest.price);\r\n    const currentPrice = parseFloat(current.discounted_price || current.price);\r\n    \r\n    return currentPrice < cheapestPrice ? current : cheapest;\r\n  });\r\n}\r\n\r\n/**\r\n * Encuentra la variante con el precio m\xE1s alto\r\n * @param variants - Array de variantes\r\n * @returns ProductVariant | null\r\n */\r\nexport function findMostExpensiveVariant(variants: ProductVariant[]): ProductVariant | null {\r\n  if (!variants || variants.length === 0) return null;\r\n  \r\n  return variants.reduce((expensive, current) => {\r\n    const expensivePrice = parseFloat(expensive.discounted_price || expensive.price);\r\n    const currentPrice = parseFloat(current.discounted_price || current.price);\r\n    \r\n    return currentPrice > expensivePrice ? current : expensive;\r\n  });\r\n}\r\n\r\n/**\r\n * Busca una variante por capacidad espec\xEDfica\r\n * @param variants - Array de variantes\r\n * @param capacity - Capacidad a buscar (ej: \"4L\", \"10L\")\r\n * @returns ProductVariant | null\r\n */\r\nexport function findVariantByCapacity(variants: ProductVariant[], capacity: string): ProductVariant | null {\r\n  if (!variants || variants.length === 0) return null;\r\n  \r\n  return variants.find(variant => \r\n    variant.capacity.toLowerCase() === capacity.toLowerCase()\r\n  ) || null;\r\n}\r\n\r\n/**\r\n * Obtiene todas las capacidades disponibles de las variantes\r\n * @param variants - Array de variantes\r\n * @returns string[]\r\n */\r\nexport function getAvailableCapacities(variants: ProductVariant[]): string[] {\r\n  if (!variants || variants.length === 0) return [];\r\n  \r\n  return variants\r\n    .map(variant => variant.capacity)\r\n    .filter((capacity, index, array) => array.indexOf(capacity) === index)\r\n    .sort((a, b) => {\r\n      // Ordenar por capacidad num\xE9rica\r\n      const aNum = parseInt(a.replace(/[^\\d]/g, '')) || 0;\r\n      const bNum = parseInt(b.replace(/[^\\d]/g, '')) || 0;\r\n      return aNum - bNum;\r\n    });\r\n}\r\n\r\n/**\r\n * Calcula el precio efectivo de una variante (con descuento si existe)\r\n * @param variant - Variante del producto\r\n * @returns number\r\n */\r\nexport function getEffectivePrice(variant: ProductVariant): number {\r\n  return parseFloat(variant.discounted_price || variant.price);\r\n}\r\n\r\n/**\r\n * Verifica si una variante tiene descuento\r\n * @param variant - Variante del producto\r\n * @returns boolean\r\n */\r\nexport function hasDiscount(variant: ProductVariant): boolean {\r\n  return variant.discounted_price !== null && \r\n         parseFloat(variant.discounted_price) < parseFloat(variant.price);\r\n}\r\n\r\n/**\r\n * Calcula el porcentaje de descuento de una variante\r\n * @param variant - Variante del producto\r\n * @returns number (porcentaje de descuento)\r\n */\r\nexport function getDiscountPercentage(variant: ProductVariant): number {\r\n  if (!hasDiscount(variant)) return 0;\r\n  \r\n  const originalPrice = parseFloat(variant.price);\r\n  const discountedPrice = parseFloat(variant.discounted_price!);\r\n  \r\n  return Math.round(((originalPrice - discountedPrice) / originalPrice) * 100);\r\n}"],
      names: ["findCheapestVariant", "findMostExpensiveVariant", "findVariantByCapacity", "getAvailableCapacities", "getDiscountPercentage", "getEffectivePrice", "getProductVariants", "hasDiscount", "productId", "response", "fetch", "method", "headers", "result", "safeApiResponseJson", "success", "data", "Error", "error", "console", "variants", "length", "reduce", "cheapest", "current", "cheapestPrice", "parseFloat", "discounted_price", "price", "currentPrice", "expensive", "expensivePrice", "capacity", "find", "variant", "toLowerCase", "map", "filter", "index", "array", "indexOf", "sort", "a", "b", "aNum", "parseInt", "replace", "bNum", "originalPrice", "discountedPrice", "Math", "round"],
      mappings: "AAAA,sCAAsC;AACtC,oEAAoE;AACpE,sCAAsC;;;;;;;;;;;;QAiDtBA;eAAAA;;QAgBAC;eAAAA;;QAiBAC;eAAAA;;QAaAC;eAAAA;;QAsCAC;eAAAA;;QAnBAC;eAAAA;;QA7FMC;eAAAA;;QAsGNC;eAAAA;;;2BAxHoB;AAkB7B,eAAeD,mBAAmBE,SAAiB;IACxD,IAAI;QACF,MAAMC,WAAW,MAAMC,MAAM,CAAC,cAAc,EAAEF,UAAU,SAAS,CAAC,EAAE;YAClEG,QAAQ;YACRC,SAAS;gBACP,gBAAgB;YAClB;QACF;QAEA,8BAA8B;QAC9B,MAAMC,SAAS,MAAMC,IAAAA,8BAAmB,EAAgCL;QAExE,IAAI,CAACI,UAAU,CAACA,OAAOE,OAAO,IAAI,CAACF,OAAOG,IAAI,EAAE;YAC9C,MAAM,IAAIC,MAAMJ,QAAQK,SAAS;QACnC;QAEA,OAAOL,OAAOG,IAAI;IACpB,EAAE,OAAOE,OAAO;QACdC,QAAQD,KAAK,CAAC,CAAC,wCAAwC,EAAEV,UAAU,CAAC,CAAC,EAAEU;QACvE,MAAMA;IACR;AACF;AAOO,SAASlB,oBAAoBoB,QAA0B;IAC5D,IAAI,CAACA,YAAYA,SAASC,MAAM,KAAK,GAAG,OAAO;IAE/C,OAAOD,SAASE,MAAM,CAAC,CAACC,UAAUC;QAChC,MAAMC,gBAAgBC,WAAWH,SAASI,gBAAgB,IAAIJ,SAASK,KAAK;QAC5E,MAAMC,eAAeH,WAAWF,QAAQG,gBAAgB,IAAIH,QAAQI,KAAK;QAEzE,OAAOC,eAAeJ,gBAAgBD,UAAUD;IAClD;AACF;AAOO,SAAStB,yBAAyBmB,QAA0B;IACjE,IAAI,CAACA,YAAYA,SAASC,MAAM,KAAK,GAAG,OAAO;IAE/C,OAAOD,SAASE,MAAM,CAAC,CAACQ,WAAWN;QACjC,MAAMO,iBAAiBL,WAAWI,UAAUH,gBAAgB,IAAIG,UAAUF,KAAK;QAC/E,MAAMC,eAAeH,WAAWF,QAAQG,gBAAgB,IAAIH,QAAQI,KAAK;QAEzE,OAAOC,eAAeE,iBAAiBP,UAAUM;IACnD;AACF;AAQO,SAAS5B,sBAAsBkB,QAA0B,EAAEY,QAAgB;IAChF,IAAI,CAACZ,YAAYA,SAASC,MAAM,KAAK,GAAG,OAAO;IAE/C,OAAOD,SAASa,IAAI,CAACC,CAAAA,UACnBA,QAAQF,QAAQ,CAACG,WAAW,OAAOH,SAASG,WAAW,OACpD;AACP;AAOO,SAAShC,uBAAuBiB,QAA0B;IAC/D,IAAI,CAACA,YAAYA,SAASC,MAAM,KAAK,GAAG,OAAO,EAAE;IAEjD,OAAOD,SACJgB,GAAG,CAACF,CAAAA,UAAWA,QAAQF,QAAQ,EAC/BK,MAAM,CAAC,CAACL,UAAUM,OAAOC,QAAUA,MAAMC,OAAO,CAACR,cAAcM,OAC/DG,IAAI,CAAC,CAACC,GAAGC;QACR,iCAAiC;QACjC,MAAMC,OAAOC,SAASH,EAAEI,OAAO,CAAC,UAAU,QAAQ;QAClD,MAAMC,OAAOF,SAASF,EAAEG,OAAO,CAAC,UAAU,QAAQ;QAClD,OAAOF,OAAOG;IAChB;AACJ;AAOO,SAAS1C,kBAAkB6B,OAAuB;IACvD,OAAOR,WAAWQ,QAAQP,gBAAgB,IAAIO,QAAQN,KAAK;AAC7D;AAOO,SAASrB,YAAY2B,OAAuB;IACjD,OAAOA,QAAQP,gBAAgB,KAAK,QAC7BD,WAAWQ,QAAQP,gBAAgB,IAAID,WAAWQ,QAAQN,KAAK;AACxE;AAOO,SAASxB,sBAAsB8B,OAAuB;IAC3D,IAAI,CAAC3B,YAAY2B,UAAU,OAAO;IAElC,MAAMc,gBAAgBtB,WAAWQ,QAAQN,KAAK;IAC9C,MAAMqB,kBAAkBvB,WAAWQ,QAAQP,gBAAgB;IAE3D,OAAOuB,KAAKC,KAAK,CAAC,AAAEH,CAAAA,gBAAgBC,eAAc,IAAKD,gBAAiB;AAC1E"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "12ad86cb8a3fb94b929191a016ad0351c41202ec"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_hl0h9cv9x = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_hl0h9cv9x();
cov_hl0h9cv9x().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_hl0h9cv9x().f[0]++;
  cov_hl0h9cv9x().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_hl0h9cv9x().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_hl0h9cv9x().s[3]++;
_export(exports, {
  get findCheapestVariant() {
    /* istanbul ignore next */
    cov_hl0h9cv9x().f[1]++;
    cov_hl0h9cv9x().s[4]++;
    return findCheapestVariant;
  },
  get findMostExpensiveVariant() {
    /* istanbul ignore next */
    cov_hl0h9cv9x().f[2]++;
    cov_hl0h9cv9x().s[5]++;
    return findMostExpensiveVariant;
  },
  get findVariantByCapacity() {
    /* istanbul ignore next */
    cov_hl0h9cv9x().f[3]++;
    cov_hl0h9cv9x().s[6]++;
    return findVariantByCapacity;
  },
  get getAvailableCapacities() {
    /* istanbul ignore next */
    cov_hl0h9cv9x().f[4]++;
    cov_hl0h9cv9x().s[7]++;
    return getAvailableCapacities;
  },
  get getDiscountPercentage() {
    /* istanbul ignore next */
    cov_hl0h9cv9x().f[5]++;
    cov_hl0h9cv9x().s[8]++;
    return getDiscountPercentage;
  },
  get getEffectivePrice() {
    /* istanbul ignore next */
    cov_hl0h9cv9x().f[6]++;
    cov_hl0h9cv9x().s[9]++;
    return getEffectivePrice;
  },
  get getProductVariants() {
    /* istanbul ignore next */
    cov_hl0h9cv9x().f[7]++;
    cov_hl0h9cv9x().s[10]++;
    return getProductVariants;
  },
  get hasDiscount() {
    /* istanbul ignore next */
    cov_hl0h9cv9x().f[8]++;
    cov_hl0h9cv9x().s[11]++;
    return hasDiscount;
  }
});
const _jsonutils =
/* istanbul ignore next */
(cov_hl0h9cv9x().s[12]++, require("../json-utils"));
async function getProductVariants(productId) {
  /* istanbul ignore next */
  cov_hl0h9cv9x().f[9]++;
  cov_hl0h9cv9x().s[13]++;
  try {
    const response =
    /* istanbul ignore next */
    (cov_hl0h9cv9x().s[14]++, await fetch(`/api/products/${productId}/variants`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json'
      }
    }));
    // Usar parsing seguro de JSON
    const result =
    /* istanbul ignore next */
    (cov_hl0h9cv9x().s[15]++, await (0, _jsonutils.safeApiResponseJson)(response));
    /* istanbul ignore next */
    cov_hl0h9cv9x().s[16]++;
    if (
    /* istanbul ignore next */
    (cov_hl0h9cv9x().b[1][0]++, !result) ||
    /* istanbul ignore next */
    (cov_hl0h9cv9x().b[1][1]++, !result.success) ||
    /* istanbul ignore next */
    (cov_hl0h9cv9x().b[1][2]++, !result.data)) {
      /* istanbul ignore next */
      cov_hl0h9cv9x().b[0][0]++;
      cov_hl0h9cv9x().s[17]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_hl0h9cv9x().b[2][0]++, result?.error) ||
      /* istanbul ignore next */
      (cov_hl0h9cv9x().b[2][1]++, 'Error parsing API response'));
    } else
    /* istanbul ignore next */
    {
      cov_hl0h9cv9x().b[0][1]++;
    }
    cov_hl0h9cv9x().s[18]++;
    return result.data;
  } catch (error) {
    /* istanbul ignore next */
    cov_hl0h9cv9x().s[19]++;
    console.error(`Error obteniendo variantes del producto ${productId}:`, error);
    /* istanbul ignore next */
    cov_hl0h9cv9x().s[20]++;
    throw error;
  }
}
function findCheapestVariant(variants) {
  /* istanbul ignore next */
  cov_hl0h9cv9x().f[10]++;
  cov_hl0h9cv9x().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_hl0h9cv9x().b[4][0]++, !variants) ||
  /* istanbul ignore next */
  (cov_hl0h9cv9x().b[4][1]++, variants.length === 0)) {
    /* istanbul ignore next */
    cov_hl0h9cv9x().b[3][0]++;
    cov_hl0h9cv9x().s[22]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_hl0h9cv9x().b[3][1]++;
  }
  cov_hl0h9cv9x().s[23]++;
  return variants.reduce((cheapest, current) => {
    /* istanbul ignore next */
    cov_hl0h9cv9x().f[11]++;
    const cheapestPrice =
    /* istanbul ignore next */
    (cov_hl0h9cv9x().s[24]++, parseFloat(
    /* istanbul ignore next */
    (cov_hl0h9cv9x().b[5][0]++, cheapest.discounted_price) ||
    /* istanbul ignore next */
    (cov_hl0h9cv9x().b[5][1]++, cheapest.price)));
    const currentPrice =
    /* istanbul ignore next */
    (cov_hl0h9cv9x().s[25]++, parseFloat(
    /* istanbul ignore next */
    (cov_hl0h9cv9x().b[6][0]++, current.discounted_price) ||
    /* istanbul ignore next */
    (cov_hl0h9cv9x().b[6][1]++, current.price)));
    /* istanbul ignore next */
    cov_hl0h9cv9x().s[26]++;
    return currentPrice < cheapestPrice ?
    /* istanbul ignore next */
    (cov_hl0h9cv9x().b[7][0]++, current) :
    /* istanbul ignore next */
    (cov_hl0h9cv9x().b[7][1]++, cheapest);
  });
}
function findMostExpensiveVariant(variants) {
  /* istanbul ignore next */
  cov_hl0h9cv9x().f[12]++;
  cov_hl0h9cv9x().s[27]++;
  if (
  /* istanbul ignore next */
  (cov_hl0h9cv9x().b[9][0]++, !variants) ||
  /* istanbul ignore next */
  (cov_hl0h9cv9x().b[9][1]++, variants.length === 0)) {
    /* istanbul ignore next */
    cov_hl0h9cv9x().b[8][0]++;
    cov_hl0h9cv9x().s[28]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_hl0h9cv9x().b[8][1]++;
  }
  cov_hl0h9cv9x().s[29]++;
  return variants.reduce((expensive, current) => {
    /* istanbul ignore next */
    cov_hl0h9cv9x().f[13]++;
    const expensivePrice =
    /* istanbul ignore next */
    (cov_hl0h9cv9x().s[30]++, parseFloat(
    /* istanbul ignore next */
    (cov_hl0h9cv9x().b[10][0]++, expensive.discounted_price) ||
    /* istanbul ignore next */
    (cov_hl0h9cv9x().b[10][1]++, expensive.price)));
    const currentPrice =
    /* istanbul ignore next */
    (cov_hl0h9cv9x().s[31]++, parseFloat(
    /* istanbul ignore next */
    (cov_hl0h9cv9x().b[11][0]++, current.discounted_price) ||
    /* istanbul ignore next */
    (cov_hl0h9cv9x().b[11][1]++, current.price)));
    /* istanbul ignore next */
    cov_hl0h9cv9x().s[32]++;
    return currentPrice > expensivePrice ?
    /* istanbul ignore next */
    (cov_hl0h9cv9x().b[12][0]++, current) :
    /* istanbul ignore next */
    (cov_hl0h9cv9x().b[12][1]++, expensive);
  });
}
function findVariantByCapacity(variants, capacity) {
  /* istanbul ignore next */
  cov_hl0h9cv9x().f[14]++;
  cov_hl0h9cv9x().s[33]++;
  if (
  /* istanbul ignore next */
  (cov_hl0h9cv9x().b[14][0]++, !variants) ||
  /* istanbul ignore next */
  (cov_hl0h9cv9x().b[14][1]++, variants.length === 0)) {
    /* istanbul ignore next */
    cov_hl0h9cv9x().b[13][0]++;
    cov_hl0h9cv9x().s[34]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_hl0h9cv9x().b[13][1]++;
  }
  cov_hl0h9cv9x().s[35]++;
  return /* istanbul ignore next */(cov_hl0h9cv9x().b[15][0]++, variants.find(variant => {
    /* istanbul ignore next */
    cov_hl0h9cv9x().f[15]++;
    cov_hl0h9cv9x().s[36]++;
    return variant.capacity.toLowerCase() === capacity.toLowerCase();
  })) ||
  /* istanbul ignore next */
  (cov_hl0h9cv9x().b[15][1]++, null);
}
function getAvailableCapacities(variants) {
  /* istanbul ignore next */
  cov_hl0h9cv9x().f[16]++;
  cov_hl0h9cv9x().s[37]++;
  if (
  /* istanbul ignore next */
  (cov_hl0h9cv9x().b[17][0]++, !variants) ||
  /* istanbul ignore next */
  (cov_hl0h9cv9x().b[17][1]++, variants.length === 0)) {
    /* istanbul ignore next */
    cov_hl0h9cv9x().b[16][0]++;
    cov_hl0h9cv9x().s[38]++;
    return [];
  } else
  /* istanbul ignore next */
  {
    cov_hl0h9cv9x().b[16][1]++;
  }
  cov_hl0h9cv9x().s[39]++;
  return variants.map(variant => {
    /* istanbul ignore next */
    cov_hl0h9cv9x().f[17]++;
    cov_hl0h9cv9x().s[40]++;
    return variant.capacity;
  }).filter((capacity, index, array) => {
    /* istanbul ignore next */
    cov_hl0h9cv9x().f[18]++;
    cov_hl0h9cv9x().s[41]++;
    return array.indexOf(capacity) === index;
  }).sort((a, b) => {
    /* istanbul ignore next */
    cov_hl0h9cv9x().f[19]++;
    // Ordenar por capacidad numérica
    const aNum =
    /* istanbul ignore next */
    (cov_hl0h9cv9x().s[42]++,
    /* istanbul ignore next */
    (cov_hl0h9cv9x().b[18][0]++, parseInt(a.replace(/[^\d]/g, ''))) ||
    /* istanbul ignore next */
    (cov_hl0h9cv9x().b[18][1]++, 0));
    const bNum =
    /* istanbul ignore next */
    (cov_hl0h9cv9x().s[43]++,
    /* istanbul ignore next */
    (cov_hl0h9cv9x().b[19][0]++, parseInt(b.replace(/[^\d]/g, ''))) ||
    /* istanbul ignore next */
    (cov_hl0h9cv9x().b[19][1]++, 0));
    /* istanbul ignore next */
    cov_hl0h9cv9x().s[44]++;
    return aNum - bNum;
  });
}
function getEffectivePrice(variant) {
  /* istanbul ignore next */
  cov_hl0h9cv9x().f[20]++;
  cov_hl0h9cv9x().s[45]++;
  return parseFloat(
  /* istanbul ignore next */
  (cov_hl0h9cv9x().b[20][0]++, variant.discounted_price) ||
  /* istanbul ignore next */
  (cov_hl0h9cv9x().b[20][1]++, variant.price));
}
function hasDiscount(variant) {
  /* istanbul ignore next */
  cov_hl0h9cv9x().f[21]++;
  cov_hl0h9cv9x().s[46]++;
  return /* istanbul ignore next */(cov_hl0h9cv9x().b[21][0]++, variant.discounted_price !== null) &&
  /* istanbul ignore next */
  (cov_hl0h9cv9x().b[21][1]++, parseFloat(variant.discounted_price) < parseFloat(variant.price));
}
function getDiscountPercentage(variant) {
  /* istanbul ignore next */
  cov_hl0h9cv9x().f[22]++;
  cov_hl0h9cv9x().s[47]++;
  if (!hasDiscount(variant)) {
    /* istanbul ignore next */
    cov_hl0h9cv9x().b[22][0]++;
    cov_hl0h9cv9x().s[48]++;
    return 0;
  } else
  /* istanbul ignore next */
  {
    cov_hl0h9cv9x().b[22][1]++;
  }
  const originalPrice =
  /* istanbul ignore next */
  (cov_hl0h9cv9x().s[49]++, parseFloat(variant.price));
  const discountedPrice =
  /* istanbul ignore next */
  (cov_hl0h9cv9x().s[50]++, parseFloat(variant.discounted_price));
  /* istanbul ignore next */
  cov_hl0h9cv9x().s[51]++;
  return Math.round((originalPrice - discountedPrice) / originalPrice * 100);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,