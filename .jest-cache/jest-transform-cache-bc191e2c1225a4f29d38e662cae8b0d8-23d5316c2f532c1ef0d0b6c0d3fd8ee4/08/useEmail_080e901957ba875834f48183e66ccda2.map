{"version":3,"names":["useEmail","cov_10h55sq6j4","f","s","useEmailConfig","loading","setLoading","_react","useState","error","setError","sendTestEmail","request","response","fetch","method","headers","body","JSON","stringify","data","json","ok","b","Error","err","errorMessage","message","checkEmailConfig","config","sendWelcomeEmail","email","userName","type","sendOrderEmail","sendResetEmail","setConfig","loadConfig"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useEmail.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - HOOK DE EMAIL\r\n// ===================================\r\n\r\nimport { useState } from 'react';\r\n\r\n// ===================================\r\n// TIPOS\r\n// ===================================\r\n\r\ninterface EmailTestRequest {\r\n  type: 'welcome' | 'order' | 'reset';\r\n  email: string;\r\n  userName: string;\r\n}\r\n\r\ninterface EmailResponse {\r\n  success: boolean;\r\n  messageId?: string;\r\n  error?: string;\r\n  type?: string;\r\n  sentTo?: string;\r\n}\r\n\r\ninterface EmailConfig {\r\n  isReady: boolean;\r\n  fromEmail: string;\r\n  supportEmail: string;\r\n  hasApiKey: boolean;\r\n  provider: string;\r\n}\r\n\r\n// ===================================\r\n// HOOK useEmail\r\n// ===================================\r\n\r\nexport function useEmail() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  /**\r\n   * Envía un email de prueba\r\n   */\r\n  const sendTestEmail = async (request: EmailTestRequest): Promise<EmailResponse> => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch('/api/email/test', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(request),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Error enviando email');\r\n      }\r\n\r\n      return data;\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      setError(errorMessage);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Verifica la configuración del servicio de email\r\n   */\r\n  const checkEmailConfig = async (): Promise<EmailConfig> => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch('/api/email/test', {\r\n        method: 'GET',\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Error verificando configuración');\r\n      }\r\n\r\n      return data.config;\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      setError(errorMessage);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Envía email de bienvenida\r\n   */\r\n  const sendWelcomeEmail = async (email: string, userName: string) => {\r\n    return sendTestEmail({ type: 'welcome', email, userName });\r\n  };\r\n\r\n  /**\r\n   * Envía email de confirmación de pedido\r\n   */\r\n  const sendOrderEmail = async (email: string, userName: string) => {\r\n    return sendTestEmail({ type: 'order', email, userName });\r\n  };\r\n\r\n  /**\r\n   * Envía email de recuperación de contraseña\r\n   */\r\n  const sendResetEmail = async (email: string, userName: string) => {\r\n    return sendTestEmail({ type: 'reset', email, userName });\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    sendTestEmail,\r\n    sendWelcomeEmail,\r\n    sendOrderEmail,\r\n    sendResetEmail,\r\n    checkEmailConfig,\r\n  };\r\n}\r\n\r\n// ===================================\r\n// HOOK useEmailConfig\r\n// ===================================\r\n\r\nexport function useEmailConfig() {\r\n  const [config, setConfig] = useState<EmailConfig | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  /**\r\n   * Carga la configuración de email\r\n   */\r\n  const loadConfig = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch('/api/email/test');\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Error cargando configuración');\r\n      }\r\n\r\n      setConfig(data.config);\r\n      return data.config;\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      setError(errorMessage);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    config,\r\n    loading,\r\n    error,\r\n    loadConfig,\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}