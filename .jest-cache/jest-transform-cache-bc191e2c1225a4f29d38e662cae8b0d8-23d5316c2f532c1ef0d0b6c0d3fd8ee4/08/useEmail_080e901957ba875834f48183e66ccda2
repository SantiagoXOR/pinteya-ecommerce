758eb8b0155cda498704f89d551918b5
// ===================================
// PINTEYA E-COMMERCE - HOOK DE EMAIL
// ===================================
"use strict";

/* istanbul ignore next */
function cov_10h55sq6j4() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useEmail.ts";
  var hash = "4baae79fd061faffc7d522f6c5185f48ed2981d3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useEmail.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 30
        }
      },
      "6": {
        start: {
          line: 22,
          column: 15
        },
        end: {
          line: 22,
          column: 31
        }
      },
      "7": {
        start: {
          line: 24,
          column: 34
        },
        end: {
          line: 24,
          column: 61
        }
      },
      "8": {
        start: {
          line: 25,
          column: 30
        },
        end: {
          line: 25,
          column: 56
        }
      },
      "9": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "10": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 25
        }
      },
      "11": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 23
        }
      },
      "12": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "13": {
        start: {
          line: 32,
          column: 29
        },
        end: {
          line: 38,
          column: 14
        }
      },
      "14": {
        start: {
          line: 39,
          column: 25
        },
        end: {
          line: 39,
          column: 46
        }
      },
      "15": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 42,
          column: 13
        }
      },
      "16": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 70
        }
      },
      "17": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 24
        }
      },
      "18": {
        start: {
          line: 45,
          column: 33
        },
        end: {
          line: 45,
          column: 89
        }
      },
      "19": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 35
        }
      },
      "20": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 22
        }
      },
      "21": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 30
        }
      },
      "22": {
        start: {
          line: 54,
          column: 31
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "23": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 25
        }
      },
      "24": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 23
        }
      },
      "25": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "26": {
        start: {
          line: 58,
          column: 29
        },
        end: {
          line: 60,
          column: 14
        }
      },
      "27": {
        start: {
          line: 61,
          column: 25
        },
        end: {
          line: 61,
          column: 46
        }
      },
      "28": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 64,
          column: 13
        }
      },
      "29": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 81
        }
      },
      "30": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 31
        }
      },
      "31": {
        start: {
          line: 67,
          column: 33
        },
        end: {
          line: 67,
          column: 89
        }
      },
      "32": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 35
        }
      },
      "33": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 22
        }
      },
      "34": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 30
        }
      },
      "35": {
        start: {
          line: 76,
          column: 31
        },
        end: {
          line: 82,
          column: 5
        }
      },
      "36": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 81,
          column: 11
        }
      },
      "37": {
        start: {
          line: 85,
          column: 29
        },
        end: {
          line: 91,
          column: 5
        }
      },
      "38": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 90,
          column: 11
        }
      },
      "39": {
        start: {
          line: 94,
          column: 29
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "40": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 99,
          column: 11
        }
      },
      "41": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 109,
          column: 6
        }
      },
      "42": {
        start: {
          line: 112,
          column: 32
        },
        end: {
          line: 112,
          column: 58
        }
      },
      "43": {
        start: {
          line: 113,
          column: 34
        },
        end: {
          line: 113,
          column: 61
        }
      },
      "44": {
        start: {
          line: 114,
          column: 30
        },
        end: {
          line: 114,
          column: 56
        }
      },
      "45": {
        start: {
          line: 117,
          column: 25
        },
        end: {
          line: 135,
          column: 5
        }
      },
      "46": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 25
        }
      },
      "47": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 23
        }
      },
      "48": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 134,
          column: 9
        }
      },
      "49": {
        start: {
          line: 121,
          column: 29
        },
        end: {
          line: 121,
          column: 59
        }
      },
      "50": {
        start: {
          line: 122,
          column: 25
        },
        end: {
          line: 122,
          column: 46
        }
      },
      "51": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 125,
          column: 13
        }
      },
      "52": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 78
        }
      },
      "53": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 35
        }
      },
      "54": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 31
        }
      },
      "55": {
        start: {
          line: 129,
          column: 33
        },
        end: {
          line: 129,
          column: 89
        }
      },
      "56": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 35
        }
      },
      "57": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 22
        }
      },
      "58": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 30
        }
      },
      "59": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 141,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 26
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "useEmail",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 17
          }
        },
        loc: {
          start: {
            line: 23,
            column: 20
          },
          end: {
            line: 110,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 28,
            column: 28
          },
          end: {
            line: 28,
            column: 29
          }
        },
        loc: {
          start: {
            line: 28,
            column: 45
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 28
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 54,
            column: 31
          },
          end: {
            line: 54,
            column: 32
          }
        },
        loc: {
          start: {
            line: 54,
            column: 41
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 54
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 76,
            column: 31
          },
          end: {
            line: 76,
            column: 32
          }
        },
        loc: {
          start: {
            line: 76,
            column: 56
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 76
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 85,
            column: 29
          },
          end: {
            line: 85,
            column: 30
          }
        },
        loc: {
          start: {
            line: 85,
            column: 54
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 85
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 94,
            column: 29
          },
          end: {
            line: 94,
            column: 30
          }
        },
        loc: {
          start: {
            line: 94,
            column: 54
          },
          end: {
            line: 100,
            column: 5
          }
        },
        line: 94
      },
      "9": {
        name: "useEmailConfig",
        decl: {
          start: {
            line: 111,
            column: 9
          },
          end: {
            line: 111,
            column: 23
          }
        },
        loc: {
          start: {
            line: 111,
            column: 26
          },
          end: {
            line: 142,
            column: 1
          }
        },
        line: 111
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 117,
            column: 25
          },
          end: {
            line: 117,
            column: 26
          }
        },
        loc: {
          start: {
            line: 117,
            column: 35
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 117
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 42,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 42,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "1": {
        loc: {
          start: {
            line: 41,
            column: 32
          },
          end: {
            line: 41,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 32
          },
          end: {
            line: 41,
            column: 42
          }
        }, {
          start: {
            line: 41,
            column: 46
          },
          end: {
            line: 41,
            column: 68
          }
        }],
        line: 41
      },
      "2": {
        loc: {
          start: {
            line: 45,
            column: 33
          },
          end: {
            line: 45,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 56
          },
          end: {
            line: 45,
            column: 67
          }
        }, {
          start: {
            line: 45,
            column: 70
          },
          end: {
            line: 45,
            column: 89
          }
        }],
        line: 45
      },
      "3": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "4": {
        loc: {
          start: {
            line: 63,
            column: 32
          },
          end: {
            line: 63,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 32
          },
          end: {
            line: 63,
            column: 42
          }
        }, {
          start: {
            line: 63,
            column: 46
          },
          end: {
            line: 63,
            column: 79
          }
        }],
        line: 63
      },
      "5": {
        loc: {
          start: {
            line: 67,
            column: 33
          },
          end: {
            line: 67,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 67,
            column: 56
          },
          end: {
            line: 67,
            column: 67
          }
        }, {
          start: {
            line: 67,
            column: 70
          },
          end: {
            line: 67,
            column: 89
          }
        }],
        line: 67
      },
      "6": {
        loc: {
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 125,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 125,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "7": {
        loc: {
          start: {
            line: 124,
            column: 32
          },
          end: {
            line: 124,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 32
          },
          end: {
            line: 124,
            column: 42
          }
        }, {
          start: {
            line: 124,
            column: 46
          },
          end: {
            line: 124,
            column: 76
          }
        }],
        line: 124
      },
      "8": {
        loc: {
          start: {
            line: 129,
            column: 33
          },
          end: {
            line: 129,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 129,
            column: 56
          },
          end: {
            line: 129,
            column: 67
          }
        }, {
          start: {
            line: 129,
            column: 70
          },
          end: {
            line: 129,
            column: 89
          }
        }],
        line: 129
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useEmail.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - HOOK DE EMAIL\r\n// ===================================\r\n\r\nimport { useState } from 'react';\r\n\r\n// ===================================\r\n// TIPOS\r\n// ===================================\r\n\r\ninterface EmailTestRequest {\r\n  type: 'welcome' | 'order' | 'reset';\r\n  email: string;\r\n  userName: string;\r\n}\r\n\r\ninterface EmailResponse {\r\n  success: boolean;\r\n  messageId?: string;\r\n  error?: string;\r\n  type?: string;\r\n  sentTo?: string;\r\n}\r\n\r\ninterface EmailConfig {\r\n  isReady: boolean;\r\n  fromEmail: string;\r\n  supportEmail: string;\r\n  hasApiKey: boolean;\r\n  provider: string;\r\n}\r\n\r\n// ===================================\r\n// HOOK useEmail\r\n// ===================================\r\n\r\nexport function useEmail() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  /**\r\n   * Env\xEDa un email de prueba\r\n   */\r\n  const sendTestEmail = async (request: EmailTestRequest): Promise<EmailResponse> => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch('/api/email/test', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(request),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Error enviando email');\r\n      }\r\n\r\n      return data;\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      setError(errorMessage);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Verifica la configuraci\xF3n del servicio de email\r\n   */\r\n  const checkEmailConfig = async (): Promise<EmailConfig> => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch('/api/email/test', {\r\n        method: 'GET',\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Error verificando configuraci\xF3n');\r\n      }\r\n\r\n      return data.config;\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      setError(errorMessage);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Env\xEDa email de bienvenida\r\n   */\r\n  const sendWelcomeEmail = async (email: string, userName: string) => {\r\n    return sendTestEmail({ type: 'welcome', email, userName });\r\n  };\r\n\r\n  /**\r\n   * Env\xEDa email de confirmaci\xF3n de pedido\r\n   */\r\n  const sendOrderEmail = async (email: string, userName: string) => {\r\n    return sendTestEmail({ type: 'order', email, userName });\r\n  };\r\n\r\n  /**\r\n   * Env\xEDa email de recuperaci\xF3n de contrase\xF1a\r\n   */\r\n  const sendResetEmail = async (email: string, userName: string) => {\r\n    return sendTestEmail({ type: 'reset', email, userName });\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    sendTestEmail,\r\n    sendWelcomeEmail,\r\n    sendOrderEmail,\r\n    sendResetEmail,\r\n    checkEmailConfig,\r\n  };\r\n}\r\n\r\n// ===================================\r\n// HOOK useEmailConfig\r\n// ===================================\r\n\r\nexport function useEmailConfig() {\r\n  const [config, setConfig] = useState<EmailConfig | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  /**\r\n   * Carga la configuraci\xF3n de email\r\n   */\r\n  const loadConfig = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch('/api/email/test');\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Error cargando configuraci\xF3n');\r\n      }\r\n\r\n      setConfig(data.config);\r\n      return data.config;\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      setError(errorMessage);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    config,\r\n    loading,\r\n    error,\r\n    loadConfig,\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useEmail", "useEmailConfig", "loading", "setLoading", "useState", "error", "setError", "sendTestEmail", "request", "response", "fetch", "method", "headers", "body", "JSON", "stringify", "data", "json", "ok", "Error", "err", "errorMessage", "message", "checkEmailConfig", "config", "sendWelcomeEmail", "email", "userName", "type", "sendOrderEmail", "sendResetEmail", "setConfig", "loadConfig"],
      mappings: "AAAA,sCAAsC;AACtC,qCAAqC;AACrC,sCAAsC;;;;;;;;;;;;QAkCtBA;eAAAA;;QAoGAC;eAAAA;;;uBApIS;AAgClB,SAASD;IACd,MAAM,CAACE,SAASC,WAAW,GAAGC,IAAAA,eAAQ,EAAC;IACvC,MAAM,CAACC,OAAOC,SAAS,GAAGF,IAAAA,eAAQ,EAAgB;IAElD;;GAEC,GACD,MAAMG,gBAAgB,OAAOC;QAC3BL,WAAW;QACXG,SAAS;QAET,IAAI;YACF,MAAMG,WAAW,MAAMC,MAAM,mBAAmB;gBAC9CC,QAAQ;gBACRC,SAAS;oBACP,gBAAgB;gBAClB;gBACAC,MAAMC,KAAKC,SAAS,CAACP;YACvB;YAEA,MAAMQ,OAAO,MAAMP,SAASQ,IAAI;YAEhC,IAAI,CAACR,SAASS,EAAE,EAAE;gBAChB,MAAM,IAAIC,MAAMH,KAAKX,KAAK,IAAI;YAChC;YAEA,OAAOW;QACT,EAAE,OAAOI,KAAK;YACZ,MAAMC,eAAeD,eAAeD,QAAQC,IAAIE,OAAO,GAAG;YAC1DhB,SAASe;YACT,MAAMD;QACR,SAAU;YACRjB,WAAW;QACb;IACF;IAEA;;GAEC,GACD,MAAMoB,mBAAmB;QACvBpB,WAAW;QACXG,SAAS;QAET,IAAI;YACF,MAAMG,WAAW,MAAMC,MAAM,mBAAmB;gBAC9CC,QAAQ;YACV;YAEA,MAAMK,OAAO,MAAMP,SAASQ,IAAI;YAEhC,IAAI,CAACR,SAASS,EAAE,EAAE;gBAChB,MAAM,IAAIC,MAAMH,KAAKX,KAAK,IAAI;YAChC;YAEA,OAAOW,KAAKQ,MAAM;QACpB,EAAE,OAAOJ,KAAK;YACZ,MAAMC,eAAeD,eAAeD,QAAQC,IAAIE,OAAO,GAAG;YAC1DhB,SAASe;YACT,MAAMD;QACR,SAAU;YACRjB,WAAW;QACb;IACF;IAEA;;GAEC,GACD,MAAMsB,mBAAmB,OAAOC,OAAeC;QAC7C,OAAOpB,cAAc;YAAEqB,MAAM;YAAWF;YAAOC;QAAS;IAC1D;IAEA;;GAEC,GACD,MAAME,iBAAiB,OAAOH,OAAeC;QAC3C,OAAOpB,cAAc;YAAEqB,MAAM;YAASF;YAAOC;QAAS;IACxD;IAEA;;GAEC,GACD,MAAMG,iBAAiB,OAAOJ,OAAeC;QAC3C,OAAOpB,cAAc;YAAEqB,MAAM;YAASF;YAAOC;QAAS;IACxD;IAEA,OAAO;QACLzB;QACAG;QACAE;QACAkB;QACAI;QACAC;QACAP;IACF;AACF;AAMO,SAAStB;IACd,MAAM,CAACuB,QAAQO,UAAU,GAAG3B,IAAAA,eAAQ,EAAqB;IACzD,MAAM,CAACF,SAASC,WAAW,GAAGC,IAAAA,eAAQ,EAAC;IACvC,MAAM,CAACC,OAAOC,SAAS,GAAGF,IAAAA,eAAQ,EAAgB;IAElD;;GAEC,GACD,MAAM4B,aAAa;QACjB7B,WAAW;QACXG,SAAS;QAET,IAAI;YACF,MAAMG,WAAW,MAAMC,MAAM;YAC7B,MAAMM,OAAO,MAAMP,SAASQ,IAAI;YAEhC,IAAI,CAACR,SAASS,EAAE,EAAE;gBAChB,MAAM,IAAIC,MAAMH,KAAKX,KAAK,IAAI;YAChC;YAEA0B,UAAUf,KAAKQ,MAAM;YACrB,OAAOR,KAAKQ,MAAM;QACpB,EAAE,OAAOJ,KAAK;YACZ,MAAMC,eAAeD,eAAeD,QAAQC,IAAIE,OAAO,GAAG;YAC1DhB,SAASe;YACT,MAAMD;QACR,SAAU;YACRjB,WAAW;QACb;IACF;IAEA,OAAO;QACLqB;QACAtB;QACAG;QACA2B;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4baae79fd061faffc7d522f6c5185f48ed2981d3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_10h55sq6j4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_10h55sq6j4();
cov_10h55sq6j4().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_10h55sq6j4().f[0]++;
  cov_10h55sq6j4().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_10h55sq6j4().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_10h55sq6j4().s[3]++;
_export(exports, {
  get useEmail() {
    /* istanbul ignore next */
    cov_10h55sq6j4().f[1]++;
    cov_10h55sq6j4().s[4]++;
    return useEmail;
  },
  get useEmailConfig() {
    /* istanbul ignore next */
    cov_10h55sq6j4().f[2]++;
    cov_10h55sq6j4().s[5]++;
    return useEmailConfig;
  }
});
const _react =
/* istanbul ignore next */
(cov_10h55sq6j4().s[6]++, require("react"));
function useEmail() {
  /* istanbul ignore next */
  cov_10h55sq6j4().f[3]++;
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_10h55sq6j4().s[7]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_10h55sq6j4().s[8]++, (0, _react.useState)(null));
  /**
  * Envía un email de prueba
  */
  /* istanbul ignore next */
  cov_10h55sq6j4().s[9]++;
  const sendTestEmail = async request => {
    /* istanbul ignore next */
    cov_10h55sq6j4().f[4]++;
    cov_10h55sq6j4().s[10]++;
    setLoading(true);
    /* istanbul ignore next */
    cov_10h55sq6j4().s[11]++;
    setError(null);
    /* istanbul ignore next */
    cov_10h55sq6j4().s[12]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_10h55sq6j4().s[13]++, await fetch('/api/email/test', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(request)
      }));
      const data =
      /* istanbul ignore next */
      (cov_10h55sq6j4().s[14]++, await response.json());
      /* istanbul ignore next */
      cov_10h55sq6j4().s[15]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_10h55sq6j4().b[0][0]++;
        cov_10h55sq6j4().s[16]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_10h55sq6j4().b[1][0]++, data.error) ||
        /* istanbul ignore next */
        (cov_10h55sq6j4().b[1][1]++, 'Error enviando email'));
      } else
      /* istanbul ignore next */
      {
        cov_10h55sq6j4().b[0][1]++;
      }
      cov_10h55sq6j4().s[17]++;
      return data;
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_10h55sq6j4().s[18]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_10h55sq6j4().b[2][0]++, err.message) :
      /* istanbul ignore next */
      (cov_10h55sq6j4().b[2][1]++, 'Error desconocido'));
      /* istanbul ignore next */
      cov_10h55sq6j4().s[19]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_10h55sq6j4().s[20]++;
      throw err;
    } finally {
      /* istanbul ignore next */
      cov_10h55sq6j4().s[21]++;
      setLoading(false);
    }
  };
  /**
  * Verifica la configuración del servicio de email
  */
  /* istanbul ignore next */
  cov_10h55sq6j4().s[22]++;
  const checkEmailConfig = async () => {
    /* istanbul ignore next */
    cov_10h55sq6j4().f[5]++;
    cov_10h55sq6j4().s[23]++;
    setLoading(true);
    /* istanbul ignore next */
    cov_10h55sq6j4().s[24]++;
    setError(null);
    /* istanbul ignore next */
    cov_10h55sq6j4().s[25]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_10h55sq6j4().s[26]++, await fetch('/api/email/test', {
        method: 'GET'
      }));
      const data =
      /* istanbul ignore next */
      (cov_10h55sq6j4().s[27]++, await response.json());
      /* istanbul ignore next */
      cov_10h55sq6j4().s[28]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_10h55sq6j4().b[3][0]++;
        cov_10h55sq6j4().s[29]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_10h55sq6j4().b[4][0]++, data.error) ||
        /* istanbul ignore next */
        (cov_10h55sq6j4().b[4][1]++, 'Error verificando configuración'));
      } else
      /* istanbul ignore next */
      {
        cov_10h55sq6j4().b[3][1]++;
      }
      cov_10h55sq6j4().s[30]++;
      return data.config;
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_10h55sq6j4().s[31]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_10h55sq6j4().b[5][0]++, err.message) :
      /* istanbul ignore next */
      (cov_10h55sq6j4().b[5][1]++, 'Error desconocido'));
      /* istanbul ignore next */
      cov_10h55sq6j4().s[32]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_10h55sq6j4().s[33]++;
      throw err;
    } finally {
      /* istanbul ignore next */
      cov_10h55sq6j4().s[34]++;
      setLoading(false);
    }
  };
  /**
  * Envía email de bienvenida
  */
  /* istanbul ignore next */
  cov_10h55sq6j4().s[35]++;
  const sendWelcomeEmail = async (email, userName) => {
    /* istanbul ignore next */
    cov_10h55sq6j4().f[6]++;
    cov_10h55sq6j4().s[36]++;
    return sendTestEmail({
      type: 'welcome',
      email,
      userName
    });
  };
  /**
  * Envía email de confirmación de pedido
  */
  /* istanbul ignore next */
  cov_10h55sq6j4().s[37]++;
  const sendOrderEmail = async (email, userName) => {
    /* istanbul ignore next */
    cov_10h55sq6j4().f[7]++;
    cov_10h55sq6j4().s[38]++;
    return sendTestEmail({
      type: 'order',
      email,
      userName
    });
  };
  /**
  * Envía email de recuperación de contraseña
  */
  /* istanbul ignore next */
  cov_10h55sq6j4().s[39]++;
  const sendResetEmail = async (email, userName) => {
    /* istanbul ignore next */
    cov_10h55sq6j4().f[8]++;
    cov_10h55sq6j4().s[40]++;
    return sendTestEmail({
      type: 'reset',
      email,
      userName
    });
  };
  /* istanbul ignore next */
  cov_10h55sq6j4().s[41]++;
  return {
    loading,
    error,
    sendTestEmail,
    sendWelcomeEmail,
    sendOrderEmail,
    sendResetEmail,
    checkEmailConfig
  };
}
function useEmailConfig() {
  /* istanbul ignore next */
  cov_10h55sq6j4().f[9]++;
  const [config, setConfig] =
  /* istanbul ignore next */
  (cov_10h55sq6j4().s[42]++, (0, _react.useState)(null));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_10h55sq6j4().s[43]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_10h55sq6j4().s[44]++, (0, _react.useState)(null));
  /**
  * Carga la configuración de email
  */
  /* istanbul ignore next */
  cov_10h55sq6j4().s[45]++;
  const loadConfig = async () => {
    /* istanbul ignore next */
    cov_10h55sq6j4().f[10]++;
    cov_10h55sq6j4().s[46]++;
    setLoading(true);
    /* istanbul ignore next */
    cov_10h55sq6j4().s[47]++;
    setError(null);
    /* istanbul ignore next */
    cov_10h55sq6j4().s[48]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_10h55sq6j4().s[49]++, await fetch('/api/email/test'));
      const data =
      /* istanbul ignore next */
      (cov_10h55sq6j4().s[50]++, await response.json());
      /* istanbul ignore next */
      cov_10h55sq6j4().s[51]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_10h55sq6j4().b[6][0]++;
        cov_10h55sq6j4().s[52]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_10h55sq6j4().b[7][0]++, data.error) ||
        /* istanbul ignore next */
        (cov_10h55sq6j4().b[7][1]++, 'Error cargando configuración'));
      } else
      /* istanbul ignore next */
      {
        cov_10h55sq6j4().b[6][1]++;
      }
      cov_10h55sq6j4().s[53]++;
      setConfig(data.config);
      /* istanbul ignore next */
      cov_10h55sq6j4().s[54]++;
      return data.config;
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_10h55sq6j4().s[55]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_10h55sq6j4().b[8][0]++, err.message) :
      /* istanbul ignore next */
      (cov_10h55sq6j4().b[8][1]++, 'Error desconocido'));
      /* istanbul ignore next */
      cov_10h55sq6j4().s[56]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_10h55sq6j4().s[57]++;
      throw err;
    } finally {
      /* istanbul ignore next */
      cov_10h55sq6j4().s[58]++;
      setLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_10h55sq6j4().s[59]++;
  return {
    config,
    loading,
    error,
    loadConfig
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,