{"version":3,"names":["useProductFormReducer","cov_2pld42bkgj","f","s","useProductFormValidation","initialState","name","description","shortDescription","categoryId","status","brand","model","sku","barcode","price","comparePrice","costPrice","taxRate","trackInventory","stock","lowStockThreshold","allowBackorder","requiresShipping","weight","dimensions","length","width","height","seoTitle","seoDescription","seoKeywords","images","variants","isLoading","isSaving","errors","isDirty","currentStep","validationErrors","productFormReducer","state","action","type","b","field","value","undefined","fields","payload","error","_","restErrors","Math","max","min","step","image","filter","index","variant","map","includes","keyword","product","dispatch","_react","useReducer","actions","useMemo","setField","setMultipleFields","setLoading","loading","setSaving","saving","setError","clearError","clearAllErrors","setValidationErrors","setDirty","dirty","setStep","nextStep","prevStep","addImage","removeImage","addVariant","removeVariant","updateVariant","addSeoKeyword","removeSeoKeyword","resetForm","loadProduct","selectors","hasErrors","Object","keys","hasValidationErrors","isFormValid","trim","isFirstStep","isLastStep","stepProgress","profitMargin","discountPercentage","isLowStock","isOutOfStock","isPriceValid","isSkuValid","areDimensionsValid","imageCount","variantCount","keywordCount","getStepErrors","stepFields","validateField","useCallback","test","validateForm","isValid","forEach","fieldValid"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\optimization\\useProductFormReducer.ts"],"sourcesContent":["import { useReducer, useCallback, useMemo } from 'react';\r\n\r\n// Tipos para el estado del formulario de productos\r\ninterface ProductFormState {\r\n  // Información básica\r\n  name: string;\r\n  description: string;\r\n  shortDescription: string;\r\n  categoryId: string;\r\n  status: 'active' | 'inactive' | 'draft';\r\n  \r\n  // Detalles del producto\r\n  brand: string;\r\n  model: string;\r\n  sku: string;\r\n  barcode: string;\r\n  \r\n  // Precios\r\n  price: number;\r\n  comparePrice: number;\r\n  costPrice: number;\r\n  taxRate: number;\r\n  \r\n  // Inventario\r\n  trackInventory: boolean;\r\n  stock: number;\r\n  lowStockThreshold: number;\r\n  allowBackorder: boolean;\r\n  \r\n  // Envío\r\n  requiresShipping: boolean;\r\n  weight: number;\r\n  dimensions: {\r\n    length: number;\r\n    width: number;\r\n    height: number;\r\n  };\r\n  \r\n  // SEO\r\n  seoTitle: string;\r\n  seoDescription: string;\r\n  seoKeywords: string[];\r\n  \r\n  // Imágenes y variantes\r\n  images: string[];\r\n  variants: any[];\r\n  \r\n  // Estado del formulario\r\n  isLoading: boolean;\r\n  isSaving: boolean;\r\n  errors: Record<string, string>;\r\n  isDirty: boolean;\r\n  currentStep: number;\r\n  validationErrors: Record<string, string[]>;\r\n}\r\n\r\n// Tipos de acciones\r\ntype ProductFormAction =\r\n  | { type: 'SET_FIELD'; field: keyof ProductFormState; value: any }\r\n  | { type: 'SET_MULTIPLE_FIELDS'; fields: Partial<ProductFormState> }\r\n  | { type: 'SET_LOADING'; payload: boolean }\r\n  | { type: 'SET_SAVING'; payload: boolean }\r\n  | { type: 'SET_ERROR'; field: string; error: string }\r\n  | { type: 'CLEAR_ERROR'; field: string }\r\n  | { type: 'CLEAR_ALL_ERRORS' }\r\n  | { type: 'SET_VALIDATION_ERRORS'; errors: Record<string, string[]> }\r\n  | { type: 'SET_DIRTY'; payload: boolean }\r\n  | { type: 'SET_STEP'; step: number }\r\n  | { type: 'NEXT_STEP' }\r\n  | { type: 'PREV_STEP' }\r\n  | { type: 'ADD_IMAGE'; image: string }\r\n  | { type: 'REMOVE_IMAGE'; index: number }\r\n  | { type: 'ADD_VARIANT'; variant: any }\r\n  | { type: 'REMOVE_VARIANT'; index: number }\r\n  | { type: 'UPDATE_VARIANT'; index: number; variant: any }\r\n  | { type: 'ADD_SEO_KEYWORD'; keyword: string }\r\n  | { type: 'REMOVE_SEO_KEYWORD'; index: number }\r\n  | { type: 'RESET_FORM' }\r\n  | { type: 'LOAD_PRODUCT'; product: Partial<ProductFormState> };\r\n\r\n// Estado inicial\r\nconst initialState: ProductFormState = {\r\n  // Información básica\r\n  name: '',\r\n  description: '',\r\n  shortDescription: '',\r\n  categoryId: '',\r\n  status: 'draft',\r\n  \r\n  // Detalles del producto\r\n  brand: '',\r\n  model: '',\r\n  sku: '',\r\n  barcode: '',\r\n  \r\n  // Precios\r\n  price: 0,\r\n  comparePrice: 0,\r\n  costPrice: 0,\r\n  taxRate: 0,\r\n  \r\n  // Inventario\r\n  trackInventory: true,\r\n  stock: 0,\r\n  lowStockThreshold: 5,\r\n  allowBackorder: false,\r\n  \r\n  // Envío\r\n  requiresShipping: true,\r\n  weight: 0,\r\n  dimensions: {\r\n    length: 0,\r\n    width: 0,\r\n    height: 0,\r\n  },\r\n  \r\n  // SEO\r\n  seoTitle: '',\r\n  seoDescription: '',\r\n  seoKeywords: [],\r\n  \r\n  // Imágenes y variantes\r\n  images: [],\r\n  variants: [],\r\n  \r\n  // Estado del formulario\r\n  isLoading: false,\r\n  isSaving: false,\r\n  errors: {},\r\n  isDirty: false,\r\n  currentStep: 0,\r\n  validationErrors: {},\r\n};\r\n\r\n// Reducer function\r\nfunction productFormReducer(\r\n  state: ProductFormState,\r\n  action: ProductFormAction\r\n): ProductFormState {\r\n  switch (action.type) {\r\n    case 'SET_FIELD':\r\n      return {\r\n        ...state,\r\n        [action.field]: action.value,\r\n        isDirty: true,\r\n        // Limpiar error del campo si existe\r\n        errors: {\r\n          ...state.errors,\r\n          [action.field]: undefined,\r\n        },\r\n      };\r\n    \r\n    case 'SET_MULTIPLE_FIELDS':\r\n      return {\r\n        ...state,\r\n        ...action.fields,\r\n        isDirty: true,\r\n      };\r\n    \r\n    case 'SET_LOADING':\r\n      return { ...state, isLoading: action.payload };\r\n    \r\n    case 'SET_SAVING':\r\n      return { ...state, isSaving: action.payload };\r\n    \r\n    case 'SET_ERROR':\r\n      return {\r\n        ...state,\r\n        errors: {\r\n          ...state.errors,\r\n          [action.field]: action.error,\r\n        },\r\n      };\r\n    \r\n    case 'CLEAR_ERROR':\r\n      const { [action.field]: _, ...restErrors } = state.errors;\r\n      return {\r\n        ...state,\r\n        errors: restErrors,\r\n      };\r\n    \r\n    case 'CLEAR_ALL_ERRORS':\r\n      return {\r\n        ...state,\r\n        errors: {},\r\n        validationErrors: {},\r\n      };\r\n    \r\n    case 'SET_VALIDATION_ERRORS':\r\n      return {\r\n        ...state,\r\n        validationErrors: action.errors,\r\n      };\r\n    \r\n    case 'SET_DIRTY':\r\n      return { ...state, isDirty: action.payload };\r\n    \r\n    case 'SET_STEP':\r\n      return { ...state, currentStep: Math.max(0, Math.min(4, action.step)) };\r\n    \r\n    case 'NEXT_STEP':\r\n      return { ...state, currentStep: Math.min(4, state.currentStep + 1) };\r\n    \r\n    case 'PREV_STEP':\r\n      return { ...state, currentStep: Math.max(0, state.currentStep - 1) };\r\n    \r\n    case 'ADD_IMAGE':\r\n      return {\r\n        ...state,\r\n        images: [...state.images, action.image],\r\n        isDirty: true,\r\n      };\r\n    \r\n    case 'REMOVE_IMAGE':\r\n      return {\r\n        ...state,\r\n        images: state.images.filter((_, index) => index !== action.index),\r\n        isDirty: true,\r\n      };\r\n    \r\n    case 'ADD_VARIANT':\r\n      return {\r\n        ...state,\r\n        variants: [...state.variants, action.variant],\r\n        isDirty: true,\r\n      };\r\n    \r\n    case 'REMOVE_VARIANT':\r\n      return {\r\n        ...state,\r\n        variants: state.variants.filter((_, index) => index !== action.index),\r\n        isDirty: true,\r\n      };\r\n    \r\n    case 'UPDATE_VARIANT':\r\n      return {\r\n        ...state,\r\n        variants: state.variants.map((variant, index) =>\r\n          index === action.index ? action.variant : variant\r\n        ),\r\n        isDirty: true,\r\n      };\r\n    \r\n    case 'ADD_SEO_KEYWORD':\r\n      if (!state.seoKeywords.includes(action.keyword)) {\r\n        return {\r\n          ...state,\r\n          seoKeywords: [...state.seoKeywords, action.keyword],\r\n          isDirty: true,\r\n        };\r\n      }\r\n      return state;\r\n    \r\n    case 'REMOVE_SEO_KEYWORD':\r\n      return {\r\n        ...state,\r\n        seoKeywords: state.seoKeywords.filter((_, index) => index !== action.index),\r\n        isDirty: true,\r\n      };\r\n    \r\n    case 'RESET_FORM':\r\n      return initialState;\r\n    \r\n    case 'LOAD_PRODUCT':\r\n      return {\r\n        ...state,\r\n        ...action.product,\r\n        isDirty: false,\r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Hook personalizado\r\nexport function useProductFormReducer() {\r\n  const [state, dispatch] = useReducer(productFormReducer, initialState);\r\n\r\n  // Acciones memoizadas\r\n  const actions = useMemo(() => ({\r\n    setField: (field: keyof ProductFormState, value: any) =>\r\n      dispatch({ type: 'SET_FIELD', field, value }),\r\n    \r\n    setMultipleFields: (fields: Partial<ProductFormState>) =>\r\n      dispatch({ type: 'SET_MULTIPLE_FIELDS', fields }),\r\n    \r\n    setLoading: (loading: boolean) =>\r\n      dispatch({ type: 'SET_LOADING', payload: loading }),\r\n    \r\n    setSaving: (saving: boolean) =>\r\n      dispatch({ type: 'SET_SAVING', payload: saving }),\r\n    \r\n    setError: (field: string, error: string) =>\r\n      dispatch({ type: 'SET_ERROR', field, error }),\r\n    \r\n    clearError: (field: string) =>\r\n      dispatch({ type: 'CLEAR_ERROR', field }),\r\n    \r\n    clearAllErrors: () =>\r\n      dispatch({ type: 'CLEAR_ALL_ERRORS' }),\r\n    \r\n    setValidationErrors: (errors: Record<string, string[]>) =>\r\n      dispatch({ type: 'SET_VALIDATION_ERRORS', errors }),\r\n    \r\n    setDirty: (dirty: boolean) =>\r\n      dispatch({ type: 'SET_DIRTY', payload: dirty }),\r\n    \r\n    setStep: (step: number) =>\r\n      dispatch({ type: 'SET_STEP', step }),\r\n    \r\n    nextStep: () =>\r\n      dispatch({ type: 'NEXT_STEP' }),\r\n    \r\n    prevStep: () =>\r\n      dispatch({ type: 'PREV_STEP' }),\r\n    \r\n    addImage: (image: string) =>\r\n      dispatch({ type: 'ADD_IMAGE', image }),\r\n    \r\n    removeImage: (index: number) =>\r\n      dispatch({ type: 'REMOVE_IMAGE', index }),\r\n    \r\n    addVariant: (variant: any) =>\r\n      dispatch({ type: 'ADD_VARIANT', variant }),\r\n    \r\n    removeVariant: (index: number) =>\r\n      dispatch({ type: 'REMOVE_VARIANT', index }),\r\n    \r\n    updateVariant: (index: number, variant: any) =>\r\n      dispatch({ type: 'UPDATE_VARIANT', index, variant }),\r\n    \r\n    addSeoKeyword: (keyword: string) =>\r\n      dispatch({ type: 'ADD_SEO_KEYWORD', keyword }),\r\n    \r\n    removeSeoKeyword: (index: number) =>\r\n      dispatch({ type: 'REMOVE_SEO_KEYWORD', index }),\r\n    \r\n    resetForm: () =>\r\n      dispatch({ type: 'RESET_FORM' }),\r\n    \r\n    loadProduct: (product: Partial<ProductFormState>) =>\r\n      dispatch({ type: 'LOAD_PRODUCT', product }),\r\n  }), []);\r\n\r\n  // Selectores memoizados\r\n  const selectors = useMemo(() => ({\r\n    // Verificaciones de estado\r\n    hasErrors: Object.keys(state.errors).length > 0,\r\n    hasValidationErrors: Object.keys(state.validationErrors).length > 0,\r\n    isFormValid: Object.keys(state.errors).length === 0 && state.name.trim() !== '',\r\n    \r\n    // Información de pasos\r\n    isFirstStep: state.currentStep === 0,\r\n    isLastStep: state.currentStep === 4,\r\n    stepProgress: ((state.currentStep + 1) / 5) * 100,\r\n    \r\n    // Cálculos de precios\r\n    profitMargin: state.price > 0 && state.costPrice > 0 \r\n      ? ((state.price - state.costPrice) / state.price) * 100 \r\n      : 0,\r\n    \r\n    discountPercentage: state.comparePrice > 0 && state.price > 0\r\n      ? ((state.comparePrice - state.price) / state.comparePrice) * 100\r\n      : 0,\r\n    \r\n    // Estado de inventario\r\n    isLowStock: state.stock <= state.lowStockThreshold,\r\n    isOutOfStock: state.stock === 0,\r\n    \r\n    // Validaciones específicas\r\n    isPriceValid: state.price > 0,\r\n    isSkuValid: state.sku.length > 0,\r\n    areDimensionsValid: state.dimensions.length > 0 && \r\n                       state.dimensions.width > 0 && \r\n                       state.dimensions.height > 0,\r\n    \r\n    // Contadores\r\n    imageCount: state.images.length,\r\n    variantCount: state.variants.length,\r\n    keywordCount: state.seoKeywords.length,\r\n    \r\n    // Obtener errores por paso\r\n    getStepErrors: (step: number) => {\r\n      const stepFields = {\r\n        0: ['name', 'description', 'categoryId'],\r\n        1: ['price', 'comparePrice', 'costPrice'],\r\n        2: ['stock', 'lowStockThreshold'],\r\n        3: ['images'],\r\n        4: ['seoTitle', 'seoDescription'],\r\n      };\r\n      \r\n      const fields = stepFields[step as keyof typeof stepFields] || [];\r\n      return fields.filter(field => state.errors[field]);\r\n    },\r\n  }), [state]);\r\n\r\n  return {\r\n    state,\r\n    actions,\r\n    selectors,\r\n  };\r\n}\r\n\r\n// Hook para validación en tiempo real\r\nexport function useProductFormValidation() {\r\n  const { state, actions, selectors } = useProductFormReducer();\r\n  \r\n  const validateField = useCallback((field: keyof ProductFormState, value: any) => {\r\n    let error = '';\r\n    \r\n    switch (field) {\r\n      case 'name':\r\n        if (!value || value.trim().length === 0) {\r\n          error = 'El nombre es requerido';\r\n        } else if (value.length > 255) {\r\n          error = 'Máximo 255 caracteres';\r\n        }\r\n        break;\r\n      \r\n      case 'price':\r\n        if (value <= 0) {\r\n          error = 'El precio debe ser mayor a 0';\r\n        } else if (value > 999999.99) {\r\n          error = 'Precio máximo excedido';\r\n        }\r\n        break;\r\n      \r\n      case 'comparePrice':\r\n        if (value > 0 && value < state.price) {\r\n          error = 'El precio de comparación debe ser mayor al precio base';\r\n        }\r\n        break;\r\n      \r\n      case 'costPrice':\r\n        if (value > 0 && value > state.price) {\r\n          error = 'El precio de costo debe ser menor al precio de venta';\r\n        }\r\n        break;\r\n      \r\n      case 'stock':\r\n        if (value < 0) {\r\n          error = 'El stock debe ser mayor o igual a 0';\r\n        } else if (value > 999999) {\r\n          error = 'Stock máximo excedido';\r\n        }\r\n        break;\r\n      \r\n      case 'sku':\r\n        if (value && !/^[A-Z0-9\\-_]+$/.test(value)) {\r\n          error = 'SKU debe contener solo letras mayúsculas, números, guiones y guiones bajos';\r\n        }\r\n        break;\r\n    }\r\n    \r\n    if (error) {\r\n      actions.setError(field, error);\r\n    } else {\r\n      actions.clearError(field);\r\n    }\r\n    \r\n    return error === '';\r\n  }, [state.price, actions]);\r\n  \r\n  const validateForm = useCallback(() => {\r\n    const fields: (keyof ProductFormState)[] = [\r\n      'name', 'price', 'stock', 'categoryId'\r\n    ];\r\n    \r\n    let isValid = true;\r\n    fields.forEach(field => {\r\n      const fieldValid = validateField(field, state[field]);\r\n      if (!fieldValid) {isValid = false;}\r\n    });\r\n    \r\n    return isValid;\r\n  }, [state, validateField]);\r\n  \r\n  return {\r\n    state,\r\n    actions,\r\n    selectors,\r\n    validateField,\r\n    validateForm,\r\n  };\r\n}\r\n\r\nexport type { ProductFormState, ProductFormAction };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}