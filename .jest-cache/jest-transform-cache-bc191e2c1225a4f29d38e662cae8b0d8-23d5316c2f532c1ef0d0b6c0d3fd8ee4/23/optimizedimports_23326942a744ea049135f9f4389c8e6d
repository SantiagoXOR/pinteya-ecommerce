aba9f0c650f2617ddd67b43e7936d586
// ===================================
// OPTIMIZED IMPORTS CONFIGURATION
// ===================================
// Configuración centralizada para optimizar tree-shaking
// y reducir el bundle size del proyecto Pinteya e-commerce
/**
 * Configuración de imports optimizados para librerías pesadas
 * Esto ayuda a Next.js a hacer mejor tree-shaking
 */ // ===================================
// LUCIDE REACT ICONS - OPTIMIZED
// ===================================
// Solo importamos los iconos que realmente se usan en el proyecto
// Esto reduce significativamente el bundle size y mejora el rendimiento
// Iconos utilizados en el proyecto (basado en análisis de código)
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get AlertCircle () {
        return _lucidereact.AlertCircle;
    },
    get AnimatePresence () {
        return _framermotion.AnimatePresence;
    },
    get ArrowLeft () {
        return _lucidereact.ArrowLeft;
    },
    get ArrowRight () {
        return _lucidereact.ArrowRight;
    },
    get Brush () {
        return _lucidereact.Brush;
    },
    get Calendar () {
        return _lucidereact.Calendar;
    },
    get Check () {
        return _lucidereact.Check;
    },
    get CheckCircle () {
        return _lucidereact.CheckCircle;
    },
    get ChevronDown () {
        return _lucidereact.ChevronDown;
    },
    get ChevronLeft () {
        return _lucidereact.ChevronLeft;
    },
    get ChevronRight () {
        return _lucidereact.ChevronRight;
    },
    get ChevronUp () {
        return _lucidereact.ChevronUp;
    },
    get Circle () {
        return _lucidereact.Circle;
    },
    get // Otros iconos utilizados
    Clock () {
        return _lucidereact.Clock;
    },
    get CreditCard () {
        return _lucidereact.CreditCard;
    },
    get DialogClose () {
        return _reactdialog.Close;
    },
    get DialogContent () {
        return _reactdialog.Content;
    },
    get DialogDescription () {
        return _reactdialog.Description;
    },
    get DialogOverlay () {
        return _reactdialog.Overlay;
    },
    get DialogPortal () {
        return _reactdialog.Portal;
    },
    get DialogRoot () {
        return _reactdialog.Root;
    },
    get DialogTitle () {
        return _reactdialog.Title;
    },
    get DialogTrigger () {
        return _reactdialog.Trigger;
    },
    get DollarSign () {
        return _lucidereact.DollarSign;
    },
    get DropdownMenuCheckboxItem () {
        return _reactdropdownmenu.CheckboxItem;
    },
    get DropdownMenuContent () {
        return _reactdropdownmenu.Content;
    },
    get DropdownMenuItem () {
        return _reactdropdownmenu.Item;
    },
    get DropdownMenuItemIndicator () {
        return _reactdropdownmenu.ItemIndicator;
    },
    get DropdownMenuLabel () {
        return _reactdropdownmenu.Label;
    },
    get DropdownMenuPortal () {
        return _reactdropdownmenu.Portal;
    },
    get DropdownMenuRadioGroup () {
        return _reactdropdownmenu.RadioGroup;
    },
    get DropdownMenuRadioItem () {
        return _reactdropdownmenu.RadioItem;
    },
    get DropdownMenuRoot () {
        return _reactdropdownmenu.Root;
    },
    get DropdownMenuSeparator () {
        return _reactdropdownmenu.Separator;
    },
    get DropdownMenuSub () {
        return _reactdropdownmenu.Sub;
    },
    get DropdownMenuSubContent () {
        return _reactdropdownmenu.SubContent;
    },
    get DropdownMenuSubTrigger () {
        return _reactdropdownmenu.SubTrigger;
    },
    get DropdownMenuTrigger () {
        return _reactdropdownmenu.Trigger;
    },
    get Eye () {
        return _lucidereact.Eye;
    },
    get Filter () {
        return _lucidereact.Filter;
    },
    get Gift () {
        return _lucidereact.Gift;
    },
    get Heart () {
        return _lucidereact.Heart;
    },
    get Home () {
        return _lucidereact.Home;
    },
    get LazyMotion () {
        return _framermotion.LazyMotion;
    },
    get Loader2 () {
        return _lucidereact.Loader2;
    },
    get Mail () {
        return _lucidereact.Mail;
    },
    get // Información y contacto
    MapPin () {
        return _lucidereact.MapPin;
    },
    get Menu () {
        return _lucidereact.Menu;
    },
    get MessageCircle () {
        return _lucidereact.MessageCircle;
    },
    get Minus () {
        return _lucidereact.Minus;
    },
    get Package () {
        return _lucidereact.Package;
    },
    get // Herramientas (para productos de pintura)
    Palette () {
        return _lucidereact.Palette;
    },
    get Phone () {
        return _lucidereact.Phone;
    },
    get // UI y acciones
    Plus () {
        return _lucidereact.Plus;
    },
    get // Navegación básica
    Search () {
        return _lucidereact.Search;
    },
    get SelectContent () {
        return _reactselect.Content;
    },
    get SelectGroup () {
        return _reactselect.Group;
    },
    get SelectIcon () {
        return _reactselect.Icon;
    },
    get SelectItem () {
        return _reactselect.Item;
    },
    get SelectItemIndicator () {
        return _reactselect.ItemIndicator;
    },
    get SelectItemText () {
        return _reactselect.ItemText;
    },
    get SelectLabel () {
        return _reactselect.Label;
    },
    get SelectPortal () {
        return _reactselect.Portal;
    },
    get SelectRoot () {
        return _reactselect.Root;
    },
    get SelectScrollDownButton () {
        return _reactselect.ScrollDownButton;
    },
    get SelectScrollUpButton () {
        return _reactselect.ScrollUpButton;
    },
    get SelectSeparator () {
        return _reactselect.Separator;
    },
    get SelectTrigger () {
        return _reactselect.Trigger;
    },
    get SelectValue () {
        return _reactselect.Value;
    },
    get SelectViewport () {
        return _reactselect.Viewport;
    },
    get // Seguridad y confianza
    Shield () {
        return _lucidereact.Shield;
    },
    get // E-commerce específicos
    ShoppingBag () {
        return _lucidereact.ShoppingBag;
    },
    get ShoppingCart () {
        return _lucidereact.ShoppingCart;
    },
    get Sparkles () {
        return _lucidereact.Sparkles;
    },
    get Star () {
        return _lucidereact.Star;
    },
    get // Acciones de producto
    Trash2 () {
        return _lucidereact.Trash2;
    },
    get TrendingUp () {
        return _lucidereact.TrendingUp;
    },
    get Trophy () {
        return _lucidereact.Trophy;
    },
    get Truck () {
        return _lucidereact.Truck;
    },
    get User () {
        return _lucidereact.User;
    },
    get Users () {
        return _lucidereact.Users;
    },
    get Wrench () {
        return _lucidereact.Wrench;
    },
    get X () {
        return _lucidereact.X;
    },
    get Zap () {
        return _lucidereact.Zap;
    },
    get ZoomIn () {
        return _lucidereact.ZoomIn;
    },
    get addDays () {
        return _datefns.addDays;
    },
    get addMonths () {
        return _datefns.addMonths;
    },
    get addYears () {
        return _datefns.addYears;
    },
    get conditionalImport () {
        return conditionalImport;
    },
    get differenceInDays () {
        return _datefns.differenceInDays;
    },
    get differenceInHours () {
        return _datefns.differenceInHours;
    },
    get differenceInMinutes () {
        return _datefns.differenceInMinutes;
    },
    get domAnimation () {
        return _framermotion.domAnimation;
    },
    get endOfDay () {
        return _datefns.endOfDay;
    },
    get endOfMonth () {
        return _datefns.endOfMonth;
    },
    get endOfWeek () {
        return _datefns.endOfWeek;
    },
    get endOfYear () {
        return _datefns.endOfYear;
    },
    get es () {
        return _locale.es;
    },
    get format () {
        return _datefns.format;
    },
    get formatDistance () {
        return _datefns.formatDistance;
    },
    get formatDistanceToNow () {
        return _datefns.formatDistanceToNow;
    },
    get formatISO () {
        return _datefns.formatISO;
    },
    get formatRelative () {
        return _datefns.formatRelative;
    },
    get getDay () {
        return _datefns.getDay;
    },
    get getMonth () {
        return _datefns.getMonth;
    },
    get getYear () {
        return _datefns.getYear;
    },
    get isAfter () {
        return _datefns.isAfter;
    },
    get isBefore () {
        return _datefns.isBefore;
    },
    get isEqual () {
        return _datefns.isEqual;
    },
    get isThisMonth () {
        return _datefns.isThisMonth;
    },
    get isThisWeek () {
        return _datefns.isThisWeek;
    },
    get isThisYear () {
        return _datefns.isThisYear;
    },
    get isToday () {
        return _datefns.isToday;
    },
    get isTomorrow () {
        return _datefns.isTomorrow;
    },
    get isValid () {
        return _datefns.isValid;
    },
    get isYesterday () {
        return _datefns.isYesterday;
    },
    get lazyImport () {
        return lazyImport;
    },
    get m () {
        return _framermotion.m;
    },
    get motion () {
        return _framermotion.motion;
    },
    get parseISO () {
        return _datefns.parseISO;
    },
    get preloadModule () {
        return preloadModule;
    },
    get setDay () {
        return _datefns.setDay;
    },
    get setMonth () {
        return _datefns.setMonth;
    },
    get setYear () {
        return _datefns.setYear;
    },
    get startOfDay () {
        return _datefns.startOfDay;
    },
    get startOfMonth () {
        return _datefns.startOfMonth;
    },
    get startOfWeek () {
        return _datefns.startOfWeek;
    },
    get startOfYear () {
        return _datefns.startOfYear;
    },
    get subDays () {
        return _datefns.subDays;
    },
    get subMonths () {
        return _datefns.subMonths;
    },
    get subYears () {
        return _datefns.subYears;
    },
    get toDate () {
        return _datefns.toDate;
    },
    get useAnimation () {
        return _framermotion.useAnimation;
    },
    get useAnimationControls () {
        return _framermotion.useAnimationControls;
    },
    get useDragControls () {
        return _framermotion.useDragControls;
    },
    get useInView () {
        return _framermotion.useInView;
    },
    get useMotionValue () {
        return _framermotion.useMotionValue;
    },
    get useScroll () {
        return _framermotion.useScroll;
    },
    get useSpring () {
        return _framermotion.useSpring;
    },
    get useTransform () {
        return _framermotion.useTransform;
    }
});
const _lucidereact = require("lucide-react");
const _datefns = require("date-fns");
const _locale = require("date-fns/locale");
const _framermotion = require("framer-motion");
const _reactdialog = require("@radix-ui/react-dialog");
const _reactdropdownmenu = require("@radix-ui/react-dropdown-menu");
const _reactselect = require("@radix-ui/react-select");
const lazyImport = (importFn)=>{
    return React.lazy(importFn);
};
const conditionalImport = async (condition, importFn)=>{
    if (condition) {
        return await importFn();
    }
    return null;
};
const preloadModule = (importFn)=>{
    if (typeof window !== 'undefined') {
        // Solo precargar en el cliente
        setTimeout(()=>{
            importFn().catch(()=>{
            // Silenciar errores de precarga
            });
        }, 100);
    }
};

//# sourceMappingURL=data:application/json;base64,