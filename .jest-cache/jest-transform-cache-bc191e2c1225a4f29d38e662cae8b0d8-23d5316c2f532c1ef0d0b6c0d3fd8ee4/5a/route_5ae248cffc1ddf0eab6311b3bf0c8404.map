{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\orders\\route.ts"],"sourcesContent":["// Configuración para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API DE ÓRDENES DE USUARIO\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { ApiResponse } from '@/types/api';\r\n\r\n// ===================================\r\n// GET - Obtener órdenes del usuario\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar que el cliente administrativo esté disponible\r\n    if (!supabaseAdmin) {\r\n      console.error('Cliente administrativo de Supabase no disponible en GET /api/user/orders');\r\n      return NextResponse.json(\r\n        { error: 'Servicio de base de datos no disponible' },\r\n        { status: 503 }\r\n      );\r\n    }\r\n\r\n    // Obtener usuario autenticado usando NextAuth.js\r\n    const session = await auth();\r\n\r\n    if (!session?.user?.id) {\r\n      console.error('Usuario no autenticado en GET /api/user/orders');\r\n      return NextResponse.json(\r\n        { error: 'Usuario no autenticado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Obtener parámetros de consulta\r\n    const { searchParams } = new URL(request.url);\r\n    const page = parseInt(searchParams.get('page') || '1');\r\n    const limit = parseInt(searchParams.get('limit') || '10');\r\n    const status = searchParams.get('status');\r\n\r\n    console.log(`[API] Obteniendo órdenes para usuario: ${session.user.id}`);\r\n\r\n    // Construir query base usando directamente el ID del usuario de NextAuth.js\r\n    let query = supabaseAdmin\r\n      .from('orders')\r\n      .select(`\r\n        *,\r\n        order_items (\r\n          id,\r\n          quantity,\r\n          price,\r\n          products (\r\n            id,\r\n            name,\r\n            images\r\n          )\r\n        )\r\n      `)\r\n      .eq('user_id', session.user.id);\r\n\r\n    // Filtrar por status si se especifica\r\n    if (status && status !== 'all') {\r\n      query = query.eq('status', status);\r\n    }\r\n\r\n    // Aplicar paginación y ordenamiento\r\n    const from = (page - 1) * limit;\r\n    const to = from + limit - 1;\r\n\r\n    const { data: orders, error, count } = await query\r\n      .order('created_at', { ascending: false })\r\n      .range(from, to);\r\n\r\n    if (error) {\r\n      console.error('Error al obtener órdenes:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al obtener órdenes' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Calcular estadísticas\r\n    const { data: stats } = await supabaseAdmin\r\n      .from('orders')\r\n      .select('status, total')\r\n      .eq('user_id', session.user.id);\r\n\r\n    const statistics = {\r\n      total_orders: stats?.length || 0,\r\n      total_spent: stats?.reduce((sum, order) => sum + parseFloat(order.total), 0) || 0,\r\n      pending_orders: stats?.filter(order => order.status === 'pending').length || 0,\r\n      completed_orders: stats?.filter(order => order.status === 'delivered').length || 0,\r\n    };\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: orders || [],\r\n      pagination: {\r\n        page,\r\n        limit,\r\n        total: count || 0,\r\n        pages: Math.ceil((count || 0) / limit),\r\n      },\r\n      statistics,\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en GET /api/user/orders:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["GET","runtime","request","supabaseAdmin","console","error","NextResponse","json","status","session","auth","user","id","searchParams","URL","url","page","parseInt","get","limit","log","query","from","select","eq","to","data","orders","count","order","ascending","range","stats","statistics","total_orders","length","total_spent","reduce","sum","parseFloat","total","pending_orders","filter","completed_orders","success","pagination","pages","Math","ceil"],"mappings":"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"}