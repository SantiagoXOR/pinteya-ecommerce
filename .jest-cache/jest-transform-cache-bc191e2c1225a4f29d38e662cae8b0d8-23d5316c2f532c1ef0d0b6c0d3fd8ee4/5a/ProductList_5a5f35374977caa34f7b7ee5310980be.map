{"version":3,"names":["ProductList","StatusBadge","status","cov_17m8luafx9","f","statusConfig","s","active","label","icon","_lucidereact","CheckCircle","className","inactive","AlertCircle","draft","Clock","config","Icon","b","Package","_jsxruntime","jsxs","_utils","cn","jsx","StockBadge","stock","console","log","router","_navigation","useRouter","selectedProducts","setSelectedProducts","_react","useState","products","isLoading","error","_useProductList","useProductList","total","currentPage","currentPageSize","params","filters","updateFilters","clearFilters","goToPage","changePageSize","deleteProduct","bulkDelete","isDeleting","isBulkDeleting","columns","key","title","width","render","images","product","imageUrl","main","image_url","_image","default","src","alt","name","height","sortable","style","display","WebkitLineClamp","WebkitBoxOrient","description","categoryName","align","price","toLocaleString","createdAt","Date","toLocaleDateString","_","_ProductActions","ProductRowActions","onView","id","push","onEdit","onDelete","handleDeleteProduct","onDuplicate","handleDuplicateProduct","productId","result","success","handleBulkDelete","productIds","handleCreateProduct","handleExportProducts","handleImportProducts","handleRowClick","paginationConfig","page","pageSize","onPageChange","onPageSizeChange","message","_ProductFilters","ProductFilters","onFiltersChange","onClearFilters","categories","ProductActions","onCreateProduct","onBulkDelete","onExportProducts","onImportProducts","_AdminDataTable","AdminDataTable","data","Array","isArray","loading","pagination","selectable","onRowClick","onSelectionChange","length"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\products\\ProductList.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport Image from 'next/image';\r\nimport { useRouter } from 'next/navigation';\r\nimport { AdminDataTable } from '../ui/AdminDataTable';\r\nimport { ProductFilters } from './ProductFilters';\r\nimport { ProductActions, ProductRowActions } from './ProductActions';\r\nimport { useProductList } from '@/hooks/admin/useProductList';\r\nimport { cn } from '@/lib/core/utils';\r\nimport { Package, AlertCircle, CheckCircle, Clock } from 'lucide-react';\r\n\r\ninterface Product {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  price: number;\r\n  stock: number;\r\n  category_id: string;\r\n  category_name?: string;\r\n  image_url?: string;\r\n  images?: {\r\n    main: string;\r\n    gallery: string[];\r\n    previews: string[];\r\n    thumbnails: string[];\r\n  };\r\n  status: 'active' | 'inactive' | 'draft';\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\ninterface ProductListProps {\r\n  className?: string;\r\n}\r\n\r\n// Status Badge Component\r\nfunction StatusBadge({ status }: { status: Product['status'] }) {\r\n  const statusConfig = {\r\n    active: {\r\n      label: 'Activo',\r\n      icon: CheckCircle,\r\n      className: 'bg-green-100 text-green-800 border-green-200'\r\n    },\r\n    inactive: {\r\n      label: 'Inactivo',\r\n      icon: AlertCircle,\r\n      className: 'bg-red-100 text-red-800 border-red-200'\r\n    },\r\n    draft: {\r\n      label: 'Borrador',\r\n      icon: Clock,\r\n      className: 'bg-yellow-100 text-yellow-800 border-yellow-200'\r\n    }\r\n  };\r\n\r\n  const config = statusConfig[status];\r\n  const Icon = config && config.icon ? config.icon : Package;\r\n\r\n  return (\r\n    <span className={cn(\r\n      \"inline-flex items-center space-x-1 px-2 py-1 text-xs font-medium rounded-full border\",\r\n      config && config.className ? config.className : 'bg-gray-100 text-gray-800 border-gray-200'\r\n    )}>\r\n      <Icon className=\"w-3 h-3\" />\r\n      <span>{config && config.label ? config.label : 'Estado'}</span>\r\n    </span>\r\n  );\r\n}\r\n\r\n// Stock Badge Component\r\nfunction StockBadge({ stock }: { stock: number }) {\r\n  if (stock === 0) {\r\n    return (\r\n      <span className=\"inline-flex items-center px-2 py-1 text-xs font-medium bg-red-100 text-red-800 rounded-full\">\r\n        Sin stock\r\n      </span>\r\n    );\r\n  }\r\n  \r\n  if (stock <= 10) {\r\n    return (\r\n      <span className=\"inline-flex items-center px-2 py-1 text-xs font-medium bg-yellow-100 text-yellow-800 rounded-full\">\r\n        Stock bajo\r\n      </span>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <span className=\"text-sm text-gray-900\">\r\n      {stock} unidades\r\n    </span>\r\n  );\r\n}\r\n\r\nexport function ProductList({ className }: ProductListProps) {\r\n  console.log('ðŸ”§ ProductList: Componente iniciado');\r\n  const router = useRouter();\r\n  const [selectedProducts, setSelectedProducts] = useState<Product[]>([]);\r\n\r\n  const {\r\n    products,\r\n    isLoading,\r\n    error\r\n  } = useProductList();\r\n\r\n  // Valores temporales para compatibilidad\r\n  const total = 53; // Total real de la base de datos\r\n  const currentPage = 1;\r\n  const currentPageSize = 25;\r\n  const params = { filters: {} };\r\n  const updateFilters = () => {};\r\n  const clearFilters = () => {};\r\n  const goToPage = () => {};\r\n  const changePageSize = () => {};\r\n  const deleteProduct = () => {};\r\n  const bulkDelete = () => {};\r\n  const isDeleting = false;\r\n  const isBulkDeleting = false;\r\n\r\n  // Table columns configuration\r\n  const columns = [\r\n    {\r\n      key: 'images',\r\n      title: 'Imagen',\r\n      width: '100px',\r\n      render: (images: any, product: Product) => {\r\n        const imageUrl = images?.main || product.image_url;\r\n        return (\r\n          <div className=\"w-16 h-16 bg-gray-100 rounded-lg overflow-hidden flex items-center justify-center shadow-sm\">\r\n            {imageUrl ? (\r\n              <Image\r\n                src={imageUrl}\r\n                alt={product.name}\r\n                width={64}\r\n                height={64}\r\n                className=\"object-cover w-full h-full\"\r\n              />\r\n            ) : (\r\n              <Package className=\"w-8 h-8 text-gray-400\" />\r\n            )}\r\n          </div>\r\n        );\r\n      }\r\n    },\r\n    {\r\n      key: 'name',\r\n      title: 'Producto',\r\n      sortable: true,\r\n      render: (name: string, product: Product) => (\r\n        <div className=\"max-w-sm\">\r\n          <div className=\"font-semibold text-gray-900 text-base mb-1\">{name}</div>\r\n          <div className=\"text-sm text-gray-600 overflow-hidden leading-relaxed\" style={{display: '-webkit-box', WebkitLineClamp: 2, WebkitBoxOrient: 'vertical'}}>\r\n            {product.description || 'Sin descripciÃ³n disponible'}\r\n          </div>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      key: 'category_name',\r\n      title: 'CategorÃ­a',\r\n      sortable: true,\r\n      render: (categoryName: string) => (\r\n        <span className=\"text-sm text-gray-900\">\r\n          {categoryName || 'Sin categorÃ­a'}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      key: 'price',\r\n      title: 'Precio',\r\n      align: 'right' as const,\r\n      sortable: true,\r\n      render: (price: number) => (\r\n        <div className=\"text-right\">\r\n          <span className=\"font-bold text-lg text-green-600\">\r\n            ${price.toLocaleString('es-AR')}\r\n          </span>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      key: 'stock',\r\n      title: 'Stock',\r\n      align: 'center' as const,\r\n      sortable: true,\r\n      render: (stock: number) => <StockBadge stock={stock} />\r\n    },\r\n    {\r\n      key: 'status',\r\n      title: 'Estado',\r\n      align: 'center' as const,\r\n      sortable: true,\r\n      render: (status: Product['status']) => <StatusBadge status={status} />\r\n    },\r\n    {\r\n      key: 'created_at',\r\n      title: 'Creado',\r\n      sortable: true,\r\n      render: (createdAt: string) => (\r\n        <span className=\"text-sm text-gray-500\">\r\n          {new Date(createdAt).toLocaleDateString('es-AR')}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      key: 'actions',\r\n      title: 'Acciones',\r\n      width: '60px',\r\n      render: (_: any, product: Product) => (\r\n        <ProductRowActions\r\n          product={product}\r\n          onView={(id) => router.push(`/admin/products/${id}`)}\r\n          onEdit={(id) => router.push(`/admin/products/${id}/edit`)}\r\n          onDelete={handleDeleteProduct}\r\n          onDuplicate={handleDuplicateProduct}\r\n          isLoading={isDeleting}\r\n        />\r\n      )\r\n    }\r\n  ];\r\n\r\n  // Event handlers\r\n  const handleDeleteProduct = async (productId: string) => {\r\n    const result = await deleteProduct(productId);\r\n    if (!result.success) {\r\n      // Handle error (show toast, etc.)\r\n      console.error('Error deleting product:', result.error);\r\n    }\r\n  };\r\n\r\n  const handleBulkDelete = async (productIds: string[]) => {\r\n    const result = await bulkDelete(productIds);\r\n    if (result.success) {\r\n      setSelectedProducts([]);\r\n    } else {\r\n      // Handle error\r\n      console.error('Error bulk deleting products:', result.error);\r\n    }\r\n  };\r\n\r\n  const handleDuplicateProduct = (productId: string) => {\r\n    // TODO: Implement product duplication\r\n    console.log('Duplicate product:', productId);\r\n  };\r\n\r\n  const handleCreateProduct = () => {\r\n    router.push('/admin/products/new');\r\n  };\r\n\r\n  const handleExportProducts = () => {\r\n    // TODO: Implement export functionality\r\n    console.log('Export products');\r\n  };\r\n\r\n  const handleImportProducts = () => {\r\n    // TODO: Implement import functionality\r\n    console.log('Import products');\r\n  };\r\n\r\n  const handleRowClick = (product: Product) => {\r\n    router.push(`/admin/products/${product.id}`);\r\n  };\r\n\r\n  // Pagination configuration\r\n  const paginationConfig = {\r\n    page: currentPage,\r\n    pageSize: currentPageSize,\r\n    total,\r\n    onPageChange: goToPage,\r\n    onPageSizeChange: changePageSize\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"bg-red-50 border border-red-200 rounded-lg p-6\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <AlertCircle className=\"w-6 h-6 text-red-600\" />\r\n          <div>\r\n            <h3 className=\"text-lg font-medium text-red-800\">\r\n              Error al cargar productos\r\n            </h3>\r\n            <p className=\"text-red-700 mt-1\">\r\n              {error.message}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={cn(\"space-y-6\", className)}>\r\n      {/* Filters */}\r\n      <ProductFilters\r\n        filters={params.filters || {}}\r\n        onFiltersChange={updateFilters}\r\n        onClearFilters={clearFilters}\r\n        categories={[]} // TODO: Load categories from API\r\n      />\r\n\r\n      {/* Actions */}\r\n      <ProductActions\r\n        selectedProducts={selectedProducts}\r\n        onCreateProduct={handleCreateProduct}\r\n        onBulkDelete={handleBulkDelete}\r\n        onExportProducts={handleExportProducts}\r\n        onImportProducts={handleImportProducts}\r\n        isLoading={isDeleting || isBulkDeleting}\r\n      />\r\n\r\n      {/* Data Table */}\r\n      <AdminDataTable\r\n        data={Array.isArray(products) ? products : []}\r\n        columns={columns}\r\n        loading={isLoading}\r\n        pagination={paginationConfig}\r\n        selectable\r\n        onRowClick={handleRowClick}\r\n        onSelectionChange={setSelectedProducts}\r\n        className=\"shadow-sm\"\r\n      />\r\n\r\n      {/* Summary */}\r\n      {!isLoading && (\r\n        <div className=\"text-sm text-gray-600 text-center\">\r\n          Mostrando {products.length} de {total} productos\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}