f00c170b24f9fcaedab448013c9a89b0
// ===================================
// PINTEYA E-COMMERCE - HOOK PARA PERFIL DE USUARIO
// ===================================
"use strict";

/* istanbul ignore next */
function cov_1xnggv3zwg() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useUserProfile.ts";
  var hash = "e8e505c5e1ed463ac1d7db8fd9bb65638bac17a9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useUserProfile.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 13,
          column: 3
        }
      },
      "2": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 30
        }
      },
      "3": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 31
        }
      },
      "4": {
        start: {
          line: 15,
          column: 17
        },
        end: {
          line: 15,
          column: 37
        }
      },
      "5": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "6": {
        start: {
          line: 17,
          column: 26
        },
        end: {
          line: 17,
          column: 55
        }
      },
      "7": {
        start: {
          line: 19,
          column: 37
        },
        end: {
          line: 19,
          column: 60
        }
      },
      "8": {
        start: {
          line: 20,
          column: 57
        },
        end: {
          line: 20,
          column: 98
        }
      },
      "9": {
        start: {
          line: 21,
          column: 34
        },
        end: {
          line: 21,
          column: 60
        }
      },
      "10": {
        start: {
          line: 22,
          column: 34
        },
        end: {
          line: 22,
          column: 60
        }
      },
      "11": {
        start: {
          line: 23,
          column: 30
        },
        end: {
          line: 23,
          column: 56
        }
      },
      "12": {
        start: {
          line: 24,
          column: 25
        },
        end: {
          line: 57,
          column: 6
        }
      },
      "13": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "14": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 30
        }
      },
      "15": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 19
        }
      },
      "16": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "17": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 29
        }
      },
      "18": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 27
        }
      },
      "19": {
        start: {
          line: 32,
          column: 29
        },
        end: {
          line: 37,
          column: 14
        }
      },
      "20": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 40,
          column: 13
        }
      },
      "21": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 62
        }
      },
      "22": {
        start: {
          line: 41,
          column: 25
        },
        end: {
          line: 41,
          column: 46
        }
      },
      "23": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 46,
          column: 13
        }
      },
      "24": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 38
        }
      },
      "25": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 75
        }
      },
      "26": {
        start: {
          line: 48,
          column: 33
        },
        end: {
          line: 48,
          column: 89
        }
      },
      "27": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 35
        }
      },
      "28": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 59
        }
      },
      "29": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 30
        }
      },
      "30": {
        start: {
          line: 58,
          column: 26
        },
        end: {
          line: 123,
          column: 6
        }
      },
      "31": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "32": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 85
        }
      },
      "33": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 25
        }
      },
      "34": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "35": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 29
        }
      },
      "36": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 27
        }
      },
      "37": {
        start: {
          line: 67,
          column: 29
        },
        end: {
          line: 67,
          column: 43
        }
      },
      "38": {
        start: {
          line: 68,
          column: 29
        },
        end: {
          line: 68,
          column: 43
        }
      },
      "39": {
        start: {
          line: 69,
          column: 29
        },
        end: {
          line: 75,
          column: 14
        }
      },
      "40": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 78,
          column: 13
        }
      },
      "41": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 77,
          column: 65
        }
      },
      "42": {
        start: {
          line: 79,
          column: 27
        },
        end: {
          line: 79,
          column: 48
        }
      },
      "43": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 108,
          column: 13
        }
      },
      "44": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 40
        }
      },
      "45": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 78
        }
      },
      "46": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 94,
          column: 17
        }
      },
      "47": {
        start: {
          line: 86,
          column: 20
        },
        end: {
          line: 93,
          column: 23
        }
      },
      "48": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 104,
          column: 17
        }
      },
      "49": {
        start: {
          line: 96,
          column: 20
        },
        end: {
          line: 103,
          column: 23
        }
      },
      "50": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 105,
          column: 28
        }
      },
      "51": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 81
        }
      },
      "52": {
        start: {
          line: 110,
          column: 33
        },
        end: {
          line: 110,
          column: 89
        }
      },
      "53": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 35
        }
      },
      "54": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 46
        }
      },
      "55": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 62
        }
      },
      "56": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 25
        }
      },
      "57": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 30
        }
      },
      "58": {
        start: {
          line: 124,
          column: 25
        },
        end: {
          line: 167,
          column: 6
        }
      },
      "59": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 128,
          column: 9
        }
      },
      "60": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 80
        }
      },
      "61": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 25
        }
      },
      "62": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "63": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 29
        }
      },
      "64": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 27
        }
      },
      "65": {
        start: {
          line: 132,
          column: 29
        },
        end: {
          line: 132,
          column: 43
        }
      },
      "66": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 44
        }
      },
      "67": {
        start: {
          line: 134,
          column: 29
        },
        end: {
          line: 137,
          column: 14
        }
      },
      "68": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 140,
          column: 13
        }
      },
      "69": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 60
        }
      },
      "70": {
        start: {
          line: 141,
          column: 27
        },
        end: {
          line: 141,
          column: 48
        }
      },
      "71": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 154,
          column: 13
        }
      },
      "72": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 149,
          column: 17
        }
      },
      "73": {
        start: {
          line: 144,
          column: 20
        },
        end: {
          line: 148,
          column: 23
        }
      },
      "74": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 150,
          column: 74
        }
      },
      "75": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 151,
          column: 28
        }
      },
      "76": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 153,
          column: 76
        }
      },
      "77": {
        start: {
          line: 156,
          column: 33
        },
        end: {
          line: 156,
          column: 89
        }
      },
      "78": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 35
        }
      },
      "79": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 46
        }
      },
      "80": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 57
        }
      },
      "81": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 25
        }
      },
      "82": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 30
        }
      },
      "83": {
        start: {
          line: 168,
          column: 25
        },
        end: {
          line: 208,
          column: 6
        }
      },
      "84": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "85": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 83
        }
      },
      "86": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 25
        }
      },
      "87": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "88": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 29
        }
      },
      "89": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 27
        }
      },
      "90": {
        start: {
          line: 176,
          column: 29
        },
        end: {
          line: 178,
          column: 14
        }
      },
      "91": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 181,
          column: 13
        }
      },
      "92": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 180,
          column: 63
        }
      },
      "93": {
        start: {
          line: 182,
          column: 27
        },
        end: {
          line: 182,
          column: 48
        }
      },
      "94": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 195,
          column: 13
        }
      },
      "95": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 190,
          column: 17
        }
      },
      "96": {
        start: {
          line: 185,
          column: 20
        },
        end: {
          line: 189,
          column: 23
        }
      },
      "97": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 191,
          column: 72
        }
      },
      "98": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 28
        }
      },
      "99": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 194,
          column: 79
        }
      },
      "100": {
        start: {
          line: 197,
          column: 33
        },
        end: {
          line: 197,
          column: 89
        }
      },
      "101": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 35
        }
      },
      "102": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 46
        }
      },
      "103": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 60
        }
      },
      "104": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 25
        }
      },
      "105": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 30
        }
      },
      "106": {
        start: {
          line: 209,
          column: 27
        },
        end: {
          line: 213,
          column: 6
        }
      },
      "107": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 29
        }
      },
      "108": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 218,
          column: 7
        }
      },
      "109": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 23
        }
      },
      "110": {
        start: {
          line: 219,
          column: 4
        },
        end: {
          line: 227,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 10
          }
        },
        loc: {
          start: {
            line: 10,
            column: 20
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "useUserProfile",
        decl: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 23
          }
        },
        loc: {
          start: {
            line: 18,
            column: 26
          },
          end: {
            line: 228,
            column: 1
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 49
          },
          end: {
            line: 24,
            column: 50
          }
        },
        loc: {
          start: {
            line: 24,
            column: 59
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 24
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 58,
            column: 50
          },
          end: {
            line: 58,
            column: 51
          }
        },
        loc: {
          start: {
            line: 58,
            column: 64
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 58
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 124,
            column: 49
          },
          end: {
            line: 124,
            column: 50
          }
        },
        loc: {
          start: {
            line: 124,
            column: 63
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 124
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 168,
            column: 49
          },
          end: {
            line: 168,
            column: 50
          }
        },
        loc: {
          start: {
            line: 168,
            column: 59
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 168
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 209,
            column: 51
          },
          end: {
            line: 209,
            column: 52
          }
        },
        loc: {
          start: {
            line: 209,
            column: 61
          },
          end: {
            line: 211,
            column: 5
          }
        },
        line: 209
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 214,
            column: 26
          },
          end: {
            line: 214,
            column: 27
          }
        },
        loc: {
          start: {
            line: 214,
            column: 30
          },
          end: {
            line: 216,
            column: 5
          }
        },
        line: 214
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 25,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 25,
            column: 23
          }
        }, {
          start: {
            line: 25,
            column: 27
          },
          end: {
            line: 25,
            column: 36
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        }, {
          start: {
            line: 44,
            column: 19
          },
          end: {
            line: 46,
            column: 13
          }
        }],
        line: 42
      },
      "4": {
        loc: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 42,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 42,
            column: 28
          }
        }, {
          start: {
            line: 42,
            column: 32
          },
          end: {
            line: 42,
            column: 41
          }
        }],
        line: 42
      },
      "5": {
        loc: {
          start: {
            line: 45,
            column: 32
          },
          end: {
            line: 45,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 32
          },
          end: {
            line: 45,
            column: 42
          }
        }, {
          start: {
            line: 45,
            column: 46
          },
          end: {
            line: 45,
            column: 73
          }
        }],
        line: 45
      },
      "6": {
        loc: {
          start: {
            line: 48,
            column: 33
          },
          end: {
            line: 48,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 56
          },
          end: {
            line: 48,
            column: 67
          }
        }, {
          start: {
            line: 48,
            column: 70
          },
          end: {
            line: 48,
            column: 89
          }
        }],
        line: 48
      },
      "7": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "8": {
        loc: {
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 78,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 78,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "9": {
        loc: {
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 108,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 108,
            column: 13
          }
        }, {
          start: {
            line: 106,
            column: 19
          },
          end: {
            line: 108,
            column: 13
          }
        }],
        line: 80
      },
      "10": {
        loc: {
          start: {
            line: 80,
            column: 16
          },
          end: {
            line: 80,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 16
          },
          end: {
            line: 80,
            column: 30
          }
        }, {
          start: {
            line: 80,
            column: 34
          },
          end: {
            line: 80,
            column: 45
          }
        }],
        line: 80
      },
      "11": {
        loc: {
          start: {
            line: 85,
            column: 16
          },
          end: {
            line: 94,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 16
          },
          end: {
            line: 94,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "12": {
        loc: {
          start: {
            line: 85,
            column: 20
          },
          end: {
            line: 85,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 20
          },
          end: {
            line: 85,
            column: 30
          }
        }, {
          start: {
            line: 85,
            column: 34
          },
          end: {
            line: 85,
            column: 57
          }
        }],
        line: 85
      },
      "13": {
        loc: {
          start: {
            line: 95,
            column: 16
          },
          end: {
            line: 104,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 16
          },
          end: {
            line: 104,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "14": {
        loc: {
          start: {
            line: 95,
            column: 20
          },
          end: {
            line: 95,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 20
          },
          end: {
            line: 95,
            column: 30
          }
        }, {
          start: {
            line: 95,
            column: 34
          },
          end: {
            line: 95,
            column: 57
          }
        }],
        line: 95
      },
      "15": {
        loc: {
          start: {
            line: 107,
            column: 32
          },
          end: {
            line: 107,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 32
          },
          end: {
            line: 107,
            column: 44
          }
        }, {
          start: {
            line: 107,
            column: 48
          },
          end: {
            line: 107,
            column: 79
          }
        }],
        line: 107
      },
      "16": {
        loc: {
          start: {
            line: 110,
            column: 33
          },
          end: {
            line: 110,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 56
          },
          end: {
            line: 110,
            column: 67
          }
        }, {
          start: {
            line: 110,
            column: 70
          },
          end: {
            line: 110,
            column: 89
          }
        }],
        line: 110
      },
      "17": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "18": {
        loc: {
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 140,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 140,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "19": {
        loc: {
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        }, {
          start: {
            line: 152,
            column: 19
          },
          end: {
            line: 154,
            column: 13
          }
        }],
        line: 142
      },
      "20": {
        loc: {
          start: {
            line: 143,
            column: 16
          },
          end: {
            line: 149,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 16
          },
          end: {
            line: 149,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "21": {
        loc: {
          start: {
            line: 153,
            column: 32
          },
          end: {
            line: 153,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 32
          },
          end: {
            line: 153,
            column: 44
          }
        }, {
          start: {
            line: 153,
            column: 48
          },
          end: {
            line: 153,
            column: 74
          }
        }],
        line: 153
      },
      "22": {
        loc: {
          start: {
            line: 156,
            column: 33
          },
          end: {
            line: 156,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 156,
            column: 56
          },
          end: {
            line: 156,
            column: 67
          }
        }, {
          start: {
            line: 156,
            column: 70
          },
          end: {
            line: 156,
            column: 89
          }
        }],
        line: 156
      },
      "23": {
        loc: {
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "24": {
        loc: {
          start: {
            line: 179,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "25": {
        loc: {
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 195,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 195,
            column: 13
          }
        }, {
          start: {
            line: 193,
            column: 19
          },
          end: {
            line: 195,
            column: 13
          }
        }],
        line: 183
      },
      "26": {
        loc: {
          start: {
            line: 184,
            column: 16
          },
          end: {
            line: 190,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 16
          },
          end: {
            line: 190,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "27": {
        loc: {
          start: {
            line: 194,
            column: 32
          },
          end: {
            line: 194,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 32
          },
          end: {
            line: 194,
            column: 44
          }
        }, {
          start: {
            line: 194,
            column: 48
          },
          end: {
            line: 194,
            column: 77
          }
        }],
        line: 194
      },
      "28": {
        loc: {
          start: {
            line: 197,
            column: 33
          },
          end: {
            line: 197,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 197,
            column: 56
          },
          end: {
            line: 197,
            column: 67
          }
        }, {
          start: {
            line: 197,
            column: 70
          },
          end: {
            line: 197,
            column: 89
          }
        }],
        line: 197
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useUserProfile.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - HOOK PARA PERFIL DE USUARIO\r\n// ===================================\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { useAuth } from './useAuth';\r\nimport { toast } from 'sonner';\r\nimport { useNotifications } from './useNotifications';\r\n\r\nexport interface UserProfile {\r\n  id: string;\r\n  clerk_id: string;\r\n  name: string;\r\n  email: string;\r\n  phone?: string;\r\n  avatar_url?: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nexport interface UpdateProfileData {\r\n  name: string;\r\n  email: string;\r\n  phone?: string;\r\n}\r\n\r\nexport interface UseUserProfileReturn {\r\n  profile: UserProfile | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  updateProfile: (data: UpdateProfileData) => Promise<boolean>;\r\n  refreshProfile: () => Promise<void>;\r\n  uploadAvatar: (file: File) => Promise<boolean>;\r\n  deleteAvatar: () => Promise<boolean>;\r\n}\r\n\r\nexport function useUserProfile(): UseUserProfileReturn {\r\n  const { isSignedIn, isLoaded } = useAuth();\r\n  const { notifyProfileChange, notifySecurityAlert } = useNotifications();\r\n  const [profile, setProfile] = useState<UserProfile | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const fetchProfile = useCallback(async () => {\r\n    if (!isSignedIn || !isLoaded) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const response = await fetch('/api/user/profile', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al obtener el perfil');\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success && data.user) {\r\n        setProfile(data.user);\r\n      } else {\r\n        throw new Error(data.error || 'Error al cargar el perfil');\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      setError(errorMessage);\r\n      console.error('Error al obtener perfil:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [isSignedIn, isLoaded]);\r\n\r\n  const updateProfile = useCallback(async (data: UpdateProfileData): Promise<boolean> => {\r\n    if (!isSignedIn) {\r\n      toast.error('Debes estar autenticado para actualizar tu perfil');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // Guardar valores anteriores para notificaciones\r\n      const oldEmail = profile?.email;\r\n      const oldPhone = profile?.phone;\r\n\r\n      const response = await fetch('/api/user/profile', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al actualizar el perfil');\r\n      }\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success && result.user) {\r\n        setProfile(result.user);\r\n\r\n        // Notificaciones b\xE1sicas\r\n        await notifyProfileChange('Perfil actualizado correctamente');\r\n\r\n        // Notificaciones por email para cambios cr\xEDticos\r\n        if (data.email && data.email !== oldEmail) {\r\n          await notifySecurityAlert(\r\n            'Tu email ha sido actualizado. Revisa tu bandeja de entrada.',\r\n            {\r\n              type: 'profile_email_changed',\r\n              oldValue: oldEmail,\r\n              newValue: data.email,\r\n            },\r\n            { toastType: 'info', toastDuration: 6000 }\r\n          );\r\n        }\r\n\r\n        if (data.phone && data.phone !== oldPhone) {\r\n          await notifySecurityAlert(\r\n            'Tu tel\xE9fono ha sido actualizado.',\r\n            {\r\n              type: 'profile_phone_changed',\r\n              oldValue: oldPhone,\r\n              newValue: data.phone,\r\n            },\r\n            { toastType: 'info', toastDuration: 4000 }\r\n          );\r\n        }\r\n\r\n        return true;\r\n      } else {\r\n        throw new Error(result.error || 'Error al actualizar el perfil');\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      setError(errorMessage);\r\n      toast.error(errorMessage);\r\n      console.error('Error al actualizar perfil:', err);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [isSignedIn, profile, notifyProfileChange, notifySecurityAlert]);\r\n\r\n  const uploadAvatar = useCallback(async (file: File): Promise<boolean> => {\r\n    if (!isSignedIn) {\r\n      toast.error('Debes estar autenticado para subir un avatar');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const formData = new FormData();\r\n      formData.append('avatar', file);\r\n\r\n      const response = await fetch('/api/user/avatar', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al subir el avatar');\r\n      }\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        if (profile) {\r\n          setProfile({\r\n            ...profile,\r\n            avatar_url: result.avatar_url,\r\n            updated_at: new Date().toISOString(),\r\n          });\r\n        }\r\n        toast.success('Avatar actualizado correctamente');\r\n        return true;\r\n      } else {\r\n        throw new Error(result.error || 'Error al subir el avatar');\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      setError(errorMessage);\r\n      toast.error(errorMessage);\r\n      console.error('Error al subir avatar:', err);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [isSignedIn, profile]);\r\n\r\n  const deleteAvatar = useCallback(async (): Promise<boolean> => {\r\n    if (!isSignedIn) {\r\n      toast.error('Debes estar autenticado para eliminar tu avatar');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const response = await fetch('/api/user/avatar', {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al eliminar el avatar');\r\n      }\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        if (profile) {\r\n          setProfile({\r\n            ...profile,\r\n            avatar_url: undefined,\r\n            updated_at: new Date().toISOString(),\r\n          });\r\n        }\r\n        toast.success('Avatar eliminado correctamente');\r\n        return true;\r\n      } else {\r\n        throw new Error(result.error || 'Error al eliminar el avatar');\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      setError(errorMessage);\r\n      toast.error(errorMessage);\r\n      console.error('Error al eliminar avatar:', err);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [isSignedIn, profile]);\r\n\r\n  const refreshProfile = useCallback(async () => {\r\n    await fetchProfile();\r\n  }, [fetchProfile]);\r\n\r\n  useEffect(() => {\r\n    fetchProfile();\r\n  }, [fetchProfile]);\r\n\r\n  return {\r\n    profile,\r\n    loading,\r\n    error,\r\n    updateProfile,\r\n    refreshProfile,\r\n    uploadAvatar,\r\n    deleteAvatar,\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useUserProfile", "isSignedIn", "isLoaded", "useAuth", "notifyProfileChange", "notifySecurityAlert", "useNotifications", "profile", "setProfile", "useState", "loading", "setLoading", "error", "setError", "fetchProfile", "useCallback", "response", "fetch", "method", "headers", "ok", "Error", "data", "json", "success", "user", "err", "errorMessage", "message", "console", "updateProfile", "toast", "oldEmail", "email", "oldPhone", "phone", "body", "JSON", "stringify", "result", "type", "oldValue", "newValue", "toastType", "toastDuration", "uploadAvatar", "file", "formData", "FormData", "append", "avatar_url", "updated_at", "Date", "toISOString", "deleteAvatar", "undefined", "refreshProfile", "useEffect"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e8e505c5e1ed463ac1d7db8fd9bb65638bac17a9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1xnggv3zwg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1xnggv3zwg();
cov_1xnggv3zwg().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1xnggv3zwg().s[1]++;
Object.defineProperty(exports, "useUserProfile", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1xnggv3zwg().f[0]++;
    cov_1xnggv3zwg().s[2]++;
    return useUserProfile;
  }
});
const _react =
/* istanbul ignore next */
(cov_1xnggv3zwg().s[3]++, require("react"));
const _useAuth =
/* istanbul ignore next */
(cov_1xnggv3zwg().s[4]++, require("./useAuth"));
const _sonner =
/* istanbul ignore next */
(cov_1xnggv3zwg().s[5]++, require("sonner"));
const _useNotifications =
/* istanbul ignore next */
(cov_1xnggv3zwg().s[6]++, require("./useNotifications"));
function useUserProfile() {
  /* istanbul ignore next */
  cov_1xnggv3zwg().f[1]++;
  const {
    isSignedIn,
    isLoaded
  } =
  /* istanbul ignore next */
  (cov_1xnggv3zwg().s[7]++, (0, _useAuth.useAuth)());
  const {
    notifyProfileChange,
    notifySecurityAlert
  } =
  /* istanbul ignore next */
  (cov_1xnggv3zwg().s[8]++, (0, _useNotifications.useNotifications)());
  const [profile, setProfile] =
  /* istanbul ignore next */
  (cov_1xnggv3zwg().s[9]++, (0, _react.useState)(null));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_1xnggv3zwg().s[10]++, (0, _react.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1xnggv3zwg().s[11]++, (0, _react.useState)(null));
  const fetchProfile =
  /* istanbul ignore next */
  (cov_1xnggv3zwg().s[12]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1xnggv3zwg().f[2]++;
    cov_1xnggv3zwg().s[13]++;
    if (
    /* istanbul ignore next */
    (cov_1xnggv3zwg().b[1][0]++, !isSignedIn) ||
    /* istanbul ignore next */
    (cov_1xnggv3zwg().b[1][1]++, !isLoaded)) {
      /* istanbul ignore next */
      cov_1xnggv3zwg().b[0][0]++;
      cov_1xnggv3zwg().s[14]++;
      setLoading(false);
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[15]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1xnggv3zwg().b[0][1]++;
    }
    cov_1xnggv3zwg().s[16]++;
    try {
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[17]++;
      setLoading(true);
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[18]++;
      setError(null);
      const response =
      /* istanbul ignore next */
      (cov_1xnggv3zwg().s[19]++, await fetch('/api/user/profile', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json'
        }
      }));
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[20]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1xnggv3zwg().b[2][0]++;
        cov_1xnggv3zwg().s[21]++;
        throw new Error('Error al obtener el perfil');
      } else
      /* istanbul ignore next */
      {
        cov_1xnggv3zwg().b[2][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_1xnggv3zwg().s[22]++, await response.json());
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[23]++;
      if (
      /* istanbul ignore next */
      (cov_1xnggv3zwg().b[4][0]++, data.success) &&
      /* istanbul ignore next */
      (cov_1xnggv3zwg().b[4][1]++, data.user)) {
        /* istanbul ignore next */
        cov_1xnggv3zwg().b[3][0]++;
        cov_1xnggv3zwg().s[24]++;
        setProfile(data.user);
      } else {
        /* istanbul ignore next */
        cov_1xnggv3zwg().b[3][1]++;
        cov_1xnggv3zwg().s[25]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_1xnggv3zwg().b[5][0]++, data.error) ||
        /* istanbul ignore next */
        (cov_1xnggv3zwg().b[5][1]++, 'Error al cargar el perfil'));
      }
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1xnggv3zwg().s[26]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1xnggv3zwg().b[6][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1xnggv3zwg().b[6][1]++, 'Error desconocido'));
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[27]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[28]++;
      console.error('Error al obtener perfil:', err);
    } finally {
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[29]++;
      setLoading(false);
    }
  }, [isSignedIn, isLoaded]));
  const updateProfile =
  /* istanbul ignore next */
  (cov_1xnggv3zwg().s[30]++, (0, _react.useCallback)(async data => {
    /* istanbul ignore next */
    cov_1xnggv3zwg().f[3]++;
    cov_1xnggv3zwg().s[31]++;
    if (!isSignedIn) {
      /* istanbul ignore next */
      cov_1xnggv3zwg().b[7][0]++;
      cov_1xnggv3zwg().s[32]++;
      _sonner.toast.error('Debes estar autenticado para actualizar tu perfil');
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[33]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1xnggv3zwg().b[7][1]++;
    }
    cov_1xnggv3zwg().s[34]++;
    try {
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[35]++;
      setLoading(true);
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[36]++;
      setError(null);
      // Guardar valores anteriores para notificaciones
      const oldEmail =
      /* istanbul ignore next */
      (cov_1xnggv3zwg().s[37]++, profile?.email);
      const oldPhone =
      /* istanbul ignore next */
      (cov_1xnggv3zwg().s[38]++, profile?.phone);
      const response =
      /* istanbul ignore next */
      (cov_1xnggv3zwg().s[39]++, await fetch('/api/user/profile', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      }));
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[40]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1xnggv3zwg().b[8][0]++;
        cov_1xnggv3zwg().s[41]++;
        throw new Error('Error al actualizar el perfil');
      } else
      /* istanbul ignore next */
      {
        cov_1xnggv3zwg().b[8][1]++;
      }
      const result =
      /* istanbul ignore next */
      (cov_1xnggv3zwg().s[42]++, await response.json());
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[43]++;
      if (
      /* istanbul ignore next */
      (cov_1xnggv3zwg().b[10][0]++, result.success) &&
      /* istanbul ignore next */
      (cov_1xnggv3zwg().b[10][1]++, result.user)) {
        /* istanbul ignore next */
        cov_1xnggv3zwg().b[9][0]++;
        cov_1xnggv3zwg().s[44]++;
        setProfile(result.user);
        // Notificaciones básicas
        /* istanbul ignore next */
        cov_1xnggv3zwg().s[45]++;
        await notifyProfileChange('Perfil actualizado correctamente');
        // Notificaciones por email para cambios críticos
        /* istanbul ignore next */
        cov_1xnggv3zwg().s[46]++;
        if (
        /* istanbul ignore next */
        (cov_1xnggv3zwg().b[12][0]++, data.email) &&
        /* istanbul ignore next */
        (cov_1xnggv3zwg().b[12][1]++, data.email !== oldEmail)) {
          /* istanbul ignore next */
          cov_1xnggv3zwg().b[11][0]++;
          cov_1xnggv3zwg().s[47]++;
          await notifySecurityAlert('Tu email ha sido actualizado. Revisa tu bandeja de entrada.', {
            type: 'profile_email_changed',
            oldValue: oldEmail,
            newValue: data.email
          }, {
            toastType: 'info',
            toastDuration: 6000
          });
        } else
        /* istanbul ignore next */
        {
          cov_1xnggv3zwg().b[11][1]++;
        }
        cov_1xnggv3zwg().s[48]++;
        if (
        /* istanbul ignore next */
        (cov_1xnggv3zwg().b[14][0]++, data.phone) &&
        /* istanbul ignore next */
        (cov_1xnggv3zwg().b[14][1]++, data.phone !== oldPhone)) {
          /* istanbul ignore next */
          cov_1xnggv3zwg().b[13][0]++;
          cov_1xnggv3zwg().s[49]++;
          await notifySecurityAlert('Tu teléfono ha sido actualizado.', {
            type: 'profile_phone_changed',
            oldValue: oldPhone,
            newValue: data.phone
          }, {
            toastType: 'info',
            toastDuration: 4000
          });
        } else
        /* istanbul ignore next */
        {
          cov_1xnggv3zwg().b[13][1]++;
        }
        cov_1xnggv3zwg().s[50]++;
        return true;
      } else {
        /* istanbul ignore next */
        cov_1xnggv3zwg().b[9][1]++;
        cov_1xnggv3zwg().s[51]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_1xnggv3zwg().b[15][0]++, result.error) ||
        /* istanbul ignore next */
        (cov_1xnggv3zwg().b[15][1]++, 'Error al actualizar el perfil'));
      }
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1xnggv3zwg().s[52]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1xnggv3zwg().b[16][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1xnggv3zwg().b[16][1]++, 'Error desconocido'));
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[53]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[54]++;
      _sonner.toast.error(errorMessage);
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[55]++;
      console.error('Error al actualizar perfil:', err);
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[56]++;
      return false;
    } finally {
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[57]++;
      setLoading(false);
    }
  }, [isSignedIn, profile, notifyProfileChange, notifySecurityAlert]));
  const uploadAvatar =
  /* istanbul ignore next */
  (cov_1xnggv3zwg().s[58]++, (0, _react.useCallback)(async file => {
    /* istanbul ignore next */
    cov_1xnggv3zwg().f[4]++;
    cov_1xnggv3zwg().s[59]++;
    if (!isSignedIn) {
      /* istanbul ignore next */
      cov_1xnggv3zwg().b[17][0]++;
      cov_1xnggv3zwg().s[60]++;
      _sonner.toast.error('Debes estar autenticado para subir un avatar');
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[61]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1xnggv3zwg().b[17][1]++;
    }
    cov_1xnggv3zwg().s[62]++;
    try {
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[63]++;
      setLoading(true);
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[64]++;
      setError(null);
      const formData =
      /* istanbul ignore next */
      (cov_1xnggv3zwg().s[65]++, new FormData());
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[66]++;
      formData.append('avatar', file);
      const response =
      /* istanbul ignore next */
      (cov_1xnggv3zwg().s[67]++, await fetch('/api/user/avatar', {
        method: 'POST',
        body: formData
      }));
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[68]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1xnggv3zwg().b[18][0]++;
        cov_1xnggv3zwg().s[69]++;
        throw new Error('Error al subir el avatar');
      } else
      /* istanbul ignore next */
      {
        cov_1xnggv3zwg().b[18][1]++;
      }
      const result =
      /* istanbul ignore next */
      (cov_1xnggv3zwg().s[70]++, await response.json());
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[71]++;
      if (result.success) {
        /* istanbul ignore next */
        cov_1xnggv3zwg().b[19][0]++;
        cov_1xnggv3zwg().s[72]++;
        if (profile) {
          /* istanbul ignore next */
          cov_1xnggv3zwg().b[20][0]++;
          cov_1xnggv3zwg().s[73]++;
          setProfile({
            ...profile,
            avatar_url: result.avatar_url,
            updated_at: new Date().toISOString()
          });
        } else
        /* istanbul ignore next */
        {
          cov_1xnggv3zwg().b[20][1]++;
        }
        cov_1xnggv3zwg().s[74]++;
        _sonner.toast.success('Avatar actualizado correctamente');
        /* istanbul ignore next */
        cov_1xnggv3zwg().s[75]++;
        return true;
      } else {
        /* istanbul ignore next */
        cov_1xnggv3zwg().b[19][1]++;
        cov_1xnggv3zwg().s[76]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_1xnggv3zwg().b[21][0]++, result.error) ||
        /* istanbul ignore next */
        (cov_1xnggv3zwg().b[21][1]++, 'Error al subir el avatar'));
      }
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1xnggv3zwg().s[77]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1xnggv3zwg().b[22][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1xnggv3zwg().b[22][1]++, 'Error desconocido'));
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[78]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[79]++;
      _sonner.toast.error(errorMessage);
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[80]++;
      console.error('Error al subir avatar:', err);
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[81]++;
      return false;
    } finally {
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[82]++;
      setLoading(false);
    }
  }, [isSignedIn, profile]));
  const deleteAvatar =
  /* istanbul ignore next */
  (cov_1xnggv3zwg().s[83]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1xnggv3zwg().f[5]++;
    cov_1xnggv3zwg().s[84]++;
    if (!isSignedIn) {
      /* istanbul ignore next */
      cov_1xnggv3zwg().b[23][0]++;
      cov_1xnggv3zwg().s[85]++;
      _sonner.toast.error('Debes estar autenticado para eliminar tu avatar');
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[86]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1xnggv3zwg().b[23][1]++;
    }
    cov_1xnggv3zwg().s[87]++;
    try {
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[88]++;
      setLoading(true);
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[89]++;
      setError(null);
      const response =
      /* istanbul ignore next */
      (cov_1xnggv3zwg().s[90]++, await fetch('/api/user/avatar', {
        method: 'DELETE'
      }));
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[91]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1xnggv3zwg().b[24][0]++;
        cov_1xnggv3zwg().s[92]++;
        throw new Error('Error al eliminar el avatar');
      } else
      /* istanbul ignore next */
      {
        cov_1xnggv3zwg().b[24][1]++;
      }
      const result =
      /* istanbul ignore next */
      (cov_1xnggv3zwg().s[93]++, await response.json());
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[94]++;
      if (result.success) {
        /* istanbul ignore next */
        cov_1xnggv3zwg().b[25][0]++;
        cov_1xnggv3zwg().s[95]++;
        if (profile) {
          /* istanbul ignore next */
          cov_1xnggv3zwg().b[26][0]++;
          cov_1xnggv3zwg().s[96]++;
          setProfile({
            ...profile,
            avatar_url: undefined,
            updated_at: new Date().toISOString()
          });
        } else
        /* istanbul ignore next */
        {
          cov_1xnggv3zwg().b[26][1]++;
        }
        cov_1xnggv3zwg().s[97]++;
        _sonner.toast.success('Avatar eliminado correctamente');
        /* istanbul ignore next */
        cov_1xnggv3zwg().s[98]++;
        return true;
      } else {
        /* istanbul ignore next */
        cov_1xnggv3zwg().b[25][1]++;
        cov_1xnggv3zwg().s[99]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_1xnggv3zwg().b[27][0]++, result.error) ||
        /* istanbul ignore next */
        (cov_1xnggv3zwg().b[27][1]++, 'Error al eliminar el avatar'));
      }
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1xnggv3zwg().s[100]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1xnggv3zwg().b[28][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1xnggv3zwg().b[28][1]++, 'Error desconocido'));
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[101]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[102]++;
      _sonner.toast.error(errorMessage);
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[103]++;
      console.error('Error al eliminar avatar:', err);
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[104]++;
      return false;
    } finally {
      /* istanbul ignore next */
      cov_1xnggv3zwg().s[105]++;
      setLoading(false);
    }
  }, [isSignedIn, profile]));
  const refreshProfile =
  /* istanbul ignore next */
  (cov_1xnggv3zwg().s[106]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1xnggv3zwg().f[6]++;
    cov_1xnggv3zwg().s[107]++;
    await fetchProfile();
  }, [fetchProfile]));
  /* istanbul ignore next */
  cov_1xnggv3zwg().s[108]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1xnggv3zwg().f[7]++;
    cov_1xnggv3zwg().s[109]++;
    fetchProfile();
  }, [fetchProfile]);
  /* istanbul ignore next */
  cov_1xnggv3zwg().s[110]++;
  return {
    profile,
    loading,
    error,
    updateProfile,
    refreshProfile,
    uploadAvatar,
    deleteAvatar
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,