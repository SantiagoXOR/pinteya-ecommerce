{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\__tests__\\optimization\\ui-components.test.tsx"],"sourcesContent":["// ===================================\n// TESTS DE OPTIMIZACIÓN UI COMPONENTS\n// Tests para verificar optimizaciones de performance\n// ===================================\n\nimport React from 'react'\nimport { render, screen } from '@testing-library/react'\nimport { ProductCard } from '@/components/ui/card'\nimport { SearchAutocompleteIntegrated } from '@/components/ui/SearchAutocompleteIntegrated'\n\n// Mock de hooks\njest.mock('@/hooks/useSearchOptimized', () => ({\n  useSearchOptimized: () => ({\n    searchTerm: '',\n    suggestions: [],\n    isLoading: false,\n    error: null,\n    handleSearch: jest.fn(),\n    handleSuggestionSelect: jest.fn(),\n    searchWithDebounce: jest.fn(),\n    handleClear: jest.fn(),\n  }),\n}))\n\ndescribe('UI Components Optimization', () => {\n  describe('ProductCard Optimization', () => {\n    const mockProps = {\n      title: 'Test Product',\n      price: 100,\n      image: '/test-image.jpg',\n      productId: '1',\n    }\n\n    it('debe renderizar ProductCard correctamente', () => {\n      render(<ProductCard {...mockProps} />)\n\n      expect(screen.getByText('Test Product')).toBeInTheDocument()\n    })\n\n    it('debe ser memoizado (React.memo)', () => {\n      // Verificar que el componente tiene displayName (indicativo de memo)\n      expect(ProductCard.displayName).toBe('ProductCard')\n    })\n\n    it('debe manejar props opcionales sin errores', () => {\n      const minimalProps = {\n        title: 'Minimal Product',\n        price: 50,\n        productId: '2',\n      }\n\n      expect(() => {\n        render(<ProductCard {...minimalProps} />)\n      }).not.toThrow()\n    })\n  })\n\n  describe('SearchAutocompleteIntegrated Optimization', () => {\n    it('debe renderizar SearchAutocompleteIntegrated correctamente', () => {\n      render(<SearchAutocompleteIntegrated />)\n\n      // Verificar que el componente se renderiza sin errores\n      const searchInput = screen.getByRole('searchbox')\n      expect(searchInput).toBeInTheDocument()\n    })\n\n    it('debe ser memoizado (React.memo)', () => {\n      // Verificar que el componente tiene displayName (indicativo de memo)\n      expect(SearchAutocompleteIntegrated.displayName).toBe('SearchAutocompleteIntegrated')\n    })\n\n    it('debe manejar props vacías sin errores', () => {\n      expect(() => {\n        render(<SearchAutocompleteIntegrated />)\n      }).not.toThrow()\n    })\n  })\n\n  describe('Performance Optimizations', () => {\n    it('debe cargar componentes sin errores de performance', () => {\n      const startTime = performance.now()\n\n      render(\n        <div>\n          <ProductCard title='Performance Test' price={100} productId='perf-1' />\n          <SearchAutocompleteIntegrated />\n        </div>\n      )\n\n      const endTime = performance.now()\n      const renderTime = endTime - startTime\n\n      // El render no debería tomar más de 100ms\n      expect(renderTime).toBeLessThan(100)\n    })\n\n    it('debe manejar múltiples instancias eficientemente', () => {\n      const products = Array.from({ length: 10 }, (_, i) => ({\n        title: `Product ${i}`,\n        price: 100 + i,\n        productId: `prod-${i}`,\n      }))\n\n      const startTime = performance.now()\n\n      render(\n        <div>\n          {products.map(product => (\n            <ProductCard key={product.productId} {...product} />\n          ))}\n        </div>\n      )\n\n      const endTime = performance.now()\n      const renderTime = endTime - startTime\n\n      // Renderizar 10 productos no debería tomar más de 200ms\n      expect(renderTime).toBeLessThan(200)\n    })\n  })\n\n  describe('Accessibility Optimizations', () => {\n    it('debe tener atributos de accesibilidad básicos', () => {\n      render(<ProductCard title='Accessible Product' price={100} productId='acc-1' />)\n\n      // Verificar que el título es accesible\n      expect(screen.getByText('Accessible Product')).toBeInTheDocument()\n    })\n\n    it('debe manejar navegación por teclado', () => {\n      render(<SearchAutocompleteIntegrated />)\n\n      const searchInput = screen.getByRole('searchbox')\n      expect(searchInput).toHaveAttribute('type', 'search')\n    })\n  })\n\n  describe('Responsive Optimizations', () => {\n    it('debe renderizar sin errores en diferentes tamaños', () => {\n      // Simular diferentes tamaños de ventana\n      const originalInnerWidth = window.innerWidth\n\n      try {\n        // Mobile\n        Object.defineProperty(window, 'innerWidth', {\n          writable: true,\n          configurable: true,\n          value: 375,\n        })\n\n        render(<ProductCard title='Responsive Product' price={100} productId='resp-1' />)\n\n        expect(screen.getByText('Responsive Product')).toBeInTheDocument()\n\n        // Desktop\n        Object.defineProperty(window, 'innerWidth', {\n          writable: true,\n          configurable: true,\n          value: 1024,\n        })\n\n        render(<ProductCard title='Desktop Product' price={100} productId='resp-2' />)\n\n        expect(screen.getByText('Desktop Product')).toBeInTheDocument()\n      } finally {\n        // Restaurar valor original\n        Object.defineProperty(window, 'innerWidth', {\n          writable: true,\n          configurable: true,\n          value: originalInnerWidth,\n        })\n      }\n    })\n  })\n})\n"],"names":["jest","mock","useSearchOptimized","searchTerm","suggestions","isLoading","error","handleSearch","fn","handleSuggestionSelect","searchWithDebounce","handleClear","describe","mockProps","title","price","image","productId","it","render","ProductCard","expect","screen","getByText","toBeInTheDocument","displayName","toBe","minimalProps","not","toThrow","SearchAutocompleteIntegrated","searchInput","getByRole","startTime","performance","now","div","endTime","renderTime","toBeLessThan","products","Array","from","length","_","i","map","product","toHaveAttribute","originalInnerWidth","window","innerWidth","Object","defineProperty","writable","configurable","value"],"mappings":"AAAA,sCAAsC;AACtC,sCAAsC;AACtC,qDAAqD;AACrD,sCAAsC;;AAOtC,gBAAgB;AAChBA,KAAKC,IAAI,CAAC,8BAA8B,IAAO,CAAA;QAC7CC,oBAAoB,IAAO,CAAA;gBACzBC,YAAY;gBACZC,aAAa,EAAE;gBACfC,WAAW;gBACXC,OAAO;gBACPC,cAAcP,KAAKQ,EAAE;gBACrBC,wBAAwBT,KAAKQ,EAAE;gBAC/BE,oBAAoBV,KAAKQ,EAAE;gBAC3BG,aAAaX,KAAKQ,EAAE;YACtB,CAAA;IACF,CAAA;;;;;8DAjBkB;wBACa;sBACH;8CACiB;;;;;;AAgB7CI,SAAS,8BAA8B;IACrCA,SAAS,4BAA4B;QACnC,MAAMC,YAAY;YAChBC,OAAO;YACPC,OAAO;YACPC,OAAO;YACPC,WAAW;QACb;QAEAC,GAAG,6CAA6C;YAC9CC,IAAAA,cAAM,gBAAC,qBAACC,iBAAW;gBAAE,GAAGP,SAAS;;YAEjCQ,OAAOC,cAAM,CAACC,SAAS,CAAC,iBAAiBC,iBAAiB;QAC5D;QAEAN,GAAG,mCAAmC;YACpC,qEAAqE;YACrEG,OAAOD,iBAAW,CAACK,WAAW,EAAEC,IAAI,CAAC;QACvC;QAEAR,GAAG,6CAA6C;YAC9C,MAAMS,eAAe;gBACnBb,OAAO;gBACPC,OAAO;gBACPE,WAAW;YACb;YAEAI,OAAO;gBACLF,IAAAA,cAAM,gBAAC,qBAACC,iBAAW;oBAAE,GAAGO,YAAY;;YACtC,GAAGC,GAAG,CAACC,OAAO;QAChB;IACF;IAEAjB,SAAS,6CAA6C;QACpDM,GAAG,8DAA8D;YAC/DC,IAAAA,cAAM,gBAAC,qBAACW,0DAA4B;YAEpC,uDAAuD;YACvD,MAAMC,cAAcT,cAAM,CAACU,SAAS,CAAC;YACrCX,OAAOU,aAAaP,iBAAiB;QACvC;QAEAN,GAAG,mCAAmC;YACpC,qEAAqE;YACrEG,OAAOS,0DAA4B,CAACL,WAAW,EAAEC,IAAI,CAAC;QACxD;QAEAR,GAAG,yCAAyC;YAC1CG,OAAO;gBACLF,IAAAA,cAAM,gBAAC,qBAACW,0DAA4B;YACtC,GAAGF,GAAG,CAACC,OAAO;QAChB;IACF;IAEAjB,SAAS,6BAA6B;QACpCM,GAAG,sDAAsD;YACvD,MAAMe,YAAYC,YAAYC,GAAG;YAEjChB,IAAAA,cAAM,gBACJ,sBAACiB;;kCACC,qBAAChB,iBAAW;wBAACN,OAAM;wBAAmBC,OAAO;wBAAKE,WAAU;;kCAC5D,qBAACa,0DAA4B;;;YAIjC,MAAMO,UAAUH,YAAYC,GAAG;YAC/B,MAAMG,aAAaD,UAAUJ;YAE7B,0CAA0C;YAC1CZ,OAAOiB,YAAYC,YAAY,CAAC;QAClC;QAEArB,GAAG,oDAAoD;YACrD,MAAMsB,WAAWC,MAAMC,IAAI,CAAC;gBAAEC,QAAQ;YAAG,GAAG,CAACC,GAAGC,IAAO,CAAA;oBACrD/B,OAAO,CAAC,QAAQ,EAAE+B,GAAG;oBACrB9B,OAAO,MAAM8B;oBACb5B,WAAW,CAAC,KAAK,EAAE4B,GAAG;gBACxB,CAAA;YAEA,MAAMZ,YAAYC,YAAYC,GAAG;YAEjChB,IAAAA,cAAM,gBACJ,qBAACiB;0BACEI,SAASM,GAAG,CAACC,CAAAA,wBACZ,qBAAC3B,iBAAW;wBAA0B,GAAG2B,OAAO;uBAA9BA,QAAQ9B,SAAS;;YAKzC,MAAMoB,UAAUH,YAAYC,GAAG;YAC/B,MAAMG,aAAaD,UAAUJ;YAE7B,wDAAwD;YACxDZ,OAAOiB,YAAYC,YAAY,CAAC;QAClC;IACF;IAEA3B,SAAS,+BAA+B;QACtCM,GAAG,iDAAiD;YAClDC,IAAAA,cAAM,gBAAC,qBAACC,iBAAW;gBAACN,OAAM;gBAAqBC,OAAO;gBAAKE,WAAU;;YAErE,uCAAuC;YACvCI,OAAOC,cAAM,CAACC,SAAS,CAAC,uBAAuBC,iBAAiB;QAClE;QAEAN,GAAG,uCAAuC;YACxCC,IAAAA,cAAM,gBAAC,qBAACW,0DAA4B;YAEpC,MAAMC,cAAcT,cAAM,CAACU,SAAS,CAAC;YACrCX,OAAOU,aAAaiB,eAAe,CAAC,QAAQ;QAC9C;IACF;IAEApC,SAAS,4BAA4B;QACnCM,GAAG,qDAAqD;YACtD,wCAAwC;YACxC,MAAM+B,qBAAqBC,OAAOC,UAAU;YAE5C,IAAI;gBACF,SAAS;gBACTC,OAAOC,cAAc,CAACH,QAAQ,cAAc;oBAC1CI,UAAU;oBACVC,cAAc;oBACdC,OAAO;gBACT;gBAEArC,IAAAA,cAAM,gBAAC,qBAACC,iBAAW;oBAACN,OAAM;oBAAqBC,OAAO;oBAAKE,WAAU;;gBAErEI,OAAOC,cAAM,CAACC,SAAS,CAAC,uBAAuBC,iBAAiB;gBAEhE,UAAU;gBACV4B,OAAOC,cAAc,CAACH,QAAQ,cAAc;oBAC1CI,UAAU;oBACVC,cAAc;oBACdC,OAAO;gBACT;gBAEArC,IAAAA,cAAM,gBAAC,qBAACC,iBAAW;oBAACN,OAAM;oBAAkBC,OAAO;oBAAKE,WAAU;;gBAElEI,OAAOC,cAAM,CAACC,SAAS,CAAC,oBAAoBC,iBAAiB;YAC/D,SAAU;gBACR,2BAA2B;gBAC3B4B,OAAOC,cAAc,CAACH,QAAQ,cAAc;oBAC1CI,UAAU;oBACVC,cAAc;oBACdC,OAAOP;gBACT;YACF;QACF;IACF;AACF"}