{"version":3,"names":["cov_26udbz71vy","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","detectMultipleAuthFailures","detectMultipleIPAccess","logAdminAction","logAuthFailure","logAuthSuccess","logDataAccess","logPermissionDenied","logSecurityEvent","runSecurityDetection","event","_supabase","supabaseAdmin","console","warn","securityEvent","timestamp","Date","toISOString","resolved","error","from","insert","log","event_type","description","JSON","stringify","userId","context","request","user_id","event_category","severity","userRole","metadata","role","permissions","emailVerified","ip_address","ipAddress","user_agent","userAgent","reason","headers","get","req","operation","requiredPermissions","userPermissions","resource","action","target","timeWindowMinutes","maxAttempts","timeThreshold","now","data","select","eq","gte","failureCount","length","threshold","timeWindowHours","maxIPs","not","uniqueIPs","Set","map","ipCount","size","ips","Array","Promise","all"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\auth\\security-audit.ts"],"sourcesContent":["/**\r\n * Sistema de Auditoría de Seguridad\r\n * Registra eventos de seguridad y detecta patrones sospechosos\r\n */\r\n\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport type { NextRequest, NextApiRequest } from 'next';\r\nimport type { SecurityContext } from './security-validations';\r\n\r\n// =====================================================\r\n// TIPOS Y INTERFACES\r\n// =====================================================\r\n\r\nexport interface SecurityEvent {\r\n  id?: string;\r\n  user_id: string;\r\n  event_type: SecurityEventType;\r\n  event_category: SecurityEventCategory;\r\n  severity: SecuritySeverity;\r\n  description: string;\r\n  metadata?: Record<string, any>;\r\n  ip_address?: string;\r\n  user_agent?: string;\r\n  timestamp: string;\r\n  resolved: boolean;\r\n}\r\n\r\nexport type SecurityEventType = \r\n  | 'AUTH_SUCCESS'\r\n  | 'AUTH_FAILURE'\r\n  | 'PERMISSION_DENIED'\r\n  | 'SUSPICIOUS_ACTIVITY'\r\n  | 'ROLE_CHANGE'\r\n  | 'DATA_ACCESS'\r\n  | 'ADMIN_ACTION'\r\n  | 'SECURITY_VIOLATION';\r\n\r\nexport type SecurityEventCategory = \r\n  | 'authentication'\r\n  | 'authorization'\r\n  | 'data_access'\r\n  | 'admin_operations'\r\n  | 'suspicious_behavior';\r\n\r\nexport type SecuritySeverity = 'low' | 'medium' | 'high' | 'critical';\r\n\r\nexport interface SecurityAlert {\r\n  id?: string;\r\n  user_id: string;\r\n  alert_type: string;\r\n  severity: SecuritySeverity;\r\n  description: string;\r\n  event_count: number;\r\n  first_occurrence: string;\r\n  last_occurrence: string;\r\n  resolved: boolean;\r\n  metadata?: Record<string, any>;\r\n}\r\n\r\n// =====================================================\r\n// FUNCIONES DE LOGGING DE EVENTOS\r\n// =====================================================\r\n\r\n/**\r\n * Registra un evento de seguridad\r\n */\r\nexport async function logSecurityEvent(\r\n  event: Omit<SecurityEvent, 'id' | 'timestamp' | 'resolved'>\r\n): Promise<void> {\r\n  try {\r\n    if (!supabaseAdmin) {\r\n      console.warn('[SECURITY] Supabase admin no disponible para logging');\r\n      return;\r\n    }\r\n\r\n    const securityEvent: SecurityEvent = {\r\n      ...event,\r\n      timestamp: new Date().toISOString(),\r\n      resolved: false\r\n    };\r\n\r\n    const { error } = await supabaseAdmin\r\n      .from('security_events')\r\n      .insert(securityEvent);\r\n\r\n    if (error) {\r\n      console.error('[SECURITY] Error guardando evento de seguridad:', error);\r\n    } else {\r\n      console.log(`[SECURITY] Evento registrado: ${event.event_type} - ${event.description}`);\r\n    }\r\n\r\n    // También log en consola para desarrollo\r\n    console.log('[SECURITY EVENT]', JSON.stringify(securityEvent, null, 2));\r\n  } catch (error) {\r\n    console.error('[SECURITY] Error en logSecurityEvent:', error);\r\n  }\r\n}\r\n\r\n/**\r\n * Registra autenticación exitosa\r\n */\r\nexport async function logAuthSuccess(\r\n  userId: string,\r\n  context: SecurityContext,\r\n  request?: NextRequest | NextApiRequest\r\n): Promise<void> {\r\n  await logSecurityEvent({\r\n    user_id: userId,\r\n    event_type: 'AUTH_SUCCESS',\r\n    event_category: 'authentication',\r\n    severity: 'low',\r\n    description: `Usuario autenticado exitosamente con rol: ${context.userRole}`,\r\n    metadata: {\r\n      role: context.userRole,\r\n      permissions: context.permissions,\r\n      emailVerified: context.metadata.emailVerified\r\n    },\r\n    ip_address: context.ipAddress,\r\n    user_agent: context.userAgent\r\n  });\r\n}\r\n\r\n/**\r\n * Registra fallo de autenticación\r\n */\r\nexport async function logAuthFailure(\r\n  userId: string | null,\r\n  reason: string,\r\n  request?: NextRequest | NextApiRequest\r\n): Promise<void> {\r\n  let ipAddress: string | undefined;\r\n  let userAgent: string | undefined;\r\n\r\n  if (request) {\r\n    if ('headers' in request && typeof request.headers.get === 'function') {\r\n      ipAddress = request.headers.get('x-forwarded-for') || 'unknown';\r\n      userAgent = request.headers.get('user-agent') || 'unknown';\r\n    } else if ('headers' in request) {\r\n      const req = request as NextApiRequest;\r\n      ipAddress = req.headers['x-forwarded-for'] as string || 'unknown';\r\n      userAgent = req.headers['user-agent'] || 'unknown';\r\n    }\r\n  }\r\n\r\n  await logSecurityEvent({\r\n    user_id: userId || 'unknown',\r\n    event_type: 'AUTH_FAILURE',\r\n    event_category: 'authentication',\r\n    severity: 'medium',\r\n    description: `Fallo de autenticación: ${reason}`,\r\n    metadata: { reason },\r\n    ip_address: ipAddress,\r\n    user_agent: userAgent\r\n  });\r\n}\r\n\r\n/**\r\n * Registra denegación de permisos\r\n */\r\nexport async function logPermissionDenied(\r\n  userId: string,\r\n  operation: string,\r\n  requiredPermissions: string[],\r\n  context: SecurityContext\r\n): Promise<void> {\r\n  await logSecurityEvent({\r\n    user_id: userId,\r\n    event_type: 'PERMISSION_DENIED',\r\n    event_category: 'authorization',\r\n    severity: 'medium',\r\n    description: `Acceso denegado a operación: ${operation}`,\r\n    metadata: {\r\n      operation,\r\n      requiredPermissions,\r\n      userRole: context.userRole,\r\n      userPermissions: context.permissions\r\n    },\r\n    ip_address: context.ipAddress,\r\n    user_agent: context.userAgent\r\n  });\r\n}\r\n\r\n/**\r\n * Registra acceso a datos sensibles\r\n */\r\nexport async function logDataAccess(\r\n  userId: string,\r\n  resource: string,\r\n  action: string,\r\n  context: SecurityContext,\r\n  metadata?: Record<string, any>\r\n): Promise<void> {\r\n  await logSecurityEvent({\r\n    user_id: userId,\r\n    event_type: 'DATA_ACCESS',\r\n    event_category: 'data_access',\r\n    severity: 'low',\r\n    description: `Acceso a ${resource} - Acción: ${action}`,\r\n    metadata: {\r\n      resource,\r\n      action,\r\n      userRole: context.userRole,\r\n      ...metadata\r\n    },\r\n    ip_address: context.ipAddress,\r\n    user_agent: context.userAgent\r\n  });\r\n}\r\n\r\n/**\r\n * Registra acción administrativa\r\n */\r\nexport async function logAdminAction(\r\n  userId: string,\r\n  action: string,\r\n  target: string,\r\n  context: SecurityContext,\r\n  metadata?: Record<string, any>\r\n): Promise<void> {\r\n  await logSecurityEvent({\r\n    user_id: userId,\r\n    event_type: 'ADMIN_ACTION',\r\n    event_category: 'admin_operations',\r\n    severity: 'medium',\r\n    description: `Acción administrativa: ${action} en ${target}`,\r\n    metadata: {\r\n      action,\r\n      target,\r\n      userRole: context.userRole,\r\n      ...metadata\r\n    },\r\n    ip_address: context.ipAddress,\r\n    user_agent: context.userAgent\r\n  });\r\n}\r\n\r\n// =====================================================\r\n// DETECCIÓN DE ACTIVIDAD SOSPECHOSA\r\n// =====================================================\r\n\r\n/**\r\n * Detecta múltiples fallos de autenticación\r\n */\r\nexport async function detectMultipleAuthFailures(\r\n  userId: string,\r\n  timeWindowMinutes: number = 15,\r\n  maxAttempts: number = 5\r\n): Promise<boolean> {\r\n  try {\r\n    if (!supabaseAdmin) {return false;}\r\n\r\n    const timeThreshold = new Date(Date.now() - timeWindowMinutes * 60 * 1000).toISOString();\r\n\r\n    const { data, error } = await supabaseAdmin\r\n      .from('security_events')\r\n      .select('id')\r\n      .eq('user_id', userId)\r\n      .eq('event_type', 'AUTH_FAILURE')\r\n      .gte('timestamp', timeThreshold);\r\n\r\n    if (error) {\r\n      console.error('[SECURITY] Error detectando fallos de auth:', error);\r\n      return false;\r\n    }\r\n\r\n    const failureCount = data?.length || 0;\r\n    \r\n    if (failureCount >= maxAttempts) {\r\n      await logSecurityEvent({\r\n        user_id: userId,\r\n        event_type: 'SUSPICIOUS_ACTIVITY',\r\n        event_category: 'suspicious_behavior',\r\n        severity: 'high',\r\n        description: `Múltiples fallos de autenticación detectados: ${failureCount} intentos en ${timeWindowMinutes} minutos`,\r\n        metadata: {\r\n          failureCount,\r\n          timeWindowMinutes,\r\n          threshold: maxAttempts\r\n        }\r\n      });\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  } catch (error) {\r\n    console.error('[SECURITY] Error en detectMultipleAuthFailures:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Detecta acceso desde múltiples IPs\r\n */\r\nexport async function detectMultipleIPAccess(\r\n  userId: string,\r\n  timeWindowHours: number = 1,\r\n  maxIPs: number = 3\r\n): Promise<boolean> {\r\n  try {\r\n    if (!supabaseAdmin) {return false;}\r\n\r\n    const timeThreshold = new Date(Date.now() - timeWindowHours * 60 * 60 * 1000).toISOString();\r\n\r\n    const { data, error } = await supabaseAdmin\r\n      .from('security_events')\r\n      .select('ip_address')\r\n      .eq('user_id', userId)\r\n      .eq('event_type', 'AUTH_SUCCESS')\r\n      .gte('timestamp', timeThreshold)\r\n      .not('ip_address', 'is', null);\r\n\r\n    if (error) {\r\n      console.error('[SECURITY] Error detectando múltiples IPs:', error);\r\n      return false;\r\n    }\r\n\r\n    const uniqueIPs = new Set(data?.map(event => event.ip_address));\r\n    const ipCount = uniqueIPs.size;\r\n\r\n    if (ipCount >= maxIPs) {\r\n      await logSecurityEvent({\r\n        user_id: userId,\r\n        event_type: 'SUSPICIOUS_ACTIVITY',\r\n        event_category: 'suspicious_behavior',\r\n        severity: 'medium',\r\n        description: `Acceso desde múltiples IPs detectado: ${ipCount} IPs diferentes en ${timeWindowHours} horas`,\r\n        metadata: {\r\n          ipCount,\r\n          timeWindowHours,\r\n          threshold: maxIPs,\r\n          ips: Array.from(uniqueIPs)\r\n        }\r\n      });\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  } catch (error) {\r\n    console.error('[SECURITY] Error en detectMultipleIPAccess:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Ejecuta todas las detecciones de seguridad para un usuario\r\n */\r\nexport async function runSecurityDetection(userId: string): Promise<void> {\r\n  try {\r\n    await Promise.all([\r\n      detectMultipleAuthFailures(userId),\r\n      detectMultipleIPAccess(userId)\r\n    ]);\r\n  } catch (error) {\r\n    console.error('[SECURITY] Error en runSecurityDetection:', error);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]}