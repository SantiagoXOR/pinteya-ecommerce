{"version":3,"names":["useUserProfile","cov_1xnggv3zwg","f","isSignedIn","isLoaded","s","_useAuth","useAuth","notifyProfileChange","notifySecurityAlert","_useNotifications","useNotifications","profile","setProfile","_react","useState","loading","setLoading","error","setError","fetchProfile","useCallback","b","response","fetch","method","headers","ok","Error","data","json","success","user","err","errorMessage","message","console","updateProfile","_sonner","toast","oldEmail","email","oldPhone","phone","body","JSON","stringify","result","type","oldValue","newValue","toastType","toastDuration","uploadAvatar","file","formData","FormData","append","avatar_url","updated_at","Date","toISOString","deleteAvatar","undefined","refreshProfile","useEffect"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useUserProfile.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - HOOK PARA PERFIL DE USUARIO\r\n// ===================================\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { useAuth } from './useAuth';\r\nimport { toast } from 'sonner';\r\nimport { useNotifications } from './useNotifications';\r\n\r\nexport interface UserProfile {\r\n  id: string;\r\n  clerk_id: string;\r\n  name: string;\r\n  email: string;\r\n  phone?: string;\r\n  avatar_url?: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nexport interface UpdateProfileData {\r\n  name: string;\r\n  email: string;\r\n  phone?: string;\r\n}\r\n\r\nexport interface UseUserProfileReturn {\r\n  profile: UserProfile | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  updateProfile: (data: UpdateProfileData) => Promise<boolean>;\r\n  refreshProfile: () => Promise<void>;\r\n  uploadAvatar: (file: File) => Promise<boolean>;\r\n  deleteAvatar: () => Promise<boolean>;\r\n}\r\n\r\nexport function useUserProfile(): UseUserProfileReturn {\r\n  const { isSignedIn, isLoaded } = useAuth();\r\n  const { notifyProfileChange, notifySecurityAlert } = useNotifications();\r\n  const [profile, setProfile] = useState<UserProfile | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const fetchProfile = useCallback(async () => {\r\n    if (!isSignedIn || !isLoaded) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const response = await fetch('/api/user/profile', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al obtener el perfil');\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success && data.user) {\r\n        setProfile(data.user);\r\n      } else {\r\n        throw new Error(data.error || 'Error al cargar el perfil');\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      setError(errorMessage);\r\n      console.error('Error al obtener perfil:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [isSignedIn, isLoaded]);\r\n\r\n  const updateProfile = useCallback(async (data: UpdateProfileData): Promise<boolean> => {\r\n    if (!isSignedIn) {\r\n      toast.error('Debes estar autenticado para actualizar tu perfil');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // Guardar valores anteriores para notificaciones\r\n      const oldEmail = profile?.email;\r\n      const oldPhone = profile?.phone;\r\n\r\n      const response = await fetch('/api/user/profile', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al actualizar el perfil');\r\n      }\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success && result.user) {\r\n        setProfile(result.user);\r\n\r\n        // Notificaciones básicas\r\n        await notifyProfileChange('Perfil actualizado correctamente');\r\n\r\n        // Notificaciones por email para cambios críticos\r\n        if (data.email && data.email !== oldEmail) {\r\n          await notifySecurityAlert(\r\n            'Tu email ha sido actualizado. Revisa tu bandeja de entrada.',\r\n            {\r\n              type: 'profile_email_changed',\r\n              oldValue: oldEmail,\r\n              newValue: data.email,\r\n            },\r\n            { toastType: 'info', toastDuration: 6000 }\r\n          );\r\n        }\r\n\r\n        if (data.phone && data.phone !== oldPhone) {\r\n          await notifySecurityAlert(\r\n            'Tu teléfono ha sido actualizado.',\r\n            {\r\n              type: 'profile_phone_changed',\r\n              oldValue: oldPhone,\r\n              newValue: data.phone,\r\n            },\r\n            { toastType: 'info', toastDuration: 4000 }\r\n          );\r\n        }\r\n\r\n        return true;\r\n      } else {\r\n        throw new Error(result.error || 'Error al actualizar el perfil');\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      setError(errorMessage);\r\n      toast.error(errorMessage);\r\n      console.error('Error al actualizar perfil:', err);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [isSignedIn, profile, notifyProfileChange, notifySecurityAlert]);\r\n\r\n  const uploadAvatar = useCallback(async (file: File): Promise<boolean> => {\r\n    if (!isSignedIn) {\r\n      toast.error('Debes estar autenticado para subir un avatar');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const formData = new FormData();\r\n      formData.append('avatar', file);\r\n\r\n      const response = await fetch('/api/user/avatar', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al subir el avatar');\r\n      }\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        if (profile) {\r\n          setProfile({\r\n            ...profile,\r\n            avatar_url: result.avatar_url,\r\n            updated_at: new Date().toISOString(),\r\n          });\r\n        }\r\n        toast.success('Avatar actualizado correctamente');\r\n        return true;\r\n      } else {\r\n        throw new Error(result.error || 'Error al subir el avatar');\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      setError(errorMessage);\r\n      toast.error(errorMessage);\r\n      console.error('Error al subir avatar:', err);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [isSignedIn, profile]);\r\n\r\n  const deleteAvatar = useCallback(async (): Promise<boolean> => {\r\n    if (!isSignedIn) {\r\n      toast.error('Debes estar autenticado para eliminar tu avatar');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const response = await fetch('/api/user/avatar', {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al eliminar el avatar');\r\n      }\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        if (profile) {\r\n          setProfile({\r\n            ...profile,\r\n            avatar_url: undefined,\r\n            updated_at: new Date().toISOString(),\r\n          });\r\n        }\r\n        toast.success('Avatar eliminado correctamente');\r\n        return true;\r\n      } else {\r\n        throw new Error(result.error || 'Error al eliminar el avatar');\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      setError(errorMessage);\r\n      toast.error(errorMessage);\r\n      console.error('Error al eliminar avatar:', err);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [isSignedIn, profile]);\r\n\r\n  const refreshProfile = useCallback(async () => {\r\n    await fetchProfile();\r\n  }, [fetchProfile]);\r\n\r\n  useEffect(() => {\r\n    fetchProfile();\r\n  }, [fetchProfile]);\r\n\r\n  return {\r\n    profile,\r\n    loading,\r\n    error,\r\n    updateProfile,\r\n    refreshProfile,\r\n    uploadAvatar,\r\n    deleteAvatar,\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}