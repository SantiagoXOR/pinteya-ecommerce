{"version":3,"names":["cov_2nd8opec2w","actualCoverage","s","useFilterAnalytics","generateSessionId","f","Date","now","Math","random","toString","substr","getSessionId","window","b","sessionId","sessionStorage","getItem","setItem","sendToGA4","event","gtag","action","event_category","category","event_label","label","value","custom_map","custom_parameters","session_id","page_location","page_url","page_title","sendToSupabase","fetch","method","headers","body","JSON","stringify","error","console","warn","options","enabled","debug","process","env","NODE_ENV","providedSessionId","userId","_react","useRef","startTime","createBaseEvent","useCallback","customParameters","timestamp","current","user_id","location","href","document","title","trackEvent","trackFilterApplied","filterType","filterValue","resultsCount","timeToApply","filter_type","filter_value","results_count","time_to_apply","trackFilterRemoved","remainingFilters","remaining_filters","trackFiltersCleared","totalFiltersCleared","filterTypes","total_filters_cleared","filter_types","trackSearchPerformed","query","hasFilters","filterCount","has_filters","filter_count","trackPaginationUsed","fromPage","toPage","totalPages","resultsPerPage","from_page","to_page","total_pages","results_per_page","trackSortChanged","fromSort","toSort","from_sort","to_sort","trackFilterChanges","previousFilters","currentFilters","addedCategories","categories","filter","cat","includes","addedBrands","brands","brand","removedCategories","removedBrands","forEach","length","priceMin","priceMax","priceRange","search","sortBy","page","ceil","limit","useEffect","user_agent","navigator","userAgent","screen_resolution","screen","width","height","viewport_size","innerWidth","innerHeight","endEvent","session_duration"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useFilterAnalytics.ts"],"sourcesContent":["// ===================================\r\n// HOOK: useFilterAnalytics - Sistema de Analytics para Filtros\r\n// ===================================\r\n\r\nimport { useCallback, useEffect, useRef } from 'react';\r\nimport { ProductFilterState } from './useProductFilters';\r\n\r\n// ===================================\r\n// TIPOS\r\n// ===================================\r\n\r\nexport interface FilterAnalyticsEvent {\r\n  event: string;\r\n  category: 'filter';\r\n  action: string;\r\n  label?: string;\r\n  value?: number;\r\n  custom_parameters?: Record<string, any>;\r\n  timestamp: number;\r\n  session_id: string;\r\n  user_id?: string;\r\n  page_url: string;\r\n  page_title: string;\r\n}\r\n\r\nexport interface FilterMetrics {\r\n  filter_applied: {\r\n    filter_type: string;\r\n    filter_value: string;\r\n    results_count: number;\r\n    time_to_apply: number;\r\n  };\r\n  filter_removed: {\r\n    filter_type: string;\r\n    filter_value: string;\r\n    remaining_filters: number;\r\n  };\r\n  filter_cleared: {\r\n    total_filters_cleared: number;\r\n    filter_types: string[];\r\n  };\r\n  search_performed: {\r\n    query: string;\r\n    results_count: number;\r\n    has_filters: boolean;\r\n    filter_count: number;\r\n  };\r\n  pagination_used: {\r\n    from_page: number;\r\n    to_page: number;\r\n    total_pages: number;\r\n    results_per_page: number;\r\n  };\r\n  sort_changed: {\r\n    from_sort: string;\r\n    to_sort: string;\r\n    results_count: number;\r\n  };\r\n}\r\n\r\nexport interface UseFilterAnalyticsOptions {\r\n  enabled?: boolean;\r\n  debug?: boolean;\r\n  sessionId?: string;\r\n  userId?: string;\r\n}\r\n\r\n// ===================================\r\n// UTILIDADES\r\n// ===================================\r\n\r\n// Generar ID de sesión único\r\nconst generateSessionId = (): string => {\r\n  return `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n};\r\n\r\n// Obtener o crear session ID\r\nconst getSessionId = (): string => {\r\n  if (typeof window === 'undefined') {return generateSessionId();}\r\n  \r\n  let sessionId = sessionStorage.getItem('filter_analytics_session');\r\n  if (!sessionId) {\r\n    sessionId = generateSessionId();\r\n    sessionStorage.setItem('filter_analytics_session', sessionId);\r\n  }\r\n  return sessionId;\r\n};\r\n\r\n// Enviar evento a Google Analytics 4\r\nconst sendToGA4 = (event: FilterAnalyticsEvent) => {\r\n  if (typeof window === 'undefined' || !window.gtag) {return;}\r\n\r\n  window.gtag('event', event.action, {\r\n    event_category: event.category,\r\n    event_label: event.label,\r\n    value: event.value,\r\n    custom_map: event.custom_parameters,\r\n    session_id: event.session_id,\r\n    page_location: event.page_url,\r\n    page_title: event.page_title,\r\n  });\r\n};\r\n\r\n// Enviar evento a Supabase Analytics\r\nconst sendToSupabase = async (event: FilterAnalyticsEvent) => {\r\n  try {\r\n    await fetch('/api/analytics/events', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(event),\r\n    });\r\n  } catch (error) {\r\n    console.warn('Failed to send analytics event to Supabase:', error);\r\n  }\r\n};\r\n\r\n// ===================================\r\n// HOOK PRINCIPAL\r\n// ===================================\r\n\r\nexport function useFilterAnalytics(options: UseFilterAnalyticsOptions = {}) {\r\n  const {\r\n    enabled = true,\r\n    debug = process.env.NODE_ENV === 'development',\r\n    sessionId: providedSessionId,\r\n    userId,\r\n  } = options;\r\n\r\n  const sessionId = useRef(providedSessionId || getSessionId());\r\n  const startTime = useRef<number>(Date.now());\r\n\r\n  // Función para crear evento base\r\n  const createBaseEvent = useCallback((\r\n    action: string,\r\n    label?: string,\r\n    value?: number,\r\n    customParameters?: Record<string, any>\r\n  ): FilterAnalyticsEvent => {\r\n    return {\r\n      event: `filter_${action}`,\r\n      category: 'filter',\r\n      action,\r\n      label,\r\n      value,\r\n      custom_parameters: customParameters,\r\n      timestamp: Date.now(),\r\n      session_id: sessionId.current,\r\n      user_id: userId,\r\n      page_url: typeof window !== 'undefined' ? window.location.href : '',\r\n      page_title: typeof window !== 'undefined' ? document.title : '',\r\n    };\r\n  }, [userId]);\r\n\r\n  // Función para enviar evento\r\n  const trackEvent = useCallback(async (event: FilterAnalyticsEvent) => {\r\n    if (!enabled) {return;}\r\n\r\n    if (debug) {\r\n    }\r\n\r\n    // Enviar a múltiples destinos\r\n    try {\r\n      // Google Analytics 4\r\n      sendToGA4(event);\r\n      \r\n      // Supabase Analytics\r\n      await sendToSupabase(event);\r\n    } catch (error) {\r\n      console.warn('Analytics tracking error:', error);\r\n    }\r\n  }, [enabled, debug]);\r\n\r\n  // ===================================\r\n  // MÉTODOS DE TRACKING ESPECÍFICOS\r\n  // ===================================\r\n\r\n  const trackFilterApplied = useCallback((\r\n    filterType: string,\r\n    filterValue: string,\r\n    resultsCount: number\r\n  ) => {\r\n    const timeToApply = Date.now() - startTime.current;\r\n    const event = createBaseEvent('applied', `${filterType}:${filterValue}`, resultsCount, {\r\n      filter_type: filterType,\r\n      filter_value: filterValue,\r\n      results_count: resultsCount,\r\n      time_to_apply: timeToApply,\r\n    });\r\n    trackEvent(event);\r\n    startTime.current = Date.now(); // Reset para próxima medición\r\n  }, [createBaseEvent, trackEvent]);\r\n\r\n  const trackFilterRemoved = useCallback((\r\n    filterType: string,\r\n    filterValue: string,\r\n    remainingFilters: number\r\n  ) => {\r\n    const event = createBaseEvent('removed', `${filterType}:${filterValue}`, remainingFilters, {\r\n      filter_type: filterType,\r\n      filter_value: filterValue,\r\n      remaining_filters: remainingFilters,\r\n    });\r\n    trackEvent(event);\r\n  }, [createBaseEvent, trackEvent]);\r\n\r\n  const trackFiltersCleared = useCallback((\r\n    totalFiltersCleared: number,\r\n    filterTypes: string[]\r\n  ) => {\r\n    const event = createBaseEvent('cleared', 'all_filters', totalFiltersCleared, {\r\n      total_filters_cleared: totalFiltersCleared,\r\n      filter_types: filterTypes,\r\n    });\r\n    trackEvent(event);\r\n  }, [createBaseEvent, trackEvent]);\r\n\r\n  const trackSearchPerformed = useCallback((\r\n    query: string,\r\n    resultsCount: number,\r\n    hasFilters: boolean,\r\n    filterCount: number\r\n  ) => {\r\n    const event = createBaseEvent('search', query, resultsCount, {\r\n      query,\r\n      results_count: resultsCount,\r\n      has_filters: hasFilters,\r\n      filter_count: filterCount,\r\n    });\r\n    trackEvent(event);\r\n  }, [createBaseEvent, trackEvent]);\r\n\r\n  const trackPaginationUsed = useCallback((\r\n    fromPage: number,\r\n    toPage: number,\r\n    totalPages: number,\r\n    resultsPerPage: number\r\n  ) => {\r\n    const event = createBaseEvent('pagination', `${fromPage}_to_${toPage}`, toPage, {\r\n      from_page: fromPage,\r\n      to_page: toPage,\r\n      total_pages: totalPages,\r\n      results_per_page: resultsPerPage,\r\n    });\r\n    trackEvent(event);\r\n  }, [createBaseEvent, trackEvent]);\r\n\r\n  const trackSortChanged = useCallback((\r\n    fromSort: string,\r\n    toSort: string,\r\n    resultsCount: number\r\n  ) => {\r\n    const event = createBaseEvent('sort_changed', `${fromSort}_to_${toSort}`, resultsCount, {\r\n      from_sort: fromSort,\r\n      to_sort: toSort,\r\n      results_count: resultsCount,\r\n    });\r\n    trackEvent(event);\r\n  }, [createBaseEvent, trackEvent]);\r\n\r\n  // Tracking automático de cambios en filtros\r\n  const trackFilterChanges = useCallback((\r\n    previousFilters: ProductFilterState,\r\n    currentFilters: ProductFilterState,\r\n    resultsCount: number\r\n  ) => {\r\n    // Detectar filtros añadidos\r\n    const addedCategories = currentFilters.categories.filter(\r\n      cat => !previousFilters.categories.includes(cat)\r\n    );\r\n    const addedBrands = currentFilters.brands.filter(\r\n      brand => !previousFilters.brands.includes(brand)\r\n    );\r\n\r\n    // Detectar filtros removidos\r\n    const removedCategories = previousFilters.categories.filter(\r\n      cat => !currentFilters.categories.includes(cat)\r\n    );\r\n    const removedBrands = previousFilters.brands.filter(\r\n      brand => !currentFilters.brands.includes(brand)\r\n    );\r\n\r\n    // Track filtros añadidos\r\n    addedCategories.forEach(category => {\r\n      trackFilterApplied('category', category, resultsCount);\r\n    });\r\n    addedBrands.forEach(brand => {\r\n      trackFilterApplied('brand', brand, resultsCount);\r\n    });\r\n\r\n    // Track filtros removidos\r\n    const remainingFilters = currentFilters.categories.length + currentFilters.brands.length;\r\n    removedCategories.forEach(category => {\r\n      trackFilterRemoved('category', category, remainingFilters);\r\n    });\r\n    removedBrands.forEach(brand => {\r\n      trackFilterRemoved('brand', brand, remainingFilters);\r\n    });\r\n\r\n    // Track cambios de precio\r\n    if (previousFilters.priceMin !== currentFilters.priceMin || \r\n        previousFilters.priceMax !== currentFilters.priceMax) {\r\n      const priceRange = `${currentFilters.priceMin || 0}-${currentFilters.priceMax || 'max'}`;\r\n      trackFilterApplied('price_range', priceRange, resultsCount);\r\n    }\r\n\r\n    // Track cambios de búsqueda\r\n    if (previousFilters.search !== currentFilters.search && currentFilters.search) {\r\n      const hasFilters = currentFilters.categories.length > 0 || currentFilters.brands.length > 0;\r\n      const filterCount = currentFilters.categories.length + currentFilters.brands.length;\r\n      trackSearchPerformed(currentFilters.search, resultsCount, hasFilters, filterCount);\r\n    }\r\n\r\n    // Track cambios de ordenamiento\r\n    if (previousFilters.sortBy !== currentFilters.sortBy) {\r\n      trackSortChanged(previousFilters.sortBy, currentFilters.sortBy, resultsCount);\r\n    }\r\n\r\n    // Track cambios de página\r\n    if (previousFilters.page !== currentFilters.page) {\r\n      trackPaginationUsed(\r\n        previousFilters.page,\r\n        currentFilters.page,\r\n        Math.ceil(resultsCount / currentFilters.limit),\r\n        currentFilters.limit\r\n      );\r\n    }\r\n  }, [\r\n    trackFilterApplied,\r\n    trackFilterRemoved,\r\n    trackSearchPerformed,\r\n    trackSortChanged,\r\n    trackPaginationUsed,\r\n  ]);\r\n\r\n  // Tracking de sesión al montar\r\n  useEffect(() => {\r\n    if (!enabled) {return;}\r\n\r\n    const event = createBaseEvent('session_started', 'filter_system', 1, {\r\n      user_agent: typeof window !== 'undefined' ? navigator.userAgent : '',\r\n      screen_resolution: typeof window !== 'undefined' \r\n        ? `${window.screen.width}x${window.screen.height}` \r\n        : '',\r\n      viewport_size: typeof window !== 'undefined'\r\n        ? `${window.innerWidth}x${window.innerHeight}`\r\n        : '',\r\n    });\r\n\r\n    trackEvent(event);\r\n\r\n    // Cleanup al desmontar\r\n    return () => {\r\n      const endEvent = createBaseEvent('session_ended', 'filter_system', 1, {\r\n        session_duration: Date.now() - startTime.current,\r\n      });\r\n      trackEvent(endEvent);\r\n    };\r\n  }, [enabled, createBaseEvent, trackEvent]);\r\n\r\n  return {\r\n    // Métodos de tracking específicos\r\n    trackFilterApplied,\r\n    trackFilterRemoved,\r\n    trackFiltersCleared,\r\n    trackSearchPerformed,\r\n    trackPaginationUsed,\r\n    trackSortChanged,\r\n    trackFilterChanges,\r\n    \r\n    // Método genérico\r\n    trackEvent,\r\n    \r\n    // Información de sesión\r\n    sessionId: sessionId.current,\r\n    userId,\r\n    enabled,\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAkEA;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;;;;;;+BAsDgB;;;;;;WAAAC,kBAAA;;;;;kCAtH+B;AA+D/C;AACA;AACA;AAEA;AAAA;AAAAH,cAAA,GAAAE,CAAA;AACA,MAAME,iBAAA,GAAoBA,CAAA;EAAA;EAAAJ,cAAA,GAAAK,CAAA;EAAAL,cAAA,GAAAE,CAAA;EACxB,OAAO,WAAWI,IAAA,CAAKC,GAAG,MAAMC,IAAA,CAAKC,MAAM,GAAGC,QAAQ,CAAC,IAAIC,MAAM,CAAC,GAAG,IAAI;AAC3E;AAEA;AAAA;AAAAX,cAAA,GAAAE,CAAA;AACA,MAAMU,YAAA,GAAeA,CAAA;EAAA;EAAAZ,cAAA,GAAAK,CAAA;EAAAL,cAAA,GAAAE,CAAA;EACnB,IAAI,OAAOW,MAAA,KAAW,aAAa;IAAA;IAAAb,cAAA,GAAAc,CAAA;IAAAd,cAAA,GAAAE,CAAA;IAAC,OAAOE,iBAAA;EAAoB;EAAA;EAAA;IAAAJ,cAAA,GAAAc,CAAA;EAAA;EAE/D,IAAIC,SAAA;EAAA;EAAA,CAAAf,cAAA,GAAAE,CAAA,OAAYc,cAAA,CAAeC,OAAO,CAAC;EAAA;EAAAjB,cAAA,GAAAE,CAAA;EACvC,IAAI,CAACa,SAAA,EAAW;IAAA;IAAAf,cAAA,GAAAc,CAAA;IAAAd,cAAA,GAAAE,CAAA;IACda,SAAA,GAAYX,iBAAA;IAAA;IAAAJ,cAAA,GAAAE,CAAA;IACZc,cAAA,CAAeE,OAAO,CAAC,4BAA4BH,SAAA;EACrD;EAAA;EAAA;IAAAf,cAAA,GAAAc,CAAA;EAAA;EAAAd,cAAA,GAAAE,CAAA;EACA,OAAOa,SAAA;AACT;AAEA;AAAA;AAAAf,cAAA,GAAAE,CAAA;AACA,MAAMiB,SAAA,GAAaC,KAAA;EAAA;EAAApB,cAAA,GAAAK,CAAA;EAAAL,cAAA,GAAAE,CAAA;EACjB;EAAI;EAAA,CAAAF,cAAA,GAAAc,CAAA,iBAAOD,MAAA,KAAW;EAAA;EAAA,CAAAb,cAAA,GAAAc,CAAA,UAAe,CAACD,MAAA,CAAOQ,IAAI,GAAE;IAAA;IAAArB,cAAA,GAAAc,CAAA;IAAAd,cAAA,GAAAE,CAAA;IAAC;EAAO;EAAA;EAAA;IAAAF,cAAA,GAAAc,CAAA;EAAA;EAAAd,cAAA,GAAAE,CAAA;EAE3DW,MAAA,CAAOQ,IAAI,CAAC,SAASD,KAAA,CAAME,MAAM,EAAE;IACjCC,cAAA,EAAgBH,KAAA,CAAMI,QAAQ;IAC9BC,WAAA,EAAaL,KAAA,CAAMM,KAAK;IACxBC,KAAA,EAAOP,KAAA,CAAMO,KAAK;IAClBC,UAAA,EAAYR,KAAA,CAAMS,iBAAiB;IACnCC,UAAA,EAAYV,KAAA,CAAMU,UAAU;IAC5BC,aAAA,EAAeX,KAAA,CAAMY,QAAQ;IAC7BC,UAAA,EAAYb,KAAA,CAAMa;EACpB;AACF;AAEA;AAAA;AAAAjC,cAAA,GAAAE,CAAA;AACA,MAAMgC,cAAA,GAAiB,MAAOd,KAAA;EAAA;EAAApB,cAAA,GAAAK,CAAA;EAAAL,cAAA,GAAAE,CAAA;EAC5B,IAAI;IAAA;IAAAF,cAAA,GAAAE,CAAA;IACF,MAAMiC,KAAA,CAAM,yBAAyB;MACnCC,MAAA,EAAQ;MACRC,OAAA,EAAS;QACP,gBAAgB;MAClB;MACAC,IAAA,EAAMC,IAAA,CAAKC,SAAS,CAACpB,KAAA;IACvB;EACF,EAAE,OAAOqB,KAAA,EAAO;IAAA;IAAAzC,cAAA,GAAAE,CAAA;IACdwC,OAAA,CAAQC,IAAI,CAAC,+CAA+CF,KAAA;EAC9D;AACF;AAMO,SAAStC,mBAAmByC,OAAA;AAAA;AAAA,CAAA5C,cAAA,GAAAc,CAAA,UAAqC,CAAC,CAAC;EAAA;EAAAd,cAAA,GAAAK,CAAA;EACxE,MAAM;IACJwC,OAAA;IAAA;IAAA,CAAA7C,cAAA,GAAAc,CAAA,UAAU,IAAI;IACdgC,KAAA;IAAA;IAAA,CAAA9C,cAAA,GAAAc,CAAA,UAAQiC,OAAA,CAAQC,GAAG,CAACC,QAAQ,KAAK,aAAa;IAC9ClC,SAAA,EAAWmC,iBAAiB;IAC5BC;EAAM,CACP;EAAA;EAAA,CAAAnD,cAAA,GAAAE,CAAA,QAAG0C,OAAA;EAEJ,MAAM7B,SAAA;EAAA;EAAA,CAAAf,cAAA,GAAAE,CAAA,QAAY,IAAAkD,MAAA,CAAAC,MAAM;EAAC;EAAA,CAAArD,cAAA,GAAAc,CAAA,UAAAoC,iBAAA;EAAA;EAAA,CAAAlD,cAAA,GAAAc,CAAA,UAAqBF,YAAA;EAC9C,MAAM0C,SAAA;EAAA;EAAA,CAAAtD,cAAA,GAAAE,CAAA,QAAY,IAAAkD,MAAA,CAAAC,MAAM,EAAS/C,IAAA,CAAKC,GAAG;EAEzC;EACA,MAAMgD,eAAA;EAAA;EAAA,CAAAvD,cAAA,GAAAE,CAAA,QAAkB,IAAAkD,MAAA,CAAAI,WAAW,EAAC,CAClClC,MAAA,EACAI,KAAA,EACAC,KAAA,EACA8B,gBAAA;IAAA;IAAAzD,cAAA,GAAAK,CAAA;IAAAL,cAAA,GAAAE,CAAA;IAEA,OAAO;MACLkB,KAAA,EAAO,UAAUE,MAAA,EAAQ;MACzBE,QAAA,EAAU;MACVF,MAAA;MACAI,KAAA;MACAC,KAAA;MACAE,iBAAA,EAAmB4B,gBAAA;MACnBC,SAAA,EAAWpD,IAAA,CAAKC,GAAG;MACnBuB,UAAA,EAAYf,SAAA,CAAU4C,OAAO;MAC7BC,OAAA,EAAST,MAAA;MACTnB,QAAA,EAAU,OAAOnB,MAAA,KAAW;MAAA;MAAA,CAAAb,cAAA,GAAAc,CAAA,UAAcD,MAAA,CAAOgD,QAAQ,CAACC,IAAI;MAAA;MAAA,CAAA9D,cAAA,GAAAc,CAAA,UAAG;MACjEmB,UAAA,EAAY,OAAOpB,MAAA,KAAW;MAAA;MAAA,CAAAb,cAAA,GAAAc,CAAA,UAAciD,QAAA,CAASC,KAAK;MAAA;MAAA,CAAAhE,cAAA,GAAAc,CAAA,UAAG;IAC/D;EACF,GAAG,CAACqC,MAAA,CAAO;EAEX;EACA,MAAMc,UAAA;EAAA;EAAA,CAAAjE,cAAA,GAAAE,CAAA,QAAa,IAAAkD,MAAA,CAAAI,WAAW,EAAC,MAAOpC,KAAA;IAAA;IAAApB,cAAA,GAAAK,CAAA;IAAAL,cAAA,GAAAE,CAAA;IACpC,IAAI,CAAC2C,OAAA,EAAS;MAAA;MAAA7C,cAAA,GAAAc,CAAA;MAAAd,cAAA,GAAAE,CAAA;MAAC;IAAO;IAAA;IAAA;MAAAF,cAAA,GAAAc,CAAA;IAAA;IAAAd,cAAA,GAAAE,CAAA;IAEtB,IAAI4C,KAAA,EAAO;MAAA;MAAA9C,cAAA,GAAAc,CAAA;IACX;IAAA;IAAA;MAAAd,cAAA,GAAAc,CAAA;IAAA;IAEA;IAAAd,cAAA,GAAAE,CAAA;IACA,IAAI;MAAA;MAAAF,cAAA,GAAAE,CAAA;MACF;MACAiB,SAAA,CAAUC,KAAA;MAEV;MAAA;MAAApB,cAAA,GAAAE,CAAA;MACA,MAAMgC,cAAA,CAAed,KAAA;IACvB,EAAE,OAAOqB,KAAA,EAAO;MAAA;MAAAzC,cAAA,GAAAE,CAAA;MACdwC,OAAA,CAAQC,IAAI,CAAC,6BAA6BF,KAAA;IAC5C;EACF,GAAG,CAACI,OAAA,EAASC,KAAA,CAAM;EAEnB;EACA;EACA;EAEA,MAAMoB,kBAAA;EAAA;EAAA,CAAAlE,cAAA,GAAAE,CAAA,QAAqB,IAAAkD,MAAA,CAAAI,WAAW,EAAC,CACrCW,UAAA,EACAC,WAAA,EACAC,YAAA;IAAA;IAAArE,cAAA,GAAAK,CAAA;IAEA,MAAMiE,WAAA;IAAA;IAAA,CAAAtE,cAAA,GAAAE,CAAA,QAAcI,IAAA,CAAKC,GAAG,KAAK+C,SAAA,CAAUK,OAAO;IAClD,MAAMvC,KAAA;IAAA;IAAA,CAAApB,cAAA,GAAAE,CAAA,QAAQqD,eAAA,CAAgB,WAAW,GAAGY,UAAA,IAAcC,WAAA,EAAa,EAAEC,YAAA,EAAc;MACrFE,WAAA,EAAaJ,UAAA;MACbK,YAAA,EAAcJ,WAAA;MACdK,aAAA,EAAeJ,YAAA;MACfK,aAAA,EAAeJ;IACjB;IAAA;IAAAtE,cAAA,GAAAE,CAAA;IACA+D,UAAA,CAAW7C,KAAA;IAAA;IAAApB,cAAA,GAAAE,CAAA;IACXoD,SAAA,CAAUK,OAAO,GAAGrD,IAAA,CAAKC,GAAG,IAAI;EAClC,GAAG,CAACgD,eAAA,EAAiBU,UAAA,CAAW;EAEhC,MAAMU,kBAAA;EAAA;EAAA,CAAA3E,cAAA,GAAAE,CAAA,QAAqB,IAAAkD,MAAA,CAAAI,WAAW,EAAC,CACrCW,UAAA,EACAC,WAAA,EACAQ,gBAAA;IAAA;IAAA5E,cAAA,GAAAK,CAAA;IAEA,MAAMe,KAAA;IAAA;IAAA,CAAApB,cAAA,GAAAE,CAAA,QAAQqD,eAAA,CAAgB,WAAW,GAAGY,UAAA,IAAcC,WAAA,EAAa,EAAEQ,gBAAA,EAAkB;MACzFL,WAAA,EAAaJ,UAAA;MACbK,YAAA,EAAcJ,WAAA;MACdS,iBAAA,EAAmBD;IACrB;IAAA;IAAA5E,cAAA,GAAAE,CAAA;IACA+D,UAAA,CAAW7C,KAAA;EACb,GAAG,CAACmC,eAAA,EAAiBU,UAAA,CAAW;EAEhC,MAAMa,mBAAA;EAAA;EAAA,CAAA9E,cAAA,GAAAE,CAAA,QAAsB,IAAAkD,MAAA,CAAAI,WAAW,EAAC,CACtCuB,mBAAA,EACAC,WAAA;IAAA;IAAAhF,cAAA,GAAAK,CAAA;IAEA,MAAMe,KAAA;IAAA;IAAA,CAAApB,cAAA,GAAAE,CAAA,QAAQqD,eAAA,CAAgB,WAAW,eAAewB,mBAAA,EAAqB;MAC3EE,qBAAA,EAAuBF,mBAAA;MACvBG,YAAA,EAAcF;IAChB;IAAA;IAAAhF,cAAA,GAAAE,CAAA;IACA+D,UAAA,CAAW7C,KAAA;EACb,GAAG,CAACmC,eAAA,EAAiBU,UAAA,CAAW;EAEhC,MAAMkB,oBAAA;EAAA;EAAA,CAAAnF,cAAA,GAAAE,CAAA,QAAuB,IAAAkD,MAAA,CAAAI,WAAW,EAAC,CACvC4B,KAAA,EACAf,YAAA,EACAgB,UAAA,EACAC,WAAA;IAAA;IAAAtF,cAAA,GAAAK,CAAA;IAEA,MAAMe,KAAA;IAAA;IAAA,CAAApB,cAAA,GAAAE,CAAA,QAAQqD,eAAA,CAAgB,UAAU6B,KAAA,EAAOf,YAAA,EAAc;MAC3De,KAAA;MACAX,aAAA,EAAeJ,YAAA;MACfkB,WAAA,EAAaF,UAAA;MACbG,YAAA,EAAcF;IAChB;IAAA;IAAAtF,cAAA,GAAAE,CAAA;IACA+D,UAAA,CAAW7C,KAAA;EACb,GAAG,CAACmC,eAAA,EAAiBU,UAAA,CAAW;EAEhC,MAAMwB,mBAAA;EAAA;EAAA,CAAAzF,cAAA,GAAAE,CAAA,QAAsB,IAAAkD,MAAA,CAAAI,WAAW,EAAC,CACtCkC,QAAA,EACAC,MAAA,EACAC,UAAA,EACAC,cAAA;IAAA;IAAA7F,cAAA,GAAAK,CAAA;IAEA,MAAMe,KAAA;IAAA;IAAA,CAAApB,cAAA,GAAAE,CAAA,QAAQqD,eAAA,CAAgB,cAAc,GAAGmC,QAAA,OAAeC,MAAA,EAAQ,EAAEA,MAAA,EAAQ;MAC9EG,SAAA,EAAWJ,QAAA;MACXK,OAAA,EAASJ,MAAA;MACTK,WAAA,EAAaJ,UAAA;MACbK,gBAAA,EAAkBJ;IACpB;IAAA;IAAA7F,cAAA,GAAAE,CAAA;IACA+D,UAAA,CAAW7C,KAAA;EACb,GAAG,CAACmC,eAAA,EAAiBU,UAAA,CAAW;EAEhC,MAAMiC,gBAAA;EAAA;EAAA,CAAAlG,cAAA,GAAAE,CAAA,QAAmB,IAAAkD,MAAA,CAAAI,WAAW,EAAC,CACnC2C,QAAA,EACAC,MAAA,EACA/B,YAAA;IAAA;IAAArE,cAAA,GAAAK,CAAA;IAEA,MAAMe,KAAA;IAAA;IAAA,CAAApB,cAAA,GAAAE,CAAA,QAAQqD,eAAA,CAAgB,gBAAgB,GAAG4C,QAAA,OAAeC,MAAA,EAAQ,EAAE/B,YAAA,EAAc;MACtFgC,SAAA,EAAWF,QAAA;MACXG,OAAA,EAASF,MAAA;MACT3B,aAAA,EAAeJ;IACjB;IAAA;IAAArE,cAAA,GAAAE,CAAA;IACA+D,UAAA,CAAW7C,KAAA;EACb,GAAG,CAACmC,eAAA,EAAiBU,UAAA,CAAW;EAEhC;EACA,MAAMsC,kBAAA;EAAA;EAAA,CAAAvG,cAAA,GAAAE,CAAA,QAAqB,IAAAkD,MAAA,CAAAI,WAAW,EAAC,CACrCgD,eAAA,EACAC,cAAA,EACApC,YAAA;IAAA;IAAArE,cAAA,GAAAK,CAAA;IAEA;IACA,MAAMqG,eAAA;IAAA;IAAA,CAAA1G,cAAA,GAAAE,CAAA,QAAkBuG,cAAA,CAAeE,UAAU,CAACC,MAAM,CACtDC,GAAA,IAAO;MAAA;MAAA7G,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAE,CAAA;MAAA,QAACsG,eAAA,CAAgBG,UAAU,CAACG,QAAQ,CAACD,GAAA;IAAA;IAE9C,MAAME,WAAA;IAAA;IAAA,CAAA/G,cAAA,GAAAE,CAAA,QAAcuG,cAAA,CAAeO,MAAM,CAACJ,MAAM,CAC9CK,KAAA,IAAS;MAAA;MAAAjH,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAE,CAAA;MAAA,QAACsG,eAAA,CAAgBQ,MAAM,CAACF,QAAQ,CAACG,KAAA;IAAA;IAG5C;IACA,MAAMC,iBAAA;IAAA;IAAA,CAAAlH,cAAA,GAAAE,CAAA,QAAoBsG,eAAA,CAAgBG,UAAU,CAACC,MAAM,CACzDC,GAAA,IAAO;MAAA;MAAA7G,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAE,CAAA;MAAA,QAACuG,cAAA,CAAeE,UAAU,CAACG,QAAQ,CAACD,GAAA;IAAA;IAE7C,MAAMM,aAAA;IAAA;IAAA,CAAAnH,cAAA,GAAAE,CAAA,QAAgBsG,eAAA,CAAgBQ,MAAM,CAACJ,MAAM,CACjDK,KAAA,IAAS;MAAA;MAAAjH,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAE,CAAA;MAAA,QAACuG,cAAA,CAAeO,MAAM,CAACF,QAAQ,CAACG,KAAA;IAAA;IAG3C;IAAA;IAAAjH,cAAA,GAAAE,CAAA;IACAwG,eAAA,CAAgBU,OAAO,CAAC5F,QAAA;MAAA;MAAAxB,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAE,CAAA;MACtBgE,kBAAA,CAAmB,YAAY1C,QAAA,EAAU6C,YAAA;IAC3C;IAAA;IAAArE,cAAA,GAAAE,CAAA;IACA6G,WAAA,CAAYK,OAAO,CAACH,KAAA;MAAA;MAAAjH,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAE,CAAA;MAClBgE,kBAAA,CAAmB,SAAS+C,KAAA,EAAO5C,YAAA;IACrC;IAEA;IACA,MAAMO,gBAAA;IAAA;IAAA,CAAA5E,cAAA,GAAAE,CAAA,QAAmBuG,cAAA,CAAeE,UAAU,CAACU,MAAM,GAAGZ,cAAA,CAAeO,MAAM,CAACK,MAAM;IAAA;IAAArH,cAAA,GAAAE,CAAA;IACxFgH,iBAAA,CAAkBE,OAAO,CAAC5F,QAAA;MAAA;MAAAxB,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAE,CAAA;MACxByE,kBAAA,CAAmB,YAAYnD,QAAA,EAAUoD,gBAAA;IAC3C;IAAA;IAAA5E,cAAA,GAAAE,CAAA;IACAiH,aAAA,CAAcC,OAAO,CAACH,KAAA;MAAA;MAAAjH,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAE,CAAA;MACpByE,kBAAA,CAAmB,SAASsC,KAAA,EAAOrC,gBAAA;IACrC;IAEA;IAAA;IAAA5E,cAAA,GAAAE,CAAA;IACA;IAAI;IAAA,CAAAF,cAAA,GAAAc,CAAA,WAAA0F,eAAA,CAAgBc,QAAQ,KAAKb,cAAA,CAAea,QAAQ;IAAA;IAAA,CAAAtH,cAAA,GAAAc,CAAA,WACpD0F,eAAA,CAAgBe,QAAQ,KAAKd,cAAA,CAAec,QAAQ,GAAE;MAAA;MAAAvH,cAAA,GAAAc,CAAA;MACxD,MAAM0G,UAAA;MAAA;MAAA,CAAAxH,cAAA,GAAAE,CAAA,QAAa;MAAG;MAAA,CAAAF,cAAA,GAAAc,CAAA,WAAA2F,cAAA,CAAea,QAAQ;MAAA;MAAA,CAAAtH,cAAA,GAAAc,CAAA,WAAI;MAAK;MAAA,CAAAd,cAAA,GAAAc,CAAA,WAAA2F,cAAA,CAAec,QAAQ;MAAA;MAAA,CAAAvH,cAAA,GAAAc,CAAA,WAAI,QAAO;MAAA;MAAAd,cAAA,GAAAE,CAAA;MACxFgE,kBAAA,CAAmB,eAAesD,UAAA,EAAYnD,YAAA;IAChD;IAAA;IAAA;MAAArE,cAAA,GAAAc,CAAA;IAAA;IAEA;IAAAd,cAAA,GAAAE,CAAA;IACA;IAAI;IAAA,CAAAF,cAAA,GAAAc,CAAA,WAAA0F,eAAA,CAAgBiB,MAAM,KAAKhB,cAAA,CAAegB,MAAM;IAAA;IAAA,CAAAzH,cAAA,GAAAc,CAAA,WAAI2F,cAAA,CAAegB,MAAM,GAAE;MAAA;MAAAzH,cAAA,GAAAc,CAAA;MAC7E,MAAMuE,UAAA;MAAA;MAAA,CAAArF,cAAA,GAAAE,CAAA;MAAa;MAAA,CAAAF,cAAA,GAAAc,CAAA,WAAA2F,cAAA,CAAeE,UAAU,CAACU,MAAM,GAAG;MAAA;MAAA,CAAArH,cAAA,GAAAc,CAAA,WAAK2F,cAAA,CAAeO,MAAM,CAACK,MAAM,GAAG;MAC1F,MAAM/B,WAAA;MAAA;MAAA,CAAAtF,cAAA,GAAAE,CAAA,QAAcuG,cAAA,CAAeE,UAAU,CAACU,MAAM,GAAGZ,cAAA,CAAeO,MAAM,CAACK,MAAM;MAAA;MAAArH,cAAA,GAAAE,CAAA;MACnFiF,oBAAA,CAAqBsB,cAAA,CAAegB,MAAM,EAAEpD,YAAA,EAAcgB,UAAA,EAAYC,WAAA;IACxE;IAAA;IAAA;MAAAtF,cAAA,GAAAc,CAAA;IAAA;IAEA;IAAAd,cAAA,GAAAE,CAAA;IACA,IAAIsG,eAAA,CAAgBkB,MAAM,KAAKjB,cAAA,CAAeiB,MAAM,EAAE;MAAA;MAAA1H,cAAA,GAAAc,CAAA;MAAAd,cAAA,GAAAE,CAAA;MACpDgG,gBAAA,CAAiBM,eAAA,CAAgBkB,MAAM,EAAEjB,cAAA,CAAeiB,MAAM,EAAErD,YAAA;IAClE;IAAA;IAAA;MAAArE,cAAA,GAAAc,CAAA;IAAA;IAEA;IAAAd,cAAA,GAAAE,CAAA;IACA,IAAIsG,eAAA,CAAgBmB,IAAI,KAAKlB,cAAA,CAAekB,IAAI,EAAE;MAAA;MAAA3H,cAAA,GAAAc,CAAA;MAAAd,cAAA,GAAAE,CAAA;MAChDuF,mBAAA,CACEe,eAAA,CAAgBmB,IAAI,EACpBlB,cAAA,CAAekB,IAAI,EACnBnH,IAAA,CAAKoH,IAAI,CAACvD,YAAA,GAAeoC,cAAA,CAAeoB,KAAK,GAC7CpB,cAAA,CAAeoB,KAAK;IAExB;IAAA;IAAA;MAAA7H,cAAA,GAAAc,CAAA;IAAA;EACF,GAAG,CACDoD,kBAAA,EACAS,kBAAA,EACAQ,oBAAA,EACAe,gBAAA,EACAT,mBAAA,CACD;EAED;EAAA;EAAAzF,cAAA,GAAAE,CAAA;EACA,IAAAkD,MAAA,CAAA0E,SAAS,EAAC;IAAA;IAAA9H,cAAA,GAAAK,CAAA;IAAAL,cAAA,GAAAE,CAAA;IACR,IAAI,CAAC2C,OAAA,EAAS;MAAA;MAAA7C,cAAA,GAAAc,CAAA;MAAAd,cAAA,GAAAE,CAAA;MAAC;IAAO;IAAA;IAAA;MAAAF,cAAA,GAAAc,CAAA;IAAA;IAEtB,MAAMM,KAAA;IAAA;IAAA,CAAApB,cAAA,GAAAE,CAAA,QAAQqD,eAAA,CAAgB,mBAAmB,iBAAiB,GAAG;MACnEwE,UAAA,EAAY,OAAOlH,MAAA,KAAW;MAAA;MAAA,CAAAb,cAAA,GAAAc,CAAA,WAAckH,SAAA,CAAUC,SAAS;MAAA;MAAA,CAAAjI,cAAA,GAAAc,CAAA,WAAG;MAClEoH,iBAAA,EAAmB,OAAOrH,MAAA,KAAW;MAAA;MAAA,CAAAb,cAAA,GAAAc,CAAA,WACjC,GAAGD,MAAA,CAAOsH,MAAM,CAACC,KAAK,IAAIvH,MAAA,CAAOsH,MAAM,CAACE,MAAM,EAAE;MAAA;MAAA,CAAArI,cAAA,GAAAc,CAAA,WAChD;MACJwH,aAAA,EAAe,OAAOzH,MAAA,KAAW;MAAA;MAAA,CAAAb,cAAA,GAAAc,CAAA,WAC7B,GAAGD,MAAA,CAAO0H,UAAU,IAAI1H,MAAA,CAAO2H,WAAW,EAAE;MAAA;MAAA,CAAAxI,cAAA,GAAAc,CAAA,WAC5C;IACN;IAAA;IAAAd,cAAA,GAAAE,CAAA;IAEA+D,UAAA,CAAW7C,KAAA;IAEX;IAAA;IAAApB,cAAA,GAAAE,CAAA;IACA,OAAO;MAAA;MAAAF,cAAA,GAAAK,CAAA;MACL,MAAMoI,QAAA;MAAA;MAAA,CAAAzI,cAAA,GAAAE,CAAA,QAAWqD,eAAA,CAAgB,iBAAiB,iBAAiB,GAAG;QACpEmF,gBAAA,EAAkBpI,IAAA,CAAKC,GAAG,KAAK+C,SAAA,CAAUK;MAC3C;MAAA;MAAA3D,cAAA,GAAAE,CAAA;MACA+D,UAAA,CAAWwE,QAAA;IACb;EACF,GAAG,CAAC5F,OAAA,EAASU,eAAA,EAAiBU,UAAA,CAAW;EAAA;EAAAjE,cAAA,GAAAE,CAAA;EAEzC,OAAO;IACL;IACAgE,kBAAA;IACAS,kBAAA;IACAG,mBAAA;IACAK,oBAAA;IACAM,mBAAA;IACAS,gBAAA;IACAK,kBAAA;IAEA;IACAtC,UAAA;IAEA;IACAlD,SAAA,EAAWA,SAAA,CAAU4C,OAAO;IAC5BR,MAAA;IACAN;EACF;AACF","ignoreList":[]}