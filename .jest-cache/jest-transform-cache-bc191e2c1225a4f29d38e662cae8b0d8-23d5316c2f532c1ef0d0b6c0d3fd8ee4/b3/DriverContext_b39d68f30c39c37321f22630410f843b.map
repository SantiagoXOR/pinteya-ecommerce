{"version":3,"names":["cov_2i175uf5da","actualCoverage","s","DriverProvider","f","useDriver","initialState","driver","currentRoute","assignedRoutes","currentLocation","isTracking","isOnline","notifications","loading","error","driverReducer","state","action","type","b","payload","current_location","slice","find","r","id","map","route","status","DriverContext","_react","createContext","undefined","children","dispatch","useReducer","data","session","_react1","useSession","useEffect","user","email","loadDriverData","response","fetch","json","routes","startLocationTracking","navigator","tryHighAccuracy","watchId","geolocation","watchPosition","position","location","lat","coords","latitude","lng","longitude","updateDriverLocation","console","warn","tryStandardAccuracy","enableHighAccuracy","timeout","maximumAge","window","driverLocationWatchId","stopLocationTracking","clearWatch","method","headers","body","JSON","stringify","startRoute","routeId","completeRoute","completeDelivery","shipmentId","goOnline","goOffline","contextValue","_jsxruntime","jsx","Provider","value","context","useContext","Error"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\contexts\\DriverContext.tsx"],"sourcesContent":["/**\r\n * Contexto global para la aplicación de drivers\r\n * Maneja estado de ubicación, rutas asignadas y sincronización en tiempo real\r\n */\r\n\r\n'use client';\r\n\r\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { useSession } from 'next-auth/react';\r\n\r\n// =====================================================\r\n// TIPOS E INTERFACES\r\n// =====================================================\r\n\r\ninterface Driver {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  phone: string;\r\n  vehicle_type: string;\r\n  license_plate: string;\r\n  status: 'available' | 'busy' | 'offline';\r\n  current_location?: {\r\n    lat: number;\r\n    lng: number;\r\n  };\r\n}\r\n\r\ninterface RouteAssignment {\r\n  id: string;\r\n  name: string;\r\n  status: 'planned' | 'active' | 'completed';\r\n  shipments: any[];\r\n  waypoints: Array<{ lat: number; lng: number }>;\r\n  total_distance: number;\r\n  estimated_time: number;\r\n  optimization_score: number;\r\n}\r\n\r\ninterface DriverState {\r\n  driver: Driver | null;\r\n  currentRoute: RouteAssignment | null;\r\n  assignedRoutes: RouteAssignment[];\r\n  currentLocation: { lat: number; lng: number } | null;\r\n  isTracking: boolean;\r\n  isOnline: boolean;\r\n  notifications: any[];\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\ntype DriverAction =\r\n  | { type: 'SET_DRIVER'; payload: Driver }\r\n  | { type: 'SET_CURRENT_ROUTE'; payload: RouteAssignment }\r\n  | { type: 'SET_ASSIGNED_ROUTES'; payload: RouteAssignment[] }\r\n  | { type: 'UPDATE_LOCATION'; payload: { lat: number; lng: number } }\r\n  | { type: 'SET_TRACKING'; payload: boolean }\r\n  | { type: 'SET_ONLINE'; payload: boolean }\r\n  | { type: 'ADD_NOTIFICATION'; payload: any }\r\n  | { type: 'SET_LOADING'; payload: boolean }\r\n  | { type: 'SET_ERROR'; payload: string | null }\r\n  | { type: 'COMPLETE_DELIVERY'; payload: string }\r\n  | { type: 'START_ROUTE'; payload: string }\r\n  | { type: 'COMPLETE_ROUTE'; payload: string };\r\n\r\n// =====================================================\r\n// REDUCER\r\n// =====================================================\r\n\r\nconst initialState: DriverState = {\r\n  driver: null,\r\n  currentRoute: null,\r\n  assignedRoutes: [],\r\n  currentLocation: null,\r\n  isTracking: false,\r\n  isOnline: false,\r\n  notifications: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nfunction driverReducer(state: DriverState, action: DriverAction): DriverState {\r\n  switch (action.type) {\r\n    case 'SET_DRIVER':\r\n      return { ...state, driver: action.payload };\r\n    \r\n    case 'SET_CURRENT_ROUTE':\r\n      return { ...state, currentRoute: action.payload };\r\n    \r\n    case 'SET_ASSIGNED_ROUTES':\r\n      return { ...state, assignedRoutes: action.payload };\r\n    \r\n    case 'UPDATE_LOCATION':\r\n      return { \r\n        ...state, \r\n        currentLocation: action.payload,\r\n        driver: state.driver ? {\r\n          ...state.driver,\r\n          current_location: action.payload\r\n        } : null\r\n      };\r\n    \r\n    case 'SET_TRACKING':\r\n      return { ...state, isTracking: action.payload };\r\n    \r\n    case 'SET_ONLINE':\r\n      return { ...state, isOnline: action.payload };\r\n    \r\n    case 'ADD_NOTIFICATION':\r\n      return { \r\n        ...state, \r\n        notifications: [action.payload, ...state.notifications.slice(0, 9)]\r\n      };\r\n    \r\n    case 'SET_LOADING':\r\n      return { ...state, loading: action.payload };\r\n    \r\n    case 'SET_ERROR':\r\n      return { ...state, error: action.payload };\r\n    \r\n    case 'START_ROUTE':\r\n      return {\r\n        ...state,\r\n        currentRoute: state.assignedRoutes.find(r => r.id === action.payload) || null,\r\n        assignedRoutes: state.assignedRoutes.map(route =>\r\n          route.id === action.payload\r\n            ? { ...route, status: 'active' as const }\r\n            : route\r\n        )\r\n      };\r\n    \r\n    case 'COMPLETE_ROUTE':\r\n      return {\r\n        ...state,\r\n        currentRoute: null,\r\n        assignedRoutes: state.assignedRoutes.map(route =>\r\n          route.id === action.payload\r\n            ? { ...route, status: 'completed' as const }\r\n            : route\r\n        )\r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// =====================================================\r\n// CONTEXTO\r\n// =====================================================\r\n\r\ninterface DriverContextType {\r\n  state: DriverState;\r\n  dispatch: React.Dispatch<DriverAction>;\r\n  \r\n  // Acciones específicas\r\n  startLocationTracking: () => void;\r\n  stopLocationTracking: () => void;\r\n  updateDriverLocation: (location: { lat: number; lng: number }) => void;\r\n  startRoute: (routeId: string) => void;\r\n  completeRoute: (routeId: string) => void;\r\n  completeDelivery: (shipmentId: string) => void;\r\n  goOnline: () => void;\r\n  goOffline: () => void;\r\n}\r\n\r\nconst DriverContext = createContext<DriverContextType | undefined>(undefined);\r\n\r\n// =====================================================\r\n// PROVIDER\r\n// =====================================================\r\n\r\nexport function DriverProvider({ children }: { children: React.ReactNode }) {\r\n  const [state, dispatch] = useReducer(driverReducer, initialState);\r\n  const { data: session } = useSession();\r\n\r\n  // Inicializar driver al cargar\r\n  useEffect(() => {\r\n    if (session?.user?.email) {\r\n      loadDriverData();\r\n    }\r\n  }, [session]);\r\n\r\n  // Funciones del contexto\r\n  const loadDriverData = async () => {\r\n    dispatch({ type: 'SET_LOADING', payload: true });\r\n    try {\r\n      const response = await fetch('/api/driver/profile');\r\n      const data = await response.json();\r\n      \r\n      if (data.driver) {\r\n        dispatch({ type: 'SET_DRIVER', payload: data.driver });\r\n        dispatch({ type: 'SET_ASSIGNED_ROUTES', payload: data.routes || [] });\r\n      }\r\n    } catch (error) {\r\n      dispatch({ type: 'SET_ERROR', payload: 'Error cargando datos del driver' });\r\n    } finally {\r\n      dispatch({ type: 'SET_LOADING', payload: false });\r\n    }\r\n  };\r\n\r\n  const startLocationTracking = () => {\r\n    if ('geolocation' in navigator) {\r\n      dispatch({ type: 'SET_TRACKING', payload: true });\r\n\r\n      // Intentar primero con alta precisión\r\n      const tryHighAccuracy = () => {\r\n        const watchId = navigator.geolocation.watchPosition(\r\n          (position) => {\r\n            const location = {\r\n              lat: position.coords.latitude,\r\n              lng: position.coords.longitude\r\n            };\r\n            updateDriverLocation(location);\r\n          },\r\n          (error) => {\r\n            console.warn('High accuracy geolocation failed, trying standard accuracy:', error);\r\n            // Si falla con alta precisión, intentar con precisión estándar\r\n            tryStandardAccuracy();\r\n          },\r\n          {\r\n            enableHighAccuracy: true,\r\n            timeout: 10000,\r\n            maximumAge: 30000\r\n          }\r\n        );\r\n\r\n        // Guardar watchId para poder detener el tracking\r\n        (window as any).driverLocationWatchId = watchId;\r\n      };\r\n\r\n      // Función de respaldo con precisión estándar\r\n      const tryStandardAccuracy = () => {\r\n        const watchId = navigator.geolocation.watchPosition(\r\n          (position) => {\r\n            const location = {\r\n              lat: position.coords.latitude,\r\n              lng: position.coords.longitude\r\n            };\r\n            updateDriverLocation(location);\r\n          },\r\n          (error) => {\r\n            console.error('Error tracking location:', error);\r\n            dispatch({ type: 'SET_ERROR', payload: 'Error obteniendo ubicación' });\r\n          },\r\n          {\r\n            enableHighAccuracy: true,\r\n            timeout: 10000,\r\n            maximumAge: 5000\r\n          }\r\n        );\r\n\r\n        // Guardar watchId para poder detener el tracking\r\n        (window as any).driverLocationWatchId = watchId;\r\n      };\r\n\r\n      // Iniciar con alta precisión\r\n      tryHighAccuracy();\r\n    }\r\n  };\r\n\r\n  const stopLocationTracking = () => {\r\n    dispatch({ type: 'SET_TRACKING', payload: false });\r\n    if ((window as any).driverLocationWatchId) {\r\n      navigator.geolocation.clearWatch((window as any).driverLocationWatchId);\r\n    }\r\n  };\r\n\r\n  const updateDriverLocation = async (location: { lat: number; lng: number }) => {\r\n    dispatch({ type: 'UPDATE_LOCATION', payload: location });\r\n    \r\n    // Enviar ubicación al servidor\r\n    try {\r\n      await fetch('/api/driver/location', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ location })\r\n      });\r\n    } catch (error) {\r\n      console.error('Error updating location:', error);\r\n    }\r\n  };\r\n\r\n  const startRoute = (routeId: string) => {\r\n    dispatch({ type: 'START_ROUTE', payload: routeId });\r\n    startLocationTracking();\r\n  };\r\n\r\n  const completeRoute = (routeId: string) => {\r\n    dispatch({ type: 'COMPLETE_ROUTE', payload: routeId });\r\n    stopLocationTracking();\r\n  };\r\n\r\n  const completeDelivery = (shipmentId: string) => {\r\n    dispatch({ type: 'COMPLETE_DELIVERY', payload: shipmentId });\r\n  };\r\n\r\n  const goOnline = () => {\r\n    dispatch({ type: 'SET_ONLINE', payload: true });\r\n    startLocationTracking();\r\n  };\r\n\r\n  const goOffline = () => {\r\n    dispatch({ type: 'SET_ONLINE', payload: false });\r\n    stopLocationTracking();\r\n  };\r\n\r\n  const contextValue: DriverContextType = {\r\n    state,\r\n    dispatch,\r\n    startLocationTracking,\r\n    stopLocationTracking,\r\n    updateDriverLocation,\r\n    startRoute,\r\n    completeRoute,\r\n    completeDelivery,\r\n    goOnline,\r\n    goOffline,\r\n  };\r\n\r\n  return (\r\n    <DriverContext.Provider value={contextValue}>\r\n      {children}\r\n    </DriverContext.Provider>\r\n  );\r\n}\r\n\r\n// =====================================================\r\n// HOOK\r\n// =====================================================\r\n\r\nexport function useDriver() {\r\n  const context = useContext(DriverContext);\r\n  if (context === undefined) {\r\n    throw new Error('useDriver must be used within a DriverProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;;;GAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}