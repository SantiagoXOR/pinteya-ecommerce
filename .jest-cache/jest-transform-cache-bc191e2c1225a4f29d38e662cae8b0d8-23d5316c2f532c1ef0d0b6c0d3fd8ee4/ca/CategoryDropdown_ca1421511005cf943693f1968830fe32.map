{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ShopWithSidebar\\CategoryDropdown.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent } from '@/components/ui/card'\nimport { Checkbox } from '@/components/ui/checkbox'\nimport { Badge } from '@/components/ui/badge'\nimport { ChevronDown, Tag, Loader2 } from 'lucide-react'\n\ninterface CategoryItemProps {\n  category: {\n    name: string\n    products: number\n    isRefined?: boolean\n    slug?: string\n    id?: string | number\n  }\n  onCategorySelect: (categorySlug: string) => void\n  isSelected: boolean\n}\n\nconst CategoryItem = ({ category, onCategorySelect, isSelected }: CategoryItemProps) => {\n  const handleClick = () => {\n    if (category.slug) {\n      onCategorySelect(category.slug)\n    }\n  }\n\n  return (\n    <div\n      className='flex items-center justify-between py-2 px-1 hover:bg-gray-50 rounded-md transition-colors'\n      data-testid='category-filter'\n    >\n      <Checkbox\n        id={`category-${category.id || category.slug}`}\n        checked={isSelected}\n        onCheckedChange={handleClick}\n        label={category.name}\n        className='flex-1'\n      />\n\n      <Badge variant={isSelected ? 'default' : 'secondary'} size='sm' className='ml-2'>\n        {category.products}\n      </Badge>\n    </div>\n  )\n}\n\ninterface CategoryDropdownProps {\n  categories: Array<{\n    name: string\n    products: number\n    isRefined?: boolean\n    slug?: string\n    id?: string | number\n  }>\n  onCategorySelect: (categorySlug: string) => void\n  selectedCategory?: string\n  loading?: boolean\n}\n\nconst CategoryDropdown = ({\n  categories,\n  onCategorySelect,\n  selectedCategory,\n  loading = false,\n}: CategoryDropdownProps) => {\n  const [toggleDropdown, setToggleDropdown] = useState(true)\n\n  return (\n    <Card>\n      <CardContent className='p-0'>\n        <button\n          onClick={e => {\n            e.preventDefault()\n            setToggleDropdown(!toggleDropdown)\n          }}\n          className='w-full flex items-center justify-between py-4 px-5 hover:bg-gray-50 transition-colors'\n        >\n          <div className='flex items-center gap-2'>\n            <Tag className='w-4 h-4 text-primary' />\n            <span className='font-medium text-gray-900'>Categorías</span>\n            {loading && <Loader2 className='w-4 h-4 animate-spin text-gray-400' />}\n          </div>\n\n          <ChevronDown\n            className={`w-5 h-5 text-gray-600 transition-transform duration-200 ${\n              toggleDropdown ? 'rotate-180' : ''\n            }`}\n          />\n        </button>\n\n        {/* Dropdown Content */}\n        {toggleDropdown && (\n          <div className='border-t border-gray-200 p-4 space-y-2'>\n            {loading ? (\n              <div className='flex items-center justify-center py-8 text-gray-500'>\n                <Loader2 className='w-5 h-5 animate-spin mr-2' />\n                Cargando categorías...\n              </div>\n            ) : categories.length === 0 ? (\n              <div className='flex flex-col items-center justify-center py-8 text-gray-500'>\n                <Tag className='w-8 h-8 mb-2 text-gray-300' />\n                <p className='text-sm'>No hay categorías disponibles</p>\n              </div>\n            ) : (\n              categories.map((category, key) => (\n                <CategoryItem\n                  key={category.id || key}\n                  category={category}\n                  onCategorySelect={onCategorySelect}\n                  isSelected={selectedCategory === category.slug}\n                />\n              ))\n            )}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default CategoryDropdown\n"],"names":["CategoryItem","category","onCategorySelect","isSelected","handleClick","slug","div","className","data-testid","Checkbox","id","checked","onCheckedChange","label","name","Badge","variant","size","products","CategoryDropdown","categories","selectedCategory","loading","toggleDropdown","setToggleDropdown","useState","Card","CardContent","button","onClick","e","preventDefault","Tag","span","Loader2","ChevronDown","length","p","map","key"],"mappings":"AAAA;;;;;+BAyHA;;;eAAA;;;;uBAvHyB;sBACS;0BACT;uBACH;6BACoB;AAc1C,MAAMA,eAAe,CAAC,EAAEC,QAAQ,EAAEC,gBAAgB,EAAEC,UAAU,EAAqB;IACjF,MAAMC,cAAc;QAClB,IAAIH,SAASI,IAAI,EAAE;YACjBH,iBAAiBD,SAASI,IAAI;QAChC;IACF;IAEA,qBACE,sBAACC;QACCC,WAAU;QACVC,eAAY;;0BAEZ,qBAACC,kBAAQ;gBACPC,IAAI,CAAC,SAAS,EAAET,SAASS,EAAE,IAAIT,SAASI,IAAI,EAAE;gBAC9CM,SAASR;gBACTS,iBAAiBR;gBACjBS,OAAOZ,SAASa,IAAI;gBACpBP,WAAU;;0BAGZ,qBAACQ,YAAK;gBAACC,SAASb,aAAa,YAAY;gBAAac,MAAK;gBAAKV,WAAU;0BACvEN,SAASiB,QAAQ;;;;AAI1B;AAeA,MAAMC,mBAAmB,CAAC,EACxBC,UAAU,EACVlB,gBAAgB,EAChBmB,gBAAgB,EAChBC,UAAU,KAAK,EACO;IACtB,MAAM,CAACC,gBAAgBC,kBAAkB,GAAGC,IAAAA,eAAQ,EAAC;IAErD,qBACE,qBAACC,UAAI;kBACH,cAAA,sBAACC,iBAAW;YAACpB,WAAU;;8BACrB,sBAACqB;oBACCC,SAASC,CAAAA;wBACPA,EAAEC,cAAc;wBAChBP,kBAAkB,CAACD;oBACrB;oBACAhB,WAAU;;sCAEV,sBAACD;4BAAIC,WAAU;;8CACb,qBAACyB,gBAAG;oCAACzB,WAAU;;8CACf,qBAAC0B;oCAAK1B,WAAU;8CAA4B;;gCAC3Ce,yBAAW,qBAACY,oBAAO;oCAAC3B,WAAU;;;;sCAGjC,qBAAC4B,wBAAW;4BACV5B,WAAW,CAAC,wDAAwD,EAClEgB,iBAAiB,eAAe,IAChC;;;;gBAKLA,gCACC,qBAACjB;oBAAIC,WAAU;8BACZe,wBACC,sBAAChB;wBAAIC,WAAU;;0CACb,qBAAC2B,oBAAO;gCAAC3B,WAAU;;4BAA8B;;yBAGjDa,WAAWgB,MAAM,KAAK,kBACxB,sBAAC9B;wBAAIC,WAAU;;0CACb,qBAACyB,gBAAG;gCAACzB,WAAU;;0CACf,qBAAC8B;gCAAE9B,WAAU;0CAAU;;;yBAGzBa,WAAWkB,GAAG,CAAC,CAACrC,UAAUsC,oBACxB,qBAACvC;4BAECC,UAAUA;4BACVC,kBAAkBA;4BAClBC,YAAYkB,qBAAqBpB,SAASI,IAAI;2BAHzCJ,SAASS,EAAE,IAAI6B;;;;;AAYtC;MAEA,WAAepB"}