381c5e6b6c735d48bd1df8b71f81f324
// =====================================================
// API: TRACKING DE ENVÍOS ENTERPRISE
// Endpoints: GET/POST /api/admin/logistics/tracking/[id]
// Descripción: Sistema de tracking tiempo real
// Basado en: Patrones WooCommerce + Spree Commerce
// =====================================================
"use strict";

/* istanbul ignore next */
function cov_2aa1cit2mh() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\logistics\\tracking\\[id]\\route.ts";
  var hash = "588909e5eff06fdf5c6e73fe76bec614ffdf8c3c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\logistics\\tracking\\[id]\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "1": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 15,
          column: 7
        }
      },
      "2": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 15,
          column: 7
        }
      },
      "3": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 27,
          column: 3
        }
      },
      "4": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 19
        }
      },
      "5": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 20
        }
      },
      "6": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 19
        }
      },
      "7": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 38
        }
      },
      "8": {
        start: {
          line: 29,
          column: 14
        },
        end: {
          line: 29,
          column: 47
        }
      },
      "9": {
        start: {
          line: 30,
          column: 17
        },
        end: {
          line: 30,
          column: 78
        }
      },
      "10": {
        start: {
          line: 31,
          column: 13
        },
        end: {
          line: 31,
          column: 27
        }
      },
      "11": {
        start: {
          line: 35,
          column: 34
        },
        end: {
          line: 44,
          column: 2
        }
      },
      "12": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 49,
          column: 43
        }
      },
      "13": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "14": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 55,
          column: 11
        }
      },
      "15": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "16": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 62,
          column: 11
        }
      },
      "17": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 16
        }
      },
      "18": {
        start: {
          line: 70,
          column: 28
        },
        end: {
          line: 77,
          column: 36
        }
      },
      "19": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "20": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 20
        }
      },
      "21": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 81,
          column: 16
        }
      },
      "22": {
        start: {
          line: 84,
          column: 31
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "23": {
        start: {
          line: 91,
          column: 23
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "24": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "25": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 74
        }
      },
      "26": {
        start: {
          line: 98,
          column: 22
        },
        end: {
          line: 98,
          column: 94
        }
      },
      "27": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 101,
          column: 5
        }
      },
      "28": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 20
        }
      },
      "29": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 151,
          column: 5
        }
      },
      "30": {
        start: {
          line: 106,
          column: 26
        },
        end: {
          line: 106,
          column: 58
        }
      },
      "31": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "32": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 29
        }
      },
      "33": {
        start: {
          line: 111,
          column: 27
        },
        end: {
          line: 111,
          column: 46
        }
      },
      "34": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "35": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 117,
          column: 15
        }
      },
      "36": {
        start: {
          line: 120,
          column: 25
        },
        end: {
          line: 120,
          column: 53
        }
      },
      "37": {
        start: {
          line: 122,
          column: 25
        },
        end: {
          line: 122,
          column: 75
        }
      },
      "38": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "39": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 128,
          column: 15
        }
      },
      "40": {
        start: {
          line: 131,
          column: 48
        },
        end: {
          line: 133,
          column: 10
        }
      },
      "41": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "42": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 24
        }
      },
      "43": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 142,
          column: 11
        }
      },
      "44": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 59
        }
      },
      "45": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 150,
          column: 11
        }
      },
      "46": {
        start: {
          line: 154,
          column: 4
        },
        end: {
          line: 245,
          column: 5
        }
      },
      "47": {
        start: {
          line: 156,
          column: 26
        },
        end: {
          line: 156,
          column: 58
        }
      },
      "48": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "49": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 29
        }
      },
      "50": {
        start: {
          line: 161,
          column: 27
        },
        end: {
          line: 161,
          column: 46
        }
      },
      "51": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "52": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 167,
          column: 15
        }
      },
      "53": {
        start: {
          line: 170,
          column: 21
        },
        end: {
          line: 170,
          column: 41
        }
      },
      "54": {
        start: {
          line: 171,
          column: 30
        },
        end: {
          line: 171,
          column: 67
        }
      },
      "55": {
        start: {
          line: 173,
          column: 25
        },
        end: {
          line: 173,
          column: 53
        }
      },
      "56": {
        start: {
          line: 175,
          column: 25
        },
        end: {
          line: 175,
          column: 75
        }
      },
      "57": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 182,
          column: 9
        }
      },
      "58": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 181,
          column: 15
        }
      },
      "59": {
        start: {
          line: 184,
          column: 62
        },
        end: {
          line: 194,
          column: 31
        }
      },
      "60": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 197,
          column: 9
        }
      },
      "61": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 32
        }
      },
      "62": {
        start: {
          line: 199,
          column: 33
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "63": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "64": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 83
        }
      },
      "65": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "66": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 216,
          column: 36
        }
      },
      "67": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 223,
          column: 11
        }
      },
      "68": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 60
        }
      },
      "69": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "70": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 237,
          column: 15
        }
      },
      "71": {
        start: {
          line: 230,
          column: 20
        },
        end: {
          line: 232,
          column: 22
        }
      },
      "72": {
        start: {
          line: 233,
          column: 20
        },
        end: {
          line: 233,
          column: 31
        }
      },
      "73": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 244,
          column: 11
        }
      },
      "74": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 336,
          column: 5
        }
      },
      "75": {
        start: {
          line: 250,
          column: 26
        },
        end: {
          line: 250,
          column: 58
        }
      },
      "76": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 253,
          column: 9
        }
      },
      "77": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 29
        }
      },
      "78": {
        start: {
          line: 255,
          column: 27
        },
        end: {
          line: 255,
          column: 46
        }
      },
      "79": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 262,
          column: 9
        }
      },
      "80": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 261,
          column: 15
        }
      },
      "81": {
        start: {
          line: 264,
          column: 21
        },
        end: {
          line: 264,
          column: 41
        }
      },
      "82": {
        start: {
          line: 265,
          column: 27
        },
        end: {
          line: 265,
          column: 31
        }
      },
      "83": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 272,
          column: 9
        }
      },
      "84": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 271,
          column: 15
        }
      },
      "85": {
        start: {
          line: 274,
          column: 32
        },
        end: {
          line: 274,
          column: 91
        }
      },
      "86": {
        start: {
          line: 274,
          column: 52
        },
        end: {
          line: 274,
          column: 90
        }
      },
      "87": {
        start: {
          line: 276,
          column: 25
        },
        end: {
          line: 276,
          column: 53
        }
      },
      "88": {
        start: {
          line: 278,
          column: 25
        },
        end: {
          line: 278,
          column: 75
        }
      },
      "89": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 285,
          column: 9
        }
      },
      "90": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 284,
          column: 15
        }
      },
      "91": {
        start: {
          line: 287,
          column: 31
        },
        end: {
          line: 290,
          column: 15
        }
      },
      "92": {
        start: {
          line: 287,
          column: 61
        },
        end: {
          line: 290,
          column: 13
        }
      },
      "93": {
        start: {
          line: 291,
          column: 61
        },
        end: {
          line: 291,
          column: 134
        }
      },
      "94": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 294,
          column: 9
        }
      },
      "95": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 30
        }
      },
      "96": {
        start: {
          line: 296,
          column: 32
        },
        end: {
          line: 305,
          column: 124
        }
      },
      "97": {
        start: {
          line: 296,
          column: 64
        },
        end: {
          line: 305,
          column: 36
        }
      },
      "98": {
        start: {
          line: 305,
          column: 51
        },
        end: {
          line: 305,
          column: 120
        }
      },
      "99": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 308,
          column: 9
        }
      },
      "100": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 307,
          column: 85
        }
      },
      "101": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 314,
          column: 11
        }
      },
      "102": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 316,
          column: 59
        }
      },
      "103": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 329,
          column: 9
        }
      },
      "104": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 328,
          column: 15
        }
      },
      "105": {
        start: {
          line: 321,
          column: 20
        },
        end: {
          line: 323,
          column: 22
        }
      },
      "106": {
        start: {
          line: 324,
          column: 20
        },
        end: {
          line: 324,
          column: 31
        }
      },
      "107": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 335,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 16
          }
        },
        loc: {
          start: {
            line: 11,
            column: 30
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 16
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "4": {
        name: "validateAdminAuth",
        decl: {
          start: {
            line: 48,
            column: 15
          },
          end: {
            line: 48,
            column: 32
          }
        },
        loc: {
          start: {
            line: 48,
            column: 42
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 48
      },
      "5": {
        name: "validateShipmentExists",
        decl: {
          start: {
            line: 69,
            column: 15
          },
          end: {
            line: 69,
            column: 37
          }
        },
        loc: {
          start: {
            line: 69,
            column: 60
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 69
      },
      "6": {
        name: "updateShipmentStatus",
        decl: {
          start: {
            line: 83,
            column: 15
          },
          end: {
            line: 83,
            column: 35
          }
        },
        loc: {
          start: {
            line: 83,
            column: 66
          },
          end: {
            line: 102,
            column: 1
          }
        },
        line: 83
      },
      "7": {
        name: "GET",
        decl: {
          start: {
            line: 103,
            column: 15
          },
          end: {
            line: 103,
            column: 18
          }
        },
        loc: {
          start: {
            line: 103,
            column: 40
          },
          end: {
            line: 152,
            column: 1
          }
        },
        line: 103
      },
      "8": {
        name: "POST",
        decl: {
          start: {
            line: 153,
            column: 15
          },
          end: {
            line: 153,
            column: 19
          }
        },
        loc: {
          start: {
            line: 153,
            column: 41
          },
          end: {
            line: 246,
            column: 1
          }
        },
        line: 153
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 229,
            column: 45
          },
          end: {
            line: 229,
            column: 46
          }
        },
        loc: {
          start: {
            line: 229,
            column: 57
          },
          end: {
            line: 234,
            column: 17
          }
        },
        line: 229
      },
      "10": {
        name: "PUT",
        decl: {
          start: {
            line: 247,
            column: 15
          },
          end: {
            line: 247,
            column: 18
          }
        },
        loc: {
          start: {
            line: 247,
            column: 40
          },
          end: {
            line: 337,
            column: 1
          }
        },
        line: 247
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 274,
            column: 43
          },
          end: {
            line: 274,
            column: 44
          }
        },
        loc: {
          start: {
            line: 274,
            column: 52
          },
          end: {
            line: 274,
            column: 90
          }
        },
        line: 274
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 287,
            column: 51
          },
          end: {
            line: 287,
            column: 52
          }
        },
        loc: {
          start: {
            line: 287,
            column: 61
          },
          end: {
            line: 290,
            column: 13
          }
        },
        line: 287
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 296,
            column: 55
          },
          end: {
            line: 296,
            column: 56
          }
        },
        loc: {
          start: {
            line: 296,
            column: 64
          },
          end: {
            line: 305,
            column: 36
          }
        },
        line: 296
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 305,
            column: 43
          },
          end: {
            line: 305,
            column: 44
          }
        },
        loc: {
          start: {
            line: 305,
            column: 51
          },
          end: {
            line: 305,
            column: 120
          }
        },
        line: 305
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 320,
            column: 45
          },
          end: {
            line: 320,
            column: 46
          }
        },
        loc: {
          start: {
            line: 320,
            column: 57
          },
          end: {
            line: 325,
            column: 17
          }
        },
        line: 320
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "1": {
        loc: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "2": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 57,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 57,
            column: 37
          }
        }, {
          start: {
            line: 57,
            column: 41
          },
          end: {
            line: 57,
            column: 72
          }
        }],
        line: 57
      },
      "3": {
        loc: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "4": {
        loc: {
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 78,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 78,
            column: 13
          }
        }, {
          start: {
            line: 78,
            column: 17
          },
          end: {
            line: 78,
            column: 22
          }
        }],
        line: 78
      },
      "5": {
        loc: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "6": {
        loc: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "7": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "8": {
        loc: {
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "9": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "10": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "11": {
        loc: {
          start: {
            line: 140,
            column: 33
          },
          end: {
            line: 140,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 33
          },
          end: {
            line: 140,
            column: 47
          }
        }, {
          start: {
            line: 140,
            column: 51
          },
          end: {
            line: 140,
            column: 53
          }
        }],
        line: 140
      },
      "12": {
        loc: {
          start: {
            line: 147,
            column: 21
          },
          end: {
            line: 147,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 147,
            column: 46
          },
          end: {
            line: 147,
            column: 59
          }
        }, {
          start: {
            line: 147,
            column: 62
          },
          end: {
            line: 147,
            column: 77
          }
        }],
        line: 147
      },
      "13": {
        loc: {
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "14": {
        loc: {
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "15": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 182,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 182,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "16": {
        loc: {
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "17": {
        loc: {
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "18": {
        loc: {
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "19": {
        loc: {
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "20": {
        loc: {
          start: {
            line: 241,
            column: 21
          },
          end: {
            line: 241,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 241,
            column: 46
          },
          end: {
            line: 241,
            column: 59
          }
        }, {
          start: {
            line: 241,
            column: 62
          },
          end: {
            line: 241,
            column: 77
          }
        }],
        line: 241
      },
      "21": {
        loc: {
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "22": {
        loc: {
          start: {
            line: 256,
            column: 8
          },
          end: {
            line: 262,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 8
          },
          end: {
            line: 262,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 256
      },
      "23": {
        loc: {
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 272,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 272,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "24": {
        loc: {
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 266,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 266,
            column: 34
          }
        }, {
          start: {
            line: 266,
            column: 38
          },
          end: {
            line: 266,
            column: 57
          }
        }],
        line: 266
      },
      "25": {
        loc: {
          start: {
            line: 279,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 279,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 279
      },
      "26": {
        loc: {
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 294,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 294,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "27": {
        loc: {
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 308,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 308,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 306
      },
      "28": {
        loc: {
          start: {
            line: 311,
            column: 24
          },
          end: {
            line: 311,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 311,
            column: 24
          },
          end: {
            line: 311,
            column: 46
          }
        }, {
          start: {
            line: 311,
            column: 50
          },
          end: {
            line: 311,
            column: 51
          }
        }],
        line: 311
      },
      "29": {
        loc: {
          start: {
            line: 317,
            column: 8
          },
          end: {
            line: 329,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 8
          },
          end: {
            line: 329,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "30": {
        loc: {
          start: {
            line: 332,
            column: 21
          },
          end: {
            line: 332,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 332,
            column: 46
          },
          end: {
            line: 332,
            column: 59
          }
        }, {
          start: {
            line: 332,
            column: 62
          },
          end: {
            line: 332,
            column: 77
          }
        }],
        line: 332
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\logistics\\tracking\\[id]\\route.ts"],
      sourcesContent: ["// =====================================================\r\n// API: TRACKING DE ENV\xCDOS ENTERPRISE\r\n// Endpoints: GET/POST /api/admin/logistics/tracking/[id]\r\n// Descripci\xF3n: Sistema de tracking tiempo real\r\n// Basado en: Patrones WooCommerce + Spree Commerce\r\n// =====================================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/auth';\r\nimport { createClient } from '@/lib/integrations/supabase/server';\r\nimport { Database } from '@/types/database';\r\nimport { z } from 'zod';\r\nimport { \r\n  TrackingEvent,\r\n  CreateTrackingEventRequest,\r\n  Shipment \r\n} from '@/types/logistics';\r\n\r\n// =====================================================\r\n// SCHEMAS DE VALIDACI\xD3N ZOD\r\n// =====================================================\r\n\r\nconst CreateTrackingEventSchema = z.object({\r\n  status: z.string().min(1, 'Status es requerido'),\r\n  description: z.string().min(1, 'Descripci\xF3n es requerida'),\r\n  location: z.string().optional(),\r\n  latitude: z.number().min(-90).max(90).optional(),\r\n  longitude: z.number().min(-180).max(180).optional(),\r\n  occurred_at: z.string().datetime('Fecha debe ser v\xE1lida'),\r\n  external_event_id: z.string().optional(),\r\n  raw_data: z.record(z.any()).optional()\r\n});\r\n\r\n// =====================================================\r\n// MIDDLEWARE DE AUTENTICACI\xD3N\r\n// =====================================================\r\nasync function validateAdminAuth(request: NextRequest) {\r\n  const session = await auth();\r\n  \r\n  if (!session?.user) {\r\n    return NextResponse.json(\r\n      { error: 'Unauthorized' },\r\n      { status: 401 }\r\n    );\r\n  }\r\n  \r\n  if (session.user.role !== 'admin' && session.user.role !== 'manager') {\r\n    return NextResponse.json(\r\n      { error: 'Insufficient permissions' },\r\n      { status: 403 }\r\n    );\r\n  }\r\n  \r\n  return null;\r\n}\r\n\r\n// =====================================================\r\n// FUNCIONES AUXILIARES\r\n// =====================================================\r\n\r\nasync function validateShipmentExists(supabase: ReturnType<typeof createClient<Database>>, shipmentId: number): Promise<Shipment | null> {\r\n  const { data, error } = await supabase\r\n    .from('shipments')\r\n    .select(`\r\n      *,\r\n      carrier:couriers(id, name, code, logo_url),\r\n      items:shipment_items(\r\n        id, quantity, weight_kg,\r\n        product:products(id, name, sku, image_url)\r\n      )\r\n    `)\r\n    .eq('id', shipmentId)\r\n    .single();\r\n  \r\n  if (error || !data) {return null;}\r\n  return data;\r\n}\r\n\r\nasync function updateShipmentStatus(\r\n  supabase: ReturnType<typeof createClient<Database>>, \r\n  shipmentId: number, \r\n  status: string\r\n): Promise<void> {\r\n  const statusTimestampMap: Record<string, string> = {\r\n    'confirmed': 'confirmed_at',\r\n    'picked_up': 'picked_up_at',\r\n    'shipped': 'shipped_at',\r\n    'delivered': 'delivered_at',\r\n    'cancelled': 'cancelled_at'\r\n  };\r\n  \r\n  const updateData: any = { status };\r\n  \r\n  // Actualizar timestamp correspondiente si aplica\r\n  if (statusTimestampMap[status]) {\r\n    updateData[statusTimestampMap[status]] = new Date().toISOString();\r\n  }\r\n  \r\n  const { error } = await supabase\r\n    .from('shipments')\r\n    .update(updateData)\r\n    .eq('id', shipmentId);\r\n  \r\n  if (error) {throw error;}\r\n}\r\n\r\n// =====================================================\r\n// GET: OBTENER EVENTOS DE TRACKING\r\n// =====================================================\r\n\r\nexport async function GET(\r\n  request: NextRequest,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  try {\r\n    // Validar autenticaci\xF3n\r\n    const authError = await validateAdminAuth(request);\r\n    if (authError) {return authError;}\r\n    \r\n    // Validar ID del env\xEDo\r\n    const shipmentId = parseInt(params.id);\r\n    if (isNaN(shipmentId)) {\r\n      return NextResponse.json(\r\n        { error: 'Invalid shipment ID' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n    \r\n    // Crear cliente Supabase\r\n    const supabase = createClient();\r\n    \r\n    // Validar que el env\xEDo existe\r\n    const shipment = await validateShipmentExists(supabase, shipmentId);\r\n    if (!shipment) {\r\n      return NextResponse.json(\r\n        { error: 'Shipment not found' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n    \r\n    // Obtener eventos de tracking\r\n    const { data: trackingEvents, error } = await supabase\r\n      .from('tracking_events')\r\n      .select('*')\r\n      .eq('shipment_id', shipmentId)\r\n      .order('occurred_at', { ascending: false });\r\n    \r\n    if (error) {throw error;}\r\n    \r\n    return NextResponse.json({\r\n      data: {\r\n        shipment,\r\n        tracking_events: trackingEvents || []\r\n      }\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error('Error in GET tracking API:', error);\r\n    \r\n    return NextResponse.json(\r\n      { \r\n        error: 'Internal server error',\r\n        details: error instanceof Error ? error.message : 'Unknown error'\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// =====================================================\r\n// POST: CREAR EVENTO DE TRACKING\r\n// =====================================================\r\n\r\nexport async function POST(\r\n  request: NextRequest,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  try {\r\n    // Validar autenticaci\xF3n\r\n    const authError = await validateAdminAuth(request);\r\n    if (authError) {return authError;}\r\n    \r\n    // Validar ID del env\xEDo\r\n    const shipmentId = parseInt(params.id);\r\n    if (isNaN(shipmentId)) {\r\n      return NextResponse.json(\r\n        { error: 'Invalid shipment ID' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n    \r\n    // Parsear y validar body\r\n    const body = await request.json();\r\n    const validatedData = CreateTrackingEventSchema.parse(body);\r\n    \r\n    // Crear cliente Supabase\r\n    const supabase = createClient();\r\n    \r\n    // Validar que el env\xEDo existe\r\n    const shipment = await validateShipmentExists(supabase, shipmentId);\r\n    if (!shipment) {\r\n      return NextResponse.json(\r\n        { error: 'Shipment not found' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n    \r\n    // Crear evento de tracking\r\n    const { data: trackingEvent, error: trackingError } = await supabase\r\n      .from('tracking_events')\r\n      .insert({\r\n        shipment_id: shipmentId,\r\n        status: validatedData.status,\r\n        description: validatedData.description,\r\n        location: validatedData.location,\r\n        latitude: validatedData.latitude,\r\n        longitude: validatedData.longitude,\r\n        occurred_at: validatedData.occurred_at,\r\n        external_event_id: validatedData.external_event_id,\r\n        raw_data: validatedData.raw_data\r\n      })\r\n      .select('*')\r\n      .single();\r\n    \r\n    if (trackingError) {throw trackingError;}\r\n    \r\n    // Actualizar estado del env\xEDo si es necesario\r\n    const statusesToUpdate = [\r\n      'confirmed', 'picked_up', 'in_transit', 'out_for_delivery', \r\n      'delivered', 'exception', 'cancelled', 'returned'\r\n    ];\r\n    \r\n    if (statusesToUpdate.includes(validatedData.status)) {\r\n      await updateShipmentStatus(supabase, shipmentId, validatedData.status);\r\n    }\r\n    \r\n    // Si el env\xEDo fue entregado, actualizar fecha de entrega real\r\n    if (validatedData.status === 'delivered') {\r\n      await supabase\r\n        .from('shipments')\r\n        .update({ \r\n          actual_delivery_date: validatedData.occurred_at.split('T')[0]\r\n        })\r\n        .eq('id', shipmentId);\r\n    }\r\n    \r\n    return NextResponse.json(\r\n      { \r\n        data: trackingEvent,\r\n        message: 'Tracking event created successfully'\r\n      },\r\n      { status: 201 }\r\n    );\r\n    \r\n  } catch (error) {\r\n    console.error('Error in POST tracking API:', error);\r\n    \r\n    if (error instanceof z.ZodError) {\r\n      return NextResponse.json(\r\n        { \r\n          error: 'Validation error',\r\n          details: error.errors.reduce((acc, err) => {\r\n            acc[err.path.join('.')] = [err.message];\r\n            return acc;\r\n          }, {} as Record<string, string[]>)\r\n        },\r\n        { status: 422 }\r\n      );\r\n    }\r\n    \r\n    return NextResponse.json(\r\n      { \r\n        error: 'Internal server error',\r\n        details: error instanceof Error ? error.message : 'Unknown error'\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// =====================================================\r\n// PUT: ACTUALIZAR M\xDALTIPLES EVENTOS (BULK UPDATE)\r\n// =====================================================\r\n\r\nexport async function PUT(\r\n  request: NextRequest,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  try {\r\n    // Validar autenticaci\xF3n\r\n    const authError = await validateAdminAuth(request);\r\n    if (authError) {return authError;}\r\n    \r\n    // Validar ID del env\xEDo\r\n    const shipmentId = parseInt(params.id);\r\n    if (isNaN(shipmentId)) {\r\n      return NextResponse.json(\r\n        { error: 'Invalid shipment ID' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n    \r\n    // Parsear body para bulk update\r\n    const body = await request.json();\r\n    const { events } = body;\r\n    \r\n    if (!Array.isArray(events) || events.length === 0) {\r\n      return NextResponse.json(\r\n        { error: 'Events array is required' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n    \r\n    // Validar cada evento\r\n    const validatedEvents = events.map(event => \r\n      CreateTrackingEventSchema.parse(event)\r\n    );\r\n    \r\n    // Crear cliente Supabase\r\n    const supabase = createClient();\r\n    \r\n    // Validar que el env\xEDo existe\r\n    const shipment = await validateShipmentExists(supabase, shipmentId);\r\n    if (!shipment) {\r\n      return NextResponse.json(\r\n        { error: 'Shipment not found' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n    \r\n    // Insertar eventos en lote\r\n    const eventsToInsert = validatedEvents.map(event => ({\r\n      shipment_id: shipmentId,\r\n      ...event\r\n    }));\r\n    \r\n    const { data: insertedEvents, error: insertError } = await supabase\r\n      .from('tracking_events')\r\n      .insert(eventsToInsert)\r\n      .select('*');\r\n    \r\n    if (insertError) {throw insertError;}\r\n    \r\n    // Actualizar estado del env\xEDo al \xFAltimo estado v\xE1lido\r\n    const lastValidStatus = validatedEvents\r\n      .filter(event => [\r\n        'confirmed', 'picked_up', 'in_transit', 'out_for_delivery', \r\n        'delivered', 'exception', 'cancelled', 'returned'\r\n      ].includes(event.status))\r\n      .sort((a, b) => new Date(b.occurred_at).getTime() - new Date(a.occurred_at).getTime())[0];\r\n    \r\n    if (lastValidStatus) {\r\n      await updateShipmentStatus(supabase, shipmentId, lastValidStatus.status);\r\n    }\r\n    \r\n    return NextResponse.json(\r\n      { \r\n        data: insertedEvents,\r\n        message: `${insertedEvents?.length || 0} tracking events created successfully`\r\n      },\r\n      { status: 201 }\r\n    );\r\n    \r\n  } catch (error) {\r\n    console.error('Error in PUT tracking API:', error);\r\n    \r\n    if (error instanceof z.ZodError) {\r\n      return NextResponse.json(\r\n        { \r\n          error: 'Validation error',\r\n          details: error.errors.reduce((acc, err) => {\r\n            acc[err.path.join('.')] = [err.message];\r\n            return acc;\r\n          }, {} as Record<string, string[]>)\r\n        },\r\n        { status: 422 }\r\n      );\r\n    }\r\n    \r\n    return NextResponse.json(\r\n      { \r\n        error: 'Internal server error',\r\n        details: error instanceof Error ? error.message : 'Unknown error'\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],
      names: ["GET", "POST", "PUT", "CreateTrackingEventSchema", "z", "object", "status", "string", "min", "description", "location", "optional", "latitude", "number", "max", "longitude", "occurred_at", "datetime", "external_event_id", "raw_data", "record", "any", "validateAdminAuth", "request", "session", "auth", "user", "NextResponse", "json", "error", "role", "validateShipmentExists", "supabase", "shipmentId", "data", "from", "select", "eq", "single", "updateShipmentStatus", "statusTimestampMap", "updateData", "Date", "toISOString", "update", "params", "authError", "parseInt", "id", "isNaN", "createClient", "shipment", "trackingEvents", "order", "ascending", "tracking_events", "console", "details", "Error", "message", "body", "validatedData", "parse", "trackingEvent", "trackingError", "insert", "shipment_id", "statusesToUpdate", "includes", "actual_delivery_date", "split", "ZodError", "errors", "reduce", "acc", "err", "path", "join", "events", "Array", "isArray", "length", "validatedEvents", "map", "event", "eventsToInsert", "insertedEvents", "insertError", "lastValidStatus", "filter", "sort", "a", "b", "getTime"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "588909e5eff06fdf5c6e73fe76bec614ffdf8c3c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2aa1cit2mh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2aa1cit2mh();
cov_2aa1cit2mh().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2aa1cit2mh().f[0]++;
  cov_2aa1cit2mh().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2aa1cit2mh().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2aa1cit2mh().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_2aa1cit2mh().f[1]++;
    cov_2aa1cit2mh().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_2aa1cit2mh().f[2]++;
    cov_2aa1cit2mh().s[5]++;
    return POST;
  },
  get PUT() {
    /* istanbul ignore next */
    cov_2aa1cit2mh().f[3]++;
    cov_2aa1cit2mh().s[6]++;
    return PUT;
  }
});
const _server =
/* istanbul ignore next */
(cov_2aa1cit2mh().s[7]++, require("next/server"));
const _auth =
/* istanbul ignore next */
(cov_2aa1cit2mh().s[8]++, require("../../../../../../auth"));
const _server1 =
/* istanbul ignore next */
(cov_2aa1cit2mh().s[9]++, require("../../../../../../lib/integrations/supabase/server"));
const _zod =
/* istanbul ignore next */
(cov_2aa1cit2mh().s[10]++, require("zod"));
// =====================================================
// SCHEMAS DE VALIDACIÓN ZOD
// =====================================================
const CreateTrackingEventSchema =
/* istanbul ignore next */
(cov_2aa1cit2mh().s[11]++, _zod.z.object({
  status: _zod.z.string().min(1, 'Status es requerido'),
  description: _zod.z.string().min(1, 'Descripción es requerida'),
  location: _zod.z.string().optional(),
  latitude: _zod.z.number().min(-90).max(90).optional(),
  longitude: _zod.z.number().min(-180).max(180).optional(),
  occurred_at: _zod.z.string().datetime('Fecha debe ser válida'),
  external_event_id: _zod.z.string().optional(),
  raw_data: _zod.z.record(_zod.z.any()).optional()
}));
// =====================================================
// MIDDLEWARE DE AUTENTICACIÓN
// =====================================================
async function validateAdminAuth(request) {
  /* istanbul ignore next */
  cov_2aa1cit2mh().f[4]++;
  const session =
  /* istanbul ignore next */
  (cov_2aa1cit2mh().s[12]++, await (0, _auth.auth)());
  /* istanbul ignore next */
  cov_2aa1cit2mh().s[13]++;
  if (!session?.user) {
    /* istanbul ignore next */
    cov_2aa1cit2mh().b[0][0]++;
    cov_2aa1cit2mh().s[14]++;
    return _server.NextResponse.json({
      error: 'Unauthorized'
    }, {
      status: 401
    });
  } else
  /* istanbul ignore next */
  {
    cov_2aa1cit2mh().b[0][1]++;
  }
  cov_2aa1cit2mh().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_2aa1cit2mh().b[2][0]++, session.user.role !== 'admin') &&
  /* istanbul ignore next */
  (cov_2aa1cit2mh().b[2][1]++, session.user.role !== 'manager')) {
    /* istanbul ignore next */
    cov_2aa1cit2mh().b[1][0]++;
    cov_2aa1cit2mh().s[16]++;
    return _server.NextResponse.json({
      error: 'Insufficient permissions'
    }, {
      status: 403
    });
  } else
  /* istanbul ignore next */
  {
    cov_2aa1cit2mh().b[1][1]++;
  }
  cov_2aa1cit2mh().s[17]++;
  return null;
}
// =====================================================
// FUNCIONES AUXILIARES
// =====================================================
async function validateShipmentExists(supabase, shipmentId) {
  /* istanbul ignore next */
  cov_2aa1cit2mh().f[5]++;
  const {
    data,
    error
  } =
  /* istanbul ignore next */
  (cov_2aa1cit2mh().s[18]++, await supabase.from('shipments').select(`
      *,
      carrier:couriers(id, name, code, logo_url),
      items:shipment_items(
        id, quantity, weight_kg,
        product:products(id, name, sku, image_url)
      )
    `).eq('id', shipmentId).single());
  /* istanbul ignore next */
  cov_2aa1cit2mh().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_2aa1cit2mh().b[4][0]++, error) ||
  /* istanbul ignore next */
  (cov_2aa1cit2mh().b[4][1]++, !data)) {
    /* istanbul ignore next */
    cov_2aa1cit2mh().b[3][0]++;
    cov_2aa1cit2mh().s[20]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2aa1cit2mh().b[3][1]++;
  }
  cov_2aa1cit2mh().s[21]++;
  return data;
}
async function updateShipmentStatus(supabase, shipmentId, status) {
  /* istanbul ignore next */
  cov_2aa1cit2mh().f[6]++;
  const statusTimestampMap =
  /* istanbul ignore next */
  (cov_2aa1cit2mh().s[22]++, {
    'confirmed': 'confirmed_at',
    'picked_up': 'picked_up_at',
    'shipped': 'shipped_at',
    'delivered': 'delivered_at',
    'cancelled': 'cancelled_at'
  });
  const updateData =
  /* istanbul ignore next */
  (cov_2aa1cit2mh().s[23]++, {
    status
  });
  // Actualizar timestamp correspondiente si aplica
  /* istanbul ignore next */
  cov_2aa1cit2mh().s[24]++;
  if (statusTimestampMap[status]) {
    /* istanbul ignore next */
    cov_2aa1cit2mh().b[5][0]++;
    cov_2aa1cit2mh().s[25]++;
    updateData[statusTimestampMap[status]] = new Date().toISOString();
  } else
  /* istanbul ignore next */
  {
    cov_2aa1cit2mh().b[5][1]++;
  }
  const {
    error
  } =
  /* istanbul ignore next */
  (cov_2aa1cit2mh().s[26]++, await supabase.from('shipments').update(updateData).eq('id', shipmentId));
  /* istanbul ignore next */
  cov_2aa1cit2mh().s[27]++;
  if (error) {
    /* istanbul ignore next */
    cov_2aa1cit2mh().b[6][0]++;
    cov_2aa1cit2mh().s[28]++;
    throw error;
  } else
  /* istanbul ignore next */
  {
    cov_2aa1cit2mh().b[6][1]++;
  }
}
async function GET(request, {
  params
}) {
  /* istanbul ignore next */
  cov_2aa1cit2mh().f[7]++;
  cov_2aa1cit2mh().s[29]++;
  try {
    // Validar autenticación
    const authError =
    /* istanbul ignore next */
    (cov_2aa1cit2mh().s[30]++, await validateAdminAuth(request));
    /* istanbul ignore next */
    cov_2aa1cit2mh().s[31]++;
    if (authError) {
      /* istanbul ignore next */
      cov_2aa1cit2mh().b[7][0]++;
      cov_2aa1cit2mh().s[32]++;
      return authError;
    } else
    /* istanbul ignore next */
    {
      cov_2aa1cit2mh().b[7][1]++;
    }
    // Validar ID del envío
    const shipmentId =
    /* istanbul ignore next */
    (cov_2aa1cit2mh().s[33]++, parseInt(params.id));
    /* istanbul ignore next */
    cov_2aa1cit2mh().s[34]++;
    if (isNaN(shipmentId)) {
      /* istanbul ignore next */
      cov_2aa1cit2mh().b[8][0]++;
      cov_2aa1cit2mh().s[35]++;
      return _server.NextResponse.json({
        error: 'Invalid shipment ID'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2aa1cit2mh().b[8][1]++;
    }
    // Crear cliente Supabase
    const supabase =
    /* istanbul ignore next */
    (cov_2aa1cit2mh().s[36]++, (0, _server1.createClient)());
    // Validar que el envío existe
    const shipment =
    /* istanbul ignore next */
    (cov_2aa1cit2mh().s[37]++, await validateShipmentExists(supabase, shipmentId));
    /* istanbul ignore next */
    cov_2aa1cit2mh().s[38]++;
    if (!shipment) {
      /* istanbul ignore next */
      cov_2aa1cit2mh().b[9][0]++;
      cov_2aa1cit2mh().s[39]++;
      return _server.NextResponse.json({
        error: 'Shipment not found'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_2aa1cit2mh().b[9][1]++;
    }
    // Obtener eventos de tracking
    const {
      data: trackingEvents,
      error
    } =
    /* istanbul ignore next */
    (cov_2aa1cit2mh().s[40]++, await supabase.from('tracking_events').select('*').eq('shipment_id', shipmentId).order('occurred_at', {
      ascending: false
    }));
    /* istanbul ignore next */
    cov_2aa1cit2mh().s[41]++;
    if (error) {
      /* istanbul ignore next */
      cov_2aa1cit2mh().b[10][0]++;
      cov_2aa1cit2mh().s[42]++;
      throw error;
    } else
    /* istanbul ignore next */
    {
      cov_2aa1cit2mh().b[10][1]++;
    }
    cov_2aa1cit2mh().s[43]++;
    return _server.NextResponse.json({
      data: {
        shipment,
        tracking_events:
        /* istanbul ignore next */
        (cov_2aa1cit2mh().b[11][0]++, trackingEvents) ||
        /* istanbul ignore next */
        (cov_2aa1cit2mh().b[11][1]++, [])
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2aa1cit2mh().s[44]++;
    console.error('Error in GET tracking API:', error);
    /* istanbul ignore next */
    cov_2aa1cit2mh().s[45]++;
    return _server.NextResponse.json({
      error: 'Internal server error',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2aa1cit2mh().b[12][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2aa1cit2mh().b[12][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
}
async function POST(request, {
  params
}) {
  /* istanbul ignore next */
  cov_2aa1cit2mh().f[8]++;
  cov_2aa1cit2mh().s[46]++;
  try {
    // Validar autenticación
    const authError =
    /* istanbul ignore next */
    (cov_2aa1cit2mh().s[47]++, await validateAdminAuth(request));
    /* istanbul ignore next */
    cov_2aa1cit2mh().s[48]++;
    if (authError) {
      /* istanbul ignore next */
      cov_2aa1cit2mh().b[13][0]++;
      cov_2aa1cit2mh().s[49]++;
      return authError;
    } else
    /* istanbul ignore next */
    {
      cov_2aa1cit2mh().b[13][1]++;
    }
    // Validar ID del envío
    const shipmentId =
    /* istanbul ignore next */
    (cov_2aa1cit2mh().s[50]++, parseInt(params.id));
    /* istanbul ignore next */
    cov_2aa1cit2mh().s[51]++;
    if (isNaN(shipmentId)) {
      /* istanbul ignore next */
      cov_2aa1cit2mh().b[14][0]++;
      cov_2aa1cit2mh().s[52]++;
      return _server.NextResponse.json({
        error: 'Invalid shipment ID'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2aa1cit2mh().b[14][1]++;
    }
    // Parsear y validar body
    const body =
    /* istanbul ignore next */
    (cov_2aa1cit2mh().s[53]++, await request.json());
    const validatedData =
    /* istanbul ignore next */
    (cov_2aa1cit2mh().s[54]++, CreateTrackingEventSchema.parse(body));
    // Crear cliente Supabase
    const supabase =
    /* istanbul ignore next */
    (cov_2aa1cit2mh().s[55]++, (0, _server1.createClient)());
    // Validar que el envío existe
    const shipment =
    /* istanbul ignore next */
    (cov_2aa1cit2mh().s[56]++, await validateShipmentExists(supabase, shipmentId));
    /* istanbul ignore next */
    cov_2aa1cit2mh().s[57]++;
    if (!shipment) {
      /* istanbul ignore next */
      cov_2aa1cit2mh().b[15][0]++;
      cov_2aa1cit2mh().s[58]++;
      return _server.NextResponse.json({
        error: 'Shipment not found'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_2aa1cit2mh().b[15][1]++;
    }
    // Crear evento de tracking
    const {
      data: trackingEvent,
      error: trackingError
    } =
    /* istanbul ignore next */
    (cov_2aa1cit2mh().s[59]++, await supabase.from('tracking_events').insert({
      shipment_id: shipmentId,
      status: validatedData.status,
      description: validatedData.description,
      location: validatedData.location,
      latitude: validatedData.latitude,
      longitude: validatedData.longitude,
      occurred_at: validatedData.occurred_at,
      external_event_id: validatedData.external_event_id,
      raw_data: validatedData.raw_data
    }).select('*').single());
    /* istanbul ignore next */
    cov_2aa1cit2mh().s[60]++;
    if (trackingError) {
      /* istanbul ignore next */
      cov_2aa1cit2mh().b[16][0]++;
      cov_2aa1cit2mh().s[61]++;
      throw trackingError;
    } else
    /* istanbul ignore next */
    {
      cov_2aa1cit2mh().b[16][1]++;
    }
    // Actualizar estado del envío si es necesario
    const statusesToUpdate =
    /* istanbul ignore next */
    (cov_2aa1cit2mh().s[62]++, ['confirmed', 'picked_up', 'in_transit', 'out_for_delivery', 'delivered', 'exception', 'cancelled', 'returned']);
    /* istanbul ignore next */
    cov_2aa1cit2mh().s[63]++;
    if (statusesToUpdate.includes(validatedData.status)) {
      /* istanbul ignore next */
      cov_2aa1cit2mh().b[17][0]++;
      cov_2aa1cit2mh().s[64]++;
      await updateShipmentStatus(supabase, shipmentId, validatedData.status);
    } else
    /* istanbul ignore next */
    {
      cov_2aa1cit2mh().b[17][1]++;
    }
    // Si el envío fue entregado, actualizar fecha de entrega real
    cov_2aa1cit2mh().s[65]++;
    if (validatedData.status === 'delivered') {
      /* istanbul ignore next */
      cov_2aa1cit2mh().b[18][0]++;
      cov_2aa1cit2mh().s[66]++;
      await supabase.from('shipments').update({
        actual_delivery_date: validatedData.occurred_at.split('T')[0]
      }).eq('id', shipmentId);
    } else
    /* istanbul ignore next */
    {
      cov_2aa1cit2mh().b[18][1]++;
    }
    cov_2aa1cit2mh().s[67]++;
    return _server.NextResponse.json({
      data: trackingEvent,
      message: 'Tracking event created successfully'
    }, {
      status: 201
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2aa1cit2mh().s[68]++;
    console.error('Error in POST tracking API:', error);
    /* istanbul ignore next */
    cov_2aa1cit2mh().s[69]++;
    if (error instanceof _zod.z.ZodError) {
      /* istanbul ignore next */
      cov_2aa1cit2mh().b[19][0]++;
      cov_2aa1cit2mh().s[70]++;
      return _server.NextResponse.json({
        error: 'Validation error',
        details: error.errors.reduce((acc, err) => {
          /* istanbul ignore next */
          cov_2aa1cit2mh().f[9]++;
          cov_2aa1cit2mh().s[71]++;
          acc[err.path.join('.')] = [err.message];
          /* istanbul ignore next */
          cov_2aa1cit2mh().s[72]++;
          return acc;
        }, {})
      }, {
        status: 422
      });
    } else
    /* istanbul ignore next */
    {
      cov_2aa1cit2mh().b[19][1]++;
    }
    cov_2aa1cit2mh().s[73]++;
    return _server.NextResponse.json({
      error: 'Internal server error',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2aa1cit2mh().b[20][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2aa1cit2mh().b[20][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
}
async function PUT(request, {
  params
}) {
  /* istanbul ignore next */
  cov_2aa1cit2mh().f[10]++;
  cov_2aa1cit2mh().s[74]++;
  try {
    // Validar autenticación
    const authError =
    /* istanbul ignore next */
    (cov_2aa1cit2mh().s[75]++, await validateAdminAuth(request));
    /* istanbul ignore next */
    cov_2aa1cit2mh().s[76]++;
    if (authError) {
      /* istanbul ignore next */
      cov_2aa1cit2mh().b[21][0]++;
      cov_2aa1cit2mh().s[77]++;
      return authError;
    } else
    /* istanbul ignore next */
    {
      cov_2aa1cit2mh().b[21][1]++;
    }
    // Validar ID del envío
    const shipmentId =
    /* istanbul ignore next */
    (cov_2aa1cit2mh().s[78]++, parseInt(params.id));
    /* istanbul ignore next */
    cov_2aa1cit2mh().s[79]++;
    if (isNaN(shipmentId)) {
      /* istanbul ignore next */
      cov_2aa1cit2mh().b[22][0]++;
      cov_2aa1cit2mh().s[80]++;
      return _server.NextResponse.json({
        error: 'Invalid shipment ID'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2aa1cit2mh().b[22][1]++;
    }
    // Parsear body para bulk update
    const body =
    /* istanbul ignore next */
    (cov_2aa1cit2mh().s[81]++, await request.json());
    const {
      events
    } =
    /* istanbul ignore next */
    (cov_2aa1cit2mh().s[82]++, body);
    /* istanbul ignore next */
    cov_2aa1cit2mh().s[83]++;
    if (
    /* istanbul ignore next */
    (cov_2aa1cit2mh().b[24][0]++, !Array.isArray(events)) ||
    /* istanbul ignore next */
    (cov_2aa1cit2mh().b[24][1]++, events.length === 0)) {
      /* istanbul ignore next */
      cov_2aa1cit2mh().b[23][0]++;
      cov_2aa1cit2mh().s[84]++;
      return _server.NextResponse.json({
        error: 'Events array is required'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2aa1cit2mh().b[23][1]++;
    }
    // Validar cada evento
    const validatedEvents =
    /* istanbul ignore next */
    (cov_2aa1cit2mh().s[85]++, events.map(event => {
      /* istanbul ignore next */
      cov_2aa1cit2mh().f[11]++;
      cov_2aa1cit2mh().s[86]++;
      return CreateTrackingEventSchema.parse(event);
    }));
    // Crear cliente Supabase
    const supabase =
    /* istanbul ignore next */
    (cov_2aa1cit2mh().s[87]++, (0, _server1.createClient)());
    // Validar que el envío existe
    const shipment =
    /* istanbul ignore next */
    (cov_2aa1cit2mh().s[88]++, await validateShipmentExists(supabase, shipmentId));
    /* istanbul ignore next */
    cov_2aa1cit2mh().s[89]++;
    if (!shipment) {
      /* istanbul ignore next */
      cov_2aa1cit2mh().b[25][0]++;
      cov_2aa1cit2mh().s[90]++;
      return _server.NextResponse.json({
        error: 'Shipment not found'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_2aa1cit2mh().b[25][1]++;
    }
    // Insertar eventos en lote
    const eventsToInsert =
    /* istanbul ignore next */
    (cov_2aa1cit2mh().s[91]++, validatedEvents.map(event => {
      /* istanbul ignore next */
      cov_2aa1cit2mh().f[12]++;
      cov_2aa1cit2mh().s[92]++;
      return {
        shipment_id: shipmentId,
        ...event
      };
    }));
    const {
      data: insertedEvents,
      error: insertError
    } =
    /* istanbul ignore next */
    (cov_2aa1cit2mh().s[93]++, await supabase.from('tracking_events').insert(eventsToInsert).select('*'));
    /* istanbul ignore next */
    cov_2aa1cit2mh().s[94]++;
    if (insertError) {
      /* istanbul ignore next */
      cov_2aa1cit2mh().b[26][0]++;
      cov_2aa1cit2mh().s[95]++;
      throw insertError;
    } else
    /* istanbul ignore next */
    {
      cov_2aa1cit2mh().b[26][1]++;
    }
    // Actualizar estado del envío al último estado válido
    const lastValidStatus =
    /* istanbul ignore next */
    (cov_2aa1cit2mh().s[96]++, validatedEvents.filter(event => {
      /* istanbul ignore next */
      cov_2aa1cit2mh().f[13]++;
      cov_2aa1cit2mh().s[97]++;
      return ['confirmed', 'picked_up', 'in_transit', 'out_for_delivery', 'delivered', 'exception', 'cancelled', 'returned'].includes(event.status);
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_2aa1cit2mh().f[14]++;
      cov_2aa1cit2mh().s[98]++;
      return new Date(b.occurred_at).getTime() - new Date(a.occurred_at).getTime();
    })[0]);
    /* istanbul ignore next */
    cov_2aa1cit2mh().s[99]++;
    if (lastValidStatus) {
      /* istanbul ignore next */
      cov_2aa1cit2mh().b[27][0]++;
      cov_2aa1cit2mh().s[100]++;
      await updateShipmentStatus(supabase, shipmentId, lastValidStatus.status);
    } else
    /* istanbul ignore next */
    {
      cov_2aa1cit2mh().b[27][1]++;
    }
    cov_2aa1cit2mh().s[101]++;
    return _server.NextResponse.json({
      data: insertedEvents,
      message: `${
      /* istanbul ignore next */
      (cov_2aa1cit2mh().b[28][0]++, insertedEvents?.length) ||
      /* istanbul ignore next */
      (cov_2aa1cit2mh().b[28][1]++, 0)} tracking events created successfully`
    }, {
      status: 201
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2aa1cit2mh().s[102]++;
    console.error('Error in PUT tracking API:', error);
    /* istanbul ignore next */
    cov_2aa1cit2mh().s[103]++;
    if (error instanceof _zod.z.ZodError) {
      /* istanbul ignore next */
      cov_2aa1cit2mh().b[29][0]++;
      cov_2aa1cit2mh().s[104]++;
      return _server.NextResponse.json({
        error: 'Validation error',
        details: error.errors.reduce((acc, err) => {
          /* istanbul ignore next */
          cov_2aa1cit2mh().f[15]++;
          cov_2aa1cit2mh().s[105]++;
          acc[err.path.join('.')] = [err.message];
          /* istanbul ignore next */
          cov_2aa1cit2mh().s[106]++;
          return acc;
        }, {})
      }, {
        status: 422
      });
    } else
    /* istanbul ignore next */
    {
      cov_2aa1cit2mh().b[29][1]++;
    }
    cov_2aa1cit2mh().s[107]++;
    return _server.NextResponse.json({
      error: 'Internal server error',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2aa1cit2mh().b[30][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2aa1cit2mh().b[30][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJHRVQiLCJjb3ZfMmFhMWNpdDJtaCIsImYiLCJzIiwiUE9TVCIsIlBVVCIsIkNyZWF0ZVRyYWNraW5nRXZlbnRTY2hlbWEiLCJfem9kIiwieiIsIm9iamVjdCIsInN0YXR1cyIsInN0cmluZyIsIm1pbiIsImRlc2NyaXB0aW9uIiwibG9jYXRpb24iLCJvcHRpb25hbCIsImxhdGl0dWRlIiwibnVtYmVyIiwibWF4IiwibG9uZ2l0dWRlIiwib2NjdXJyZWRfYXQiLCJkYXRldGltZSIsImV4dGVybmFsX2V2ZW50X2lkIiwicmF3X2RhdGEiLCJyZWNvcmQiLCJhbnkiLCJ2YWxpZGF0ZUFkbWluQXV0aCIsInJlcXVlc3QiLCJzZXNzaW9uIiwiX2F1dGgiLCJhdXRoIiwidXNlciIsImIiLCJfc2VydmVyIiwiTmV4dFJlc3BvbnNlIiwianNvbiIsImVycm9yIiwicm9sZSIsInZhbGlkYXRlU2hpcG1lbnRFeGlzdHMiLCJzdXBhYmFzZSIsInNoaXBtZW50SWQiLCJkYXRhIiwiZnJvbSIsInNlbGVjdCIsImVxIiwic2luZ2xlIiwidXBkYXRlU2hpcG1lbnRTdGF0dXMiLCJzdGF0dXNUaW1lc3RhbXBNYXAiLCJ1cGRhdGVEYXRhIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwidXBkYXRlIiwicGFyYW1zIiwiYXV0aEVycm9yIiwicGFyc2VJbnQiLCJpZCIsImlzTmFOIiwiX3NlcnZlcjEiLCJjcmVhdGVDbGllbnQiLCJzaGlwbWVudCIsInRyYWNraW5nRXZlbnRzIiwib3JkZXIiLCJhc2NlbmRpbmciLCJ0cmFja2luZ19ldmVudHMiLCJjb25zb2xlIiwiZGV0YWlscyIsIkVycm9yIiwibWVzc2FnZSIsImJvZHkiLCJ2YWxpZGF0ZWREYXRhIiwicGFyc2UiLCJ0cmFja2luZ0V2ZW50IiwidHJhY2tpbmdFcnJvciIsImluc2VydCIsInNoaXBtZW50X2lkIiwic3RhdHVzZXNUb1VwZGF0ZSIsImluY2x1ZGVzIiwiYWN0dWFsX2RlbGl2ZXJ5X2RhdGUiLCJzcGxpdCIsIlpvZEVycm9yIiwiZXJyb3JzIiwicmVkdWNlIiwiYWNjIiwiZXJyIiwicGF0aCIsImpvaW4iLCJldmVudHMiLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiLCJ2YWxpZGF0ZWRFdmVudHMiLCJtYXAiLCJldmVudCIsImV2ZW50c1RvSW5zZXJ0IiwiaW5zZXJ0ZWRFdmVudHMiLCJpbnNlcnRFcnJvciIsImxhc3RWYWxpZFN0YXR1cyIsImZpbHRlciIsInNvcnQiLCJhIiwiZ2V0VGltZSJdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXHNyY1xcYXBwXFxhcGlcXGFkbWluXFxsb2dpc3RpY3NcXHRyYWNraW5nXFxbaWRdXFxyb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyBBUEk6IFRSQUNLSU5HIERFIEVOVsONT1MgRU5URVJQUklTRVxyXG4vLyBFbmRwb2ludHM6IEdFVC9QT1NUIC9hcGkvYWRtaW4vbG9naXN0aWNzL3RyYWNraW5nL1tpZF1cclxuLy8gRGVzY3JpcGNpw7NuOiBTaXN0ZW1hIGRlIHRyYWNraW5nIHRpZW1wbyByZWFsXHJcbi8vIEJhc2FkbyBlbjogUGF0cm9uZXMgV29vQ29tbWVyY2UgKyBTcHJlZSBDb21tZXJjZVxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcclxuaW1wb3J0IHsgYXV0aCB9IGZyb20gJ0AvYXV0aCc7XHJcbmltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gJ0AvbGliL2ludGVncmF0aW9ucy9zdXBhYmFzZS9zZXJ2ZXInO1xyXG5pbXBvcnQgeyBEYXRhYmFzZSB9IGZyb20gJ0AvdHlwZXMvZGF0YWJhc2UnO1xyXG5pbXBvcnQgeyB6IH0gZnJvbSAnem9kJztcclxuaW1wb3J0IHsgXHJcbiAgVHJhY2tpbmdFdmVudCxcclxuICBDcmVhdGVUcmFja2luZ0V2ZW50UmVxdWVzdCxcclxuICBTaGlwbWVudCBcclxufSBmcm9tICdAL3R5cGVzL2xvZ2lzdGljcyc7XHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyBTQ0hFTUFTIERFIFZBTElEQUNJw5NOIFpPRFxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuY29uc3QgQ3JlYXRlVHJhY2tpbmdFdmVudFNjaGVtYSA9IHoub2JqZWN0KHtcclxuICBzdGF0dXM6IHouc3RyaW5nKCkubWluKDEsICdTdGF0dXMgZXMgcmVxdWVyaWRvJyksXHJcbiAgZGVzY3JpcHRpb246IHouc3RyaW5nKCkubWluKDEsICdEZXNjcmlwY2nDs24gZXMgcmVxdWVyaWRhJyksXHJcbiAgbG9jYXRpb246IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcclxuICBsYXRpdHVkZTogei5udW1iZXIoKS5taW4oLTkwKS5tYXgoOTApLm9wdGlvbmFsKCksXHJcbiAgbG9uZ2l0dWRlOiB6Lm51bWJlcigpLm1pbigtMTgwKS5tYXgoMTgwKS5vcHRpb25hbCgpLFxyXG4gIG9jY3VycmVkX2F0OiB6LnN0cmluZygpLmRhdGV0aW1lKCdGZWNoYSBkZWJlIHNlciB2w6FsaWRhJyksXHJcbiAgZXh0ZXJuYWxfZXZlbnRfaWQ6IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcclxuICByYXdfZGF0YTogei5yZWNvcmQoei5hbnkoKSkub3B0aW9uYWwoKVxyXG59KTtcclxuXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vIE1JRERMRVdBUkUgREUgQVVURU5USUNBQ0nDk05cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuYXN5bmMgZnVuY3Rpb24gdmFsaWRhdGVBZG1pbkF1dGgocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcclxuICBjb25zdCBzZXNzaW9uID0gYXdhaXQgYXV0aCgpO1xyXG4gIFxyXG4gIGlmICghc2Vzc2lvbj8udXNlcikge1xyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICB7IGVycm9yOiAnVW5hdXRob3JpemVkJyB9LFxyXG4gICAgICB7IHN0YXR1czogNDAxIH1cclxuICAgICk7XHJcbiAgfVxyXG4gIFxyXG4gIGlmIChzZXNzaW9uLnVzZXIucm9sZSAhPT0gJ2FkbWluJyAmJiBzZXNzaW9uLnVzZXIucm9sZSAhPT0gJ21hbmFnZXInKSB7XHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgIHsgZXJyb3I6ICdJbnN1ZmZpY2llbnQgcGVybWlzc2lvbnMnIH0sXHJcbiAgICAgIHsgc3RhdHVzOiA0MDMgfVxyXG4gICAgKTtcclxuICB9XHJcbiAgXHJcbiAgcmV0dXJuIG51bGw7XHJcbn1cclxuXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vIEZVTkNJT05FUyBBVVhJTElBUkVTXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG5hc3luYyBmdW5jdGlvbiB2YWxpZGF0ZVNoaXBtZW50RXhpc3RzKHN1cGFiYXNlOiBSZXR1cm5UeXBlPHR5cGVvZiBjcmVhdGVDbGllbnQ8RGF0YWJhc2U+Piwgc2hpcG1lbnRJZDogbnVtYmVyKTogUHJvbWlzZTxTaGlwbWVudCB8IG51bGw+IHtcclxuICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxyXG4gICAgLmZyb20oJ3NoaXBtZW50cycpXHJcbiAgICAuc2VsZWN0KGBcclxuICAgICAgKixcclxuICAgICAgY2Fycmllcjpjb3VyaWVycyhpZCwgbmFtZSwgY29kZSwgbG9nb191cmwpLFxyXG4gICAgICBpdGVtczpzaGlwbWVudF9pdGVtcyhcclxuICAgICAgICBpZCwgcXVhbnRpdHksIHdlaWdodF9rZyxcclxuICAgICAgICBwcm9kdWN0OnByb2R1Y3RzKGlkLCBuYW1lLCBza3UsIGltYWdlX3VybClcclxuICAgICAgKVxyXG4gICAgYClcclxuICAgIC5lcSgnaWQnLCBzaGlwbWVudElkKVxyXG4gICAgLnNpbmdsZSgpO1xyXG4gIFxyXG4gIGlmIChlcnJvciB8fCAhZGF0YSkge3JldHVybiBudWxsO31cclxuICByZXR1cm4gZGF0YTtcclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gdXBkYXRlU2hpcG1lbnRTdGF0dXMoXHJcbiAgc3VwYWJhc2U6IFJldHVyblR5cGU8dHlwZW9mIGNyZWF0ZUNsaWVudDxEYXRhYmFzZT4+LCBcclxuICBzaGlwbWVudElkOiBudW1iZXIsIFxyXG4gIHN0YXR1czogc3RyaW5nXHJcbik6IFByb21pc2U8dm9pZD4ge1xyXG4gIGNvbnN0IHN0YXR1c1RpbWVzdGFtcE1hcDogUmVjb3JkPHN0cmluZywgc3RyaW5nPiA9IHtcclxuICAgICdjb25maXJtZWQnOiAnY29uZmlybWVkX2F0JyxcclxuICAgICdwaWNrZWRfdXAnOiAncGlja2VkX3VwX2F0JyxcclxuICAgICdzaGlwcGVkJzogJ3NoaXBwZWRfYXQnLFxyXG4gICAgJ2RlbGl2ZXJlZCc6ICdkZWxpdmVyZWRfYXQnLFxyXG4gICAgJ2NhbmNlbGxlZCc6ICdjYW5jZWxsZWRfYXQnXHJcbiAgfTtcclxuICBcclxuICBjb25zdCB1cGRhdGVEYXRhOiBhbnkgPSB7IHN0YXR1cyB9O1xyXG4gIFxyXG4gIC8vIEFjdHVhbGl6YXIgdGltZXN0YW1wIGNvcnJlc3BvbmRpZW50ZSBzaSBhcGxpY2FcclxuICBpZiAoc3RhdHVzVGltZXN0YW1wTWFwW3N0YXR1c10pIHtcclxuICAgIHVwZGF0ZURhdGFbc3RhdHVzVGltZXN0YW1wTWFwW3N0YXR1c11dID0gbmV3IERhdGUoKS50b0lTT1N0cmluZygpO1xyXG4gIH1cclxuICBcclxuICBjb25zdCB7IGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxyXG4gICAgLmZyb20oJ3NoaXBtZW50cycpXHJcbiAgICAudXBkYXRlKHVwZGF0ZURhdGEpXHJcbiAgICAuZXEoJ2lkJywgc2hpcG1lbnRJZCk7XHJcbiAgXHJcbiAgaWYgKGVycm9yKSB7dGhyb3cgZXJyb3I7fVxyXG59XHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyBHRVQ6IE9CVEVORVIgRVZFTlRPUyBERSBUUkFDS0lOR1xyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVChcclxuICByZXF1ZXN0OiBOZXh0UmVxdWVzdCxcclxuICB7IHBhcmFtcyB9OiB7IHBhcmFtczogeyBpZDogc3RyaW5nIH0gfVxyXG4pIHtcclxuICB0cnkge1xyXG4gICAgLy8gVmFsaWRhciBhdXRlbnRpY2FjacOzblxyXG4gICAgY29uc3QgYXV0aEVycm9yID0gYXdhaXQgdmFsaWRhdGVBZG1pbkF1dGgocmVxdWVzdCk7XHJcbiAgICBpZiAoYXV0aEVycm9yKSB7cmV0dXJuIGF1dGhFcnJvcjt9XHJcbiAgICBcclxuICAgIC8vIFZhbGlkYXIgSUQgZGVsIGVudsOtb1xyXG4gICAgY29uc3Qgc2hpcG1lbnRJZCA9IHBhcnNlSW50KHBhcmFtcy5pZCk7XHJcbiAgICBpZiAoaXNOYU4oc2hpcG1lbnRJZCkpIHtcclxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICAgIHsgZXJyb3I6ICdJbnZhbGlkIHNoaXBtZW50IElEJyB9LFxyXG4gICAgICAgIHsgc3RhdHVzOiA0MDAgfVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvLyBDcmVhciBjbGllbnRlIFN1cGFiYXNlXHJcbiAgICBjb25zdCBzdXBhYmFzZSA9IGNyZWF0ZUNsaWVudCgpO1xyXG4gICAgXHJcbiAgICAvLyBWYWxpZGFyIHF1ZSBlbCBlbnbDrW8gZXhpc3RlXHJcbiAgICBjb25zdCBzaGlwbWVudCA9IGF3YWl0IHZhbGlkYXRlU2hpcG1lbnRFeGlzdHMoc3VwYWJhc2UsIHNoaXBtZW50SWQpO1xyXG4gICAgaWYgKCFzaGlwbWVudCkge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgICAgeyBlcnJvcjogJ1NoaXBtZW50IG5vdCBmb3VuZCcgfSxcclxuICAgICAgICB7IHN0YXR1czogNDA0IH1cclxuICAgICAgKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLy8gT2J0ZW5lciBldmVudG9zIGRlIHRyYWNraW5nXHJcbiAgICBjb25zdCB7IGRhdGE6IHRyYWNraW5nRXZlbnRzLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcclxuICAgICAgLmZyb20oJ3RyYWNraW5nX2V2ZW50cycpXHJcbiAgICAgIC5zZWxlY3QoJyonKVxyXG4gICAgICAuZXEoJ3NoaXBtZW50X2lkJywgc2hpcG1lbnRJZClcclxuICAgICAgLm9yZGVyKCdvY2N1cnJlZF9hdCcsIHsgYXNjZW5kaW5nOiBmYWxzZSB9KTtcclxuICAgIFxyXG4gICAgaWYgKGVycm9yKSB7dGhyb3cgZXJyb3I7fVxyXG4gICAgXHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICBkYXRhOiB7XHJcbiAgICAgICAgc2hpcG1lbnQsXHJcbiAgICAgICAgdHJhY2tpbmdfZXZlbnRzOiB0cmFja2luZ0V2ZW50cyB8fCBbXVxyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIFxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiBHRVQgdHJhY2tpbmcgQVBJOicsIGVycm9yKTtcclxuICAgIFxyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICB7IFxyXG4gICAgICAgIGVycm9yOiAnSW50ZXJuYWwgc2VydmVyIGVycm9yJyxcclxuICAgICAgICBkZXRhaWxzOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJ1xyXG4gICAgICB9LFxyXG4gICAgICB7IHN0YXR1czogNTAwIH1cclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyBQT1NUOiBDUkVBUiBFVkVOVE8gREUgVFJBQ0tJTkdcclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKFxyXG4gIHJlcXVlc3Q6IE5leHRSZXF1ZXN0LFxyXG4gIHsgcGFyYW1zIH06IHsgcGFyYW1zOiB7IGlkOiBzdHJpbmcgfSB9XHJcbikge1xyXG4gIHRyeSB7XHJcbiAgICAvLyBWYWxpZGFyIGF1dGVudGljYWNpw7NuXHJcbiAgICBjb25zdCBhdXRoRXJyb3IgPSBhd2FpdCB2YWxpZGF0ZUFkbWluQXV0aChyZXF1ZXN0KTtcclxuICAgIGlmIChhdXRoRXJyb3IpIHtyZXR1cm4gYXV0aEVycm9yO31cclxuICAgIFxyXG4gICAgLy8gVmFsaWRhciBJRCBkZWwgZW52w61vXHJcbiAgICBjb25zdCBzaGlwbWVudElkID0gcGFyc2VJbnQocGFyYW1zLmlkKTtcclxuICAgIGlmIChpc05hTihzaGlwbWVudElkKSkge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgICAgeyBlcnJvcjogJ0ludmFsaWQgc2hpcG1lbnQgSUQnIH0sXHJcbiAgICAgICAgeyBzdGF0dXM6IDQwMCB9XHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vIFBhcnNlYXIgeSB2YWxpZGFyIGJvZHlcclxuICAgIGNvbnN0IGJvZHkgPSBhd2FpdCByZXF1ZXN0Lmpzb24oKTtcclxuICAgIGNvbnN0IHZhbGlkYXRlZERhdGEgPSBDcmVhdGVUcmFja2luZ0V2ZW50U2NoZW1hLnBhcnNlKGJvZHkpO1xyXG4gICAgXHJcbiAgICAvLyBDcmVhciBjbGllbnRlIFN1cGFiYXNlXHJcbiAgICBjb25zdCBzdXBhYmFzZSA9IGNyZWF0ZUNsaWVudCgpO1xyXG4gICAgXHJcbiAgICAvLyBWYWxpZGFyIHF1ZSBlbCBlbnbDrW8gZXhpc3RlXHJcbiAgICBjb25zdCBzaGlwbWVudCA9IGF3YWl0IHZhbGlkYXRlU2hpcG1lbnRFeGlzdHMoc3VwYWJhc2UsIHNoaXBtZW50SWQpO1xyXG4gICAgaWYgKCFzaGlwbWVudCkge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgICAgeyBlcnJvcjogJ1NoaXBtZW50IG5vdCBmb3VuZCcgfSxcclxuICAgICAgICB7IHN0YXR1czogNDA0IH1cclxuICAgICAgKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLy8gQ3JlYXIgZXZlbnRvIGRlIHRyYWNraW5nXHJcbiAgICBjb25zdCB7IGRhdGE6IHRyYWNraW5nRXZlbnQsIGVycm9yOiB0cmFja2luZ0Vycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxyXG4gICAgICAuZnJvbSgndHJhY2tpbmdfZXZlbnRzJylcclxuICAgICAgLmluc2VydCh7XHJcbiAgICAgICAgc2hpcG1lbnRfaWQ6IHNoaXBtZW50SWQsXHJcbiAgICAgICAgc3RhdHVzOiB2YWxpZGF0ZWREYXRhLnN0YXR1cyxcclxuICAgICAgICBkZXNjcmlwdGlvbjogdmFsaWRhdGVkRGF0YS5kZXNjcmlwdGlvbixcclxuICAgICAgICBsb2NhdGlvbjogdmFsaWRhdGVkRGF0YS5sb2NhdGlvbixcclxuICAgICAgICBsYXRpdHVkZTogdmFsaWRhdGVkRGF0YS5sYXRpdHVkZSxcclxuICAgICAgICBsb25naXR1ZGU6IHZhbGlkYXRlZERhdGEubG9uZ2l0dWRlLFxyXG4gICAgICAgIG9jY3VycmVkX2F0OiB2YWxpZGF0ZWREYXRhLm9jY3VycmVkX2F0LFxyXG4gICAgICAgIGV4dGVybmFsX2V2ZW50X2lkOiB2YWxpZGF0ZWREYXRhLmV4dGVybmFsX2V2ZW50X2lkLFxyXG4gICAgICAgIHJhd19kYXRhOiB2YWxpZGF0ZWREYXRhLnJhd19kYXRhXHJcbiAgICAgIH0pXHJcbiAgICAgIC5zZWxlY3QoJyonKVxyXG4gICAgICAuc2luZ2xlKCk7XHJcbiAgICBcclxuICAgIGlmICh0cmFja2luZ0Vycm9yKSB7dGhyb3cgdHJhY2tpbmdFcnJvcjt9XHJcbiAgICBcclxuICAgIC8vIEFjdHVhbGl6YXIgZXN0YWRvIGRlbCBlbnbDrW8gc2kgZXMgbmVjZXNhcmlvXHJcbiAgICBjb25zdCBzdGF0dXNlc1RvVXBkYXRlID0gW1xyXG4gICAgICAnY29uZmlybWVkJywgJ3BpY2tlZF91cCcsICdpbl90cmFuc2l0JywgJ291dF9mb3JfZGVsaXZlcnknLCBcclxuICAgICAgJ2RlbGl2ZXJlZCcsICdleGNlcHRpb24nLCAnY2FuY2VsbGVkJywgJ3JldHVybmVkJ1xyXG4gICAgXTtcclxuICAgIFxyXG4gICAgaWYgKHN0YXR1c2VzVG9VcGRhdGUuaW5jbHVkZXModmFsaWRhdGVkRGF0YS5zdGF0dXMpKSB7XHJcbiAgICAgIGF3YWl0IHVwZGF0ZVNoaXBtZW50U3RhdHVzKHN1cGFiYXNlLCBzaGlwbWVudElkLCB2YWxpZGF0ZWREYXRhLnN0YXR1cyk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vIFNpIGVsIGVudsOtbyBmdWUgZW50cmVnYWRvLCBhY3R1YWxpemFyIGZlY2hhIGRlIGVudHJlZ2EgcmVhbFxyXG4gICAgaWYgKHZhbGlkYXRlZERhdGEuc3RhdHVzID09PSAnZGVsaXZlcmVkJykge1xyXG4gICAgICBhd2FpdCBzdXBhYmFzZVxyXG4gICAgICAgIC5mcm9tKCdzaGlwbWVudHMnKVxyXG4gICAgICAgIC51cGRhdGUoeyBcclxuICAgICAgICAgIGFjdHVhbF9kZWxpdmVyeV9kYXRlOiB2YWxpZGF0ZWREYXRhLm9jY3VycmVkX2F0LnNwbGl0KCdUJylbMF1cclxuICAgICAgICB9KVxyXG4gICAgICAgIC5lcSgnaWQnLCBzaGlwbWVudElkKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICB7IFxyXG4gICAgICAgIGRhdGE6IHRyYWNraW5nRXZlbnQsXHJcbiAgICAgICAgbWVzc2FnZTogJ1RyYWNraW5nIGV2ZW50IGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5J1xyXG4gICAgICB9LFxyXG4gICAgICB7IHN0YXR1czogMjAxIH1cclxuICAgICk7XHJcbiAgICBcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gUE9TVCB0cmFja2luZyBBUEk6JywgZXJyb3IpO1xyXG4gICAgXHJcbiAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiB6LlpvZEVycm9yKSB7XHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcclxuICAgICAgICB7IFxyXG4gICAgICAgICAgZXJyb3I6ICdWYWxpZGF0aW9uIGVycm9yJyxcclxuICAgICAgICAgIGRldGFpbHM6IGVycm9yLmVycm9ycy5yZWR1Y2UoKGFjYywgZXJyKSA9PiB7XHJcbiAgICAgICAgICAgIGFjY1tlcnIucGF0aC5qb2luKCcuJyldID0gW2Vyci5tZXNzYWdlXTtcclxuICAgICAgICAgICAgcmV0dXJuIGFjYztcclxuICAgICAgICAgIH0sIHt9IGFzIFJlY29yZDxzdHJpbmcsIHN0cmluZ1tdPilcclxuICAgICAgICB9LFxyXG4gICAgICAgIHsgc3RhdHVzOiA0MjIgfVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgIHsgXHJcbiAgICAgICAgZXJyb3I6ICdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InLFxyXG4gICAgICAgIGRldGFpbHM6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3InXHJcbiAgICAgIH0sXHJcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vIFBVVDogQUNUVUFMSVpBUiBNw5pMVElQTEVTIEVWRU5UT1MgKEJVTEsgVVBEQVRFKVxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBVVChcclxuICByZXF1ZXN0OiBOZXh0UmVxdWVzdCxcclxuICB7IHBhcmFtcyB9OiB7IHBhcmFtczogeyBpZDogc3RyaW5nIH0gfVxyXG4pIHtcclxuICB0cnkge1xyXG4gICAgLy8gVmFsaWRhciBhdXRlbnRpY2FjacOzblxyXG4gICAgY29uc3QgYXV0aEVycm9yID0gYXdhaXQgdmFsaWRhdGVBZG1pbkF1dGgocmVxdWVzdCk7XHJcbiAgICBpZiAoYXV0aEVycm9yKSB7cmV0dXJuIGF1dGhFcnJvcjt9XHJcbiAgICBcclxuICAgIC8vIFZhbGlkYXIgSUQgZGVsIGVudsOtb1xyXG4gICAgY29uc3Qgc2hpcG1lbnRJZCA9IHBhcnNlSW50KHBhcmFtcy5pZCk7XHJcbiAgICBpZiAoaXNOYU4oc2hpcG1lbnRJZCkpIHtcclxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICAgIHsgZXJyb3I6ICdJbnZhbGlkIHNoaXBtZW50IElEJyB9LFxyXG4gICAgICAgIHsgc3RhdHVzOiA0MDAgfVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvLyBQYXJzZWFyIGJvZHkgcGFyYSBidWxrIHVwZGF0ZVxyXG4gICAgY29uc3QgYm9keSA9IGF3YWl0IHJlcXVlc3QuanNvbigpO1xyXG4gICAgY29uc3QgeyBldmVudHMgfSA9IGJvZHk7XHJcbiAgICBcclxuICAgIGlmICghQXJyYXkuaXNBcnJheShldmVudHMpIHx8IGV2ZW50cy5sZW5ndGggPT09IDApIHtcclxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICAgIHsgZXJyb3I6ICdFdmVudHMgYXJyYXkgaXMgcmVxdWlyZWQnIH0sXHJcbiAgICAgICAgeyBzdGF0dXM6IDQwMCB9XHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vIFZhbGlkYXIgY2FkYSBldmVudG9cclxuICAgIGNvbnN0IHZhbGlkYXRlZEV2ZW50cyA9IGV2ZW50cy5tYXAoZXZlbnQgPT4gXHJcbiAgICAgIENyZWF0ZVRyYWNraW5nRXZlbnRTY2hlbWEucGFyc2UoZXZlbnQpXHJcbiAgICApO1xyXG4gICAgXHJcbiAgICAvLyBDcmVhciBjbGllbnRlIFN1cGFiYXNlXHJcbiAgICBjb25zdCBzdXBhYmFzZSA9IGNyZWF0ZUNsaWVudCgpO1xyXG4gICAgXHJcbiAgICAvLyBWYWxpZGFyIHF1ZSBlbCBlbnbDrW8gZXhpc3RlXHJcbiAgICBjb25zdCBzaGlwbWVudCA9IGF3YWl0IHZhbGlkYXRlU2hpcG1lbnRFeGlzdHMoc3VwYWJhc2UsIHNoaXBtZW50SWQpO1xyXG4gICAgaWYgKCFzaGlwbWVudCkge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgICAgeyBlcnJvcjogJ1NoaXBtZW50IG5vdCBmb3VuZCcgfSxcclxuICAgICAgICB7IHN0YXR1czogNDA0IH1cclxuICAgICAgKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLy8gSW5zZXJ0YXIgZXZlbnRvcyBlbiBsb3RlXHJcbiAgICBjb25zdCBldmVudHNUb0luc2VydCA9IHZhbGlkYXRlZEV2ZW50cy5tYXAoZXZlbnQgPT4gKHtcclxuICAgICAgc2hpcG1lbnRfaWQ6IHNoaXBtZW50SWQsXHJcbiAgICAgIC4uLmV2ZW50XHJcbiAgICB9KSk7XHJcbiAgICBcclxuICAgIGNvbnN0IHsgZGF0YTogaW5zZXJ0ZWRFdmVudHMsIGVycm9yOiBpbnNlcnRFcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcclxuICAgICAgLmZyb20oJ3RyYWNraW5nX2V2ZW50cycpXHJcbiAgICAgIC5pbnNlcnQoZXZlbnRzVG9JbnNlcnQpXHJcbiAgICAgIC5zZWxlY3QoJyonKTtcclxuICAgIFxyXG4gICAgaWYgKGluc2VydEVycm9yKSB7dGhyb3cgaW5zZXJ0RXJyb3I7fVxyXG4gICAgXHJcbiAgICAvLyBBY3R1YWxpemFyIGVzdGFkbyBkZWwgZW52w61vIGFsIMO6bHRpbW8gZXN0YWRvIHbDoWxpZG9cclxuICAgIGNvbnN0IGxhc3RWYWxpZFN0YXR1cyA9IHZhbGlkYXRlZEV2ZW50c1xyXG4gICAgICAuZmlsdGVyKGV2ZW50ID0+IFtcclxuICAgICAgICAnY29uZmlybWVkJywgJ3BpY2tlZF91cCcsICdpbl90cmFuc2l0JywgJ291dF9mb3JfZGVsaXZlcnknLCBcclxuICAgICAgICAnZGVsaXZlcmVkJywgJ2V4Y2VwdGlvbicsICdjYW5jZWxsZWQnLCAncmV0dXJuZWQnXHJcbiAgICAgIF0uaW5jbHVkZXMoZXZlbnQuc3RhdHVzKSlcclxuICAgICAgLnNvcnQoKGEsIGIpID0+IG5ldyBEYXRlKGIub2NjdXJyZWRfYXQpLmdldFRpbWUoKSAtIG5ldyBEYXRlKGEub2NjdXJyZWRfYXQpLmdldFRpbWUoKSlbMF07XHJcbiAgICBcclxuICAgIGlmIChsYXN0VmFsaWRTdGF0dXMpIHtcclxuICAgICAgYXdhaXQgdXBkYXRlU2hpcG1lbnRTdGF0dXMoc3VwYWJhc2UsIHNoaXBtZW50SWQsIGxhc3RWYWxpZFN0YXR1cy5zdGF0dXMpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgIHsgXHJcbiAgICAgICAgZGF0YTogaW5zZXJ0ZWRFdmVudHMsXHJcbiAgICAgICAgbWVzc2FnZTogYCR7aW5zZXJ0ZWRFdmVudHM/Lmxlbmd0aCB8fCAwfSB0cmFja2luZyBldmVudHMgY3JlYXRlZCBzdWNjZXNzZnVsbHlgXHJcbiAgICAgIH0sXHJcbiAgICAgIHsgc3RhdHVzOiAyMDEgfVxyXG4gICAgKTtcclxuICAgIFxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiBQVVQgdHJhY2tpbmcgQVBJOicsIGVycm9yKTtcclxuICAgIFxyXG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2Ygei5ab2RFcnJvcikge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgICAgeyBcclxuICAgICAgICAgIGVycm9yOiAnVmFsaWRhdGlvbiBlcnJvcicsXHJcbiAgICAgICAgICBkZXRhaWxzOiBlcnJvci5lcnJvcnMucmVkdWNlKChhY2MsIGVycikgPT4ge1xyXG4gICAgICAgICAgICBhY2NbZXJyLnBhdGguam9pbignLicpXSA9IFtlcnIubWVzc2FnZV07XHJcbiAgICAgICAgICAgIHJldHVybiBhY2M7XHJcbiAgICAgICAgICB9LCB7fSBhcyBSZWNvcmQ8c3RyaW5nLCBzdHJpbmdbXT4pXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7IHN0YXR1czogNDIyIH1cclxuICAgICAgKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICB7IFxyXG4gICAgICAgIGVycm9yOiAnSW50ZXJuYWwgc2VydmVyIGVycm9yJyxcclxuICAgICAgICBkZXRhaWxzOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJ1xyXG4gICAgICB9LFxyXG4gICAgICB7IHN0YXR1czogNTAwIH1cclxuICAgICk7XHJcbiAgfVxyXG59XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7TUF5R3NC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