3820aadaad5e2d21afbb5b946b48c204
// ===================================
// PINTEYA E-COMMERCE - HOOK PARA DASHBOARD DE USUARIO
// ===================================
"use strict";

/* istanbul ignore next */
function cov_1sfys1yh0i() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useUserDashboard.ts";
  var hash = "f4d23ec380e393d026a9539f8a9339cff22fd7ed";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useUserDashboard.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 13,
          column: 3
        }
      },
      "2": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 32
        }
      },
      "3": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 31
        }
      },
      "4": {
        start: {
          line: 16,
          column: 38
        },
        end: {
          line: 16,
          column: 64
        }
      },
      "5": {
        start: {
          line: 17,
          column: 34
        },
        end: {
          line: 17,
          column: 60
        }
      },
      "6": {
        start: {
          line: 18,
          column: 30
        },
        end: {
          line: 18,
          column: 56
        }
      },
      "7": {
        start: {
          line: 20,
          column: 27
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "8": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 39,
          column: 9
        }
      },
      "9": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 29
        }
      },
      "10": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 27
        }
      },
      "11": {
        start: {
          line: 24,
          column: 29
        },
        end: {
          line: 24,
          column: 63
        }
      },
      "12": {
        start: {
          line: 25,
          column: 25
        },
        end: {
          line: 25,
          column: 46
        }
      },
      "13": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 28,
          column: 13
        }
      },
      "14": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 86
        }
      },
      "15": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 33,
          column: 13
        }
      },
      "16": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 45
        }
      },
      "17": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 72
        }
      },
      "18": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 61
        }
      },
      "19": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 79
        }
      },
      "20": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 30
        }
      },
      "21": {
        start: {
          line: 42,
          column: 29
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "22": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 25
        }
      },
      "23": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 48,
          column: 11
        }
      },
      "24": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 25
        }
      },
      "25": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 54,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 10
          }
        },
        loc: {
          start: {
            line: 10,
            column: 20
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "useUserDashboard",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 25
          }
        },
        loc: {
          start: {
            line: 15,
            column: 28
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 27
          },
          end: {
            line: 20,
            column: 28
          }
        },
        loc: {
          start: {
            line: 20,
            column: 37
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 42,
            column: 29
          },
          end: {
            line: 42,
            column: 30
          }
        },
        loc: {
          start: {
            line: 42,
            column: 33
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 46,
            column: 26
          },
          end: {
            line: 46,
            column: 27
          }
        },
        loc: {
          start: {
            line: 46,
            column: 30
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 46
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 28,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 28,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 32
          },
          end: {
            line: 27,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 32
          },
          end: {
            line: 27,
            column: 42
          }
        }, {
          start: {
            line: 27,
            column: 46
          },
          end: {
            line: 27,
            column: 84
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 33,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 33,
            column: 13
          }
        }, {
          start: {
            line: 31,
            column: 19
          },
          end: {
            line: 33,
            column: 13
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 21
          },
          end: {
            line: 36,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 44
          },
          end: {
            line: 36,
            column: 55
          }
        }, {
          start: {
            line: 36,
            column: 58
          },
          end: {
            line: 36,
            column: 77
          }
        }],
        line: 36
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useUserDashboard.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - HOOK PARA DASHBOARD DE USUARIO\r\n// ===================================\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { UserProfile } from './useUserProfile';\r\nimport { UserAddress } from './useUserAddresses';\r\nimport { UserOrder } from './useUserOrders';\r\n\r\nexport interface DashboardStatistics {\r\n  total_orders: number;\r\n  total_spent: number;\r\n  pending_orders: number;\r\n  completed_orders: number;\r\n  shipped_orders: number;\r\n  total_addresses: number;\r\n}\r\n\r\nexport interface MonthlySpending {\r\n  month: string;\r\n  amount: number;\r\n}\r\n\r\nexport interface TopProduct {\r\n  product: {\r\n    name: string;\r\n    images: any;\r\n    price: string;\r\n  };\r\n  total_quantity: number;\r\n  total_orders: number;\r\n}\r\n\r\nexport interface DashboardData {\r\n  user: UserProfile;\r\n  statistics: DashboardStatistics;\r\n  recent_orders: UserOrder[];\r\n  monthly_spending: MonthlySpending[];\r\n  top_products: TopProduct[];\r\n  addresses: UserAddress[];\r\n}\r\n\r\nexport interface UseUserDashboardReturn {\r\n  dashboard: DashboardData | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  refreshDashboard: () => void;\r\n}\r\n\r\nexport function useUserDashboard(): UseUserDashboardReturn {\r\n  const [dashboard, setDashboard] = useState<DashboardData | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Funci\xF3n para obtener los datos del dashboard\r\n  const fetchDashboard = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const response = await fetch('/api/user/dashboard');\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Error al obtener datos del dashboard');\r\n      }\r\n\r\n      if (data.success) {\r\n        setDashboard(data.dashboard);\r\n      } else {\r\n        throw new Error('Error al obtener datos del dashboard');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error en useUserDashboard:', err);\r\n      setError(err instanceof Error ? err.message : 'Error desconocido');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Funci\xF3n para refrescar el dashboard\r\n  const refreshDashboard = () => {\r\n    fetchDashboard();\r\n  };\r\n\r\n  // Cargar dashboard al montar el componente\r\n  useEffect(() => {\r\n    fetchDashboard();\r\n  }, []);\r\n\r\n  return {\r\n    dashboard,\r\n    loading,\r\n    error,\r\n    refreshDashboard,\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useUserDashboard", "dashboard", "setDashboard", "useState", "loading", "setLoading", "error", "setError", "fetchDashboard", "response", "fetch", "data", "json", "ok", "Error", "success", "err", "console", "message", "refreshDashboard", "useEffect"],
      mappings: "AAAA,sCAAsC;AACtC,sDAAsD;AACtD,sCAAsC;;;;;+BA+CtBA;;;eAAAA;;;uBA7CoB;AA6C7B,SAASA;IACd,MAAM,CAACC,WAAWC,aAAa,GAAGC,IAAAA,eAAQ,EAAuB;IACjE,MAAM,CAACC,SAASC,WAAW,GAAGF,IAAAA,eAAQ,EAAC;IACvC,MAAM,CAACG,OAAOC,SAAS,GAAGJ,IAAAA,eAAQ,EAAgB;IAElD,+CAA+C;IAC/C,MAAMK,iBAAiB;QACrB,IAAI;YACFH,WAAW;YACXE,SAAS;YAET,MAAME,WAAW,MAAMC,MAAM;YAC7B,MAAMC,OAAO,MAAMF,SAASG,IAAI;YAEhC,IAAI,CAACH,SAASI,EAAE,EAAE;gBAChB,MAAM,IAAIC,MAAMH,KAAKL,KAAK,IAAI;YAChC;YAEA,IAAIK,KAAKI,OAAO,EAAE;gBAChBb,aAAaS,KAAKV,SAAS;YAC7B,OAAO;gBACL,MAAM,IAAIa,MAAM;YAClB;QACF,EAAE,OAAOE,KAAK;YACZC,QAAQX,KAAK,CAAC,8BAA8BU;YAC5CT,SAASS,eAAeF,QAAQE,IAAIE,OAAO,GAAG;QAChD,SAAU;YACRb,WAAW;QACb;IACF;IAEA,sCAAsC;IACtC,MAAMc,mBAAmB;QACvBX;IACF;IAEA,2CAA2C;IAC3CY,IAAAA,gBAAS,EAAC;QACRZ;IACF,GAAG,EAAE;IAEL,OAAO;QACLP;QACAG;QACAE;QACAa;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f4d23ec380e393d026a9539f8a9339cff22fd7ed"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1sfys1yh0i = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1sfys1yh0i();
cov_1sfys1yh0i().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1sfys1yh0i().s[1]++;
Object.defineProperty(exports, "useUserDashboard", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1sfys1yh0i().f[0]++;
    cov_1sfys1yh0i().s[2]++;
    return useUserDashboard;
  }
});
const _react =
/* istanbul ignore next */
(cov_1sfys1yh0i().s[3]++, require("react"));
function useUserDashboard() {
  /* istanbul ignore next */
  cov_1sfys1yh0i().f[1]++;
  const [dashboard, setDashboard] =
  /* istanbul ignore next */
  (cov_1sfys1yh0i().s[4]++, (0, _react.useState)(null));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_1sfys1yh0i().s[5]++, (0, _react.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1sfys1yh0i().s[6]++, (0, _react.useState)(null));
  // Función para obtener los datos del dashboard
  /* istanbul ignore next */
  cov_1sfys1yh0i().s[7]++;
  const fetchDashboard = async () => {
    /* istanbul ignore next */
    cov_1sfys1yh0i().f[2]++;
    cov_1sfys1yh0i().s[8]++;
    try {
      /* istanbul ignore next */
      cov_1sfys1yh0i().s[9]++;
      setLoading(true);
      /* istanbul ignore next */
      cov_1sfys1yh0i().s[10]++;
      setError(null);
      const response =
      /* istanbul ignore next */
      (cov_1sfys1yh0i().s[11]++, await fetch('/api/user/dashboard'));
      const data =
      /* istanbul ignore next */
      (cov_1sfys1yh0i().s[12]++, await response.json());
      /* istanbul ignore next */
      cov_1sfys1yh0i().s[13]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1sfys1yh0i().b[0][0]++;
        cov_1sfys1yh0i().s[14]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_1sfys1yh0i().b[1][0]++, data.error) ||
        /* istanbul ignore next */
        (cov_1sfys1yh0i().b[1][1]++, 'Error al obtener datos del dashboard'));
      } else
      /* istanbul ignore next */
      {
        cov_1sfys1yh0i().b[0][1]++;
      }
      cov_1sfys1yh0i().s[15]++;
      if (data.success) {
        /* istanbul ignore next */
        cov_1sfys1yh0i().b[2][0]++;
        cov_1sfys1yh0i().s[16]++;
        setDashboard(data.dashboard);
      } else {
        /* istanbul ignore next */
        cov_1sfys1yh0i().b[2][1]++;
        cov_1sfys1yh0i().s[17]++;
        throw new Error('Error al obtener datos del dashboard');
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_1sfys1yh0i().s[18]++;
      console.error('Error en useUserDashboard:', err);
      /* istanbul ignore next */
      cov_1sfys1yh0i().s[19]++;
      setError(err instanceof Error ?
      /* istanbul ignore next */
      (cov_1sfys1yh0i().b[3][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1sfys1yh0i().b[3][1]++, 'Error desconocido'));
    } finally {
      /* istanbul ignore next */
      cov_1sfys1yh0i().s[20]++;
      setLoading(false);
    }
  };
  // Función para refrescar el dashboard
  /* istanbul ignore next */
  cov_1sfys1yh0i().s[21]++;
  const refreshDashboard = () => {
    /* istanbul ignore next */
    cov_1sfys1yh0i().f[3]++;
    cov_1sfys1yh0i().s[22]++;
    fetchDashboard();
  };
  // Cargar dashboard al montar el componente
  /* istanbul ignore next */
  cov_1sfys1yh0i().s[23]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1sfys1yh0i().f[4]++;
    cov_1sfys1yh0i().s[24]++;
    fetchDashboard();
  }, []);
  /* istanbul ignore next */
  cov_1sfys1yh0i().s[25]++;
  return {
    dashboard,
    loading,
    error,
    refreshDashboard
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXNmeXMxeWgwaSIsImFjdHVhbENvdmVyYWdlIiwicyIsInVzZVVzZXJEYXNoYm9hcmQiLCJmIiwiZGFzaGJvYXJkIiwic2V0RGFzaGJvYXJkIiwiX3JlYWN0IiwidXNlU3RhdGUiLCJsb2FkaW5nIiwic2V0TG9hZGluZyIsImVycm9yIiwic2V0RXJyb3IiLCJmZXRjaERhc2hib2FyZCIsInJlc3BvbnNlIiwiZmV0Y2giLCJkYXRhIiwianNvbiIsIm9rIiwiYiIsIkVycm9yIiwic3VjY2VzcyIsImVyciIsImNvbnNvbGUiLCJtZXNzYWdlIiwicmVmcmVzaERhc2hib2FyZCIsInVzZUVmZmVjdCJdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXHNyY1xcaG9va3NcXHVzZVVzZXJEYXNoYm9hcmQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gUElOVEVZQSBFLUNPTU1FUkNFIC0gSE9PSyBQQVJBIERBU0hCT0FSRCBERSBVU1VBUklPXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG5pbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBVc2VyUHJvZmlsZSB9IGZyb20gJy4vdXNlVXNlclByb2ZpbGUnO1xyXG5pbXBvcnQgeyBVc2VyQWRkcmVzcyB9IGZyb20gJy4vdXNlVXNlckFkZHJlc3Nlcyc7XHJcbmltcG9ydCB7IFVzZXJPcmRlciB9IGZyb20gJy4vdXNlVXNlck9yZGVycyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIERhc2hib2FyZFN0YXRpc3RpY3Mge1xyXG4gIHRvdGFsX29yZGVyczogbnVtYmVyO1xyXG4gIHRvdGFsX3NwZW50OiBudW1iZXI7XHJcbiAgcGVuZGluZ19vcmRlcnM6IG51bWJlcjtcclxuICBjb21wbGV0ZWRfb3JkZXJzOiBudW1iZXI7XHJcbiAgc2hpcHBlZF9vcmRlcnM6IG51bWJlcjtcclxuICB0b3RhbF9hZGRyZXNzZXM6IG51bWJlcjtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBNb250aGx5U3BlbmRpbmcge1xyXG4gIG1vbnRoOiBzdHJpbmc7XHJcbiAgYW1vdW50OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgVG9wUHJvZHVjdCB7XHJcbiAgcHJvZHVjdDoge1xyXG4gICAgbmFtZTogc3RyaW5nO1xyXG4gICAgaW1hZ2VzOiBhbnk7XHJcbiAgICBwcmljZTogc3RyaW5nO1xyXG4gIH07XHJcbiAgdG90YWxfcXVhbnRpdHk6IG51bWJlcjtcclxuICB0b3RhbF9vcmRlcnM6IG51bWJlcjtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBEYXNoYm9hcmREYXRhIHtcclxuICB1c2VyOiBVc2VyUHJvZmlsZTtcclxuICBzdGF0aXN0aWNzOiBEYXNoYm9hcmRTdGF0aXN0aWNzO1xyXG4gIHJlY2VudF9vcmRlcnM6IFVzZXJPcmRlcltdO1xyXG4gIG1vbnRobHlfc3BlbmRpbmc6IE1vbnRobHlTcGVuZGluZ1tdO1xyXG4gIHRvcF9wcm9kdWN0czogVG9wUHJvZHVjdFtdO1xyXG4gIGFkZHJlc3NlczogVXNlckFkZHJlc3NbXTtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBVc2VVc2VyRGFzaGJvYXJkUmV0dXJuIHtcclxuICBkYXNoYm9hcmQ6IERhc2hib2FyZERhdGEgfCBudWxsO1xyXG4gIGxvYWRpbmc6IGJvb2xlYW47XHJcbiAgZXJyb3I6IHN0cmluZyB8IG51bGw7XHJcbiAgcmVmcmVzaERhc2hib2FyZDogKCkgPT4gdm9pZDtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHVzZVVzZXJEYXNoYm9hcmQoKTogVXNlVXNlckRhc2hib2FyZFJldHVybiB7XHJcbiAgY29uc3QgW2Rhc2hib2FyZCwgc2V0RGFzaGJvYXJkXSA9IHVzZVN0YXRlPERhc2hib2FyZERhdGEgfCBudWxsPihudWxsKTtcclxuICBjb25zdCBbbG9hZGluZywgc2V0TG9hZGluZ10gPSB1c2VTdGF0ZSh0cnVlKTtcclxuICBjb25zdCBbZXJyb3IsIHNldEVycm9yXSA9IHVzZVN0YXRlPHN0cmluZyB8IG51bGw+KG51bGwpO1xyXG5cclxuICAvLyBGdW5jacOzbiBwYXJhIG9idGVuZXIgbG9zIGRhdG9zIGRlbCBkYXNoYm9hcmRcclxuICBjb25zdCBmZXRjaERhc2hib2FyZCA9IGFzeW5jICgpID0+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIHNldExvYWRpbmcodHJ1ZSk7XHJcbiAgICAgIHNldEVycm9yKG51bGwpO1xyXG5cclxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS91c2VyL2Rhc2hib2FyZCcpO1xyXG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG5cclxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihkYXRhLmVycm9yIHx8ICdFcnJvciBhbCBvYnRlbmVyIGRhdG9zIGRlbCBkYXNoYm9hcmQnKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKGRhdGEuc3VjY2Vzcykge1xyXG4gICAgICAgIHNldERhc2hib2FyZChkYXRhLmRhc2hib2FyZCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFcnJvciBhbCBvYnRlbmVyIGRhdG9zIGRlbCBkYXNoYm9hcmQnKTtcclxuICAgICAgfVxyXG4gICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGVuIHVzZVVzZXJEYXNoYm9hcmQ6JywgZXJyKTtcclxuICAgICAgc2V0RXJyb3IoZXJyIGluc3RhbmNlb2YgRXJyb3IgPyBlcnIubWVzc2FnZSA6ICdFcnJvciBkZXNjb25vY2lkbycpO1xyXG4gICAgfSBmaW5hbGx5IHtcclxuICAgICAgc2V0TG9hZGluZyhmYWxzZSk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgLy8gRnVuY2nDs24gcGFyYSByZWZyZXNjYXIgZWwgZGFzaGJvYXJkXHJcbiAgY29uc3QgcmVmcmVzaERhc2hib2FyZCA9ICgpID0+IHtcclxuICAgIGZldGNoRGFzaGJvYXJkKCk7XHJcbiAgfTtcclxuXHJcbiAgLy8gQ2FyZ2FyIGRhc2hib2FyZCBhbCBtb250YXIgZWwgY29tcG9uZW50ZVxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBmZXRjaERhc2hib2FyZCgpO1xyXG4gIH0sIFtdKTtcclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIGRhc2hib2FyZCxcclxuICAgIGxvYWRpbmcsXHJcbiAgICBlcnJvcixcclxuICAgIHJlZnJlc2hEYXNoYm9hcmQsXHJcbiAgfTtcclxufVxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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