dd1e759f2d042988381d65011b3fc774
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_19buk6mrc() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\check-admin-access\\route.ts";
  var hash = "43dbf5156cc4d2cc2249bd6f21c432e38ef8f624";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\check-admin-access\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 19
        },
        end: {
          line: 21,
          column: 61
        }
      },
      "8": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 82
        }
      },
      "9": {
        start: {
          line: 23,
          column: 28
        },
        end: {
          line: 23,
          column: 80
        }
      },
      "10": {
        start: {
          line: 24,
          column: 25
        },
        end: {
          line: 24,
          column: 73
        }
      },
      "11": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 24
        }
      },
      "12": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 137,
          column: 5
        }
      },
      "13": {
        start: {
          line: 29,
          column: 33
        },
        end: {
          line: 31,
          column: 10
        }
      },
      "14": {
        start: {
          line: 33,
          column: 28
        },
        end: {
          line: 33,
          column: 80
        }
      },
      "15": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "16": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 51,
          column: 15
        }
      },
      "17": {
        start: {
          line: 54,
          column: 32
        },
        end: {
          line: 54,
          column: 36
        }
      },
      "18": {
        start: {
          line: 55,
          column: 28
        },
        end: {
          line: 55,
          column: 32
        }
      },
      "19": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "20": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 57
        }
      },
      "21": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 97
        }
      },
      "22": {
        start: {
          line: 61,
          column: 28
        },
        end: {
          line: 61,
          column: 117
        }
      },
      "23": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 86
        }
      },
      "24": {
        start: {
          line: 63,
          column: 29
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "25": {
        start: {
          line: 68,
          column: 27
        },
        end: {
          line: 68,
          column: 64
        }
      },
      "26": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 125,
          column: 11
        }
      },
      "27": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 66
        }
      },
      "28": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 136,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 26,
            column: 15
          },
          end: {
            line: 26,
            column: 18
          }
        },
        loc: {
          start: {
            line: 26,
            column: 28
          },
          end: {
            line: 138,
            column: 1
          }
        },
        line: 26
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 34,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 34,
            column: 31
          }
        }, {
          start: {
            line: 34,
            column: 35
          },
          end: {
            line: 34,
            column: 60
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "3": {
        loc: {
          start: {
            line: 61,
            column: 28
          },
          end: {
            line: 61,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 28
          },
          end: {
            line: 61,
            column: 46
          }
        }, {
          start: {
            line: 61,
            column: 51
          },
          end: {
            line: 61,
            column: 116
          }
        }],
        line: 61
      },
      "4": {
        loc: {
          start: {
            line: 61,
            column: 51
          },
          end: {
            line: 61,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 61,
            column: 78
          },
          end: {
            line: 61,
            column: 109
          }
        }, {
          start: {
            line: 61,
            column: 112
          },
          end: {
            line: 61,
            column: 116
          }
        }],
        line: 61
      },
      "5": {
        loc: {
          start: {
            line: 63,
            column: 29
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 63,
            column: 43
          },
          end: {
            line: 63,
            column: 94
          }
        }, {
          start: {
            line: 63,
            column: 97
          },
          end: {
            line: 66,
            column: 9
          }
        }],
        line: 63
      },
      "6": {
        loc: {
          start: {
            line: 70,
            column: 21
          },
          end: {
            line: 70,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 21
          },
          end: {
            line: 70,
            column: 45
          }
        }, {
          start: {
            line: 70,
            column: 49
          },
          end: {
            line: 70,
            column: 68
          }
        }],
        line: 70
      },
      "7": {
        loc: {
          start: {
            line: 72,
            column: 24
          },
          end: {
            line: 72,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 72,
            column: 51
          },
          end: {
            line: 72,
            column: 60
          }
        }, {
          start: {
            line: 72,
            column: 63
          },
          end: {
            line: 72,
            column: 71
          }
        }],
        line: 72
      },
      "8": {
        loc: {
          start: {
            line: 73,
            column: 25
          },
          end: {
            line: 79,
            column: 24
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 52
          },
          end: {
            line: 79,
            column: 17
          }
        }, {
          start: {
            line: 79,
            column: 20
          },
          end: {
            line: 79,
            column: 24
          }
        }],
        line: 73
      },
      "9": {
        loc: {
          start: {
            line: 80,
            column: 21
          },
          end: {
            line: 83,
            column: 24
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 80,
            column: 37
          },
          end: {
            line: 83,
            column: 17
          }
        }, {
          start: {
            line: 83,
            column: 20
          },
          end: {
            line: 83,
            column: 24
          }
        }],
        line: 80
      },
      "10": {
        loc: {
          start: {
            line: 89,
            column: 24
          },
          end: {
            line: 89,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 89,
            column: 46
          },
          end: {
            line: 89,
            column: 55
          }
        }, {
          start: {
            line: 89,
            column: 58
          },
          end: {
            line: 89,
            column: 66
          }
        }],
        line: 89
      },
      "11": {
        loc: {
          start: {
            line: 132,
            column: 30
          },
          end: {
            line: 132,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 132,
            column: 55
          },
          end: {
            line: 132,
            column: 68
          }
        }, {
          start: {
            line: 132,
            column: 71
          },
          end: {
            line: 132,
            column: 86
          }
        }],
        line: 132
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\check-admin-access\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { checkAdminAccess, getAuthenticatedAdmin } from '@/lib/auth/admin-auth';\r\nimport {\r\n  requireAdminAuth,\r\n  getEnterpriseAuthContext\r\n} from '@/lib/auth/enterprise-auth-utils';\r\nimport {\r\n  validateRLSContext\r\n} from '@/lib/auth/enterprise-rls-utils';\r\nimport {\r\n  getCacheStats\r\n} from '@/lib/auth/enterprise-cache';\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // ENTERPRISE: Usar nueva autenticaci\xF3n enterprise para comparaci\xF3n\r\n    const enterpriseResult = await requireAdminAuth(request, ['admin_access']);\r\n\r\n    // LEGACY: Mantener m\xE9todo anterior para comparaci\xF3n\r\n    const adminResult = await getAuthenticatedAdmin(request);\r\n\r\n    if (!adminResult.userId && !enterpriseResult.success) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Usuario no autenticado en ning\xFAn m\xE9todo',\r\n        enterprise: {\r\n          error: enterpriseResult.error,\r\n          code: enterpriseResult.code\r\n        },\r\n        legacy: {\r\n          error: adminResult.error\r\n        },\r\n        migration: {\r\n          status: 'ENTERPRISE_MIGRATED',\r\n          comparison: 'Both methods failed - user not authenticated'\r\n        }\r\n      }, { status: 401 });\r\n    }\r\n\r\n    // ENTERPRISE: Obtener contexto completo y validaci\xF3n RLS\r\n    let enterpriseContext = null;\r\n    let rlsValidation = null;\r\n\r\n    if (enterpriseResult.success) {\r\n      enterpriseContext = enterpriseResult.context;\r\n      rlsValidation = await validateRLSContext(enterpriseContext!);\r\n    }\r\n\r\n    // LEGACY: Comparar con m\xE9todo legacy para verificar migraci\xF3n\r\n    const clerkUserId = adminResult.userId || (enterpriseResult.success ? enterpriseResult.context!.userId : null);\r\n\r\n    console.log('\uD83D\uDD0D Debug Enterprise vs Legacy: Testing with user:', clerkUserId);\r\n\r\n    const legacyResult = clerkUserId ? await checkAdminAccess(clerkUserId) : { success: false, error: 'No user ID' };\r\n\r\n    // ENTERPRISE: Obtener estad\xEDsticas de cache\r\n    const cacheStats = getCacheStats();\r\n\r\n    return NextResponse.json({\r\n      success: enterpriseResult.success || adminResult.isAdmin,\r\n      enterprise: {\r\n        status: enterpriseResult.success ? 'SUCCESS' : 'FAILED',\r\n        context: enterpriseResult.success ? {\r\n          userId: enterpriseContext?.userId,\r\n          role: enterpriseContext?.role,\r\n          permissions: enterpriseContext?.permissions,\r\n          securityLevel: enterpriseContext?.securityLevel,\r\n          validations: enterpriseContext?.validations\r\n        } : null,\r\n        rls: rlsValidation ? {\r\n          valid: rlsValidation.valid,\r\n          error: rlsValidation.error\r\n        } : null,\r\n        cache: cacheStats,\r\n        error: enterpriseResult.error,\r\n        code: enterpriseResult.code\r\n      },\r\n      legacy: {\r\n        status: adminResult.isAdmin ? 'SUCCESS' : 'FAILED',\r\n        userId: adminResult.userId,\r\n        sessionId: adminResult.sessionId,\r\n        isAdmin: adminResult.isAdmin,\r\n        error: adminResult.error,\r\n        checkAdminAccess: {\r\n          success: legacyResult.success,\r\n          error: legacyResult.error\r\n        }\r\n      },\r\n      migration: {\r\n        status: 'ENTERPRISE_COMPLETED',\r\n        comparison: {\r\n          enterprise_success: enterpriseResult.success,\r\n          legacy_success: adminResult.isAdmin,\r\n          methods_agree: enterpriseResult.success === adminResult.isAdmin,\r\n          recommended: 'enterprise'\r\n        },\r\n        improvements: [\r\n          '\u2705 ENTERPRISE: Autenticaci\xF3n con m\xFAltiples validaciones de seguridad',\r\n          '\u2705 ENTERPRISE: Row Level Security (RLS) integrado',\r\n          '\u2705 ENTERPRISE: Cache inteligente con estad\xEDsticas',\r\n          '\u2705 ENTERPRISE: Contexto completo de seguridad',\r\n          '\u2705 ENTERPRISE: Permisos granulares',\r\n          '\u26A0\uFE0F LEGACY: M\xE9todo anterior a\xFAn funcional para compatibilidad'\r\n        ]\r\n      },\r\n      debug: {\r\n        clerkUserId,\r\n        timestamp: new Date().toISOString(),\r\n        request_info: {\r\n          method: request.method,\r\n          url: request.url,\r\n          user_agent: request.headers.get('user-agent')?.substring(0, 100)\r\n        }\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('\uD83D\uDD0D Debug checkAdminAccess: Error:', error);\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Unexpected error',\r\n      debug: {\r\n        errorMessage: error instanceof Error ? error.message : 'Unknown error'\r\n      }\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "runtime", "request", "enterpriseResult", "requireAdminAuth", "adminResult", "getAuthenticatedAdmin", "userId", "success", "NextResponse", "json", "error", "enterprise", "code", "legacy", "migration", "status", "comparison", "enterpriseContext", "rlsValidation", "context", "validateRLSContext", "clerkUserId", "console", "log", "legacyResult", "checkAdminAccess", "cacheStats", "getCacheStats", "isAdmin", "role", "permissions", "securityLevel", "validations", "rls", "valid", "cache", "sessionId", "enterprise_success", "legacy_success", "methods_agree", "recommended", "improvements", "debug", "timestamp", "Date", "toISOString", "request_info", "method", "url", "user_agent", "headers", "get", "substring", "errorMessage", "Error", "message"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "43dbf5156cc4d2cc2249bd6f21c432e38ef8f624"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_19buk6mrc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_19buk6mrc();
cov_19buk6mrc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_19buk6mrc().f[0]++;
  cov_19buk6mrc().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_19buk6mrc().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_19buk6mrc().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_19buk6mrc().f[1]++;
    cov_19buk6mrc().s[4]++;
    return GET;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_19buk6mrc().f[2]++;
    cov_19buk6mrc().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_19buk6mrc().s[6]++, require("next/server"));
const _adminauth =
/* istanbul ignore next */
(cov_19buk6mrc().s[7]++, require("../../../../lib/auth/admin-auth"));
const _enterpriseauthutils =
/* istanbul ignore next */
(cov_19buk6mrc().s[8]++, require("../../../../lib/auth/enterprise-auth-utils"));
const _enterpriserlsutils =
/* istanbul ignore next */
(cov_19buk6mrc().s[9]++, require("../../../../lib/auth/enterprise-rls-utils"));
const _enterprisecache =
/* istanbul ignore next */
(cov_19buk6mrc().s[10]++, require("../../../../lib/auth/enterprise-cache"));
const runtime =
/* istanbul ignore next */
(cov_19buk6mrc().s[11]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_19buk6mrc().f[3]++;
  cov_19buk6mrc().s[12]++;
  try {
    // ENTERPRISE: Usar nueva autenticaciÃ³n enterprise para comparaciÃ³n
    const enterpriseResult =
    /* istanbul ignore next */
    (cov_19buk6mrc().s[13]++, await (0, _enterpriseauthutils.requireAdminAuth)(request, ['admin_access']));
    // LEGACY: Mantener mÃ©todo anterior para comparaciÃ³n
    const adminResult =
    /* istanbul ignore next */
    (cov_19buk6mrc().s[14]++, await (0, _adminauth.getAuthenticatedAdmin)(request));
    /* istanbul ignore next */
    cov_19buk6mrc().s[15]++;
    if (
    /* istanbul ignore next */
    (cov_19buk6mrc().b[1][0]++, !adminResult.userId) &&
    /* istanbul ignore next */
    (cov_19buk6mrc().b[1][1]++, !enterpriseResult.success)) {
      /* istanbul ignore next */
      cov_19buk6mrc().b[0][0]++;
      cov_19buk6mrc().s[16]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Usuario no autenticado en ningÃºn mÃ©todo',
        enterprise: {
          error: enterpriseResult.error,
          code: enterpriseResult.code
        },
        legacy: {
          error: adminResult.error
        },
        migration: {
          status: 'ENTERPRISE_MIGRATED',
          comparison: 'Both methods failed - user not authenticated'
        }
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_19buk6mrc().b[0][1]++;
    }
    // ENTERPRISE: Obtener contexto completo y validaciÃ³n RLS
    let enterpriseContext =
    /* istanbul ignore next */
    (cov_19buk6mrc().s[17]++, null);
    let rlsValidation =
    /* istanbul ignore next */
    (cov_19buk6mrc().s[18]++, null);
    /* istanbul ignore next */
    cov_19buk6mrc().s[19]++;
    if (enterpriseResult.success) {
      /* istanbul ignore next */
      cov_19buk6mrc().b[2][0]++;
      cov_19buk6mrc().s[20]++;
      enterpriseContext = enterpriseResult.context;
      /* istanbul ignore next */
      cov_19buk6mrc().s[21]++;
      rlsValidation = await (0, _enterpriserlsutils.validateRLSContext)(enterpriseContext);
    } else
    /* istanbul ignore next */
    {
      cov_19buk6mrc().b[2][1]++;
    }
    // LEGACY: Comparar con mÃ©todo legacy para verificar migraciÃ³n
    const clerkUserId =
    /* istanbul ignore next */
    (cov_19buk6mrc().s[22]++,
    /* istanbul ignore next */
    (cov_19buk6mrc().b[3][0]++, adminResult.userId) ||
    /* istanbul ignore next */
    (cov_19buk6mrc().b[3][1]++, enterpriseResult.success ?
    /* istanbul ignore next */
    (cov_19buk6mrc().b[4][0]++, enterpriseResult.context.userId) :
    /* istanbul ignore next */
    (cov_19buk6mrc().b[4][1]++, null)));
    /* istanbul ignore next */
    cov_19buk6mrc().s[23]++;
    console.log('ğ Debug Enterprise vs Legacy: Testing with user:', clerkUserId);
    const legacyResult =
    /* istanbul ignore next */
    (cov_19buk6mrc().s[24]++, clerkUserId ?
    /* istanbul ignore next */
    (cov_19buk6mrc().b[5][0]++, await (0, _adminauth.checkAdminAccess)(clerkUserId)) :
    /* istanbul ignore next */
    (cov_19buk6mrc().b[5][1]++, {
      success: false,
      error: 'No user ID'
    }));
    // ENTERPRISE: Obtener estadÃ­sticas de cache
    const cacheStats =
    /* istanbul ignore next */
    (cov_19buk6mrc().s[25]++, (0, _enterprisecache.getCacheStats)());
    /* istanbul ignore next */
    cov_19buk6mrc().s[26]++;
    return _server.NextResponse.json({
      success:
      /* istanbul ignore next */
      (cov_19buk6mrc().b[6][0]++, enterpriseResult.success) ||
      /* istanbul ignore next */
      (cov_19buk6mrc().b[6][1]++, adminResult.isAdmin),
      enterprise: {
        status: enterpriseResult.success ?
        /* istanbul ignore next */
        (cov_19buk6mrc().b[7][0]++, 'SUCCESS') :
        /* istanbul ignore next */
        (cov_19buk6mrc().b[7][1]++, 'FAILED'),
        context: enterpriseResult.success ?
        /* istanbul ignore next */
        (cov_19buk6mrc().b[8][0]++, {
          userId: enterpriseContext?.userId,
          role: enterpriseContext?.role,
          permissions: enterpriseContext?.permissions,
          securityLevel: enterpriseContext?.securityLevel,
          validations: enterpriseContext?.validations
        }) :
        /* istanbul ignore next */
        (cov_19buk6mrc().b[8][1]++, null),
        rls: rlsValidation ?
        /* istanbul ignore next */
        (cov_19buk6mrc().b[9][0]++, {
          valid: rlsValidation.valid,
          error: rlsValidation.error
        }) :
        /* istanbul ignore next */
        (cov_19buk6mrc().b[9][1]++, null),
        cache: cacheStats,
        error: enterpriseResult.error,
        code: enterpriseResult.code
      },
      legacy: {
        status: adminResult.isAdmin ?
        /* istanbul ignore next */
        (cov_19buk6mrc().b[10][0]++, 'SUCCESS') :
        /* istanbul ignore next */
        (cov_19buk6mrc().b[10][1]++, 'FAILED'),
        userId: adminResult.userId,
        sessionId: adminResult.sessionId,
        isAdmin: adminResult.isAdmin,
        error: adminResult.error,
        checkAdminAccess: {
          success: legacyResult.success,
          error: legacyResult.error
        }
      },
      migration: {
        status: 'ENTERPRISE_COMPLETED',
        comparison: {
          enterprise_success: enterpriseResult.success,
          legacy_success: adminResult.isAdmin,
          methods_agree: enterpriseResult.success === adminResult.isAdmin,
          recommended: 'enterprise'
        },
        improvements: ['â ENTERPRISE: AutenticaciÃ³n con mÃºltiples validaciones de seguridad', 'â ENTERPRISE: Row Level Security (RLS) integrado', 'â ENTERPRISE: Cache inteligente con estadÃ­sticas', 'â ENTERPRISE: Contexto completo de seguridad', 'â ENTERPRISE: Permisos granulares', 'â ï¸ LEGACY: MÃ©todo anterior aÃºn funcional para compatibilidad']
      },
      debug: {
        clerkUserId,
        timestamp: new Date().toISOString(),
        request_info: {
          method: request.method,
          url: request.url,
          user_agent: request.headers.get('user-agent')?.substring(0, 100)
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_19buk6mrc().s[27]++;
    console.error('ğ Debug checkAdminAccess: Error:', error);
    /* istanbul ignore next */
    cov_19buk6mrc().s[28]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Unexpected error',
      debug: {
        errorMessage: error instanceof Error ?
        /* istanbul ignore next */
        (cov_19buk6mrc().b[11][0]++, error.message) :
        /* istanbul ignore next */
        (cov_19buk6mrc().b[11][1]++, 'Unknown error')
      }
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,