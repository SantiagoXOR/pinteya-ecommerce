e427b3698badbd08d29e1dc436607d38
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_16eawlmaev() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\orders\\create\\route.ts";
  var hash = "a1b691774cdc5995d51754f1a51790addc1fa337";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\orders\\create\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 23
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 13
        },
        end: {
          line: 24,
          column: 27
        }
      },
      "9": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 24
        }
      },
      "10": {
        start: {
          line: 27,
          column: 26
        },
        end: {
          line: 67,
          column: 2
        }
      },
      "11": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 141,
          column: 5
        }
      },
      "12": {
        start: {
          line: 70,
          column: 21
        },
        end: {
          line: 70,
          column: 41
        }
      },
      "13": {
        start: {
          line: 72,
          column: 30
        },
        end: {
          line: 72,
          column: 59
        }
      },
      "14": {
        start: {
          line: 74,
          column: 24
        },
        end: {
          line: 74,
          column: 86
        }
      },
      "15": {
        start: {
          line: 76,
          column: 22
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "16": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 93,
          column: 11
        }
      },
      "17": {
        start: {
          line: 95,
          column: 28
        },
        end: {
          line: 95,
          column: 37
        }
      },
      "18": {
        start: {
          line: 96,
          column: 25
        },
        end: {
          line: 96,
          column: 29
        }
      },
      "19": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "20": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 75
        }
      },
      "21": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 42
        }
      },
      "22": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 102,
          column: 22
        }
      },
      "23": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 52
        }
      },
      "24": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 105,
          column: 22
        }
      },
      "25": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 51
        }
      },
      "26": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 22
        }
      },
      "27": {
        start: {
          line: 110,
          column: 25
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "28": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 123,
          column: 11
        }
      },
      "29": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 55
        }
      },
      "30": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 134,
          column: 9
        }
      },
      "31": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 133,
          column: 15
        }
      },
      "32": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 140,
          column: 11
        }
      },
      "33": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 145,
          column: 26
        }
      },
      "34": {
        start: {
          line: 146,
          column: 20
        },
        end: {
          line: 146,
          column: 21
        }
      },
      "35": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 157,
          column: 5
        }
      },
      "36": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 26
        }
      },
      "37": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 18
        }
      },
      "38": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 26
        }
      },
      "39": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 18
        }
      },
      "40": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 26
        }
      },
      "41": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 18
        }
      },
      "42": {
        start: {
          line: 158,
          column: 26
        },
        end: {
          line: 158,
          column: 83
        }
      },
      "43": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 159,
          column: 39
        }
      },
      "44": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 169,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "POST",
        decl: {
          start: {
            line: 68,
            column: 15
          },
          end: {
            line: 68,
            column: 19
          }
        },
        loc: {
          start: {
            line: 68,
            column: 29
          },
          end: {
            line: 142,
            column: 1
          }
        },
        line: 68
      },
      "5": {
        name: "calculateEstimatedDelivery",
        decl: {
          start: {
            line: 144,
            column: 9
          },
          end: {
            line: 144,
            column: 35
          }
        },
        loc: {
          start: {
            line: 144,
            column: 52
          },
          end: {
            line: 160,
            column: 1
          }
        },
        line: 144
      },
      "6": {
        name: "OPTIONS",
        decl: {
          start: {
            line: 161,
            column: 15
          },
          end: {
            line: 161,
            column: 22
          }
        },
        loc: {
          start: {
            line: 161,
            column: 25
          },
          end: {
            line: 170,
            column: 1
          }
        },
        line: 161
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 92,
            column: 26
          },
          end: {
            line: 92,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 26
          },
          end: {
            line: 92,
            column: 60
          }
        }, {
          start: {
            line: 92,
            column: 64
          },
          end: {
            line: 92,
            column: 83
          }
        }],
        line: 92
      },
      "1": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 102,
            column: 22
          }
        }, {
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 105,
            column: 22
          }
        }, {
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 108,
            column: 22
          }
        }],
        line: 97
      },
      "2": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "3": {
        loc: {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 150,
            column: 18
          }
        }, {
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 153,
            column: 18
          }
        }, {
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 156,
            column: 18
          }
        }],
        line: 147
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\orders\\create\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { z } from 'zod';\r\n\r\n// Schema de validaci\xF3n para crear una orden\r\nconst createOrderSchema = z.object({\r\n  customerInfo: z.object({\r\n    firstName: z.string().min(1, 'Nombre es requerido'),\r\n    lastName: z.string().min(1, 'Apellido es requerido'),\r\n    email: z.string().email('Email inv\xE1lido'),\r\n    phone: z.string().min(1, 'Tel\xE9fono es requerido'),\r\n  }),\r\n  shippingAddress: z.object({\r\n    streetAddress: z.string().min(1, 'Direcci\xF3n es requerida'),\r\n    apartment: z.string().optional(),\r\n    city: z.string().min(1, 'Ciudad es requerida'),\r\n    state: z.string().min(1, 'Provincia es requerida'),\r\n    zipCode: z.string().min(1, 'C\xF3digo postal es requerido'),\r\n    country: z.string().default('Argentina'),\r\n    observations: z.string().optional(),\r\n  }),\r\n  items: z.array(z.object({\r\n    id: z.string(),\r\n    name: z.string(),\r\n    price: z.number(),\r\n    quantity: z.number(),\r\n    image: z.string().optional(),\r\n  })),\r\n  paymentMethod: z.enum(['mercadopago', 'bank', 'cash']),\r\n  shippingMethod: z.enum(['free', 'express', 'pickup']),\r\n  totals: z.object({\r\n    subtotal: z.number(),\r\n    shipping: z.number(),\r\n    discount: z.number().default(0),\r\n    total: z.number(),\r\n  }),\r\n  orderNotes: z.string().optional(),\r\n});\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    \r\n    // Validar datos de entrada\r\n    const validatedData = createOrderSchema.parse(body);\r\n    \r\n    // Generar ID \xFAnico para la orden\r\n    const orderId = `ORD-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\r\n    \r\n    // Crear objeto de orden\r\n    const order = {\r\n      id: orderId,\r\n      status: 'pending',\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString(),\r\n      ...validatedData,\r\n      trackingNumber: null,\r\n      estimatedDelivery: calculateEstimatedDelivery(validatedData.shippingMethod),\r\n    };\r\n    \r\n    // En un entorno real, aqu\xED guardar\xEDas en la base de datos\r\n    // Por ahora, simularemos el guardado\r\n    console.log('\uD83D\uDCE6 Nueva orden creada:', {\r\n      orderId: order.id,\r\n      customer: `${order.customerInfo.firstName} ${order.customerInfo.lastName}`,\r\n      total: order.totals.total,\r\n      items: order.items.length,\r\n      observations: order.shippingAddress.observations || 'Sin observaciones'\r\n    });\r\n    \r\n    // Simular procesamiento de pago seg\xFAn el m\xE9todo\r\n    let paymentStatus = 'pending';\r\n    let paymentUrl = null;\r\n    \r\n    switch (validatedData.paymentMethod) {\r\n      case 'mercadopago':\r\n        // En un entorno real, aqu\xED crear\xEDas la preferencia de MercadoPago\r\n        paymentUrl = `https://mercadopago.com/checkout/${orderId}`;\r\n        paymentStatus = 'pending';\r\n        break;\r\n      case 'bank':\r\n        paymentStatus = 'awaiting_transfer';\r\n        break;\r\n      case 'cash':\r\n        paymentStatus = 'cash_on_delivery';\r\n        break;\r\n    }\r\n    \r\n    const response = {\r\n      success: true,\r\n      data: {\r\n        order: {\r\n          ...order,\r\n          paymentStatus,\r\n          paymentUrl,\r\n        }\r\n      },\r\n      message: 'Orden creada exitosamente'\r\n    };\r\n    \r\n    return NextResponse.json(response, { status: 201 });\r\n    \r\n  } catch (error) {\r\n    console.error('\u274C Error creando orden:', error);\r\n    \r\n    if (error instanceof z.ZodError) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Datos de entrada inv\xE1lidos',\r\n        details: error.errors\r\n      }, { status: 400 });\r\n    }\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error interno del servidor'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// Funci\xF3n auxiliar para calcular fecha estimada de entrega\r\nfunction calculateEstimatedDelivery(shippingMethod: string): string {\r\n  const now = new Date();\r\n  let daysToAdd = 7; // Por defecto 7 d\xEDas\r\n  \r\n  switch (shippingMethod) {\r\n    case 'express':\r\n      daysToAdd = 2;\r\n      break;\r\n    case 'free':\r\n      daysToAdd = 7;\r\n      break;\r\n    case 'pickup':\r\n      daysToAdd = 1;\r\n      break;\r\n  }\r\n  \r\n  const estimatedDate = new Date(now.getTime() + (daysToAdd * 24 * 60 * 60 * 1000));\r\n  return estimatedDate.toISOString();\r\n}\r\n\r\n// M\xE9todo OPTIONS para CORS\r\nexport async function OPTIONS() {\r\n  return new NextResponse(null, {\r\n    status: 200,\r\n    headers: {\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Methods': 'POST, OPTIONS',\r\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\r\n    },\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["OPTIONS", "POST", "runtime", "createOrderSchema", "z", "object", "customerInfo", "firstName", "string", "min", "lastName", "email", "phone", "shippingAddress", "streetAddress", "apartment", "optional", "city", "state", "zipCode", "country", "default", "observations", "items", "array", "id", "name", "price", "number", "quantity", "image", "paymentMethod", "enum", "shippingMethod", "totals", "subtotal", "shipping", "discount", "total", "orderNotes", "request", "body", "json", "validatedData", "parse", "orderId", "Date", "now", "Math", "random", "toString", "substr", "order", "status", "createdAt", "toISOString", "updatedAt", "trackingNumber", "estimatedDelivery", "calculateEstimatedDelivery", "console", "log", "customer", "length", "paymentStatus", "paymentUrl", "response", "success", "data", "message", "NextResponse", "error", "ZodError", "details", "errors", "daysToAdd", "estimatedDate", "getTime", "headers"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a1b691774cdc5995d51754f1a51790addc1fa337"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_16eawlmaev = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_16eawlmaev();
cov_16eawlmaev().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_16eawlmaev().f[0]++;
  cov_16eawlmaev().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_16eawlmaev().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_16eawlmaev().s[3]++;
_export(exports, {
  get OPTIONS() {
    /* istanbul ignore next */
    cov_16eawlmaev().f[1]++;
    cov_16eawlmaev().s[4]++;
    return OPTIONS;
  },
  get POST() {
    /* istanbul ignore next */
    cov_16eawlmaev().f[2]++;
    cov_16eawlmaev().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_16eawlmaev().f[3]++;
    cov_16eawlmaev().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_16eawlmaev().s[7]++, require("next/server"));
const _zod =
/* istanbul ignore next */
(cov_16eawlmaev().s[8]++, require("zod"));
const runtime =
/* istanbul ignore next */
(cov_16eawlmaev().s[9]++, 'nodejs');
// Schema de validaciÃ³n para crear una orden
const createOrderSchema =
/* istanbul ignore next */
(cov_16eawlmaev().s[10]++, _zod.z.object({
  customerInfo: _zod.z.object({
    firstName: _zod.z.string().min(1, 'Nombre es requerido'),
    lastName: _zod.z.string().min(1, 'Apellido es requerido'),
    email: _zod.z.string().email('Email invÃ¡lido'),
    phone: _zod.z.string().min(1, 'TelÃ©fono es requerido')
  }),
  shippingAddress: _zod.z.object({
    streetAddress: _zod.z.string().min(1, 'DirecciÃ³n es requerida'),
    apartment: _zod.z.string().optional(),
    city: _zod.z.string().min(1, 'Ciudad es requerida'),
    state: _zod.z.string().min(1, 'Provincia es requerida'),
    zipCode: _zod.z.string().min(1, 'CÃ³digo postal es requerido'),
    country: _zod.z.string().default('Argentina'),
    observations: _zod.z.string().optional()
  }),
  items: _zod.z.array(_zod.z.object({
    id: _zod.z.string(),
    name: _zod.z.string(),
    price: _zod.z.number(),
    quantity: _zod.z.number(),
    image: _zod.z.string().optional()
  })),
  paymentMethod: _zod.z.enum(['mercadopago', 'bank', 'cash']),
  shippingMethod: _zod.z.enum(['free', 'express', 'pickup']),
  totals: _zod.z.object({
    subtotal: _zod.z.number(),
    shipping: _zod.z.number(),
    discount: _zod.z.number().default(0),
    total: _zod.z.number()
  }),
  orderNotes: _zod.z.string().optional()
}));
async function POST(request) {
  /* istanbul ignore next */
  cov_16eawlmaev().f[4]++;
  cov_16eawlmaev().s[11]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_16eawlmaev().s[12]++, await request.json());
    // Validar datos de entrada
    const validatedData =
    /* istanbul ignore next */
    (cov_16eawlmaev().s[13]++, createOrderSchema.parse(body));
    // Generar ID Ãºnico para la orden
    const orderId =
    /* istanbul ignore next */
    (cov_16eawlmaev().s[14]++, `ORD-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`);
    // Crear objeto de orden
    const order =
    /* istanbul ignore next */
    (cov_16eawlmaev().s[15]++, {
      id: orderId,
      status: 'pending',
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString(),
      ...validatedData,
      trackingNumber: null,
      estimatedDelivery: calculateEstimatedDelivery(validatedData.shippingMethod)
    });
    // En un entorno real, aquÃ­ guardarÃ­as en la base de datos
    // Por ahora, simularemos el guardado
    /* istanbul ignore next */
    cov_16eawlmaev().s[16]++;
    console.log('ğ¦ Nueva orden creada:', {
      orderId: order.id,
      customer: `${order.customerInfo.firstName} ${order.customerInfo.lastName}`,
      total: order.totals.total,
      items: order.items.length,
      observations:
      /* istanbul ignore next */
      (cov_16eawlmaev().b[0][0]++, order.shippingAddress.observations) ||
      /* istanbul ignore next */
      (cov_16eawlmaev().b[0][1]++, 'Sin observaciones')
    });
    // Simular procesamiento de pago segÃºn el mÃ©todo
    let paymentStatus =
    /* istanbul ignore next */
    (cov_16eawlmaev().s[17]++, 'pending');
    let paymentUrl =
    /* istanbul ignore next */
    (cov_16eawlmaev().s[18]++, null);
    /* istanbul ignore next */
    cov_16eawlmaev().s[19]++;
    switch (validatedData.paymentMethod) {
      case 'mercadopago':
        /* istanbul ignore next */
        cov_16eawlmaev().b[1][0]++;
        cov_16eawlmaev().s[20]++;
        // En un entorno real, aquÃ­ crearÃ­as la preferencia de MercadoPago
        paymentUrl = `https://mercadopago.com/checkout/${orderId}`;
        /* istanbul ignore next */
        cov_16eawlmaev().s[21]++;
        paymentStatus = 'pending';
        /* istanbul ignore next */
        cov_16eawlmaev().s[22]++;
        break;
      case 'bank':
        /* istanbul ignore next */
        cov_16eawlmaev().b[1][1]++;
        cov_16eawlmaev().s[23]++;
        paymentStatus = 'awaiting_transfer';
        /* istanbul ignore next */
        cov_16eawlmaev().s[24]++;
        break;
      case 'cash':
        /* istanbul ignore next */
        cov_16eawlmaev().b[1][2]++;
        cov_16eawlmaev().s[25]++;
        paymentStatus = 'cash_on_delivery';
        /* istanbul ignore next */
        cov_16eawlmaev().s[26]++;
        break;
    }
    const response =
    /* istanbul ignore next */
    (cov_16eawlmaev().s[27]++, {
      success: true,
      data: {
        order: {
          ...order,
          paymentStatus,
          paymentUrl
        }
      },
      message: 'Orden creada exitosamente'
    });
    /* istanbul ignore next */
    cov_16eawlmaev().s[28]++;
    return _server.NextResponse.json(response, {
      status: 201
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_16eawlmaev().s[29]++;
    console.error('â Error creando orden:', error);
    /* istanbul ignore next */
    cov_16eawlmaev().s[30]++;
    if (error instanceof _zod.z.ZodError) {
      /* istanbul ignore next */
      cov_16eawlmaev().b[2][0]++;
      cov_16eawlmaev().s[31]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Datos de entrada invÃ¡lidos',
        details: error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_16eawlmaev().b[2][1]++;
    }
    cov_16eawlmaev().s[32]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
// FunciÃ³n auxiliar para calcular fecha estimada de entrega
function calculateEstimatedDelivery(shippingMethod) {
  /* istanbul ignore next */
  cov_16eawlmaev().f[5]++;
  const now =
  /* istanbul ignore next */
  (cov_16eawlmaev().s[33]++, new Date());
  let daysToAdd =
  /* istanbul ignore next */
  (cov_16eawlmaev().s[34]++, 7); // Por defecto 7 dÃ­as
  /* istanbul ignore next */
  cov_16eawlmaev().s[35]++;
  switch (shippingMethod) {
    case 'express':
      /* istanbul ignore next */
      cov_16eawlmaev().b[3][0]++;
      cov_16eawlmaev().s[36]++;
      daysToAdd = 2;
      /* istanbul ignore next */
      cov_16eawlmaev().s[37]++;
      break;
    case 'free':
      /* istanbul ignore next */
      cov_16eawlmaev().b[3][1]++;
      cov_16eawlmaev().s[38]++;
      daysToAdd = 7;
      /* istanbul ignore next */
      cov_16eawlmaev().s[39]++;
      break;
    case 'pickup':
      /* istanbul ignore next */
      cov_16eawlmaev().b[3][2]++;
      cov_16eawlmaev().s[40]++;
      daysToAdd = 1;
      /* istanbul ignore next */
      cov_16eawlmaev().s[41]++;
      break;
  }
  const estimatedDate =
  /* istanbul ignore next */
  (cov_16eawlmaev().s[42]++, new Date(now.getTime() + daysToAdd * 24 * 60 * 60 * 1000));
  /* istanbul ignore next */
  cov_16eawlmaev().s[43]++;
  return estimatedDate.toISOString();
}
async function OPTIONS() {
  /* istanbul ignore next */
  cov_16eawlmaev().f[6]++;
  cov_16eawlmaev().s[44]++;
  return new _server.NextResponse(null, {
    status: 200,
    headers: {
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Methods': 'POST, OPTIONS',
      'Access-Control-Allow-Headers': 'Content-Type, Authorization'
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,