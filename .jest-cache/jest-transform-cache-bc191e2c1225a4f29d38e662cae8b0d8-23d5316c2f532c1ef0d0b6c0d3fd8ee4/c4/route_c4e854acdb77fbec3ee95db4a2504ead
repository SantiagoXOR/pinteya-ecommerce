d46147655bafb84b23efb8c47dbfe346
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_8dffxm58a() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\orders\\bulk\\route.ts";
  var hash = "4872e875887f543a8cba68ecdb2545a6e443ce97";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\orders\\bulk\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 20
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 18
        },
        end: {
          line: 21,
          column: 69
        }
      },
      "8": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 57
        }
      },
      "9": {
        start: {
          line: 23,
          column: 13
        },
        end: {
          line: 23,
          column: 27
        }
      },
      "10": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 63
        }
      },
      "11": {
        start: {
          line: 25,
          column: 22
        },
        end: {
          line: 25,
          column: 70
        }
      },
      "12": {
        start: {
          line: 26,
          column: 21
        },
        end: {
          line: 26,
          column: 74
        }
      },
      "13": {
        start: {
          line: 27,
          column: 17
        },
        end: {
          line: 27,
          column: 65
        }
      },
      "14": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 24
        }
      },
      "15": {
        start: {
          line: 32,
          column: 31
        },
        end: {
          line: 45,
          column: 2
        }
      },
      "16": {
        start: {
          line: 46,
          column: 25
        },
        end: {
          line: 58,
          column: 2
        }
      },
      "17": {
        start: {
          line: 62,
          column: 25
        },
        end: {
          line: 87,
          column: 1
        }
      },
      "18": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 91,
          column: 5
        }
      },
      "19": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 21
        }
      },
      "20": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 92,
          column: 73
        }
      },
      "21": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 133,
          column: 5
        }
      },
      "22": {
        start: {
          line: 99,
          column: 24
        },
        end: {
          line: 99,
          column: 49
        }
      },
      "23": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "24": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 104,
          column: 14
        }
      },
      "25": {
        start: {
          line: 106,
          column: 21
        },
        end: {
          line: 106,
          column: 34
        }
      },
      "26": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "27": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 111,
          column: 14
        }
      },
      "28": {
        start: {
          line: 114,
          column: 24
        },
        end: {
          line: 114,
          column: 68
        }
      },
      "29": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "30": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 119,
          column: 14
        }
      },
      "31": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 124,
          column: 10
        }
      },
      "32": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 128,
          column: 11
        }
      },
      "33": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 132,
          column: 10
        }
      },
      "34": {
        start: {
          line: 136,
          column: 22
        },
        end: {
          line: 136,
          column: 32
        }
      },
      "35": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 183,
          column: 5
        }
      },
      "36": {
        start: {
          line: 139,
          column: 32
        },
        end: {
          line: 139,
          column: 118
        }
      },
      "37": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "38": {
        start: {
          line: 141,
          column: 29
        },
        end: {
          line: 145,
          column: 14
        }
      },
      "39": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 77
        }
      },
      "40": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 28
        }
      },
      "41": {
        start: {
          line: 150,
          column: 27
        },
        end: {
          line: 150,
          column: 52
        }
      },
      "42": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "43": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 156,
          column: 15
        }
      },
      "44": {
        start: {
          line: 159,
          column: 33
        },
        end: {
          line: 159,
          column: 53
        }
      },
      "45": {
        start: {
          line: 160,
          column: 26
        },
        end: {
          line: 160,
          column: 55
        }
      },
      "46": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "47": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 69
        }
      },
      "48": {
        start: {
          line: 163,
          column: 15
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "49": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 63
        }
      },
      "50": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 170,
          column: 15
        }
      },
      "51": {
        start: {
          line: 173,
          column: 29
        },
        end: {
          line: 173,
          column: 51
        }
      },
      "52": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 92
        }
      },
      "53": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 177,
          column: 11
        }
      },
      "54": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 182,
          column: 11
        }
      },
      "55": {
        start: {
          line: 189,
          column: 22
        },
        end: {
          line: 189,
          column: 32
        }
      },
      "56": {
        start: {
          line: 190,
          column: 4
        },
        end: {
          line: 312,
          column: 5
        }
      },
      "57": {
        start: {
          line: 192,
          column: 21
        },
        end: {
          line: 192,
          column: 41
        }
      },
      "58": {
        start: {
          line: 193,
          column: 33
        },
        end: {
          line: 193,
          column: 71
        }
      },
      "59": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "60": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 200,
          column: 15
        }
      },
      "61": {
        start: {
          line: 202,
          column: 75
        },
        end: {
          line: 202,
          column: 96
        }
      },
      "62": {
        start: {
          line: 204,
          column: 59
        },
        end: {
          line: 204,
          column: 158
        }
      },
      "63": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 214,
          column: 9
        }
      },
      "64": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 208,
          column: 15
        }
      },
      "65": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 213,
          column: 15
        }
      },
      "66": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 221,
          column: 9
        }
      },
      "67": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 220,
          column: 15
        }
      },
      "68": {
        start: {
          line: 223,
          column: 28
        },
        end: {
          line: 223,
          column: 30
        }
      },
      "69": {
        start: {
          line: 224,
          column: 30
        },
        end: {
          line: 224,
          column: 32
        }
      },
      "70": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 236,
          column: 9
        }
      },
      "71": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 235,
          column: 13
        }
      },
      "72": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 227,
          column: 40
        }
      },
      "73": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 234,
          column: 19
        }
      },
      "74": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 244,
          column: 9
        }
      },
      "75": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 243,
          column: 15
        }
      },
      "76": {
        start: {
          line: 246,
          column: 30
        },
        end: {
          line: 246,
          column: 64
        }
      },
      "77": {
        start: {
          line: 246,
          column: 55
        },
        end: {
          line: 246,
          column: 63
        }
      },
      "78": {
        start: {
          line: 247,
          column: 60
        },
        end: {
          line: 250,
          column: 43
        }
      },
      "79": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 260,
          column: 9
        }
      },
      "80": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 254,
          column: 15
        }
      },
      "81": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 259,
          column: 15
        }
      },
      "82": {
        start: {
          line: 262,
          column: 31
        },
        end: {
          line: 272,
          column: 15
        }
      },
      "83": {
        start: {
          line: 262,
          column: 57
        },
        end: {
          line: 272,
          column: 13
        }
      },
      "84": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 279,
          column: 9
        }
      },
      "85": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 94
        }
      },
      "86": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 278,
          column: 15
        }
      },
      "87": {
        start: {
          line: 281,
          column: 29
        },
        end: {
          line: 281,
          column: 51
        }
      },
      "88": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 282,
          column: 95
        }
      },
      "89": {
        start: {
          line: 283,
          column: 25
        },
        end: {
          line: 295,
          column: 9
        }
      },
      "90": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 303,
          column: 11
        }
      },
      "91": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 304,
          column: 51
        }
      },
      "92": {
        start: {
          line: 306,
          column: 29
        },
        end: {
          line: 306,
          column: 51
        }
      },
      "93": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 95
        }
      },
      "94": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 310,
          column: 11
        }
      },
      "95": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 311,
          column: 20
        }
      },
      "96": {
        start: {
          line: 318,
          column: 22
        },
        end: {
          line: 318,
          column: 32
        }
      },
      "97": {
        start: {
          line: 319,
          column: 4
        },
        end: {
          line: 418,
          column: 5
        }
      },
      "98": {
        start: {
          line: 321,
          column: 21
        },
        end: {
          line: 321,
          column: 41
        }
      },
      "99": {
        start: {
          line: 322,
          column: 33
        },
        end: {
          line: 322,
          column: 65
        }
      },
      "100": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 330,
          column: 9
        }
      },
      "101": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 329,
          column: 15
        }
      },
      "102": {
        start: {
          line: 331,
          column: 51
        },
        end: {
          line: 331,
          column: 72
        }
      },
      "103": {
        start: {
          line: 333,
          column: 20
        },
        end: {
          line: 359,
          column: 8
        }
      },
      "104": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 363,
          column: 9
        }
      },
      "105": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 362,
          column: 55
        }
      },
      "106": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 366,
          column: 9
        }
      },
      "107": {
        start: {
          line: 365,
          column: 12
        },
        end: {
          line: 365,
          column: 71
        }
      },
      "108": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 369,
          column: 9
        }
      },
      "109": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 368,
          column: 63
        }
      },
      "110": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 372,
          column: 9
        }
      },
      "111": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 371,
          column: 61
        }
      },
      "112": {
        start: {
          line: 374,
          column: 40
        },
        end: {
          line: 376,
          column: 22
        }
      },
      "113": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 386,
          column: 9
        }
      },
      "114": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 380,
          column: 15
        }
      },
      "115": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 385,
          column: 15
        }
      },
      "116": {
        start: {
          line: 388,
          column: 29
        },
        end: {
          line: 388,
          column: 51
        }
      },
      "117": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 389,
          column: 101
        }
      },
      "118": {
        start: {
          line: 390,
          column: 25
        },
        end: {
          line: 402,
          column: 9
        }
      },
      "119": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 409,
          column: 11
        }
      },
      "120": {
        start: {
          line: 410,
          column: 8
        },
        end: {
          line: 410,
          column: 51
        }
      },
      "121": {
        start: {
          line: 412,
          column: 29
        },
        end: {
          line: 412,
          column: 51
        }
      },
      "122": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 413,
          column: 88
        }
      },
      "123": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 416,
          column: 11
        }
      },
      "124": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 417,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 16
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "validateStateTransition",
        decl: {
          start: {
            line: 88,
            column: 9
          },
          end: {
            line: 88,
            column: 32
          }
        },
        loc: {
          start: {
            line: 88,
            column: 59
          },
          end: {
            line: 93,
            column: 1
          }
        },
        line: 88
      },
      "4": {
        name: "validateAdminAuth",
        decl: {
          start: {
            line: 97,
            column: 15
          },
          end: {
            line: 97,
            column: 32
          }
        },
        loc: {
          start: {
            line: 97,
            column: 35
          },
          end: {
            line: 134,
            column: 1
          }
        },
        line: 97
      },
      "5": {
        name: "POST",
        decl: {
          start: {
            line: 135,
            column: 15
          },
          end: {
            line: 135,
            column: 19
          }
        },
        loc: {
          start: {
            line: 135,
            column: 29
          },
          end: {
            line: 184,
            column: 1
          }
        },
        line: 135
      },
      "6": {
        name: "handleBulkStatusUpdate",
        decl: {
          start: {
            line: 188,
            column: 15
          },
          end: {
            line: 188,
            column: 37
          }
        },
        loc: {
          start: {
            line: 188,
            column: 59
          },
          end: {
            line: 313,
            column: 1
          }
        },
        line: 188
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 246,
            column: 46
          },
          end: {
            line: 246,
            column: 47
          }
        },
        loc: {
          start: {
            line: 246,
            column: 55
          },
          end: {
            line: 246,
            column: 63
          }
        },
        line: 246
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 262,
            column: 47
          },
          end: {
            line: 262,
            column: 48
          }
        },
        loc: {
          start: {
            line: 262,
            column: 57
          },
          end: {
            line: 272,
            column: 13
          }
        },
        line: 262
      },
      "9": {
        name: "handleBulkExport",
        decl: {
          start: {
            line: 317,
            column: 15
          },
          end: {
            line: 317,
            column: 31
          }
        },
        loc: {
          start: {
            line: 317,
            column: 53
          },
          end: {
            line: 419,
            column: 1
          }
        },
        line: 317
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "1": {
        loc: {
          start: {
            line: 92,
            column: 11
          },
          end: {
            line: 92,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 11
          },
          end: {
            line: 92,
            column: 63
          }
        }, {
          start: {
            line: 92,
            column: 67
          },
          end: {
            line: 92,
            column: 72
          }
        }],
        line: 92
      },
      "2": {
        loc: {
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "3": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "4": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "5": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "6": {
        loc: {
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "7": {
        loc: {
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        }, {
          start: {
            line: 163,
            column: 15
          },
          end: {
            line: 171,
            column: 9
          }
        }],
        line: 161
      },
      "8": {
        loc: {
          start: {
            line: 163,
            column: 15
          },
          end: {
            line: 171,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 15
          },
          end: {
            line: 171,
            column: 9
          }
        }, {
          start: {
            line: 165,
            column: 15
          },
          end: {
            line: 171,
            column: 9
          }
        }],
        line: 163
      },
      "9": {
        loc: {
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "10": {
        loc: {
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "11": {
        loc: {
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "12": {
        loc: {
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 215,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 215,
            column: 26
          }
        }, {
          start: {
            line: 215,
            column: 30
          },
          end: {
            line: 215,
            column: 56
          }
        }],
        line: 215
      },
      "13": {
        loc: {
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 235,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 235,
            column: 13
          }
        }, {
          start: {
            line: 228,
            column: 19
          },
          end: {
            line: 235,
            column: 13
          }
        }],
        line: 226
      },
      "14": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "15": {
        loc: {
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 260,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 260,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "16": {
        loc: {
          start: {
            line: 323,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 323,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 323
      },
      "17": {
        loc: {
          start: {
            line: 349,
            column: 10
          },
          end: {
            line: 358,
            column: 15
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 349,
            column: 26
          },
          end: {
            line: 358,
            column: 10
          }
        }, {
          start: {
            line: 358,
            column: 13
          },
          end: {
            line: 358,
            column: 15
          }
        }],
        line: 349
      },
      "18": {
        loc: {
          start: {
            line: 361,
            column: 8
          },
          end: {
            line: 363,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 361,
            column: 8
          },
          end: {
            line: 363,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 361
      },
      "19": {
        loc: {
          start: {
            line: 364,
            column: 8
          },
          end: {
            line: 366,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 364,
            column: 8
          },
          end: {
            line: 366,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 364
      },
      "20": {
        loc: {
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 369,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 369,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "21": {
        loc: {
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 372,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 372,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 370
      },
      "22": {
        loc: {
          start: {
            line: 377,
            column: 8
          },
          end: {
            line: 386,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 377,
            column: 8
          },
          end: {
            line: 386,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 377
      },
      "23": {
        loc: {
          start: {
            line: 395,
            column: 35
          },
          end: {
            line: 395,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 395,
            column: 35
          },
          end: {
            line: 395,
            column: 49
          }
        }, {
          start: {
            line: 395,
            column: 53
          },
          end: {
            line: 395,
            column: 54
          }
        }],
        line: 395
      },
      "24": {
        loc: {
          start: {
            line: 405,
            column: 26
          },
          end: {
            line: 405,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 405,
            column: 26
          },
          end: {
            line: 405,
            column: 40
          }
        }, {
          start: {
            line: 405,
            column: 44
          },
          end: {
            line: 405,
            column: 45
          }
        }],
        line: 405
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\orders\\bulk\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - ADMIN BULK ORDERS API ENTERPRISE\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { ApiResponse } from '@/types/api';\r\nimport { z } from 'zod';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\nimport { checkRateLimit } from '@/lib/auth/rate-limiting';\r\nimport { addRateLimitHeaders, RATE_LIMIT_CONFIGS } from '@/lib/enterprise/rate-limiter';\r\nimport { metricsCollector } from '@/lib/enterprise/metrics';\r\n\r\n// ===================================\r\n// SCHEMAS DE VALIDACI\xD3N\r\n// ===================================\r\n\r\nconst BulkStatusUpdateSchema = z.object({\r\n  order_ids: z.array(z.string().uuid()).min(1, 'Al menos una orden es requerida').max(100, 'M\xE1ximo 100 \xF3rdenes por operaci\xF3n'),\r\n  status: z.enum(['pending', 'confirmed', 'processing', 'shipped', 'delivered', 'cancelled', 'refunded']),\r\n  reason: z.string().min(1, 'Raz\xF3n del cambio es requerida').max(500, 'Raz\xF3n muy larga'),\r\n  notify_customers: z.boolean().default(false),\r\n});\r\n\r\nconst BulkExportSchema = z.object({\r\n  format: z.enum(['csv', 'json']).default('csv'),\r\n  filters: z.object({\r\n    status: z.string().optional(),\r\n    payment_status: z.string().optional(),\r\n    date_from: z.string().optional(),\r\n    date_to: z.string().optional(),\r\n  }).optional(),\r\n  include_items: z.boolean().default(true),\r\n});\r\n\r\n// ===================================\r\n// VALIDACIONES DE TRANSICI\xD3N DE ESTADOS\r\n// ===================================\r\n\r\nconst stateTransitions: Record<string, string[]> = {\r\n  pending: ['confirmed', 'cancelled'],\r\n  confirmed: ['processing', 'cancelled'],\r\n  processing: ['shipped', 'cancelled'],\r\n  shipped: ['delivered', 'returned'],\r\n  delivered: ['returned'],\r\n  cancelled: [],\r\n  refunded: [],\r\n  returned: ['refunded']\r\n};\r\n\r\nfunction validateStateTransition(currentStatus: string, newStatus: string): boolean {\r\n  if (currentStatus === newStatus) {return false;}\r\n  return stateTransitions[currentStatus]?.includes(newStatus) || false;\r\n}\r\n\r\n// ===================================\r\n// MIDDLEWARE DE AUTENTICACI\xD3N ADMIN\r\n// ===================================\r\n\r\nasync function validateAdminAuth() {\r\n  try {\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return { error: 'Usuario no autenticado', status: 401 };\r\n    }\r\n\r\n    const user = session?.user;\r\n    if (!session?.user) {\r\n      return { error: 'Usuario no encontrado', status: 401 };\r\n    }\r\n\r\n    // Verificar si es admin\r\n    const isAdmin = session.user.email === 'santiago@xor.com.ar';\r\n    if (!isAdmin) {\r\n      return { error: 'Acceso denegado - Se requieren permisos de administrador', status: 403 };\r\n    }\r\n\r\n    return { user: session.user, userId: session.user.id };\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.AUTH, 'Error en validaci\xF3n admin', { error });\r\n    return { error: 'Error de autenticaci\xF3n', status: 500 };\r\n  }\r\n}\r\n\r\n// ===================================\r\n// POST - Operaciones masivas\r\n// ===================================\r\nexport async function POST(request: NextRequest) {\r\n  const startTime = Date.now();\r\n  \r\n  try {\r\n    // Rate limiting m\xE1s estricto para operaciones masivas\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      10, // M\xE1ximo 10 operaciones masivas por hora\r\n      3600000, // 1 hora\r\n      'admin-bulk-operations'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: 'Demasiadas operaciones masivas. L\xEDmite: 10 por hora' },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult);\r\n      return response;\r\n    }\r\n\r\n    // Validar autenticaci\xF3n admin\r\n    const authResult = await validateAdminAuth();\r\n    if ('error' in authResult) {\r\n      return NextResponse.json(\r\n        { error: authResult.error },\r\n        { status: authResult.status }\r\n      );\r\n    }\r\n\r\n    // Obtener tipo de operaci\xF3n\r\n    const { searchParams } = new URL(request.url);\r\n    const operation = searchParams.get('operation');\r\n\r\n    if (operation === 'status_update') {\r\n      return await handleBulkStatusUpdate(request, authResult);\r\n    } else if (operation === 'export') {\r\n      return await handleBulkExport(request, authResult);\r\n    } else {\r\n      return NextResponse.json(\r\n        { error: 'Operaci\xF3n no v\xE1lida. Operaciones disponibles: status_update, export' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n  } catch (error) {\r\n    const responseTime = Date.now() - startTime;\r\n    metricsCollector.recordApiCall('admin-bulk-operations', responseTime, 500);\r\n    \r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en POST /api/admin/orders/bulk', { error });\r\n    \r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// ===================================\r\n// ACTUALIZACI\xD3N MASIVA DE ESTADOS\r\n// ===================================\r\nasync function handleBulkStatusUpdate(request: NextRequest, authResult: any) {\r\n  const startTime = Date.now();\r\n  \r\n  try {\r\n    // Validar datos de entrada\r\n    const body = await request.json();\r\n    const validationResult = BulkStatusUpdateSchema.safeParse(body);\r\n\r\n    if (!validationResult.success) {\r\n      return NextResponse.json(\r\n        { error: 'Datos de operaci\xF3n masiva inv\xE1lidos', details: validationResult.error.errors },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const { order_ids, status: newStatus, reason, notify_customers } = validationResult.data;\r\n\r\n    // Obtener \xF3rdenes actuales para validar transiciones\r\n    const { data: currentOrders, error: fetchError } = await supabaseAdmin\r\n      .from('orders')\r\n      .select('id, status, order_number')\r\n      .in('id', order_ids);\r\n\r\n    if (fetchError) {\r\n      logger.log(LogLevel.ERROR, LogCategory.DATABASE, 'Error al obtener \xF3rdenes para bulk update', { fetchError });\r\n      return NextResponse.json(\r\n        { error: 'Error al obtener \xF3rdenes' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    if (!currentOrders || currentOrders.length === 0) {\r\n      return NextResponse.json(\r\n        { error: 'No se encontraron \xF3rdenes con los IDs proporcionados' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Validar transiciones para cada orden\r\n    const validOrders = [];\r\n    const invalidOrders = [];\r\n\r\n    for (const order of currentOrders) {\r\n      if (validateStateTransition(order.status, newStatus)) {\r\n        validOrders.push(order);\r\n      } else {\r\n        invalidOrders.push({\r\n          id: order.id,\r\n          order_number: order.order_number,\r\n          current_status: order.status,\r\n          reason: `Transici\xF3n no permitida: ${order.status} \u2192 ${newStatus}`\r\n        });\r\n      }\r\n    }\r\n\r\n    if (validOrders.length === 0) {\r\n      return NextResponse.json(\r\n        { \r\n          error: 'Ninguna orden puede cambiar al estado solicitado',\r\n          invalid_orders: invalidOrders\r\n        },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Actualizar \xF3rdenes v\xE1lidas\r\n    const validOrderIds = validOrders.map(order => order.id);\r\n    const { data: updatedOrders, error: updateError } = await supabaseAdmin\r\n      .from('orders')\r\n      .update({\r\n        status: newStatus,\r\n        updated_at: new Date().toISOString(),\r\n      })\r\n      .in('id', validOrderIds)\r\n      .select();\r\n\r\n    if (updateError) {\r\n      logger.log(LogLevel.ERROR, LogCategory.DATABASE, 'Error en actualizaci\xF3n masiva', { updateError });\r\n      return NextResponse.json(\r\n        { error: 'Error al actualizar \xF3rdenes' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Registrar cambios en historial\r\n    const historyEntries = validOrders.map(order => ({\r\n      order_id: order.id,\r\n      previous_status: order.status,\r\n      new_status: newStatus,\r\n      changed_by: authResult.user.id,\r\n      reason: `Cambio masivo: ${reason}`,\r\n      metadata: JSON.stringify({\r\n        bulk_operation: true,\r\n        total_orders: validOrders.length,\r\n      }),\r\n    }));\r\n\r\n    try {\r\n      await supabaseAdmin\r\n        .from('order_status_history')\r\n        .insert(historyEntries);\r\n    } catch (historyError) {\r\n      logger.log(LogLevel.WARN, LogCategory.DATABASE, 'No se pudo registrar historial masivo', { historyError });\r\n    }\r\n\r\n    // M\xE9tricas de performance\r\n    const responseTime = Date.now() - startTime;\r\n    metricsCollector.recordApiCall('admin-bulk-status-update', responseTime, 200);\r\n\r\n    const response: ApiResponse<{\r\n      updated_orders: typeof updatedOrders;\r\n      invalid_orders: typeof invalidOrders;\r\n      summary: {\r\n        total_requested: number;\r\n        successfully_updated: number;\r\n        failed_updates: number;\r\n      };\r\n    }> = {\r\n      data: {\r\n        updated_orders: updatedOrders,\r\n        invalid_orders: invalidOrders,\r\n        summary: {\r\n          total_requested: order_ids.length,\r\n          successfully_updated: validOrders.length,\r\n          failed_updates: invalidOrders.length,\r\n        },\r\n      },\r\n      success: true,\r\n      error: null,\r\n    };\r\n\r\n    logger.log(LogLevel.INFO, LogCategory.API, 'Actualizaci\xF3n masiva de estados completada', {\r\n      totalRequested: order_ids.length,\r\n      successfullyUpdated: validOrders.length,\r\n      failedUpdates: invalidOrders.length,\r\n      newStatus,\r\n      adminId: authResult.user.id,\r\n      responseTime,\r\n    });\r\n\r\n    return NextResponse.json(response);\r\n\r\n  } catch (error) {\r\n    const responseTime = Date.now() - startTime;\r\n    metricsCollector.recordApiCall('admin-bulk-status-update', responseTime, 500);\r\n    \r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en bulk status update', { error });\r\n    throw error;\r\n  }\r\n}\r\n\r\n// ===================================\r\n// EXPORTACI\xD3N MASIVA DE DATOS\r\n// ===================================\r\nasync function handleBulkExport(request: NextRequest, authResult: any) {\r\n  const startTime = Date.now();\r\n  \r\n  try {\r\n    // Validar datos de entrada\r\n    const body = await request.json();\r\n    const validationResult = BulkExportSchema.safeParse(body);\r\n\r\n    if (!validationResult.success) {\r\n      return NextResponse.json(\r\n        { error: 'Par\xE1metros de exportaci\xF3n inv\xE1lidos', details: validationResult.error.errors },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const { format, filters, include_items } = validationResult.data;\r\n\r\n    // Construir query base\r\n    let query = supabaseAdmin\r\n      .from('orders')\r\n      .select(`\r\n        id,\r\n        order_number,\r\n        status,\r\n        payment_status,\r\n        total,\r\n        currency,\r\n        created_at,\r\n        updated_at,\r\n        shipping_address,\r\n        notes,\r\n        user_profiles!orders_user_id_fkey (\r\n          name,\r\n          email,\r\n          phone\r\n        )\r\n        ${include_items ? `,\r\n        order_items (\r\n          quantity,\r\n          unit_price,\r\n          total_price,\r\n          products (\r\n            name,\r\n            sku\r\n          )\r\n        )` : ''}\r\n      `);\r\n\r\n    // Aplicar filtros\r\n    if (filters?.status) {\r\n      query = query.eq('status', filters.status);\r\n    }\r\n\r\n    if (filters?.payment_status) {\r\n      query = query.eq('payment_status', filters.payment_status);\r\n    }\r\n\r\n    if (filters?.date_from) {\r\n      query = query.gte('created_at', filters.date_from);\r\n    }\r\n\r\n    if (filters?.date_to) {\r\n      query = query.lte('created_at', filters.date_to);\r\n    }\r\n\r\n    // Limitar a 1000 \xF3rdenes m\xE1ximo para evitar timeouts\r\n    const { data: orders, error } = await query\r\n      .order('created_at', { ascending: false })\r\n      .limit(1000);\r\n\r\n    if (error) {\r\n      logger.log(LogLevel.ERROR, LogCategory.DATABASE, 'Error al exportar \xF3rdenes', { error });\r\n      return NextResponse.json(\r\n        { error: 'Error al obtener datos para exportaci\xF3n' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // M\xE9tricas de performance\r\n    const responseTime = Date.now() - startTime;\r\n    await metricsCollector.recordRequest('admin-bulk-export', 'GET', 200, responseTime);\r\n\r\n    const response: ApiResponse<{\r\n      orders: typeof orders;\r\n      export_info: {\r\n        format: string;\r\n        total_records: number;\r\n        generated_at: string;\r\n        filters_applied: typeof filters;\r\n      };\r\n    }> = {\r\n      data: {\r\n        orders,\r\n        export_info: {\r\n          format,\r\n          total_records: orders?.length || 0,\r\n          generated_at: new Date().toISOString(),\r\n          filters_applied: filters,\r\n        },\r\n      },\r\n      success: true,\r\n      error: null,\r\n    };\r\n\r\n    logger.log(LogLevel.INFO, LogCategory.API, 'Exportaci\xF3n masiva completada', {\r\n      format,\r\n      totalRecords: orders?.length || 0,\r\n      includeItems: include_items,\r\n      adminId: authResult.user.id,\r\n      responseTime,\r\n    });\r\n\r\n    return NextResponse.json(response);\r\n\r\n  } catch (error) {\r\n    const responseTime = Date.now() - startTime;\r\n    metricsCollector.recordApiCall('admin-bulk-export', responseTime, 500);\r\n    \r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en bulk export', { error });\r\n    throw error;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["POST", "runtime", "BulkStatusUpdateSchema", "z", "object", "order_ids", "array", "string", "uuid", "min", "max", "status", "enum", "reason", "notify_customers", "boolean", "default", "BulkExportSchema", "format", "filters", "optional", "payment_status", "date_from", "date_to", "include_items", "stateTransitions", "pending", "confirmed", "processing", "shipped", "delivered", "cancelled", "refunded", "returned", "validateStateTransition", "currentStatus", "newStatus", "includes", "validateAdminAuth", "session", "auth", "user", "error", "isAdmin", "email", "userId", "id", "logger", "log", "LogLevel", "ERROR", "LogCategory", "AUTH", "request", "startTime", "Date", "now", "rateLimitResult", "checkRateLimit", "success", "response", "NextResponse", "json", "addRateLimitHeaders", "authResult", "searchParams", "URL", "url", "operation", "get", "handleBulkStatusUpdate", "handleBulkExport", "responseTime", "metricsCollector", "recordApiCall", "API", "body", "validationResult", "safeParse", "details", "errors", "data", "currentOrders", "fetchError", "supabaseAdmin", "from", "select", "in", "DATABASE", "length", "validOrders", "invalidOrders", "order", "push", "order_number", "current_status", "invalid_orders", "validOrderIds", "map", "updatedOrders", "updateError", "update", "updated_at", "toISOString", "historyEntries", "order_id", "previous_status", "new_status", "changed_by", "metadata", "JSON", "stringify", "bulk_operation", "total_orders", "insert", "historyError", "WARN", "updated_orders", "summary", "total_requested", "successfully_updated", "failed_updates", "INFO", "totalRequested", "successfullyUpdated", "failedUpdates", "adminId", "query", "eq", "gte", "lte", "orders", "ascending", "limit", "recordRequest", "export_info", "total_records", "generated_at", "filters_applied", "totalRecords", "includeItems"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QA2FfA;eAAAA;;QA1FTC;eAAAA;;;wBAM6B;0BACZ;wBACT;qBAEH;wBAC4B;8BACf;6BACyB;yBACvB;AAd1B,MAAMA,UAAU;AAgBvB,sCAAsC;AACtC,wBAAwB;AACxB,sCAAsC;AAEtC,MAAMC,yBAAyBC,MAAC,CAACC,MAAM,CAAC;IACtCC,WAAWF,MAAC,CAACG,KAAK,CAACH,MAAC,CAACI,MAAM,GAAGC,IAAI,IAAIC,GAAG,CAAC,GAAG,mCAAmCC,GAAG,CAAC,KAAK;IACzFC,QAAQR,MAAC,CAACS,IAAI,CAAC;QAAC;QAAW;QAAa;QAAc;QAAW;QAAa;QAAa;KAAW;IACtGC,QAAQV,MAAC,CAACI,MAAM,GAAGE,GAAG,CAAC,GAAG,iCAAiCC,GAAG,CAAC,KAAK;IACpEI,kBAAkBX,MAAC,CAACY,OAAO,GAAGC,OAAO,CAAC;AACxC;AAEA,MAAMC,mBAAmBd,MAAC,CAACC,MAAM,CAAC;IAChCc,QAAQf,MAAC,CAACS,IAAI,CAAC;QAAC;QAAO;KAAO,EAAEI,OAAO,CAAC;IACxCG,SAAShB,MAAC,CAACC,MAAM,CAAC;QAChBO,QAAQR,MAAC,CAACI,MAAM,GAAGa,QAAQ;QAC3BC,gBAAgBlB,MAAC,CAACI,MAAM,GAAGa,QAAQ;QACnCE,WAAWnB,MAAC,CAACI,MAAM,GAAGa,QAAQ;QAC9BG,SAASpB,MAAC,CAACI,MAAM,GAAGa,QAAQ;IAC9B,GAAGA,QAAQ;IACXI,eAAerB,MAAC,CAACY,OAAO,GAAGC,OAAO,CAAC;AACrC;AAEA,sCAAsC;AACtC,wCAAwC;AACxC,sCAAsC;AAEtC,MAAMS,mBAA6C;IACjDC,SAAS;QAAC;QAAa;KAAY;IACnCC,WAAW;QAAC;QAAc;KAAY;IACtCC,YAAY;QAAC;QAAW;KAAY;IACpCC,SAAS;QAAC;QAAa;KAAW;IAClCC,WAAW;QAAC;KAAW;IACvBC,WAAW,EAAE;IACbC,UAAU,EAAE;IACZC,UAAU;QAAC;KAAW;AACxB;AAEA,SAASC,wBAAwBC,aAAqB,EAAEC,SAAiB;IACvE,IAAID,kBAAkBC,WAAW;QAAC,OAAO;IAAM;IAC/C,OAAOX,gBAAgB,CAACU,cAAc,EAAEE,SAASD,cAAc;AACjE;AAEA,sCAAsC;AACtC,oCAAoC;AACpC,sCAAsC;AAEtC,eAAeE;IACb,IAAI;QACF,MAAMC,UAAU,MAAMC,IAAAA,YAAI;QAC1B,IAAI,CAACD,SAASE,MAAM;YAClB,OAAO;gBAAEC,OAAO;gBAA0B/B,QAAQ;YAAI;QACxD;QAEA,MAAM8B,OAAOF,SAASE;QACtB,IAAI,CAACF,SAASE,MAAM;YAClB,OAAO;gBAAEC,OAAO;gBAAyB/B,QAAQ;YAAI;QACvD;QAEA,wBAAwB;QACxB,MAAMgC,UAAUJ,QAAQE,IAAI,CAACG,KAAK,KAAK;QACvC,IAAI,CAACD,SAAS;YACZ,OAAO;gBAAED,OAAO;gBAA4D/B,QAAQ;YAAI;QAC1F;QAEA,OAAO;YAAE8B,MAAMF,QAAQE,IAAI;YAAEI,QAAQN,QAAQE,IAAI,CAACK,EAAE;QAAC;IACvD,EAAE,OAAOJ,OAAO;QACdK,cAAM,CAACC,GAAG,CAACC,gBAAQ,CAACC,KAAK,EAAEC,mBAAW,CAACC,IAAI,EAAE,6BAA6B;YAAEV;QAAM;QAClF,OAAO;YAAEA,OAAO;YAA0B/B,QAAQ;QAAI;IACxD;AACF;AAKO,eAAeX,KAAKqD,OAAoB;IAC7C,MAAMC,YAAYC,KAAKC,GAAG;IAE1B,IAAI;QACF,sDAAsD;QACtD,MAAMC,kBAAkB,MAAMC,IAAAA,4BAAc,EAC1CL,SACA,IACA,SACA;QAGF,IAAI,CAACI,gBAAgBE,OAAO,EAAE;YAC5B,MAAMC,WAAWC,oBAAY,CAACC,IAAI,CAChC;gBAAEpB,OAAO;YAAsD,GAC/D;gBAAE/B,QAAQ;YAAI;YAEhBoD,IAAAA,gCAAmB,EAACH,UAAUH;YAC9B,OAAOG;QACT;QAEA,8BAA8B;QAC9B,MAAMI,aAAa,MAAM1B;QACzB,IAAI,WAAW0B,YAAY;YACzB,OAAOH,oBAAY,CAACC,IAAI,CACtB;gBAAEpB,OAAOsB,WAAWtB,KAAK;YAAC,GAC1B;gBAAE/B,QAAQqD,WAAWrD,MAAM;YAAC;QAEhC;QAEA,4BAA4B;QAC5B,MAAM,EAAEsD,YAAY,EAAE,GAAG,IAAIC,IAAIb,QAAQc,GAAG;QAC5C,MAAMC,YAAYH,aAAaI,GAAG,CAAC;QAEnC,IAAID,cAAc,iBAAiB;YACjC,OAAO,MAAME,uBAAuBjB,SAASW;QAC/C,OAAO,IAAII,cAAc,UAAU;YACjC,OAAO,MAAMG,iBAAiBlB,SAASW;QACzC,OAAO;YACL,OAAOH,oBAAY,CAACC,IAAI,CACtB;gBAAEpB,OAAO;YAAsE,GAC/E;gBAAE/B,QAAQ;YAAI;QAElB;IAEF,EAAE,OAAO+B,OAAO;QACd,MAAM8B,eAAejB,KAAKC,GAAG,KAAKF;QAClCmB,yBAAgB,CAACC,aAAa,CAAC,yBAAyBF,cAAc;QAEtEzB,cAAM,CAACC,GAAG,CAACC,gBAAQ,CAACC,KAAK,EAAEC,mBAAW,CAACwB,GAAG,EAAE,wCAAwC;YAAEjC;QAAM;QAE5F,OAAOmB,oBAAY,CAACC,IAAI,CACtB;YAAEpB,OAAO;QAA6B,GACtC;YAAE/B,QAAQ;QAAI;IAElB;AACF;AAEA,sCAAsC;AACtC,kCAAkC;AAClC,sCAAsC;AACtC,eAAe2D,uBAAuBjB,OAAoB,EAAEW,UAAe;IACzE,MAAMV,YAAYC,KAAKC,GAAG;IAE1B,IAAI;QACF,2BAA2B;QAC3B,MAAMoB,OAAO,MAAMvB,QAAQS,IAAI;QAC/B,MAAMe,mBAAmB3E,uBAAuB4E,SAAS,CAACF;QAE1D,IAAI,CAACC,iBAAiBlB,OAAO,EAAE;YAC7B,OAAOE,oBAAY,CAACC,IAAI,CACtB;gBAAEpB,OAAO;gBAAuCqC,SAASF,iBAAiBnC,KAAK,CAACsC,MAAM;YAAC,GACvF;gBAAErE,QAAQ;YAAI;QAElB;QAEA,MAAM,EAAEN,SAAS,EAAEM,QAAQyB,SAAS,EAAEvB,MAAM,EAAEC,gBAAgB,EAAE,GAAG+D,iBAAiBI,IAAI;QAExF,qDAAqD;QACrD,MAAM,EAAEA,MAAMC,aAAa,EAAExC,OAAOyC,UAAU,EAAE,GAAG,MAAMC,uBAAa,CACnEC,IAAI,CAAC,UACLC,MAAM,CAAC,4BACPC,EAAE,CAAC,MAAMlF;QAEZ,IAAI8E,YAAY;YACdpC,cAAM,CAACC,GAAG,CAACC,gBAAQ,CAACC,KAAK,EAAEC,mBAAW,CAACqC,QAAQ,EAAE,6CAA6C;gBAAEL;YAAW;YAC3G,OAAOtB,oBAAY,CAACC,IAAI,CACtB;gBAAEpB,OAAO;YAA2B,GACpC;gBAAE/B,QAAQ;YAAI;QAElB;QAEA,IAAI,CAACuE,iBAAiBA,cAAcO,MAAM,KAAK,GAAG;YAChD,OAAO5B,oBAAY,CAACC,IAAI,CACtB;gBAAEpB,OAAO;YAAuD,GAChE;gBAAE/B,QAAQ;YAAI;QAElB;QAEA,uCAAuC;QACvC,MAAM+E,cAAc,EAAE;QACtB,MAAMC,gBAAgB,EAAE;QAExB,KAAK,MAAMC,SAASV,cAAe;YACjC,IAAIhD,wBAAwB0D,MAAMjF,MAAM,EAAEyB,YAAY;gBACpDsD,YAAYG,IAAI,CAACD;YACnB,OAAO;gBACLD,cAAcE,IAAI,CAAC;oBACjB/C,IAAI8C,MAAM9C,EAAE;oBACZgD,cAAcF,MAAME,YAAY;oBAChCC,gBAAgBH,MAAMjF,MAAM;oBAC5BE,QAAQ,CAAC,yBAAyB,EAAE+E,MAAMjF,MAAM,CAAC,GAAG,EAAEyB,WAAW;gBACnE;YACF;QACF;QAEA,IAAIsD,YAAYD,MAAM,KAAK,GAAG;YAC5B,OAAO5B,oBAAY,CAACC,IAAI,CACtB;gBACEpB,OAAO;gBACPsD,gBAAgBL;YAClB,GACA;gBAAEhF,QAAQ;YAAI;QAElB;QAEA,6BAA6B;QAC7B,MAAMsF,gBAAgBP,YAAYQ,GAAG,CAACN,CAAAA,QAASA,MAAM9C,EAAE;QACvD,MAAM,EAAEmC,MAAMkB,aAAa,EAAEzD,OAAO0D,WAAW,EAAE,GAAG,MAAMhB,uBAAa,CACpEC,IAAI,CAAC,UACLgB,MAAM,CAAC;YACN1F,QAAQyB;YACRkE,YAAY,IAAI/C,OAAOgD,WAAW;QACpC,GACChB,EAAE,CAAC,MAAMU,eACTX,MAAM;QAET,IAAIc,aAAa;YACfrD,cAAM,CAACC,GAAG,CAACC,gBAAQ,CAACC,KAAK,EAAEC,mBAAW,CAACqC,QAAQ,EAAE,iCAAiC;gBAAEY;YAAY;YAChG,OAAOvC,oBAAY,CAACC,IAAI,CACtB;gBAAEpB,OAAO;YAA8B,GACvC;gBAAE/B,QAAQ;YAAI;QAElB;QAEA,iCAAiC;QACjC,MAAM6F,iBAAiBd,YAAYQ,GAAG,CAACN,CAAAA,QAAU,CAAA;gBAC/Ca,UAAUb,MAAM9C,EAAE;gBAClB4D,iBAAiBd,MAAMjF,MAAM;gBAC7BgG,YAAYvE;gBACZwE,YAAY5C,WAAWvB,IAAI,CAACK,EAAE;gBAC9BjC,QAAQ,CAAC,eAAe,EAAEA,QAAQ;gBAClCgG,UAAUC,KAAKC,SAAS,CAAC;oBACvBC,gBAAgB;oBAChBC,cAAcvB,YAAYD,MAAM;gBAClC;YACF,CAAA;QAEA,IAAI;YACF,MAAML,uBAAa,CAChBC,IAAI,CAAC,wBACL6B,MAAM,CAACV;QACZ,EAAE,OAAOW,cAAc;YACrBpE,cAAM,CAACC,GAAG,CAACC,gBAAQ,CAACmE,IAAI,EAAEjE,mBAAW,CAACqC,QAAQ,EAAE,yCAAyC;gBAAE2B;YAAa;QAC1G;QAEA,0BAA0B;QAC1B,MAAM3C,eAAejB,KAAKC,GAAG,KAAKF;QAClCmB,yBAAgB,CAACC,aAAa,CAAC,4BAA4BF,cAAc;QAEzE,MAAMZ,WAQD;YACHqB,MAAM;gBACJoC,gBAAgBlB;gBAChBH,gBAAgBL;gBAChB2B,SAAS;oBACPC,iBAAiBlH,UAAUoF,MAAM;oBACjC+B,sBAAsB9B,YAAYD,MAAM;oBACxCgC,gBAAgB9B,cAAcF,MAAM;gBACtC;YACF;YACA9B,SAAS;YACTjB,OAAO;QACT;QAEAK,cAAM,CAACC,GAAG,CAACC,gBAAQ,CAACyE,IAAI,EAAEvE,mBAAW,CAACwB,GAAG,EAAE,8CAA8C;YACvFgD,gBAAgBtH,UAAUoF,MAAM;YAChCmC,qBAAqBlC,YAAYD,MAAM;YACvCoC,eAAelC,cAAcF,MAAM;YACnCrD;YACA0F,SAAS9D,WAAWvB,IAAI,CAACK,EAAE;YAC3B0B;QACF;QAEA,OAAOX,oBAAY,CAACC,IAAI,CAACF;IAE3B,EAAE,OAAOlB,OAAO;QACd,MAAM8B,eAAejB,KAAKC,GAAG,KAAKF;QAClCmB,yBAAgB,CAACC,aAAa,CAAC,4BAA4BF,cAAc;QAEzEzB,cAAM,CAACC,GAAG,CAACC,gBAAQ,CAACC,KAAK,EAAEC,mBAAW,CAACwB,GAAG,EAAE,+BAA+B;YAAEjC;QAAM;QACnF,MAAMA;IACR;AACF;AAEA,sCAAsC;AACtC,8BAA8B;AAC9B,sCAAsC;AACtC,eAAe6B,iBAAiBlB,OAAoB,EAAEW,UAAe;IACnE,MAAMV,YAAYC,KAAKC,GAAG;IAE1B,IAAI;QACF,2BAA2B;QAC3B,MAAMoB,OAAO,MAAMvB,QAAQS,IAAI;QAC/B,MAAMe,mBAAmB5D,iBAAiB6D,SAAS,CAACF;QAEpD,IAAI,CAACC,iBAAiBlB,OAAO,EAAE;YAC7B,OAAOE,oBAAY,CAACC,IAAI,CACtB;gBAAEpB,OAAO;gBAAuCqC,SAASF,iBAAiBnC,KAAK,CAACsC,MAAM;YAAC,GACvF;gBAAErE,QAAQ;YAAI;QAElB;QAEA,MAAM,EAAEO,MAAM,EAAEC,OAAO,EAAEK,aAAa,EAAE,GAAGqD,iBAAiBI,IAAI;QAEhE,uBAAuB;QACvB,IAAI8C,QAAQ3C,uBAAa,CACtBC,IAAI,CAAC,UACLC,MAAM,CAAC,CAAC;;;;;;;;;;;;;;;;QAgBP,EAAE9D,gBAAgB,CAAC;;;;;;;;;SASlB,CAAC,GAAG,GAAG;MACV,CAAC;QAEH,kBAAkB;QAClB,IAAIL,SAASR,QAAQ;YACnBoH,QAAQA,MAAMC,EAAE,CAAC,UAAU7G,QAAQR,MAAM;QAC3C;QAEA,IAAIQ,SAASE,gBAAgB;YAC3B0G,QAAQA,MAAMC,EAAE,CAAC,kBAAkB7G,QAAQE,cAAc;QAC3D;QAEA,IAAIF,SAASG,WAAW;YACtByG,QAAQA,MAAME,GAAG,CAAC,cAAc9G,QAAQG,SAAS;QACnD;QAEA,IAAIH,SAASI,SAAS;YACpBwG,QAAQA,MAAMG,GAAG,CAAC,cAAc/G,QAAQI,OAAO;QACjD;QAEA,qDAAqD;QACrD,MAAM,EAAE0D,MAAMkD,MAAM,EAAEzF,KAAK,EAAE,GAAG,MAAMqF,MACnCnC,KAAK,CAAC,cAAc;YAAEwC,WAAW;QAAM,GACvCC,KAAK,CAAC;QAET,IAAI3F,OAAO;YACTK,cAAM,CAACC,GAAG,CAACC,gBAAQ,CAACC,KAAK,EAAEC,mBAAW,CAACqC,QAAQ,EAAE,6BAA6B;gBAAE9C;YAAM;YACtF,OAAOmB,oBAAY,CAACC,IAAI,CACtB;gBAAEpB,OAAO;YAA0C,GACnD;gBAAE/B,QAAQ;YAAI;QAElB;QAEA,0BAA0B;QAC1B,MAAM6D,eAAejB,KAAKC,GAAG,KAAKF;QAClC,MAAMmB,yBAAgB,CAAC6D,aAAa,CAAC,qBAAqB,OAAO,KAAK9D;QAEtE,MAAMZ,WAQD;YACHqB,MAAM;gBACJkD;gBACAI,aAAa;oBACXrH;oBACAsH,eAAeL,QAAQ1C,UAAU;oBACjCgD,cAAc,IAAIlF,OAAOgD,WAAW;oBACpCmC,iBAAiBvH;gBACnB;YACF;YACAwC,SAAS;YACTjB,OAAO;QACT;QAEAK,cAAM,CAACC,GAAG,CAACC,gBAAQ,CAACyE,IAAI,EAAEvE,mBAAW,CAACwB,GAAG,EAAE,iCAAiC;YAC1EzD;YACAyH,cAAcR,QAAQ1C,UAAU;YAChCmD,cAAcpH;YACdsG,SAAS9D,WAAWvB,IAAI,CAACK,EAAE;YAC3B0B;QACF;QAEA,OAAOX,oBAAY,CAACC,IAAI,CAACF;IAE3B,EAAE,OAAOlB,OAAO;QACd,MAAM8B,eAAejB,KAAKC,GAAG,KAAKF;QAClCmB,yBAAgB,CAACC,aAAa,CAAC,qBAAqBF,cAAc;QAElEzB,cAAM,CAACC,GAAG,CAACC,gBAAQ,CAACC,KAAK,EAAEC,mBAAW,CAACwB,GAAG,EAAE,wBAAwB;YAAEjC;QAAM;QAC5E,MAAMA;IACR;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4872e875887f543a8cba68ecdb2545a6e443ce97"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_8dffxm58a = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_8dffxm58a();
cov_8dffxm58a().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_8dffxm58a().f[0]++;
  cov_8dffxm58a().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_8dffxm58a().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_8dffxm58a().s[3]++;
_export(exports, {
  get POST() {
    /* istanbul ignore next */
    cov_8dffxm58a().f[1]++;
    cov_8dffxm58a().s[4]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_8dffxm58a().f[2]++;
    cov_8dffxm58a().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_8dffxm58a().s[6]++, require("next/server"));
const _supabase =
/* istanbul ignore next */
(cov_8dffxm58a().s[7]++, require("../../../../../lib/integrations/supabase"));
const _config =
/* istanbul ignore next */
(cov_8dffxm58a().s[8]++, require("../../../../../lib/auth/config"));
const _zod =
/* istanbul ignore next */
(cov_8dffxm58a().s[9]++, require("zod"));
const _logger =
/* istanbul ignore next */
(cov_8dffxm58a().s[10]++, require("../../../../../lib/enterprise/logger"));
const _ratelimiting =
/* istanbul ignore next */
(cov_8dffxm58a().s[11]++, require("../../../../../lib/auth/rate-limiting"));
const _ratelimiter =
/* istanbul ignore next */
(cov_8dffxm58a().s[12]++, require("../../../../../lib/enterprise/rate-limiter"));
const _metrics =
/* istanbul ignore next */
(cov_8dffxm58a().s[13]++, require("../../../../../lib/enterprise/metrics"));
const runtime =
/* istanbul ignore next */
(cov_8dffxm58a().s[14]++, 'nodejs');
// ===================================
// SCHEMAS DE VALIDACIÃN
// ===================================
const BulkStatusUpdateSchema =
/* istanbul ignore next */
(cov_8dffxm58a().s[15]++, _zod.z.object({
  order_ids: _zod.z.array(_zod.z.string().uuid()).min(1, 'Al menos una orden es requerida').max(100, 'MÃ¡ximo 100 Ã³rdenes por operaciÃ³n'),
  status: _zod.z.enum(['pending', 'confirmed', 'processing', 'shipped', 'delivered', 'cancelled', 'refunded']),
  reason: _zod.z.string().min(1, 'RazÃ³n del cambio es requerida').max(500, 'RazÃ³n muy larga'),
  notify_customers: _zod.z.boolean().default(false)
}));
const BulkExportSchema =
/* istanbul ignore next */
(cov_8dffxm58a().s[16]++, _zod.z.object({
  format: _zod.z.enum(['csv', 'json']).default('csv'),
  filters: _zod.z.object({
    status: _zod.z.string().optional(),
    payment_status: _zod.z.string().optional(),
    date_from: _zod.z.string().optional(),
    date_to: _zod.z.string().optional()
  }).optional(),
  include_items: _zod.z.boolean().default(true)
}));
// ===================================
// VALIDACIONES DE TRANSICIÃN DE ESTADOS
// ===================================
const stateTransitions =
/* istanbul ignore next */
(cov_8dffxm58a().s[17]++, {
  pending: ['confirmed', 'cancelled'],
  confirmed: ['processing', 'cancelled'],
  processing: ['shipped', 'cancelled'],
  shipped: ['delivered', 'returned'],
  delivered: ['returned'],
  cancelled: [],
  refunded: [],
  returned: ['refunded']
});
function validateStateTransition(currentStatus, newStatus) {
  /* istanbul ignore next */
  cov_8dffxm58a().f[3]++;
  cov_8dffxm58a().s[18]++;
  if (currentStatus === newStatus) {
    /* istanbul ignore next */
    cov_8dffxm58a().b[0][0]++;
    cov_8dffxm58a().s[19]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_8dffxm58a().b[0][1]++;
  }
  cov_8dffxm58a().s[20]++;
  return /* istanbul ignore next */(cov_8dffxm58a().b[1][0]++, stateTransitions[currentStatus]?.includes(newStatus)) ||
  /* istanbul ignore next */
  (cov_8dffxm58a().b[1][1]++, false);
}
// ===================================
// MIDDLEWARE DE AUTENTICACIÃN ADMIN
// ===================================
async function validateAdminAuth() {
  /* istanbul ignore next */
  cov_8dffxm58a().f[4]++;
  cov_8dffxm58a().s[21]++;
  try {
    const session =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[22]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_8dffxm58a().s[23]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_8dffxm58a().b[2][0]++;
      cov_8dffxm58a().s[24]++;
      return {
        error: 'Usuario no autenticado',
        status: 401
      };
    } else
    /* istanbul ignore next */
    {
      cov_8dffxm58a().b[2][1]++;
    }
    const user =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[25]++, session?.user);
    /* istanbul ignore next */
    cov_8dffxm58a().s[26]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_8dffxm58a().b[3][0]++;
      cov_8dffxm58a().s[27]++;
      return {
        error: 'Usuario no encontrado',
        status: 401
      };
    } else
    /* istanbul ignore next */
    {
      cov_8dffxm58a().b[3][1]++;
    }
    // Verificar si es admin
    const isAdmin =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[28]++, session.user.email === 'santiago@xor.com.ar');
    /* istanbul ignore next */
    cov_8dffxm58a().s[29]++;
    if (!isAdmin) {
      /* istanbul ignore next */
      cov_8dffxm58a().b[4][0]++;
      cov_8dffxm58a().s[30]++;
      return {
        error: 'Acceso denegado - Se requieren permisos de administrador',
        status: 403
      };
    } else
    /* istanbul ignore next */
    {
      cov_8dffxm58a().b[4][1]++;
    }
    cov_8dffxm58a().s[31]++;
    return {
      user: session.user,
      userId: session.user.id
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_8dffxm58a().s[32]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.AUTH, 'Error en validaciÃ³n admin', {
      error
    });
    /* istanbul ignore next */
    cov_8dffxm58a().s[33]++;
    return {
      error: 'Error de autenticaciÃ³n',
      status: 500
    };
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_8dffxm58a().f[5]++;
  const startTime =
  /* istanbul ignore next */
  (cov_8dffxm58a().s[34]++, Date.now());
  /* istanbul ignore next */
  cov_8dffxm58a().s[35]++;
  try {
    // Rate limiting mÃ¡s estricto para operaciones masivas
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[36]++, await (0, _ratelimiting.checkRateLimit)(request, 10, 3600000, 'admin-bulk-operations'));
    /* istanbul ignore next */
    cov_8dffxm58a().s[37]++;
    if (!rateLimitResult.success) {
      /* istanbul ignore next */
      cov_8dffxm58a().b[5][0]++;
      const response =
      /* istanbul ignore next */
      (cov_8dffxm58a().s[38]++, _server.NextResponse.json({
        error: 'Demasiadas operaciones masivas. LÃ­mite: 10 por hora'
      }, {
        status: 429
      }));
      /* istanbul ignore next */
      cov_8dffxm58a().s[39]++;
      (0, _ratelimiter.addRateLimitHeaders)(response, rateLimitResult);
      /* istanbul ignore next */
      cov_8dffxm58a().s[40]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_8dffxm58a().b[5][1]++;
    }
    // Validar autenticaciÃ³n admin
    const authResult =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[41]++, await validateAdminAuth());
    /* istanbul ignore next */
    cov_8dffxm58a().s[42]++;
    if ('error' in authResult) {
      /* istanbul ignore next */
      cov_8dffxm58a().b[6][0]++;
      cov_8dffxm58a().s[43]++;
      return _server.NextResponse.json({
        error: authResult.error
      }, {
        status: authResult.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_8dffxm58a().b[6][1]++;
    }
    // Obtener tipo de operaciÃ³n
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[44]++, new URL(request.url));
    const operation =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[45]++, searchParams.get('operation'));
    /* istanbul ignore next */
    cov_8dffxm58a().s[46]++;
    if (operation === 'status_update') {
      /* istanbul ignore next */
      cov_8dffxm58a().b[7][0]++;
      cov_8dffxm58a().s[47]++;
      return await handleBulkStatusUpdate(request, authResult);
    } else {
      /* istanbul ignore next */
      cov_8dffxm58a().b[7][1]++;
      cov_8dffxm58a().s[48]++;
      if (operation === 'export') {
        /* istanbul ignore next */
        cov_8dffxm58a().b[8][0]++;
        cov_8dffxm58a().s[49]++;
        return await handleBulkExport(request, authResult);
      } else {
        /* istanbul ignore next */
        cov_8dffxm58a().b[8][1]++;
        cov_8dffxm58a().s[50]++;
        return _server.NextResponse.json({
          error: 'OperaciÃ³n no vÃ¡lida. Operaciones disponibles: status_update, export'
        }, {
          status: 400
        });
      }
    }
  } catch (error) {
    const responseTime =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[51]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_8dffxm58a().s[52]++;
    _metrics.metricsCollector.recordApiCall('admin-bulk-operations', responseTime, 500);
    /* istanbul ignore next */
    cov_8dffxm58a().s[53]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en POST /api/admin/orders/bulk', {
      error
    });
    /* istanbul ignore next */
    cov_8dffxm58a().s[54]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
// ===================================
// ACTUALIZACIÃN MASIVA DE ESTADOS
// ===================================
async function handleBulkStatusUpdate(request, authResult) {
  /* istanbul ignore next */
  cov_8dffxm58a().f[6]++;
  const startTime =
  /* istanbul ignore next */
  (cov_8dffxm58a().s[55]++, Date.now());
  /* istanbul ignore next */
  cov_8dffxm58a().s[56]++;
  try {
    // Validar datos de entrada
    const body =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[57]++, await request.json());
    const validationResult =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[58]++, BulkStatusUpdateSchema.safeParse(body));
    /* istanbul ignore next */
    cov_8dffxm58a().s[59]++;
    if (!validationResult.success) {
      /* istanbul ignore next */
      cov_8dffxm58a().b[9][0]++;
      cov_8dffxm58a().s[60]++;
      return _server.NextResponse.json({
        error: 'Datos de operaciÃ³n masiva invÃ¡lidos',
        details: validationResult.error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_8dffxm58a().b[9][1]++;
    }
    const {
      order_ids,
      status: newStatus,
      reason,
      notify_customers
    } =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[61]++, validationResult.data);
    // Obtener Ã³rdenes actuales para validar transiciones
    const {
      data: currentOrders,
      error: fetchError
    } =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[62]++, await _supabase.supabaseAdmin.from('orders').select('id, status, order_number').in('id', order_ids));
    /* istanbul ignore next */
    cov_8dffxm58a().s[63]++;
    if (fetchError) {
      /* istanbul ignore next */
      cov_8dffxm58a().b[10][0]++;
      cov_8dffxm58a().s[64]++;
      _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.DATABASE, 'Error al obtener Ã³rdenes para bulk update', {
        fetchError
      });
      /* istanbul ignore next */
      cov_8dffxm58a().s[65]++;
      return _server.NextResponse.json({
        error: 'Error al obtener Ã³rdenes'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_8dffxm58a().b[10][1]++;
    }
    cov_8dffxm58a().s[66]++;
    if (
    /* istanbul ignore next */
    (cov_8dffxm58a().b[12][0]++, !currentOrders) ||
    /* istanbul ignore next */
    (cov_8dffxm58a().b[12][1]++, currentOrders.length === 0)) {
      /* istanbul ignore next */
      cov_8dffxm58a().b[11][0]++;
      cov_8dffxm58a().s[67]++;
      return _server.NextResponse.json({
        error: 'No se encontraron Ã³rdenes con los IDs proporcionados'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_8dffxm58a().b[11][1]++;
    }
    // Validar transiciones para cada orden
    const validOrders =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[68]++, []);
    const invalidOrders =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[69]++, []);
    /* istanbul ignore next */
    cov_8dffxm58a().s[70]++;
    for (const order of currentOrders) {
      /* istanbul ignore next */
      cov_8dffxm58a().s[71]++;
      if (validateStateTransition(order.status, newStatus)) {
        /* istanbul ignore next */
        cov_8dffxm58a().b[13][0]++;
        cov_8dffxm58a().s[72]++;
        validOrders.push(order);
      } else {
        /* istanbul ignore next */
        cov_8dffxm58a().b[13][1]++;
        cov_8dffxm58a().s[73]++;
        invalidOrders.push({
          id: order.id,
          order_number: order.order_number,
          current_status: order.status,
          reason: `TransiciÃ³n no permitida: ${order.status} â ${newStatus}`
        });
      }
    }
    /* istanbul ignore next */
    cov_8dffxm58a().s[74]++;
    if (validOrders.length === 0) {
      /* istanbul ignore next */
      cov_8dffxm58a().b[14][0]++;
      cov_8dffxm58a().s[75]++;
      return _server.NextResponse.json({
        error: 'Ninguna orden puede cambiar al estado solicitado',
        invalid_orders: invalidOrders
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_8dffxm58a().b[14][1]++;
    }
    // Actualizar Ã³rdenes vÃ¡lidas
    const validOrderIds =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[76]++, validOrders.map(order => {
      /* istanbul ignore next */
      cov_8dffxm58a().f[7]++;
      cov_8dffxm58a().s[77]++;
      return order.id;
    }));
    const {
      data: updatedOrders,
      error: updateError
    } =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[78]++, await _supabase.supabaseAdmin.from('orders').update({
      status: newStatus,
      updated_at: new Date().toISOString()
    }).in('id', validOrderIds).select());
    /* istanbul ignore next */
    cov_8dffxm58a().s[79]++;
    if (updateError) {
      /* istanbul ignore next */
      cov_8dffxm58a().b[15][0]++;
      cov_8dffxm58a().s[80]++;
      _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.DATABASE, 'Error en actualizaciÃ³n masiva', {
        updateError
      });
      /* istanbul ignore next */
      cov_8dffxm58a().s[81]++;
      return _server.NextResponse.json({
        error: 'Error al actualizar Ã³rdenes'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_8dffxm58a().b[15][1]++;
    }
    // Registrar cambios en historial
    const historyEntries =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[82]++, validOrders.map(order => {
      /* istanbul ignore next */
      cov_8dffxm58a().f[8]++;
      cov_8dffxm58a().s[83]++;
      return {
        order_id: order.id,
        previous_status: order.status,
        new_status: newStatus,
        changed_by: authResult.user.id,
        reason: `Cambio masivo: ${reason}`,
        metadata: JSON.stringify({
          bulk_operation: true,
          total_orders: validOrders.length
        })
      };
    }));
    /* istanbul ignore next */
    cov_8dffxm58a().s[84]++;
    try {
      /* istanbul ignore next */
      cov_8dffxm58a().s[85]++;
      await _supabase.supabaseAdmin.from('order_status_history').insert(historyEntries);
    } catch (historyError) {
      /* istanbul ignore next */
      cov_8dffxm58a().s[86]++;
      _logger.logger.log(_logger.LogLevel.WARN, _logger.LogCategory.DATABASE, 'No se pudo registrar historial masivo', {
        historyError
      });
    }
    // MÃ©tricas de performance
    const responseTime =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[87]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_8dffxm58a().s[88]++;
    _metrics.metricsCollector.recordApiCall('admin-bulk-status-update', responseTime, 200);
    const response =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[89]++, {
      data: {
        updated_orders: updatedOrders,
        invalid_orders: invalidOrders,
        summary: {
          total_requested: order_ids.length,
          successfully_updated: validOrders.length,
          failed_updates: invalidOrders.length
        }
      },
      success: true,
      error: null
    });
    /* istanbul ignore next */
    cov_8dffxm58a().s[90]++;
    _logger.logger.log(_logger.LogLevel.INFO, _logger.LogCategory.API, 'ActualizaciÃ³n masiva de estados completada', {
      totalRequested: order_ids.length,
      successfullyUpdated: validOrders.length,
      failedUpdates: invalidOrders.length,
      newStatus,
      adminId: authResult.user.id,
      responseTime
    });
    /* istanbul ignore next */
    cov_8dffxm58a().s[91]++;
    return _server.NextResponse.json(response);
  } catch (error) {
    const responseTime =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[92]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_8dffxm58a().s[93]++;
    _metrics.metricsCollector.recordApiCall('admin-bulk-status-update', responseTime, 500);
    /* istanbul ignore next */
    cov_8dffxm58a().s[94]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en bulk status update', {
      error
    });
    /* istanbul ignore next */
    cov_8dffxm58a().s[95]++;
    throw error;
  }
}
// ===================================
// EXPORTACIÃN MASIVA DE DATOS
// ===================================
async function handleBulkExport(request, authResult) {
  /* istanbul ignore next */
  cov_8dffxm58a().f[9]++;
  const startTime =
  /* istanbul ignore next */
  (cov_8dffxm58a().s[96]++, Date.now());
  /* istanbul ignore next */
  cov_8dffxm58a().s[97]++;
  try {
    // Validar datos de entrada
    const body =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[98]++, await request.json());
    const validationResult =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[99]++, BulkExportSchema.safeParse(body));
    /* istanbul ignore next */
    cov_8dffxm58a().s[100]++;
    if (!validationResult.success) {
      /* istanbul ignore next */
      cov_8dffxm58a().b[16][0]++;
      cov_8dffxm58a().s[101]++;
      return _server.NextResponse.json({
        error: 'ParÃ¡metros de exportaciÃ³n invÃ¡lidos',
        details: validationResult.error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_8dffxm58a().b[16][1]++;
    }
    const {
      format,
      filters,
      include_items
    } =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[102]++, validationResult.data);
    // Construir query base
    let query =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[103]++, _supabase.supabaseAdmin.from('orders').select(`
        id,
        order_number,
        status,
        payment_status,
        total,
        currency,
        created_at,
        updated_at,
        shipping_address,
        notes,
        user_profiles!orders_user_id_fkey (
          name,
          email,
          phone
        )
        ${include_items ?
    /* istanbul ignore next */
    (cov_8dffxm58a().b[17][0]++, `,
        order_items (
          quantity,
          unit_price,
          total_price,
          products (
            name,
            sku
          )
        )`) :
    /* istanbul ignore next */
    (cov_8dffxm58a().b[17][1]++, '')}
      `));
    // Aplicar filtros
    /* istanbul ignore next */
    cov_8dffxm58a().s[104]++;
    if (filters?.status) {
      /* istanbul ignore next */
      cov_8dffxm58a().b[18][0]++;
      cov_8dffxm58a().s[105]++;
      query = query.eq('status', filters.status);
    } else
    /* istanbul ignore next */
    {
      cov_8dffxm58a().b[18][1]++;
    }
    cov_8dffxm58a().s[106]++;
    if (filters?.payment_status) {
      /* istanbul ignore next */
      cov_8dffxm58a().b[19][0]++;
      cov_8dffxm58a().s[107]++;
      query = query.eq('payment_status', filters.payment_status);
    } else
    /* istanbul ignore next */
    {
      cov_8dffxm58a().b[19][1]++;
    }
    cov_8dffxm58a().s[108]++;
    if (filters?.date_from) {
      /* istanbul ignore next */
      cov_8dffxm58a().b[20][0]++;
      cov_8dffxm58a().s[109]++;
      query = query.gte('created_at', filters.date_from);
    } else
    /* istanbul ignore next */
    {
      cov_8dffxm58a().b[20][1]++;
    }
    cov_8dffxm58a().s[110]++;
    if (filters?.date_to) {
      /* istanbul ignore next */
      cov_8dffxm58a().b[21][0]++;
      cov_8dffxm58a().s[111]++;
      query = query.lte('created_at', filters.date_to);
    } else
    /* istanbul ignore next */
    {
      cov_8dffxm58a().b[21][1]++;
    }
    // Limitar a 1000 Ã³rdenes mÃ¡ximo para evitar timeouts
    const {
      data: orders,
      error
    } =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[112]++, await query.order('created_at', {
      ascending: false
    }).limit(1000));
    /* istanbul ignore next */
    cov_8dffxm58a().s[113]++;
    if (error) {
      /* istanbul ignore next */
      cov_8dffxm58a().b[22][0]++;
      cov_8dffxm58a().s[114]++;
      _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.DATABASE, 'Error al exportar Ã³rdenes', {
        error
      });
      /* istanbul ignore next */
      cov_8dffxm58a().s[115]++;
      return _server.NextResponse.json({
        error: 'Error al obtener datos para exportaciÃ³n'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_8dffxm58a().b[22][1]++;
    }
    // MÃ©tricas de performance
    const responseTime =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[116]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_8dffxm58a().s[117]++;
    await _metrics.metricsCollector.recordRequest('admin-bulk-export', 'GET', 200, responseTime);
    const response =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[118]++, {
      data: {
        orders,
        export_info: {
          format,
          total_records:
          /* istanbul ignore next */
          (cov_8dffxm58a().b[23][0]++, orders?.length) ||
          /* istanbul ignore next */
          (cov_8dffxm58a().b[23][1]++, 0),
          generated_at: new Date().toISOString(),
          filters_applied: filters
        }
      },
      success: true,
      error: null
    });
    /* istanbul ignore next */
    cov_8dffxm58a().s[119]++;
    _logger.logger.log(_logger.LogLevel.INFO, _logger.LogCategory.API, 'ExportaciÃ³n masiva completada', {
      format,
      totalRecords:
      /* istanbul ignore next */
      (cov_8dffxm58a().b[24][0]++, orders?.length) ||
      /* istanbul ignore next */
      (cov_8dffxm58a().b[24][1]++, 0),
      includeItems: include_items,
      adminId: authResult.user.id,
      responseTime
    });
    /* istanbul ignore next */
    cov_8dffxm58a().s[120]++;
    return _server.NextResponse.json(response);
  } catch (error) {
    const responseTime =
    /* istanbul ignore next */
    (cov_8dffxm58a().s[121]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_8dffxm58a().s[122]++;
    _metrics.metricsCollector.recordApiCall('admin-bulk-export', responseTime, 500);
    /* istanbul ignore next */
    cov_8dffxm58a().s[123]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en bulk export', {
      error
    });
    /* istanbul ignore next */
    cov_8dffxm58a().s[124]++;
    throw error;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,