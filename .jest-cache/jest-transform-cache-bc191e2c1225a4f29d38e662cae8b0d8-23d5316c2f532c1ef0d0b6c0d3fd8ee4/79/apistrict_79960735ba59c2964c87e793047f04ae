368ae31c58f325e60b53ed3b8a6ec3ff
// ===================================
// PINTEYA E-COMMERCE - STRICT API TYPES
// Tipos TypeScript estrictos para prevenir errores de API
// ===================================
"use strict";

/* istanbul ignore next */
function cov_1fou906fvb() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\types\\api-strict.ts";
  var hash = "55cfb37e11c2dad0e029d758b8a0670ea05f902c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\types\\api-strict.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "2": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "3": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 37,
          column: 3
        }
      },
      "4": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 36
        }
      },
      "5": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 39
        }
      },
      "6": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 32
        }
      },
      "7": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 35
        }
      },
      "8": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 33
        }
      },
      "9": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 34
        }
      },
      "10": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 38
        }
      },
      "11": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 171
        }
      },
      "12": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 206
        }
      },
      "13": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "14": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 21
        }
      },
      "15": {
        start: {
          line: 48,
          column: 23
        },
        end: {
          line: 48,
          column: 26
        }
      },
      "16": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 372
        }
      },
      "17": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "18": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 21
        }
      },
      "19": {
        start: {
          line: 55,
          column: 18
        },
        end: {
          line: 55,
          column: 21
        }
      },
      "20": {
        start: {
          line: 57,
          column: 18
        },
        end: {
          line: 57,
          column: 92
        }
      },
      "21": {
        start: {
          line: 58,
          column: 21
        },
        end: {
          line: 58,
          column: 72
        }
      },
      "22": {
        start: {
          line: 59,
          column: 25
        },
        end: {
          line: 59,
          column: 81
        }
      },
      "23": {
        start: {
          line: 60,
          column: 22
        },
        end: {
          line: 60,
          column: 70
        }
      },
      "24": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 58
        }
      },
      "25": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 147,
          column: 5
        }
      },
      "26": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "27": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 73,
          column: 14
        }
      },
      "28": {
        start: {
          line: 75,
          column: 25
        },
        end: {
          line: 75,
          column: 28
        }
      },
      "29": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "30": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 84,
          column: 14
        }
      },
      "31": {
        start: {
          line: 87,
          column: 23
        },
        end: {
          line: 87,
          column: 49
        }
      },
      "32": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "33": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 95,
          column: 14
        }
      },
      "34": {
        start: {
          line: 98,
          column: 27
        },
        end: {
          line: 98,
          column: 51
        }
      },
      "35": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "36": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 106,
          column: 14
        }
      },
      "37": {
        start: {
          line: 110,
          column: 34
        },
        end: {
          line: 118,
          column: 15
        }
      },
      "38": {
        start: {
          line: 110,
          column: 55
        },
        end: {
          line: 118,
          column: 13
        }
      },
      "39": {
        start: {
          line: 119,
          column: 28
        },
        end: {
          line: 119,
          column: 72
        }
      },
      "40": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 138,
          column: 10
        }
      },
      "41": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 146,
          column: 10
        }
      },
      "42": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 157,
          column: 6
        }
      },
      "43": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 165,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 16
          }
        },
        loc: {
          start: {
            line: 9,
            column: 30
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 32
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 35
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 28
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 31
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 29
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 30
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 34
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "8": {
        name: "isStrictApiResponse",
        decl: {
          start: {
            line: 38,
            column: 9
          },
          end: {
            line: 38,
            column: 28
          }
        },
        loc: {
          start: {
            line: 38,
            column: 34
          },
          end: {
            line: 40,
            column: 1
          }
        },
        line: 38
      },
      "9": {
        name: "isStrictApiError",
        decl: {
          start: {
            line: 41,
            column: 9
          },
          end: {
            line: 41,
            column: 25
          }
        },
        loc: {
          start: {
            line: 41,
            column: 31
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 41
      },
      "10": {
        name: "isValidPagination",
        decl: {
          start: {
            line: 44,
            column: 9
          },
          end: {
            line: 44,
            column: 26
          }
        },
        loc: {
          start: {
            line: 44,
            column: 32
          },
          end: {
            line: 50,
            column: 1
          }
        },
        line: 44
      },
      "11": {
        name: "isValidStrictOrder",
        decl: {
          start: {
            line: 51,
            column: 9
          },
          end: {
            line: 51,
            column: 27
          }
        },
        loc: {
          start: {
            line: 51,
            column: 33
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 51
      },
      "12": {
        name: "toStrictOrdersResponse",
        decl: {
          start: {
            line: 64,
            column: 9
          },
          end: {
            line: 64,
            column: 31
          }
        },
        loc: {
          start: {
            line: 64,
            column: 37
          },
          end: {
            line: 148,
            column: 1
          }
        },
        line: 64
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 110,
            column: 45
          },
          end: {
            line: 110,
            column: 46
          }
        },
        loc: {
          start: {
            line: 110,
            column: 55
          },
          end: {
            line: 118,
            column: 13
          }
        },
        line: 110
      },
      "14": {
        name: "createStrictApiError",
        decl: {
          start: {
            line: 149,
            column: 9
          },
          end: {
            line: 149,
            column: 29
          }
        },
        loc: {
          start: {
            line: 149,
            column: 58
          },
          end: {
            line: 158,
            column: 1
          }
        },
        line: 149
      },
      "15": {
        name: "createStrictApiResponse",
        decl: {
          start: {
            line: 159,
            column: 9
          },
          end: {
            line: 159,
            column: 32
          }
        },
        loc: {
          start: {
            line: 159,
            column: 48
          },
          end: {
            line: 166,
            column: 1
          }
        },
        line: 159
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 39,
            column: 11
          },
          end: {
            line: 39,
            column: 170
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 11
          },
          end: {
            line: 39,
            column: 34
          }
        }, {
          start: {
            line: 39,
            column: 38
          },
          end: {
            line: 39,
            column: 50
          }
        }, {
          start: {
            line: 39,
            column: 54
          },
          end: {
            line: 39,
            column: 70
          }
        }, {
          start: {
            line: 39,
            column: 74
          },
          end: {
            line: 39,
            column: 94
          }
        }, {
          start: {
            line: 39,
            column: 98
          },
          end: {
            line: 39,
            column: 111
          }
        }, {
          start: {
            line: 39,
            column: 115
          },
          end: {
            line: 39,
            column: 133
          }
        }, {
          start: {
            line: 39,
            column: 137
          },
          end: {
            line: 39,
            column: 170
          }
        }],
        line: 39
      },
      "1": {
        loc: {
          start: {
            line: 42,
            column: 11
          },
          end: {
            line: 42,
            column: 205
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 11
          },
          end: {
            line: 42,
            column: 34
          }
        }, {
          start: {
            line: 42,
            column: 38
          },
          end: {
            line: 42,
            column: 50
          }
        }, {
          start: {
            line: 42,
            column: 54
          },
          end: {
            line: 42,
            column: 70
          }
        }, {
          start: {
            line: 42,
            column: 74
          },
          end: {
            line: 42,
            column: 95
          }
        }, {
          start: {
            line: 42,
            column: 99
          },
          end: {
            line: 42,
            column: 113
          }
        }, {
          start: {
            line: 42,
            column: 117
          },
          end: {
            line: 42,
            column: 146
          }
        }, {
          start: {
            line: 42,
            column: 150
          },
          end: {
            line: 42,
            column: 168
          }
        }, {
          start: {
            line: 42,
            column: 172
          },
          end: {
            line: 42,
            column: 205
          }
        }],
        line: 42
      },
      "2": {
        loc: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "3": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 45,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 45,
            column: 31
          }
        }, {
          start: {
            line: 45,
            column: 35
          },
          end: {
            line: 45,
            column: 47
          }
        }],
        line: 45
      },
      "4": {
        loc: {
          start: {
            line: 49,
            column: 11
          },
          end: {
            line: 49,
            column: 371
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 11
          },
          end: {
            line: 49,
            column: 46
          }
        }, {
          start: {
            line: 49,
            column: 50
          },
          end: {
            line: 49,
            column: 86
          }
        }, {
          start: {
            line: 49,
            column: 90
          },
          end: {
            line: 49,
            column: 126
          }
        }, {
          start: {
            line: 49,
            column: 130
          },
          end: {
            line: 49,
            column: 171
          }
        }, {
          start: {
            line: 49,
            column: 175
          },
          end: {
            line: 49,
            column: 218
          }
        }, {
          start: {
            line: 49,
            column: 222
          },
          end: {
            line: 49,
            column: 269
          }
        }, {
          start: {
            line: 49,
            column: 273
          },
          end: {
            line: 49,
            column: 292
          }
        }, {
          start: {
            line: 49,
            column: 296
          },
          end: {
            line: 49,
            column: 316
          }
        }, {
          start: {
            line: 49,
            column: 320
          },
          end: {
            line: 49,
            column: 341
          }
        }, {
          start: {
            line: 49,
            column: 345
          },
          end: {
            line: 49,
            column: 371
          }
        }],
        line: 49
      },
      "5": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "6": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 52,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 52,
            column: 31
          }
        }, {
          start: {
            line: 52,
            column: 35
          },
          end: {
            line: 52,
            column: 47
          }
        }],
        line: 52
      },
      "7": {
        loc: {
          start: {
            line: 57,
            column: 18
          },
          end: {
            line: 57,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 18
          },
          end: {
            line: 57,
            column: 26
          }
        }, {
          start: {
            line: 57,
            column: 31
          },
          end: {
            line: 57,
            column: 59
          }
        }, {
          start: {
            line: 57,
            column: 63
          },
          end: {
            line: 57,
            column: 91
          }
        }],
        line: 57
      },
      "8": {
        loc: {
          start: {
            line: 58,
            column: 21
          },
          end: {
            line: 58,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 21
          },
          end: {
            line: 58,
            column: 52
          }
        }, {
          start: {
            line: 58,
            column: 56
          },
          end: {
            line: 58,
            column: 72
          }
        }],
        line: 58
      },
      "9": {
        loc: {
          start: {
            line: 59,
            column: 25
          },
          end: {
            line: 59,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 25
          },
          end: {
            line: 59,
            column: 41
          }
        }, {
          start: {
            line: 59,
            column: 45
          },
          end: {
            line: 59,
            column: 81
          }
        }],
        line: 59
      },
      "10": {
        loc: {
          start: {
            line: 60,
            column: 22
          },
          end: {
            line: 60,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 22
          },
          end: {
            line: 60,
            column: 34
          }
        }, {
          start: {
            line: 60,
            column: 38
          },
          end: {
            line: 60,
            column: 70
          }
        }],
        line: 60
      },
      "11": {
        loc: {
          start: {
            line: 62,
            column: 11
          },
          end: {
            line: 62,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 11
          },
          end: {
            line: 62,
            column: 16
          }
        }, {
          start: {
            line: 62,
            column: 20
          },
          end: {
            line: 62,
            column: 28
          }
        }, {
          start: {
            line: 62,
            column: 32
          },
          end: {
            line: 62,
            column: 44
          }
        }, {
          start: {
            line: 62,
            column: 48
          },
          end: {
            line: 62,
            column: 57
          }
        }],
        line: 62
      },
      "12": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "13": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "14": {
        loc: {
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 77,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 77,
            column: 26
          }
        }, {
          start: {
            line: 77,
            column: 30
          },
          end: {
            line: 77,
            column: 63
          }
        }],
        line: 77
      },
      "15": {
        loc: {
          start: {
            line: 87,
            column: 23
          },
          end: {
            line: 87,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 23
          },
          end: {
            line: 87,
            column: 43
          }
        }, {
          start: {
            line: 87,
            column: 47
          },
          end: {
            line: 87,
            column: 49
          }
        }],
        line: 87
      },
      "16": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "17": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "18": {
        loc: {
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 99,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 99,
            column: 22
          }
        }, {
          start: {
            line: 99,
            column: 26
          },
          end: {
            line: 99,
            column: 56
          }
        }],
        line: 99
      },
      "19": {
        loc: {
          start: {
            line: 113,
            column: 25
          },
          end: {
            line: 113,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 113,
            column: 41
          },
          end: {
            line: 113,
            column: 62
          }
        }, {
          start: {
            line: 113,
            column: 65
          },
          end: {
            line: 113,
            column: 78
          }
        }],
        line: 113
      },
      "20": {
        loc: {
          start: {
            line: 114,
            column: 23
          },
          end: {
            line: 114,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 23
          },
          end: {
            line: 114,
            column: 42
          }
        }, {
          start: {
            line: 114,
            column: 46
          },
          end: {
            line: 114,
            column: 47
          }
        }],
        line: 114
      },
      "21": {
        loc: {
          start: {
            line: 115,
            column: 28
          },
          end: {
            line: 115,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 28
          },
          end: {
            line: 115,
            column: 44
          }
        }, {
          start: {
            line: 115,
            column: 48
          },
          end: {
            line: 115,
            column: 72
          }
        }],
        line: 115
      },
      "22": {
        loc: {
          start: {
            line: 116,
            column: 24
          },
          end: {
            line: 116,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 24
          },
          end: {
            line: 116,
            column: 36
          }
        }, {
          start: {
            line: 116,
            column: 40
          },
          end: {
            line: 116,
            column: 49
          }
        }],
        line: 116
      },
      "23": {
        loc: {
          start: {
            line: 117,
            column: 26
          },
          end: {
            line: 117,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 117,
            column: 26
          },
          end: {
            line: 117,
            column: 40
          }
        }, {
          start: {
            line: 117,
            column: 44
          },
          end: {
            line: 117,
            column: 46
          }
        }],
        line: 117
      },
      "24": {
        loc: {
          start: {
            line: 125,
            column: 28
          },
          end: {
            line: 132,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 28
          },
          end: {
            line: 125,
            column: 38
          }
        }, {
          start: {
            line: 125,
            column: 42
          },
          end: {
            line: 132,
            column: 17
          }
        }],
        line: 125
      },
      "25": {
        loc: {
          start: {
            line: 133,
            column: 25
          },
          end: {
            line: 133,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 25
          },
          end: {
            line: 133,
            column: 46
          }
        }, {
          start: {
            line: 133,
            column: 50
          },
          end: {
            line: 133,
            column: 52
          }
        }],
        line: 133
      },
      "26": {
        loc: {
          start: {
            line: 137,
            column: 23
          },
          end: {
            line: 137,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 23
          },
          end: {
            line: 137,
            column: 41
          }
        }, {
          start: {
            line: 137,
            column: 45
          },
          end: {
            line: 137,
            column: 69
          }
        }],
        line: 137
      },
      "27": {
        loc: {
          start: {
            line: 142,
            column: 52
          },
          end: {
            line: 142,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 142,
            column: 77
          },
          end: {
            line: 142,
            column: 90
          }
        }, {
          start: {
            line: 142,
            column: 93
          },
          end: {
            line: 142,
            column: 108
          }
        }],
        line: 142
      },
      "28": {
        loc: {
          start: {
            line: 156,
            column: 14
          },
          end: {
            line: 156,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 14
          },
          end: {
            line: 156,
            column: 18
          }
        }, {
          start: {
            line: 156,
            column: 22
          },
          end: {
            line: 156,
            column: 36
          }
        }],
        line: 156
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0, 0, 0, 0, 0, 0],
      "1": [0, 0, 0, 0, 0, 0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\types\\api-strict.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - STRICT API TYPES\r\n// Tipos TypeScript estrictos para prevenir errores de API\r\n// ===================================\r\n\r\nimport { OrderEnterprise, OrderStatus, PaymentStatus, FulfillmentStatus } from './orders-enterprise';\r\n\r\n// ===================================\r\n// TIPOS BASE ESTRICTOS\r\n// ===================================\r\n\r\n/**\r\n * Tipo base para respuestas de API con validaci\xF3n estricta\r\n */\r\nexport interface StrictApiResponse<T> {\r\n  readonly success: true;\r\n  readonly data: T;\r\n  readonly message?: string;\r\n  readonly timestamp: string;\r\n}\r\n\r\nexport interface StrictApiError {\r\n  readonly success: false;\r\n  readonly error: string;\r\n  readonly code?: string;\r\n  readonly details?: Record<string, unknown>;\r\n  readonly timestamp: string;\r\n  readonly path: string;\r\n}\r\n\r\n/**\r\n * Union type para respuestas de API que garantiza type safety\r\n */\r\nexport type ApiResult<T> = StrictApiResponse<T> | StrictApiError;\r\n\r\n// ===================================\r\n// TIPOS DE PAGINACI\xD3N ESTRICTOS\r\n// ===================================\r\n\r\n/**\r\n * Paginaci\xF3n con validaci\xF3n estricta de tipos\r\n */\r\nexport interface StrictPagination {\r\n  readonly page: number & { __brand: 'PositiveInteger' };\r\n  readonly limit: number & { __brand: 'PositiveInteger' };\r\n  readonly total: number & { __brand: 'NonNegativeInteger' };\r\n  readonly totalPages: number & { __brand: 'NonNegativeInteger' };\r\n  readonly hasNextPage: boolean;\r\n  readonly hasPreviousPage: boolean;\r\n}\r\n\r\n/**\r\n * Respuesta paginada con tipos estrictos\r\n */\r\nexport interface StrictPaginatedResponse<T> {\r\n  readonly success: true;\r\n  readonly data: {\r\n    readonly items: readonly T[];\r\n    readonly pagination: StrictPagination;\r\n    readonly filters?: Record<string, unknown>;\r\n  };\r\n  readonly message?: string;\r\n  readonly timestamp: string;\r\n}\r\n\r\n// ===================================\r\n// TIPOS ESPEC\xCDFICOS PARA \xD3RDENES\r\n// ===================================\r\n\r\n/**\r\n * Orden con validaci\xF3n estricta de campos requeridos\r\n */\r\nexport interface StrictOrderEnterprise {\r\n  readonly id: string | number; // Flexible para string o number\r\n  readonly order_number?: string & { __brand: 'OrderNumber' }; // Opcional\r\n  readonly user_id?: string | number; // Opcional y flexible\r\n  readonly status: OrderStatus;\r\n  readonly payment_status?: PaymentStatus; // Opcional\r\n  readonly fulfillment_status?: FulfillmentStatus; // Opcional\r\n  readonly total: number & { __brand: 'PositiveAmount' };\r\n  readonly currency?: string & { __brand: 'CurrencyCode' }; // Opcional\r\n  readonly created_at: string & { __brand: 'ISODateString' };\r\n  readonly updated_at?: string & { __brand: 'ISODateString' }; // Opcional\r\n  \r\n  // Campos opcionales con tipos estrictos\r\n  readonly shipping_address?: StrictAddress;\r\n  readonly billing_address?: StrictAddress;\r\n  readonly notes?: string & { __brand: 'NonEmptyString' };\r\n  readonly admin_notes?: string & { __brand: 'NonEmptyString' };\r\n  readonly tracking_number?: string & { __brand: 'TrackingNumber' };\r\n  readonly carrier?: string & { __brand: 'CarrierName' };\r\n  readonly estimated_delivery?: string & { __brand: 'ISODateString' };\r\n  readonly metadata: Record<string, unknown>;\r\n  \r\n  // Relaciones con tipos estrictos\r\n  readonly user_profiles?: StrictUserProfile | null;\r\n  readonly order_items?: readonly StrictOrderItem[];\r\n  readonly status_history?: readonly StrictOrderStatusHistory[];\r\n  readonly order_notes?: readonly StrictOrderNote[];\r\n}\r\n\r\n/**\r\n * Perfil de usuario con validaci\xF3n estricta\r\n */\r\nexport interface StrictUserProfile {\r\n  readonly id: string & { __brand: 'UserId' };\r\n  readonly name: string & { __brand: 'NonEmptyString' };\r\n  readonly email: string & { __brand: 'EmailAddress' };\r\n  readonly phone?: string & { __brand: 'PhoneNumber' };\r\n  readonly avatar_url?: string & { __brand: 'URL' };\r\n}\r\n\r\n/**\r\n * Item de orden con validaci\xF3n estricta\r\n */\r\nexport interface StrictOrderItem {\r\n  readonly id: string & { __brand: 'OrderItemId' };\r\n  readonly order_id: string & { __brand: 'OrderId' };\r\n  readonly product_id: number & { __brand: 'ProductId' };\r\n  readonly quantity: number & { __brand: 'PositiveInteger' };\r\n  readonly unit_price: number & { __brand: 'PositiveAmount' };\r\n  readonly total_price: number & { __brand: 'PositiveAmount' };\r\n  readonly product_name: string & { __brand: 'NonEmptyString' };\r\n  readonly product_sku?: string & { __brand: 'SKU' };\r\n}\r\n\r\n/**\r\n * Direcci\xF3n con validaci\xF3n estricta\r\n */\r\nexport interface StrictAddress {\r\n  readonly street: string & { __brand: 'NonEmptyString' };\r\n  readonly city: string & { __brand: 'NonEmptyString' };\r\n  readonly state: string & { __brand: 'NonEmptyString' };\r\n  readonly postal_code: string & { __brand: 'PostalCode' };\r\n  readonly country: string & { __brand: 'CountryCode' };\r\n  readonly phone?: string & { __brand: 'PhoneNumber' };\r\n}\r\n\r\n/**\r\n * Historial de estado con validaci\xF3n estricta\r\n */\r\nexport interface StrictOrderStatusHistory {\r\n  readonly id: string & { __brand: 'StatusHistoryId' };\r\n  readonly order_id: string & { __brand: 'OrderId' };\r\n  readonly from_status: OrderStatus | null;\r\n  readonly to_status: OrderStatus;\r\n  readonly reason?: string & { __brand: 'NonEmptyString' };\r\n  readonly admin_id?: string & { __brand: 'AdminId' };\r\n  readonly created_at: string & { __brand: 'ISODateString' };\r\n}\r\n\r\n/**\r\n * Nota de orden con validaci\xF3n estricta\r\n */\r\nexport interface StrictOrderNote {\r\n  readonly id: string & { __brand: 'OrderNoteId' };\r\n  readonly order_id: string & { __brand: 'OrderId' };\r\n  readonly content: string & { __brand: 'NonEmptyString' };\r\n  readonly is_admin_note: boolean;\r\n  readonly admin_id?: string & { __brand: 'AdminId' };\r\n  readonly created_at: string & { __brand: 'ISODateString' };\r\n}\r\n\r\n// ===================================\r\n// RESPUESTAS ESPEC\xCDFICAS DE API\r\n// ===================================\r\n\r\n/**\r\n * Respuesta de lista de \xF3rdenes con tipos estrictos\r\n */\r\nexport interface StrictOrdersListResponse {\r\n  readonly success: true;\r\n  readonly data: {\r\n    readonly orders: readonly StrictOrderEnterprise[];\r\n    readonly pagination: StrictPagination;\r\n    readonly filters: {\r\n      readonly search?: string;\r\n      readonly status?: OrderStatus;\r\n      readonly payment_status?: PaymentStatus;\r\n      readonly fulfillment_status?: FulfillmentStatus;\r\n      readonly date_from?: string & { __brand: 'ISODateString' };\r\n      readonly date_to?: string & { __brand: 'ISODateString' };\r\n    };\r\n    readonly analytics?: {\r\n      readonly total_orders: number & { __brand: 'NonNegativeInteger' };\r\n      readonly total_revenue: number & { __brand: 'NonNegativeAmount' };\r\n      readonly pending_orders: number & { __brand: 'NonNegativeInteger' };\r\n      readonly completed_orders: number & { __brand: 'NonNegativeInteger' };\r\n      readonly today_revenue: number & { __brand: 'NonNegativeAmount' };\r\n    };\r\n  };\r\n  readonly message?: string;\r\n  readonly timestamp: string;\r\n}\r\n\r\n/**\r\n * Respuesta de orden individual con tipos estrictos\r\n */\r\nexport interface StrictOrderDetailResponse {\r\n  readonly success: true;\r\n  readonly data: {\r\n    readonly order: StrictOrderEnterprise;\r\n    readonly timeline?: readonly StrictOrderStatusHistory[];\r\n    readonly related_orders?: readonly Pick<StrictOrderEnterprise, 'id' | 'order_number' | 'status' | 'total'>[];\r\n  };\r\n  readonly message?: string;\r\n  readonly timestamp: string;\r\n}\r\n\r\n// ===================================\r\n// VALIDADORES DE TIPOS\r\n// ===================================\r\n\r\n/**\r\n * Validador para verificar si un objeto es una respuesta de API v\xE1lida\r\n */\r\nexport function isStrictApiResponse<T>(obj: unknown): obj is StrictApiResponse<T> {\r\n  return (\r\n    typeof obj === 'object' &&\r\n    obj !== null &&\r\n    'success' in obj &&\r\n    obj.success === true &&\r\n    'data' in obj &&\r\n    'timestamp' in obj &&\r\n    typeof (obj as any).timestamp === 'string'\r\n  );\r\n}\r\n\r\n/**\r\n * Validador para verificar si un objeto es un error de API v\xE1lido\r\n */\r\nexport function isStrictApiError(obj: unknown): obj is StrictApiError {\r\n  return (\r\n    typeof obj === 'object' &&\r\n    obj !== null &&\r\n    'success' in obj &&\r\n    obj.success === false &&\r\n    'error' in obj &&\r\n    typeof (obj as any).error === 'string' &&\r\n    'timestamp' in obj &&\r\n    typeof (obj as any).timestamp === 'string'\r\n  );\r\n}\r\n\r\n/**\r\n * Validador para verificar si una paginaci\xF3n es v\xE1lida\r\n */\r\nexport function isValidPagination(obj: unknown): obj is StrictPagination {\r\n  if (typeof obj !== 'object' || obj === null) {return false;}\r\n  \r\n  const pagination = obj as any;\r\n  return (\r\n    typeof pagination.page === 'number' &&\r\n    typeof pagination.limit === 'number' &&\r\n    typeof pagination.total === 'number' &&\r\n    typeof pagination.totalPages === 'number' &&\r\n    typeof pagination.hasNextPage === 'boolean' &&\r\n    typeof pagination.hasPreviousPage === 'boolean' &&\r\n    pagination.page > 0 &&\r\n    pagination.limit > 0 &&\r\n    pagination.total >= 0 &&\r\n    pagination.totalPages >= 0\r\n  );\r\n}\r\n\r\n/**\r\n * Validador para verificar si una orden es v\xE1lida (versi\xF3n m\xE1s flexible)\r\n */\r\nexport function isValidStrictOrder(obj: unknown): obj is StrictOrderEnterprise {\r\n  if (typeof obj !== 'object' || obj === null) {\r\n    return false;\r\n  }\r\n  \r\n  const order = obj as any;\r\n  \r\n  // Validaciones m\xEDnimas - solo campos absolutamente esenciales\r\n  const hasId = order.id && (typeof order.id === 'string' || typeof order.id === 'number');\r\n  const hasTotal = typeof order.total === 'number' && order.total >= 0;\r\n  const hasCreatedAt = order.created_at && typeof order.created_at === 'string';\r\n  const hasStatus = order.status && typeof order.status === 'string';\r\n  \r\n  // Solo requerir los campos absolutamente esenciales\r\n  return hasId && hasTotal && hasCreatedAt && hasStatus;\r\n}\r\n\r\n// ===================================\r\n// UTILIDADES DE TRANSFORMACI\xD3N\r\n// ===================================\r\n\r\n/**\r\n * Transforma una respuesta de API no tipada a una respuesta estricta\r\n */\r\nexport function toStrictOrdersResponse(obj: unknown): StrictOrdersListResponse | StrictApiError {\r\n  try {\r\n    if (!isStrictApiResponse(obj)) {\r\n      return {\r\n        success: false,\r\n        error: 'Invalid API response format',\r\n        code: 'INVALID_RESPONSE_FORMAT',\r\n        timestamp: new Date().toISOString(),\r\n        path: '/api/admin/orders'\r\n      };\r\n    }\r\n\r\n    const response = obj as any;\r\n    \r\n    // Validar estructura de datos\r\n    if (!response.data || typeof response.data !== 'object') {\r\n      return {\r\n        success: false,\r\n        error: 'Missing or invalid data field',\r\n        code: 'INVALID_DATA_FIELD',\r\n        timestamp: new Date().toISOString(),\r\n        path: '/api/admin/orders'\r\n      };\r\n    }\r\n\r\n    // Validar \xF3rdenes\r\n    const orders = response.data.orders || [];\r\n    if (!Array.isArray(orders)) {\r\n      return {\r\n        success: false,\r\n        error: 'Orders field must be an array',\r\n        code: 'INVALID_ORDERS_FIELD',\r\n        timestamp: new Date().toISOString(),\r\n        path: '/api/admin/orders'\r\n      };\r\n    }\r\n\r\n    // Validar paginaci\xF3n\r\n    const pagination = response.data.pagination;\r\n    if (pagination && !isValidPagination(pagination)) {\r\n      return {\r\n        success: false,\r\n        error: 'Invalid pagination format',\r\n        code: 'INVALID_PAGINATION',\r\n        timestamp: new Date().toISOString(),\r\n        path: '/api/admin/orders'\r\n      };\r\n    }\r\n\r\n    // Transformar \xF3rdenes para asegurar compatibilidad\r\n    \r\n    // Transformar \xF3rdenes para normalizar tipos\r\n    const transformedOrders = orders.map((order: any) => ({\r\n      ...order,\r\n      id: String(order.id), // Convertir ID a string para compatibilidad frontend\r\n      user_id: order.user_id ? String(order.user_id) : order.user_id,\r\n      total: Number(order.total) || 0,\r\n      created_at: order.created_at || new Date().toISOString(),\r\n      status: order.status || 'pending',\r\n      metadata: order.metadata || {}\r\n    }));\r\n    \r\n    const validOrders = transformedOrders.filter(isValidStrictOrder);\r\n    \r\n    // Crear respuesta estricta con valores por defecto seguros\r\n    return {\r\n      success: true,\r\n      data: {\r\n        orders: validOrders,\r\n        pagination: pagination || {\r\n          page: 1 as any,\r\n          limit: 20 as any,\r\n          total: orders.length as any,\r\n          totalPages: Math.ceil(orders.length / 20) as any,\r\n          hasNextPage: false,\r\n          hasPreviousPage: false\r\n        },\r\n        filters: response.data.filters || {},\r\n        analytics: response.data.analytics\r\n      },\r\n      message: response.message,\r\n      timestamp: response.timestamp || new Date().toISOString()\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      error: `Failed to parse API response: ${error instanceof Error ? error.message : 'Unknown error'}`,\r\n      code: 'PARSE_ERROR',\r\n      timestamp: new Date().toISOString(),\r\n      path: '/api/admin/orders'\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Crea una respuesta de error estricta\r\n */\r\nexport function createStrictApiError(\r\n  error: string,\r\n  code?: string,\r\n  details?: Record<string, unknown>,\r\n  path?: string\r\n): StrictApiError {\r\n  return {\r\n    success: false,\r\n    error,\r\n    code,\r\n    details,\r\n    timestamp: new Date().toISOString(),\r\n    path: path || '/api/unknown'\r\n  };\r\n}\r\n\r\n/**\r\n * Crea una respuesta exitosa estricta\r\n */\r\nexport function createStrictApiResponse<T>(\r\n  data: T,\r\n  message?: string\r\n): StrictApiResponse<T> {\r\n  return {\r\n    success: true,\r\n    data,\r\n    message,\r\n    timestamp: new Date().toISOString()\r\n  };\r\n}\r\n\r\n// ===================================\r\n// TIPOS DE UTILIDAD\r\n// ===================================\r\n\r\n/**\r\n * Extrae el tipo de datos de una respuesta de API\r\n */\r\nexport type ExtractApiData<T> = T extends StrictApiResponse<infer U> ? U : never;\r\n\r\n/**\r\n * Hace que todos los campos de un tipo sean de solo lectura recursivamente\r\n */\r\nexport type DeepReadonly<T> = {\r\n  readonly [P in keyof T]: T[P] extends object ? DeepReadonly<T[P]> : T[P];\r\n};\r\n\r\n/**\r\n * Tipo para funciones que manejan respuestas de API\r\n */\r\nexport type ApiHandler<T, R = void> = (response: ApiResult<T>) => R | Promise<R>;\r\n\r\n/**\r\n * Tipo para opciones de configuraci\xF3n de API\r\n */\r\nexport interface StrictApiOptions {\r\n  readonly timeout?: number;\r\n  readonly retries?: number;\r\n  readonly validateResponse?: boolean;\r\n  readonly throwOnError?: boolean;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["createStrictApiError", "createStrictApiResponse", "isStrictApiError", "isStrictApiResponse", "isValidPagination", "isValidStrictOrder", "toStrictOrdersResponse", "obj", "success", "timestamp", "error", "pagination", "page", "limit", "total", "totalPages", "hasNextPage", "hasPreviousPage", "order", "hasId", "id", "hasTotal", "hasCreatedAt", "created_at", "hasStatus", "status", "code", "Date", "toISOString", "path", "response", "data", "orders", "Array", "isArray", "transformedOrders", "map", "String", "user_id", "Number", "metadata", "validOrders", "filter", "length", "Math", "ceil", "filters", "analytics", "message", "Error", "details"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "55cfb37e11c2dad0e029d758b8a0670ea05f902c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1fou906fvb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1fou906fvb();
cov_1fou906fvb().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1fou906fvb().f[0]++;
  cov_1fou906fvb().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1fou906fvb().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1fou906fvb().s[3]++;
_export(exports, {
  get createStrictApiError() {
    /* istanbul ignore next */
    cov_1fou906fvb().f[1]++;
    cov_1fou906fvb().s[4]++;
    return createStrictApiError;
  },
  get createStrictApiResponse() {
    /* istanbul ignore next */
    cov_1fou906fvb().f[2]++;
    cov_1fou906fvb().s[5]++;
    return createStrictApiResponse;
  },
  get isStrictApiError() {
    /* istanbul ignore next */
    cov_1fou906fvb().f[3]++;
    cov_1fou906fvb().s[6]++;
    return isStrictApiError;
  },
  get isStrictApiResponse() {
    /* istanbul ignore next */
    cov_1fou906fvb().f[4]++;
    cov_1fou906fvb().s[7]++;
    return isStrictApiResponse;
  },
  get isValidPagination() {
    /* istanbul ignore next */
    cov_1fou906fvb().f[5]++;
    cov_1fou906fvb().s[8]++;
    return isValidPagination;
  },
  get isValidStrictOrder() {
    /* istanbul ignore next */
    cov_1fou906fvb().f[6]++;
    cov_1fou906fvb().s[9]++;
    return isValidStrictOrder;
  },
  get toStrictOrdersResponse() {
    /* istanbul ignore next */
    cov_1fou906fvb().f[7]++;
    cov_1fou906fvb().s[10]++;
    return toStrictOrdersResponse;
  }
});
function isStrictApiResponse(obj) {
  /* istanbul ignore next */
  cov_1fou906fvb().f[8]++;
  cov_1fou906fvb().s[11]++;
  return /* istanbul ignore next */(cov_1fou906fvb().b[0][0]++, typeof obj === 'object') &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[0][1]++, obj !== null) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[0][2]++, 'success' in obj) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[0][3]++, obj.success === true) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[0][4]++, 'data' in obj) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[0][5]++, 'timestamp' in obj) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[0][6]++, typeof obj.timestamp === 'string');
}
function isStrictApiError(obj) {
  /* istanbul ignore next */
  cov_1fou906fvb().f[9]++;
  cov_1fou906fvb().s[12]++;
  return /* istanbul ignore next */(cov_1fou906fvb().b[1][0]++, typeof obj === 'object') &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[1][1]++, obj !== null) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[1][2]++, 'success' in obj) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[1][3]++, obj.success === false) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[1][4]++, 'error' in obj) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[1][5]++, typeof obj.error === 'string') &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[1][6]++, 'timestamp' in obj) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[1][7]++, typeof obj.timestamp === 'string');
}
function isValidPagination(obj) {
  /* istanbul ignore next */
  cov_1fou906fvb().f[10]++;
  cov_1fou906fvb().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_1fou906fvb().b[3][0]++, typeof obj !== 'object') ||
  /* istanbul ignore next */
  (cov_1fou906fvb().b[3][1]++, obj === null)) {
    /* istanbul ignore next */
    cov_1fou906fvb().b[2][0]++;
    cov_1fou906fvb().s[14]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_1fou906fvb().b[2][1]++;
  }
  const pagination =
  /* istanbul ignore next */
  (cov_1fou906fvb().s[15]++, obj);
  /* istanbul ignore next */
  cov_1fou906fvb().s[16]++;
  return /* istanbul ignore next */(cov_1fou906fvb().b[4][0]++, typeof pagination.page === 'number') &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[4][1]++, typeof pagination.limit === 'number') &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[4][2]++, typeof pagination.total === 'number') &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[4][3]++, typeof pagination.totalPages === 'number') &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[4][4]++, typeof pagination.hasNextPage === 'boolean') &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[4][5]++, typeof pagination.hasPreviousPage === 'boolean') &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[4][6]++, pagination.page > 0) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[4][7]++, pagination.limit > 0) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[4][8]++, pagination.total >= 0) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[4][9]++, pagination.totalPages >= 0);
}
function isValidStrictOrder(obj) {
  /* istanbul ignore next */
  cov_1fou906fvb().f[11]++;
  cov_1fou906fvb().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_1fou906fvb().b[6][0]++, typeof obj !== 'object') ||
  /* istanbul ignore next */
  (cov_1fou906fvb().b[6][1]++, obj === null)) {
    /* istanbul ignore next */
    cov_1fou906fvb().b[5][0]++;
    cov_1fou906fvb().s[18]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_1fou906fvb().b[5][1]++;
  }
  const order =
  /* istanbul ignore next */
  (cov_1fou906fvb().s[19]++, obj);
  // Validaciones mínimas - solo campos absolutamente esenciales
  const hasId =
  /* istanbul ignore next */
  (cov_1fou906fvb().s[20]++,
  /* istanbul ignore next */
  (cov_1fou906fvb().b[7][0]++, order.id) && (
  /* istanbul ignore next */
  (cov_1fou906fvb().b[7][1]++, typeof order.id === 'string') ||
  /* istanbul ignore next */
  (cov_1fou906fvb().b[7][2]++, typeof order.id === 'number')));
  const hasTotal =
  /* istanbul ignore next */
  (cov_1fou906fvb().s[21]++,
  /* istanbul ignore next */
  (cov_1fou906fvb().b[8][0]++, typeof order.total === 'number') &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[8][1]++, order.total >= 0));
  const hasCreatedAt =
  /* istanbul ignore next */
  (cov_1fou906fvb().s[22]++,
  /* istanbul ignore next */
  (cov_1fou906fvb().b[9][0]++, order.created_at) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[9][1]++, typeof order.created_at === 'string'));
  const hasStatus =
  /* istanbul ignore next */
  (cov_1fou906fvb().s[23]++,
  /* istanbul ignore next */
  (cov_1fou906fvb().b[10][0]++, order.status) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[10][1]++, typeof order.status === 'string'));
  // Solo requerir los campos absolutamente esenciales
  /* istanbul ignore next */
  cov_1fou906fvb().s[24]++;
  return /* istanbul ignore next */(cov_1fou906fvb().b[11][0]++, hasId) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[11][1]++, hasTotal) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[11][2]++, hasCreatedAt) &&
  /* istanbul ignore next */
  (cov_1fou906fvb().b[11][3]++, hasStatus);
}
function toStrictOrdersResponse(obj) {
  /* istanbul ignore next */
  cov_1fou906fvb().f[12]++;
  cov_1fou906fvb().s[25]++;
  try {
    /* istanbul ignore next */
    cov_1fou906fvb().s[26]++;
    if (!isStrictApiResponse(obj)) {
      /* istanbul ignore next */
      cov_1fou906fvb().b[12][0]++;
      cov_1fou906fvb().s[27]++;
      return {
        success: false,
        error: 'Invalid API response format',
        code: 'INVALID_RESPONSE_FORMAT',
        timestamp: new Date().toISOString(),
        path: '/api/admin/orders'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1fou906fvb().b[12][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_1fou906fvb().s[28]++, obj);
    // Validar estructura de datos
    /* istanbul ignore next */
    cov_1fou906fvb().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_1fou906fvb().b[14][0]++, !response.data) ||
    /* istanbul ignore next */
    (cov_1fou906fvb().b[14][1]++, typeof response.data !== 'object')) {
      /* istanbul ignore next */
      cov_1fou906fvb().b[13][0]++;
      cov_1fou906fvb().s[30]++;
      return {
        success: false,
        error: 'Missing or invalid data field',
        code: 'INVALID_DATA_FIELD',
        timestamp: new Date().toISOString(),
        path: '/api/admin/orders'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1fou906fvb().b[13][1]++;
    }
    // Validar órdenes
    const orders =
    /* istanbul ignore next */
    (cov_1fou906fvb().s[31]++,
    /* istanbul ignore next */
    (cov_1fou906fvb().b[15][0]++, response.data.orders) ||
    /* istanbul ignore next */
    (cov_1fou906fvb().b[15][1]++, []));
    /* istanbul ignore next */
    cov_1fou906fvb().s[32]++;
    if (!Array.isArray(orders)) {
      /* istanbul ignore next */
      cov_1fou906fvb().b[16][0]++;
      cov_1fou906fvb().s[33]++;
      return {
        success: false,
        error: 'Orders field must be an array',
        code: 'INVALID_ORDERS_FIELD',
        timestamp: new Date().toISOString(),
        path: '/api/admin/orders'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1fou906fvb().b[16][1]++;
    }
    // Validar paginación
    const pagination =
    /* istanbul ignore next */
    (cov_1fou906fvb().s[34]++, response.data.pagination);
    /* istanbul ignore next */
    cov_1fou906fvb().s[35]++;
    if (
    /* istanbul ignore next */
    (cov_1fou906fvb().b[18][0]++, pagination) &&
    /* istanbul ignore next */
    (cov_1fou906fvb().b[18][1]++, !isValidPagination(pagination))) {
      /* istanbul ignore next */
      cov_1fou906fvb().b[17][0]++;
      cov_1fou906fvb().s[36]++;
      return {
        success: false,
        error: 'Invalid pagination format',
        code: 'INVALID_PAGINATION',
        timestamp: new Date().toISOString(),
        path: '/api/admin/orders'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1fou906fvb().b[17][1]++;
    }
    // Transformar órdenes para asegurar compatibilidad
    // Transformar órdenes para normalizar tipos
    const transformedOrders =
    /* istanbul ignore next */
    (cov_1fou906fvb().s[37]++, orders.map(order => {
      /* istanbul ignore next */
      cov_1fou906fvb().f[13]++;
      cov_1fou906fvb().s[38]++;
      return {
        ...order,
        id: String(order.id),
        user_id: order.user_id ?
        /* istanbul ignore next */
        (cov_1fou906fvb().b[19][0]++, String(order.user_id)) :
        /* istanbul ignore next */
        (cov_1fou906fvb().b[19][1]++, order.user_id),
        total:
        /* istanbul ignore next */
        (cov_1fou906fvb().b[20][0]++, Number(order.total)) ||
        /* istanbul ignore next */
        (cov_1fou906fvb().b[20][1]++, 0),
        created_at:
        /* istanbul ignore next */
        (cov_1fou906fvb().b[21][0]++, order.created_at) ||
        /* istanbul ignore next */
        (cov_1fou906fvb().b[21][1]++, new Date().toISOString()),
        status:
        /* istanbul ignore next */
        (cov_1fou906fvb().b[22][0]++, order.status) ||
        /* istanbul ignore next */
        (cov_1fou906fvb().b[22][1]++, 'pending'),
        metadata:
        /* istanbul ignore next */
        (cov_1fou906fvb().b[23][0]++, order.metadata) ||
        /* istanbul ignore next */
        (cov_1fou906fvb().b[23][1]++, {})
      };
    }));
    const validOrders =
    /* istanbul ignore next */
    (cov_1fou906fvb().s[39]++, transformedOrders.filter(isValidStrictOrder));
    // Crear respuesta estricta con valores por defecto seguros
    /* istanbul ignore next */
    cov_1fou906fvb().s[40]++;
    return {
      success: true,
      data: {
        orders: validOrders,
        pagination:
        /* istanbul ignore next */
        (cov_1fou906fvb().b[24][0]++, pagination) ||
        /* istanbul ignore next */
        (cov_1fou906fvb().b[24][1]++, {
          page: 1,
          limit: 20,
          total: orders.length,
          totalPages: Math.ceil(orders.length / 20),
          hasNextPage: false,
          hasPreviousPage: false
        }),
        filters:
        /* istanbul ignore next */
        (cov_1fou906fvb().b[25][0]++, response.data.filters) ||
        /* istanbul ignore next */
        (cov_1fou906fvb().b[25][1]++, {}),
        analytics: response.data.analytics
      },
      message: response.message,
      timestamp:
      /* istanbul ignore next */
      (cov_1fou906fvb().b[26][0]++, response.timestamp) ||
      /* istanbul ignore next */
      (cov_1fou906fvb().b[26][1]++, new Date().toISOString())
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1fou906fvb().s[41]++;
    return {
      success: false,
      error: `Failed to parse API response: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_1fou906fvb().b[27][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1fou906fvb().b[27][1]++, 'Unknown error')}`,
      code: 'PARSE_ERROR',
      timestamp: new Date().toISOString(),
      path: '/api/admin/orders'
    };
  }
}
function createStrictApiError(error, code, details, path) {
  /* istanbul ignore next */
  cov_1fou906fvb().f[14]++;
  cov_1fou906fvb().s[42]++;
  return {
    success: false,
    error,
    code,
    details,
    timestamp: new Date().toISOString(),
    path:
    /* istanbul ignore next */
    (cov_1fou906fvb().b[28][0]++, path) ||
    /* istanbul ignore next */
    (cov_1fou906fvb().b[28][1]++, '/api/unknown')
  };
}
function createStrictApiResponse(data, message) {
  /* istanbul ignore next */
  cov_1fou906fvb().f[15]++;
  cov_1fou906fvb().s[43]++;
  return {
    success: true,
    data,
    message,
    timestamp: new Date().toISOString()
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,