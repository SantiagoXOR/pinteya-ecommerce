e2d351ca5a1a35eae9131184880bfe07
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_12htlmcz3p() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\settings\\route.ts";
  var hash = "2b35a6496d1a8bc12c0edde2a9b135123a9d2b04";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\settings\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 19
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 23
        }
      },
      "8": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "9": {
        start: {
          line: 27,
          column: 18
        },
        end: {
          line: 27,
          column: 66
        }
      },
      "10": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 54
        }
      },
      "11": {
        start: {
          line: 29,
          column: 13
        },
        end: {
          line: 29,
          column: 27
        }
      },
      "12": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 60
        }
      },
      "13": {
        start: {
          line: 31,
          column: 22
        },
        end: {
          line: 31,
          column: 67
        }
      },
      "14": {
        start: {
          line: 32,
          column: 21
        },
        end: {
          line: 32,
          column: 71
        }
      },
      "15": {
        start: {
          line: 33,
          column: 17
        },
        end: {
          line: 33,
          column: 62
        }
      },
      "16": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 24
        }
      },
      "17": {
        start: {
          line: 38,
          column: 29
        },
        end: {
          line: 97,
          column: 2
        }
      },
      "18": {
        start: {
          line: 101,
          column: 25
        },
        end: {
          line: 160,
          column: 1
        }
      },
      "19": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 204,
          column: 5
        }
      },
      "20": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "21": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 175,
          column: 14
        }
      },
      "22": {
        start: {
          line: 177,
          column: 24
        },
        end: {
          line: 177,
          column: 49
        }
      },
      "23": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "24": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 182,
          column: 14
        }
      },
      "25": {
        start: {
          line: 185,
          column: 24
        },
        end: {
          line: 185,
          column: 68
        }
      },
      "26": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 191,
          column: 9
        }
      },
      "27": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 190,
          column: 14
        }
      },
      "28": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 195,
          column: 10
        }
      },
      "29": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 199,
          column: 11
        }
      },
      "30": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 203,
          column: 10
        }
      },
      "31": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 249,
          column: 5
        }
      },
      "32": {
        start: {
          line: 211,
          column: 42
        },
        end: {
          line: 213,
          column: 10
        }
      },
      "33": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 219,
          column: 9
        }
      },
      "34": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 217,
          column: 15
        }
      },
      "35": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 36
        }
      },
      "36": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 224,
          column: 9
        }
      },
      "37": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 46
        }
      },
      "38": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 36
        }
      },
      "39": {
        start: {
          line: 226,
          column: 23
        },
        end: {
          line: 226,
          column: 67
        }
      },
      "40": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 242,
          column: 11
        }
      },
      "41": {
        start: {
          line: 228,
          column: 25
        },
        end: {
          line: 228,
          column: 47
        }
      },
      "42": {
        start: {
          line: 229,
          column: 26
        },
        end: {
          line: 229,
          column: 32
        }
      },
      "43": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 235,
          column: 13
        }
      },
      "44": {
        start: {
          line: 230,
          column: 24
        },
        end: {
          line: 230,
          column: 25
        }
      },
      "45": {
        start: {
          line: 231,
          column: 16
        },
        end: {
          line: 233,
          column: 17
        }
      },
      "46": {
        start: {
          line: 232,
          column: 20
        },
        end: {
          line: 232,
          column: 42
        }
      },
      "47": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 234,
          column: 43
        }
      },
      "48": {
        start: {
          line: 236,
          column: 28
        },
        end: {
          line: 236,
          column: 49
        }
      },
      "49": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 241,
          column: 13
        }
      },
      "50": {
        start: {
          line: 238,
          column: 16
        },
        end: {
          line: 238,
          column: 61
        }
      },
      "51": {
        start: {
          line: 240,
          column: 16
        },
        end: {
          line: 240,
          column: 49
        }
      },
      "52": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 243,
          column: 22
        }
      },
      "53": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 247,
          column: 11
        }
      },
      "54": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 32
        }
      },
      "55": {
        start: {
          line: 252,
          column: 29
        },
        end: {
          line: 252,
          column: 31
        }
      },
      "56": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 267,
          column: 11
        }
      },
      "57": {
        start: {
          line: 256,
          column: 28
        },
        end: {
          line: 256,
          column: 61
        }
      },
      "58": {
        start: {
          line: 257,
          column: 26
        },
        end: {
          line: 257,
          column: 34
        }
      },
      "59": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 266,
          column: 13
        }
      },
      "60": {
        start: {
          line: 259,
          column: 16
        },
        end: {
          line: 259,
          column: 53
        }
      },
      "61": {
        start: {
          line: 261,
          column: 16
        },
        end: {
          line: 265,
          column: 19
        }
      },
      "62": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 269,
          column: 29
        }
      },
      "63": {
        start: {
          line: 270,
          column: 4
        },
        end: {
          line: 272,
          column: 5
        }
      },
      "64": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 271,
          column: 15
        }
      },
      "65": {
        start: {
          line: 274,
          column: 4
        },
        end: {
          line: 291,
          column: 5
        }
      },
      "66": {
        start: {
          line: 275,
          column: 26
        },
        end: {
          line: 283,
          column: 10
        }
      },
      "67": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "68": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 288,
          column: 15
        }
      },
      "69": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 79
        }
      },
      "70": {
        start: {
          line: 293,
          column: 4
        },
        end: {
          line: 297,
          column: 7
        }
      },
      "71": {
        start: {
          line: 295,
          column: 47
        },
        end: {
          line: 295,
          column: 52
        }
      },
      "72": {
        start: {
          line: 300,
          column: 4
        },
        end: {
          line: 335,
          column: 5
        }
      },
      "73": {
        start: {
          line: 301,
          column: 33
        },
        end: {
          line: 301,
          column: 35
        }
      },
      "74": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 315,
          column: 15
        }
      },
      "75": {
        start: {
          line: 304,
          column: 32
        },
        end: {
          line: 304,
          column: 65
        }
      },
      "76": {
        start: {
          line: 305,
          column: 30
        },
        end: {
          line: 305,
          column: 38
        }
      },
      "77": {
        start: {
          line: 306,
          column: 16
        },
        end: {
          line: 314,
          column: 17
        }
      },
      "78": {
        start: {
          line: 307,
          column: 20
        },
        end: {
          line: 307,
          column: 57
        }
      },
      "79": {
        start: {
          line: 309,
          column: 20
        },
        end: {
          line: 313,
          column: 23
        }
      },
      "80": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 317,
          column: 42
        }
      },
      "81": {
        start: {
          line: 318,
          column: 26
        },
        end: {
          line: 323,
          column: 16
        }
      },
      "82": {
        start: {
          line: 318,
          column: 120
        },
        end: {
          line: 323,
          column: 13
        }
      },
      "83": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 330,
          column: 9
        }
      },
      "84": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 327,
          column: 15
        }
      },
      "85": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 329,
          column: 127
        }
      },
      "86": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 334,
          column: 11
        }
      },
      "87": {
        start: {
          line: 338,
          column: 4
        },
        end: {
          line: 356,
          column: 5
        }
      },
      "88": {
        start: {
          line: 340,
          column: 39
        },
        end: {
          line: 340,
          column: 151
        }
      },
      "89": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 343,
          column: 9
        }
      },
      "90": {
        start: {
          line: 342,
          column: 12
        },
        end: {
          line: 342,
          column: 30
        }
      },
      "91": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 345,
          column: 42
        }
      },
      "92": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 350,
          column: 11
        }
      },
      "93": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 354,
          column: 11
        }
      },
      "94": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 355,
          column: 20
        }
      },
      "95": {
        start: {
          line: 359,
          column: 22
        },
        end: {
          line: 359,
          column: 32
        }
      },
      "96": {
        start: {
          line: 360,
          column: 4
        },
        end: {
          line: 426,
          column: 5
        }
      },
      "97": {
        start: {
          line: 362,
          column: 32
        },
        end: {
          line: 366,
          column: 28
        }
      },
      "98": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 375,
          column: 9
        }
      },
      "99": {
        start: {
          line: 368,
          column: 29
        },
        end: {
          line: 372,
          column: 14
        }
      },
      "100": {
        start: {
          line: 373,
          column: 12
        },
        end: {
          line: 373,
          column: 77
        }
      },
      "101": {
        start: {
          line: 374,
          column: 12
        },
        end: {
          line: 374,
          column: 28
        }
      },
      "102": {
        start: {
          line: 377,
          column: 27
        },
        end: {
          line: 377,
          column: 52
        }
      },
      "103": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 387,
          column: 9
        }
      },
      "104": {
        start: {
          line: 379,
          column: 34
        },
        end: {
          line: 383,
          column: 13
        }
      },
      "105": {
        start: {
          line: 384,
          column: 12
        },
        end: {
          line: 386,
          column: 15
        }
      },
      "106": {
        start: {
          line: 389,
          column: 25
        },
        end: {
          line: 389,
          column: 50
        }
      },
      "107": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 397,
          column: 11
        }
      },
      "108": {
        start: {
          line: 398,
          column: 25
        },
        end: {
          line: 402,
          column: 9
        }
      },
      "109": {
        start: {
          line: 403,
          column: 29
        },
        end: {
          line: 403,
          column: 64
        }
      },
      "110": {
        start: {
          line: 404,
          column: 8
        },
        end: {
          line: 404,
          column: 77
        }
      },
      "111": {
        start: {
          line: 405,
          column: 8
        },
        end: {
          line: 405,
          column: 28
        }
      },
      "112": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 409,
          column: 11
        }
      },
      "113": {
        start: {
          line: 411,
          column: 8
        },
        end: {
          line: 417,
          column: 11
        }
      },
      "114": {
        start: {
          line: 418,
          column: 30
        },
        end: {
          line: 422,
          column: 9
        }
      },
      "115": {
        start: {
          line: 423,
          column: 8
        },
        end: {
          line: 425,
          column: 11
        }
      },
      "116": {
        start: {
          line: 429,
          column: 22
        },
        end: {
          line: 429,
          column: 32
        }
      },
      "117": {
        start: {
          line: 430,
          column: 4
        },
        end: {
          line: 511,
          column: 5
        }
      },
      "118": {
        start: {
          line: 432,
          column: 32
        },
        end: {
          line: 436,
          column: 35
        }
      },
      "119": {
        start: {
          line: 437,
          column: 8
        },
        end: {
          line: 445,
          column: 9
        }
      },
      "120": {
        start: {
          line: 438,
          column: 29
        },
        end: {
          line: 442,
          column: 14
        }
      },
      "121": {
        start: {
          line: 443,
          column: 12
        },
        end: {
          line: 443,
          column: 77
        }
      },
      "122": {
        start: {
          line: 444,
          column: 12
        },
        end: {
          line: 444,
          column: 28
        }
      },
      "123": {
        start: {
          line: 447,
          column: 27
        },
        end: {
          line: 447,
          column: 52
        }
      },
      "124": {
        start: {
          line: 448,
          column: 8
        },
        end: {
          line: 457,
          column: 9
        }
      },
      "125": {
        start: {
          line: 449,
          column: 34
        },
        end: {
          line: 453,
          column: 13
        }
      },
      "126": {
        start: {
          line: 454,
          column: 12
        },
        end: {
          line: 456,
          column: 15
        }
      },
      "127": {
        start: {
          line: 459,
          column: 21
        },
        end: {
          line: 459,
          column: 41
        }
      },
      "128": {
        start: {
          line: 460,
          column: 33
        },
        end: {
          line: 460,
          column: 69
        }
      },
      "129": {
        start: {
          line: 461,
          column: 8
        },
        end: {
          line: 470,
          column: 9
        }
      },
      "130": {
        start: {
          line: 462,
          column: 34
        },
        end: {
          line: 466,
          column: 13
        }
      },
      "131": {
        start: {
          line: 467,
          column: 12
        },
        end: {
          line: 469,
          column: 15
        }
      },
      "132": {
        start: {
          line: 472,
          column: 8
        },
        end: {
          line: 472,
          column: 77
        }
      },
      "133": {
        start: {
          line: 474,
          column: 32
        },
        end: {
          line: 474,
          column: 57
        }
      },
      "134": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 482,
          column: 11
        }
      },
      "135": {
        start: {
          line: 483,
          column: 25
        },
        end: {
          line: 487,
          column: 9
        }
      },
      "136": {
        start: {
          line: 488,
          column: 29
        },
        end: {
          line: 488,
          column: 64
        }
      },
      "137": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 489,
          column: 77
        }
      },
      "138": {
        start: {
          line: 490,
          column: 8
        },
        end: {
          line: 490,
          column: 28
        }
      },
      "139": {
        start: {
          line: 492,
          column: 8
        },
        end: {
          line: 494,
          column: 11
        }
      },
      "140": {
        start: {
          line: 496,
          column: 8
        },
        end: {
          line: 502,
          column: 11
        }
      },
      "141": {
        start: {
          line: 503,
          column: 30
        },
        end: {
          line: 507,
          column: 9
        }
      },
      "142": {
        start: {
          line: 508,
          column: 8
        },
        end: {
          line: 510,
          column: 11
        }
      },
      "143": {
        start: {
          line: 514,
          column: 22
        },
        end: {
          line: 514,
          column: 32
        }
      },
      "144": {
        start: {
          line: 515,
          column: 4
        },
        end: {
          line: 583,
          column: 5
        }
      },
      "145": {
        start: {
          line: 517,
          column: 32
        },
        end: {
          line: 521,
          column: 34
        }
      },
      "146": {
        start: {
          line: 522,
          column: 8
        },
        end: {
          line: 530,
          column: 9
        }
      },
      "147": {
        start: {
          line: 523,
          column: 29
        },
        end: {
          line: 527,
          column: 14
        }
      },
      "148": {
        start: {
          line: 528,
          column: 12
        },
        end: {
          line: 528,
          column: 77
        }
      },
      "149": {
        start: {
          line: 529,
          column: 12
        },
        end: {
          line: 529,
          column: 28
        }
      },
      "150": {
        start: {
          line: 532,
          column: 27
        },
        end: {
          line: 532,
          column: 52
        }
      },
      "151": {
        start: {
          line: 533,
          column: 8
        },
        end: {
          line: 542,
          column: 9
        }
      },
      "152": {
        start: {
          line: 534,
          column: 34
        },
        end: {
          line: 538,
          column: 13
        }
      },
      "153": {
        start: {
          line: 539,
          column: 12
        },
        end: {
          line: 541,
          column: 15
        }
      },
      "154": {
        start: {
          line: 544,
          column: 8
        },
        end: {
          line: 544,
          column: 49
        }
      },
      "155": {
        start: {
          line: 546,
          column: 32
        },
        end: {
          line: 546,
          column: 57
        }
      },
      "156": {
        start: {
          line: 548,
          column: 8
        },
        end: {
          line: 554,
          column: 11
        }
      },
      "157": {
        start: {
          line: 555,
          column: 25
        },
        end: {
          line: 559,
          column: 9
        }
      },
      "158": {
        start: {
          line: 560,
          column: 29
        },
        end: {
          line: 560,
          column: 64
        }
      },
      "159": {
        start: {
          line: 561,
          column: 8
        },
        end: {
          line: 561,
          column: 77
        }
      },
      "160": {
        start: {
          line: 562,
          column: 8
        },
        end: {
          line: 562,
          column: 28
        }
      },
      "161": {
        start: {
          line: 564,
          column: 8
        },
        end: {
          line: 566,
          column: 11
        }
      },
      "162": {
        start: {
          line: 568,
          column: 8
        },
        end: {
          line: 574,
          column: 11
        }
      },
      "163": {
        start: {
          line: 575,
          column: 30
        },
        end: {
          line: 579,
          column: 9
        }
      },
      "164": {
        start: {
          line: 580,
          column: 8
        },
        end: {
          line: 582,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "validateAdminAuth",
        decl: {
          start: {
            line: 164,
            column: 15
          },
          end: {
            line: 164,
            column: 32
          }
        },
        loc: {
          start: {
            line: 164,
            column: 35
          },
          end: {
            line: 205,
            column: 1
          }
        },
        line: 164
      },
      "6": {
        name: "getSystemSettings",
        decl: {
          start: {
            line: 209,
            column: 15
          },
          end: {
            line: 209,
            column: 32
          }
        },
        loc: {
          start: {
            line: 209,
            column: 35
          },
          end: {
            line: 250,
            column: 1
          }
        },
        line: 209
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 227,
            column: 25
          },
          end: {
            line: 227,
            column: 26
          }
        },
        loc: {
          start: {
            line: 227,
            column: 36
          },
          end: {
            line: 242,
            column: 9
          }
        },
        line: 227
      },
      "8": {
        name: "updateSystemSettings",
        decl: {
          start: {
            line: 251,
            column: 15
          },
          end: {
            line: 251,
            column: 35
          }
        },
        loc: {
          start: {
            line: 251,
            column: 58
          },
          end: {
            line: 298,
            column: 1
          }
        },
        line: 251
      },
      "9": {
        name: "flattenSettings",
        decl: {
          start: {
            line: 254,
            column: 13
          },
          end: {
            line: 254,
            column: 28
          }
        },
        loc: {
          start: {
            line: 254,
            column: 62
          },
          end: {
            line: 268,
            column: 5
          }
        },
        line: 254
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 255,
            column: 33
          },
          end: {
            line: 255,
            column: 34
          }
        },
        loc: {
          start: {
            line: 255,
            column: 40
          },
          end: {
            line: 267,
            column: 9
          }
        },
        line: 255
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 295,
            column: 42
          },
          end: {
            line: 295,
            column: 43
          }
        },
        loc: {
          start: {
            line: 295,
            column: 47
          },
          end: {
            line: 295,
            column: 52
          }
        },
        line: 295
      },
      "12": {
        name: "initializeDefaultSettings",
        decl: {
          start: {
            line: 299,
            column: 15
          },
          end: {
            line: 299,
            column: 40
          }
        },
        loc: {
          start: {
            line: 299,
            column: 43
          },
          end: {
            line: 336,
            column: 1
          }
        },
        line: 299
      },
      "13": {
        name: "flattenDefaults",
        decl: {
          start: {
            line: 302,
            column: 17
          },
          end: {
            line: 302,
            column: 32
          }
        },
        loc: {
          start: {
            line: 302,
            column: 66
          },
          end: {
            line: 316,
            column: 9
          }
        },
        line: 302
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 303,
            column: 37
          },
          end: {
            line: 303,
            column: 38
          }
        },
        loc: {
          start: {
            line: 303,
            column: 44
          },
          end: {
            line: 315,
            column: 13
          }
        },
        line: 303
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 318,
            column: 108
          },
          end: {
            line: 318,
            column: 109
          }
        },
        loc: {
          start: {
            line: 318,
            column: 120
          },
          end: {
            line: 323,
            column: 13
          }
        },
        line: 318
      },
      "16": {
        name: "resetToDefaults",
        decl: {
          start: {
            line: 337,
            column: 15
          },
          end: {
            line: 337,
            column: 30
          }
        },
        loc: {
          start: {
            line: 337,
            column: 44
          },
          end: {
            line: 357,
            column: 1
          }
        },
        line: 337
      },
      "17": {
        name: "GET",
        decl: {
          start: {
            line: 358,
            column: 15
          },
          end: {
            line: 358,
            column: 18
          }
        },
        loc: {
          start: {
            line: 358,
            column: 28
          },
          end: {
            line: 427,
            column: 1
          }
        },
        line: 358
      },
      "18": {
        name: "PUT",
        decl: {
          start: {
            line: 428,
            column: 15
          },
          end: {
            line: 428,
            column: 18
          }
        },
        loc: {
          start: {
            line: 428,
            column: 28
          },
          end: {
            line: 512,
            column: 1
          }
        },
        line: 428
      },
      "19": {
        name: "POST",
        decl: {
          start: {
            line: 513,
            column: 15
          },
          end: {
            line: 513,
            column: 19
          }
        },
        loc: {
          start: {
            line: 513,
            column: 29
          },
          end: {
            line: 584,
            column: 1
          }
        },
        line: 513
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "1": {
        loc: {
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 167,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 167,
            column: 50
          }
        }, {
          start: {
            line: 167,
            column: 54
          },
          end: {
            line: 167,
            column: 88
          }
        }],
        line: 167
      },
      "2": {
        loc: {
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "3": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "4": {
        loc: {
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 219,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 219,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "5": {
        loc: {
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "6": {
        loc: {
          start: {
            line: 220,
            column: 12
          },
          end: {
            line: 220,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 220,
            column: 12
          },
          end: {
            line: 220,
            column: 21
          }
        }, {
          start: {
            line: 220,
            column: 25
          },
          end: {
            line: 220,
            column: 46
          }
        }],
        line: 220
      },
      "7": {
        loc: {
          start: {
            line: 231,
            column: 16
          },
          end: {
            line: 233,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 16
          },
          end: {
            line: 233,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      },
      "8": {
        loc: {
          start: {
            line: 254,
            column: 34
          },
          end: {
            line: 254,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 254,
            column: 43
          },
          end: {
            line: 254,
            column: 45
          }
        }],
        line: 254
      },
      "9": {
        loc: {
          start: {
            line: 254,
            column: 47
          },
          end: {
            line: 254,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 254,
            column: 58
          },
          end: {
            line: 254,
            column: 60
          }
        }],
        line: 254
      },
      "10": {
        loc: {
          start: {
            line: 256,
            column: 28
          },
          end: {
            line: 256,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 256,
            column: 37
          },
          end: {
            line: 256,
            column: 55
          }
        }, {
          start: {
            line: 256,
            column: 58
          },
          end: {
            line: 256,
            column: 61
          }
        }],
        line: 256
      },
      "11": {
        loc: {
          start: {
            line: 258,
            column: 12
          },
          end: {
            line: 266,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 12
          },
          end: {
            line: 266,
            column: 13
          }
        }, {
          start: {
            line: 260,
            column: 19
          },
          end: {
            line: 266,
            column: 13
          }
        }],
        line: 258
      },
      "12": {
        loc: {
          start: {
            line: 258,
            column: 16
          },
          end: {
            line: 258,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 258,
            column: 16
          },
          end: {
            line: 258,
            column: 41
          }
        }, {
          start: {
            line: 258,
            column: 45
          },
          end: {
            line: 258,
            column: 59
          }
        }, {
          start: {
            line: 258,
            column: 63
          },
          end: {
            line: 258,
            column: 84
          }
        }],
        line: 258
      },
      "13": {
        loc: {
          start: {
            line: 264,
            column: 30
          },
          end: {
            line: 264,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 264,
            column: 30
          },
          end: {
            line: 264,
            column: 38
          }
        }, {
          start: {
            line: 264,
            column: 42
          },
          end: {
            line: 264,
            column: 45
          }
        }],
        line: 264
      },
      "14": {
        loc: {
          start: {
            line: 270,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "15": {
        loc: {
          start: {
            line: 284,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 284
      },
      "16": {
        loc: {
          start: {
            line: 302,
            column: 38
          },
          end: {
            line: 302,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 302,
            column: 47
          },
          end: {
            line: 302,
            column: 49
          }
        }],
        line: 302
      },
      "17": {
        loc: {
          start: {
            line: 302,
            column: 51
          },
          end: {
            line: 302,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 302,
            column: 62
          },
          end: {
            line: 302,
            column: 64
          }
        }],
        line: 302
      },
      "18": {
        loc: {
          start: {
            line: 304,
            column: 32
          },
          end: {
            line: 304,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 304,
            column: 41
          },
          end: {
            line: 304,
            column: 59
          }
        }, {
          start: {
            line: 304,
            column: 62
          },
          end: {
            line: 304,
            column: 65
          }
        }],
        line: 304
      },
      "19": {
        loc: {
          start: {
            line: 306,
            column: 16
          },
          end: {
            line: 314,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 16
          },
          end: {
            line: 314,
            column: 17
          }
        }, {
          start: {
            line: 308,
            column: 23
          },
          end: {
            line: 314,
            column: 17
          }
        }],
        line: 306
      },
      "20": {
        loc: {
          start: {
            line: 306,
            column: 20
          },
          end: {
            line: 306,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 306,
            column: 20
          },
          end: {
            line: 306,
            column: 45
          }
        }, {
          start: {
            line: 306,
            column: 49
          },
          end: {
            line: 306,
            column: 63
          }
        }, {
          start: {
            line: 306,
            column: 67
          },
          end: {
            line: 306,
            column: 88
          }
        }],
        line: 306
      },
      "21": {
        loc: {
          start: {
            line: 312,
            column: 34
          },
          end: {
            line: 312,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 312,
            column: 34
          },
          end: {
            line: 312,
            column: 42
          }
        }, {
          start: {
            line: 312,
            column: 46
          },
          end: {
            line: 312,
            column: 49
          }
        }],
        line: 312
      },
      "22": {
        loc: {
          start: {
            line: 324,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 324,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        }, {
          start: {
            line: 328,
            column: 15
          },
          end: {
            line: 330,
            column: 9
          }
        }],
        line: 324
      },
      "23": {
        loc: {
          start: {
            line: 341,
            column: 8
          },
          end: {
            line: 343,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 341,
            column: 8
          },
          end: {
            line: 343,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 341
      },
      "24": {
        loc: {
          start: {
            line: 365,
            column: 21
          },
          end: {
            line: 365,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 365,
            column: 21
          },
          end: {
            line: 365,
            column: 66
          }
        }, {
          start: {
            line: 365,
            column: 70
          },
          end: {
            line: 365,
            column: 110
          }
        }],
        line: 365
      },
      "25": {
        loc: {
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 375,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 375,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "26": {
        loc: {
          start: {
            line: 378,
            column: 8
          },
          end: {
            line: 387,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 378,
            column: 8
          },
          end: {
            line: 387,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 378
      },
      "27": {
        loc: {
          start: {
            line: 416,
            column: 19
          },
          end: {
            line: 416,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 416,
            column: 44
          },
          end: {
            line: 416,
            column: 57
          }
        }, {
          start: {
            line: 416,
            column: 60
          },
          end: {
            line: 416,
            column: 75
          }
        }],
        line: 416
      },
      "28": {
        loc: {
          start: {
            line: 437,
            column: 8
          },
          end: {
            line: 445,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 437,
            column: 8
          },
          end: {
            line: 445,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 437
      },
      "29": {
        loc: {
          start: {
            line: 448,
            column: 8
          },
          end: {
            line: 457,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 448,
            column: 8
          },
          end: {
            line: 457,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 448
      },
      "30": {
        loc: {
          start: {
            line: 461,
            column: 8
          },
          end: {
            line: 470,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 461,
            column: 8
          },
          end: {
            line: 470,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 461
      },
      "31": {
        loc: {
          start: {
            line: 501,
            column: 19
          },
          end: {
            line: 501,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 501,
            column: 44
          },
          end: {
            line: 501,
            column: 57
          }
        }, {
          start: {
            line: 501,
            column: 60
          },
          end: {
            line: 501,
            column: 75
          }
        }],
        line: 501
      },
      "32": {
        loc: {
          start: {
            line: 522,
            column: 8
          },
          end: {
            line: 530,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 522,
            column: 8
          },
          end: {
            line: 530,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 522
      },
      "33": {
        loc: {
          start: {
            line: 533,
            column: 8
          },
          end: {
            line: 542,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 533,
            column: 8
          },
          end: {
            line: 542,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 533
      },
      "34": {
        loc: {
          start: {
            line: 573,
            column: 19
          },
          end: {
            line: 573,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 573,
            column: 44
          },
          end: {
            line: 573,
            column: 57
          }
        }, {
          start: {
            line: 573,
            column: 60
          },
          end: {
            line: 573,
            column: 75
          }
        }],
        line: 573
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0],
      "9": [0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\settings\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - ADMIN SETTINGS API ENTERPRISE\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { ApiResponse } from '@/types/api';\r\nimport { z } from 'zod';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\nimport { checkRateLimit } from '@/lib/auth/rate-limiting';\r\nimport { addRateLimitHeaders, RATE_LIMIT_CONFIGS } from '@/lib/enterprise/rate-limiter';\r\nimport { metricsCollector } from '@/lib/enterprise/metrics';\r\n\r\n// ===================================\r\n// SCHEMAS DE VALIDACI\xD3N\r\n// ===================================\r\n\r\nconst SystemSettingsSchema = z.object({\r\n  general: z.object({\r\n    site_name: z.string().min(1).max(100).optional(),\r\n    site_description: z.string().max(500).optional(),\r\n    site_url: z.string().url().optional(),\r\n    contact_email: z.string().email().optional(),\r\n    support_phone: z.string().optional(),\r\n    timezone: z.string().optional(),\r\n    currency: z.string().length(3).optional(),\r\n    language: z.string().length(2).optional(),\r\n    maintenance_mode: z.boolean().optional()\r\n  }).optional(),\r\n  \r\n  ecommerce: z.object({\r\n    tax_rate: z.number().min(0).max(100).optional(),\r\n    shipping_cost: z.number().min(0).optional(),\r\n    free_shipping_threshold: z.number().min(0).optional(),\r\n    inventory_tracking: z.boolean().optional(),\r\n    low_stock_threshold: z.number().min(0).optional(),\r\n    allow_backorders: z.boolean().optional(),\r\n    auto_approve_reviews: z.boolean().optional(),\r\n    max_cart_items: z.number().min(1).max(100).optional(),\r\n    session_timeout: z.number().min(5).max(1440).optional() // minutos\r\n  }).optional(),\r\n  \r\n  payments: z.object({\r\n    stripe_enabled: z.boolean().optional(),\r\n    paypal_enabled: z.boolean().optional(),\r\n    mercadopago_enabled: z.boolean().optional(),\r\n    cash_on_delivery: z.boolean().optional(),\r\n    bank_transfer: z.boolean().optional(),\r\n    payment_timeout: z.number().min(5).max(60).optional() // minutos\r\n  }).optional(),\r\n  \r\n  notifications: z.object({\r\n    email_notifications: z.boolean().optional(),\r\n    sms_notifications: z.boolean().optional(),\r\n    push_notifications: z.boolean().optional(),\r\n    order_confirmation: z.boolean().optional(),\r\n    shipping_updates: z.boolean().optional(),\r\n    marketing_emails: z.boolean().optional(),\r\n    low_stock_alerts: z.boolean().optional(),\r\n    new_order_alerts: z.boolean().optional()\r\n  }).optional(),\r\n  \r\n  security: z.object({\r\n    two_factor_auth: z.boolean().optional(),\r\n    password_min_length: z.number().min(6).max(50).optional(),\r\n    session_duration: z.number().min(1).max(168).optional(), // horas\r\n    max_login_attempts: z.number().min(3).max(10).optional(),\r\n    lockout_duration: z.number().min(5).max(1440).optional(), // minutos\r\n    require_email_verification: z.boolean().optional(),\r\n    admin_ip_whitelist: z.array(z.string().ip()).optional()\r\n  }).optional(),\r\n  \r\n  integrations: z.object({\r\n    google_analytics_id: z.string().optional(),\r\n    facebook_pixel_id: z.string().optional(),\r\n    google_tag_manager_id: z.string().optional(),\r\n    mailchimp_api_key: z.string().optional(),\r\n    sendgrid_api_key: z.string().optional(),\r\n    cloudinary_cloud_name: z.string().optional(),\r\n    aws_s3_bucket: z.string().optional()\r\n  }).optional()\r\n});\r\n\r\n// ===================================\r\n// TIPOS DE DATOS\r\n// ===================================\r\n\r\ninterface SystemSettings {\r\n  general: {\r\n    site_name: string;\r\n    site_description: string;\r\n    site_url: string;\r\n    contact_email: string;\r\n    support_phone: string;\r\n    timezone: string;\r\n    currency: string;\r\n    language: string;\r\n    maintenance_mode: boolean;\r\n  };\r\n  ecommerce: {\r\n    tax_rate: number;\r\n    shipping_cost: number;\r\n    free_shipping_threshold: number;\r\n    inventory_tracking: boolean;\r\n    low_stock_threshold: number;\r\n    allow_backorders: boolean;\r\n    auto_approve_reviews: boolean;\r\n    max_cart_items: number;\r\n    session_timeout: number;\r\n  };\r\n  payments: {\r\n    stripe_enabled: boolean;\r\n    paypal_enabled: boolean;\r\n    mercadopago_enabled: boolean;\r\n    cash_on_delivery: boolean;\r\n    bank_transfer: boolean;\r\n    payment_timeout: number;\r\n  };\r\n  notifications: {\r\n    email_notifications: boolean;\r\n    sms_notifications: boolean;\r\n    push_notifications: boolean;\r\n    order_confirmation: boolean;\r\n    shipping_updates: boolean;\r\n    marketing_emails: boolean;\r\n    low_stock_alerts: boolean;\r\n    new_order_alerts: boolean;\r\n  };\r\n  security: {\r\n    two_factor_auth: boolean;\r\n    password_min_length: number;\r\n    session_duration: number;\r\n    max_login_attempts: number;\r\n    lockout_duration: number;\r\n    require_email_verification: boolean;\r\n    admin_ip_whitelist: string[];\r\n  };\r\n  integrations: {\r\n    google_analytics_id: string;\r\n    facebook_pixel_id: string;\r\n    google_tag_manager_id: string;\r\n    mailchimp_api_key: string;\r\n    sendgrid_api_key: string;\r\n    cloudinary_cloud_name: string;\r\n    aws_s3_bucket: string;\r\n  };\r\n}\r\n\r\n// ===================================\r\n// CONFIGURACIONES POR DEFECTO\r\n// ===================================\r\n\r\nconst DEFAULT_SETTINGS: SystemSettings = {\r\n  general: {\r\n    site_name: 'Pinteya E-Commerce',\r\n    site_description: 'Tu tienda online de confianza',\r\n    site_url: 'https://localhost:3000',\r\n    contact_email: 'contacto@pinteya.com',\r\n    support_phone: '+54 11 1234-5678',\r\n    timezone: 'America/Argentina/Buenos_Aires',\r\n    currency: 'ARS',\r\n    language: 'es',\r\n    maintenance_mode: false\r\n  },\r\n  ecommerce: {\r\n    tax_rate: 21.0,\r\n    shipping_cost: 500.0,\r\n    free_shipping_threshold: 15000.0,\r\n    inventory_tracking: true,\r\n    low_stock_threshold: 10,\r\n    allow_backorders: false,\r\n    auto_approve_reviews: false,\r\n    max_cart_items: 50,\r\n    session_timeout: 30\r\n  },\r\n  payments: {\r\n    stripe_enabled: true,\r\n    paypal_enabled: false,\r\n    mercadopago_enabled: true,\r\n    cash_on_delivery: true,\r\n    bank_transfer: true,\r\n    payment_timeout: 15\r\n  },\r\n  notifications: {\r\n    email_notifications: true,\r\n    sms_notifications: false,\r\n    push_notifications: true,\r\n    order_confirmation: true,\r\n    shipping_updates: true,\r\n    marketing_emails: false,\r\n    low_stock_alerts: true,\r\n    new_order_alerts: true\r\n  },\r\n  security: {\r\n    two_factor_auth: false,\r\n    password_min_length: 8,\r\n    session_duration: 24,\r\n    max_login_attempts: 5,\r\n    lockout_duration: 15,\r\n    require_email_verification: true,\r\n    admin_ip_whitelist: []\r\n  },\r\n  integrations: {\r\n    google_analytics_id: '',\r\n    facebook_pixel_id: '',\r\n    google_tag_manager_id: '',\r\n    mailchimp_api_key: '',\r\n    sendgrid_api_key: '',\r\n    cloudinary_cloud_name: '',\r\n    aws_s3_bucket: ''\r\n  }\r\n};\r\n\r\n// ===================================\r\n// MIDDLEWARE DE AUTENTICACI\xD3N ADMIN\r\n// ===================================\r\n\r\nasync function validateAdminAuth() {\r\n  try {\r\n    // BYPASS TEMPORAL PARA DESARROLLO\r\n    if (process.env.NODE_ENV === 'development' && process.env.BYPASS_AUTH === 'true') {\r\n      return {\r\n        user: {\r\n          id: 'dev-admin',\r\n          email: 'santiago@xor.com.ar',\r\n          name: 'Dev Admin'\r\n        },\r\n        userId: 'dev-admin'\r\n      };\r\n    }\r\n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return { error: 'Usuario no autenticado', status: 401 };\r\n    }\r\n\r\n    // Verificar si es admin\r\n    const isAdmin = session.user.email === 'santiago@xor.com.ar';\r\n    if (!isAdmin) {\r\n      return { error: 'Acceso denegado - Se requieren permisos de administrador', status: 403 };\r\n    }\r\n\r\n    return { user: session.user, userId: session.user.id };\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.AUTH, 'Error en validaci\xF3n admin', { error });\r\n    return { error: 'Error de autenticaci\xF3n', status: 500 };\r\n  }\r\n}\r\n\r\n// ===================================\r\n// FUNCIONES AUXILIARES\r\n// ===================================\r\n\r\nasync function getSystemSettings(): Promise<SystemSettings> {\r\n  try {\r\n    const { data: settings, error } = await supabaseAdmin\r\n      .from('system_settings')\r\n      .select('key, value, category')\r\n      .order('category', { ascending: true });\r\n\r\n    if (error) {\r\n      logger.log(LogLevel.WARN, LogCategory.API, 'Error obteniendo configuraciones, usando defaults', { error });\r\n      return DEFAULT_SETTINGS;\r\n    }\r\n\r\n    if (!settings || settings.length === 0) {\r\n      // Inicializar configuraciones por defecto\r\n      await initializeDefaultSettings();\r\n      return DEFAULT_SETTINGS;\r\n    }\r\n\r\n    // Construir objeto de configuraciones desde la base de datos\r\n    const result = JSON.parse(JSON.stringify(DEFAULT_SETTINGS)); // Deep copy\r\n    \r\n    settings.forEach(setting => {\r\n      const keys = setting.key.split('.');\r\n      let current = result;\r\n      \r\n      for (let i = 0; i < keys.length - 1; i++) {\r\n        if (!current[keys[i]]) {\r\n          current[keys[i]] = {};\r\n        }\r\n        current = current[keys[i]];\r\n      }\r\n      \r\n      const lastKey = keys[keys.length - 1];\r\n      try {\r\n        current[lastKey] = JSON.parse(setting.value);\r\n      } catch {\r\n        current[lastKey] = setting.value;\r\n      }\r\n    });\r\n\r\n    return result;\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error obteniendo configuraciones del sistema', { error });\r\n    return DEFAULT_SETTINGS;\r\n  }\r\n}\r\n\r\nasync function updateSystemSettings(updates: Partial<SystemSettings>, adminUserId: string): Promise<void> {\r\n  const settingsToUpdate: Array<{ key: string; value: string; category: string }> = [];\r\n  \r\n  // Convertir objeto anidado a configuraciones planas\r\n  function flattenSettings(obj: any, prefix = '', category = '') {\r\n    Object.keys(obj).forEach(key => {\r\n      const fullKey = prefix ? `${prefix}.${key}` : key;\r\n      const value = obj[key];\r\n      \r\n      if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\r\n        flattenSettings(value, fullKey, key);\r\n      } else {\r\n        settingsToUpdate.push({\r\n          key: fullKey,\r\n          value: JSON.stringify(value),\r\n          category: category || key\r\n        });\r\n      }\r\n    });\r\n  }\r\n  \r\n  flattenSettings(updates);\r\n  \r\n  if (settingsToUpdate.length === 0) {\r\n    return;\r\n  }\r\n\r\n  // Actualizar configuraciones en la base de datos\r\n  for (const setting of settingsToUpdate) {\r\n    const { error } = await supabaseAdmin\r\n      .from('system_settings')\r\n      .upsert({\r\n        key: setting.key,\r\n        value: setting.value,\r\n        category: setting.category,\r\n        updated_at: new Date().toISOString(),\r\n        updated_by: adminUserId\r\n      }, {\r\n        onConflict: 'key'\r\n      });\r\n\r\n    if (error) {\r\n      logger.log(LogLevel.ERROR, LogCategory.API, 'Error actualizando configuraci\xF3n', { \r\n        error, \r\n        key: setting.key \r\n      });\r\n      throw new Error(`Error actualizando configuraci\xF3n ${setting.key}`);\r\n    }\r\n  }\r\n\r\n  // Log de auditor\xEDa\r\n  logger.log(LogLevel.INFO, LogCategory.ADMIN, 'Configuraciones del sistema actualizadas', {\r\n    adminUserId,\r\n    updatedKeys: settingsToUpdate.map(s => s.key),\r\n    timestamp: new Date().toISOString()\r\n  });\r\n}\r\n\r\nasync function initializeDefaultSettings(): Promise<void> {\r\n  try {\r\n    const settingsToInsert: Array<{ key: string; value: string; category: string }> = [];\r\n    \r\n    function flattenDefaults(obj: any, prefix = '', category = '') {\r\n      Object.keys(obj).forEach(key => {\r\n        const fullKey = prefix ? `${prefix}.${key}` : key;\r\n        const value = obj[key];\r\n        \r\n        if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\r\n          flattenDefaults(value, fullKey, key);\r\n        } else {\r\n          settingsToInsert.push({\r\n            key: fullKey,\r\n            value: JSON.stringify(value),\r\n            category: category || key\r\n          });\r\n        }\r\n      });\r\n    }\r\n    \r\n    flattenDefaults(DEFAULT_SETTINGS);\r\n    \r\n    const { error } = await supabaseAdmin\r\n      .from('system_settings')\r\n      .insert(settingsToInsert.map(setting => ({\r\n        ...setting,\r\n        created_at: new Date().toISOString(),\r\n        updated_at: new Date().toISOString(),\r\n        updated_by: 'system'\r\n      })));\r\n\r\n    if (error) {\r\n      logger.log(LogLevel.ERROR, LogCategory.API, 'Error inicializando configuraciones por defecto', { error });\r\n    } else {\r\n      logger.log(LogLevel.INFO, LogCategory.SYSTEM, 'Configuraciones por defecto inicializadas');\r\n    }\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.SYSTEM, 'Error en inicializaci\xF3n de configuraciones', { error });\r\n  }\r\n}\r\n\r\nasync function resetToDefaults(adminUserId: string): Promise<void> {\r\n  try {\r\n    // Eliminar todas las configuraciones existentes\r\n    const { error: deleteError } = await supabaseAdmin\r\n      .from('system_settings')\r\n      .delete()\r\n      .neq('id', '00000000-0000-0000-0000-000000000000'); // Condici\xF3n que siempre es verdadera\r\n\r\n    if (deleteError) {\r\n      throw deleteError;\r\n    }\r\n\r\n    // Reinicializar con valores por defecto\r\n    await initializeDefaultSettings();\r\n\r\n    // Log de auditor\xEDa\r\n    logger.log(LogLevel.WARN, LogCategory.ADMIN, 'Configuraciones del sistema restablecidas a valores por defecto', {\r\n      adminUserId,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error restableciendo configuraciones por defecto', { error });\r\n    throw error;\r\n  }\r\n}\r\n\r\n// ===================================\r\n// GET - Obtener configuraciones del sistema\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,\r\n        maxRequests: RATE_LIMIT_CONFIGS.admin.maxRequests,\r\n        message: RATE_LIMIT_CONFIGS.admin.message || 'Demasiadas solicitudes administrativas'\r\n      },\r\n      'admin-settings'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: rateLimitResult.message },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult);\r\n      return response;\r\n    }\r\n\r\n    // Validar autenticaci\xF3n admin\r\n    const authResult = await validateAdminAuth();\r\n    if (authResult.error) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: authResult.error,\r\n      };\r\n      return NextResponse.json(errorResponse, { status: authResult.status });\r\n    }\r\n\r\n    // Obtener configuraciones del sistema\r\n    const settings = await getSystemSettings();\r\n\r\n    // Registrar m\xE9tricas\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/settings',\r\n      method: 'GET',\r\n      statusCode: 200,\r\n      responseTime: Date.now() - startTime,\r\n      userId: authResult.userId\r\n    });\r\n\r\n    const response: ApiResponse<SystemSettings> = {\r\n      data: settings,\r\n      success: true,\r\n      message: 'Configuraciones obtenidas exitosamente'\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response);\r\n    addRateLimitHeaders(nextResponse, rateLimitResult);\r\n    return nextResponse;\r\n\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en GET /api/admin/settings', { error });\r\n\r\n    // Registrar m\xE9tricas de error\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/settings',\r\n      method: 'GET',\r\n      statusCode: 500,\r\n      responseTime: Date.now() - startTime,\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    });\r\n\r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: 'Error interno del servidor',\r\n    };\r\n\r\n    return NextResponse.json(errorResponse, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// PUT - Actualizar configuraciones del sistema\r\n// ===================================\r\nexport async function PUT(request: NextRequest) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,\r\n        maxRequests: Math.floor(RATE_LIMIT_CONFIGS.admin.maxRequests / 2), // M\xE1s restrictivo para actualizaciones\r\n        message: 'Demasiadas actualizaciones de configuraci\xF3n'\r\n      },\r\n      'admin-settings-update'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: rateLimitResult.message },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult);\r\n      return response;\r\n    }\r\n\r\n    // Validar autenticaci\xF3n admin\r\n    const authResult = await validateAdminAuth();\r\n    if (authResult.error) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: authResult.error,\r\n      };\r\n      return NextResponse.json(errorResponse, { status: authResult.status });\r\n    }\r\n\r\n    // Validar datos de entrada\r\n    const body = await request.json();\r\n    const validationResult = SystemSettingsSchema.safeParse(body);\r\n\r\n    if (!validationResult.success) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'Datos de configuraci\xF3n inv\xE1lidos',\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 400 });\r\n    }\r\n\r\n    // Actualizar configuraciones\r\n    await updateSystemSettings(validationResult.data, authResult.userId!);\r\n\r\n    // Obtener configuraciones actualizadas\r\n    const updatedSettings = await getSystemSettings();\r\n\r\n    // Registrar m\xE9tricas\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/settings',\r\n      method: 'PUT',\r\n      statusCode: 200,\r\n      responseTime: Date.now() - startTime,\r\n      userId: authResult.userId\r\n    });\r\n\r\n    const response: ApiResponse<SystemSettings> = {\r\n      data: updatedSettings,\r\n      success: true,\r\n      message: 'Configuraciones actualizadas exitosamente'\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response);\r\n    addRateLimitHeaders(nextResponse, rateLimitResult);\r\n    return nextResponse;\r\n\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en PUT /api/admin/settings', { error });\r\n\r\n    // Registrar m\xE9tricas de error\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/settings',\r\n      method: 'PUT',\r\n      statusCode: 500,\r\n      responseTime: Date.now() - startTime,\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    });\r\n\r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: 'Error interno del servidor',\r\n    };\r\n\r\n    return NextResponse.json(errorResponse, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// POST - Restablecer configuraciones por defecto\r\n// ===================================\r\nexport async function POST(request: NextRequest) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting m\xE1s restrictivo para reset\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        windowMs: 60 * 60 * 1000, // 1 hora\r\n        maxRequests: 3, // M\xE1ximo 3 resets por hora\r\n        message: 'Demasiados intentos de restablecimiento'\r\n      },\r\n      'admin-settings-reset'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: rateLimitResult.message },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult);\r\n      return response;\r\n    }\r\n\r\n    // Validar autenticaci\xF3n admin\r\n    const authResult = await validateAdminAuth();\r\n    if (authResult.error) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: authResult.error,\r\n      };\r\n      return NextResponse.json(errorResponse, { status: authResult.status });\r\n    }\r\n\r\n    // Restablecer a configuraciones por defecto\r\n    await resetToDefaults(authResult.userId!);\r\n\r\n    // Obtener configuraciones restablecidas\r\n    const defaultSettings = await getSystemSettings();\r\n\r\n    // Registrar m\xE9tricas\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/settings',\r\n      method: 'POST',\r\n      statusCode: 200,\r\n      responseTime: Date.now() - startTime,\r\n      userId: authResult.userId\r\n    });\r\n\r\n    const response: ApiResponse<SystemSettings> = {\r\n      data: defaultSettings,\r\n      success: true,\r\n      message: 'Configuraciones restablecidas a valores por defecto'\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response);\r\n    addRateLimitHeaders(nextResponse, rateLimitResult);\r\n    return nextResponse;\r\n\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en POST /api/admin/settings', { error });\r\n\r\n    // Registrar m\xE9tricas de error\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/settings',\r\n      method: 'POST',\r\n      statusCode: 500,\r\n      responseTime: Date.now() - startTime,\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    });\r\n\r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: 'Error interno del servidor',\r\n    };\r\n\r\n    return NextResponse.json(errorResponse, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "PUT", "runtime", "SystemSettingsSchema", "z", "object", "general", "site_name", "string", "min", "max", "optional", "site_description", "site_url", "url", "contact_email", "email", "support_phone", "timezone", "currency", "length", "language", "maintenance_mode", "boolean", "ecommerce", "tax_rate", "number", "shipping_cost", "free_shipping_threshold", "inventory_tracking", "low_stock_threshold", "allow_backorders", "auto_approve_reviews", "max_cart_items", "session_timeout", "payments", "stripe_enabled", "paypal_enabled", "mercadopago_enabled", "cash_on_delivery", "bank_transfer", "payment_timeout", "notifications", "email_notifications", "sms_notifications", "push_notifications", "order_confirmation", "shipping_updates", "marketing_emails", "low_stock_alerts", "new_order_alerts", "security", "two_factor_auth", "password_min_length", "session_duration", "max_login_attempts", "lockout_duration", "require_email_verification", "admin_ip_whitelist", "array", "ip", "integrations", "google_analytics_id", "facebook_pixel_id", "google_tag_manager_id", "mailchimp_api_key", "sendgrid_api_key", "cloudinary_cloud_name", "aws_s3_bucket", "DEFAULT_SETTINGS", "validateAdminAuth", "process", "env", "NODE_ENV", "BYPASS_AUTH", "user", "id", "name", "userId", "session", "auth", "error", "status", "isAdmin", "logger", "log", "LogLevel", "ERROR", "LogCategory", "AUTH", "getSystemSettings", "data", "settings", "supabaseAdmin", "from", "select", "order", "ascending", "WARN", "API", "initializeDefaultSettings", "result", "JSON", "parse", "stringify", "forEach", "setting", "keys", "key", "split", "current", "i", "lastKey", "value", "updateSystemSettings", "updates", "adminUserId", "settingsToUpdate", "flattenSettings", "obj", "prefix", "category", "Object", "fullKey", "Array", "isArray", "push", "upsert", "updated_at", "Date", "toISOString", "updated_by", "onConflict", "Error", "INFO", "ADMIN", "updatedKeys", "map", "s", "timestamp", "settingsToInsert", "flattenDefaults", "insert", "created_at", "SYSTEM", "resetToDefaults", "deleteError", "delete", "neq", "request", "startTime", "now", "rateLimitResult", "checkRateLimit", "windowMs", "RATE_LIMIT_CONFIGS", "admin", "maxRequests", "message", "success", "response", "NextResponse", "json", "addRateLimitHeaders", "authResult", "errorResponse", "metricsCollector", "recordApiCall", "endpoint", "method", "statusCode", "responseTime", "nextResponse", "Math", "floor", "body", "validationResult", "safeParse", "updatedSettings", "defaultSettings"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2b35a6496d1a8bc12c0edde2a9b135123a9d2b04"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_12htlmcz3p = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_12htlmcz3p();
cov_12htlmcz3p().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_12htlmcz3p().f[0]++;
  cov_12htlmcz3p().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_12htlmcz3p().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_12htlmcz3p().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_12htlmcz3p().f[1]++;
    cov_12htlmcz3p().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_12htlmcz3p().f[2]++;
    cov_12htlmcz3p().s[5]++;
    return POST;
  },
  get PUT() {
    /* istanbul ignore next */
    cov_12htlmcz3p().f[3]++;
    cov_12htlmcz3p().s[6]++;
    return PUT;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_12htlmcz3p().f[4]++;
    cov_12htlmcz3p().s[7]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_12htlmcz3p().s[8]++, require("next/server"));
const _supabase =
/* istanbul ignore next */
(cov_12htlmcz3p().s[9]++, require("../../../../lib/integrations/supabase"));
const _config =
/* istanbul ignore next */
(cov_12htlmcz3p().s[10]++, require("../../../../lib/auth/config"));
const _zod =
/* istanbul ignore next */
(cov_12htlmcz3p().s[11]++, require("zod"));
const _logger =
/* istanbul ignore next */
(cov_12htlmcz3p().s[12]++, require("../../../../lib/enterprise/logger"));
const _ratelimiting =
/* istanbul ignore next */
(cov_12htlmcz3p().s[13]++, require("../../../../lib/auth/rate-limiting"));
const _ratelimiter =
/* istanbul ignore next */
(cov_12htlmcz3p().s[14]++, require("../../../../lib/enterprise/rate-limiter"));
const _metrics =
/* istanbul ignore next */
(cov_12htlmcz3p().s[15]++, require("../../../../lib/enterprise/metrics"));
const runtime =
/* istanbul ignore next */
(cov_12htlmcz3p().s[16]++, 'nodejs');
// ===================================
// SCHEMAS DE VALIDACIÃN
// ===================================
const SystemSettingsSchema =
/* istanbul ignore next */
(cov_12htlmcz3p().s[17]++, _zod.z.object({
  general: _zod.z.object({
    site_name: _zod.z.string().min(1).max(100).optional(),
    site_description: _zod.z.string().max(500).optional(),
    site_url: _zod.z.string().url().optional(),
    contact_email: _zod.z.string().email().optional(),
    support_phone: _zod.z.string().optional(),
    timezone: _zod.z.string().optional(),
    currency: _zod.z.string().length(3).optional(),
    language: _zod.z.string().length(2).optional(),
    maintenance_mode: _zod.z.boolean().optional()
  }).optional(),
  ecommerce: _zod.z.object({
    tax_rate: _zod.z.number().min(0).max(100).optional(),
    shipping_cost: _zod.z.number().min(0).optional(),
    free_shipping_threshold: _zod.z.number().min(0).optional(),
    inventory_tracking: _zod.z.boolean().optional(),
    low_stock_threshold: _zod.z.number().min(0).optional(),
    allow_backorders: _zod.z.boolean().optional(),
    auto_approve_reviews: _zod.z.boolean().optional(),
    max_cart_items: _zod.z.number().min(1).max(100).optional(),
    session_timeout: _zod.z.number().min(5).max(1440).optional() // minutos
  }).optional(),
  payments: _zod.z.object({
    stripe_enabled: _zod.z.boolean().optional(),
    paypal_enabled: _zod.z.boolean().optional(),
    mercadopago_enabled: _zod.z.boolean().optional(),
    cash_on_delivery: _zod.z.boolean().optional(),
    bank_transfer: _zod.z.boolean().optional(),
    payment_timeout: _zod.z.number().min(5).max(60).optional() // minutos
  }).optional(),
  notifications: _zod.z.object({
    email_notifications: _zod.z.boolean().optional(),
    sms_notifications: _zod.z.boolean().optional(),
    push_notifications: _zod.z.boolean().optional(),
    order_confirmation: _zod.z.boolean().optional(),
    shipping_updates: _zod.z.boolean().optional(),
    marketing_emails: _zod.z.boolean().optional(),
    low_stock_alerts: _zod.z.boolean().optional(),
    new_order_alerts: _zod.z.boolean().optional()
  }).optional(),
  security: _zod.z.object({
    two_factor_auth: _zod.z.boolean().optional(),
    password_min_length: _zod.z.number().min(6).max(50).optional(),
    session_duration: _zod.z.number().min(1).max(168).optional(),
    max_login_attempts: _zod.z.number().min(3).max(10).optional(),
    lockout_duration: _zod.z.number().min(5).max(1440).optional(),
    require_email_verification: _zod.z.boolean().optional(),
    admin_ip_whitelist: _zod.z.array(_zod.z.string().ip()).optional()
  }).optional(),
  integrations: _zod.z.object({
    google_analytics_id: _zod.z.string().optional(),
    facebook_pixel_id: _zod.z.string().optional(),
    google_tag_manager_id: _zod.z.string().optional(),
    mailchimp_api_key: _zod.z.string().optional(),
    sendgrid_api_key: _zod.z.string().optional(),
    cloudinary_cloud_name: _zod.z.string().optional(),
    aws_s3_bucket: _zod.z.string().optional()
  }).optional()
}));
// ===================================
// CONFIGURACIONES POR DEFECTO
// ===================================
const DEFAULT_SETTINGS =
/* istanbul ignore next */
(cov_12htlmcz3p().s[18]++, {
  general: {
    site_name: 'Pinteya E-Commerce',
    site_description: 'Tu tienda online de confianza',
    site_url: 'https://localhost:3000',
    contact_email: 'contacto@pinteya.com',
    support_phone: '+54 11 1234-5678',
    timezone: 'America/Argentina/Buenos_Aires',
    currency: 'ARS',
    language: 'es',
    maintenance_mode: false
  },
  ecommerce: {
    tax_rate: 21.0,
    shipping_cost: 500.0,
    free_shipping_threshold: 15000.0,
    inventory_tracking: true,
    low_stock_threshold: 10,
    allow_backorders: false,
    auto_approve_reviews: false,
    max_cart_items: 50,
    session_timeout: 30
  },
  payments: {
    stripe_enabled: true,
    paypal_enabled: false,
    mercadopago_enabled: true,
    cash_on_delivery: true,
    bank_transfer: true,
    payment_timeout: 15
  },
  notifications: {
    email_notifications: true,
    sms_notifications: false,
    push_notifications: true,
    order_confirmation: true,
    shipping_updates: true,
    marketing_emails: false,
    low_stock_alerts: true,
    new_order_alerts: true
  },
  security: {
    two_factor_auth: false,
    password_min_length: 8,
    session_duration: 24,
    max_login_attempts: 5,
    lockout_duration: 15,
    require_email_verification: true,
    admin_ip_whitelist: []
  },
  integrations: {
    google_analytics_id: '',
    facebook_pixel_id: '',
    google_tag_manager_id: '',
    mailchimp_api_key: '',
    sendgrid_api_key: '',
    cloudinary_cloud_name: '',
    aws_s3_bucket: ''
  }
});
// ===================================
// MIDDLEWARE DE AUTENTICACIÃN ADMIN
// ===================================
async function validateAdminAuth() {
  /* istanbul ignore next */
  cov_12htlmcz3p().f[5]++;
  cov_12htlmcz3p().s[19]++;
  try {
    /* istanbul ignore next */
    cov_12htlmcz3p().s[20]++;
    // BYPASS TEMPORAL PARA DESARROLLO
    if (
    /* istanbul ignore next */
    (cov_12htlmcz3p().b[1][0]++, process.env.NODE_ENV === 'development') &&
    /* istanbul ignore next */
    (cov_12htlmcz3p().b[1][1]++, process.env.BYPASS_AUTH === 'true')) {
      /* istanbul ignore next */
      cov_12htlmcz3p().b[0][0]++;
      cov_12htlmcz3p().s[21]++;
      return {
        user: {
          id: 'dev-admin',
          email: 'santiago@xor.com.ar',
          name: 'Dev Admin'
        },
        userId: 'dev-admin'
      };
    } else
    /* istanbul ignore next */
    {
      cov_12htlmcz3p().b[0][1]++;
    }
    const session =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[22]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_12htlmcz3p().s[23]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_12htlmcz3p().b[2][0]++;
      cov_12htlmcz3p().s[24]++;
      return {
        error: 'Usuario no autenticado',
        status: 401
      };
    } else
    /* istanbul ignore next */
    {
      cov_12htlmcz3p().b[2][1]++;
    }
    // Verificar si es admin
    const isAdmin =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[25]++, session.user.email === 'santiago@xor.com.ar');
    /* istanbul ignore next */
    cov_12htlmcz3p().s[26]++;
    if (!isAdmin) {
      /* istanbul ignore next */
      cov_12htlmcz3p().b[3][0]++;
      cov_12htlmcz3p().s[27]++;
      return {
        error: 'Acceso denegado - Se requieren permisos de administrador',
        status: 403
      };
    } else
    /* istanbul ignore next */
    {
      cov_12htlmcz3p().b[3][1]++;
    }
    cov_12htlmcz3p().s[28]++;
    return {
      user: session.user,
      userId: session.user.id
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_12htlmcz3p().s[29]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.AUTH, 'Error en validaciÃ³n admin', {
      error
    });
    /* istanbul ignore next */
    cov_12htlmcz3p().s[30]++;
    return {
      error: 'Error de autenticaciÃ³n',
      status: 500
    };
  }
}
// ===================================
// FUNCIONES AUXILIARES
// ===================================
async function getSystemSettings() {
  /* istanbul ignore next */
  cov_12htlmcz3p().f[6]++;
  cov_12htlmcz3p().s[31]++;
  try {
    const {
      data: settings,
      error
    } =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[32]++, await _supabase.supabaseAdmin.from('system_settings').select('key, value, category').order('category', {
      ascending: true
    }));
    /* istanbul ignore next */
    cov_12htlmcz3p().s[33]++;
    if (error) {
      /* istanbul ignore next */
      cov_12htlmcz3p().b[4][0]++;
      cov_12htlmcz3p().s[34]++;
      _logger.logger.log(_logger.LogLevel.WARN, _logger.LogCategory.API, 'Error obteniendo configuraciones, usando defaults', {
        error
      });
      /* istanbul ignore next */
      cov_12htlmcz3p().s[35]++;
      return DEFAULT_SETTINGS;
    } else
    /* istanbul ignore next */
    {
      cov_12htlmcz3p().b[4][1]++;
    }
    cov_12htlmcz3p().s[36]++;
    if (
    /* istanbul ignore next */
    (cov_12htlmcz3p().b[6][0]++, !settings) ||
    /* istanbul ignore next */
    (cov_12htlmcz3p().b[6][1]++, settings.length === 0)) {
      /* istanbul ignore next */
      cov_12htlmcz3p().b[5][0]++;
      cov_12htlmcz3p().s[37]++;
      // Inicializar configuraciones por defecto
      await initializeDefaultSettings();
      /* istanbul ignore next */
      cov_12htlmcz3p().s[38]++;
      return DEFAULT_SETTINGS;
    } else
    /* istanbul ignore next */
    {
      cov_12htlmcz3p().b[5][1]++;
    }
    // Construir objeto de configuraciones desde la base de datos
    const result =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[39]++, JSON.parse(JSON.stringify(DEFAULT_SETTINGS))); // Deep copy
    /* istanbul ignore next */
    cov_12htlmcz3p().s[40]++;
    settings.forEach(setting => {
      /* istanbul ignore next */
      cov_12htlmcz3p().f[7]++;
      const keys =
      /* istanbul ignore next */
      (cov_12htlmcz3p().s[41]++, setting.key.split('.'));
      let current =
      /* istanbul ignore next */
      (cov_12htlmcz3p().s[42]++, result);
      /* istanbul ignore next */
      cov_12htlmcz3p().s[43]++;
      for (let i =
      /* istanbul ignore next */
      (cov_12htlmcz3p().s[44]++, 0); i < keys.length - 1; i++) {
        /* istanbul ignore next */
        cov_12htlmcz3p().s[45]++;
        if (!current[keys[i]]) {
          /* istanbul ignore next */
          cov_12htlmcz3p().b[7][0]++;
          cov_12htlmcz3p().s[46]++;
          current[keys[i]] = {};
        } else
        /* istanbul ignore next */
        {
          cov_12htlmcz3p().b[7][1]++;
        }
        cov_12htlmcz3p().s[47]++;
        current = current[keys[i]];
      }
      const lastKey =
      /* istanbul ignore next */
      (cov_12htlmcz3p().s[48]++, keys[keys.length - 1]);
      /* istanbul ignore next */
      cov_12htlmcz3p().s[49]++;
      try {
        /* istanbul ignore next */
        cov_12htlmcz3p().s[50]++;
        current[lastKey] = JSON.parse(setting.value);
      } catch {
        /* istanbul ignore next */
        cov_12htlmcz3p().s[51]++;
        current[lastKey] = setting.value;
      }
    });
    /* istanbul ignore next */
    cov_12htlmcz3p().s[52]++;
    return result;
  } catch (error) {
    /* istanbul ignore next */
    cov_12htlmcz3p().s[53]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error obteniendo configuraciones del sistema', {
      error
    });
    /* istanbul ignore next */
    cov_12htlmcz3p().s[54]++;
    return DEFAULT_SETTINGS;
  }
}
async function updateSystemSettings(updates, adminUserId) {
  /* istanbul ignore next */
  cov_12htlmcz3p().f[8]++;
  const settingsToUpdate =
  /* istanbul ignore next */
  (cov_12htlmcz3p().s[55]++, []);
  // Convertir objeto anidado a configuraciones planas
  function flattenSettings(obj, prefix =
  /* istanbul ignore next */
  (cov_12htlmcz3p().b[8][0]++, ''), category =
  /* istanbul ignore next */
  (cov_12htlmcz3p().b[9][0]++, '')) {
    /* istanbul ignore next */
    cov_12htlmcz3p().f[9]++;
    cov_12htlmcz3p().s[56]++;
    Object.keys(obj).forEach(key => {
      /* istanbul ignore next */
      cov_12htlmcz3p().f[10]++;
      const fullKey =
      /* istanbul ignore next */
      (cov_12htlmcz3p().s[57]++, prefix ?
      /* istanbul ignore next */
      (cov_12htlmcz3p().b[10][0]++, `${prefix}.${key}`) :
      /* istanbul ignore next */
      (cov_12htlmcz3p().b[10][1]++, key));
      const value =
      /* istanbul ignore next */
      (cov_12htlmcz3p().s[58]++, obj[key]);
      /* istanbul ignore next */
      cov_12htlmcz3p().s[59]++;
      if (
      /* istanbul ignore next */
      (cov_12htlmcz3p().b[12][0]++, typeof value === 'object') &&
      /* istanbul ignore next */
      (cov_12htlmcz3p().b[12][1]++, value !== null) &&
      /* istanbul ignore next */
      (cov_12htlmcz3p().b[12][2]++, !Array.isArray(value))) {
        /* istanbul ignore next */
        cov_12htlmcz3p().b[11][0]++;
        cov_12htlmcz3p().s[60]++;
        flattenSettings(value, fullKey, key);
      } else {
        /* istanbul ignore next */
        cov_12htlmcz3p().b[11][1]++;
        cov_12htlmcz3p().s[61]++;
        settingsToUpdate.push({
          key: fullKey,
          value: JSON.stringify(value),
          category:
          /* istanbul ignore next */
          (cov_12htlmcz3p().b[13][0]++, category) ||
          /* istanbul ignore next */
          (cov_12htlmcz3p().b[13][1]++, key)
        });
      }
    });
  }
  /* istanbul ignore next */
  cov_12htlmcz3p().s[62]++;
  flattenSettings(updates);
  /* istanbul ignore next */
  cov_12htlmcz3p().s[63]++;
  if (settingsToUpdate.length === 0) {
    /* istanbul ignore next */
    cov_12htlmcz3p().b[14][0]++;
    cov_12htlmcz3p().s[64]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_12htlmcz3p().b[14][1]++;
  }
  // Actualizar configuraciones en la base de datos
  cov_12htlmcz3p().s[65]++;
  for (const setting of settingsToUpdate) {
    const {
      error
    } =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[66]++, await _supabase.supabaseAdmin.from('system_settings').upsert({
      key: setting.key,
      value: setting.value,
      category: setting.category,
      updated_at: new Date().toISOString(),
      updated_by: adminUserId
    }, {
      onConflict: 'key'
    }));
    /* istanbul ignore next */
    cov_12htlmcz3p().s[67]++;
    if (error) {
      /* istanbul ignore next */
      cov_12htlmcz3p().b[15][0]++;
      cov_12htlmcz3p().s[68]++;
      _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error actualizando configuraciÃ³n', {
        error,
        key: setting.key
      });
      /* istanbul ignore next */
      cov_12htlmcz3p().s[69]++;
      throw new Error(`Error actualizando configuraciÃ³n ${setting.key}`);
    } else
    /* istanbul ignore next */
    {
      cov_12htlmcz3p().b[15][1]++;
    }
  }
  // Log de auditorÃ­a
  /* istanbul ignore next */
  cov_12htlmcz3p().s[70]++;
  _logger.logger.log(_logger.LogLevel.INFO, _logger.LogCategory.ADMIN, 'Configuraciones del sistema actualizadas', {
    adminUserId,
    updatedKeys: settingsToUpdate.map(s => {
      /* istanbul ignore next */
      cov_12htlmcz3p().f[11]++;
      cov_12htlmcz3p().s[71]++;
      return s.key;
    }),
    timestamp: new Date().toISOString()
  });
}
async function initializeDefaultSettings() {
  /* istanbul ignore next */
  cov_12htlmcz3p().f[12]++;
  cov_12htlmcz3p().s[72]++;
  try {
    const settingsToInsert =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[73]++, []);
    function flattenDefaults(obj, prefix =
    /* istanbul ignore next */
    (cov_12htlmcz3p().b[16][0]++, ''), category =
    /* istanbul ignore next */
    (cov_12htlmcz3p().b[17][0]++, '')) {
      /* istanbul ignore next */
      cov_12htlmcz3p().f[13]++;
      cov_12htlmcz3p().s[74]++;
      Object.keys(obj).forEach(key => {
        /* istanbul ignore next */
        cov_12htlmcz3p().f[14]++;
        const fullKey =
        /* istanbul ignore next */
        (cov_12htlmcz3p().s[75]++, prefix ?
        /* istanbul ignore next */
        (cov_12htlmcz3p().b[18][0]++, `${prefix}.${key}`) :
        /* istanbul ignore next */
        (cov_12htlmcz3p().b[18][1]++, key));
        const value =
        /* istanbul ignore next */
        (cov_12htlmcz3p().s[76]++, obj[key]);
        /* istanbul ignore next */
        cov_12htlmcz3p().s[77]++;
        if (
        /* istanbul ignore next */
        (cov_12htlmcz3p().b[20][0]++, typeof value === 'object') &&
        /* istanbul ignore next */
        (cov_12htlmcz3p().b[20][1]++, value !== null) &&
        /* istanbul ignore next */
        (cov_12htlmcz3p().b[20][2]++, !Array.isArray(value))) {
          /* istanbul ignore next */
          cov_12htlmcz3p().b[19][0]++;
          cov_12htlmcz3p().s[78]++;
          flattenDefaults(value, fullKey, key);
        } else {
          /* istanbul ignore next */
          cov_12htlmcz3p().b[19][1]++;
          cov_12htlmcz3p().s[79]++;
          settingsToInsert.push({
            key: fullKey,
            value: JSON.stringify(value),
            category:
            /* istanbul ignore next */
            (cov_12htlmcz3p().b[21][0]++, category) ||
            /* istanbul ignore next */
            (cov_12htlmcz3p().b[21][1]++, key)
          });
        }
      });
    }
    /* istanbul ignore next */
    cov_12htlmcz3p().s[80]++;
    flattenDefaults(DEFAULT_SETTINGS);
    const {
      error
    } =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[81]++, await _supabase.supabaseAdmin.from('system_settings').insert(settingsToInsert.map(setting => {
      /* istanbul ignore next */
      cov_12htlmcz3p().f[15]++;
      cov_12htlmcz3p().s[82]++;
      return {
        ...setting,
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString(),
        updated_by: 'system'
      };
    })));
    /* istanbul ignore next */
    cov_12htlmcz3p().s[83]++;
    if (error) {
      /* istanbul ignore next */
      cov_12htlmcz3p().b[22][0]++;
      cov_12htlmcz3p().s[84]++;
      _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error inicializando configuraciones por defecto', {
        error
      });
    } else {
      /* istanbul ignore next */
      cov_12htlmcz3p().b[22][1]++;
      cov_12htlmcz3p().s[85]++;
      _logger.logger.log(_logger.LogLevel.INFO, _logger.LogCategory.SYSTEM, 'Configuraciones por defecto inicializadas');
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_12htlmcz3p().s[86]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.SYSTEM, 'Error en inicializaciÃ³n de configuraciones', {
      error
    });
  }
}
async function resetToDefaults(adminUserId) {
  /* istanbul ignore next */
  cov_12htlmcz3p().f[16]++;
  cov_12htlmcz3p().s[87]++;
  try {
    // Eliminar todas las configuraciones existentes
    const {
      error: deleteError
    } =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[88]++, await _supabase.supabaseAdmin.from('system_settings').delete().neq('id', '00000000-0000-0000-0000-000000000000')); // CondiciÃ³n que siempre es verdadera
    /* istanbul ignore next */
    cov_12htlmcz3p().s[89]++;
    if (deleteError) {
      /* istanbul ignore next */
      cov_12htlmcz3p().b[23][0]++;
      cov_12htlmcz3p().s[90]++;
      throw deleteError;
    } else
    /* istanbul ignore next */
    {
      cov_12htlmcz3p().b[23][1]++;
    }
    // Reinicializar con valores por defecto
    cov_12htlmcz3p().s[91]++;
    await initializeDefaultSettings();
    // Log de auditorÃ­a
    /* istanbul ignore next */
    cov_12htlmcz3p().s[92]++;
    _logger.logger.log(_logger.LogLevel.WARN, _logger.LogCategory.ADMIN, 'Configuraciones del sistema restablecidas a valores por defecto', {
      adminUserId,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_12htlmcz3p().s[93]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error restableciendo configuraciones por defecto', {
      error
    });
    /* istanbul ignore next */
    cov_12htlmcz3p().s[94]++;
    throw error;
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_12htlmcz3p().f[17]++;
  const startTime =
  /* istanbul ignore next */
  (cov_12htlmcz3p().s[95]++, Date.now());
  /* istanbul ignore next */
  cov_12htlmcz3p().s[96]++;
  try {
    // Rate limiting
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[97]++, await (0, _ratelimiting.checkRateLimit)(request, {
      windowMs: _ratelimiter.RATE_LIMIT_CONFIGS.admin.windowMs,
      maxRequests: _ratelimiter.RATE_LIMIT_CONFIGS.admin.maxRequests,
      message:
      /* istanbul ignore next */
      (cov_12htlmcz3p().b[24][0]++, _ratelimiter.RATE_LIMIT_CONFIGS.admin.message) ||
      /* istanbul ignore next */
      (cov_12htlmcz3p().b[24][1]++, 'Demasiadas solicitudes administrativas')
    }, 'admin-settings'));
    /* istanbul ignore next */
    cov_12htlmcz3p().s[98]++;
    if (!rateLimitResult.success) {
      /* istanbul ignore next */
      cov_12htlmcz3p().b[25][0]++;
      const response =
      /* istanbul ignore next */
      (cov_12htlmcz3p().s[99]++, _server.NextResponse.json({
        error: rateLimitResult.message
      }, {
        status: 429
      }));
      /* istanbul ignore next */
      cov_12htlmcz3p().s[100]++;
      (0, _ratelimiter.addRateLimitHeaders)(response, rateLimitResult);
      /* istanbul ignore next */
      cov_12htlmcz3p().s[101]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_12htlmcz3p().b[25][1]++;
    }
    // Validar autenticaciÃ³n admin
    const authResult =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[102]++, await validateAdminAuth());
    /* istanbul ignore next */
    cov_12htlmcz3p().s[103]++;
    if (authResult.error) {
      /* istanbul ignore next */
      cov_12htlmcz3p().b[26][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_12htlmcz3p().s[104]++, {
        data: null,
        success: false,
        error: authResult.error
      });
      /* istanbul ignore next */
      cov_12htlmcz3p().s[105]++;
      return _server.NextResponse.json(errorResponse, {
        status: authResult.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_12htlmcz3p().b[26][1]++;
    }
    // Obtener configuraciones del sistema
    const settings =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[106]++, await getSystemSettings());
    // Registrar mÃ©tricas
    /* istanbul ignore next */
    cov_12htlmcz3p().s[107]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/settings',
      method: 'GET',
      statusCode: 200,
      responseTime: Date.now() - startTime,
      userId: authResult.userId
    });
    const response =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[108]++, {
      data: settings,
      success: true,
      message: 'Configuraciones obtenidas exitosamente'
    });
    const nextResponse =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[109]++, _server.NextResponse.json(response));
    /* istanbul ignore next */
    cov_12htlmcz3p().s[110]++;
    (0, _ratelimiter.addRateLimitHeaders)(nextResponse, rateLimitResult);
    /* istanbul ignore next */
    cov_12htlmcz3p().s[111]++;
    return nextResponse;
  } catch (error) {
    /* istanbul ignore next */
    cov_12htlmcz3p().s[112]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en GET /api/admin/settings', {
      error
    });
    // Registrar mÃ©tricas de error
    /* istanbul ignore next */
    cov_12htlmcz3p().s[113]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/settings',
      method: 'GET',
      statusCode: 500,
      responseTime: Date.now() - startTime,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_12htlmcz3p().b[27][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12htlmcz3p().b[27][1]++, 'Unknown error')
    });
    const errorResponse =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[114]++, {
      data: null,
      success: false,
      error: 'Error interno del servidor'
    });
    /* istanbul ignore next */
    cov_12htlmcz3p().s[115]++;
    return _server.NextResponse.json(errorResponse, {
      status: 500
    });
  }
}
async function PUT(request) {
  /* istanbul ignore next */
  cov_12htlmcz3p().f[18]++;
  const startTime =
  /* istanbul ignore next */
  (cov_12htlmcz3p().s[116]++, Date.now());
  /* istanbul ignore next */
  cov_12htlmcz3p().s[117]++;
  try {
    // Rate limiting
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[118]++, await (0, _ratelimiting.checkRateLimit)(request, {
      windowMs: _ratelimiter.RATE_LIMIT_CONFIGS.admin.windowMs,
      maxRequests: Math.floor(_ratelimiter.RATE_LIMIT_CONFIGS.admin.maxRequests / 2),
      message: 'Demasiadas actualizaciones de configuraciÃ³n'
    }, 'admin-settings-update'));
    /* istanbul ignore next */
    cov_12htlmcz3p().s[119]++;
    if (!rateLimitResult.success) {
      /* istanbul ignore next */
      cov_12htlmcz3p().b[28][0]++;
      const response =
      /* istanbul ignore next */
      (cov_12htlmcz3p().s[120]++, _server.NextResponse.json({
        error: rateLimitResult.message
      }, {
        status: 429
      }));
      /* istanbul ignore next */
      cov_12htlmcz3p().s[121]++;
      (0, _ratelimiter.addRateLimitHeaders)(response, rateLimitResult);
      /* istanbul ignore next */
      cov_12htlmcz3p().s[122]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_12htlmcz3p().b[28][1]++;
    }
    // Validar autenticaciÃ³n admin
    const authResult =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[123]++, await validateAdminAuth());
    /* istanbul ignore next */
    cov_12htlmcz3p().s[124]++;
    if (authResult.error) {
      /* istanbul ignore next */
      cov_12htlmcz3p().b[29][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_12htlmcz3p().s[125]++, {
        data: null,
        success: false,
        error: authResult.error
      });
      /* istanbul ignore next */
      cov_12htlmcz3p().s[126]++;
      return _server.NextResponse.json(errorResponse, {
        status: authResult.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_12htlmcz3p().b[29][1]++;
    }
    // Validar datos de entrada
    const body =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[127]++, await request.json());
    const validationResult =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[128]++, SystemSettingsSchema.safeParse(body));
    /* istanbul ignore next */
    cov_12htlmcz3p().s[129]++;
    if (!validationResult.success) {
      /* istanbul ignore next */
      cov_12htlmcz3p().b[30][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_12htlmcz3p().s[130]++, {
        data: null,
        success: false,
        error: 'Datos de configuraciÃ³n invÃ¡lidos'
      });
      /* istanbul ignore next */
      cov_12htlmcz3p().s[131]++;
      return _server.NextResponse.json(errorResponse, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_12htlmcz3p().b[30][1]++;
    }
    // Actualizar configuraciones
    cov_12htlmcz3p().s[132]++;
    await updateSystemSettings(validationResult.data, authResult.userId);
    // Obtener configuraciones actualizadas
    const updatedSettings =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[133]++, await getSystemSettings());
    // Registrar mÃ©tricas
    /* istanbul ignore next */
    cov_12htlmcz3p().s[134]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/settings',
      method: 'PUT',
      statusCode: 200,
      responseTime: Date.now() - startTime,
      userId: authResult.userId
    });
    const response =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[135]++, {
      data: updatedSettings,
      success: true,
      message: 'Configuraciones actualizadas exitosamente'
    });
    const nextResponse =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[136]++, _server.NextResponse.json(response));
    /* istanbul ignore next */
    cov_12htlmcz3p().s[137]++;
    (0, _ratelimiter.addRateLimitHeaders)(nextResponse, rateLimitResult);
    /* istanbul ignore next */
    cov_12htlmcz3p().s[138]++;
    return nextResponse;
  } catch (error) {
    /* istanbul ignore next */
    cov_12htlmcz3p().s[139]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en PUT /api/admin/settings', {
      error
    });
    // Registrar mÃ©tricas de error
    /* istanbul ignore next */
    cov_12htlmcz3p().s[140]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/settings',
      method: 'PUT',
      statusCode: 500,
      responseTime: Date.now() - startTime,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_12htlmcz3p().b[31][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12htlmcz3p().b[31][1]++, 'Unknown error')
    });
    const errorResponse =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[141]++, {
      data: null,
      success: false,
      error: 'Error interno del servidor'
    });
    /* istanbul ignore next */
    cov_12htlmcz3p().s[142]++;
    return _server.NextResponse.json(errorResponse, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_12htlmcz3p().f[19]++;
  const startTime =
  /* istanbul ignore next */
  (cov_12htlmcz3p().s[143]++, Date.now());
  /* istanbul ignore next */
  cov_12htlmcz3p().s[144]++;
  try {
    // Rate limiting mÃ¡s restrictivo para reset
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[145]++, await (0, _ratelimiting.checkRateLimit)(request, {
      windowMs: 60 * 60 * 1000,
      maxRequests: 3,
      message: 'Demasiados intentos de restablecimiento'
    }, 'admin-settings-reset'));
    /* istanbul ignore next */
    cov_12htlmcz3p().s[146]++;
    if (!rateLimitResult.success) {
      /* istanbul ignore next */
      cov_12htlmcz3p().b[32][0]++;
      const response =
      /* istanbul ignore next */
      (cov_12htlmcz3p().s[147]++, _server.NextResponse.json({
        error: rateLimitResult.message
      }, {
        status: 429
      }));
      /* istanbul ignore next */
      cov_12htlmcz3p().s[148]++;
      (0, _ratelimiter.addRateLimitHeaders)(response, rateLimitResult);
      /* istanbul ignore next */
      cov_12htlmcz3p().s[149]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_12htlmcz3p().b[32][1]++;
    }
    // Validar autenticaciÃ³n admin
    const authResult =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[150]++, await validateAdminAuth());
    /* istanbul ignore next */
    cov_12htlmcz3p().s[151]++;
    if (authResult.error) {
      /* istanbul ignore next */
      cov_12htlmcz3p().b[33][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_12htlmcz3p().s[152]++, {
        data: null,
        success: false,
        error: authResult.error
      });
      /* istanbul ignore next */
      cov_12htlmcz3p().s[153]++;
      return _server.NextResponse.json(errorResponse, {
        status: authResult.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_12htlmcz3p().b[33][1]++;
    }
    // Restablecer a configuraciones por defecto
    cov_12htlmcz3p().s[154]++;
    await resetToDefaults(authResult.userId);
    // Obtener configuraciones restablecidas
    const defaultSettings =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[155]++, await getSystemSettings());
    // Registrar mÃ©tricas
    /* istanbul ignore next */
    cov_12htlmcz3p().s[156]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/settings',
      method: 'POST',
      statusCode: 200,
      responseTime: Date.now() - startTime,
      userId: authResult.userId
    });
    const response =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[157]++, {
      data: defaultSettings,
      success: true,
      message: 'Configuraciones restablecidas a valores por defecto'
    });
    const nextResponse =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[158]++, _server.NextResponse.json(response));
    /* istanbul ignore next */
    cov_12htlmcz3p().s[159]++;
    (0, _ratelimiter.addRateLimitHeaders)(nextResponse, rateLimitResult);
    /* istanbul ignore next */
    cov_12htlmcz3p().s[160]++;
    return nextResponse;
  } catch (error) {
    /* istanbul ignore next */
    cov_12htlmcz3p().s[161]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en POST /api/admin/settings', {
      error
    });
    // Registrar mÃ©tricas de error
    /* istanbul ignore next */
    cov_12htlmcz3p().s[162]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/settings',
      method: 'POST',
      statusCode: 500,
      responseTime: Date.now() - startTime,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_12htlmcz3p().b[34][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12htlmcz3p().b[34][1]++, 'Unknown error')
    });
    const errorResponse =
    /* istanbul ignore next */
    (cov_12htlmcz3p().s[163]++, {
      data: null,
      success: false,
      error: 'Error interno del servidor'
    });
    /* istanbul ignore next */
    cov_12htlmcz3p().s[164]++;
    return _server.NextResponse.json(errorResponse, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,