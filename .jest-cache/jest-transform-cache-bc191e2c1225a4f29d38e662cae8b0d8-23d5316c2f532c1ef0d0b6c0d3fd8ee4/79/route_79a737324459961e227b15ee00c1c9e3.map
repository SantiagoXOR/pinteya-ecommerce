{"version":3,"names":["cov_12htlmcz3p","actualCoverage","s","GET","f","POST","PUT","runtime","SystemSettingsSchema","_zod","z","object","general","site_name","string","min","max","optional","site_description","site_url","url","contact_email","email","support_phone","timezone","currency","length","language","maintenance_mode","boolean","ecommerce","tax_rate","number","shipping_cost","free_shipping_threshold","inventory_tracking","low_stock_threshold","allow_backorders","auto_approve_reviews","max_cart_items","session_timeout","payments","stripe_enabled","paypal_enabled","mercadopago_enabled","cash_on_delivery","bank_transfer","payment_timeout","notifications","email_notifications","sms_notifications","push_notifications","order_confirmation","shipping_updates","marketing_emails","low_stock_alerts","new_order_alerts","security","two_factor_auth","password_min_length","session_duration","max_login_attempts","lockout_duration","require_email_verification","admin_ip_whitelist","array","ip","integrations","google_analytics_id","facebook_pixel_id","google_tag_manager_id","mailchimp_api_key","sendgrid_api_key","cloudinary_cloud_name","aws_s3_bucket","DEFAULT_SETTINGS","validateAdminAuth","b","process","env","NODE_ENV","BYPASS_AUTH","user","id","name","userId","session","_config","auth","error","status","isAdmin","_logger","logger","log","LogLevel","ERROR","LogCategory","AUTH","getSystemSettings","data","settings","_supabase","supabaseAdmin","from","select","order","ascending","WARN","API","initializeDefaultSettings","result","JSON","parse","stringify","forEach","setting","keys","key","split","current","i","lastKey","value","updateSystemSettings","updates","adminUserId","settingsToUpdate","flattenSettings","obj","prefix","category","Object","fullKey","Array","isArray","push","upsert","updated_at","Date","toISOString","updated_by","onConflict","Error","INFO","ADMIN","updatedKeys","map","timestamp","settingsToInsert","flattenDefaults","insert","created_at","SYSTEM","resetToDefaults","deleteError","delete","neq","request","startTime","now","rateLimitResult","_ratelimiting","checkRateLimit","windowMs","_ratelimiter","RATE_LIMIT_CONFIGS","admin","maxRequests","message","success","response","_server","NextResponse","json","addRateLimitHeaders","authResult","errorResponse","_metrics","metricsCollector","recordApiCall","endpoint","method","statusCode","responseTime","nextResponse","Math","floor","body","validationResult","safeParse","updatedSettings","defaultSettings"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\settings\\route.ts"],"sourcesContent":["// Configuración para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - ADMIN SETTINGS API ENTERPRISE\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { ApiResponse } from '@/types/api';\r\nimport { z } from 'zod';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\nimport { checkRateLimit } from '@/lib/auth/rate-limiting';\r\nimport { addRateLimitHeaders, RATE_LIMIT_CONFIGS } from '@/lib/enterprise/rate-limiter';\r\nimport { metricsCollector } from '@/lib/enterprise/metrics';\r\n\r\n// ===================================\r\n// SCHEMAS DE VALIDACIÓN\r\n// ===================================\r\n\r\nconst SystemSettingsSchema = z.object({\r\n  general: z.object({\r\n    site_name: z.string().min(1).max(100).optional(),\r\n    site_description: z.string().max(500).optional(),\r\n    site_url: z.string().url().optional(),\r\n    contact_email: z.string().email().optional(),\r\n    support_phone: z.string().optional(),\r\n    timezone: z.string().optional(),\r\n    currency: z.string().length(3).optional(),\r\n    language: z.string().length(2).optional(),\r\n    maintenance_mode: z.boolean().optional()\r\n  }).optional(),\r\n  \r\n  ecommerce: z.object({\r\n    tax_rate: z.number().min(0).max(100).optional(),\r\n    shipping_cost: z.number().min(0).optional(),\r\n    free_shipping_threshold: z.number().min(0).optional(),\r\n    inventory_tracking: z.boolean().optional(),\r\n    low_stock_threshold: z.number().min(0).optional(),\r\n    allow_backorders: z.boolean().optional(),\r\n    auto_approve_reviews: z.boolean().optional(),\r\n    max_cart_items: z.number().min(1).max(100).optional(),\r\n    session_timeout: z.number().min(5).max(1440).optional() // minutos\r\n  }).optional(),\r\n  \r\n  payments: z.object({\r\n    stripe_enabled: z.boolean().optional(),\r\n    paypal_enabled: z.boolean().optional(),\r\n    mercadopago_enabled: z.boolean().optional(),\r\n    cash_on_delivery: z.boolean().optional(),\r\n    bank_transfer: z.boolean().optional(),\r\n    payment_timeout: z.number().min(5).max(60).optional() // minutos\r\n  }).optional(),\r\n  \r\n  notifications: z.object({\r\n    email_notifications: z.boolean().optional(),\r\n    sms_notifications: z.boolean().optional(),\r\n    push_notifications: z.boolean().optional(),\r\n    order_confirmation: z.boolean().optional(),\r\n    shipping_updates: z.boolean().optional(),\r\n    marketing_emails: z.boolean().optional(),\r\n    low_stock_alerts: z.boolean().optional(),\r\n    new_order_alerts: z.boolean().optional()\r\n  }).optional(),\r\n  \r\n  security: z.object({\r\n    two_factor_auth: z.boolean().optional(),\r\n    password_min_length: z.number().min(6).max(50).optional(),\r\n    session_duration: z.number().min(1).max(168).optional(), // horas\r\n    max_login_attempts: z.number().min(3).max(10).optional(),\r\n    lockout_duration: z.number().min(5).max(1440).optional(), // minutos\r\n    require_email_verification: z.boolean().optional(),\r\n    admin_ip_whitelist: z.array(z.string().ip()).optional()\r\n  }).optional(),\r\n  \r\n  integrations: z.object({\r\n    google_analytics_id: z.string().optional(),\r\n    facebook_pixel_id: z.string().optional(),\r\n    google_tag_manager_id: z.string().optional(),\r\n    mailchimp_api_key: z.string().optional(),\r\n    sendgrid_api_key: z.string().optional(),\r\n    cloudinary_cloud_name: z.string().optional(),\r\n    aws_s3_bucket: z.string().optional()\r\n  }).optional()\r\n});\r\n\r\n// ===================================\r\n// TIPOS DE DATOS\r\n// ===================================\r\n\r\ninterface SystemSettings {\r\n  general: {\r\n    site_name: string;\r\n    site_description: string;\r\n    site_url: string;\r\n    contact_email: string;\r\n    support_phone: string;\r\n    timezone: string;\r\n    currency: string;\r\n    language: string;\r\n    maintenance_mode: boolean;\r\n  };\r\n  ecommerce: {\r\n    tax_rate: number;\r\n    shipping_cost: number;\r\n    free_shipping_threshold: number;\r\n    inventory_tracking: boolean;\r\n    low_stock_threshold: number;\r\n    allow_backorders: boolean;\r\n    auto_approve_reviews: boolean;\r\n    max_cart_items: number;\r\n    session_timeout: number;\r\n  };\r\n  payments: {\r\n    stripe_enabled: boolean;\r\n    paypal_enabled: boolean;\r\n    mercadopago_enabled: boolean;\r\n    cash_on_delivery: boolean;\r\n    bank_transfer: boolean;\r\n    payment_timeout: number;\r\n  };\r\n  notifications: {\r\n    email_notifications: boolean;\r\n    sms_notifications: boolean;\r\n    push_notifications: boolean;\r\n    order_confirmation: boolean;\r\n    shipping_updates: boolean;\r\n    marketing_emails: boolean;\r\n    low_stock_alerts: boolean;\r\n    new_order_alerts: boolean;\r\n  };\r\n  security: {\r\n    two_factor_auth: boolean;\r\n    password_min_length: number;\r\n    session_duration: number;\r\n    max_login_attempts: number;\r\n    lockout_duration: number;\r\n    require_email_verification: boolean;\r\n    admin_ip_whitelist: string[];\r\n  };\r\n  integrations: {\r\n    google_analytics_id: string;\r\n    facebook_pixel_id: string;\r\n    google_tag_manager_id: string;\r\n    mailchimp_api_key: string;\r\n    sendgrid_api_key: string;\r\n    cloudinary_cloud_name: string;\r\n    aws_s3_bucket: string;\r\n  };\r\n}\r\n\r\n// ===================================\r\n// CONFIGURACIONES POR DEFECTO\r\n// ===================================\r\n\r\nconst DEFAULT_SETTINGS: SystemSettings = {\r\n  general: {\r\n    site_name: 'Pinteya E-Commerce',\r\n    site_description: 'Tu tienda online de confianza',\r\n    site_url: 'https://localhost:3000',\r\n    contact_email: 'contacto@pinteya.com',\r\n    support_phone: '+54 11 1234-5678',\r\n    timezone: 'America/Argentina/Buenos_Aires',\r\n    currency: 'ARS',\r\n    language: 'es',\r\n    maintenance_mode: false\r\n  },\r\n  ecommerce: {\r\n    tax_rate: 21.0,\r\n    shipping_cost: 500.0,\r\n    free_shipping_threshold: 15000.0,\r\n    inventory_tracking: true,\r\n    low_stock_threshold: 10,\r\n    allow_backorders: false,\r\n    auto_approve_reviews: false,\r\n    max_cart_items: 50,\r\n    session_timeout: 30\r\n  },\r\n  payments: {\r\n    stripe_enabled: true,\r\n    paypal_enabled: false,\r\n    mercadopago_enabled: true,\r\n    cash_on_delivery: true,\r\n    bank_transfer: true,\r\n    payment_timeout: 15\r\n  },\r\n  notifications: {\r\n    email_notifications: true,\r\n    sms_notifications: false,\r\n    push_notifications: true,\r\n    order_confirmation: true,\r\n    shipping_updates: true,\r\n    marketing_emails: false,\r\n    low_stock_alerts: true,\r\n    new_order_alerts: true\r\n  },\r\n  security: {\r\n    two_factor_auth: false,\r\n    password_min_length: 8,\r\n    session_duration: 24,\r\n    max_login_attempts: 5,\r\n    lockout_duration: 15,\r\n    require_email_verification: true,\r\n    admin_ip_whitelist: []\r\n  },\r\n  integrations: {\r\n    google_analytics_id: '',\r\n    facebook_pixel_id: '',\r\n    google_tag_manager_id: '',\r\n    mailchimp_api_key: '',\r\n    sendgrid_api_key: '',\r\n    cloudinary_cloud_name: '',\r\n    aws_s3_bucket: ''\r\n  }\r\n};\r\n\r\n// ===================================\r\n// MIDDLEWARE DE AUTENTICACIÓN ADMIN\r\n// ===================================\r\n\r\nasync function validateAdminAuth() {\r\n  try {\r\n    // BYPASS TEMPORAL PARA DESARROLLO\r\n    if (process.env.NODE_ENV === 'development' && process.env.BYPASS_AUTH === 'true') {\r\n      return {\r\n        user: {\r\n          id: 'dev-admin',\r\n          email: 'santiago@xor.com.ar',\r\n          name: 'Dev Admin'\r\n        },\r\n        userId: 'dev-admin'\r\n      };\r\n    }\r\n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return { error: 'Usuario no autenticado', status: 401 };\r\n    }\r\n\r\n    // Verificar si es admin\r\n    const isAdmin = session.user.email === 'santiago@xor.com.ar';\r\n    if (!isAdmin) {\r\n      return { error: 'Acceso denegado - Se requieren permisos de administrador', status: 403 };\r\n    }\r\n\r\n    return { user: session.user, userId: session.user.id };\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.AUTH, 'Error en validación admin', { error });\r\n    return { error: 'Error de autenticación', status: 500 };\r\n  }\r\n}\r\n\r\n// ===================================\r\n// FUNCIONES AUXILIARES\r\n// ===================================\r\n\r\nasync function getSystemSettings(): Promise<SystemSettings> {\r\n  try {\r\n    const { data: settings, error } = await supabaseAdmin\r\n      .from('system_settings')\r\n      .select('key, value, category')\r\n      .order('category', { ascending: true });\r\n\r\n    if (error) {\r\n      logger.log(LogLevel.WARN, LogCategory.API, 'Error obteniendo configuraciones, usando defaults', { error });\r\n      return DEFAULT_SETTINGS;\r\n    }\r\n\r\n    if (!settings || settings.length === 0) {\r\n      // Inicializar configuraciones por defecto\r\n      await initializeDefaultSettings();\r\n      return DEFAULT_SETTINGS;\r\n    }\r\n\r\n    // Construir objeto de configuraciones desde la base de datos\r\n    const result = JSON.parse(JSON.stringify(DEFAULT_SETTINGS)); // Deep copy\r\n    \r\n    settings.forEach(setting => {\r\n      const keys = setting.key.split('.');\r\n      let current = result;\r\n      \r\n      for (let i = 0; i < keys.length - 1; i++) {\r\n        if (!current[keys[i]]) {\r\n          current[keys[i]] = {};\r\n        }\r\n        current = current[keys[i]];\r\n      }\r\n      \r\n      const lastKey = keys[keys.length - 1];\r\n      try {\r\n        current[lastKey] = JSON.parse(setting.value);\r\n      } catch {\r\n        current[lastKey] = setting.value;\r\n      }\r\n    });\r\n\r\n    return result;\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error obteniendo configuraciones del sistema', { error });\r\n    return DEFAULT_SETTINGS;\r\n  }\r\n}\r\n\r\nasync function updateSystemSettings(updates: Partial<SystemSettings>, adminUserId: string): Promise<void> {\r\n  const settingsToUpdate: Array<{ key: string; value: string; category: string }> = [];\r\n  \r\n  // Convertir objeto anidado a configuraciones planas\r\n  function flattenSettings(obj: any, prefix = '', category = '') {\r\n    Object.keys(obj).forEach(key => {\r\n      const fullKey = prefix ? `${prefix}.${key}` : key;\r\n      const value = obj[key];\r\n      \r\n      if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\r\n        flattenSettings(value, fullKey, key);\r\n      } else {\r\n        settingsToUpdate.push({\r\n          key: fullKey,\r\n          value: JSON.stringify(value),\r\n          category: category || key\r\n        });\r\n      }\r\n    });\r\n  }\r\n  \r\n  flattenSettings(updates);\r\n  \r\n  if (settingsToUpdate.length === 0) {\r\n    return;\r\n  }\r\n\r\n  // Actualizar configuraciones en la base de datos\r\n  for (const setting of settingsToUpdate) {\r\n    const { error } = await supabaseAdmin\r\n      .from('system_settings')\r\n      .upsert({\r\n        key: setting.key,\r\n        value: setting.value,\r\n        category: setting.category,\r\n        updated_at: new Date().toISOString(),\r\n        updated_by: adminUserId\r\n      }, {\r\n        onConflict: 'key'\r\n      });\r\n\r\n    if (error) {\r\n      logger.log(LogLevel.ERROR, LogCategory.API, 'Error actualizando configuración', { \r\n        error, \r\n        key: setting.key \r\n      });\r\n      throw new Error(`Error actualizando configuración ${setting.key}`);\r\n    }\r\n  }\r\n\r\n  // Log de auditoría\r\n  logger.log(LogLevel.INFO, LogCategory.ADMIN, 'Configuraciones del sistema actualizadas', {\r\n    adminUserId,\r\n    updatedKeys: settingsToUpdate.map(s => s.key),\r\n    timestamp: new Date().toISOString()\r\n  });\r\n}\r\n\r\nasync function initializeDefaultSettings(): Promise<void> {\r\n  try {\r\n    const settingsToInsert: Array<{ key: string; value: string; category: string }> = [];\r\n    \r\n    function flattenDefaults(obj: any, prefix = '', category = '') {\r\n      Object.keys(obj).forEach(key => {\r\n        const fullKey = prefix ? `${prefix}.${key}` : key;\r\n        const value = obj[key];\r\n        \r\n        if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\r\n          flattenDefaults(value, fullKey, key);\r\n        } else {\r\n          settingsToInsert.push({\r\n            key: fullKey,\r\n            value: JSON.stringify(value),\r\n            category: category || key\r\n          });\r\n        }\r\n      });\r\n    }\r\n    \r\n    flattenDefaults(DEFAULT_SETTINGS);\r\n    \r\n    const { error } = await supabaseAdmin\r\n      .from('system_settings')\r\n      .insert(settingsToInsert.map(setting => ({\r\n        ...setting,\r\n        created_at: new Date().toISOString(),\r\n        updated_at: new Date().toISOString(),\r\n        updated_by: 'system'\r\n      })));\r\n\r\n    if (error) {\r\n      logger.log(LogLevel.ERROR, LogCategory.API, 'Error inicializando configuraciones por defecto', { error });\r\n    } else {\r\n      logger.log(LogLevel.INFO, LogCategory.SYSTEM, 'Configuraciones por defecto inicializadas');\r\n    }\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.SYSTEM, 'Error en inicialización de configuraciones', { error });\r\n  }\r\n}\r\n\r\nasync function resetToDefaults(adminUserId: string): Promise<void> {\r\n  try {\r\n    // Eliminar todas las configuraciones existentes\r\n    const { error: deleteError } = await supabaseAdmin\r\n      .from('system_settings')\r\n      .delete()\r\n      .neq('id', '00000000-0000-0000-0000-000000000000'); // Condición que siempre es verdadera\r\n\r\n    if (deleteError) {\r\n      throw deleteError;\r\n    }\r\n\r\n    // Reinicializar con valores por defecto\r\n    await initializeDefaultSettings();\r\n\r\n    // Log de auditoría\r\n    logger.log(LogLevel.WARN, LogCategory.ADMIN, 'Configuraciones del sistema restablecidas a valores por defecto', {\r\n      adminUserId,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error restableciendo configuraciones por defecto', { error });\r\n    throw error;\r\n  }\r\n}\r\n\r\n// ===================================\r\n// GET - Obtener configuraciones del sistema\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,\r\n        maxRequests: RATE_LIMIT_CONFIGS.admin.maxRequests,\r\n        message: RATE_LIMIT_CONFIGS.admin.message || 'Demasiadas solicitudes administrativas'\r\n      },\r\n      'admin-settings'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: rateLimitResult.message },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult);\r\n      return response;\r\n    }\r\n\r\n    // Validar autenticación admin\r\n    const authResult = await validateAdminAuth();\r\n    if (authResult.error) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: authResult.error,\r\n      };\r\n      return NextResponse.json(errorResponse, { status: authResult.status });\r\n    }\r\n\r\n    // Obtener configuraciones del sistema\r\n    const settings = await getSystemSettings();\r\n\r\n    // Registrar métricas\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/settings',\r\n      method: 'GET',\r\n      statusCode: 200,\r\n      responseTime: Date.now() - startTime,\r\n      userId: authResult.userId\r\n    });\r\n\r\n    const response: ApiResponse<SystemSettings> = {\r\n      data: settings,\r\n      success: true,\r\n      message: 'Configuraciones obtenidas exitosamente'\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response);\r\n    addRateLimitHeaders(nextResponse, rateLimitResult);\r\n    return nextResponse;\r\n\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en GET /api/admin/settings', { error });\r\n\r\n    // Registrar métricas de error\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/settings',\r\n      method: 'GET',\r\n      statusCode: 500,\r\n      responseTime: Date.now() - startTime,\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    });\r\n\r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: 'Error interno del servidor',\r\n    };\r\n\r\n    return NextResponse.json(errorResponse, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// PUT - Actualizar configuraciones del sistema\r\n// ===================================\r\nexport async function PUT(request: NextRequest) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,\r\n        maxRequests: Math.floor(RATE_LIMIT_CONFIGS.admin.maxRequests / 2), // Más restrictivo para actualizaciones\r\n        message: 'Demasiadas actualizaciones de configuración'\r\n      },\r\n      'admin-settings-update'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: rateLimitResult.message },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult);\r\n      return response;\r\n    }\r\n\r\n    // Validar autenticación admin\r\n    const authResult = await validateAdminAuth();\r\n    if (authResult.error) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: authResult.error,\r\n      };\r\n      return NextResponse.json(errorResponse, { status: authResult.status });\r\n    }\r\n\r\n    // Validar datos de entrada\r\n    const body = await request.json();\r\n    const validationResult = SystemSettingsSchema.safeParse(body);\r\n\r\n    if (!validationResult.success) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'Datos de configuración inválidos',\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 400 });\r\n    }\r\n\r\n    // Actualizar configuraciones\r\n    await updateSystemSettings(validationResult.data, authResult.userId!);\r\n\r\n    // Obtener configuraciones actualizadas\r\n    const updatedSettings = await getSystemSettings();\r\n\r\n    // Registrar métricas\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/settings',\r\n      method: 'PUT',\r\n      statusCode: 200,\r\n      responseTime: Date.now() - startTime,\r\n      userId: authResult.userId\r\n    });\r\n\r\n    const response: ApiResponse<SystemSettings> = {\r\n      data: updatedSettings,\r\n      success: true,\r\n      message: 'Configuraciones actualizadas exitosamente'\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response);\r\n    addRateLimitHeaders(nextResponse, rateLimitResult);\r\n    return nextResponse;\r\n\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en PUT /api/admin/settings', { error });\r\n\r\n    // Registrar métricas de error\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/settings',\r\n      method: 'PUT',\r\n      statusCode: 500,\r\n      responseTime: Date.now() - startTime,\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    });\r\n\r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: 'Error interno del servidor',\r\n    };\r\n\r\n    return NextResponse.json(errorResponse, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// POST - Restablecer configuraciones por defecto\r\n// ===================================\r\nexport async function POST(request: NextRequest) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting más restrictivo para reset\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        windowMs: 60 * 60 * 1000, // 1 hora\r\n        maxRequests: 3, // Máximo 3 resets por hora\r\n        message: 'Demasiados intentos de restablecimiento'\r\n      },\r\n      'admin-settings-reset'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: rateLimitResult.message },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult);\r\n      return response;\r\n    }\r\n\r\n    // Validar autenticación admin\r\n    const authResult = await validateAdminAuth();\r\n    if (authResult.error) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: authResult.error,\r\n      };\r\n      return NextResponse.json(errorResponse, { status: authResult.status });\r\n    }\r\n\r\n    // Restablecer a configuraciones por defecto\r\n    await resetToDefaults(authResult.userId!);\r\n\r\n    // Obtener configuraciones restablecidas\r\n    const defaultSettings = await getSystemSettings();\r\n\r\n    // Registrar métricas\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/settings',\r\n      method: 'POST',\r\n      statusCode: 200,\r\n      responseTime: Date.now() - startTime,\r\n      userId: authResult.userId\r\n    });\r\n\r\n    const response: ApiResponse<SystemSettings> = {\r\n      data: defaultSettings,\r\n      success: true,\r\n      message: 'Configuraciones restablecidas a valores por defecto'\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response);\r\n    addRateLimitHeaders(nextResponse, rateLimitResult);\r\n    return nextResponse;\r\n\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en POST /api/admin/settings', { error });\r\n\r\n    // Registrar métricas de error\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/settings',\r\n      method: 'POST',\r\n      statusCode: 500,\r\n      responseTime: Date.now() - startTime,\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    });\r\n\r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: 'Error interno del servidor',\r\n    };\r\n\r\n    return NextResponse.json(errorResponse, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}