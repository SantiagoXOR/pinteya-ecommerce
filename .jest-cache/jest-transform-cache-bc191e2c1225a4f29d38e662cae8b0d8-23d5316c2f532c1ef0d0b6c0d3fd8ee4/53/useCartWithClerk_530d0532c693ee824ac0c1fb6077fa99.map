{"version":3,"names":["useCart","cov_drz6itsrj","f","s","useCartWithClerk","user","isLoaded","_useAuth","useAuth","dispatch","_store","useAppDispatch","cartItems","useAppSelector","_cartslice","selectCartItems","migrateCart","_react","useCallback","userId","temporaryItems","_cartPersistence","loadCartFromStorage","length","b","migrationSuccess","migrateTemporaryCart","clearCartFromStorage","userCartItems","loadUserCart","replaceCart","error","console","saveCart","saveUserCart","useEffect","id","persistedItems","hydrateCart","timeoutId","setTimeout","clearTimeout","handleSignOut","removeAllItemsFromCart","isAuthenticated"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useCartWithClerk.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - CART HOOK WITH CLERK INTEGRATION\r\n// ===================================\r\n\r\nimport { useEffect, useCallback } from 'react';\r\nimport { useAuth } from './useAuth';\r\nimport { useAppDispatch, useAppSelector } from '@/redux/store';\r\nimport { \r\n  selectCartItems, \r\n  hydrateCart, \r\n  replaceCart,\r\n  removeAllItemsFromCart \r\n} from '@/redux/features/cart-slice';\r\nimport { \r\n  loadCartFromStorage, \r\n  clearCartFromStorage,\r\n  migrateTemporaryCart,\r\n  loadUserCart,\r\n  saveUserCart \r\n} from '@/redux/middleware/cartPersistence';\r\n\r\n// Hook personalizado para manejar el carrito con integración NextAuth\r\nexport const useCartWithClerk = () => {\r\n  const { user, isLoaded } = useAuth();\r\n  const dispatch = useAppDispatch();\r\n  const cartItems = useAppSelector(selectCartItems);\r\n\r\n  // Función para migrar carrito temporal a usuario autenticado\r\n  const migrateCart = useCallback(async (userId: string) => {\r\n    try {\r\n      // Obtener items del localStorage\r\n      const temporaryItems = loadCartFromStorage();\r\n      \r\n      if (temporaryItems.length > 0) {\r\n        \r\n        // Migrar items al backend (implementación futura)\r\n        const migrationSuccess = await migrateTemporaryCart(temporaryItems, userId);\r\n        \r\n        if (migrationSuccess) {\r\n          // Limpiar localStorage después de migración exitosa\r\n          clearCartFromStorage();\r\n        }\r\n      }\r\n      \r\n      // Cargar carrito del usuario desde el backend (implementación futura)\r\n      const userCartItems = await loadUserCart(userId);\r\n      \r\n      // Si hay items del usuario, reemplazar el carrito actual\r\n      if (userCartItems.length > 0) {\r\n        dispatch(replaceCart(userCartItems));\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Error during cart migration:', error);\r\n    }\r\n  }, [dispatch]);\r\n\r\n  // Función para guardar carrito del usuario autenticado\r\n  const saveCart = useCallback(async (userId: string) => {\r\n    try {\r\n      if (cartItems.length > 0) {\r\n        await saveUserCart(userId, cartItems);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving user cart:', error);\r\n    }\r\n  }, [cartItems]);\r\n\r\n  // Efecto para manejar cambios en el estado de autenticación\r\n  useEffect(() => {\r\n    if (!isLoaded) {return;}\r\n\r\n    if (user) {\r\n      // Usuario autenticado - migrar carrito temporal si existe\r\n      migrateCart(user.id);\r\n    } else {\r\n      // Usuario no autenticado - cargar desde localStorage\r\n      const persistedItems = loadCartFromStorage();\r\n      if (persistedItems.length > 0) {\r\n        dispatch(hydrateCart(persistedItems));\r\n      }\r\n    }\r\n  }, [user, isLoaded, dispatch, migrateCart]);\r\n\r\n  // Efecto para guardar carrito de usuario autenticado cuando cambie\r\n  useEffect(() => {\r\n    if (!isLoaded || !user) {return;}\r\n\r\n    // Debounce para evitar guardados excesivos\r\n    const timeoutId = setTimeout(() => {\r\n      saveCart(user.id);\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, [cartItems, user, isLoaded, saveCart]);\r\n\r\n  // Función para limpiar carrito al cerrar sesión\r\n  const handleSignOut = useCallback(() => {\r\n    dispatch(removeAllItemsFromCart());\r\n    clearCartFromStorage();\r\n  }, [dispatch]);\r\n\r\n  return {\r\n    isAuthenticated: !!user,\r\n    userId: user?.id,\r\n    cartItems,\r\n    migrateCart,\r\n    saveCart,\r\n    handleSignOut,\r\n  };\r\n};\r\n\r\n// Hook simplificado para componentes que solo necesitan el estado del carrito\r\nexport const useCart = () => {\r\n  const cartItems = useAppSelector(selectCartItems);\r\n  const dispatch = useAppDispatch();\r\n\r\n  return {\r\n    cartItems,\r\n    dispatch,\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}