{"version":3,"names":["cov_7gur7wk6","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","validateJWTIntegrity","validateJWTPermissions","withJWTValidation","JWT_SECURITY_CONFIG","maxTokenAge","minTimeBeforeExpiry","expectedIssuer","process","env","NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY","split","expectedAudience","allowedAlgorithms","requiredClaims","request","token","payload","valid","error","code","severity","session","_config","auth","user","userId","id","email","claims","sub","parts","length","header","JSON","parse","atob","includes","alg","decodeError","securityChecks","performTokenSecurityChecks","signatureValid","notExpired","issuerValid","details","issuer","iss","audience","aud","expiresAt","exp","issuedAt","iat","notBefore","nbf","subject","sessionId","sid","metadata","console","now","Math","floor","Date","notBeforeValid","audienceValid","subjectValid","metadataValid","sessionValid","requiredRole","requiredPermissions","jwtValidation","userRole","role","userPermissions","permissions","hasAllPermissions","every","permission","join","handler","args","errorResponse","success","res","status","json","Response","stringify","headers","permissionValidation","jwtPayload","jwtDetails"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\auth\\jwt-validation.ts"],"sourcesContent":["/**\r\n * Validaciones Avanzadas de JWT para Seguridad\r\n * Implementa verificación de integridad, autenticidad y validez de tokens\r\n */\r\n\r\nimport { auth } from '@/lib/auth/config';\r\nimport { NextRequest } from 'next/server';\r\nimport type { NextApiRequest } from 'next';\r\n\r\n// =====================================================\r\n// TIPOS Y INTERFACES\r\n// =====================================================\r\n\r\nexport interface JWTValidationResult {\r\n  valid: boolean;\r\n  payload?: any;\r\n  error?: string;\r\n  code?: string;\r\n  severity?: 'low' | 'medium' | 'high' | 'critical';\r\n  details?: {\r\n    issuer?: string;\r\n    audience?: string;\r\n    expiresAt?: number;\r\n    issuedAt?: number;\r\n    notBefore?: number;\r\n    subject?: string;\r\n    sessionId?: string;\r\n    metadata?: any;\r\n  };\r\n}\r\n\r\nexport interface TokenSecurityChecks {\r\n  signatureValid: boolean;\r\n  notExpired: boolean;\r\n  notBeforeValid: boolean;\r\n  issuerValid: boolean;\r\n  audienceValid: boolean;\r\n  subjectValid: boolean;\r\n  metadataValid: boolean;\r\n  sessionValid: boolean;\r\n}\r\n\r\n// =====================================================\r\n// CONFIGURACIÓN DE SEGURIDAD\r\n// =====================================================\r\n\r\nconst JWT_SECURITY_CONFIG = {\r\n  // Tiempo máximo de vida del token (24 horas)\r\n  maxTokenAge: 24 * 60 * 60 * 1000,\r\n  \r\n  // Tiempo mínimo antes de expiración para considerar válido (5 minutos)\r\n  minTimeBeforeExpiry: 5 * 60 * 1000,\r\n  \r\n  // Issuer esperado de Clerk\r\n  expectedIssuer: process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY?.split('_')[1] || 'clerk',\r\n  \r\n  // Audience esperada\r\n  expectedAudience: process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY || '',\r\n  \r\n  // Algoritmos permitidos\r\n  allowedAlgorithms: ['RS256', 'HS256'],\r\n  \r\n  // Claims requeridos\r\n  requiredClaims: ['sub', 'iat', 'exp', 'iss', 'aud']\r\n};\r\n\r\n// =====================================================\r\n// FUNCIONES DE VALIDACIÓN DE JWT\r\n// =====================================================\r\n\r\n/**\r\n * Valida la integridad y autenticidad de un token JWT\r\n */\r\nexport async function validateJWTIntegrity(\r\n  request?: NextRequest | NextApiRequest\r\n): Promise<JWTValidationResult> {\r\n  try {\r\n    const token: string | null = null;\r\n    let payload: any = null;\r\n\r\n    // NextAuth.js - Obtener sesión en lugar de token JWT\r\n    if (request && 'query' in request) {\r\n      // Pages Router - No soportado con NextAuth.js\r\n      return {\r\n        valid: false,\r\n        error: 'Pages Router no soportado con NextAuth.js',\r\n        code: 'NOT_SUPPORTED',\r\n        severity: 'medium'\r\n      };\r\n    } else {\r\n      // App Router - NextAuth.js\r\n      try {\r\n        const session = await auth();\r\n        if (!session?.user) {\r\n          return {\r\n            valid: false,\r\n            error: 'Usuario no autenticado',\r\n            code: 'NOT_AUTHENTICATED',\r\n            severity: 'medium'\r\n          };\r\n        }\r\n        // Para NextAuth.js, consideramos válida la sesión si existe\r\n        return {\r\n          valid: true,\r\n          payload: {\r\n            userId: session.user.id,\r\n            email: session.user.email,\r\n            name: session.user.name\r\n          },\r\n          claims: {\r\n            sub: session.user.id,\r\n            email: session.user.email\r\n          }\r\n        };\r\n      } catch (error) {\r\n        return {\r\n          valid: false,\r\n          error: 'Error obteniendo sesión desde NextAuth.js',\r\n          code: 'SESSION_RETRIEVAL_ERROR',\r\n          severity: 'medium'\r\n        };\r\n      }\r\n    }\r\n\r\n    if (!token) {\r\n      return {\r\n        valid: false,\r\n        error: 'Token JWT no encontrado',\r\n        code: 'TOKEN_NOT_FOUND',\r\n        severity: 'high'\r\n      };\r\n    }\r\n\r\n    // Decodificar token (sin verificar firma - solo para inspección)\r\n    try {\r\n      const parts = token.split('.');\r\n      if (parts.length !== 3) {\r\n        return {\r\n          valid: false,\r\n          error: 'Formato de token JWT inválido',\r\n          code: 'INVALID_TOKEN_FORMAT',\r\n          severity: 'high'\r\n        };\r\n      }\r\n\r\n      const header = JSON.parse(atob(parts[0]));\r\n      payload = JSON.parse(atob(parts[1]));\r\n\r\n      // Validar algoritmo\r\n      if (!JWT_SECURITY_CONFIG.allowedAlgorithms.includes(header.alg)) {\r\n        return {\r\n          valid: false,\r\n          error: `Algoritmo de token no permitido: ${header.alg}`,\r\n          code: 'INVALID_ALGORITHM',\r\n          severity: 'critical'\r\n        };\r\n      }\r\n\r\n    } catch (decodeError) {\r\n      return {\r\n        valid: false,\r\n        error: 'Error decodificando token JWT',\r\n        code: 'TOKEN_DECODE_ERROR',\r\n        severity: 'high'\r\n      };\r\n    }\r\n\r\n    // Ejecutar verificaciones de seguridad\r\n    const securityChecks = await performTokenSecurityChecks(payload, token);\r\n    \r\n    if (!securityChecks.signatureValid) {\r\n      return {\r\n        valid: false,\r\n        error: 'Firma del token inválida',\r\n        code: 'INVALID_SIGNATURE',\r\n        severity: 'critical'\r\n      };\r\n    }\r\n\r\n    if (!securityChecks.notExpired) {\r\n      return {\r\n        valid: false,\r\n        error: 'Token expirado',\r\n        code: 'TOKEN_EXPIRED',\r\n        severity: 'high'\r\n      };\r\n    }\r\n\r\n    if (!securityChecks.issuerValid) {\r\n      return {\r\n        valid: false,\r\n        error: 'Issuer del token inválido',\r\n        code: 'INVALID_ISSUER',\r\n        severity: 'high'\r\n      };\r\n    }\r\n\r\n    // Token válido\r\n    return {\r\n      valid: true,\r\n      payload,\r\n      details: {\r\n        issuer: payload.iss,\r\n        audience: payload.aud,\r\n        expiresAt: payload.exp,\r\n        issuedAt: payload.iat,\r\n        notBefore: payload.nbf,\r\n        subject: payload.sub,\r\n        sessionId: payload.sid,\r\n        metadata: payload.metadata\r\n      }\r\n    };\r\n\r\n  } catch (error) {\r\n    console.error('[JWT] Error en validación de integridad:', error);\r\n    return {\r\n      valid: false,\r\n      error: 'Error interno en validación de JWT',\r\n      code: 'VALIDATION_ERROR',\r\n      severity: 'critical'\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Realiza verificaciones de seguridad específicas del token\r\n */\r\nasync function performTokenSecurityChecks(\r\n  payload: any,\r\n  token: string\r\n): Promise<TokenSecurityChecks> {\r\n  const now = Math.floor(Date.now() / 1000);\r\n\r\n  return {\r\n    // Verificar que el token no esté expirado\r\n    notExpired: payload.exp && payload.exp > now,\r\n    \r\n    // Verificar notBefore si existe\r\n    notBeforeValid: !payload.nbf || payload.nbf <= now,\r\n    \r\n    // Verificar issuer\r\n    issuerValid: payload.iss && payload.iss.includes('clerk'),\r\n    \r\n    // Verificar audience\r\n    audienceValid: payload.aud && typeof payload.aud === 'string',\r\n    \r\n    // Verificar subject (userId)\r\n    subjectValid: payload.sub && typeof payload.sub === 'string',\r\n    \r\n    // Verificar metadata básica\r\n    metadataValid: true, // Clerk maneja esto internamente\r\n    \r\n    // Verificar sesión\r\n    sessionValid: payload.sid && typeof payload.sid === 'string',\r\n    \r\n    // Nota: La verificación de firma la hace Clerk internamente\r\n    signatureValid: true\r\n  };\r\n}\r\n\r\n/**\r\n * Valida permisos específicos en el token JWT\r\n */\r\nexport async function validateJWTPermissions(\r\n  requiredRole: string,\r\n  requiredPermissions: string[] = [],\r\n  request?: NextRequest | NextApiRequest\r\n): Promise<JWTValidationResult> {\r\n  try {\r\n    const jwtValidation = await validateJWTIntegrity(request);\r\n    \r\n    if (!jwtValidation.valid) {\r\n      return jwtValidation;\r\n    }\r\n\r\n    const payload = jwtValidation.payload;\r\n    \r\n    // Verificar rol en metadata\r\n    const userRole = payload.metadata?.role || payload.role;\r\n    if (requiredRole && userRole !== requiredRole) {\r\n      return {\r\n        valid: false,\r\n        error: `Rol requerido: ${requiredRole}, rol actual: ${userRole}`,\r\n        code: 'INSUFFICIENT_ROLE',\r\n        severity: 'high'\r\n      };\r\n    }\r\n\r\n    // Verificar permisos específicos si se proporcionan\r\n    if (requiredPermissions.length > 0) {\r\n      const userPermissions = payload.metadata?.permissions || [];\r\n      const hasAllPermissions = requiredPermissions.every(\r\n        permission => userPermissions.includes(permission)\r\n      );\r\n      \r\n      if (!hasAllPermissions) {\r\n        return {\r\n          valid: false,\r\n          error: `Permisos insuficientes. Requeridos: ${requiredPermissions.join(', ')}`,\r\n          code: 'INSUFFICIENT_PERMISSIONS',\r\n          severity: 'high'\r\n        };\r\n      }\r\n    }\r\n\r\n    return {\r\n      valid: true,\r\n      payload,\r\n      details: jwtValidation.details\r\n    };\r\n\r\n  } catch (error) {\r\n    console.error('[JWT] Error en validación de permisos:', error);\r\n    return {\r\n      valid: false,\r\n      error: 'Error interno en validación de permisos JWT',\r\n      code: 'PERMISSION_VALIDATION_ERROR',\r\n      severity: 'critical'\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Middleware para validación automática de JWT\r\n */\r\nexport function withJWTValidation(\r\n  requiredRole?: string,\r\n  requiredPermissions?: string[]\r\n) {\r\n  return function (handler: Function) {\r\n    return async (request: NextRequest | NextApiRequest, ...args: any[]) => {\r\n      try {\r\n        // Validar integridad del JWT\r\n        const jwtValidation = await validateJWTIntegrity(request);\r\n        \r\n        if (!jwtValidation.valid) {\r\n          const errorResponse = {\r\n            success: false,\r\n            error: jwtValidation.error,\r\n            code: jwtValidation.code,\r\n            severity: jwtValidation.severity\r\n          };\r\n\r\n          if ('query' in request) {\r\n            // Pages Router\r\n            const res = args[0] as any;\r\n            return res.status(401).json(errorResponse);\r\n          } else {\r\n            // App Router\r\n            return new Response(JSON.stringify(errorResponse), {\r\n              status: 401,\r\n              headers: { 'Content-Type': 'application/json' }\r\n            });\r\n          }\r\n        }\r\n\r\n        // Validar permisos si se especifican\r\n        if (requiredRole || requiredPermissions) {\r\n          const permissionValidation = await validateJWTPermissions(\r\n            requiredRole || '',\r\n            requiredPermissions || [],\r\n            request\r\n          );\r\n          \r\n          if (!permissionValidation.valid) {\r\n            const errorResponse = {\r\n              success: false,\r\n              error: permissionValidation.error,\r\n              code: permissionValidation.code,\r\n              severity: permissionValidation.severity\r\n            };\r\n\r\n            if ('query' in request) {\r\n              // Pages Router\r\n              const res = args[0] as any;\r\n              return res.status(403).json(errorResponse);\r\n            } else {\r\n              // App Router\r\n              return new Response(JSON.stringify(errorResponse), {\r\n                status: 403,\r\n                headers: { 'Content-Type': 'application/json' }\r\n              });\r\n            }\r\n          }\r\n        }\r\n\r\n        // Añadir información del JWT al request\r\n        (request as any).jwtPayload = jwtValidation.payload;\r\n        (request as any).jwtDetails = jwtValidation.details;\r\n\r\n        return handler(request, ...args);\r\n\r\n      } catch (error) {\r\n        console.error('[JWT] Error en middleware de validación:', error);\r\n        \r\n        const errorResponse = {\r\n          success: false,\r\n          error: 'Error interno en validación JWT',\r\n          code: 'JWT_MIDDLEWARE_ERROR'\r\n        };\r\n\r\n        if ('query' in request) {\r\n          // Pages Router\r\n          const res = args[0] as any;\r\n          return res.status(500).json(errorResponse);\r\n        } else {\r\n          // App Router\r\n          return new Response(JSON.stringify(errorResponse), {\r\n            status: 500,\r\n            headers: { 'Content-Type': 'application/json' }\r\n          });\r\n        }\r\n      }\r\n    };\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]}