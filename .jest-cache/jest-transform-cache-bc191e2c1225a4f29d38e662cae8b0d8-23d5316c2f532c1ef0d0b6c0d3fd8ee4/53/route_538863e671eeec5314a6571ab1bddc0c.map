{"version":3,"names":["cov_20w5jdwup4","actualCoverage","s","GET","f","runtime","supabaseUrl","process","env","NEXT_PUBLIC_SUPABASE_URL","supabaseServiceKey","SUPABASE_SERVICE_ROLE_KEY","request","console","log","supabase","_supabasejs","createClient","data","products","error","count","from","select","limit","message","productsLength","length","b","_server","NextResponse","json","success","code","details","hint","status","transformedProducts","map","product","category_name","categories","name","undefined","total","returned","pagination","offset","hasMore","debug","timestamp","Date","toISOString","method","auth","Error"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\simple-products\\route.ts"],"sourcesContent":["// Configuraci√≥n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    console.log('üîç Debug Simple Products: Starting...');\r\n\r\n    // Crear cliente Supabase con service key (sin autenticaci√≥n)\r\n    const supabase = createClient(supabaseUrl, supabaseServiceKey);\r\n\r\n    console.log('üîç Debug Simple Products: Supabase client created');\r\n\r\n    // Consulta simple de productos\r\n    const { data: products, error, count } = await supabase\r\n      .from('products')\r\n      .select(`\r\n        id,\r\n        name,\r\n        description,\r\n        price,\r\n        stock,\r\n        category_id,\r\n        images,\r\n        created_at,\r\n        updated_at,\r\n        categories (\r\n          id,\r\n          name\r\n        )\r\n      `, { count: 'exact' })\r\n      .limit(10);\r\n\r\n    console.log('üîç Debug Simple Products: Query executed', {\r\n      error: error?.message,\r\n      count,\r\n      productsLength: products?.length\r\n    });\r\n\r\n    if (error) {\r\n      console.error('‚ùå Error en consulta Supabase:', error);\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: error.message,\r\n        code: error.code,\r\n        details: error.details,\r\n        hint: error.hint\r\n      }, { status: 500 });\r\n    }\r\n\r\n    // Transformar productos\r\n    const transformedProducts = products?.map(product => ({\r\n      ...product,\r\n      category_name: product.categories?.name || null,\r\n      categories: undefined,\r\n    })) || [];\r\n\r\n    console.log('‚úÖ Debug Simple Products: Success', {\r\n      total: count,\r\n      returned: transformedProducts.length\r\n    });\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        products: transformedProducts,\r\n        total: count || 0,\r\n        pagination: {\r\n          limit: 10,\r\n          offset: 0,\r\n          hasMore: (count || 0) > 10\r\n        }\r\n      },\r\n      debug: {\r\n        timestamp: new Date().toISOString(),\r\n        method: 'simple_supabase_query',\r\n        auth: 'service_key'\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('‚ùå Error fatal en debug simple products:', error);\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: error instanceof Error ? error.message : 'Error desconocido',\r\n      debug: {\r\n        timestamp: new Date().toISOString(),\r\n        method: 'simple_supabase_query',\r\n        auth: 'service_key'\r\n      }\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappingsa;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;;;;;;;;;;;;;;;;;;;;MAQSC,IAAA;IAAA;IAAAH,cAAA,GAAAI,CAAA;IAAAJ,cAAA,GAAAE,CAAA;WAAAC,GAAA;;MARTE,QAAA;IAAA;IAAAL,cAAA,GAAAI,CAAA;IAAAJ,cAAA,GAAAE,CAAA;WAAAG,OAAA;;;;;kCAE6B;;;kCACb;AAHtB,MAAMA,OAAA;AAAA;AAAA,CAAAL,cAAA,GAAAE,CAAA,OAAU;AAKvB,MAAMI,WAAA;AAAA;AAAA,CAAAN,cAAA,GAAAE,CAAA,OAAcK,OAAA,CAAQC,GAAG,CAACC,wBAAwB;AACxD,MAAMC,kBAAA;AAAA;AAAA,CAAAV,cAAA,GAAAE,CAAA,QAAqBK,OAAA,CAAQC,GAAG,CAACG,yBAAyB;AAEzD,eAAeR,IAAIS,OAAoB;EAAA;EAAAZ,cAAA,GAAAI,CAAA;EAAAJ,cAAA,GAAAE,CAAA;EAC5C,IAAI;IAAA;IAAAF,cAAA,GAAAE,CAAA;IACFW,OAAA,CAAQC,GAAG,CAAC;IAEZ;IACA,MAAMC,QAAA;IAAA;IAAA,CAAAf,cAAA,GAAAE,CAAA,QAAW,IAAAc,WAAA,CAAAC,YAAY,EAACX,WAAA,EAAaI,kBAAA;IAAA;IAAAV,cAAA,GAAAE,CAAA;IAE3CW,OAAA,CAAQC,GAAG,CAAC;IAEZ;IACA,MAAM;MAAEI,IAAA,EAAMC,QAAQ;MAAEC,KAAK;MAAEC;IAAK,CAAE;IAAA;IAAA,CAAArB,cAAA,GAAAE,CAAA,QAAG,MAAMa,QAAA,CAC5CO,IAAI,CAAC,YACLC,MAAM,CAAC;;;;;;;;;;;;;;OAcP,EAAE;MAAEF,KAAA,EAAO;IAAQ,GACnBG,KAAK,CAAC;IAAA;IAAAxB,cAAA,GAAAE,CAAA;IAETW,OAAA,CAAQC,GAAG,CAAC,4CAA4C;MACtDM,KAAA,EAAOA,KAAA,EAAOK,OAAA;MACdJ,KAAA;MACAK,cAAA,EAAgBP,QAAA,EAAUQ;IAC5B;IAAA;IAAA3B,cAAA,GAAAE,CAAA;IAEA,IAAIkB,KAAA,EAAO;MAAA;MAAApB,cAAA,GAAA4B,CAAA;MAAA5B,cAAA,GAAAE,CAAA;MACTW,OAAA,CAAQO,KAAK,CAAC,iCAAiCA,KAAA;MAAA;MAAApB,cAAA,GAAAE,CAAA;MAC/C,OAAO2B,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;QACvBC,OAAA,EAAS;QACTZ,KAAA,EAAOA,KAAA,CAAMK,OAAO;QACpBQ,IAAA,EAAMb,KAAA,CAAMa,IAAI;QAChBC,OAAA,EAASd,KAAA,CAAMc,OAAO;QACtBC,IAAA,EAAMf,KAAA,CAAMe;MACd,GAAG;QAAEC,MAAA,EAAQ;MAAI;IACnB;IAAA;IAAA;MAAApC,cAAA,GAAA4B,CAAA;IAAA;IAEA;IACA,MAAMS,mBAAA;IAAA;IAAA,CAAArC,cAAA,GAAAE,CAAA;IAAsB;IAAA,CAAAF,cAAA,GAAA4B,CAAA,UAAAT,QAAA,EAAUmB,GAAA,CAAIC,OAAA,IAAY;MAAA;MAAAvC,cAAA,GAAAI,CAAA;MAAAJ,cAAA,GAAAE,CAAA;MAAA;QACpD,GAAGqC,OAAO;QACVC,aAAA;QAAe;QAAA,CAAAxC,cAAA,GAAA4B,CAAA,UAAAW,OAAA,CAAQE,UAAU,EAAEC,IAAA;QAAA;QAAA,CAAA1C,cAAA,GAAA4B,CAAA,UAAQ;QAC3Ca,UAAA,EAAYE;MACd;IAAA;IAAA;IAAA,CAAA3C,cAAA,GAAA4B,CAAA,UAAO,EAAE;IAAA;IAAA5B,cAAA,GAAAE,CAAA;IAETW,OAAA,CAAQC,GAAG,CAAC,oCAAoC;MAC9C8B,KAAA,EAAOvB,KAAA;MACPwB,QAAA,EAAUR,mBAAA,CAAoBV;IAChC;IAAA;IAAA3B,cAAA,GAAAE,CAAA;IAEA,OAAO2B,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;MACvBC,OAAA,EAAS;MACTd,IAAA,EAAM;QACJC,QAAA,EAAUkB,mBAAA;QACVO,KAAA;QAAO;QAAA,CAAA5C,cAAA,GAAA4B,CAAA,UAAAP,KAAA;QAAA;QAAA,CAAArB,cAAA,GAAA4B,CAAA,UAAS;QAChBkB,UAAA,EAAY;UACVtB,KAAA,EAAO;UACPuB,MAAA,EAAQ;UACRC,OAAA,EAAS;UAAC;UAAA,CAAAhD,cAAA,GAAA4B,CAAA,UAAAP,KAAA;UAAA;UAAA,CAAArB,cAAA,GAAA4B,CAAA,UAAS,MAAK;QAC1B;MACF;MACAqB,KAAA,EAAO;QACLC,SAAA,EAAW,IAAIC,IAAA,GAAOC,WAAW;QACjCC,MAAA,EAAQ;QACRC,IAAA,EAAM;MACR;IACF;EAEF,EAAE,OAAOlC,KAAA,EAAO;IAAA;IAAApB,cAAA,GAAAE,CAAA;IACdW,OAAA,CAAQO,KAAK,CAAC,2CAA2CA,KAAA;IAAA;IAAApB,cAAA,GAAAE,CAAA;IACzD,OAAO2B,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;MACvBC,OAAA,EAAS;MACTZ,KAAA,EAAOA,KAAA,YAAiBmC,KAAA;MAAA;MAAA,CAAAvD,cAAA,GAAA4B,CAAA,UAAQR,KAAA,CAAMK,OAAO;MAAA;MAAA,CAAAzB,cAAA,GAAA4B,CAAA,UAAG;MAChDqB,KAAA,EAAO;QACLC,SAAA,EAAW,IAAIC,IAAA,GAAOC,WAAW;QACjCC,MAAA,EAAQ;QACRC,IAAA,EAAM;MACR;IACF,GAAG;MAAElB,MAAA,EAAQ;IAAI;EACnB;AACF","ignoreList":[]}