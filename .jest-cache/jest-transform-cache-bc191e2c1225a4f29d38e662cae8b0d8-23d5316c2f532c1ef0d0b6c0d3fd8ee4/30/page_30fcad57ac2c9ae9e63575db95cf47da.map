{"version":3,"names":["cov_1rwf91tvi4","actualCoverage","s","default","f","DriverRoutePage","dynamic","params","_navigation","useParams","routeId","id","state","completeDelivery","updateDriverLocation","_DriverContext","useDriver","currentDeliveryIndex","setCurrentDeliveryIndex","_react","useState","isNavigating","setIsNavigating","routeData","setRouteData","navigationInstructions","setNavigationInstructions","useEffect","loadRouteData","response","fetch","data","json","error","console","currentDelivery","shipments","remainingDeliveries","b","slice","handleStartNavigation","calculateRoute","destination","handleCompleteDelivery","length","prev","currentLocation","method","headers","body","JSON","stringify","origin","coordinates","waypoints","instructions","_jsxruntime","jsx","className","jsxs","name","total_distance","Math","round","estimated_time","_badge","Badge","variant","_GPSNavigationMap","GPSNavigationMap","onLocationUpdate","_NavigationInstructions","NavigationInstructions","_DeliveryCard","DeliveryCard","delivery","isActive","onComplete","onStartNavigation","map","index","customer_name","address","_lucidereact","ArrowRight","_button","Button","size","onClick","disabled","Pause","Navigation","MapPin"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\driver\\route\\[id]\\page.tsx"],"sourcesContent":["/**\n * Vista de navegación GPS en tiempo real para drivers\n * Interfaz principal para navegación turn-by-turn y gestión de entregas\n */\n\n'use client';\n\n\n// Forzar renderizado dinámico para evitar problemas con prerendering\nexport const dynamic = 'force-dynamic';\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'next/navigation';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { \n  Navigation, \n  MapPin, \n  CheckCircle, \n  Clock, \n  Package,\n  Phone,\n  MessageCircle,\n  AlertTriangle,\n  ArrowRight,\n  RotateCcw,\n  Pause,\n  Play\n} from 'lucide-react';\nimport { useDriver } from '@/contexts/DriverContext';\nimport { GPSNavigationMap } from '@/components/driver/GPSNavigationMap';\nimport { DeliveryCard } from '@/components/driver/DeliveryCard';\nimport { NavigationInstructions } from '@/components/driver/NavigationInstructions';\nimport { cn } from '@/lib/utils';\n\nexport default function DriverRoutePage() {\n  const params = useParams();\n  const routeId = params.id as string;\n  const { state, completeDelivery, updateDriverLocation } = useDriver();\n  \n  const [currentDeliveryIndex, setCurrentDeliveryIndex] = useState(0);\n  const [isNavigating, setIsNavigating] = useState(false);\n  const [routeData, setRouteData] = useState<any>(null);\n  const [navigationInstructions, setNavigationInstructions] = useState<any[]>([]);\n\n  // Cargar datos de la ruta\n  useEffect(() => {\n    loadRouteData();\n  }, [routeId]);\n\n  const loadRouteData = async () => {\n    try {\n      const response = await fetch(`/api/driver/routes/${routeId}`);\n      const data = await response.json();\n      setRouteData(data);\n    } catch (error) {\n      console.error('Error loading route data:', error);\n    }\n  };\n\n  const currentDelivery = routeData?.shipments?.[currentDeliveryIndex];\n  const remainingDeliveries = routeData?.shipments?.slice(currentDeliveryIndex + 1) || [];\n\n  const handleStartNavigation = () => {\n    setIsNavigating(true);\n    // Iniciar navegación GPS hacia la próxima entrega\n    if (currentDelivery) {\n      calculateRoute(currentDelivery.destination);\n    }\n  };\n\n  const handleCompleteDelivery = () => {\n    if (currentDelivery && routeData?.shipments) {\n      completeDelivery(currentDelivery.id);\n\n      // Avanzar a la siguiente entrega\n      if (currentDeliveryIndex < routeData.shipments.length - 1) {\n        setCurrentDeliveryIndex(prev => prev + 1);\n      } else {\n        // Ruta completada\n        setIsNavigating(false);\n        // Redirigir al dashboard o mostrar resumen\n      }\n    }\n  };\n\n  const calculateRoute = async (destination: any) => {\n    if (!state.currentLocation) return;\n\n    try {\n      const response = await fetch('/api/driver/navigation/directions', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          origin: state.currentLocation,\n          destination: destination.coordinates,\n          waypoints: []\n        })\n      });\n\n      const data = await response.json();\n      setNavigationInstructions(data.instructions || []);\n    } catch (error) {\n      console.error('Error calculating route:', error);\n    }\n  };\n\n  if (!routeData) {\n    return (\n      <div className=\"flex items-center justify-center h-screen\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p>Cargando ruta...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"h-screen flex flex-col bg-gray-50\">\n      {/* Header con información de la ruta */}\n      <div className=\"bg-white border-b border-gray-200 p-4\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"font-semibold text-lg\">{routeData.name}</h1>\n            <div className=\"flex items-center space-x-4 text-sm text-gray-600\">\n              <span>{routeData.shipments?.length || 0} entregas</span>\n              <span>{routeData.total_distance || 0} km</span>\n              <span>{Math.round((routeData.estimated_time || 0) / 60)}h</span>\n            </div>\n          </div>\n          <Badge variant={isNavigating ? \"default\" : \"secondary\"}>\n            {isNavigating ? 'Navegando' : 'Pausado'}\n          </Badge>\n        </div>\n      </div>\n\n      {/* Mapa de navegación */}\n      <div className=\"flex-1 relative\">\n        <GPSNavigationMap\n          currentLocation={state.currentLocation}\n          destination={currentDelivery?.destination}\n          waypoints={routeData.waypoints || []}\n          isNavigating={isNavigating}\n          onLocationUpdate={updateDriverLocation}\n        />\n\n        {/* Instrucciones de navegación flotantes */}\n        {isNavigating && navigationInstructions.length > 0 && (\n          <div className=\"absolute top-4 left-4 right-4\">\n            <NavigationInstructions \n              instructions={navigationInstructions}\n              currentLocation={state.currentLocation}\n            />\n          </div>\n        )}\n      </div>\n\n      {/* Panel inferior con entrega actual */}\n      <div className=\"bg-white border-t border-gray-200 max-h-80 overflow-y-auto\">\n        {currentDelivery && (\n          <DeliveryCard\n            delivery={currentDelivery}\n            isActive={true}\n            onComplete={handleCompleteDelivery}\n            onStartNavigation={handleStartNavigation}\n            isNavigating={isNavigating}\n          />\n        )}\n\n        {/* Próximas entregas */}\n        {remainingDeliveries.length > 0 && (\n          <div className=\"p-4 border-t border-gray-100\">\n            <h3 className=\"font-medium text-gray-900 mb-3\">\n              Próximas Entregas ({remainingDeliveries.length})\n            </h3>\n            <div className=\"space-y-2 max-h-40 overflow-y-auto\">\n              {remainingDeliveries.slice(0, 3).map((delivery, index) => (\n                <div\n                  key={delivery.id}\n                  className=\"flex items-center space-x-3 p-2 bg-gray-50 rounded-lg\"\n                >\n                  <div className=\"bg-gray-300 text-gray-600 rounded-full w-6 h-6 flex items-center justify-center text-xs font-medium\">\n                    {currentDeliveryIndex + index + 2}\n                  </div>\n                  <div className=\"flex-1 min-w-0\">\n                    <p className=\"text-sm font-medium text-gray-900 truncate\">\n                      {delivery.customer_name}\n                    </p>\n                    <p className=\"text-xs text-gray-600 truncate\">\n                      {delivery.destination.address}\n                    </p>\n                  </div>\n                  <ArrowRight className=\"h-4 w-4 text-gray-400\" />\n                </div>\n              ))}\n              \n              {remainingDeliveries.length > 3 && (\n                <div className=\"text-center py-2\">\n                  <span className=\"text-sm text-gray-500\">\n                    +{remainingDeliveries.length - 3} entregas más\n                  </span>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Controles de navegación flotantes */}\n      <div className=\"absolute bottom-4 right-4 space-y-2\">\n        <Button\n          size=\"lg\"\n          className=\"rounded-full w-14 h-14 shadow-lg\"\n          onClick={isNavigating ? () => setIsNavigating(false) : handleStartNavigation}\n          disabled={!currentDelivery}\n        >\n          {isNavigating ? (\n            <Pause className=\"h-6 w-6\" />\n          ) : (\n            <Navigation className=\"h-6 w-6\" />\n          )}\n        </Button>\n\n        {/* Botón de recentrar mapa */}\n        <Button\n          size=\"lg\"\n          variant=\"outline\"\n          className=\"rounded-full w-14 h-14 shadow-lg bg-white\"\n          onClick={() => {\n            // Recentrar mapa en ubicación actual\n            if (state.currentLocation) {\n              // Trigger map recenter\n            }\n          }}\n        >\n          <MapPin className=\"h-6 w-6\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\n"],"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","ignoreList":[]}