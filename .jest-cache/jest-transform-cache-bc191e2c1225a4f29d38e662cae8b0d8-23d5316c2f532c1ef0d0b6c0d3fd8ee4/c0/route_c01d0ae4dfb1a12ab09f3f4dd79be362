b4670221a386ff7859b212fa2760e5ca
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_po62tdwmm() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\notifications\\email\\route.ts";
  var hash = "4ae78839731565c23f51ec32ccda03f0c004163d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\notifications\\email\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 57
        }
      },
      "9": {
        start: {
          line: 25,
          column: 18
        },
        end: {
          line: 25,
          column: 69
        }
      },
      "10": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 24
        }
      },
      "11": {
        start: {
          line: 28,
          column: 24
        },
        end: {
          line: 74,
          column: 1
        }
      },
      "12": {
        start: {
          line: 31,
          column: 26
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "13": {
        start: {
          line: 43,
          column: 26
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "14": {
        start: {
          line: 55,
          column: 26
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "15": {
        start: {
          line: 65,
          column: 26
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "16": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 167,
          column: 5
        }
      },
      "17": {
        start: {
          line: 78,
          column: 24
        },
        end: {
          line: 78,
          column: 49
        }
      },
      "18": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "19": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 85,
          column: 15
        }
      },
      "20": {
        start: {
          line: 87,
          column: 23
        },
        end: {
          line: 87,
          column: 38
        }
      },
      "21": {
        start: {
          line: 88,
          column: 21
        },
        end: {
          line: 88,
          column: 41
        }
      },
      "22": {
        start: {
          line: 89,
          column: 55
        },
        end: {
          line: 89,
          column: 59
        }
      },
      "23": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "24": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 97,
          column: 15
        }
      },
      "25": {
        start: {
          line: 100,
          column: 53
        },
        end: {
          line: 100,
          column: 150
        }
      },
      "26": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "27": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 66
        }
      },
      "28": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 108,
          column: 15
        }
      },
      "29": {
        start: {
          line: 111,
          column: 29
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "30": {
        start: {
          line: 119,
          column: 30
        },
        end: {
          line: 119,
          column: 51
        }
      },
      "31": {
        start: {
          line: 120,
          column: 24
        },
        end: {
          line: 120,
          column: 45
        }
      },
      "32": {
        start: {
          line: 121,
          column: 28
        },
        end: {
          line: 121,
          column: 64
        }
      },
      "33": {
        start: {
          line: 128,
          column: 65
        },
        end: {
          line: 141,
          column: 28
        }
      },
      "34": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "35": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 79
        }
      },
      "36": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 152,
          column: 11
        }
      },
      "37": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 158,
          column: 11
        }
      },
      "38": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 77
        }
      },
      "39": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 166,
          column: 11
        }
      },
      "40": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 211,
          column: 5
        }
      },
      "41": {
        start: {
          line: 172,
          column: 24
        },
        end: {
          line: 172,
          column: 49
        }
      },
      "42": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 180,
          column: 9
        }
      },
      "43": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 179,
          column: 15
        }
      },
      "44": {
        start: {
          line: 181,
          column: 23
        },
        end: {
          line: 181,
          column: 38
        }
      },
      "45": {
        start: {
          line: 182,
          column: 33
        },
        end: {
          line: 182,
          column: 53
        }
      },
      "46": {
        start: {
          line: 183,
          column: 22
        },
        end: {
          line: 183,
          column: 65
        }
      },
      "47": {
        start: {
          line: 184,
          column: 23
        },
        end: {
          line: 184,
          column: 66
        }
      },
      "48": {
        start: {
          line: 186,
          column: 47
        },
        end: {
          line: 188,
          column: 44
        }
      },
      "49": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 197,
          column: 9
        }
      },
      "50": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 69
        }
      },
      "51": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 196,
          column: 15
        }
      },
      "52": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 202,
          column: 11
        }
      },
      "53": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 76
        }
      },
      "54": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 210,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 31,
            column: 18
          },
          end: {
            line: 31,
            column: 19
          }
        },
        loc: {
          start: {
            line: 31,
            column: 26
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 31
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 43,
            column: 18
          },
          end: {
            line: 43,
            column: 19
          }
        },
        loc: {
          start: {
            line: 43,
            column: 26
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 43
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 55,
            column: 18
          },
          end: {
            line: 55,
            column: 19
          }
        },
        loc: {
          start: {
            line: 55,
            column: 26
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 55
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 65,
            column: 18
          },
          end: {
            line: 65,
            column: 19
          }
        },
        loc: {
          start: {
            line: 65,
            column: 26
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 65
      },
      "8": {
        name: "POST",
        decl: {
          start: {
            line: 75,
            column: 15
          },
          end: {
            line: 75,
            column: 19
          }
        },
        loc: {
          start: {
            line: 75,
            column: 29
          },
          end: {
            line: 168,
            column: 1
          }
        },
        line: 75
      },
      "9": {
        name: "GET",
        decl: {
          start: {
            line: 169,
            column: 15
          },
          end: {
            line: 169,
            column: 18
          }
        },
        loc: {
          start: {
            line: 169,
            column: 28
          },
          end: {
            line: 212,
            column: 1
          }
        },
        line: 169
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 47,
            column: 47
          },
          end: {
            line: 47,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 47
          },
          end: {
            line: 47,
            column: 60
          }
        }, {
          start: {
            line: 47,
            column: 64
          },
          end: {
            line: 47,
            column: 81
          }
        }],
        line: 47
      },
      "1": {
        loc: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "2": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "3": {
        loc: {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 91,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 91,
            column: 17
          }
        }, {
          start: {
            line: 91,
            column: 21
          },
          end: {
            line: 91,
            column: 43
          }
        }],
        line: 91
      },
      "4": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "5": {
        loc: {
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 101,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 101,
            column: 21
          }
        }, {
          start: {
            line: 101,
            column: 25
          },
          end: {
            line: 101,
            column: 34
          }
        }],
        line: 101
      },
      "6": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "7": {
        loc: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "8": {
        loc: {
          start: {
            line: 183,
            column: 31
          },
          end: {
            line: 183,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 31
          },
          end: {
            line: 183,
            column: 56
          }
        }, {
          start: {
            line: 183,
            column: 60
          },
          end: {
            line: 183,
            column: 64
          }
        }],
        line: 183
      },
      "9": {
        loc: {
          start: {
            line: 184,
            column: 32
          },
          end: {
            line: 184,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 32
          },
          end: {
            line: 184,
            column: 58
          }
        }, {
          start: {
            line: 184,
            column: 62
          },
          end: {
            line: 184,
            column: 65
          }
        }],
        line: 184
      },
      "10": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "11": {
        loc: {
          start: {
            line: 200,
            column: 27
          },
          end: {
            line: 200,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 27
          },
          end: {
            line: 200,
            column: 40
          }
        }, {
          start: {
            line: 200,
            column: 44
          },
          end: {
            line: 200,
            column: 46
          }
        }],
        line: 200
      },
      "12": {
        loc: {
          start: {
            line: 201,
            column: 19
          },
          end: {
            line: 201,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 201,
            column: 19
          },
          end: {
            line: 201,
            column: 40
          }
        }, {
          start: {
            line: 201,
            column: 44
          },
          end: {
            line: 201,
            column: 45
          }
        }],
        line: 201
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\notifications\\email\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API DE NOTIFICACIONES POR EMAIL\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\n\r\n// Tipos de notificaciones por email\r\nexport type EmailNotificationType = \r\n  | 'profile_email_changed'\r\n  | 'profile_phone_changed'\r\n  | 'profile_updated'\r\n  | 'avatar_changed'\r\n  | 'address_added'\r\n  | 'address_updated'\r\n  | 'security_alert';\r\n\r\ninterface EmailNotificationData {\r\n  type: EmailNotificationType;\r\n  oldValue?: string;\r\n  newValue?: string;\r\n  metadata?: Record<string, any>;\r\n}\r\n\r\n// Plantillas de email\r\nconst EMAIL_TEMPLATES = {\r\n  profile_email_changed: {\r\n    subject: 'Pinteya - Cambio de email confirmado',\r\n    template: (data: any) => `\r\n      <h2>Cambio de email confirmado</h2>\r\n      <p>Hola ${data.userName},</p>\r\n      <p>Tu direcci\xF3n de email ha sido actualizada exitosamente.</p>\r\n      <p><strong>Email anterior:</strong> ${data.oldValue}</p>\r\n      <p><strong>Nuevo email:</strong> ${data.newValue}</p>\r\n      <p>Si no realizaste este cambio, contacta inmediatamente a nuestro soporte.</p>\r\n      <p>Saludos,<br>Equipo Pinteya</p>\r\n    `,\r\n  },\r\n  profile_phone_changed: {\r\n    subject: 'Pinteya - Cambio de tel\xE9fono confirmado',\r\n    template: (data: any) => `\r\n      <h2>Cambio de tel\xE9fono confirmado</h2>\r\n      <p>Hola ${data.userName},</p>\r\n      <p>Tu n\xFAmero de tel\xE9fono ha sido actualizado exitosamente.</p>\r\n      <p><strong>Tel\xE9fono anterior:</strong> ${data.oldValue || 'No especificado'}</p>\r\n      <p><strong>Nuevo tel\xE9fono:</strong> ${data.newValue}</p>\r\n      <p>Si no realizaste este cambio, contacta inmediatamente a nuestro soporte.</p>\r\n      <p>Saludos,<br>Equipo Pinteya</p>\r\n    `,\r\n  },\r\n  profile_updated: {\r\n    subject: 'Pinteya - Perfil actualizado',\r\n    template: (data: any) => `\r\n      <h2>Perfil actualizado</h2>\r\n      <p>Hola ${data.userName},</p>\r\n      <p>Tu perfil ha sido actualizado exitosamente.</p>\r\n      <p>Si no realizaste estos cambios, contacta inmediatamente a nuestro soporte.</p>\r\n      <p>Saludos,<br>Equipo Pinteya</p>\r\n    `,\r\n  },\r\n  security_alert: {\r\n    subject: 'Pinteya - Alerta de seguridad',\r\n    template: (data: any) => `\r\n      <h2>Alerta de seguridad</h2>\r\n      <p>Hola ${data.userName},</p>\r\n      <p>Se han detectado cambios importantes en tu cuenta:</p>\r\n      <p>${data.message}</p>\r\n      <p>Si no realizaste estos cambios, contacta inmediatamente a nuestro soporte.</p>\r\n      <p>Saludos,<br>Equipo Pinteya</p>\r\n    `,\r\n  },\r\n};\r\n\r\n// ===================================\r\n// POST - Enviar notificaci\xF3n por email\r\n// ===================================\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'Usuario no autenticado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n    const body = await request.json();\r\n    const { type, oldValue, newValue, metadata }: EmailNotificationData = body;\r\n\r\n    // Validar tipo de notificaci\xF3n\r\n    if (!type || !EMAIL_TEMPLATES[type]) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'Tipo de notificaci\xF3n inv\xE1lido' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Obtener datos del usuario\r\n    const { data: userData, error: userError } = await supabaseAdmin\r\n      .from('users')\r\n      .select('name, email')\r\n      .eq('clerk_id', userId)\r\n      .single();\r\n\r\n    if (userError || !userData) {\r\n      console.error('Error al obtener usuario:', userError);\r\n      return NextResponse.json(\r\n        { success: false, error: 'Error al obtener datos del usuario' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Preparar datos para la plantilla\r\n    const templateData = {\r\n      userName: userData.name,\r\n      userEmail: userData.email,\r\n      oldValue,\r\n      newValue,\r\n      ...metadata,\r\n    };\r\n\r\n    // Obtener plantilla de email\r\n    const emailTemplate = EMAIL_TEMPLATES[type];\r\n    const subject = emailTemplate.subject;\r\n    const htmlContent = emailTemplate.template(templateData);\r\n\r\n    // En un entorno de producci\xF3n, aqu\xED enviar\xEDas el email usando un servicio como:\r\n    // - SendGrid\r\n    // - AWS SES\r\n    // - Resend\r\n    // - Nodemailer\r\n    \r\n    // Por ahora, simularemos el env\xEDo y guardaremos la notificaci\xF3n en la base de datos\r\n    const { data: notification, error: notificationError } = await supabaseAdmin\r\n      .from('user_notifications')\r\n      .insert({\r\n        user_id: userId,\r\n        type: 'email',\r\n        title: subject,\r\n        content: htmlContent,\r\n        metadata: {\r\n          email_type: type,\r\n          recipient: userData.email,\r\n          sent_at: new Date().toISOString(),\r\n          ...templateData,\r\n        },\r\n        read: false,\r\n        created_at: new Date().toISOString(),\r\n      })\r\n      .select()\r\n      .single();\r\n\r\n    if (notificationError) {\r\n      console.error('Error al guardar notificaci\xF3n:', notificationError);\r\n      // No fallar si no se puede guardar la notificaci\xF3n\r\n    }\r\n\r\n    // Log para desarrollo\r\n    console.log('\uD83D\uDCE7 Email notification sent:', {\r\n      type,\r\n      recipient: userData.email,\r\n      subject,\r\n      userId,\r\n    });\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: 'Notificaci\xF3n por email enviada correctamente',\r\n      notification_id: notification?.id,\r\n      email_sent: true,\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error en POST /api/user/notifications/email:', error);\r\n    return NextResponse.json(\r\n      { success: false, error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// ===================================\r\n// GET - Obtener historial de notificaciones\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'Usuario no autenticado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n    const { searchParams } = new URL(request.url);\r\n    const limit = parseInt(searchParams.get('limit') || '10');\r\n    const offset = parseInt(searchParams.get('offset') || '0');\r\n\r\n    // Obtener notificaciones del usuario\r\n    const { data: notifications, error } = await supabaseAdmin\r\n      .from('user_notifications')\r\n      .select('*')\r\n      .eq('user_id', userId)\r\n      .eq('type', 'email')\r\n      .order('created_at', { ascending: false })\r\n      .range(offset, offset + limit - 1);\r\n\r\n    if (error) {\r\n      console.error('Error al obtener notificaciones:', error);\r\n      return NextResponse.json(\r\n        { success: false, error: 'Error al obtener notificaciones' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      notifications: notifications || [],\r\n      total: notifications?.length || 0,\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error en GET /api/user/notifications/email:', error);\r\n    return NextResponse.json(\r\n      { success: false, error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "EMAIL_TEMPLATES", "profile_email_changed", "subject", "template", "data", "userName", "oldValue", "newValue", "profile_phone_changed", "profile_updated", "security_alert", "message", "request", "session", "auth", "user", "NextResponse", "json", "success", "error", "status", "userId", "id", "body", "type", "metadata", "userData", "userError", "supabaseAdmin", "from", "select", "eq", "single", "console", "templateData", "name", "userEmail", "email", "emailTemplate", "htmlContent", "notification", "notificationError", "insert", "user_id", "title", "content", "email_type", "recipient", "sent_at", "Date", "toISOString", "read", "created_at", "log", "notification_id", "email_sent", "searchParams", "URL", "url", "limit", "parseInt", "get", "offset", "notifications", "order", "ascending", "range", "total", "length"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4ae78839731565c23f51ec32ccda03f0c004163d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_po62tdwmm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_po62tdwmm();
cov_po62tdwmm().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_po62tdwmm().f[0]++;
  cov_po62tdwmm().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_po62tdwmm().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_po62tdwmm().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_po62tdwmm().f[1]++;
    cov_po62tdwmm().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_po62tdwmm().f[2]++;
    cov_po62tdwmm().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_po62tdwmm().f[3]++;
    cov_po62tdwmm().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_po62tdwmm().s[7]++, require("next/server"));
const _config =
/* istanbul ignore next */
(cov_po62tdwmm().s[8]++, require("../../../../../lib/auth/config"));
const _supabase =
/* istanbul ignore next */
(cov_po62tdwmm().s[9]++, require("../../../../../lib/integrations/supabase"));
const runtime =
/* istanbul ignore next */
(cov_po62tdwmm().s[10]++, 'nodejs');
// Plantillas de email
const EMAIL_TEMPLATES =
/* istanbul ignore next */
(cov_po62tdwmm().s[11]++, {
  profile_email_changed: {
    subject: 'Pinteya - Cambio de email confirmado',
    template: data => {
      /* istanbul ignore next */
      cov_po62tdwmm().f[4]++;
      cov_po62tdwmm().s[12]++;
      return `
      <h2>Cambio de email confirmado</h2>
      <p>Hola ${data.userName},</p>
      <p>Tu direcciÃ³n de email ha sido actualizada exitosamente.</p>
      <p><strong>Email anterior:</strong> ${data.oldValue}</p>
      <p><strong>Nuevo email:</strong> ${data.newValue}</p>
      <p>Si no realizaste este cambio, contacta inmediatamente a nuestro soporte.</p>
      <p>Saludos,<br>Equipo Pinteya</p>
    `;
    }
  },
  profile_phone_changed: {
    subject: 'Pinteya - Cambio de telÃ©fono confirmado',
    template: data => {
      /* istanbul ignore next */
      cov_po62tdwmm().f[5]++;
      cov_po62tdwmm().s[13]++;
      return `
      <h2>Cambio de telÃ©fono confirmado</h2>
      <p>Hola ${data.userName},</p>
      <p>Tu nÃºmero de telÃ©fono ha sido actualizado exitosamente.</p>
      <p><strong>TelÃ©fono anterior:</strong> ${
      /* istanbul ignore next */
      (cov_po62tdwmm().b[0][0]++, data.oldValue) ||
      /* istanbul ignore next */
      (cov_po62tdwmm().b[0][1]++, 'No especificado')}</p>
      <p><strong>Nuevo telÃ©fono:</strong> ${data.newValue}</p>
      <p>Si no realizaste este cambio, contacta inmediatamente a nuestro soporte.</p>
      <p>Saludos,<br>Equipo Pinteya</p>
    `;
    }
  },
  profile_updated: {
    subject: 'Pinteya - Perfil actualizado',
    template: data => {
      /* istanbul ignore next */
      cov_po62tdwmm().f[6]++;
      cov_po62tdwmm().s[14]++;
      return `
      <h2>Perfil actualizado</h2>
      <p>Hola ${data.userName},</p>
      <p>Tu perfil ha sido actualizado exitosamente.</p>
      <p>Si no realizaste estos cambios, contacta inmediatamente a nuestro soporte.</p>
      <p>Saludos,<br>Equipo Pinteya</p>
    `;
    }
  },
  security_alert: {
    subject: 'Pinteya - Alerta de seguridad',
    template: data => {
      /* istanbul ignore next */
      cov_po62tdwmm().f[7]++;
      cov_po62tdwmm().s[15]++;
      return `
      <h2>Alerta de seguridad</h2>
      <p>Hola ${data.userName},</p>
      <p>Se han detectado cambios importantes en tu cuenta:</p>
      <p>${data.message}</p>
      <p>Si no realizaste estos cambios, contacta inmediatamente a nuestro soporte.</p>
      <p>Saludos,<br>Equipo Pinteya</p>
    `;
    }
  }
});
async function POST(request) {
  /* istanbul ignore next */
  cov_po62tdwmm().f[8]++;
  cov_po62tdwmm().s[16]++;
  try {
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_po62tdwmm().s[17]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_po62tdwmm().s[18]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_po62tdwmm().b[1][0]++;
      cov_po62tdwmm().s[19]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Usuario no autenticado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_po62tdwmm().b[1][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_po62tdwmm().s[20]++, session.user.id);
    const body =
    /* istanbul ignore next */
    (cov_po62tdwmm().s[21]++, await request.json());
    const {
      type,
      oldValue,
      newValue,
      metadata
    } =
    /* istanbul ignore next */
    (cov_po62tdwmm().s[22]++, body);
    // Validar tipo de notificaciÃ³n
    /* istanbul ignore next */
    cov_po62tdwmm().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_po62tdwmm().b[3][0]++, !type) ||
    /* istanbul ignore next */
    (cov_po62tdwmm().b[3][1]++, !EMAIL_TEMPLATES[type])) {
      /* istanbul ignore next */
      cov_po62tdwmm().b[2][0]++;
      cov_po62tdwmm().s[24]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Tipo de notificaciÃ³n invÃ¡lido'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_po62tdwmm().b[2][1]++;
    }
    // Obtener datos del usuario
    const {
      data: userData,
      error: userError
    } =
    /* istanbul ignore next */
    (cov_po62tdwmm().s[25]++, await _supabase.supabaseAdmin.from('users').select('name, email').eq('clerk_id', userId).single());
    /* istanbul ignore next */
    cov_po62tdwmm().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_po62tdwmm().b[5][0]++, userError) ||
    /* istanbul ignore next */
    (cov_po62tdwmm().b[5][1]++, !userData)) {
      /* istanbul ignore next */
      cov_po62tdwmm().b[4][0]++;
      cov_po62tdwmm().s[27]++;
      console.error('Error al obtener usuario:', userError);
      /* istanbul ignore next */
      cov_po62tdwmm().s[28]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Error al obtener datos del usuario'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_po62tdwmm().b[4][1]++;
    }
    // Preparar datos para la plantilla
    const templateData =
    /* istanbul ignore next */
    (cov_po62tdwmm().s[29]++, {
      userName: userData.name,
      userEmail: userData.email,
      oldValue,
      newValue,
      ...metadata
    });
    // Obtener plantilla de email
    const emailTemplate =
    /* istanbul ignore next */
    (cov_po62tdwmm().s[30]++, EMAIL_TEMPLATES[type]);
    const subject =
    /* istanbul ignore next */
    (cov_po62tdwmm().s[31]++, emailTemplate.subject);
    const htmlContent =
    /* istanbul ignore next */
    (cov_po62tdwmm().s[32]++, emailTemplate.template(templateData));
    // En un entorno de producciÃ³n, aquÃ­ enviarÃ­as el email usando un servicio como:
    // - SendGrid
    // - AWS SES
    // - Resend
    // - Nodemailer
    // Por ahora, simularemos el envÃ­o y guardaremos la notificaciÃ³n en la base de datos
    const {
      data: notification,
      error: notificationError
    } =
    /* istanbul ignore next */
    (cov_po62tdwmm().s[33]++, await _supabase.supabaseAdmin.from('user_notifications').insert({
      user_id: userId,
      type: 'email',
      title: subject,
      content: htmlContent,
      metadata: {
        email_type: type,
        recipient: userData.email,
        sent_at: new Date().toISOString(),
        ...templateData
      },
      read: false,
      created_at: new Date().toISOString()
    }).select().single());
    /* istanbul ignore next */
    cov_po62tdwmm().s[34]++;
    if (notificationError) {
      /* istanbul ignore next */
      cov_po62tdwmm().b[6][0]++;
      cov_po62tdwmm().s[35]++;
      console.error('Error al guardar notificaciÃ³n:', notificationError);
      // No fallar si no se puede guardar la notificaciÃ³n
    } else
    /* istanbul ignore next */
    {
      cov_po62tdwmm().b[6][1]++;
    }
    // Log para desarrollo
    cov_po62tdwmm().s[36]++;
    console.log('ğ§ Email notification sent:', {
      type,
      recipient: userData.email,
      subject,
      userId
    });
    /* istanbul ignore next */
    cov_po62tdwmm().s[37]++;
    return _server.NextResponse.json({
      success: true,
      message: 'NotificaciÃ³n por email enviada correctamente',
      notification_id: notification?.id,
      email_sent: true
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_po62tdwmm().s[38]++;
    console.error('Error en POST /api/user/notifications/email:', error);
    /* istanbul ignore next */
    cov_po62tdwmm().s[39]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_po62tdwmm().f[9]++;
  cov_po62tdwmm().s[40]++;
  try {
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_po62tdwmm().s[41]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_po62tdwmm().s[42]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_po62tdwmm().b[7][0]++;
      cov_po62tdwmm().s[43]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Usuario no autenticado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_po62tdwmm().b[7][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_po62tdwmm().s[44]++, session.user.id);
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_po62tdwmm().s[45]++, new URL(request.url));
    const limit =
    /* istanbul ignore next */
    (cov_po62tdwmm().s[46]++, parseInt(
    /* istanbul ignore next */
    (cov_po62tdwmm().b[8][0]++, searchParams.get('limit')) ||
    /* istanbul ignore next */
    (cov_po62tdwmm().b[8][1]++, '10')));
    const offset =
    /* istanbul ignore next */
    (cov_po62tdwmm().s[47]++, parseInt(
    /* istanbul ignore next */
    (cov_po62tdwmm().b[9][0]++, searchParams.get('offset')) ||
    /* istanbul ignore next */
    (cov_po62tdwmm().b[9][1]++, '0')));
    // Obtener notificaciones del usuario
    const {
      data: notifications,
      error
    } =
    /* istanbul ignore next */
    (cov_po62tdwmm().s[48]++, await _supabase.supabaseAdmin.from('user_notifications').select('*').eq('user_id', userId).eq('type', 'email').order('created_at', {
      ascending: false
    }).range(offset, offset + limit - 1));
    /* istanbul ignore next */
    cov_po62tdwmm().s[49]++;
    if (error) {
      /* istanbul ignore next */
      cov_po62tdwmm().b[10][0]++;
      cov_po62tdwmm().s[50]++;
      console.error('Error al obtener notificaciones:', error);
      /* istanbul ignore next */
      cov_po62tdwmm().s[51]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Error al obtener notificaciones'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_po62tdwmm().b[10][1]++;
    }
    cov_po62tdwmm().s[52]++;
    return _server.NextResponse.json({
      success: true,
      notifications:
      /* istanbul ignore next */
      (cov_po62tdwmm().b[11][0]++, notifications) ||
      /* istanbul ignore next */
      (cov_po62tdwmm().b[11][1]++, []),
      total:
      /* istanbul ignore next */
      (cov_po62tdwmm().b[12][0]++, notifications?.length) ||
      /* istanbul ignore next */
      (cov_po62tdwmm().b[12][1]++, 0)
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_po62tdwmm().s[53]++;
    console.error('Error en GET /api/user/notifications/email:', error);
    /* istanbul ignore next */
    cov_po62tdwmm().s[54]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,