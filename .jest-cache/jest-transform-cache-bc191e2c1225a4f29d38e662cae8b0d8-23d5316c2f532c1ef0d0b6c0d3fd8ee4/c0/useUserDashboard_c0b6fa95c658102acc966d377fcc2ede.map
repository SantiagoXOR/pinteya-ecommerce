{"version":3,"names":["cov_1sfys1yh0i","actualCoverage","s","useUserDashboard","f","dashboard","setDashboard","_react","useState","loading","setLoading","error","setError","fetchDashboard","response","fetch","data","json","ok","b","Error","success","err","console","message","refreshDashboard","useEffect"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useUserDashboard.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - HOOK PARA DASHBOARD DE USUARIO\r\n// ===================================\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { DashboardData, UseUserDashboardReturn } from '@/types/hooks';\r\n\r\n// ===================================\r\n// INTERFACES\r\n// ===================================\r\n// Interfaces movidas a @/types/hooks para reutilización\r\n\r\ninterface UseUserDashboardReturn {\r\n  data: DashboardData | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n  refreshDashboard: () => Promise<void>;\r\n}\r\n\r\nexport function useUserDashboard(): UseUserDashboardReturn {\r\n  const [dashboard, setDashboard] = useState<DashboardData | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Función para obtener los datos del dashboard\r\n  const fetchDashboard = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const response = await fetch('/api/user/dashboard');\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Error al obtener datos del dashboard');\r\n      }\r\n\r\n      if (data.success) {\r\n        setDashboard(data.dashboard);\r\n      } else {\r\n        throw new Error('Error al obtener datos del dashboard');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error en useUserDashboard:', err);\r\n      setError(err instanceof Error ? err.message : 'Error desconocido');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Función para refrescar el dashboard\r\n  const refreshDashboard = () => {\r\n    fetchDashboard();\r\n  };\r\n\r\n  // Cargar dashboard al montar el componente\r\n  useEffect(() => {\r\n    fetchDashboard();\r\n  }, []);\r\n\r\n  return {\r\n    dashboard,\r\n    loading,\r\n    error,\r\n    refreshDashboard,\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}