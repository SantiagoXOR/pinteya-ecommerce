374e3d81d00c2ec1bae8aadf97787e92
// ===================================
// PINTEYA E-COMMERCE - PAYMENT STATUS API
// ===================================
"use strict";

/* istanbul ignore next */
function cov_sfs7leawp() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\payments\\status\\[id]\\route.ts";
  var hash = "a882fd7c989b028f6cfa52d41b05037bf52181f1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\payments\\status\\[id]\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 19
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 20
        }
      },
      "6": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "7": {
        start: {
          line: 23,
          column: 14
        },
        end: {
          line: 23,
          column: 44
        }
      },
      "8": {
        start: {
          line: 24,
          column: 21
        },
        end: {
          line: 24,
          column: 75
        }
      },
      "9": {
        start: {
          line: 25,
          column: 18
        },
        end: {
          line: 25,
          column: 69
        }
      },
      "10": {
        start: {
          line: 27,
          column: 19
        },
        end: {
          line: 27,
          column: 39
        }
      },
      "11": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 143,
          column: 5
        }
      },
      "12": {
        start: {
          line: 30,
          column: 24
        },
        end: {
          line: 30,
          column: 47
        }
      },
      "13": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "14": {
        start: {
          line: 32,
          column: 34
        },
        end: {
          line: 36,
          column: 13
        }
      },
      "15": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 39,
          column: 15
        }
      },
      "16": {
        start: {
          line: 41,
          column: 24
        },
        end: {
          line: 41,
          column: 33
        }
      },
      "17": {
        start: {
          line: 43,
          column: 25
        },
        end: {
          line: 43,
          column: 63
        }
      },
      "18": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "19": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 96
        }
      },
      "20": {
        start: {
          line: 47,
          column: 34
        },
        end: {
          line: 51,
          column: 13
        }
      },
      "21": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 54,
          column: 15
        }
      },
      "22": {
        start: {
          line: 57,
          column: 51
        },
        end: {
          line: 69,
          column: 57
        }
      },
      "23": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "24": {
        start: {
          line: 71,
          column: 34
        },
        end: {
          line: 75,
          column: 13
        }
      },
      "25": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 78,
          column: 15
        }
      },
      "26": {
        start: {
          line: 80,
          column: 26
        },
        end: {
          line: 80,
          column: 30
        }
      },
      "27": {
        start: {
          line: 81,
          column: 32
        },
        end: {
          line: 81,
          column: 36
        }
      },
      "28": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "29": {
        start: {
          line: 84,
          column: 34
        },
        end: {
          line: 84,
          column: 90
        }
      },
      "30": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 101,
          column: 13
        }
      },
      "31": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 49
        }
      },
      "32": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 100,
          column: 18
        }
      },
      "33": {
        start: {
          line: 104,
          column: 29
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "34": {
        start: {
          line: 112,
          column: 55
        },
        end: {
          line: 121,
          column: 21
        }
      },
      "35": {
        start: {
          line: 125,
          column: 32
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "36": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 132,
          column: 11
        }
      },
      "37": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 62
        }
      },
      "38": {
        start: {
          line: 135,
          column: 30
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "39": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 142,
          column: 11
        }
      },
      "40": {
        start: {
          line: 146,
          column: 19
        },
        end: {
          line: 146,
          column: 39
        }
      },
      "41": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 257,
          column: 5
        }
      },
      "42": {
        start: {
          line: 159,
          column: 24
        },
        end: {
          line: 159,
          column: 62
        }
      },
      "43": {
        start: {
          line: 160,
          column: 24
        },
        end: {
          line: 160,
          column: 33
        }
      },
      "44": {
        start: {
          line: 161,
          column: 21
        },
        end: {
          line: 161,
          column: 41
        }
      },
      "45": {
        start: {
          line: 162,
          column: 58
        },
        end: {
          line: 162,
          column: 62
        }
      },
      "46": {
        start: {
          line: 164,
          column: 25
        },
        end: {
          line: 164,
          column: 63
        }
      },
      "47": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "48": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 97
        }
      },
      "49": {
        start: {
          line: 168,
          column: 34
        },
        end: {
          line: 172,
          column: 13
        }
      },
      "50": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 175,
          column: 15
        }
      },
      "51": {
        start: {
          line: 178,
          column: 51
        },
        end: {
          line: 178,
          column: 142
        }
      },
      "52": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "53": {
        start: {
          line: 180,
          column: 34
        },
        end: {
          line: 184,
          column: 13
        }
      },
      "54": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 187,
          column: 15
        }
      },
      "55": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 233,
          column: 9
        }
      },
      "56": {
        start: {
          line: 191,
          column: 34
        },
        end: {
          line: 191,
          column: 84
        }
      },
      "57": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 232,
          column: 13
        }
      },
      "58": {
        start: {
          line: 193,
          column: 32
        },
        end: {
          line: 193,
          column: 50
        }
      },
      "59": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 210,
          column: 17
        }
      },
      "60": {
        start: {
          line: 198,
          column: 24
        },
        end: {
          line: 198,
          column: 43
        }
      },
      "61": {
        start: {
          line: 199,
          column: 24
        },
        end: {
          line: 199,
          column: 30
        }
      },
      "62": {
        start: {
          line: 202,
          column: 24
        },
        end: {
          line: 202,
          column: 46
        }
      },
      "63": {
        start: {
          line: 203,
          column: 24
        },
        end: {
          line: 203,
          column: 30
        }
      },
      "64": {
        start: {
          line: 206,
          column: 24
        },
        end: {
          line: 206,
          column: 48
        }
      },
      "65": {
        start: {
          line: 207,
          column: 24
        },
        end: {
          line: 207,
          column: 30
        }
      },
      "66": {
        start: {
          line: 209,
          column: 24
        },
        end: {
          line: 209,
          column: 49
        }
      },
      "67": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 218,
          column: 17
        }
      },
      "68": {
        start: {
          line: 213,
          column: 20
        },
        end: {
          line: 217,
          column: 41
        }
      },
      "69": {
        start: {
          line: 219,
          column: 40
        },
        end: {
          line: 228,
          column: 17
        }
      },
      "70": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 231,
          column: 19
        }
      },
      "71": {
        start: {
          line: 235,
          column: 32
        },
        end: {
          line: 243,
          column: 9
        }
      },
      "72": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 246,
          column: 11
        }
      },
      "73": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 63
        }
      },
      "74": {
        start: {
          line: 249,
          column: 30
        },
        end: {
          line: 253,
          column: 9
        }
      },
      "75": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 256,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 15
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 16
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 26,
            column: 15
          },
          end: {
            line: 26,
            column: 18
          }
        },
        loc: {
          start: {
            line: 26,
            column: 37
          },
          end: {
            line: 144,
            column: 1
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 112,
            column: 46
          },
          end: {
            line: 112,
            column: 47
          }
        },
        loc: {
          start: {
            line: 112,
            column: 55
          },
          end: {
            line: 121,
            column: 21
          }
        },
        line: 112
      },
      "5": {
        name: "POST",
        decl: {
          start: {
            line: 145,
            column: 15
          },
          end: {
            line: 145,
            column: 19
          }
        },
        loc: {
          start: {
            line: 145,
            column: 38
          },
          end: {
            line: 258,
            column: 1
          }
        },
        line: 145
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "2": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "3": {
        loc: {
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 70,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 70,
            column: 22
          }
        }, {
          start: {
            line: 70,
            column: 26
          },
          end: {
            line: 70,
            column: 32
          }
        }],
        line: 70
      },
      "4": {
        loc: {
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "5": {
        loc: {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 101,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 101,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "6": {
        loc: {
          start: {
            line: 85,
            column: 16
          },
          end: {
            line: 85,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 16
          },
          end: {
            line: 85,
            column: 37
          }
        }, {
          start: {
            line: 85,
            column: 41
          },
          end: {
            line: 85,
            column: 64
          }
        }],
        line: 85
      },
      "7": {
        loc: {
          start: {
            line: 112,
            column: 23
          },
          end: {
            line: 121,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 23
          },
          end: {
            line: 121,
            column: 23
          }
        }, {
          start: {
            line: 121,
            column: 27
          },
          end: {
            line: 121,
            column: 29
          }
        }],
        line: 112
      },
      "8": {
        loc: {
          start: {
            line: 119,
            column: 35
          },
          end: {
            line: 119,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 35
          },
          end: {
            line: 119,
            column: 69
          }
        }, {
          start: {
            line: 119,
            column: 73
          },
          end: {
            line: 119,
            column: 77
          }
        }],
        line: 119
      },
      "9": {
        loc: {
          start: {
            line: 138,
            column: 19
          },
          end: {
            line: 138,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 19
          },
          end: {
            line: 138,
            column: 32
          }
        }, {
          start: {
            line: 138,
            column: 36
          },
          end: {
            line: 138,
            column: 64
          }
        }],
        line: 138
      },
      "10": {
        loc: {
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "11": {
        loc: {
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "12": {
        loc: {
          start: {
            line: 179,
            column: 12
          },
          end: {
            line: 179,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 12
          },
          end: {
            line: 179,
            column: 22
          }
        }, {
          start: {
            line: 179,
            column: 26
          },
          end: {
            line: 179,
            column: 32
          }
        }],
        line: 179
      },
      "13": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "14": {
        loc: {
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 232,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 232,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "15": {
        loc: {
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 192,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 192,
            column: 37
          }
        }, {
          start: {
            line: 192,
            column: 41
          },
          end: {
            line: 192,
            column: 64
          }
        }],
        line: 192
      },
      "16": {
        loc: {
          start: {
            line: 196,
            column: 16
          },
          end: {
            line: 210,
            column: 17
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 197,
            column: 20
          },
          end: {
            line: 199,
            column: 30
          }
        }, {
          start: {
            line: 200,
            column: 20
          },
          end: {
            line: 200,
            column: 35
          }
        }, {
          start: {
            line: 201,
            column: 20
          },
          end: {
            line: 203,
            column: 30
          }
        }, {
          start: {
            line: 204,
            column: 20
          },
          end: {
            line: 204,
            column: 36
          }
        }, {
          start: {
            line: 205,
            column: 20
          },
          end: {
            line: 207,
            column: 30
          }
        }, {
          start: {
            line: 208,
            column: 20
          },
          end: {
            line: 209,
            column: 49
          }
        }],
        line: 196
      },
      "17": {
        loc: {
          start: {
            line: 212,
            column: 16
          },
          end: {
            line: 218,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 16
          },
          end: {
            line: 218,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "18": {
        loc: {
          start: {
            line: 239,
            column: 32
          },
          end: {
            line: 239,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 239,
            column: 32
          },
          end: {
            line: 239,
            column: 38
          }
        }, {
          start: {
            line: 239,
            column: 42
          },
          end: {
            line: 239,
            column: 51
          }
        }],
        line: 239
      },
      "19": {
        loc: {
          start: {
            line: 252,
            column: 19
          },
          end: {
            line: 252,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 252,
            column: 19
          },
          end: {
            line: 252,
            column: 32
          }
        }, {
          start: {
            line: 252,
            column: 36
          },
          end: {
            line: 252,
            column: 64
          }
        }],
        line: 252
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0, 0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\payments\\status\\[id]\\route.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - PAYMENT STATUS API\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/auth';\r\nimport { getPaymentInfo } from '@/lib/integrations/mercadopago';\r\nimport { getSupabaseClient } from '@/lib/integrations/supabase';\r\nimport { ApiResponse } from '@/types/api';\r\n\r\ninterface RouteParams {\r\n  params: Promise<{\r\n    id: string;\r\n  }>;\r\n}\r\n\r\nexport async function GET(request: NextRequest, context: RouteParams) {\r\n  const params = await context.params;\r\n  try {\r\n    // Autenticaci\xF3n con Clerk\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'Usuario no autenticado',\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 401 });\r\n    }\r\n    const orderId = params.id;\r\n\r\n    // Inicializar Supabase con cliente administrativo\r\n    const supabase = getSupabaseClient(true);\r\n\r\n    // Verificar que el cliente est\xE9 disponible\r\n    if (!supabase) {\r\n      console.error('Cliente de Supabase no disponible en GET /api/payments/status/[id]');\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'Servicio de base de datos no disponible',\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 503 });\r\n    }\r\n\r\n    // Obtener la orden y verificar que pertenece al usuario\r\n    const { data: order, error: orderError } = await supabase\r\n      .from('orders')\r\n      .select(`\r\n        *,\r\n        order_items (\r\n          id,\r\n          quantity,\r\n          price,\r\n          product:products (\r\n            id,\r\n            name,\r\n            images\r\n          )\r\n        )\r\n      `)\r\n      .eq('id', orderId)\r\n      .eq('user_id', userId)\r\n      .single();\r\n\r\n    if (orderError || !order) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'Orden no encontrada',\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 404 });\r\n    }\r\n\r\n    let paymentInfo = null;\r\n    let mercadoPagoStatus = null;\r\n\r\n    // Si hay un payment_id, obtener informaci\xF3n de MercadoPago\r\n    if (order.payment_id) {\r\n      const paymentResult = await getPaymentInfo(order.payment_id);\r\n\r\n      if (paymentResult.success && 'data' in paymentResult) {\r\n        paymentInfo = paymentResult.data;\r\n        mercadoPagoStatus = {\r\n          id: paymentInfo.id,\r\n          status: paymentInfo.status,\r\n          status_detail: paymentInfo.status_detail,\r\n          transaction_amount: paymentInfo.transaction_amount,\r\n          currency_id: paymentInfo.currency_id,\r\n          date_created: paymentInfo.date_created,\r\n          date_approved: paymentInfo.date_approved,\r\n          payment_method: {\r\n            id: paymentInfo.payment_method_id,\r\n            type: paymentInfo.payment_type_id,\r\n          },\r\n          installments: paymentInfo.installments,\r\n        };\r\n      }\r\n    }\r\n\r\n    // Preparar respuesta\r\n    const responseData = {\r\n      order: {\r\n        id: order.id,\r\n        status: order.status,\r\n        total: order.total,\r\n        created_at: order.created_at,\r\n        updated_at: order.updated_at,\r\n        external_reference: order.external_reference,\r\n        items: order.order_items?.map((item: any) => ({\r\n          id: item.id,\r\n          quantity: item.quantity,\r\n          price: item.price,\r\n          product: {\r\n            id: item.product.id,\r\n            name: item.product.name,\r\n            image: item.product.images?.previews?.[0] || null,\r\n          },\r\n        })) || [],\r\n      },\r\n      payment: mercadoPagoStatus,\r\n    };\r\n\r\n    const successResponse: ApiResponse<typeof responseData> = {\r\n      data: responseData,\r\n      success: true,\r\n      message: 'Estado de pago obtenido exitosamente',\r\n    };\r\n\r\n    return NextResponse.json(successResponse, { status: 200 });\r\n\r\n  } catch (error: any) {\r\n    console.error('Error getting payment status:', error);\r\n    \r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: error.message || 'Error interno del servidor',\r\n    };\r\n    \r\n    return NextResponse.json(errorResponse, { status: 500 });\r\n  }\r\n}\r\n\r\n// Endpoint para verificar estado desde el frontend despu\xE9s de redirecci\xF3n\r\nexport async function POST(request: NextRequest, context: RouteParams) {\r\n  const params = await context.params;\r\n  try {\r\n    // TODO: Reactivar cuando Clerk funcione\r\n    // const { userId } = auth();\r\n    // if (!session?.user) {\r\n    //   const errorResponse: ApiResponse<null> = {\r\n    //     data: null,\r\n    //     success: false,\r\n    //     error: 'Usuario no autenticado',\r\n    //   };\r\n    //   return NextResponse.json(errorResponse, { status: 401 });\r\n    // }\r\n\r\n    // Usar usuario temporal por ahora\r\n    const userId = '00000000-0000-4000-8000-000000000000';\r\n    const orderId = params.id;\r\n    const body = await request.json();\r\n    const { payment_id, status, merchant_order_id } = body;\r\n\r\n    // Inicializar Supabase con cliente administrativo\r\n    const supabase = getSupabaseClient(true);\r\n\r\n    // Verificar que el cliente est\xE9 disponible\r\n    if (!supabase) {\r\n      console.error('Cliente de Supabase no disponible en POST /api/payments/status/[id]');\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'Servicio de base de datos no disponible',\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 503 });\r\n    }\r\n\r\n    // Verificar que la orden pertenece al usuario\r\n    const { data: order, error: orderError } = await supabase\r\n      .from('orders')\r\n      .select('*')\r\n      .eq('id', orderId)\r\n      .eq('user_id', userId)\r\n      .single();\r\n\r\n    if (orderError || !order) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'Orden no encontrada',\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 404 });\r\n    }\r\n\r\n    // Si se proporciona payment_id, obtener informaci\xF3n actualizada\r\n    if (payment_id) {\r\n      const paymentResult = await getPaymentInfo(payment_id);\r\n\r\n      if (paymentResult.success && 'data' in paymentResult) {\r\n        const payment = paymentResult.data;\r\n        \r\n        // Mapear estado de MercadoPago\r\n        let newStatus: string;\r\n        switch (payment.status) {\r\n          case 'approved':\r\n            newStatus = 'paid';\r\n            break;\r\n          case 'pending':\r\n          case 'in_process':\r\n            newStatus = 'pending';\r\n            break;\r\n          case 'rejected':\r\n          case 'cancelled':\r\n            newStatus = 'cancelled';\r\n            break;\r\n          default:\r\n            newStatus = order.status; // Mantener estado actual\r\n        }\r\n\r\n        // Actualizar orden si el estado cambi\xF3\r\n        if (newStatus !== order.status) {\r\n          await supabase\r\n            .from('orders')\r\n            .update({\r\n              status: newStatus,\r\n              payment_id: payment_id,\r\n              updated_at: new Date().toISOString(),\r\n            })\r\n            .eq('id', orderId);\r\n        }\r\n\r\n        const successResponse: ApiResponse<any> = {\r\n          data: {\r\n            order_id: orderId,\r\n            status: newStatus,\r\n            payment_status: payment.status,\r\n            amount: payment.transaction_amount,\r\n          },\r\n          success: true,\r\n          message: 'Estado actualizado exitosamente',\r\n        };\r\n\r\n        return NextResponse.json(successResponse, { status: 200 });\r\n      }\r\n    }\r\n\r\n    // Si no hay payment_id o fall\xF3 la consulta, retornar estado actual\r\n    const successResponse: ApiResponse<any> = {\r\n      data: {\r\n        order_id: orderId,\r\n        status: order.status,\r\n        payment_status: status || 'unknown',\r\n      },\r\n      success: true,\r\n      message: 'Estado actual de la orden',\r\n    };\r\n\r\n    return NextResponse.json(successResponse, { status: 200 });\r\n\r\n  } catch (error: any) {\r\n    console.error('Error updating payment status:', error);\r\n    \r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: error.message || 'Error interno del servidor',\r\n    };\r\n    \r\n    return NextResponse.json(errorResponse, { status: 500 });\r\n  }\r\n}\r\n"],
      names: ["GET", "POST", "request", "context", "params", "session", "auth", "user", "errorResponse", "data", "success", "error", "NextResponse", "json", "status", "orderId", "id", "supabase", "getSupabaseClient", "console", "order", "orderError", "from", "select", "eq", "userId", "single", "paymentInfo", "mercadoPagoStatus", "payment_id", "paymentResult", "getPaymentInfo", "status_detail", "transaction_amount", "currency_id", "date_created", "date_approved", "payment_method", "payment_method_id", "type", "payment_type_id", "installments", "responseData", "total", "created_at", "updated_at", "external_reference", "items", "order_items", "map", "item", "quantity", "price", "product", "name", "image", "images", "previews", "payment", "successResponse", "message", "body", "merchant_order_id", "newStatus", "update", "Date", "toISOString", "order_id", "payment_status", "amount"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a882fd7c989b028f6cfa52d41b05037bf52181f1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_sfs7leawp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_sfs7leawp();
cov_sfs7leawp().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_sfs7leawp().f[0]++;
  cov_sfs7leawp().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_sfs7leawp().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_sfs7leawp().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_sfs7leawp().f[1]++;
    cov_sfs7leawp().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_sfs7leawp().f[2]++;
    cov_sfs7leawp().s[5]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_sfs7leawp().s[6]++, require("next/server"));
const _auth =
/* istanbul ignore next */
(cov_sfs7leawp().s[7]++, require("../../../../../auth"));
const _mercadopago =
/* istanbul ignore next */
(cov_sfs7leawp().s[8]++, require("../../../../../lib/integrations/mercadopago"));
const _supabase =
/* istanbul ignore next */
(cov_sfs7leawp().s[9]++, require("../../../../../lib/integrations/supabase"));
async function GET(request, context) {
  /* istanbul ignore next */
  cov_sfs7leawp().f[3]++;
  const params =
  /* istanbul ignore next */
  (cov_sfs7leawp().s[10]++, await context.params);
  /* istanbul ignore next */
  cov_sfs7leawp().s[11]++;
  try {
    // Autenticación con Clerk
    const session =
    /* istanbul ignore next */
    (cov_sfs7leawp().s[12]++, await (0, _auth.auth)());
    /* istanbul ignore next */
    cov_sfs7leawp().s[13]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_sfs7leawp().b[0][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_sfs7leawp().s[14]++, {
        data: null,
        success: false,
        error: 'Usuario no autenticado'
      });
      /* istanbul ignore next */
      cov_sfs7leawp().s[15]++;
      return _server.NextResponse.json(errorResponse, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_sfs7leawp().b[0][1]++;
    }
    const orderId =
    /* istanbul ignore next */
    (cov_sfs7leawp().s[16]++, params.id);
    // Inicializar Supabase con cliente administrativo
    const supabase =
    /* istanbul ignore next */
    (cov_sfs7leawp().s[17]++, (0, _supabase.getSupabaseClient)(true));
    // Verificar que el cliente esté disponible
    /* istanbul ignore next */
    cov_sfs7leawp().s[18]++;
    if (!supabase) {
      /* istanbul ignore next */
      cov_sfs7leawp().b[1][0]++;
      cov_sfs7leawp().s[19]++;
      console.error('Cliente de Supabase no disponible en GET /api/payments/status/[id]');
      const errorResponse =
      /* istanbul ignore next */
      (cov_sfs7leawp().s[20]++, {
        data: null,
        success: false,
        error: 'Servicio de base de datos no disponible'
      });
      /* istanbul ignore next */
      cov_sfs7leawp().s[21]++;
      return _server.NextResponse.json(errorResponse, {
        status: 503
      });
    } else
    /* istanbul ignore next */
    {
      cov_sfs7leawp().b[1][1]++;
    }
    // Obtener la orden y verificar que pertenece al usuario
    const {
      data: order,
      error: orderError
    } =
    /* istanbul ignore next */
    (cov_sfs7leawp().s[22]++, await supabase.from('orders').select(`
        *,
        order_items (
          id,
          quantity,
          price,
          product:products (
            id,
            name,
            images
          )
        )
      `).eq('id', orderId).eq('user_id', userId).single());
    /* istanbul ignore next */
    cov_sfs7leawp().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_sfs7leawp().b[3][0]++, orderError) ||
    /* istanbul ignore next */
    (cov_sfs7leawp().b[3][1]++, !order)) {
      /* istanbul ignore next */
      cov_sfs7leawp().b[2][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_sfs7leawp().s[24]++, {
        data: null,
        success: false,
        error: 'Orden no encontrada'
      });
      /* istanbul ignore next */
      cov_sfs7leawp().s[25]++;
      return _server.NextResponse.json(errorResponse, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_sfs7leawp().b[2][1]++;
    }
    let paymentInfo =
    /* istanbul ignore next */
    (cov_sfs7leawp().s[26]++, null);
    let mercadoPagoStatus =
    /* istanbul ignore next */
    (cov_sfs7leawp().s[27]++, null);
    // Si hay un payment_id, obtener información de MercadoPago
    /* istanbul ignore next */
    cov_sfs7leawp().s[28]++;
    if (order.payment_id) {
      /* istanbul ignore next */
      cov_sfs7leawp().b[4][0]++;
      const paymentResult =
      /* istanbul ignore next */
      (cov_sfs7leawp().s[29]++, await (0, _mercadopago.getPaymentInfo)(order.payment_id));
      /* istanbul ignore next */
      cov_sfs7leawp().s[30]++;
      if (
      /* istanbul ignore next */
      (cov_sfs7leawp().b[6][0]++, paymentResult.success) &&
      /* istanbul ignore next */
      (cov_sfs7leawp().b[6][1]++, 'data' in paymentResult)) {
        /* istanbul ignore next */
        cov_sfs7leawp().b[5][0]++;
        cov_sfs7leawp().s[31]++;
        paymentInfo = paymentResult.data;
        /* istanbul ignore next */
        cov_sfs7leawp().s[32]++;
        mercadoPagoStatus = {
          id: paymentInfo.id,
          status: paymentInfo.status,
          status_detail: paymentInfo.status_detail,
          transaction_amount: paymentInfo.transaction_amount,
          currency_id: paymentInfo.currency_id,
          date_created: paymentInfo.date_created,
          date_approved: paymentInfo.date_approved,
          payment_method: {
            id: paymentInfo.payment_method_id,
            type: paymentInfo.payment_type_id
          },
          installments: paymentInfo.installments
        };
      } else
      /* istanbul ignore next */
      {
        cov_sfs7leawp().b[5][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_sfs7leawp().b[4][1]++;
    }
    // Preparar respuesta
    const responseData =
    /* istanbul ignore next */
    (cov_sfs7leawp().s[33]++, {
      order: {
        id: order.id,
        status: order.status,
        total: order.total,
        created_at: order.created_at,
        updated_at: order.updated_at,
        external_reference: order.external_reference,
        items:
        /* istanbul ignore next */
        (cov_sfs7leawp().b[7][0]++, order.order_items?.map(item => {
          /* istanbul ignore next */
          cov_sfs7leawp().f[4]++;
          cov_sfs7leawp().s[34]++;
          return {
            id: item.id,
            quantity: item.quantity,
            price: item.price,
            product: {
              id: item.product.id,
              name: item.product.name,
              image:
              /* istanbul ignore next */
              (cov_sfs7leawp().b[8][0]++, item.product.images?.previews?.[0]) ||
              /* istanbul ignore next */
              (cov_sfs7leawp().b[8][1]++, null)
            }
          };
        })) ||
        /* istanbul ignore next */
        (cov_sfs7leawp().b[7][1]++, [])
      },
      payment: mercadoPagoStatus
    });
    const successResponse =
    /* istanbul ignore next */
    (cov_sfs7leawp().s[35]++, {
      data: responseData,
      success: true,
      message: 'Estado de pago obtenido exitosamente'
    });
    /* istanbul ignore next */
    cov_sfs7leawp().s[36]++;
    return _server.NextResponse.json(successResponse, {
      status: 200
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_sfs7leawp().s[37]++;
    console.error('Error getting payment status:', error);
    const errorResponse =
    /* istanbul ignore next */
    (cov_sfs7leawp().s[38]++, {
      data: null,
      success: false,
      error:
      /* istanbul ignore next */
      (cov_sfs7leawp().b[9][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_sfs7leawp().b[9][1]++, 'Error interno del servidor')
    });
    /* istanbul ignore next */
    cov_sfs7leawp().s[39]++;
    return _server.NextResponse.json(errorResponse, {
      status: 500
    });
  }
}
async function POST(request, context) {
  /* istanbul ignore next */
  cov_sfs7leawp().f[5]++;
  const params =
  /* istanbul ignore next */
  (cov_sfs7leawp().s[40]++, await context.params);
  /* istanbul ignore next */
  cov_sfs7leawp().s[41]++;
  try {
    // TODO: Reactivar cuando Clerk funcione
    // const { userId } = auth();
    // if (!session?.user) {
    //   const errorResponse: ApiResponse<null> = {
    //     data: null,
    //     success: false,
    //     error: 'Usuario no autenticado',
    //   };
    //   return NextResponse.json(errorResponse, { status: 401 });
    // }
    // Usar usuario temporal por ahora
    const userId1 =
    /* istanbul ignore next */
    (cov_sfs7leawp().s[42]++, '00000000-0000-4000-8000-000000000000');
    const orderId =
    /* istanbul ignore next */
    (cov_sfs7leawp().s[43]++, params.id);
    const body =
    /* istanbul ignore next */
    (cov_sfs7leawp().s[44]++, await request.json());
    const {
      payment_id,
      status,
      merchant_order_id
    } =
    /* istanbul ignore next */
    (cov_sfs7leawp().s[45]++, body);
    // Inicializar Supabase con cliente administrativo
    const supabase =
    /* istanbul ignore next */
    (cov_sfs7leawp().s[46]++, (0, _supabase.getSupabaseClient)(true));
    // Verificar que el cliente esté disponible
    /* istanbul ignore next */
    cov_sfs7leawp().s[47]++;
    if (!supabase) {
      /* istanbul ignore next */
      cov_sfs7leawp().b[10][0]++;
      cov_sfs7leawp().s[48]++;
      console.error('Cliente de Supabase no disponible en POST /api/payments/status/[id]');
      const errorResponse =
      /* istanbul ignore next */
      (cov_sfs7leawp().s[49]++, {
        data: null,
        success: false,
        error: 'Servicio de base de datos no disponible'
      });
      /* istanbul ignore next */
      cov_sfs7leawp().s[50]++;
      return _server.NextResponse.json(errorResponse, {
        status: 503
      });
    } else
    /* istanbul ignore next */
    {
      cov_sfs7leawp().b[10][1]++;
    }
    // Verificar que la orden pertenece al usuario
    const {
      data: order,
      error: orderError
    } =
    /* istanbul ignore next */
    (cov_sfs7leawp().s[51]++, await supabase.from('orders').select('*').eq('id', orderId).eq('user_id', userId1).single());
    /* istanbul ignore next */
    cov_sfs7leawp().s[52]++;
    if (
    /* istanbul ignore next */
    (cov_sfs7leawp().b[12][0]++, orderError) ||
    /* istanbul ignore next */
    (cov_sfs7leawp().b[12][1]++, !order)) {
      /* istanbul ignore next */
      cov_sfs7leawp().b[11][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_sfs7leawp().s[53]++, {
        data: null,
        success: false,
        error: 'Orden no encontrada'
      });
      /* istanbul ignore next */
      cov_sfs7leawp().s[54]++;
      return _server.NextResponse.json(errorResponse, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_sfs7leawp().b[11][1]++;
    }
    // Si se proporciona payment_id, obtener información actualizada
    cov_sfs7leawp().s[55]++;
    if (payment_id) {
      /* istanbul ignore next */
      cov_sfs7leawp().b[13][0]++;
      const paymentResult =
      /* istanbul ignore next */
      (cov_sfs7leawp().s[56]++, await (0, _mercadopago.getPaymentInfo)(payment_id));
      /* istanbul ignore next */
      cov_sfs7leawp().s[57]++;
      if (
      /* istanbul ignore next */
      (cov_sfs7leawp().b[15][0]++, paymentResult.success) &&
      /* istanbul ignore next */
      (cov_sfs7leawp().b[15][1]++, 'data' in paymentResult)) {
        /* istanbul ignore next */
        cov_sfs7leawp().b[14][0]++;
        const payment =
        /* istanbul ignore next */
        (cov_sfs7leawp().s[58]++, paymentResult.data);
        // Mapear estado de MercadoPago
        let newStatus;
        /* istanbul ignore next */
        cov_sfs7leawp().s[59]++;
        switch (payment.status) {
          case 'approved':
            /* istanbul ignore next */
            cov_sfs7leawp().b[16][0]++;
            cov_sfs7leawp().s[60]++;
            newStatus = 'paid';
            /* istanbul ignore next */
            cov_sfs7leawp().s[61]++;
            break;
          case 'pending':
            /* istanbul ignore next */
            cov_sfs7leawp().b[16][1]++;
          case 'in_process':
            /* istanbul ignore next */
            cov_sfs7leawp().b[16][2]++;
            cov_sfs7leawp().s[62]++;
            newStatus = 'pending';
            /* istanbul ignore next */
            cov_sfs7leawp().s[63]++;
            break;
          case 'rejected':
            /* istanbul ignore next */
            cov_sfs7leawp().b[16][3]++;
          case 'cancelled':
            /* istanbul ignore next */
            cov_sfs7leawp().b[16][4]++;
            cov_sfs7leawp().s[64]++;
            newStatus = 'cancelled';
            /* istanbul ignore next */
            cov_sfs7leawp().s[65]++;
            break;
          default:
            /* istanbul ignore next */
            cov_sfs7leawp().b[16][5]++;
            cov_sfs7leawp().s[66]++;
            newStatus = order.status;
          // Mantener estado actual
        }
        // Actualizar orden si el estado cambió
        /* istanbul ignore next */
        cov_sfs7leawp().s[67]++;
        if (newStatus !== order.status) {
          /* istanbul ignore next */
          cov_sfs7leawp().b[17][0]++;
          cov_sfs7leawp().s[68]++;
          await supabase.from('orders').update({
            status: newStatus,
            payment_id: payment_id,
            updated_at: new Date().toISOString()
          }).eq('id', orderId);
        } else
        /* istanbul ignore next */
        {
          cov_sfs7leawp().b[17][1]++;
        }
        const successResponse =
        /* istanbul ignore next */
        (cov_sfs7leawp().s[69]++, {
          data: {
            order_id: orderId,
            status: newStatus,
            payment_status: payment.status,
            amount: payment.transaction_amount
          },
          success: true,
          message: 'Estado actualizado exitosamente'
        });
        /* istanbul ignore next */
        cov_sfs7leawp().s[70]++;
        return _server.NextResponse.json(successResponse, {
          status: 200
        });
      } else
      /* istanbul ignore next */
      {
        cov_sfs7leawp().b[14][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_sfs7leawp().b[13][1]++;
    }
    // Si no hay payment_id o falló la consulta, retornar estado actual
    const successResponse =
    /* istanbul ignore next */
    (cov_sfs7leawp().s[71]++, {
      data: {
        order_id: orderId,
        status: order.status,
        payment_status:
        /* istanbul ignore next */
        (cov_sfs7leawp().b[18][0]++, status) ||
        /* istanbul ignore next */
        (cov_sfs7leawp().b[18][1]++, 'unknown')
      },
      success: true,
      message: 'Estado actual de la orden'
    });
    /* istanbul ignore next */
    cov_sfs7leawp().s[72]++;
    return _server.NextResponse.json(successResponse, {
      status: 200
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_sfs7leawp().s[73]++;
    console.error('Error updating payment status:', error);
    const errorResponse =
    /* istanbul ignore next */
    (cov_sfs7leawp().s[74]++, {
      data: null,
      success: false,
      error:
      /* istanbul ignore next */
      (cov_sfs7leawp().b[19][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_sfs7leawp().b[19][1]++, 'Error interno del servidor')
    });
    /* istanbul ignore next */
    cov_sfs7leawp().s[75]++;
    return _server.NextResponse.json(errorResponse, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,