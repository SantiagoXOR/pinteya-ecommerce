e9aab07e8fac70d47de08e13cde90980
// ===================================
// PINTEYA E-COMMERCE - ORDERS STATE HOOK
// Hook especializado para manejo de estado de Ã³rdenes
// ===================================
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useOrdersState", {
    enumerable: true,
    get: function() {
        return useOrdersState;
    }
});
const _react = require("react");
// ===================================
// ESTADO POR DEFECTO
// ===================================
const DEFAULT_FILTERS = {
    page: 1,
    limit: 20,
    sort_by: 'created_at',
    sort_order: 'desc',
    status: 'all',
    payment_status: 'all',
    fulfillment_status: 'all'
};
const DEFAULT_STATE = {
    orders: [],
    pagination: null,
    analytics: null,
    isLoading: false,
    error: null,
    lastUpdated: null
};
function useOrdersState(initialFilters = {}) {
    // Estado principal
    const [state, setState] = (0, _react.useState)({
        ...DEFAULT_STATE,
        filters: {
            ...DEFAULT_FILTERS,
            ...initialFilters
        }
    });
    // Referencias para comparaciones
    const lastFiltersRef = (0, _react.useRef)(state.filters);
    // ===================================
    // ACCIONES DE ESTADO
    // ===================================
    const updateFilters = (0, _react.useCallback)((newFilters)=>{
        setState((prev)=>{
            const updatedFilters = {
                ...prev.filters,
                ...newFilters
            };
            lastFiltersRef.current = updatedFilters;
            return {
                ...prev,
                filters: updatedFilters,
                // Reset pagination cuando cambian filtros (excepto page)
                ...Object.keys(newFilters).some((key)=>key !== 'page') && {
                    pagination: prev.pagination ? {
                        ...prev.pagination,
                        page: 1
                    } : null
                }
            };
        });
    }, []);
    const setLoading = (0, _react.useCallback)((loading)=>{
        setState((prev)=>({
                ...prev,
                isLoading: loading,
                // Limpiar error cuando empieza nueva carga
                ...loading && {
                    error: null
                }
            }));
    }, []);
    const setError = (0, _react.useCallback)((error)=>{
        setState((prev)=>({
                ...prev,
                error,
                isLoading: false
            }));
    }, []);
    const setOrders = (0, _react.useCallback)((orders)=>{
        setState((prev)=>({
                ...prev,
                orders,
                lastUpdated: new Date(),
                isLoading: false,
                error: null
            }));
    }, []);
    const setPagination = (0, _react.useCallback)((pagination)=>{
        setState((prev)=>({
                ...prev,
                pagination
            }));
    }, []);
    const setAnalytics = (0, _react.useCallback)((analytics)=>{
        setState((prev)=>({
                ...prev,
                analytics
            }));
    }, []);
    const resetState = (0, _react.useCallback)(()=>{
        setState({
            ...DEFAULT_STATE,
            filters: {
                ...DEFAULT_FILTERS
            }
        });
        lastFiltersRef.current = {
            ...DEFAULT_FILTERS
        };
    }, []);
    const updateOrder = (0, _react.useCallback)((orderId, updates)=>{
        setState((prev)=>({
                ...prev,
                orders: prev.orders.map((order)=>order.id === orderId ? {
                        ...order,
                        ...updates
                    } : order),
                lastUpdated: new Date()
            }));
    }, []);
    // ===================================
    // UTILIDADES
    // ===================================
    const getLastFilters = (0, _react.useCallback)(()=>{
        return lastFiltersRef.current;
    }, []);
    const hasFiltersChanged = (0, _react.useCallback)((newFilters)=>{
        const currentFiltersString = JSON.stringify(state.filters);
        const newFiltersString = JSON.stringify(newFilters);
        return currentFiltersString !== newFiltersString;
    }, [
        state.filters
    ]);
    // ===================================
    // RETORNO DEL HOOK
    // ===================================
    return {
        // Estado
        orders: state.orders,
        pagination: state.pagination,
        analytics: state.analytics,
        filters: state.filters,
        isLoading: state.isLoading,
        error: state.error,
        lastUpdated: state.lastUpdated,
        // Acciones
        updateFilters,
        setLoading,
        setError,
        setOrders,
        setPagination,
        setAnalytics,
        resetState,
        updateOrder,
        // Utilidades
        getLastFilters,
        hasFiltersChanged
    };
}

//# sourceMappingURL=data:application/json;base64,