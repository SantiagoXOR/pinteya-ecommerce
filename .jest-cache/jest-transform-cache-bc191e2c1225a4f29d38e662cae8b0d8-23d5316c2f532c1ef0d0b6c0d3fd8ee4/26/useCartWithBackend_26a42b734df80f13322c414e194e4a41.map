{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useCartWithBackend.ts"],"sourcesContent":["// ===================================\n// PINTEYA E-COMMERCE - HOOK DE CARRITO CON BACKEND\n// ===================================\n// Hook optimizado que conecta el carrito frontend con las APIs del backend\n\n'use client'\n\nimport { useCallback, useEffect, useState } from 'react'\nimport { useSession } from 'next-auth/react'\nimport { toast } from 'sonner'\n\n// Tipos para el carrito\ninterface CartProduct {\n  id: number\n  name: string\n  price: number\n  discounted_price?: number\n  images?: any\n  stock: number\n  brand?: string\n  category?: {\n    id: number\n    name: string\n  }\n}\n\ninterface CartItem {\n  id: string\n  user_id: string\n  product_id: number\n  quantity: number\n  created_at: string\n  updated_at: string\n  products: CartProduct\n}\n\ninterface CartState {\n  items: CartItem[]\n  totalItems: number\n  totalAmount: number\n  itemCount: number\n  loading: boolean\n  error: string | null\n}\n\ninterface UseCartWithBackendReturn extends CartState {\n  addItem: (productId: number, quantity?: number) => Promise<boolean>\n  removeItem: (productId: number, quantity?: number) => Promise<boolean>\n  updateQuantity: (productId: number, quantity: number) => Promise<boolean>\n  clearCart: () => Promise<boolean>\n  loadCart: () => Promise<void>\n  getItemQuantity: (productId: number) => number\n  isInCart: (productId: number) => boolean\n  refreshCart: () => Promise<void>\n}\n\n/**\n * Hook para manejar el carrito con integración completa al backend\n */\nexport const useCartWithBackend = (): UseCartWithBackendReturn => {\n  const { data: session, status } = useSession()\n  const [cartState, setCartState] = useState<CartState>({\n    items: [],\n    totalItems: 0,\n    totalAmount: 0,\n    itemCount: 0,\n    loading: false,\n    error: null,\n  })\n\n  // Función para hacer requests a la API\n  const apiRequest = useCallback(async (url: string, options: RequestInit = {}) => {\n    try {\n      const response = await fetch(url, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...options.headers,\n        },\n        ...options,\n      })\n\n      // Verificar si la respuesta tiene contenido antes de parsear JSON\n      const text = await response.text()\n      let data = null\n\n      if (text.trim()) {\n        try {\n          data = JSON.parse(text)\n        } catch (parseError) {\n          console.error(`JSON Parse Error (${url}):`, parseError)\n          console.error('Raw response:', text)\n          throw new Error(`Invalid JSON response: ${parseError.message}`)\n        }\n      }\n\n      if (!response.ok) {\n        // Si es 401 (Unauthorized), es un caso esperado, no un error\n        if (response.status === 401) {\n          return data // Devolver la respuesta tal como está\n        }\n        throw new Error(data?.error || `HTTP ${response.status}: ${response.statusText}`)\n      }\n\n      return data\n    } catch (error: any) {\n      console.error(`API Error (${url}):`, error)\n      throw error\n    }\n  }, [])\n\n  // Cargar carrito desde el backend\n  const loadCart = useCallback(async () => {\n    if (status === 'loading') {\n      return\n    }\n\n    if (!session?.user) {\n      // Usuario no autenticado - carrito vacío\n      setCartState(prev => ({\n        ...prev,\n        items: [],\n        totalItems: 0,\n        totalAmount: 0,\n        itemCount: 0,\n        loading: false,\n        error: null,\n      }))\n      return\n    }\n\n    setCartState(prev => ({ ...prev, loading: true, error: null }))\n\n    try {\n      const data = await apiRequest('/api/cart')\n\n      // Si la respuesta indica que no hay autenticación, manejar como carrito vacío\n      if (!data.success && data.error === 'Usuario no autenticado') {\n        setCartState(prev => ({\n          ...prev,\n          items: [],\n          totalItems: 0,\n          totalAmount: 0,\n          itemCount: 0,\n          loading: false,\n          error: null,\n        }))\n        return\n      }\n\n      setCartState(prev => ({\n        ...prev,\n        items: data.items || [],\n        totalItems: data.totalItems || 0,\n        totalAmount: data.totalAmount || 0,\n        itemCount: data.itemCount || 0,\n        loading: false,\n        error: null,\n      }))\n\n      console.log('✅ Carrito cargado:', data.itemCount, 'productos únicos')\n    } catch (error: any) {\n      console.error('❌ Error cargando carrito:', error)\n      setCartState(prev => ({\n        ...prev,\n        loading: false,\n        error: error.message || 'Error cargando carrito',\n      }))\n    }\n  }, [session, status, apiRequest])\n\n  // Agregar item al carrito\n  const addItem = useCallback(\n    async (productId: number, quantity: number = 1): Promise<boolean> => {\n      if (!session?.user) {\n        toast.error('Debes iniciar sesión para agregar productos al carrito')\n        return false\n      }\n\n      setCartState(prev => ({ ...prev, loading: true, error: null }))\n\n      try {\n        const data = await apiRequest('/api/cart/add', {\n          method: 'POST',\n          body: JSON.stringify({ productId, quantity }),\n        })\n\n        if (data.success) {\n          // Recargar carrito para obtener estado actualizado\n          await loadCart()\n\n          toast.success(data.message || 'Producto agregado al carrito')\n          console.log('✅ Producto agregado:', data.item?.productName)\n          return true\n        } else {\n          throw new Error(data.error || 'Error agregando producto')\n        }\n      } catch (error: any) {\n        console.error('❌ Error agregando al carrito:', error)\n        setCartState(prev => ({ ...prev, loading: false, error: error.message }))\n\n        if (error.message.includes('Stock insuficiente')) {\n          toast.error(error.message)\n        } else if (error.message.includes('autenticado')) {\n          toast.error('Debes iniciar sesión para agregar productos')\n        } else {\n          toast.error('Error agregando producto al carrito')\n        }\n\n        return false\n      }\n    },\n    [session, apiRequest, loadCart]\n  )\n\n  // Remover item del carrito\n  const removeItem = useCallback(\n    async (productId: number, quantity?: number): Promise<boolean> => {\n      if (!session?.user) {\n        toast.error('Debes iniciar sesión')\n        return false\n      }\n\n      setCartState(prev => ({ ...prev, loading: true, error: null }))\n\n      try {\n        const data = await apiRequest('/api/cart/remove', {\n          method: 'DELETE',\n          body: JSON.stringify({ productId, quantity }),\n        })\n\n        if (data.success) {\n          await loadCart()\n          toast.success(data.message || 'Producto removido del carrito')\n          console.log('✅ Producto removido:', data.item?.productName)\n          return true\n        } else {\n          throw new Error(data.error || 'Error removiendo producto')\n        }\n      } catch (error: any) {\n        console.error('❌ Error removiendo del carrito:', error)\n        setCartState(prev => ({ ...prev, loading: false, error: error.message }))\n        toast.error('Error removiendo producto del carrito')\n        return false\n      }\n    },\n    [session, apiRequest, loadCart]\n  )\n\n  // Actualizar cantidad de un item\n  const updateQuantity = useCallback(\n    async (productId: number, quantity: number): Promise<boolean> => {\n      if (!session?.user) {\n        toast.error('Debes iniciar sesión')\n        return false\n      }\n\n      setCartState(prev => ({ ...prev, loading: true, error: null }))\n\n      try {\n        const data = await apiRequest('/api/cart/update', {\n          method: 'PUT',\n          body: JSON.stringify({ productId, quantity }),\n        })\n\n        if (data.success) {\n          await loadCart()\n          toast.success(data.message || 'Cantidad actualizada')\n          console.log('✅ Cantidad actualizada:', data.item?.productName)\n          return true\n        } else {\n          throw new Error(data.error || 'Error actualizando cantidad')\n        }\n      } catch (error: any) {\n        console.error('❌ Error actualizando cantidad:', error)\n        setCartState(prev => ({ ...prev, loading: false, error: error.message }))\n        toast.error('Error actualizando cantidad')\n        return false\n      }\n    },\n    [session, apiRequest, loadCart]\n  )\n\n  // Limpiar carrito completo\n  const clearCart = useCallback(async (): Promise<boolean> => {\n    if (!session?.user) {\n      toast.error('Debes iniciar sesión')\n      return false\n    }\n\n    setCartState(prev => ({ ...prev, loading: true, error: null }))\n\n    try {\n      const data = await apiRequest('/api/cart', {\n        method: 'DELETE',\n      })\n\n      if (data.success) {\n        await loadCart()\n        toast.success('Carrito limpiado')\n        console.log('✅ Carrito limpiado')\n        return true\n      } else {\n        throw new Error(data.error || 'Error limpiando carrito')\n      }\n    } catch (error: any) {\n      console.error('❌ Error limpiando carrito:', error)\n      setCartState(prev => ({ ...prev, loading: false, error: error.message }))\n      toast.error('Error limpiando carrito')\n      return false\n    }\n  }, [session, apiRequest, loadCart])\n\n  // Obtener cantidad de un producto específico en el carrito\n  const getItemQuantity = useCallback(\n    (productId: number): number => {\n      const item = cartState.items.find(item => item.product_id === productId)\n      return item?.quantity || 0\n    },\n    [cartState.items]\n  )\n\n  // Verificar si un producto está en el carrito\n  const isInCart = useCallback(\n    (productId: number): boolean => {\n      return cartState.items.some(item => item.product_id === productId)\n    },\n    [cartState.items]\n  )\n\n  // Refrescar carrito (alias para loadCart)\n  const refreshCart = useCallback(async () => {\n    await loadCart()\n  }, [loadCart])\n\n  // Cargar carrito al montar el componente o cuando cambie la sesión\n  useEffect(() => {\n    loadCart()\n  }, [loadCart])\n\n  return {\n    ...cartState,\n    addItem,\n    removeItem,\n    updateQuantity,\n    clearCart,\n    loadCart,\n    getItemQuantity,\n    isInCart,\n    refreshCart,\n  }\n}\n\nexport default useCartWithBackend\n"],"names":["useCartWithBackend","data","session","status","useSession","cartState","setCartState","useState","items","totalItems","totalAmount","itemCount","loading","error","apiRequest","useCallback","url","options","response","fetch","headers","text","trim","JSON","parse","parseError","console","Error","message","ok","statusText","loadCart","user","prev","success","log","addItem","productId","quantity","toast","method","body","stringify","item","productName","includes","removeItem","updateQuantity","clearCart","getItemQuantity","find","product_id","isInCart","some","refreshCart","useEffect"],"mappings":"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"}