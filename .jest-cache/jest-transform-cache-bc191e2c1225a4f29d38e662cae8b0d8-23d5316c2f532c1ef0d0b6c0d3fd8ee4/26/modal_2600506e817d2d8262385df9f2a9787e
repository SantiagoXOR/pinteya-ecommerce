0ecd8b9d0b1a3e1d07dff6122d6b6cbf
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get AddToCartModal () {
        return AddToCartModal;
    },
    get ConfirmModal () {
        return ConfirmModal;
    },
    get Modal () {
        return Modal;
    },
    get QuickViewModal () {
        return QuickViewModal;
    },
    get useModal () {
        return useModal;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _lucidereact = require("lucide-react");
const _utils = require("../../lib/utils");
const _reactvisuallyhidden = /*#__PURE__*/ _interop_require_wildcard(require("@radix-ui/react-visually-hidden"));
const _dialog = require("./dialog");
const _alertdialog = require("./alert-dialog");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function Modal({ children, trigger, title, description, size = "md", variant = "default", showCloseButton = true, open, onOpenChange, className }) {
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dialog.Dialog, {
        open: open,
        onOpenChange: onOpenChange,
        children: [
            trigger && /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.DialogTrigger, {
                asChild: true,
                children: trigger
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dialog.DialogContent, {
                size: size,
                variant: variant,
                showCloseButton: showCloseButton,
                className: className,
                children: [
                    (title || description) && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dialog.DialogHeader, {
                        children: [
                            title && /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.DialogTitle, {
                                children: title
                            }),
                            description && /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.DialogDescription, {
                                children: description
                            })
                        ]
                    }),
                    children
                ]
            })
        ]
    });
}
const confirmModalIcons = {
    default: _lucidereact.Info,
    destructive: _lucidereact.AlertTriangle,
    warning: _lucidereact.AlertTriangle,
    success: _lucidereact.CheckCircle,
    info: _lucidereact.Info
};
function ConfirmModal({ children, trigger, title, description, confirmText = "Confirmar", cancelText = "Cancelar", variant = "default", onConfirm, onCancel, open, onOpenChange, loading = false }) {
    const Icon = confirmModalIcons[variant];
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_alertdialog.AlertDialog, {
        open: open,
        onOpenChange: onOpenChange,
        children: [
            trigger && /*#__PURE__*/ (0, _jsxruntime.jsx)(_alertdialog.AlertDialogTrigger, {
                asChild: true,
                children: trigger
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_alertdialog.AlertDialogContent, {
                variant: variant,
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_alertdialog.AlertDialogHeader, {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center gap-3",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: (0, _utils.cn)("flex h-10 w-10 items-center justify-center rounded-full", {
                                            "bg-blue-100 text-blue-600": variant === "default" || variant === "info",
                                            "bg-red-100 text-red-600": variant === "destructive",
                                            "bg-yellow-100 text-yellow-600": variant === "warning",
                                            "bg-green-100 text-green-600": variant === "success"
                                        }),
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(Icon, {
                                            className: "h-5 w-5"
                                        })
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_alertdialog.AlertDialogTitle, {
                                        children: title
                                    })
                                ]
                            }),
                            description && /*#__PURE__*/ (0, _jsxruntime.jsx)(_alertdialog.AlertDialogDescription, {
                                className: "mt-2",
                                children: description
                            })
                        ]
                    }),
                    children,
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_alertdialog.AlertDialogFooter, {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_alertdialog.AlertDialogCancel, {
                                onClick: onCancel,
                                disabled: loading,
                                children: cancelText
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_alertdialog.AlertDialogAction, {
                                onClick: onConfirm,
                                disabled: loading,
                                className: (0, _utils.cn)({
                                    "bg-red-600 hover:bg-red-700": variant === "destructive",
                                    "bg-yellow-600 hover:bg-yellow-700": variant === "warning",
                                    "bg-green-600 hover:bg-green-700": variant === "success"
                                }),
                                children: loading ? /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center gap-2",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "h-4 w-4 animate-spin rounded-full border-2 border-white border-t-transparent"
                                        }),
                                        "Procesando..."
                                    ]
                                }) : confirmText
                            })
                        ]
                    })
                ]
            })
        ]
    });
}
function QuickViewModal({ children, trigger, open, onOpenChange }) {
    // Debug: Verificar que onOpenChange se propaga correctamente
    console.log('QuickViewModal - onOpenChange recibido:', typeof onOpenChange, onOpenChange);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dialog.Dialog, {
        open: open,
        onOpenChange: onOpenChange,
        children: [
            trigger && /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.DialogTrigger, {
                asChild: true,
                children: trigger
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dialog.DialogContent, {
                size: "4xl",
                variant: "elevated",
                showCloseButton: true,
                className: "max-h-[90vh] overflow-y-auto",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.DialogHeader, {
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactvisuallyhidden.Root, {
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.DialogTitle, {
                                children: "Vista r\xe1pida del producto"
                            })
                        })
                    }),
                    children
                ]
            })
        ]
    });
}
function AddToCartModal({ children, trigger, productName, productImage, open, onOpenChange, onContinueShopping, onGoToCart }) {
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(Modal, {
        trigger: trigger,
        size: "md",
        variant: "elevated",
        open: open,
        onOpenChange: onOpenChange,
        title: "\xa1Producto agregado al carrito!",
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: "flex flex-col items-center gap-4 py-4",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "flex h-16 w-16 items-center justify-center rounded-full bg-green-100",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.CheckCircle, {
                        className: "h-8 w-8 text-green-600"
                    })
                }),
                productImage && /*#__PURE__*/ (0, _jsxruntime.jsx)("img", {
                    src: productImage,
                    alt: productName,
                    className: "h-20 w-20 rounded-lg object-cover"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                    className: "text-center text-gray-600",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                            className: "font-medium",
                            children: productName
                        }),
                        " se agreg\xf3 correctamente a tu carrito"
                    ]
                }),
                children,
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex w-full gap-3",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                            onClick: onContinueShopping,
                            className: "flex-1 rounded-button border border-gray-200 bg-white px-4 py-2 text-sm font-medium text-gray-900 transition-colors hover:bg-gray-50",
                            children: "Seguir comprando"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                            onClick: onGoToCart,
                            className: "flex-1 rounded-button bg-primary px-4 py-2 text-sm font-medium text-white transition-colors hover:bg-primary-hover",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.ShoppingCart, {
                                    className: "mr-2 h-4 w-4"
                                }),
                                "Ver carrito"
                            ]
                        })
                    ]
                })
            ]
        })
    });
}
function useModal(defaultOpen = false) {
    const [open, setOpen] = _react.useState(defaultOpen);
    const openModal = _react.useCallback(()=>setOpen(true), []);
    const closeModal = _react.useCallback(()=>setOpen(false), []);
    const toggleModal = _react.useCallback(()=>setOpen((prev)=>!prev), []);
    return {
        open,
        openModal,
        closeModal,
        toggleModal,
        setOpen
    };
}

//# sourceMappingURL=data:application/json;base64,