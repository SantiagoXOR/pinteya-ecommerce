f53eab51ef40f73c51cf7157f3eb5f61
"use strict";

/* istanbul ignore next */
function cov_5megavxpo() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\orders\\[id]\\route.ts";
  var hash = "bc6f1265a429de752fb96760c75efbd0bab7cdbf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\orders\\[id]\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 19
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 18
        },
        end: {
          line: 12,
          column: 66
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 92,
          column: 5
        }
      },
      "6": {
        start: {
          line: 15,
          column: 24
        },
        end: {
          line: 15,
          column: 33
        }
      },
      "7": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "8": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 22,
          column: 15
        }
      },
      "9": {
        start: {
          line: 24,
          column: 25
        },
        end: {
          line: 24,
          column: 63
        }
      },
      "10": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 32,
          column: 9
        }
      },
      "11": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 31,
          column: 15
        }
      },
      "12": {
        start: {
          line: 34,
          column: 51
        },
        end: {
          line: 54,
          column: 35
        }
      },
      "13": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "14": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 63,
          column: 13
        }
      },
      "15": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 62,
          column: 19
        }
      },
      "16": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 63
        }
      },
      "17": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 70,
          column: 15
        }
      },
      "18": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "19": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 78,
          column: 15
        }
      },
      "20": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 83,
          column: 11
        }
      },
      "21": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 63
        }
      },
      "22": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 91,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "GET",
        decl: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 13,
            column: 18
          }
        },
        loc: {
          start: {
            line: 13,
            column: 40
          },
          end: {
            line: 93,
            column: 1
          }
        },
        line: 13
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "3": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 63,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 63,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "4": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "5": {
        loc: {
          start: {
            line: 88,
            column: 19
          },
          end: {
            line: 88,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 88,
            column: 44
          },
          end: {
            line: 88,
            column: 57
          }
        }, {
          start: {
            line: 88,
            column: 60
          },
          end: {
            line: 88,
            column: 88
          }
        }],
        line: 88
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\orders\\[id]\\route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\r\nimport { getSupabaseClient } from '@/lib/integrations/supabase';\r\n\r\nexport async function GET(\r\n  request: NextRequest,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  try {\r\n    const orderId = params.id;\r\n\r\n    if (!orderId) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'ID de orden requerido' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const supabase = getSupabaseClient(true);\r\n\r\n    if (!supabase) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'Database service unavailable' },\r\n        { status: 503 }\r\n      );\r\n    }\r\n\r\n    // Obtener orden con items y productos\r\n    const { data: order, error: orderError } = await supabase\r\n      .from('orders')\r\n      .select(`\r\n        id,\r\n        external_reference,\r\n        total,\r\n        status,\r\n        payment_status,\r\n        payer_info,\r\n        shipping_address,\r\n        created_at,\r\n        updated_at,\r\n        order_items (\r\n          id,\r\n          quantity,\r\n          price,\r\n          products (\r\n            id,\r\n            name,\r\n            images\r\n          )\r\n        )\r\n      `)\r\n      .eq('id', orderId)\r\n      .single();\r\n\r\n    if (orderError) {\r\n      if (orderError.code === 'PGRST116') {\r\n        return NextResponse.json(\r\n          { success: false, error: 'Orden no encontrada' },\r\n          { status: 404 }\r\n        );\r\n      }\r\n      \r\n      console.error('Error fetching order:', orderError);\r\n      return NextResponse.json(\r\n        { success: false, error: 'Error al obtener orden' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    if (!order) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'Orden no encontrada' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: order,\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error in GET /api/orders/[id]:', error);\r\n    return NextResponse.json(\r\n      { \r\n        success: false, \r\n        error: error instanceof Error ? error.message : 'Error interno del servidor' \r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],
      names: ["GET", "request", "params", "orderId", "id", "NextResponse", "json", "success", "error", "status", "supabase", "getSupabaseClient", "data", "order", "orderError", "from", "select", "eq", "single", "code", "console", "Error", "message"],
      mappings: ";;;;+BAGsBA;;;eAAAA;;;wBAHoB;0BACR;AAE3B,eAAeA,IACpBC,OAAoB,EACpB,EAAEC,MAAM,EAA8B;IAEtC,IAAI;QACF,MAAMC,UAAUD,OAAOE,EAAE;QAEzB,IAAI,CAACD,SAAS;YACZ,OAAOE,oBAAY,CAACC,IAAI,CACtB;gBAAEC,SAAS;gBAAOC,OAAO;YAAwB,GACjD;gBAAEC,QAAQ;YAAI;QAElB;QAEA,MAAMC,WAAWC,IAAAA,2BAAiB,EAAC;QAEnC,IAAI,CAACD,UAAU;YACb,OAAOL,oBAAY,CAACC,IAAI,CACtB;gBAAEC,SAAS;gBAAOC,OAAO;YAA+B,GACxD;gBAAEC,QAAQ;YAAI;QAElB;QAEA,sCAAsC;QACtC,MAAM,EAAEG,MAAMC,KAAK,EAAEL,OAAOM,UAAU,EAAE,GAAG,MAAMJ,SAC9CK,IAAI,CAAC,UACLC,MAAM,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;MAoBT,CAAC,EACAC,EAAE,CAAC,MAAMd,SACTe,MAAM;QAET,IAAIJ,YAAY;YACd,IAAIA,WAAWK,IAAI,KAAK,YAAY;gBAClC,OAAOd,oBAAY,CAACC,IAAI,CACtB;oBAAEC,SAAS;oBAAOC,OAAO;gBAAsB,GAC/C;oBAAEC,QAAQ;gBAAI;YAElB;YAEAW,QAAQZ,KAAK,CAAC,yBAAyBM;YACvC,OAAOT,oBAAY,CAACC,IAAI,CACtB;gBAAEC,SAAS;gBAAOC,OAAO;YAAyB,GAClD;gBAAEC,QAAQ;YAAI;QAElB;QAEA,IAAI,CAACI,OAAO;YACV,OAAOR,oBAAY,CAACC,IAAI,CACtB;gBAAEC,SAAS;gBAAOC,OAAO;YAAsB,GAC/C;gBAAEC,QAAQ;YAAI;QAElB;QAEA,OAAOJ,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTK,MAAMC;QACR;IAEF,EAAE,OAAOL,OAAO;QACdY,QAAQZ,KAAK,CAAC,kCAAkCA;QAChD,OAAOH,oBAAY,CAACC,IAAI,CACtB;YACEC,SAAS;YACTC,OAAOA,iBAAiBa,QAAQb,MAAMc,OAAO,GAAG;QAClD,GACA;YAAEb,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bc6f1265a429de752fb96760c75efbd0bab7cdbf"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_5megavxpo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_5megavxpo();
cov_5megavxpo().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_5megavxpo().s[1]++;
Object.defineProperty(exports, "GET", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_5megavxpo().f[0]++;
    cov_5megavxpo().s[2]++;
    return GET;
  }
});
const _server =
/* istanbul ignore next */
(cov_5megavxpo().s[3]++, require("next/server"));
const _supabase =
/* istanbul ignore next */
(cov_5megavxpo().s[4]++, require("../../../../lib/integrations/supabase"));
async function GET(request, {
  params
}) {
  /* istanbul ignore next */
  cov_5megavxpo().f[1]++;
  cov_5megavxpo().s[5]++;
  try {
    const orderId =
    /* istanbul ignore next */
    (cov_5megavxpo().s[6]++, params.id);
    /* istanbul ignore next */
    cov_5megavxpo().s[7]++;
    if (!orderId) {
      /* istanbul ignore next */
      cov_5megavxpo().b[0][0]++;
      cov_5megavxpo().s[8]++;
      return _server.NextResponse.json({
        success: false,
        error: 'ID de orden requerido'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_5megavxpo().b[0][1]++;
    }
    const supabase =
    /* istanbul ignore next */
    (cov_5megavxpo().s[9]++, (0, _supabase.getSupabaseClient)(true));
    /* istanbul ignore next */
    cov_5megavxpo().s[10]++;
    if (!supabase) {
      /* istanbul ignore next */
      cov_5megavxpo().b[1][0]++;
      cov_5megavxpo().s[11]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Database service unavailable'
      }, {
        status: 503
      });
    } else
    /* istanbul ignore next */
    {
      cov_5megavxpo().b[1][1]++;
    }
    // Obtener orden con items y productos
    const {
      data: order,
      error: orderError
    } =
    /* istanbul ignore next */
    (cov_5megavxpo().s[12]++, await supabase.from('orders').select(`
        id,
        external_reference,
        total,
        status,
        payment_status,
        payer_info,
        shipping_address,
        created_at,
        updated_at,
        order_items (
          id,
          quantity,
          price,
          products (
            id,
            name,
            images
          )
        )
      `).eq('id', orderId).single());
    /* istanbul ignore next */
    cov_5megavxpo().s[13]++;
    if (orderError) {
      /* istanbul ignore next */
      cov_5megavxpo().b[2][0]++;
      cov_5megavxpo().s[14]++;
      if (orderError.code === 'PGRST116') {
        /* istanbul ignore next */
        cov_5megavxpo().b[3][0]++;
        cov_5megavxpo().s[15]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Orden no encontrada'
        }, {
          status: 404
        });
      } else
      /* istanbul ignore next */
      {
        cov_5megavxpo().b[3][1]++;
      }
      cov_5megavxpo().s[16]++;
      console.error('Error fetching order:', orderError);
      /* istanbul ignore next */
      cov_5megavxpo().s[17]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Error al obtener orden'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_5megavxpo().b[2][1]++;
    }
    cov_5megavxpo().s[18]++;
    if (!order) {
      /* istanbul ignore next */
      cov_5megavxpo().b[4][0]++;
      cov_5megavxpo().s[19]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Orden no encontrada'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_5megavxpo().b[4][1]++;
    }
    cov_5megavxpo().s[20]++;
    return _server.NextResponse.json({
      success: true,
      data: order
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_5megavxpo().s[21]++;
    console.error('Error in GET /api/orders/[id]:', error);
    /* istanbul ignore next */
    cov_5megavxpo().s[22]++;
    return _server.NextResponse.json({
      success: false,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_5megavxpo().b[5][0]++, error.message) :
      /* istanbul ignore next */
      (cov_5megavxpo().b[5][1]++, 'Error interno del servidor')
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfNW1lZ2F2eHBvIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiR0VUIiwicmVxdWVzdCIsInBhcmFtcyIsImYiLCJvcmRlcklkIiwiaWQiLCJiIiwiX3NlcnZlciIsIk5leHRSZXNwb25zZSIsImpzb24iLCJzdWNjZXNzIiwiZXJyb3IiLCJzdGF0dXMiLCJzdXBhYmFzZSIsIl9zdXBhYmFzZSIsImdldFN1cGFiYXNlQ2xpZW50IiwiZGF0YSIsIm9yZGVyIiwib3JkZXJFcnJvciIsImZyb20iLCJzZWxlY3QiLCJlcSIsInNpbmdsZSIsImNvZGUiLCJjb25zb2xlIiwiRXJyb3IiLCJtZXNzYWdlIl0sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxtYXJ0aVxcRGVza3RvcFxcREVTQVJST0xMT1NXXFxCT0lMRVJQTEFUVEUgRS1DT01NRVJDRVxcc3JjXFxhcHBcXGFwaVxcb3JkZXJzXFxbaWRdXFxyb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xyXG5pbXBvcnQgeyBnZXRTdXBhYmFzZUNsaWVudCB9IGZyb20gJ0AvbGliL2ludGVncmF0aW9ucy9zdXBhYmFzZSc7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKFxyXG4gIHJlcXVlc3Q6IE5leHRSZXF1ZXN0LFxyXG4gIHsgcGFyYW1zIH06IHsgcGFyYW1zOiB7IGlkOiBzdHJpbmcgfSB9XHJcbikge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCBvcmRlcklkID0gcGFyYW1zLmlkO1xyXG5cclxuICAgIGlmICghb3JkZXJJZCkge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgICAgeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6ICdJRCBkZSBvcmRlbiByZXF1ZXJpZG8nIH0sXHJcbiAgICAgICAgeyBzdGF0dXM6IDQwMCB9XHJcbiAgICAgICk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3Qgc3VwYWJhc2UgPSBnZXRTdXBhYmFzZUNsaWVudCh0cnVlKTtcclxuXHJcbiAgICBpZiAoIXN1cGFiYXNlKSB7XHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcclxuICAgICAgICB7IHN1Y2Nlc3M6IGZhbHNlLCBlcnJvcjogJ0RhdGFiYXNlIHNlcnZpY2UgdW5hdmFpbGFibGUnIH0sXHJcbiAgICAgICAgeyBzdGF0dXM6IDUwMyB9XHJcbiAgICAgICk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gT2J0ZW5lciBvcmRlbiBjb24gaXRlbXMgeSBwcm9kdWN0b3NcclxuICAgIGNvbnN0IHsgZGF0YTogb3JkZXIsIGVycm9yOiBvcmRlckVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxyXG4gICAgICAuZnJvbSgnb3JkZXJzJylcclxuICAgICAgLnNlbGVjdChgXHJcbiAgICAgICAgaWQsXHJcbiAgICAgICAgZXh0ZXJuYWxfcmVmZXJlbmNlLFxyXG4gICAgICAgIHRvdGFsLFxyXG4gICAgICAgIHN0YXR1cyxcclxuICAgICAgICBwYXltZW50X3N0YXR1cyxcclxuICAgICAgICBwYXllcl9pbmZvLFxyXG4gICAgICAgIHNoaXBwaW5nX2FkZHJlc3MsXHJcbiAgICAgICAgY3JlYXRlZF9hdCxcclxuICAgICAgICB1cGRhdGVkX2F0LFxyXG4gICAgICAgIG9yZGVyX2l0ZW1zIChcclxuICAgICAgICAgIGlkLFxyXG4gICAgICAgICAgcXVhbnRpdHksXHJcbiAgICAgICAgICBwcmljZSxcclxuICAgICAgICAgIHByb2R1Y3RzIChcclxuICAgICAgICAgICAgaWQsXHJcbiAgICAgICAgICAgIG5hbWUsXHJcbiAgICAgICAgICAgIGltYWdlc1xyXG4gICAgICAgICAgKVxyXG4gICAgICAgIClcclxuICAgICAgYClcclxuICAgICAgLmVxKCdpZCcsIG9yZGVySWQpXHJcbiAgICAgIC5zaW5nbGUoKTtcclxuXHJcbiAgICBpZiAob3JkZXJFcnJvcikge1xyXG4gICAgICBpZiAob3JkZXJFcnJvci5jb2RlID09PSAnUEdSU1QxMTYnKSB7XHJcbiAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICAgICAgeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6ICdPcmRlbiBubyBlbmNvbnRyYWRhJyB9LFxyXG4gICAgICAgICAgeyBzdGF0dXM6IDQwNCB9XHJcbiAgICAgICAgKTtcclxuICAgICAgfVxyXG4gICAgICBcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgb3JkZXI6Jywgb3JkZXJFcnJvcik7XHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcclxuICAgICAgICB7IHN1Y2Nlc3M6IGZhbHNlLCBlcnJvcjogJ0Vycm9yIGFsIG9idGVuZXIgb3JkZW4nIH0sXHJcbiAgICAgICAgeyBzdGF0dXM6IDUwMCB9XHJcbiAgICAgICk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKCFvcmRlcikge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgICAgeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6ICdPcmRlbiBubyBlbmNvbnRyYWRhJyB9LFxyXG4gICAgICAgIHsgc3RhdHVzOiA0MDQgfVxyXG4gICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XHJcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgIGRhdGE6IG9yZGVyLFxyXG4gICAgfSk7XHJcblxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiBHRVQgL2FwaS9vcmRlcnMvW2lkXTonLCBlcnJvcik7XHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgIHsgXHJcbiAgICAgICAgc3VjY2VzczogZmFsc2UsIFxyXG4gICAgICAgIGVycm9yOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdFcnJvciBpbnRlcm5vIGRlbCBzZXJ2aWRvcicgXHJcbiAgICAgIH0sXHJcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQVVRO0lBQUFBLGFBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGFBQUE7QUFBQUEsYUFBQSxHQUFBRSxDQUFBOzs7Ozs7K0JBUGM7Ozs7OztXQUFBQyxHQUFBOzs7OztpQ0FIb0I7OztpQ0FDUjtBQUUzQixlQUFlQSxJQUNwQkMsT0FBb0IsRUFDcEI7RUFBRUM7QUFBTSxDQUE4QjtFQUFBO0VBQUFMLGFBQUEsR0FBQU0sQ0FBQTtFQUFBTixhQUFBLEdBQUFFLENBQUE7RUFFdEMsSUFB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