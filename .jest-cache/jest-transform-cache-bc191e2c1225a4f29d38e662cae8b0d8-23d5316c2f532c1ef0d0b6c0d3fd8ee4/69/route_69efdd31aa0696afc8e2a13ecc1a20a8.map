{"version":3,"names":["cov_5megavxpo","actualCoverage","s","GET","request","params","f","orderId","id","b","_server","NextResponse","json","success","error","status","supabase","_supabase","getSupabaseClient","data","order","orderError","from","select","eq","single","code","console","Error","message"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\orders\\[id]\\route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport { getSupabaseClient } from '@/lib/integrations/supabase';\r\n\r\nexport async function GET(\r\n  request: NextRequest,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  try {\r\n    const orderId = params.id;\r\n\r\n    if (!orderId) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'ID de orden requerido' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const supabase = getSupabaseClient(true);\r\n\r\n    if (!supabase) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'Database service unavailable' },\r\n        { status: 503 }\r\n      );\r\n    }\r\n\r\n    // Obtener orden con items y productos\r\n    const { data: order, error: orderError } = await supabase\r\n      .from('orders')\r\n      .select(`\r\n        id,\r\n        external_reference,\r\n        total,\r\n        status,\r\n        payment_status,\r\n        payer_info,\r\n        shipping_address,\r\n        created_at,\r\n        updated_at,\r\n        order_items (\r\n          id,\r\n          quantity,\r\n          price,\r\n          products (\r\n            id,\r\n            name,\r\n            images\r\n          )\r\n        )\r\n      `)\r\n      .eq('id', orderId)\r\n      .single();\r\n\r\n    if (orderError) {\r\n      if (orderError.code === 'PGRST116') {\r\n        return NextResponse.json(\r\n          { success: false, error: 'Orden no encontrada' },\r\n          { status: 404 }\r\n        );\r\n      }\r\n      \r\n      console.error('Error fetching order:', orderError);\r\n      return NextResponse.json(\r\n        { success: false, error: 'Error al obtener orden' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    if (!order) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'Orden no encontrada' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: order,\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error in GET /api/orders/[id]:', error);\r\n    return NextResponse.json(\r\n      { \r\n        success: false, \r\n        error: error instanceof Error ? error.message : 'Error interno del servidor' \r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"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","ignoreList":[]}