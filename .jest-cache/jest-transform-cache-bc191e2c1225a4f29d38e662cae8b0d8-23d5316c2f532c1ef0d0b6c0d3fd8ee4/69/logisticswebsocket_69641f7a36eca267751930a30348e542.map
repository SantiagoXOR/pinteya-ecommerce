{"version":3,"names":["LogisticsWebSocketClient","cov_io4p4lvpc","f","s","LogisticsWebSocketSimulator","getLogisticsWebSocket","_events","EventEmitter","constructor","url","ws","reconnectAttempts","maxReconnectAttempts","reconnectDelay","heartbeatInterval","isConnected","subscriptions","Set","connect","Promise","resolve","reject","WebSocket","onopen","console","log","startHeartbeat","resubscribe","emit","onmessage","event","message","JSON","parse","data","handleMessage","error","onclose","code","reason","stopHeartbeat","b","wasClean","scheduleReconnect","onerror","delay","Math","pow","setTimeout","catch","disconnect","close","setInterval","readyState","OPEN","send","type","timestamp","Date","toISOString","clearInterval","stringify","warn","subscribeToShipment","shipmentId","subscription","add","unsubscribeFromShipment","delete","subscribeToGeofence","zoneId","subscribeToAlerts","forEach","handleTrackingUpdate","handleShipmentStatus","handleAlert","handleGeofenceEvent","handleRouteUpdate","update","alert","window","Notification","permission","process","env","NODE_ENV","body","icon","tag","id","getConnectionState","CONNECTING","CLOSING","CLOSED","isReady","getSubscriptions","Array","from","logisticsWS","wsUrl","start","isRunning","trackingInterval","simulateTrackingUpdate","alertInterval","simulateAlert","geofenceInterval","simulateGeofenceEvent","intervals","push","stop","interval","shipment_id","floor","random","location","latitude","longitude","address","status","courier_id","estimated_arrival","now","alerts","randomAlert","length","severity","auto_resolve","zone_id","zone_name","event_type","args"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\websockets\\logistics-websocket.ts"],"sourcesContent":["// =====================================================\r\n// WEBSOCKET: LOGISTICS REAL-TIME SYSTEM\r\n// Descripción: Sistema WebSocket para tracking tiempo real\r\n// Basado en: WebSocket API + React Context + Event Emitter\r\n// =====================================================\r\n\r\nimport { EventEmitter } from 'events';\r\n\r\n// =====================================================\r\n// INTERFACES\r\n// =====================================================\r\n\r\nexport interface WebSocketMessage {\r\n  type: 'tracking_update' | 'shipment_status' | 'alert' | 'geofence_event' | 'route_update';\r\n  data: any;\r\n  timestamp: string;\r\n  shipment_id?: number;\r\n  user_id?: string;\r\n}\r\n\r\nexport interface TrackingUpdate {\r\n  shipment_id: number;\r\n  location: {\r\n    latitude: number;\r\n    longitude: number;\r\n    address?: string;\r\n  };\r\n  status: string;\r\n  timestamp: string;\r\n  courier_id?: number;\r\n  estimated_arrival?: string;\r\n}\r\n\r\nexport interface GeofenceEvent {\r\n  shipment_id: number;\r\n  zone_id: string;\r\n  zone_name: string;\r\n  event_type: 'enter' | 'exit';\r\n  location: {\r\n    latitude: number;\r\n    longitude: number;\r\n  };\r\n  timestamp: string;\r\n}\r\n\r\nexport interface LogisticsAlert {\r\n  id: string;\r\n  type: 'delay' | 'exception' | 'delivery_attempt' | 'route_deviation';\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  shipment_id: number;\r\n  message: string;\r\n  timestamp: string;\r\n  auto_resolve: boolean;\r\n}\r\n\r\n// =====================================================\r\n// WEBSOCKET CLIENT CLASS\r\n// =====================================================\r\n\r\nexport class LogisticsWebSocketClient extends EventEmitter {\r\n  private ws: WebSocket | null = null;\r\n  private url: string;\r\n  private reconnectAttempts = 0;\r\n  private maxReconnectAttempts = 5;\r\n  private reconnectDelay = 1000;\r\n  private heartbeatInterval: NodeJS.Timeout | null = null;\r\n  private isConnected = false;\r\n  private subscriptions = new Set<string>();\r\n  \r\n  constructor(url: string) {\r\n    super();\r\n    this.url = url;\r\n  }\r\n  \r\n  // =====================================================\r\n  // CONEXIÓN Y RECONEXIÓN\r\n  // =====================================================\r\n  \r\n  connect(): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        this.ws = new WebSocket(this.url);\r\n        \r\n        this.ws.onopen = () => {\r\n          console.log('🔗 WebSocket conectado');\r\n          this.isConnected = true;\r\n          this.reconnectAttempts = 0;\r\n          this.startHeartbeat();\r\n          this.resubscribe();\r\n          this.emit('connected');\r\n          resolve();\r\n        };\r\n        \r\n        this.ws.onmessage = (event) => {\r\n          try {\r\n            const message: WebSocketMessage = JSON.parse(event.data);\r\n            this.handleMessage(message);\r\n          } catch (error) {\r\n            console.error('❌ Error parsing WebSocket message:', error);\r\n          }\r\n        };\r\n        \r\n        this.ws.onclose = (event) => {\r\n          console.log('🔌 WebSocket desconectado:', event.code, event.reason);\r\n          this.isConnected = false;\r\n          this.stopHeartbeat();\r\n          this.emit('disconnected', event);\r\n          \r\n          if (!event.wasClean && this.reconnectAttempts < this.maxReconnectAttempts) {\r\n            this.scheduleReconnect();\r\n          }\r\n        };\r\n        \r\n        this.ws.onerror = (error) => {\r\n          console.error('❌ WebSocket error:', error);\r\n          this.emit('error', error);\r\n          reject(error);\r\n        };\r\n        \r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    });\r\n  }\r\n  \r\n  private scheduleReconnect(): void {\r\n    const delay = this.reconnectDelay * Math.pow(2, this.reconnectAttempts);\r\n    console.log(`🔄 Reconectando en ${delay}ms (intento ${this.reconnectAttempts + 1}/${this.maxReconnectAttempts})`);\r\n    \r\n    setTimeout(() => {\r\n      this.reconnectAttempts++;\r\n      this.connect().catch(() => {\r\n        if (this.reconnectAttempts >= this.maxReconnectAttempts) {\r\n          console.error('❌ Máximo de intentos de reconexión alcanzado');\r\n          this.emit('max_reconnect_attempts');\r\n        }\r\n      });\r\n    }, delay);\r\n  }\r\n  \r\n  disconnect(): void {\r\n    if (this.ws) {\r\n      this.ws.close(1000, 'Client disconnect');\r\n      this.ws = null;\r\n    }\r\n    this.stopHeartbeat();\r\n    this.isConnected = false;\r\n  }\r\n  \r\n  // =====================================================\r\n  // HEARTBEAT\r\n  // =====================================================\r\n  \r\n  private startHeartbeat(): void {\r\n    this.heartbeatInterval = setInterval(() => {\r\n      if (this.isConnected && this.ws?.readyState === WebSocket.OPEN) {\r\n        this.send({\r\n          type: 'ping',\r\n          data: {},\r\n          timestamp: new Date().toISOString()\r\n        });\r\n      }\r\n    }, 30000); // 30 segundos\r\n  }\r\n  \r\n  private stopHeartbeat(): void {\r\n    if (this.heartbeatInterval) {\r\n      clearInterval(this.heartbeatInterval);\r\n      this.heartbeatInterval = null;\r\n    }\r\n  }\r\n  \r\n  // =====================================================\r\n  // ENVÍO DE MENSAJES\r\n  // =====================================================\r\n  \r\n  private send(message: WebSocketMessage): void {\r\n    if (this.ws?.readyState === WebSocket.OPEN) {\r\n      this.ws.send(JSON.stringify(message));\r\n    } else {\r\n      console.warn('⚠️ WebSocket no está conectado, mensaje no enviado:', message);\r\n    }\r\n  }\r\n  \r\n  // =====================================================\r\n  // SUSCRIPCIONES\r\n  // =====================================================\r\n  \r\n  subscribeToShipment(shipmentId: number): void {\r\n    const subscription = `shipment:${shipmentId}`;\r\n    this.subscriptions.add(subscription);\r\n    \r\n    this.send({\r\n      type: 'subscribe',\r\n      data: { subscription },\r\n      timestamp: new Date().toISOString()\r\n    });\r\n  }\r\n  \r\n  unsubscribeFromShipment(shipmentId: number): void {\r\n    const subscription = `shipment:${shipmentId}`;\r\n    this.subscriptions.delete(subscription);\r\n    \r\n    this.send({\r\n      type: 'unsubscribe',\r\n      data: { subscription },\r\n      timestamp: new Date().toISOString()\r\n    });\r\n  }\r\n  \r\n  subscribeToGeofence(zoneId: string): void {\r\n    const subscription = `geofence:${zoneId}`;\r\n    this.subscriptions.add(subscription);\r\n    \r\n    this.send({\r\n      type: 'subscribe',\r\n      data: { subscription },\r\n      timestamp: new Date().toISOString()\r\n    });\r\n  }\r\n  \r\n  subscribeToAlerts(): void {\r\n    const subscription = 'alerts:all';\r\n    this.subscriptions.add(subscription);\r\n    \r\n    this.send({\r\n      type: 'subscribe',\r\n      data: { subscription },\r\n      timestamp: new Date().toISOString()\r\n    });\r\n  }\r\n  \r\n  private resubscribe(): void {\r\n    this.subscriptions.forEach(subscription => {\r\n      this.send({\r\n        type: 'subscribe',\r\n        data: { subscription },\r\n        timestamp: new Date().toISOString()\r\n      });\r\n    });\r\n  }\r\n  \r\n  // =====================================================\r\n  // MANEJO DE MENSAJES\r\n  // =====================================================\r\n  \r\n  private handleMessage(message: WebSocketMessage): void {\r\n    console.log('📨 WebSocket message received:', message.type);\r\n    \r\n    switch (message.type) {\r\n      case 'tracking_update':\r\n        this.handleTrackingUpdate(message.data as TrackingUpdate);\r\n        break;\r\n        \r\n      case 'shipment_status':\r\n        this.handleShipmentStatus(message.data);\r\n        break;\r\n        \r\n      case 'alert':\r\n        this.handleAlert(message.data as LogisticsAlert);\r\n        break;\r\n        \r\n      case 'geofence_event':\r\n        this.handleGeofenceEvent(message.data as GeofenceEvent);\r\n        break;\r\n        \r\n      case 'route_update':\r\n        this.handleRouteUpdate(message.data);\r\n        break;\r\n        \r\n      default:\r\n        console.log('🤷 Unknown message type:', message.type);\r\n    }\r\n    \r\n    // Emitir evento genérico\r\n    this.emit('message', message);\r\n  }\r\n  \r\n  private handleTrackingUpdate(update: TrackingUpdate): void {\r\n    console.log('📍 Tracking update:', update);\r\n    this.emit('tracking_update', update);\r\n  }\r\n  \r\n  private handleShipmentStatus(data: any): void {\r\n    console.log('📦 Shipment status update:', data);\r\n    this.emit('shipment_status', data);\r\n  }\r\n  \r\n  private handleAlert(alert: LogisticsAlert): void {\r\n    console.log('🚨 Alert received:', alert);\r\n    this.emit('alert', alert);\r\n    \r\n    // Mostrar notificación del navegador si está permitido (DESHABILITADO EN DESARROLLO)\r\n    if ('Notification' in window && Notification.permission === 'granted' && process.env.NODE_ENV === 'production') {\r\n      new Notification(`Alerta de Logística - ${alert.type}`, {\r\n        body: alert.message,\r\n        icon: '/favicon.ico',\r\n        tag: alert.id\r\n      });\r\n    }\r\n  }\r\n  \r\n  private handleGeofenceEvent(event: GeofenceEvent): void {\r\n    console.log('🗺️ Geofence event:', event);\r\n    this.emit('geofence_event', event);\r\n  }\r\n  \r\n  private handleRouteUpdate(data: any): void {\r\n    console.log('🛣️ Route update:', data);\r\n    this.emit('route_update', data);\r\n  }\r\n  \r\n  // =====================================================\r\n  // UTILIDADES\r\n  // =====================================================\r\n  \r\n  getConnectionState(): 'connecting' | 'connected' | 'disconnected' | 'error' {\r\n    if (!this.ws) {return 'disconnected';}\r\n    \r\n    switch (this.ws.readyState) {\r\n      case WebSocket.CONNECTING:\r\n        return 'connecting';\r\n      case WebSocket.OPEN:\r\n        return 'connected';\r\n      case WebSocket.CLOSING:\r\n      case WebSocket.CLOSED:\r\n        return 'disconnected';\r\n      default:\r\n        return 'error';\r\n    }\r\n  }\r\n  \r\n  isReady(): boolean {\r\n    return this.isConnected && this.ws?.readyState === WebSocket.OPEN;\r\n  }\r\n  \r\n  getSubscriptions(): string[] {\r\n    return Array.from(this.subscriptions);\r\n  }\r\n}\r\n\r\n// =====================================================\r\n// INSTANCIA SINGLETON\r\n// =====================================================\r\n\r\nlet logisticsWS: LogisticsWebSocketClient | null = null;\r\n\r\nexport function getLogisticsWebSocket(): LogisticsWebSocketClient {\r\n  if (!logisticsWS) {\r\n    // En desarrollo usar WebSocket local, en producción usar WSS\r\n    const wsUrl = process.env.NODE_ENV === 'development' \r\n      ? 'ws://localhost:3001/logistics'\r\n      : 'wss://api.pinteya.com/logistics';\r\n    \r\n    logisticsWS = new LogisticsWebSocketClient(wsUrl);\r\n  }\r\n  \r\n  return logisticsWS;\r\n}\r\n\r\n// =====================================================\r\n// SIMULADOR PARA DESARROLLO\r\n// =====================================================\r\n\r\nexport class LogisticsWebSocketSimulator extends EventEmitter {\r\n  private intervals: NodeJS.Timeout[] = [];\r\n  private isRunning = false;\r\n  \r\n  start(): void {\r\n    if (this.isRunning) {return;}\r\n    \r\n    this.isRunning = true;\r\n    console.log('🎭 Iniciando simulador WebSocket');\r\n    \r\n    // Simular actualizaciones de tracking cada 10 segundos\r\n    const trackingInterval = setInterval(() => {\r\n      this.simulateTrackingUpdate();\r\n    }, 10000);\r\n    \r\n    // Simular alertas cada 30 segundos\r\n    const alertInterval = setInterval(() => {\r\n      this.simulateAlert();\r\n    }, 30000);\r\n    \r\n    // Simular eventos de geofence cada 45 segundos\r\n    const geofenceInterval = setInterval(() => {\r\n      this.simulateGeofenceEvent();\r\n    }, 45000);\r\n    \r\n    this.intervals.push(trackingInterval, alertInterval, geofenceInterval);\r\n  }\r\n  \r\n  stop(): void {\r\n    this.intervals.forEach(interval => clearInterval(interval));\r\n    this.intervals = [];\r\n    this.isRunning = false;\r\n    console.log('🛑 Simulador WebSocket detenido');\r\n  }\r\n  \r\n  private simulateTrackingUpdate(): void {\r\n    const update: TrackingUpdate = {\r\n      shipment_id: Math.floor(Math.random() * 100) + 1,\r\n      location: {\r\n        latitude: -34.6037 + (Math.random() - 0.5) * 0.1,\r\n        longitude: -58.3816 + (Math.random() - 0.5) * 0.1,\r\n        address: 'Av. Corrientes 1234, CABA'\r\n      },\r\n      status: ['in_transit', 'out_for_delivery'][Math.floor(Math.random() * 2)],\r\n      timestamp: new Date().toISOString(),\r\n      courier_id: Math.floor(Math.random() * 4) + 1,\r\n      estimated_arrival: new Date(Date.now() + 3600000).toISOString()\r\n    };\r\n    \r\n    this.emit('tracking_update', update);\r\n  }\r\n  \r\n  private simulateAlert(): void {\r\n    const alerts = [\r\n      { type: 'delay', message: 'Retraso en la entrega debido al tráfico' },\r\n      { type: 'exception', message: 'Dirección incorrecta, contactar cliente' },\r\n      { type: 'delivery_attempt', message: 'Primer intento de entrega fallido' }\r\n    ];\r\n    \r\n    const randomAlert = alerts[Math.floor(Math.random() * alerts.length)];\r\n    \r\n    const alert: LogisticsAlert = {\r\n      id: `alert_${Date.now()}`,\r\n      type: randomAlert.type as any,\r\n      severity: ['low', 'medium', 'high'][Math.floor(Math.random() * 3)] as any,\r\n      shipment_id: Math.floor(Math.random() * 100) + 1,\r\n      message: randomAlert.message,\r\n      timestamp: new Date().toISOString(),\r\n      auto_resolve: Math.random() > 0.5\r\n    };\r\n    \r\n    this.emit('alert', alert);\r\n  }\r\n  \r\n  private simulateGeofenceEvent(): void {\r\n    const event: GeofenceEvent = {\r\n      shipment_id: Math.floor(Math.random() * 100) + 1,\r\n      zone_id: ['caba', 'gba_norte'][Math.floor(Math.random() * 2)],\r\n      zone_name: ['CABA - Zona Prioritaria', 'GBA Norte - Zona de Entrega'][Math.floor(Math.random() * 2)],\r\n      event_type: ['enter', 'exit'][Math.floor(Math.random() * 2)] as any,\r\n      location: {\r\n        latitude: -34.6037 + (Math.random() - 0.5) * 0.1,\r\n        longitude: -58.3816 + (Math.random() - 0.5) * 0.1\r\n      },\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    \r\n    this.emit('geofence_event', event);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}