f72d73c236b018aea4356a5b40dc803b
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_9pglkml6o() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\logistics\\shipments\\route.ts";
  var hash = "e2bead681600b296e33888b37278b56e3c68c98c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\logistics\\shipments\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 57
        }
      },
      "9": {
        start: {
          line: 25,
          column: 17
        },
        end: {
          line: 25,
          column: 75
        }
      },
      "10": {
        start: {
          line: 26,
          column: 13
        },
        end: {
          line: 26,
          column: 27
        }
      },
      "11": {
        start: {
          line: 27,
          column: 19
        },
        end: {
          line: 27,
          column: 60
        }
      },
      "12": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 24
        }
      },
      "13": {
        start: {
          line: 32,
          column: 22
        },
        end: {
          line: 44,
          column: 2
        }
      },
      "14": {
        start: {
          line: 45,
          column: 29
        },
        end: {
          line: 62,
          column: 2
        }
      },
      "15": {
        start: {
          line: 63,
          column: 27
        },
        end: {
          line: 80,
          column: 2
        }
      },
      "16": {
        start: {
          line: 85,
          column: 20
        },
        end: {
          line: 85,
          column: 45
        }
      },
      "17": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 92,
          column: 5
        }
      },
      "18": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 91,
          column: 11
        }
      },
      "19": {
        start: {
          line: 94,
          column: 24
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "20": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 103,
          column: 5
        }
      },
      "21": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 102,
          column: 11
        }
      },
      "22": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 104,
          column: 16
        }
      },
      "23": {
        start: {
          line: 110,
          column: 17
        },
        end: {
          line: 110,
          column: 27
        }
      },
      "24": {
        start: {
          line: 111,
          column: 20
        },
        end: {
          line: 111,
          column: 69
        }
      },
      "25": {
        start: {
          line: 112,
          column: 22
        },
        end: {
          line: 112,
          column: 78
        }
      },
      "26": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 113,
          column: 38
        }
      },
      "27": {
        start: {
          line: 116,
          column: 28
        },
        end: {
          line: 116,
          column: 97
        }
      },
      "28": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 117,
          column: 26
        }
      },
      "29": {
        start: {
          line: 120,
          column: 26
        },
        end: {
          line: 126,
          column: 11
        }
      },
      "30": {
        start: {
          line: 120,
          column: 45
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "31": {
        start: {
          line: 127,
          column: 22
        },
        end: {
          line: 127,
          column: 81
        }
      },
      "32": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "33": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 20
        }
      },
      "34": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 223,
          column: 5
        }
      },
      "35": {
        start: {
          line: 135,
          column: 26
        },
        end: {
          line: 135,
          column: 58
        }
      },
      "36": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "37": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 29
        }
      },
      "38": {
        start: {
          line: 140,
          column: 33
        },
        end: {
          line: 140,
          column: 53
        }
      },
      "39": {
        start: {
          line: 141,
          column: 28
        },
        end: {
          line: 141,
          column: 70
        }
      },
      "40": {
        start: {
          line: 142,
          column: 32
        },
        end: {
          line: 142,
          column: 69
        }
      },
      "41": {
        start: {
          line: 144,
          column: 25
        },
        end: {
          line: 144,
          column: 59
        }
      },
      "42": {
        start: {
          line: 146,
          column: 20
        },
        end: {
          line: 155,
          column: 10
        }
      },
      "43": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "44": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 63
        }
      },
      "45": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "46": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 71
        }
      },
      "47": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "48": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 71
        }
      },
      "49": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "50": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 69
        }
      },
      "51": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "52": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 174,
          column: 9
        }
      },
      "53": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 179,
          column: 11
        }
      },
      "54": {
        start: {
          line: 181,
          column: 23
        },
        end: {
          line: 181,
          column: 73
        }
      },
      "55": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 72
        }
      },
      "56": {
        start: {
          line: 184,
          column: 50
        },
        end: {
          line: 184,
          column: 61
        }
      },
      "57": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 187,
          column: 9
        }
      },
      "58": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 24
        }
      },
      "59": {
        start: {
          line: 189,
          column: 27
        },
        end: {
          line: 189,
          column: 74
        }
      },
      "60": {
        start: {
          line: 190,
          column: 25
        },
        end: {
          line: 200,
          column: 9
        }
      },
      "61": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 51
        }
      },
      "62": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 203,
          column: 60
        }
      },
      "63": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 216,
          column: 9
        }
      },
      "64": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 215,
          column: 15
        }
      },
      "65": {
        start: {
          line: 208,
          column: 20
        },
        end: {
          line: 210,
          column: 22
        }
      },
      "66": {
        start: {
          line: 211,
          column: 20
        },
        end: {
          line: 211,
          column: 31
        }
      },
      "67": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 222,
          column: 11
        }
      },
      "68": {
        start: {
          line: 226,
          column: 4
        },
        end: {
          line: 317,
          column: 5
        }
      },
      "69": {
        start: {
          line: 228,
          column: 26
        },
        end: {
          line: 228,
          column: 58
        }
      },
      "70": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 231,
          column: 9
        }
      },
      "71": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 230,
          column: 29
        }
      },
      "72": {
        start: {
          line: 233,
          column: 21
        },
        end: {
          line: 233,
          column: 41
        }
      },
      "73": {
        start: {
          line: 234,
          column: 30
        },
        end: {
          line: 234,
          column: 62
        }
      },
      "74": {
        start: {
          line: 236,
          column: 25
        },
        end: {
          line: 236,
          column: 59
        }
      },
      "75": {
        start: {
          line: 238,
          column: 28
        },
        end: {
          line: 238,
          column: 87
        }
      },
      "76": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 245,
          column: 9
        }
      },
      "77": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 244,
          column: 15
        }
      },
      "78": {
        start: {
          line: 247,
          column: 31
        },
        end: {
          line: 247,
          column: 55
        }
      },
      "79": {
        start: {
          line: 249,
          column: 57
        },
        end: {
          line: 265,
          column: 17
        }
      },
      "80": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 268,
          column: 9
        }
      },
      "81": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 32
        }
      },
      "82": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 270,
          column: 78
        }
      },
      "83": {
        start: {
          line: 272,
          column: 62
        },
        end: {
          line: 279,
          column: 39
        }
      },
      "84": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 282,
          column: 9
        }
      },
      "85": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 281,
          column: 29
        }
      },
      "86": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 289,
          column: 11
        }
      },
      "87": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 295,
          column: 11
        }
      },
      "88": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 297,
          column: 61
        }
      },
      "89": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 310,
          column: 9
        }
      },
      "90": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 309,
          column: 15
        }
      },
      "91": {
        start: {
          line: 302,
          column: 20
        },
        end: {
          line: 304,
          column: 22
        }
      },
      "92": {
        start: {
          line: 305,
          column: 20
        },
        end: {
          line: 305,
          column: 31
        }
      },
      "93": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 316,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "validateAdminAuth",
        decl: {
          start: {
            line: 84,
            column: 15
          },
          end: {
            line: 84,
            column: 32
          }
        },
        loc: {
          start: {
            line: 84,
            column: 42
          },
          end: {
            line: 105,
            column: 1
          }
        },
        line: 84
      },
      "5": {
        name: "generateShipmentNumber",
        decl: {
          start: {
            line: 109,
            column: 9
          },
          end: {
            line: 109,
            column: 31
          }
        },
        loc: {
          start: {
            line: 109,
            column: 34
          },
          end: {
            line: 114,
            column: 1
          }
        },
        line: 109
      },
      "6": {
        name: "validateOrderExists",
        decl: {
          start: {
            line: 115,
            column: 15
          },
          end: {
            line: 115,
            column: 34
          }
        },
        loc: {
          start: {
            line: 115,
            column: 54
          },
          end: {
            line: 118,
            column: 1
          }
        },
        line: 115
      },
      "7": {
        name: "createShipmentItems",
        decl: {
          start: {
            line: 119,
            column: 15
          },
          end: {
            line: 119,
            column: 34
          }
        },
        loc: {
          start: {
            line: 119,
            column: 64
          },
          end: {
            line: 131,
            column: 1
          }
        },
        line: 119
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 120,
            column: 36
          },
          end: {
            line: 120,
            column: 37
          }
        },
        loc: {
          start: {
            line: 120,
            column: 45
          },
          end: {
            line: 126,
            column: 9
          }
        },
        line: 120
      },
      "9": {
        name: "GET",
        decl: {
          start: {
            line: 132,
            column: 15
          },
          end: {
            line: 132,
            column: 18
          }
        },
        loc: {
          start: {
            line: 132,
            column: 28
          },
          end: {
            line: 224,
            column: 1
          }
        },
        line: 132
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 207,
            column: 45
          },
          end: {
            line: 207,
            column: 46
          }
        },
        loc: {
          start: {
            line: 207,
            column: 57
          },
          end: {
            line: 212,
            column: 17
          }
        },
        line: 207
      },
      "11": {
        name: "POST",
        decl: {
          start: {
            line: 225,
            column: 15
          },
          end: {
            line: 225,
            column: 19
          }
        },
        loc: {
          start: {
            line: 225,
            column: 29
          },
          end: {
            line: 318,
            column: 1
          }
        },
        line: 225
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 301,
            column: 45
          },
          end: {
            line: 301,
            column: 46
          }
        },
        loc: {
          start: {
            line: 301,
            column: 57
          },
          end: {
            line: 306,
            column: 17
          }
        },
        line: 301
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "1": {
        loc: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "2": {
        loc: {
          start: {
            line: 97,
            column: 30
          },
          end: {
            line: 97,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 30
          },
          end: {
            line: 97,
            column: 48
          }
        }, {
          start: {
            line: 97,
            column: 52
          },
          end: {
            line: 97,
            column: 54
          }
        }],
        line: 97
      },
      "3": {
        loc: {
          start: {
            line: 117,
            column: 11
          },
          end: {
            line: 117,
            column: 25
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 117,
            column: 11
          },
          end: {
            line: 117,
            column: 17
          }
        }, {
          start: {
            line: 117,
            column: 21
          },
          end: {
            line: 117,
            column: 25
          }
        }],
        line: 117
      },
      "4": {
        loc: {
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "5": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "6": {
        loc: {
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "7": {
        loc: {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "8": {
        loc: {
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "9": {
        loc: {
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "10": {
        loc: {
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "11": {
        loc: {
          start: {
            line: 173,
            column: 22
          },
          end: {
            line: 173,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 173,
            column: 62
          },
          end: {
            line: 173,
            column: 63
          }
        }, {
          start: {
            line: 173,
            column: 66
          },
          end: {
            line: 173,
            column: 88
          }
        }],
        line: 173
      },
      "12": {
        loc: {
          start: {
            line: 185,
            column: 8
          },
          end: {
            line: 187,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 8
          },
          end: {
            line: 187,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "13": {
        loc: {
          start: {
            line: 189,
            column: 38
          },
          end: {
            line: 189,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 38
          },
          end: {
            line: 189,
            column: 43
          }
        }, {
          start: {
            line: 189,
            column: 47
          },
          end: {
            line: 189,
            column: 48
          }
        }],
        line: 189
      },
      "14": {
        loc: {
          start: {
            line: 191,
            column: 18
          },
          end: {
            line: 191,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 18
          },
          end: {
            line: 191,
            column: 27
          }
        }, {
          start: {
            line: 191,
            column: 31
          },
          end: {
            line: 191,
            column: 33
          }
        }],
        line: 191
      },
      "15": {
        loc: {
          start: {
            line: 195,
            column: 23
          },
          end: {
            line: 195,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 23
          },
          end: {
            line: 195,
            column: 28
          }
        }, {
          start: {
            line: 195,
            column: 32
          },
          end: {
            line: 195,
            column: 33
          }
        }],
        line: 195
      },
      "16": {
        loc: {
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 216,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 216,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "17": {
        loc: {
          start: {
            line: 219,
            column: 21
          },
          end: {
            line: 219,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 219,
            column: 46
          },
          end: {
            line: 219,
            column: 59
          }
        }, {
          start: {
            line: 219,
            column: 62
          },
          end: {
            line: 219,
            column: 77
          }
        }],
        line: 219
      },
      "18": {
        loc: {
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "19": {
        loc: {
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "20": {
        loc: {
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 268,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 268,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "21": {
        loc: {
          start: {
            line: 280,
            column: 8
          },
          end: {
            line: 282,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 8
          },
          end: {
            line: 282,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "22": {
        loc: {
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 310,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 310,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "23": {
        loc: {
          start: {
            line: 313,
            column: 21
          },
          end: {
            line: 313,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 313,
            column: 46
          },
          end: {
            line: 313,
            column: 59
          }
        }, {
          start: {
            line: 313,
            column: 62
          },
          end: {
            line: 313,
            column: 77
          }
        }],
        line: 313
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\logistics\\shipments\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// =====================================================\r\n// API: GESTI\xD3N DE ENV\xCDOS ENTERPRISE\r\n// Endpoints: GET/POST /api/admin/logistics/shipments\r\n// Descripci\xF3n: CRUD completo de env\xEDos con validaci\xF3n\r\n// Basado en: Patrones Spree Commerce + WooCommerce\r\n// =====================================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { createClient } from '@/lib/integrations/supabase/server';\r\nimport { z } from 'zod';\r\nimport { \r\n  CreateShipmentRequest, \r\n  GetShipmentsRequest,\r\n  Shipment,\r\n  PaginatedResponse,\r\n  ShipmentStatus,\r\n  ShippingService \r\n} from '@/types/logistics';\r\n\r\n// =====================================================\r\n// SCHEMAS DE VALIDACI\xD3N ZOD\r\n// =====================================================\r\n\r\nconst AddressSchema = z.object({\r\n  street: z.string().min(1, 'Calle es requerida'),\r\n  number: z.string().min(1, 'N\xFAmero es requerido'),\r\n  apartment: z.string().optional(),\r\n  neighborhood: z.string().min(1, 'Barrio es requerido'),\r\n  city: z.string().min(1, 'Ciudad es requerida'),\r\n  state: z.string().min(1, 'Provincia es requerida'),\r\n  postal_code: z.string().min(4, 'C\xF3digo postal debe tener al menos 4 caracteres'),\r\n  country: z.string().default('Argentina'),\r\n  latitude: z.number().optional(),\r\n  longitude: z.number().optional(),\r\n  reference: z.string().optional()\r\n});\r\n\r\nconst CreateShipmentSchema = z.object({\r\n  order_id: z.number().positive('ID de orden debe ser positivo'),\r\n  carrier_id: z.number().positive().optional(),\r\n  shipping_service: z.nativeEnum(ShippingService),\r\n  items: z.array(z.object({\r\n    order_item_id: z.number().positive().optional(),\r\n    product_id: z.number().positive('ID de producto es requerido'),\r\n    quantity: z.number().positive('Cantidad debe ser positiva'),\r\n    weight_kg: z.number().positive().optional()\r\n  })).min(1, 'Debe incluir al menos un item'),\r\n  pickup_address: AddressSchema.optional(),\r\n  delivery_address: AddressSchema,\r\n  weight_kg: z.number().positive().optional(),\r\n  dimensions_cm: z.string().regex(/^\\d+x\\d+x\\d+$/, 'Formato debe ser LxWxH (ej: 30x20x15)').optional(),\r\n  special_instructions: z.string().max(500).optional(),\r\n  notes: z.string().max(1000).optional(),\r\n  estimated_delivery_date: z.string().datetime().optional()\r\n});\r\n\r\nconst GetShipmentsSchema = z.object({\r\n  page: z.coerce.number().positive().default(1),\r\n  limit: z.coerce.number().positive().max(100).default(20),\r\n  status: z.nativeEnum(ShipmentStatus).optional(),\r\n  carrier: z.string().optional(),\r\n  date_from: z.string().datetime().optional(),\r\n  date_to: z.string().datetime().optional(),\r\n  search: z.string().optional(),\r\n  order_by: z.enum(['created_at', 'updated_at', 'estimated_delivery_date']).default('created_at'),\r\n  order_direction: z.enum(['asc', 'desc']).default('desc')\r\n});\r\n\r\n// =====================================================\r\n// MIDDLEWARE DE AUTENTICACI\xD3N\r\n// =====================================================\r\nasync function validateAdminAuth(request: NextRequest) {\r\n  const session = await auth();\r\n\r\n  if (!session?.user) {\r\n    return NextResponse.json(\r\n      { error: 'Unauthorized' },\r\n      { status: 401 }\r\n    );\r\n  }\r\n\r\n  // Verificar rol de administrador usando el email\r\n  const adminEmails = ['santiago@xor.com.ar'];\r\n  if (!adminEmails.includes(session.user.email || '')) {\r\n    return NextResponse.json(\r\n      { error: 'Insufficient permissions' },\r\n      { status: 403 }\r\n    );\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n// =====================================================\r\n// FUNCIONES AUXILIARES\r\n// =====================================================\r\n\r\nfunction generateShipmentNumber(): string {\r\n  const date = new Date();\r\n  const dateStr = date.toISOString().slice(0, 10).replace(/-/g, '');\r\n  const randomStr = Math.random().toString(36).substring(2, 8).toUpperCase();\r\n  return `SH${dateStr}${randomStr}`;\r\n}\r\n\r\nasync function validateOrderExists(supabase: any, orderId: number): Promise<boolean> {\r\n  const { data, error } = await supabase\r\n    .from('orders')\r\n    .select('id')\r\n    .eq('id', orderId)\r\n    .single();\r\n  \r\n  return !error && data;\r\n}\r\n\r\nasync function createShipmentItems(\r\n  supabase: any, \r\n  shipmentId: number, \r\n  items: CreateShipmentRequest['items']\r\n): Promise<void> {\r\n  const shipmentItems = items.map(item => ({\r\n    shipment_id: shipmentId,\r\n    order_item_id: item.order_item_id,\r\n    product_id: item.product_id,\r\n    quantity: item.quantity,\r\n    weight_kg: item.weight_kg\r\n  }));\r\n  \r\n  const { error } = await supabase\r\n    .from('shipment_items')\r\n    .insert(shipmentItems);\r\n  \r\n  if (error) {throw error;}\r\n}\r\n\r\n// =====================================================\r\n// GET: OBTENER ENV\xCDOS CON FILTROS Y PAGINACI\xD3N\r\n// =====================================================\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Validar autenticaci\xF3n\r\n    const authError = await validateAdminAuth(request);\r\n    if (authError) {return authError;}\r\n    \r\n    // Parsear y validar query parameters\r\n    const { searchParams } = new URL(request.url);\r\n    const queryParams = Object.fromEntries(searchParams.entries());\r\n    \r\n    const validatedParams = GetShipmentsSchema.parse(queryParams);\r\n    \r\n    // Crear cliente Supabase\r\n    const supabase = await createClient();\r\n    \r\n    // Construir query base\r\n    let query = supabase\r\n      .from('shipments')\r\n      .select(`\r\n        *,\r\n        carrier:couriers(id, name, code),\r\n        items:shipment_items(\r\n          id, quantity, weight_kg,\r\n          product:products(id, name, slug, images)\r\n        )\r\n      `, { count: 'exact' });\r\n    \r\n    // Aplicar filtros\r\n    if (validatedParams.status) {\r\n      query = query.eq('status', validatedParams.status);\r\n    }\r\n    \r\n    if (validatedParams.carrier) {\r\n      query = query.eq('couriers.code', validatedParams.carrier);\r\n    }\r\n    \r\n    if (validatedParams.date_from) {\r\n      query = query.gte('created_at', validatedParams.date_from);\r\n    }\r\n    \r\n    if (validatedParams.date_to) {\r\n      query = query.lte('created_at', validatedParams.date_to);\r\n    }\r\n    \r\n    if (validatedParams.search) {\r\n      query = query.or(`\r\n        shipment_number.ilike.%${validatedParams.search}%,\r\n        tracking_number.ilike.%${validatedParams.search}%,\r\n        order_id.eq.${isNaN(Number(validatedParams.search)) ? 0 : validatedParams.search}\r\n      `);\r\n    }\r\n    \r\n    // Aplicar ordenamiento\r\n    query = query.order(\r\n      validatedParams.order_by, \r\n      { ascending: validatedParams.order_direction === 'asc' }\r\n    );\r\n    \r\n    // Aplicar paginaci\xF3n\r\n    const offset = (validatedParams.page - 1) * validatedParams.limit;\r\n    query = query.range(offset, offset + validatedParams.limit - 1);\r\n    \r\n    // Ejecutar query\r\n    const { data: shipments, error, count } = await query;\r\n    \r\n    if (error) {throw error;}\r\n    \r\n    // Construir respuesta paginada\r\n    const totalPages = Math.ceil((count || 0) / validatedParams.limit);\r\n    \r\n    const response: PaginatedResponse<Shipment> = {\r\n      data: shipments || [],\r\n      pagination: {\r\n        page: validatedParams.page,\r\n        limit: validatedParams.limit,\r\n        total: count || 0,\r\n        total_pages: totalPages,\r\n        has_next: validatedParams.page < totalPages,\r\n        has_prev: validatedParams.page > 1\r\n      }\r\n    };\r\n    \r\n    return NextResponse.json(response);\r\n    \r\n  } catch (error) {\r\n    console.error('Error in GET shipments API:', error);\r\n    \r\n    if (error instanceof z.ZodError) {\r\n      return NextResponse.json(\r\n        { \r\n          error: 'Validation error',\r\n          details: error.errors.reduce((acc, err) => {\r\n            acc[err.path.join('.')] = [err.message];\r\n            return acc;\r\n          }, {} as Record<string, string[]>)\r\n        },\r\n        { status: 422 }\r\n      );\r\n    }\r\n    \r\n    return NextResponse.json(\r\n      { \r\n        error: 'Internal server error',\r\n        details: error instanceof Error ? error.message : 'Unknown error'\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// =====================================================\r\n// POST: CREAR NUEVO ENV\xCDO\r\n// =====================================================\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    // Validar autenticaci\xF3n\r\n    const authError = await validateAdminAuth(request);\r\n    if (authError) {return authError;}\r\n    \r\n    // Parsear y validar body\r\n    const body = await request.json();\r\n    const validatedData = CreateShipmentSchema.parse(body);\r\n    \r\n    // Crear cliente Supabase\r\n    const supabase = await createClient();\r\n    \r\n    // Validar que la orden existe\r\n    const orderExists = await validateOrderExists(supabase, validatedData.order_id);\r\n    if (!orderExists) {\r\n      return NextResponse.json(\r\n        { error: 'Order not found' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n    \r\n    // Generar n\xFAmero de env\xEDo \xFAnico\r\n    const shipmentNumber = generateShipmentNumber();\r\n    \r\n    // Crear el env\xEDo\r\n    const { data: shipment, error: shipmentError } = await supabase\r\n      .from('shipments')\r\n      .insert({\r\n        shipment_number: shipmentNumber,\r\n        order_id: validatedData.order_id,\r\n        status: 'pending',\r\n        carrier_id: validatedData.carrier_id,\r\n        shipping_service: validatedData.shipping_service,\r\n        pickup_address: validatedData.pickup_address,\r\n        delivery_address: validatedData.delivery_address,\r\n        weight_kg: validatedData.weight_kg,\r\n        dimensions_cm: validatedData.dimensions_cm,\r\n        special_instructions: validatedData.special_instructions,\r\n        notes: validatedData.notes,\r\n        estimated_delivery_date: validatedData.estimated_delivery_date\r\n      })\r\n      .select(`\r\n        *,\r\n        carrier:couriers(id, name, code)\r\n      `)\r\n      .single();\r\n    \r\n    if (shipmentError) {throw shipmentError;}\r\n    \r\n    // Crear los items del env\xEDo\r\n    await createShipmentItems(supabase, shipment.id, validatedData.items);\r\n    \r\n    // Obtener el env\xEDo completo con items\r\n    const { data: completeShipment, error: fetchError } = await supabase\r\n      .from('shipments')\r\n      .select(`\r\n        *,\r\n        carrier:couriers(id, name, code),\r\n        items:shipment_items(\r\n          id, quantity, weight_kg,\r\n          product:products(id, name, slug, images)\r\n        )\r\n      `)\r\n      .eq('id', shipment.id)\r\n      .single();\r\n    \r\n    if (fetchError) {throw fetchError;}\r\n    \r\n    // Crear evento de tracking inicial\r\n    await supabase\r\n      .from('tracking_events')\r\n      .insert({\r\n        shipment_id: shipment.id,\r\n        status: 'pending',\r\n        description: 'Env\xEDo creado y pendiente de confirmaci\xF3n',\r\n        occurred_at: new Date().toISOString()\r\n      });\r\n    \r\n    return NextResponse.json(\r\n      { \r\n        data: completeShipment,\r\n        message: 'Shipment created successfully'\r\n      },\r\n      { status: 201 }\r\n    );\r\n    \r\n  } catch (error) {\r\n    console.error('Error in POST shipments API:', error);\r\n    \r\n    if (error instanceof z.ZodError) {\r\n      return NextResponse.json(\r\n        { \r\n          error: 'Validation error',\r\n          details: error.errors.reduce((acc, err) => {\r\n            acc[err.path.join('.')] = [err.message];\r\n            return acc;\r\n          }, {} as Record<string, string[]>)\r\n        },\r\n        { status: 422 }\r\n      );\r\n    }\r\n    \r\n    return NextResponse.json(\r\n      { \r\n        error: 'Internal server error',\r\n        details: error instanceof Error ? error.message : 'Unknown error'\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "AddressSchema", "z", "object", "street", "string", "min", "number", "apartment", "optional", "neighborhood", "city", "state", "postal_code", "country", "default", "latitude", "longitude", "reference", "CreateShipmentSchema", "order_id", "positive", "carrier_id", "shipping_service", "nativeEnum", "ShippingService", "items", "array", "order_item_id", "product_id", "quantity", "weight_kg", "pickup_address", "delivery_address", "dimensions_cm", "regex", "special_instructions", "max", "notes", "estimated_delivery_date", "datetime", "GetShipmentsSchema", "page", "coerce", "limit", "status", "ShipmentStatus", "carrier", "date_from", "date_to", "search", "order_by", "enum", "order_direction", "validateAdminAuth", "request", "session", "auth", "user", "NextResponse", "json", "error", "adminEmails", "includes", "email", "generateShipmentNumber", "date", "Date", "dateStr", "toISOString", "slice", "replace", "randomStr", "Math", "random", "toString", "substring", "toUpperCase", "validateOrderExists", "supabase", "orderId", "data", "from", "select", "eq", "single", "createShipmentItems", "shipmentId", "shipmentItems", "map", "item", "shipment_id", "insert", "authError", "searchParams", "URL", "url", "queryParams", "Object", "fromEntries", "entries", "validatedParams", "parse", "createClient", "query", "count", "gte", "lte", "or", "isNaN", "Number", "order", "ascending", "offset", "range", "shipments", "totalPages", "ceil", "response", "pagination", "total", "total_pages", "has_next", "has_prev", "console", "ZodError", "details", "errors", "reduce", "acc", "err", "path", "join", "message", "Error", "body", "validatedData", "orderExists", "shipmentNumber", "shipment", "shipmentError", "shipment_number", "id", "completeShipment", "fetchError", "description", "occurred_at"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QA8IfA;eAAAA;;QAkHAC;eAAAA;;QA/PTC;eAAAA;;;wBAS6B;wBACrB;yBACQ;qBACX;2BAQX;AApBA,MAAMA,UAAU;AAsBvB,wDAAwD;AACxD,4BAA4B;AAC5B,wDAAwD;AAExD,MAAMC,gBAAgBC,MAAC,CAACC,MAAM,CAAC;IAC7BC,QAAQF,MAAC,CAACG,MAAM,GAAGC,GAAG,CAAC,GAAG;IAC1BC,QAAQL,MAAC,CAACG,MAAM,GAAGC,GAAG,CAAC,GAAG;IAC1BE,WAAWN,MAAC,CAACG,MAAM,GAAGI,QAAQ;IAC9BC,cAAcR,MAAC,CAACG,MAAM,GAAGC,GAAG,CAAC,GAAG;IAChCK,MAAMT,MAAC,CAACG,MAAM,GAAGC,GAAG,CAAC,GAAG;IACxBM,OAAOV,MAAC,CAACG,MAAM,GAAGC,GAAG,CAAC,GAAG;IACzBO,aAAaX,MAAC,CAACG,MAAM,GAAGC,GAAG,CAAC,GAAG;IAC/BQ,SAASZ,MAAC,CAACG,MAAM,GAAGU,OAAO,CAAC;IAC5BC,UAAUd,MAAC,CAACK,MAAM,GAAGE,QAAQ;IAC7BQ,WAAWf,MAAC,CAACK,MAAM,GAAGE,QAAQ;IAC9BS,WAAWhB,MAAC,CAACG,MAAM,GAAGI,QAAQ;AAChC;AAEA,MAAMU,uBAAuBjB,MAAC,CAACC,MAAM,CAAC;IACpCiB,UAAUlB,MAAC,CAACK,MAAM,GAAGc,QAAQ,CAAC;IAC9BC,YAAYpB,MAAC,CAACK,MAAM,GAAGc,QAAQ,GAAGZ,QAAQ;IAC1Cc,kBAAkBrB,MAAC,CAACsB,UAAU,CAACC,0BAAe;IAC9CC,OAAOxB,MAAC,CAACyB,KAAK,CAACzB,MAAC,CAACC,MAAM,CAAC;QACtByB,eAAe1B,MAAC,CAACK,MAAM,GAAGc,QAAQ,GAAGZ,QAAQ;QAC7CoB,YAAY3B,MAAC,CAACK,MAAM,GAAGc,QAAQ,CAAC;QAChCS,UAAU5B,MAAC,CAACK,MAAM,GAAGc,QAAQ,CAAC;QAC9BU,WAAW7B,MAAC,CAACK,MAAM,GAAGc,QAAQ,GAAGZ,QAAQ;IAC3C,IAAIH,GAAG,CAAC,GAAG;IACX0B,gBAAgB/B,cAAcQ,QAAQ;IACtCwB,kBAAkBhC;IAClB8B,WAAW7B,MAAC,CAACK,MAAM,GAAGc,QAAQ,GAAGZ,QAAQ;IACzCyB,eAAehC,MAAC,CAACG,MAAM,GAAG8B,KAAK,CAAC,iBAAiB,yCAAyC1B,QAAQ;IAClG2B,sBAAsBlC,MAAC,CAACG,MAAM,GAAGgC,GAAG,CAAC,KAAK5B,QAAQ;IAClD6B,OAAOpC,MAAC,CAACG,MAAM,GAAGgC,GAAG,CAAC,MAAM5B,QAAQ;IACpC8B,yBAAyBrC,MAAC,CAACG,MAAM,GAAGmC,QAAQ,GAAG/B,QAAQ;AACzD;AAEA,MAAMgC,qBAAqBvC,MAAC,CAACC,MAAM,CAAC;IAClCuC,MAAMxC,MAAC,CAACyC,MAAM,CAACpC,MAAM,GAAGc,QAAQ,GAAGN,OAAO,CAAC;IAC3C6B,OAAO1C,MAAC,CAACyC,MAAM,CAACpC,MAAM,GAAGc,QAAQ,GAAGgB,GAAG,CAAC,KAAKtB,OAAO,CAAC;IACrD8B,QAAQ3C,MAAC,CAACsB,UAAU,CAACsB,yBAAc,EAAErC,QAAQ;IAC7CsC,SAAS7C,MAAC,CAACG,MAAM,GAAGI,QAAQ;IAC5BuC,WAAW9C,MAAC,CAACG,MAAM,GAAGmC,QAAQ,GAAG/B,QAAQ;IACzCwC,SAAS/C,MAAC,CAACG,MAAM,GAAGmC,QAAQ,GAAG/B,QAAQ;IACvCyC,QAAQhD,MAAC,CAACG,MAAM,GAAGI,QAAQ;IAC3B0C,UAAUjD,MAAC,CAACkD,IAAI,CAAC;QAAC;QAAc;QAAc;KAA0B,EAAErC,OAAO,CAAC;IAClFsC,iBAAiBnD,MAAC,CAACkD,IAAI,CAAC;QAAC;QAAO;KAAO,EAAErC,OAAO,CAAC;AACnD;AAEA,wDAAwD;AACxD,8BAA8B;AAC9B,wDAAwD;AACxD,eAAeuC,kBAAkBC,OAAoB;IACnD,MAAMC,UAAU,MAAMC,IAAAA,YAAI;IAE1B,IAAI,CAACD,SAASE,MAAM;QAClB,OAAOC,oBAAY,CAACC,IAAI,CACtB;YAAEC,OAAO;QAAe,GACxB;YAAEhB,QAAQ;QAAI;IAElB;IAEA,iDAAiD;IACjD,MAAMiB,cAAc;QAAC;KAAsB;IAC3C,IAAI,CAACA,YAAYC,QAAQ,CAACP,QAAQE,IAAI,CAACM,KAAK,IAAI,KAAK;QACnD,OAAOL,oBAAY,CAACC,IAAI,CACtB;YAAEC,OAAO;QAA2B,GACpC;YAAEhB,QAAQ;QAAI;IAElB;IAEA,OAAO;AACT;AAEA,wDAAwD;AACxD,uBAAuB;AACvB,wDAAwD;AAExD,SAASoB;IACP,MAAMC,OAAO,IAAIC;IACjB,MAAMC,UAAUF,KAAKG,WAAW,GAAGC,KAAK,CAAC,GAAG,IAAIC,OAAO,CAAC,MAAM;IAC9D,MAAMC,YAAYC,KAAKC,MAAM,GAAGC,QAAQ,CAAC,IAAIC,SAAS,CAAC,GAAG,GAAGC,WAAW;IACxE,OAAO,CAAC,EAAE,EAAET,UAAUI,WAAW;AACnC;AAEA,eAAeM,oBAAoBC,QAAa,EAAEC,OAAe;IAC/D,MAAM,EAAEC,IAAI,EAAEpB,KAAK,EAAE,GAAG,MAAMkB,SAC3BG,IAAI,CAAC,UACLC,MAAM,CAAC,MACPC,EAAE,CAAC,MAAMJ,SACTK,MAAM;IAET,OAAO,CAACxB,SAASoB;AACnB;AAEA,eAAeK,oBACbP,QAAa,EACbQ,UAAkB,EAClB7D,KAAqC;IAErC,MAAM8D,gBAAgB9D,MAAM+D,GAAG,CAACC,CAAAA,OAAS,CAAA;YACvCC,aAAaJ;YACb3D,eAAe8D,KAAK9D,aAAa;YACjCC,YAAY6D,KAAK7D,UAAU;YAC3BC,UAAU4D,KAAK5D,QAAQ;YACvBC,WAAW2D,KAAK3D,SAAS;QAC3B,CAAA;IAEA,MAAM,EAAE8B,KAAK,EAAE,GAAG,MAAMkB,SACrBG,IAAI,CAAC,kBACLU,MAAM,CAACJ;IAEV,IAAI3B,OAAO;QAAC,MAAMA;IAAM;AAC1B;AAMO,eAAe/D,IAAIyD,OAAoB;IAC5C,IAAI;QACF,wBAAwB;QACxB,MAAMsC,YAAY,MAAMvC,kBAAkBC;QAC1C,IAAIsC,WAAW;YAAC,OAAOA;QAAU;QAEjC,qCAAqC;QACrC,MAAM,EAAEC,YAAY,EAAE,GAAG,IAAIC,IAAIxC,QAAQyC,GAAG;QAC5C,MAAMC,cAAcC,OAAOC,WAAW,CAACL,aAAaM,OAAO;QAE3D,MAAMC,kBAAkB5D,mBAAmB6D,KAAK,CAACL;QAEjD,yBAAyB;QACzB,MAAMlB,WAAW,MAAMwB,IAAAA,qBAAY;QAEnC,uBAAuB;QACvB,IAAIC,QAAQzB,SACTG,IAAI,CAAC,aACLC,MAAM,CAAC,CAAC;;;;;;;MAOT,CAAC,EAAE;YAAEsB,OAAO;QAAQ;QAEtB,kBAAkB;QAClB,IAAIJ,gBAAgBxD,MAAM,EAAE;YAC1B2D,QAAQA,MAAMpB,EAAE,CAAC,UAAUiB,gBAAgBxD,MAAM;QACnD;QAEA,IAAIwD,gBAAgBtD,OAAO,EAAE;YAC3ByD,QAAQA,MAAMpB,EAAE,CAAC,iBAAiBiB,gBAAgBtD,OAAO;QAC3D;QAEA,IAAIsD,gBAAgBrD,SAAS,EAAE;YAC7BwD,QAAQA,MAAME,GAAG,CAAC,cAAcL,gBAAgBrD,SAAS;QAC3D;QAEA,IAAIqD,gBAAgBpD,OAAO,EAAE;YAC3BuD,QAAQA,MAAMG,GAAG,CAAC,cAAcN,gBAAgBpD,OAAO;QACzD;QAEA,IAAIoD,gBAAgBnD,MAAM,EAAE;YAC1BsD,QAAQA,MAAMI,EAAE,CAAC,CAAC;+BACO,EAAEP,gBAAgBnD,MAAM,CAAC;+BACzB,EAAEmD,gBAAgBnD,MAAM,CAAC;oBACpC,EAAE2D,MAAMC,OAAOT,gBAAgBnD,MAAM,KAAK,IAAImD,gBAAgBnD,MAAM,CAAC;MACnF,CAAC;QACH;QAEA,uBAAuB;QACvBsD,QAAQA,MAAMO,KAAK,CACjBV,gBAAgBlD,QAAQ,EACxB;YAAE6D,WAAWX,gBAAgBhD,eAAe,KAAK;QAAM;QAGzD,qBAAqB;QACrB,MAAM4D,SAAS,AAACZ,CAAAA,gBAAgB3D,IAAI,GAAG,CAAA,IAAK2D,gBAAgBzD,KAAK;QACjE4D,QAAQA,MAAMU,KAAK,CAACD,QAAQA,SAASZ,gBAAgBzD,KAAK,GAAG;QAE7D,iBAAiB;QACjB,MAAM,EAAEqC,MAAMkC,SAAS,EAAEtD,KAAK,EAAE4C,KAAK,EAAE,GAAG,MAAMD;QAEhD,IAAI3C,OAAO;YAAC,MAAMA;QAAM;QAExB,+BAA+B;QAC/B,MAAMuD,aAAa3C,KAAK4C,IAAI,CAAC,AAACZ,CAAAA,SAAS,CAAA,IAAKJ,gBAAgBzD,KAAK;QAEjE,MAAM0E,WAAwC;YAC5CrC,MAAMkC,aAAa,EAAE;YACrBI,YAAY;gBACV7E,MAAM2D,gBAAgB3D,IAAI;gBAC1BE,OAAOyD,gBAAgBzD,KAAK;gBAC5B4E,OAAOf,SAAS;gBAChBgB,aAAaL;gBACbM,UAAUrB,gBAAgB3D,IAAI,GAAG0E;gBACjCO,UAAUtB,gBAAgB3D,IAAI,GAAG;YACnC;QACF;QAEA,OAAOiB,oBAAY,CAACC,IAAI,CAAC0D;IAE3B,EAAE,OAAOzD,OAAO;QACd+D,QAAQ/D,KAAK,CAAC,+BAA+BA;QAE7C,IAAIA,iBAAiB3D,MAAC,CAAC2H,QAAQ,EAAE;YAC/B,OAAOlE,oBAAY,CAACC,IAAI,CACtB;gBACEC,OAAO;gBACPiE,SAASjE,MAAMkE,MAAM,CAACC,MAAM,CAAC,CAACC,KAAKC;oBACjCD,GAAG,CAACC,IAAIC,IAAI,CAACC,IAAI,CAAC,KAAK,GAAG;wBAACF,IAAIG,OAAO;qBAAC;oBACvC,OAAOJ;gBACT,GAAG,CAAC;YACN,GACA;gBAAEpF,QAAQ;YAAI;QAElB;QAEA,OAAOc,oBAAY,CAACC,IAAI,CACtB;YACEC,OAAO;YACPiE,SAASjE,iBAAiByE,QAAQzE,MAAMwE,OAAO,GAAG;QACpD,GACA;YAAExF,QAAQ;QAAI;IAElB;AACF;AAMO,eAAe9C,KAAKwD,OAAoB;IAC7C,IAAI;QACF,wBAAwB;QACxB,MAAMsC,YAAY,MAAMvC,kBAAkBC;QAC1C,IAAIsC,WAAW;YAAC,OAAOA;QAAU;QAEjC,yBAAyB;QACzB,MAAM0C,OAAO,MAAMhF,QAAQK,IAAI;QAC/B,MAAM4E,gBAAgBrH,qBAAqBmF,KAAK,CAACiC;QAEjD,yBAAyB;QACzB,MAAMxD,WAAW,MAAMwB,IAAAA,qBAAY;QAEnC,8BAA8B;QAC9B,MAAMkC,cAAc,MAAM3D,oBAAoBC,UAAUyD,cAAcpH,QAAQ;QAC9E,IAAI,CAACqH,aAAa;YAChB,OAAO9E,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAO;YAAkB,GAC3B;gBAAEhB,QAAQ;YAAI;QAElB;QAEA,gCAAgC;QAChC,MAAM6F,iBAAiBzE;QAEvB,iBAAiB;QACjB,MAAM,EAAEgB,MAAM0D,QAAQ,EAAE9E,OAAO+E,aAAa,EAAE,GAAG,MAAM7D,SACpDG,IAAI,CAAC,aACLU,MAAM,CAAC;YACNiD,iBAAiBH;YACjBtH,UAAUoH,cAAcpH,QAAQ;YAChCyB,QAAQ;YACRvB,YAAYkH,cAAclH,UAAU;YACpCC,kBAAkBiH,cAAcjH,gBAAgB;YAChDS,gBAAgBwG,cAAcxG,cAAc;YAC5CC,kBAAkBuG,cAAcvG,gBAAgB;YAChDF,WAAWyG,cAAczG,SAAS;YAClCG,eAAesG,cAActG,aAAa;YAC1CE,sBAAsBoG,cAAcpG,oBAAoB;YACxDE,OAAOkG,cAAclG,KAAK;YAC1BC,yBAAyBiG,cAAcjG,uBAAuB;QAChE,GACC4C,MAAM,CAAC,CAAC;;;MAGT,CAAC,EACAE,MAAM;QAET,IAAIuD,eAAe;YAAC,MAAMA;QAAc;QAExC,4BAA4B;QAC5B,MAAMtD,oBAAoBP,UAAU4D,SAASG,EAAE,EAAEN,cAAc9G,KAAK;QAEpE,sCAAsC;QACtC,MAAM,EAAEuD,MAAM8D,gBAAgB,EAAElF,OAAOmF,UAAU,EAAE,GAAG,MAAMjE,SACzDG,IAAI,CAAC,aACLC,MAAM,CAAC,CAAC;;;;;;;MAOT,CAAC,EACAC,EAAE,CAAC,MAAMuD,SAASG,EAAE,EACpBzD,MAAM;QAET,IAAI2D,YAAY;YAAC,MAAMA;QAAW;QAElC,mCAAmC;QACnC,MAAMjE,SACHG,IAAI,CAAC,mBACLU,MAAM,CAAC;YACND,aAAagD,SAASG,EAAE;YACxBjG,QAAQ;YACRoG,aAAa;YACbC,aAAa,IAAI/E,OAAOE,WAAW;QACrC;QAEF,OAAOV,oBAAY,CAACC,IAAI,CACtB;YACEqB,MAAM8D;YACNV,SAAS;QACX,GACA;YAAExF,QAAQ;QAAI;IAGlB,EAAE,OAAOgB,OAAO;QACd+D,QAAQ/D,KAAK,CAAC,gCAAgCA;QAE9C,IAAIA,iBAAiB3D,MAAC,CAAC2H,QAAQ,EAAE;YAC/B,OAAOlE,oBAAY,CAACC,IAAI,CACtB;gBACEC,OAAO;gBACPiE,SAASjE,MAAMkE,MAAM,CAACC,MAAM,CAAC,CAACC,KAAKC;oBACjCD,GAAG,CAACC,IAAIC,IAAI,CAACC,IAAI,CAAC,KAAK,GAAG;wBAACF,IAAIG,OAAO;qBAAC;oBACvC,OAAOJ;gBACT,GAAG,CAAC;YACN,GACA;gBAAEpF,QAAQ;YAAI;QAElB;QAEA,OAAOc,oBAAY,CAACC,IAAI,CACtB;YACEC,OAAO;YACPiE,SAASjE,iBAAiByE,QAAQzE,MAAMwE,OAAO,GAAG;QACpD,GACA;YAAExF,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e2bead681600b296e33888b37278b56e3c68c98c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_9pglkml6o = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_9pglkml6o();
cov_9pglkml6o().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_9pglkml6o().f[0]++;
  cov_9pglkml6o().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_9pglkml6o().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_9pglkml6o().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_9pglkml6o().f[1]++;
    cov_9pglkml6o().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_9pglkml6o().f[2]++;
    cov_9pglkml6o().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_9pglkml6o().f[3]++;
    cov_9pglkml6o().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_9pglkml6o().s[7]++, require("next/server"));
const _config =
/* istanbul ignore next */
(cov_9pglkml6o().s[8]++, require("../../../../../lib/auth/config"));
const _server1 =
/* istanbul ignore next */
(cov_9pglkml6o().s[9]++, require("../../../../../lib/integrations/supabase/server"));
const _zod =
/* istanbul ignore next */
(cov_9pglkml6o().s[10]++, require("zod"));
const _logistics =
/* istanbul ignore next */
(cov_9pglkml6o().s[11]++, require("../../../../../types/logistics"));
const runtime =
/* istanbul ignore next */
(cov_9pglkml6o().s[12]++, 'nodejs');
// =====================================================
// SCHEMAS DE VALIDACIÃN ZOD
// =====================================================
const AddressSchema =
/* istanbul ignore next */
(cov_9pglkml6o().s[13]++, _zod.z.object({
  street: _zod.z.string().min(1, 'Calle es requerida'),
  number: _zod.z.string().min(1, 'NÃºmero es requerido'),
  apartment: _zod.z.string().optional(),
  neighborhood: _zod.z.string().min(1, 'Barrio es requerido'),
  city: _zod.z.string().min(1, 'Ciudad es requerida'),
  state: _zod.z.string().min(1, 'Provincia es requerida'),
  postal_code: _zod.z.string().min(4, 'CÃ³digo postal debe tener al menos 4 caracteres'),
  country: _zod.z.string().default('Argentina'),
  latitude: _zod.z.number().optional(),
  longitude: _zod.z.number().optional(),
  reference: _zod.z.string().optional()
}));
const CreateShipmentSchema =
/* istanbul ignore next */
(cov_9pglkml6o().s[14]++, _zod.z.object({
  order_id: _zod.z.number().positive('ID de orden debe ser positivo'),
  carrier_id: _zod.z.number().positive().optional(),
  shipping_service: _zod.z.nativeEnum(_logistics.ShippingService),
  items: _zod.z.array(_zod.z.object({
    order_item_id: _zod.z.number().positive().optional(),
    product_id: _zod.z.number().positive('ID de producto es requerido'),
    quantity: _zod.z.number().positive('Cantidad debe ser positiva'),
    weight_kg: _zod.z.number().positive().optional()
  })).min(1, 'Debe incluir al menos un item'),
  pickup_address: AddressSchema.optional(),
  delivery_address: AddressSchema,
  weight_kg: _zod.z.number().positive().optional(),
  dimensions_cm: _zod.z.string().regex(/^\d+x\d+x\d+$/, 'Formato debe ser LxWxH (ej: 30x20x15)').optional(),
  special_instructions: _zod.z.string().max(500).optional(),
  notes: _zod.z.string().max(1000).optional(),
  estimated_delivery_date: _zod.z.string().datetime().optional()
}));
const GetShipmentsSchema =
/* istanbul ignore next */
(cov_9pglkml6o().s[15]++, _zod.z.object({
  page: _zod.z.coerce.number().positive().default(1),
  limit: _zod.z.coerce.number().positive().max(100).default(20),
  status: _zod.z.nativeEnum(_logistics.ShipmentStatus).optional(),
  carrier: _zod.z.string().optional(),
  date_from: _zod.z.string().datetime().optional(),
  date_to: _zod.z.string().datetime().optional(),
  search: _zod.z.string().optional(),
  order_by: _zod.z.enum(['created_at', 'updated_at', 'estimated_delivery_date']).default('created_at'),
  order_direction: _zod.z.enum(['asc', 'desc']).default('desc')
}));
// =====================================================
// MIDDLEWARE DE AUTENTICACIÃN
// =====================================================
async function validateAdminAuth(request) {
  /* istanbul ignore next */
  cov_9pglkml6o().f[4]++;
  const session =
  /* istanbul ignore next */
  (cov_9pglkml6o().s[16]++, await (0, _config.auth)());
  /* istanbul ignore next */
  cov_9pglkml6o().s[17]++;
  if (!session?.user) {
    /* istanbul ignore next */
    cov_9pglkml6o().b[0][0]++;
    cov_9pglkml6o().s[18]++;
    return _server.NextResponse.json({
      error: 'Unauthorized'
    }, {
      status: 401
    });
  } else
  /* istanbul ignore next */
  {
    cov_9pglkml6o().b[0][1]++;
  }
  // Verificar rol de administrador usando el email
  const adminEmails =
  /* istanbul ignore next */
  (cov_9pglkml6o().s[19]++, ['santiago@xor.com.ar']);
  /* istanbul ignore next */
  cov_9pglkml6o().s[20]++;
  if (!adminEmails.includes(
  /* istanbul ignore next */
  (cov_9pglkml6o().b[2][0]++, session.user.email) ||
  /* istanbul ignore next */
  (cov_9pglkml6o().b[2][1]++, ''))) {
    /* istanbul ignore next */
    cov_9pglkml6o().b[1][0]++;
    cov_9pglkml6o().s[21]++;
    return _server.NextResponse.json({
      error: 'Insufficient permissions'
    }, {
      status: 403
    });
  } else
  /* istanbul ignore next */
  {
    cov_9pglkml6o().b[1][1]++;
  }
  cov_9pglkml6o().s[22]++;
  return null;
}
// =====================================================
// FUNCIONES AUXILIARES
// =====================================================
function generateShipmentNumber() {
  /* istanbul ignore next */
  cov_9pglkml6o().f[5]++;
  const date =
  /* istanbul ignore next */
  (cov_9pglkml6o().s[23]++, new Date());
  const dateStr =
  /* istanbul ignore next */
  (cov_9pglkml6o().s[24]++, date.toISOString().slice(0, 10).replace(/-/g, ''));
  const randomStr =
  /* istanbul ignore next */
  (cov_9pglkml6o().s[25]++, Math.random().toString(36).substring(2, 8).toUpperCase());
  /* istanbul ignore next */
  cov_9pglkml6o().s[26]++;
  return `SH${dateStr}${randomStr}`;
}
async function validateOrderExists(supabase, orderId) {
  /* istanbul ignore next */
  cov_9pglkml6o().f[6]++;
  const {
    data,
    error
  } =
  /* istanbul ignore next */
  (cov_9pglkml6o().s[27]++, await supabase.from('orders').select('id').eq('id', orderId).single());
  /* istanbul ignore next */
  cov_9pglkml6o().s[28]++;
  return /* istanbul ignore next */(cov_9pglkml6o().b[3][0]++, !error) &&
  /* istanbul ignore next */
  (cov_9pglkml6o().b[3][1]++, data);
}
async function createShipmentItems(supabase, shipmentId, items) {
  /* istanbul ignore next */
  cov_9pglkml6o().f[7]++;
  const shipmentItems =
  /* istanbul ignore next */
  (cov_9pglkml6o().s[29]++, items.map(item => {
    /* istanbul ignore next */
    cov_9pglkml6o().f[8]++;
    cov_9pglkml6o().s[30]++;
    return {
      shipment_id: shipmentId,
      order_item_id: item.order_item_id,
      product_id: item.product_id,
      quantity: item.quantity,
      weight_kg: item.weight_kg
    };
  }));
  const {
    error
  } =
  /* istanbul ignore next */
  (cov_9pglkml6o().s[31]++, await supabase.from('shipment_items').insert(shipmentItems));
  /* istanbul ignore next */
  cov_9pglkml6o().s[32]++;
  if (error) {
    /* istanbul ignore next */
    cov_9pglkml6o().b[4][0]++;
    cov_9pglkml6o().s[33]++;
    throw error;
  } else
  /* istanbul ignore next */
  {
    cov_9pglkml6o().b[4][1]++;
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_9pglkml6o().f[9]++;
  cov_9pglkml6o().s[34]++;
  try {
    // Validar autenticaciÃ³n
    const authError =
    /* istanbul ignore next */
    (cov_9pglkml6o().s[35]++, await validateAdminAuth(request));
    /* istanbul ignore next */
    cov_9pglkml6o().s[36]++;
    if (authError) {
      /* istanbul ignore next */
      cov_9pglkml6o().b[5][0]++;
      cov_9pglkml6o().s[37]++;
      return authError;
    } else
    /* istanbul ignore next */
    {
      cov_9pglkml6o().b[5][1]++;
    }
    // Parsear y validar query parameters
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_9pglkml6o().s[38]++, new URL(request.url));
    const queryParams =
    /* istanbul ignore next */
    (cov_9pglkml6o().s[39]++, Object.fromEntries(searchParams.entries()));
    const validatedParams =
    /* istanbul ignore next */
    (cov_9pglkml6o().s[40]++, GetShipmentsSchema.parse(queryParams));
    // Crear cliente Supabase
    const supabase =
    /* istanbul ignore next */
    (cov_9pglkml6o().s[41]++, await (0, _server1.createClient)());
    // Construir query base
    let query =
    /* istanbul ignore next */
    (cov_9pglkml6o().s[42]++, supabase.from('shipments').select(`
        *,
        carrier:couriers(id, name, code),
        items:shipment_items(
          id, quantity, weight_kg,
          product:products(id, name, slug, images)
        )
      `, {
      count: 'exact'
    }));
    // Aplicar filtros
    /* istanbul ignore next */
    cov_9pglkml6o().s[43]++;
    if (validatedParams.status) {
      /* istanbul ignore next */
      cov_9pglkml6o().b[6][0]++;
      cov_9pglkml6o().s[44]++;
      query = query.eq('status', validatedParams.status);
    } else
    /* istanbul ignore next */
    {
      cov_9pglkml6o().b[6][1]++;
    }
    cov_9pglkml6o().s[45]++;
    if (validatedParams.carrier) {
      /* istanbul ignore next */
      cov_9pglkml6o().b[7][0]++;
      cov_9pglkml6o().s[46]++;
      query = query.eq('couriers.code', validatedParams.carrier);
    } else
    /* istanbul ignore next */
    {
      cov_9pglkml6o().b[7][1]++;
    }
    cov_9pglkml6o().s[47]++;
    if (validatedParams.date_from) {
      /* istanbul ignore next */
      cov_9pglkml6o().b[8][0]++;
      cov_9pglkml6o().s[48]++;
      query = query.gte('created_at', validatedParams.date_from);
    } else
    /* istanbul ignore next */
    {
      cov_9pglkml6o().b[8][1]++;
    }
    cov_9pglkml6o().s[49]++;
    if (validatedParams.date_to) {
      /* istanbul ignore next */
      cov_9pglkml6o().b[9][0]++;
      cov_9pglkml6o().s[50]++;
      query = query.lte('created_at', validatedParams.date_to);
    } else
    /* istanbul ignore next */
    {
      cov_9pglkml6o().b[9][1]++;
    }
    cov_9pglkml6o().s[51]++;
    if (validatedParams.search) {
      /* istanbul ignore next */
      cov_9pglkml6o().b[10][0]++;
      cov_9pglkml6o().s[52]++;
      query = query.or(`
        shipment_number.ilike.%${validatedParams.search}%,
        tracking_number.ilike.%${validatedParams.search}%,
        order_id.eq.${isNaN(Number(validatedParams.search)) ?
      /* istanbul ignore next */
      (cov_9pglkml6o().b[11][0]++, 0) :
      /* istanbul ignore next */
      (cov_9pglkml6o().b[11][1]++, validatedParams.search)}
      `);
    } else
    /* istanbul ignore next */
    {
      cov_9pglkml6o().b[10][1]++;
    }
    // Aplicar ordenamiento
    cov_9pglkml6o().s[53]++;
    query = query.order(validatedParams.order_by, {
      ascending: validatedParams.order_direction === 'asc'
    });
    // Aplicar paginaciÃ³n
    const offset =
    /* istanbul ignore next */
    (cov_9pglkml6o().s[54]++, (validatedParams.page - 1) * validatedParams.limit);
    /* istanbul ignore next */
    cov_9pglkml6o().s[55]++;
    query = query.range(offset, offset + validatedParams.limit - 1);
    // Ejecutar query
    const {
      data: shipments,
      error,
      count
    } =
    /* istanbul ignore next */
    (cov_9pglkml6o().s[56]++, await query);
    /* istanbul ignore next */
    cov_9pglkml6o().s[57]++;
    if (error) {
      /* istanbul ignore next */
      cov_9pglkml6o().b[12][0]++;
      cov_9pglkml6o().s[58]++;
      throw error;
    } else
    /* istanbul ignore next */
    {
      cov_9pglkml6o().b[12][1]++;
    }
    // Construir respuesta paginada
    const totalPages =
    /* istanbul ignore next */
    (cov_9pglkml6o().s[59]++, Math.ceil((
    /* istanbul ignore next */
    (cov_9pglkml6o().b[13][0]++, count) ||
    /* istanbul ignore next */
    (cov_9pglkml6o().b[13][1]++, 0)) / validatedParams.limit));
    const response =
    /* istanbul ignore next */
    (cov_9pglkml6o().s[60]++, {
      data:
      /* istanbul ignore next */
      (cov_9pglkml6o().b[14][0]++, shipments) ||
      /* istanbul ignore next */
      (cov_9pglkml6o().b[14][1]++, []),
      pagination: {
        page: validatedParams.page,
        limit: validatedParams.limit,
        total:
        /* istanbul ignore next */
        (cov_9pglkml6o().b[15][0]++, count) ||
        /* istanbul ignore next */
        (cov_9pglkml6o().b[15][1]++, 0),
        total_pages: totalPages,
        has_next: validatedParams.page < totalPages,
        has_prev: validatedParams.page > 1
      }
    });
    /* istanbul ignore next */
    cov_9pglkml6o().s[61]++;
    return _server.NextResponse.json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_9pglkml6o().s[62]++;
    console.error('Error in GET shipments API:', error);
    /* istanbul ignore next */
    cov_9pglkml6o().s[63]++;
    if (error instanceof _zod.z.ZodError) {
      /* istanbul ignore next */
      cov_9pglkml6o().b[16][0]++;
      cov_9pglkml6o().s[64]++;
      return _server.NextResponse.json({
        error: 'Validation error',
        details: error.errors.reduce((acc, err) => {
          /* istanbul ignore next */
          cov_9pglkml6o().f[10]++;
          cov_9pglkml6o().s[65]++;
          acc[err.path.join('.')] = [err.message];
          /* istanbul ignore next */
          cov_9pglkml6o().s[66]++;
          return acc;
        }, {})
      }, {
        status: 422
      });
    } else
    /* istanbul ignore next */
    {
      cov_9pglkml6o().b[16][1]++;
    }
    cov_9pglkml6o().s[67]++;
    return _server.NextResponse.json({
      error: 'Internal server error',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_9pglkml6o().b[17][0]++, error.message) :
      /* istanbul ignore next */
      (cov_9pglkml6o().b[17][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_9pglkml6o().f[11]++;
  cov_9pglkml6o().s[68]++;
  try {
    // Validar autenticaciÃ³n
    const authError =
    /* istanbul ignore next */
    (cov_9pglkml6o().s[69]++, await validateAdminAuth(request));
    /* istanbul ignore next */
    cov_9pglkml6o().s[70]++;
    if (authError) {
      /* istanbul ignore next */
      cov_9pglkml6o().b[18][0]++;
      cov_9pglkml6o().s[71]++;
      return authError;
    } else
    /* istanbul ignore next */
    {
      cov_9pglkml6o().b[18][1]++;
    }
    // Parsear y validar body
    const body =
    /* istanbul ignore next */
    (cov_9pglkml6o().s[72]++, await request.json());
    const validatedData =
    /* istanbul ignore next */
    (cov_9pglkml6o().s[73]++, CreateShipmentSchema.parse(body));
    // Crear cliente Supabase
    const supabase =
    /* istanbul ignore next */
    (cov_9pglkml6o().s[74]++, await (0, _server1.createClient)());
    // Validar que la orden existe
    const orderExists =
    /* istanbul ignore next */
    (cov_9pglkml6o().s[75]++, await validateOrderExists(supabase, validatedData.order_id));
    /* istanbul ignore next */
    cov_9pglkml6o().s[76]++;
    if (!orderExists) {
      /* istanbul ignore next */
      cov_9pglkml6o().b[19][0]++;
      cov_9pglkml6o().s[77]++;
      return _server.NextResponse.json({
        error: 'Order not found'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_9pglkml6o().b[19][1]++;
    }
    // Generar nÃºmero de envÃ­o Ãºnico
    const shipmentNumber =
    /* istanbul ignore next */
    (cov_9pglkml6o().s[78]++, generateShipmentNumber());
    // Crear el envÃ­o
    const {
      data: shipment,
      error: shipmentError
    } =
    /* istanbul ignore next */
    (cov_9pglkml6o().s[79]++, await supabase.from('shipments').insert({
      shipment_number: shipmentNumber,
      order_id: validatedData.order_id,
      status: 'pending',
      carrier_id: validatedData.carrier_id,
      shipping_service: validatedData.shipping_service,
      pickup_address: validatedData.pickup_address,
      delivery_address: validatedData.delivery_address,
      weight_kg: validatedData.weight_kg,
      dimensions_cm: validatedData.dimensions_cm,
      special_instructions: validatedData.special_instructions,
      notes: validatedData.notes,
      estimated_delivery_date: validatedData.estimated_delivery_date
    }).select(`
        *,
        carrier:couriers(id, name, code)
      `).single());
    /* istanbul ignore next */
    cov_9pglkml6o().s[80]++;
    if (shipmentError) {
      /* istanbul ignore next */
      cov_9pglkml6o().b[20][0]++;
      cov_9pglkml6o().s[81]++;
      throw shipmentError;
    } else
    /* istanbul ignore next */
    {
      cov_9pglkml6o().b[20][1]++;
    }
    // Crear los items del envÃ­o
    cov_9pglkml6o().s[82]++;
    await createShipmentItems(supabase, shipment.id, validatedData.items);
    // Obtener el envÃ­o completo con items
    const {
      data: completeShipment,
      error: fetchError
    } =
    /* istanbul ignore next */
    (cov_9pglkml6o().s[83]++, await supabase.from('shipments').select(`
        *,
        carrier:couriers(id, name, code),
        items:shipment_items(
          id, quantity, weight_kg,
          product:products(id, name, slug, images)
        )
      `).eq('id', shipment.id).single());
    /* istanbul ignore next */
    cov_9pglkml6o().s[84]++;
    if (fetchError) {
      /* istanbul ignore next */
      cov_9pglkml6o().b[21][0]++;
      cov_9pglkml6o().s[85]++;
      throw fetchError;
    } else
    /* istanbul ignore next */
    {
      cov_9pglkml6o().b[21][1]++;
    }
    // Crear evento de tracking inicial
    cov_9pglkml6o().s[86]++;
    await supabase.from('tracking_events').insert({
      shipment_id: shipment.id,
      status: 'pending',
      description: 'EnvÃ­o creado y pendiente de confirmaciÃ³n',
      occurred_at: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_9pglkml6o().s[87]++;
    return _server.NextResponse.json({
      data: completeShipment,
      message: 'Shipment created successfully'
    }, {
      status: 201
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_9pglkml6o().s[88]++;
    console.error('Error in POST shipments API:', error);
    /* istanbul ignore next */
    cov_9pglkml6o().s[89]++;
    if (error instanceof _zod.z.ZodError) {
      /* istanbul ignore next */
      cov_9pglkml6o().b[22][0]++;
      cov_9pglkml6o().s[90]++;
      return _server.NextResponse.json({
        error: 'Validation error',
        details: error.errors.reduce((acc, err) => {
          /* istanbul ignore next */
          cov_9pglkml6o().f[12]++;
          cov_9pglkml6o().s[91]++;
          acc[err.path.join('.')] = [err.message];
          /* istanbul ignore next */
          cov_9pglkml6o().s[92]++;
          return acc;
        }, {})
      }, {
        status: 422
      });
    } else
    /* istanbul ignore next */
    {
      cov_9pglkml6o().b[22][1]++;
    }
    cov_9pglkml6o().s[93]++;
    return _server.NextResponse.json({
      error: 'Internal server error',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_9pglkml6o().b[23][0]++, error.message) :
      /* istanbul ignore next */
      (cov_9pglkml6o().b[23][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,