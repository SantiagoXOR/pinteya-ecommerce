{"version":3,"names":["cov_s4dcxd97t","actualCoverage","s","ClientErrorSuppression","f","ErrorSuppressionWrapper","useClientErrorSuppression","_react","useEffect","suppressedErrorPatterns","shouldSuppressError","message","some","pattern","toLowerCase","includes","originalConsoleError","console","error","originalConsoleWarn","warn","args","join","b","process","env","NODE_ENV","debug","handleUnhandledRejection","event","reason","handleError","originalFetch","window","fetch","addEventListener","log","removeEventListener","suppressedPatterns","originalError","children","_jsxruntime","jsxs","Fragment","jsx"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ErrorSuppression\\ClientErrorSuppression.tsx"],"sourcesContent":["// ===================================\r\n// COMPONENT: Client Error Suppression\r\n// ===================================\r\n\r\n'use client';\r\n\r\nimport { useEffect } from 'react';\r\n\r\n/**\r\n * Componente que configura la supresión de errores en el cliente\r\n */\r\nexport function ClientErrorSuppression() {\r\n  useEffect(() => {\r\n    // Lista de patrones de errores a suprimir (más completa)\r\n    const suppressedErrorPatterns = [\r\n      'ERR_ABORTED',\r\n      'AbortError',\r\n      'The user aborted a request',\r\n      'Request was aborted',\r\n      'net::ERR_ABORTED',\r\n      'Failed to fetch',\r\n      'NetworkError when attempting to fetch resource',\r\n      'Load failed',\r\n      'Connection was aborted',\r\n      'The operation was aborted',\r\n      'Request timeout',\r\n      'ERR_NETWORK',\r\n      'ERR_INTERNET_DISCONNECTED',\r\n      'ERR_CONNECTION_REFUSED',\r\n      'ERR_CONNECTION_RESET',\r\n      'ERR_CONNECTION_ABORTED',\r\n      'NETWORK_ERROR',\r\n      'fetch aborted',\r\n      'request aborted',\r\n      'cancelled'\r\n    ];\r\n\r\n    // Función para verificar si un error debe ser suprimido\r\n    const shouldSuppressError = (message: string): boolean => {\r\n      return suppressedErrorPatterns.some(pattern => \r\n        message.toLowerCase().includes(pattern.toLowerCase())\r\n      );\r\n    };\r\n\r\n    // Interceptar console.error\r\n    const originalConsoleError = console.error;\r\n    const originalConsoleWarn = console.warn;\r\n\r\n    console.error = (...args: any[]) => {\r\n      const message = args.join(' ');\r\n      \r\n      if (shouldSuppressError(message)) {\r\n        // En desarrollo, mostrar como debug\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.debug('🔇 [Client Suppressed Error]:', ...args);\r\n        }\r\n        return;\r\n      }\r\n      \r\n      // Permitir otros errores\r\n      originalConsoleError(...args);\r\n    };\r\n\r\n    console.warn = (...args: any[]) => {\r\n      const message = args.join(' ');\r\n      \r\n      if (shouldSuppressError(message)) {\r\n        // En desarrollo, mostrar como debug\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.debug('🔇 [Client Suppressed Warning]:', ...args);\r\n        }\r\n        return;\r\n      }\r\n      \r\n      // Permitir otros warnings\r\n      originalConsoleWarn(...args);\r\n    };\r\n\r\n    // TEMPORALMENTE DESHABILITADO PARA DEBUG\r\n    // Interceptar unhandled promise rejections\r\n    const handleUnhandledRejection = (event: PromiseRejectionEvent) => {\r\n      const reason = event.reason;\r\n      \r\n      // COMENTADO TEMPORALMENTE PARA VER ERRORES REALES\r\n      /*\r\n      if (reason?.name === 'AbortError' || \r\n          reason?.code === 'ERR_ABORTED' ||\r\n          (reason?.message && shouldSuppressError(reason.message))) {\r\n        \r\n        // Prevenir que aparezca en la consola\r\n        event.preventDefault();\r\n        \r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.debug('🔇 [Client Suppressed Unhandled Rejection]:', reason);\r\n        }\r\n      }\r\n      */\r\n    };\r\n\r\n    // TEMPORALMENTE DESHABILITADO PARA DEBUG\r\n    // Interceptar errores globales\r\n    const handleError = (event: ErrorEvent) => {\r\n      // COMENTADO TEMPORALMENTE PARA VER ERRORES REALES\r\n      /*\r\n      if (event.message && shouldSuppressError(event.message)) {\r\n        event.preventDefault();\r\n        \r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.debug('🔇 [Client Suppressed Global Error]:', event.message);\r\n        }\r\n      }\r\n      */\r\n    };\r\n\r\n    // TEMPORALMENTE DESHABILITADO PARA DEBUG\r\n    // Interceptar fetch para suprimir errores ERR_ABORTED\r\n    const originalFetch = window.fetch;\r\n    /*\r\n    window.fetch = async (...args) => {\r\n      try {\r\n        return await originalFetch(...args);\r\n      } catch (error: any) {\r\n        // Suprimir errores de abort en fetch\r\n        if (error?.name === 'AbortError' || \r\n            error?.code === 'ERR_ABORTED' ||\r\n            shouldSuppressError(error?.message || '')) {\r\n          \r\n          if (process.env.NODE_ENV === 'development') {\r\n            console.debug('🔇 [Client Suppressed Fetch Error]:', error);\r\n          }\r\n          \r\n          // Re-throw el error pero sin que aparezca en la consola\r\n          const suppressedError = new Error('Request was aborted');\r\n          suppressedError.name = 'AbortError';\r\n          throw suppressedError;\r\n        }\r\n        throw error;\r\n      }\r\n    };\r\n    */\r\n\r\n    // Agregar event listeners\r\n    window.addEventListener('unhandledrejection', handleUnhandledRejection);\r\n    window.addEventListener('error', handleError);\r\n\r\n    // Log de configuración\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log('🔇 Client error suppression configured');\r\n    }\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      // Restaurar funciones originales\r\n      console.error = originalConsoleError;\r\n      console.warn = originalConsoleWarn;\r\n      window.fetch = originalFetch;\r\n      \r\n      // Remover event listeners\r\n      window.removeEventListener('unhandledrejection', handleUnhandledRejection);\r\n      window.removeEventListener('error', handleError);\r\n    };\r\n  }, []);\r\n\r\n  return null; // Este componente no renderiza nada\r\n}\r\n\r\n/**\r\n * Hook para configurar supresión de errores\r\n */\r\nexport function useClientErrorSuppression() {\r\n  useEffect(() => {\r\n    // Configuración básica de supresión de errores\r\n    const suppressedPatterns = ['ERR_ABORTED', 'AbortError'];\r\n    \r\n    const originalError = console.error;\r\n    console.error = (...args) => {\r\n      const message = args.join(' ');\r\n      if (suppressedPatterns.some(pattern => message.includes(pattern))) {\r\n        return; // Suprimir\r\n      }\r\n      originalError(...args);\r\n    };\r\n\r\n    return () => {\r\n      console.error = originalError;\r\n    };\r\n  }, []);\r\n}\r\n\r\n/**\r\n * Componente wrapper que aplica supresión de errores a sus hijos\r\n */\r\nexport function ErrorSuppressionWrapper({ children }: { children: React.ReactNode }) {\r\n  return (\r\n    <>\r\n      <ClientErrorSuppression />\r\n      {children}\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}