{"version":3,"names":["cov_33x61pqnv","actualCoverage","s","SearchAutocomplete","f","searchAutocompleteVariants","_classvarianceauthority","cva","variants","size","sm","md","lg","defaultVariants","defaultTrendingSearches","id","type","title","href","_react","forwardRef","className","onSearch","onSuggestionSelect","showRecentSearches","b","showTrendingSearches","maxSuggestions","debounceMs","placeholder","query","externalQuery","suggestions","externalSuggestions","isLoading","externalIsLoading","error","externalError","searchWithDebounce","externalSearchWithDebounce","onClear","externalOnClear","props","ref","trendingSearches","trackSearch","_useTrendingSearches","useTrendingSearches","limit","enabled","recentSearches","addSearch","addRecentSearch","getRecentSearches","_useRecentSearches","useRecentSearches","maxSearches","_shop","SEARCH_CONSTANTS","MAX_RECENT_SEARCHES","enablePersistence","expirationDays","RECENT_SEARCHES_EXPIRATION_DAYS","internalQuery","setInternalQuery","useState","internalSuggestions","setInternalSuggestions","internalIsLoading","setInternalIsLoading","isOpen","setIsOpen","selectedIndex","setSelectedIndex","undefined","router","_navigation","useRouter","inputRef","useRef","dropdownRef","debounceRef","searchProductsDebounced","useCallback","searchQuery","trim","response","_products","searchProducts","success","data","productSuggestions","map","product","name","subtitle","category","image","images","previews","thumbnails","badge","stock","slice","console","handleInputChange","e","value","target","current","clearTimeout","setTimeout","handleFocus","defaultSuggestions","length","push","search","index","encodeURIComponent","trendingSuggestions","trending","count","handleSuggestionSelect","suggestion","catch","warn","handleSubmit","preventDefault","handleKeyDown","key","prev","useEffect","handleClickOutside","event","contains","document","addEventListener","removeEventListener","getSuggestionIcon","_jsxruntime","jsx","_lucidereact","Clock","TrendingUp","Package","Search","_utils","cn","jsxs","onChange","onFocus","onKeyDown","autoComplete","onClick","focus","X","style","backgroundColor","role","some","filter","onMouseEnter","indexOf","_image","default","src","alt","width","height","_badge","Badge","variant","displayName"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\search-autocomplete.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Search, X, Clock, TrendingUp, Package } from \"lucide-react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { searchProducts } from \"@/lib/api/products\";\r\nimport { ProductWithCategory } from \"@/types/api\";\r\nimport { Badge } from \"./badge\";\r\nimport { Button } from \"./button\";\r\nimport Image from \"next/image\";\r\nimport { useTrendingSearches } from \"@/hooks/useTrendingSearches\";\r\nimport { useRecentSearches } from \"@/hooks/useRecentSearches\";\r\nimport { SEARCH_CONSTANTS } from \"@/constants/shop\";\r\n\r\nconst searchAutocompleteVariants = cva(\r\n  \"relative w-full\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        sm: \"text-sm\",\r\n        md: \"text-base\",\r\n        lg: \"text-lg\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"md\",\r\n    },\r\n  }\r\n);\r\n\r\nexport interface SearchSuggestion {\r\n  id: string;\r\n  type: 'product' | 'category' | 'recent' | 'trending';\r\n  title: string;\r\n  subtitle?: string;\r\n  image?: string;\r\n  badge?: string;\r\n  href: string;\r\n}\r\n\r\nexport interface SearchAutocompleteProps\r\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'size'>,\r\n    VariantProps<typeof searchAutocompleteVariants> {\r\n  onSearch?: (query: string) => void;\r\n  onSuggestionSelect?: (suggestion: SearchSuggestion) => void;\r\n  showRecentSearches?: boolean;\r\n  showTrendingSearches?: boolean;\r\n  maxSuggestions?: number;\r\n  debounceMs?: number;\r\n  // Props opcionales para integración con hooks externos\r\n  query?: string;\r\n  suggestions?: SearchSuggestion[];\r\n  isLoading?: boolean;\r\n  error?: string | null;\r\n  searchWithDebounce?: (query: string) => void;\r\n  onClear?: () => void;\r\n}\r\n\r\n// Búsquedas trending por defecto para pinturería\r\nconst defaultTrendingSearches: SearchSuggestion[] = [\r\n  {\r\n    id: \"trending-1\",\r\n    type: \"trending\",\r\n    title: \"Pintura látex\",\r\n    href: \"/shop?search=pintura+latex\",\r\n  },\r\n  {\r\n    id: \"trending-2\", \r\n    type: \"trending\",\r\n    title: \"Sherwin Williams\",\r\n    href: \"/shop?search=sherwin+williams\",\r\n  },\r\n  {\r\n    id: \"trending-3\",\r\n    type: \"trending\", \r\n    title: \"Rodillos premium\",\r\n    href: \"/shop?search=rodillos+premium\",\r\n  },\r\n  {\r\n    id: \"trending-4\",\r\n    type: \"trending\",\r\n    title: \"Pinceles\",\r\n    href: \"/shop?search=pinceles\",\r\n  },\r\n];\r\n\r\nconst SearchAutocomplete = React.forwardRef<HTMLInputElement, SearchAutocompleteProps>(\r\n  ({\r\n    className,\r\n    size,\r\n    onSearch,\r\n    onSuggestionSelect,\r\n    showRecentSearches = true,\r\n    showTrendingSearches = true,\r\n    maxSuggestions = 8,\r\n    debounceMs = 300,\r\n    placeholder = \"Látex interior blanco 20lts, rodillos, pinceles...\",\r\n    // Props opcionales para integración con hooks externos\r\n    query: externalQuery,\r\n    suggestions: externalSuggestions,\r\n    isLoading: externalIsLoading,\r\n    error: externalError,\r\n    searchWithDebounce: externalSearchWithDebounce,\r\n    onClear: externalOnClear,\r\n    ...props\r\n  }, ref) => {\r\n\r\n    // Hook para obtener búsquedas trending reales\r\n    const { trendingSearches, trackSearch } = useTrendingSearches({\r\n      limit: 4,\r\n      enabled: showTrendingSearches\r\n    });\r\n\r\n    // Hook para gestionar búsquedas recientes\r\n    const {\r\n      recentSearches,\r\n      addSearch: addRecentSearch,\r\n      getRecentSearches\r\n    } = useRecentSearches({\r\n      maxSearches: SEARCH_CONSTANTS.MAX_RECENT_SEARCHES,\r\n      enablePersistence: showRecentSearches,\r\n      expirationDays: SEARCH_CONSTANTS.RECENT_SEARCHES_EXPIRATION_DAYS\r\n    });\r\n    // Estado interno (usado solo si no hay props externas)\r\n    const [internalQuery, setInternalQuery] = useState(\"\");\r\n    const [internalSuggestions, setInternalSuggestions] = useState<SearchSuggestion[]>([]);\r\n    const [internalIsLoading, setInternalIsLoading] = useState(false);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [selectedIndex, setSelectedIndex] = useState(-1);\r\n\r\n    // Usar props externas si están disponibles, sino usar estado interno\r\n    const query = externalQuery !== undefined ? externalQuery : internalQuery;\r\n    const suggestions = externalSuggestions !== undefined ? externalSuggestions : internalSuggestions;\r\n    const isLoading = externalIsLoading !== undefined ? externalIsLoading : internalIsLoading;\r\n    const error = externalError;\r\n    \r\n    const router = useRouter();\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const dropdownRef = useRef<HTMLDivElement>(null);\r\n    const debounceRef = useRef<NodeJS.Timeout>();\r\n\r\n    // Buscar productos con debounce\r\n    const searchProductsDebounced = useCallback(async (searchQuery: string) => {\r\n      // No ejecutar si hay props externas\r\n      if (externalSuggestions !== undefined) {\r\n        return;\r\n      }\r\n\r\n      if (!searchQuery.trim()) {\r\n        setInternalSuggestions([]);\r\n        return;\r\n      }\r\n\r\n      setInternalIsLoading(true);\r\n      \r\n      try {\r\n        const response = await searchProducts(searchQuery, 6);\r\n        \r\n        if (response.success && response.data) {\r\n          const productSuggestions: SearchSuggestion[] = response.data.map(product => ({\r\n            id: `product-${product.id}`,\r\n            type: 'product',\r\n            title: product.name,\r\n            subtitle: product.category?.name,\r\n            image: product.images?.previews?.[0] || product.images?.thumbnails?.[0] || '/images/products/placeholder.jpg',\r\n            badge: product.stock > 0 ? 'En stock' : 'Sin stock',\r\n            href: `/product/${product.id}`,\r\n          }));\r\n\r\n          setInternalSuggestions(productSuggestions.slice(0, maxSuggestions));\r\n        }\r\n      } catch (error) {\r\n        console.error('Error searching products:', error);\r\n        setInternalSuggestions([]);\r\n      } finally {\r\n        setInternalIsLoading(false);\r\n      }\r\n    }, [maxSuggestions, externalSuggestions]);\r\n\r\n    // Manejar cambio en el input\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      const value = e.target.value;\r\n\r\n      // Si hay función externa de búsqueda, usarla\r\n      if (externalSearchWithDebounce) {\r\n        externalSearchWithDebounce(value);\r\n      } else {\r\n        // Usar lógica interna\r\n        setInternalQuery(value);\r\n        setSelectedIndex(-1);\r\n\r\n        // Limpiar debounce anterior\r\n        if (debounceRef.current) {\r\n          clearTimeout(debounceRef.current);\r\n        }\r\n\r\n        // Configurar nuevo debounce\r\n        debounceRef.current = setTimeout(() => {\r\n          searchProductsDebounced(value);\r\n        }, debounceMs);\r\n      }\r\n    };\r\n\r\n    // Mostrar sugerencias por defecto cuando se enfoca\r\n    const handleFocus = () => {\r\n      setIsOpen(true);\r\n\r\n      if (!query.trim() && !externalSuggestions) {\r\n        // Solo mostrar sugerencias por defecto si no hay props externas\r\n        const defaultSuggestions: SearchSuggestion[] = [];\r\n\r\n        // Agregar búsquedas recientes\r\n        if (showRecentSearches && recentSearches.length > 0) {\r\n          defaultSuggestions.push(\r\n            ...getRecentSearches(3).map((search, index) => ({\r\n              id: `recent-${index}`,\r\n              type: 'recent' as const,\r\n              title: search,\r\n              href: `/search?q=${encodeURIComponent(search)}`,\r\n            }))\r\n          );\r\n        }\r\n\r\n        // Agregar búsquedas trending reales\r\n        if (showTrendingSearches && trendingSearches.length > 0) {\r\n          const trendingSuggestions: SearchSuggestion[] = trendingSearches.map(trending => ({\r\n            id: trending.id,\r\n            type: 'trending' as const,\r\n            title: trending.query,\r\n            href: trending.href,\r\n            badge: trending.count ? `${trending.count}` : undefined\r\n          }));\r\n          defaultSuggestions.push(...trendingSuggestions.slice(0, 4));\r\n        }\r\n\r\n        setInternalSuggestions(defaultSuggestions.slice(0, maxSuggestions));\r\n      }\r\n    };\r\n\r\n    // Manejar selección de sugerencia\r\n    const handleSuggestionSelect = (suggestion: SearchSuggestion) => {\r\n      if (suggestion.type === 'product' || suggestion.type === 'category') {\r\n        addRecentSearch(suggestion.title);\r\n      }\r\n\r\n      // Registrar búsquedas trending y recientes en analytics\r\n      if (suggestion.type === 'trending' || suggestion.type === 'recent') {\r\n        trackSearch(suggestion.title).catch(console.warn);\r\n      }\r\n\r\n      // Solo actualizar query interna si no hay query externa\r\n      if (externalQuery === undefined) {\r\n        setInternalQuery(suggestion.title);\r\n      }\r\n      setIsOpen(false);\r\n\r\n      if (onSuggestionSelect) {\r\n        onSuggestionSelect(suggestion);\r\n      } else {\r\n        router.push(suggestion.href);\r\n      }\r\n    };\r\n\r\n    // Manejar envío del formulario\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n      e.preventDefault();\r\n\r\n      if (query.trim()) {\r\n        addRecentSearch(query.trim());\r\n        setIsOpen(false);\r\n\r\n        // Registrar búsqueda en analytics para trending\r\n        trackSearch(query.trim()).catch(console.warn);\r\n\r\n        if (onSearch) {\r\n          onSearch(query.trim());\r\n        } else {\r\n          router.push(`/search?q=${encodeURIComponent(query.trim())}`);\r\n        }\r\n      }\r\n    };\r\n\r\n    // Manejar teclas\r\n    const handleKeyDown = (e: React.KeyboardEvent) => {\r\n      if (!isOpen) {return;}\r\n\r\n      switch (e.key) {\r\n        case 'ArrowDown':\r\n          e.preventDefault();\r\n          setSelectedIndex(prev => \r\n            prev < suggestions.length - 1 ? prev + 1 : prev\r\n          );\r\n          break;\r\n        case 'ArrowUp':\r\n          e.preventDefault();\r\n          setSelectedIndex(prev => prev > 0 ? prev - 1 : -1);\r\n          break;\r\n        case 'Enter':\r\n          e.preventDefault();\r\n          if (selectedIndex >= 0 && suggestions[selectedIndex]) {\r\n            handleSuggestionSelect(suggestions[selectedIndex]);\r\n          } else {\r\n            handleSubmit(e);\r\n          }\r\n          break;\r\n        case 'Escape':\r\n          setIsOpen(false);\r\n          setSelectedIndex(-1);\r\n          break;\r\n      }\r\n    };\r\n\r\n    // Cerrar dropdown al hacer click fuera\r\n    useEffect(() => {\r\n      const handleClickOutside = (event: MouseEvent) => {\r\n        if (\r\n          dropdownRef.current &&\r\n          !dropdownRef.current.contains(event.target as Node) &&\r\n          inputRef.current &&\r\n          !inputRef.current.contains(event.target as Node)\r\n        ) {\r\n          setIsOpen(false);\r\n        }\r\n      };\r\n\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n      return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    }, []);\r\n\r\n    // Limpiar debounce al desmontar\r\n    useEffect(() => {\r\n      return () => {\r\n        if (debounceRef.current) {\r\n          clearTimeout(debounceRef.current);\r\n        }\r\n      };\r\n    }, []);\r\n\r\n    const getSuggestionIcon = (type: SearchSuggestion['type']) => {\r\n      switch (type) {\r\n        case 'recent':\r\n          return <Clock className=\"w-4 h-4 text-gray-400\" />;\r\n        case 'trending':\r\n          return <TrendingUp className=\"w-4 h-4 text-fun-green-600\" />;\r\n        case 'product':\r\n          return <Package className=\"w-4 h-4 text-gray-600\" />;\r\n        default:\r\n          return <Search className=\"w-4 h-4 text-gray-400\" />;\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className={cn(searchAutocompleteVariants({ size }), className)}>\r\n        <div className=\"relative\">\r\n          <div className=\"relative\">\r\n            <input\r\n              ref={inputRef}\r\n              type=\"search\"\r\n              value={query}\r\n              onChange={handleInputChange}\r\n              onFocus={handleFocus}\r\n              onKeyDown={handleKeyDown}\r\n              placeholder={placeholder}\r\n              autoComplete=\"off\"\r\n              data-testid=\"search-input\"\r\n              className={cn(\r\n                \"w-full rounded-r-[5px] bg-yellow-100 border border-gray-3 py-2.5 pl-4 pr-10 outline-none transition-all duration-200\",\r\n                \"focus:border-primary/50 focus:ring-2 focus:ring-primary/20\",\r\n                \"placeholder:text-gray-400 placeholder:font-normal\",\r\n                size === \"sm\" && \"py-2 text-sm\",\r\n                size === \"lg\" && \"py-3 text-lg\"\r\n              )}\r\n              {...props}\r\n            />\r\n            \r\n            {/* Search Icon */}\r\n            <div className=\"absolute right-3 top-1/2 -translate-y-1/2 flex items-center gap-2\">\r\n              {query && (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    if (externalOnClear) {\r\n                      externalOnClear();\r\n                    } else {\r\n                      setInternalQuery(\"\");\r\n                      setInternalSuggestions([]);\r\n                    }\r\n                    inputRef.current?.focus();\r\n                  }}\r\n                  className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n                  aria-label=\"Clear search\"\r\n                >\r\n                  <X className=\"w-4 h-4\" />\r\n                </button>\r\n              )}\r\n              <button\r\n                type=\"submit\"\r\n                className=\"text-gray-500 hover:text-primary transition-colors\"\r\n                aria-label=\"Search\"\r\n              >\r\n                <Search className=\"w-4 h-4\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Dropdown de sugerencias */}\r\n          {isOpen && (\r\n            <div\r\n              ref={dropdownRef}\r\n              className=\"absolute top-full left-0 right-0 z-50 mt-1 rounded-md shadow-lg max-h-96 overflow-y-auto\"\r\n              style={{ backgroundColor: '#fff3c5' }}\r\n              role=\"listbox\"\r\n              aria-label=\"Search suggestions\"\r\n            >\r\n              {isLoading && (\r\n                <div className=\"p-4 text-center text-gray-500\">\r\n                  <div className=\"animate-spin w-5 h-5 border-2 border-primary border-t-transparent rounded-full mx-auto mb-2\"></div>\r\n                  Buscando...\r\n                </div>\r\n              )}\r\n\r\n              {!isLoading && suggestions.length === 0 && query.trim() && (\r\n                <div className=\"p-4 text-center text-gray-500\">\r\n                  No se encontraron resultados para \"{query}\"\r\n                </div>\r\n              )}\r\n\r\n              {!isLoading && suggestions.length > 0 && (\r\n                <div className=\"py-2\">\r\n                  {/* Secciones de sugerencias */}\r\n                  {showRecentSearches && suggestions.some(s => s.type === 'recent') && (\r\n                    <div className=\"px-3 py-2\">\r\n                      <h4 className=\"text-xs font-medium text-fun-green-700 uppercase tracking-wide mb-2\">\r\n                        Búsquedas recientes\r\n                      </h4>\r\n                      {suggestions\r\n                        .filter(s => s.type === 'recent')\r\n                        .map((suggestion, index) => (\r\n                          <button\r\n                            key={suggestion.id}\r\n                            onClick={() => handleSuggestionSelect(suggestion)}\r\n                            onMouseEnter={() => setSelectedIndex(suggestions.indexOf(suggestion))}\r\n                            className={cn(\r\n                              \"w-full flex items-center gap-3 px-3 py-2 text-left hover:bg-white/50 hover:border-l-2 hover:border-fun-green-500 rounded-md transition-all duration-200\",\r\n                              selectedIndex === suggestions.indexOf(suggestion) && \"bg-white/70 border-l-2 border-fun-green-600\"\r\n                            )}\r\n                            role=\"option\"\r\n                            aria-selected={selectedIndex === suggestions.indexOf(suggestion)}\r\n                          >\r\n                            {getSuggestionIcon(suggestion.type)}\r\n                            <span className=\"text-sm text-gray-700\">{suggestion.title}</span>\r\n                          </button>\r\n                        ))}\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Productos */}\r\n                  {suggestions.some(s => s.type === 'product') && (\r\n                    <div className=\"px-3 py-2\">\r\n                      <h4 className=\"text-xs font-medium text-fun-green-700 uppercase tracking-wide mb-2\">\r\n                        Productos\r\n                      </h4>\r\n                      {suggestions\r\n                        .filter(s => s.type === 'product')\r\n                        .map((suggestion, index) => (\r\n                          <button\r\n                            key={suggestion.id}\r\n                            onClick={() => handleSuggestionSelect(suggestion)}\r\n                            onMouseEnter={() => setSelectedIndex(suggestions.indexOf(suggestion))}\r\n                            className={cn(\r\n                              \"w-full flex items-center gap-3 px-3 py-2 text-left hover:bg-white/50 hover:border-l-2 hover:border-fun-green-500 rounded-md transition-all duration-200\",\r\n                              selectedIndex === suggestions.indexOf(suggestion) && \"bg-white/70 border-l-2 border-fun-green-600\"\r\n                            )}\r\n                            role=\"option\"\r\n                            aria-selected={selectedIndex === suggestions.indexOf(suggestion)}\r\n                          >\r\n                            {suggestion.image ? (\r\n                              <div className=\"w-8 h-8 rounded-md overflow-hidden bg-gray-100 flex-shrink-0\">\r\n                                <Image\r\n                                  src={suggestion.image}\r\n                                  alt={suggestion.title}\r\n                                  width={32}\r\n                                  height={32}\r\n                                  className=\"w-full h-full object-cover\"\r\n                                />\r\n                              </div>\r\n                            ) : (\r\n                              getSuggestionIcon(suggestion.type)\r\n                            )}\r\n                            <div className=\"flex-1 min-w-0\">\r\n                              <div className=\"text-sm font-medium text-gray-900 truncate\">\r\n                                {suggestion.title}\r\n                              </div>\r\n                              {suggestion.subtitle && (\r\n                                <div className=\"text-xs text-fun-green-600 truncate font-medium\">\r\n                                  {suggestion.subtitle}\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                            {suggestion.badge && (\r\n                              <Badge variant=\"secondary\" size=\"sm\">\r\n                                {suggestion.badge}\r\n                              </Badge>\r\n                            )}\r\n                          </button>\r\n                        ))}\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Trending */}\r\n                  {showTrendingSearches && suggestions.some(s => s.type === 'trending') && !query.trim() && (\r\n                    <div className=\"px-3 py-2\">\r\n                      <h4 className=\"text-xs font-medium text-fun-green-700 uppercase tracking-wide mb-2\">\r\n                        Búsquedas populares\r\n                      </h4>\r\n                      {suggestions\r\n                        .filter(s => s.type === 'trending')\r\n                        .map((suggestion, index) => (\r\n                          <button\r\n                            key={suggestion.id}\r\n                            onClick={() => handleSuggestionSelect(suggestion)}\r\n                            onMouseEnter={() => setSelectedIndex(suggestions.indexOf(suggestion))}\r\n                            className={cn(\r\n                              \"w-full flex items-center gap-3 px-3 py-2 text-left hover:bg-white/50 hover:border-l-2 hover:border-fun-green-500 rounded-md transition-all duration-200\",\r\n                              selectedIndex === suggestions.indexOf(suggestion) && \"bg-white/70 border-l-2 border-fun-green-600\"\r\n                            )}\r\n                            role=\"option\"\r\n                            aria-selected={selectedIndex === suggestions.indexOf(suggestion)}\r\n                          >\r\n                            {getSuggestionIcon(suggestion.type)}\r\n                            <span className=\"text-sm text-gray-700\">{suggestion.title}</span>\r\n                          </button>\r\n                        ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nSearchAutocomplete.displayName = \"SearchAutocomplete\";\r\n\r\nexport { SearchAutocomplete, searchAutocompleteVariants };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}