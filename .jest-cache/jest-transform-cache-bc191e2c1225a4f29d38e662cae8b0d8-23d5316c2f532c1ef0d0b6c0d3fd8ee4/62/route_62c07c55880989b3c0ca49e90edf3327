808e60df5c58cfc1cf7c24cf49808fae
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_1bys3teigz() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\security\\monitor\\route.ts";
  var hash = "42dda13cee6fa8a4a9d5d8be8ef79fb1b4ee3c4d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\security\\monitor\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 20
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 23
        }
      },
      "8": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "9": {
        start: {
          line: 27,
          column: 25
        },
        end: {
          line: 27,
          column: 77
        }
      },
      "10": {
        start: {
          line: 28,
          column: 20
        },
        end: {
          line: 28,
          column: 67
        }
      },
      "11": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 60
        }
      },
      "12": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 24
        }
      },
      "13": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 84,
          column: 5
        }
      },
      "14": {
        start: {
          line: 33,
          column: 33
        },
        end: {
          line: 33,
          column: 53
        }
      },
      "15": {
        start: {
          line: 34,
          column: 26
        },
        end: {
          line: 34,
          column: 64
        }
      },
      "16": {
        start: {
          line: 35,
          column: 30
        },
        end: {
          line: 35,
          column: 74
        }
      },
      "17": {
        start: {
          line: 37,
          column: 22
        },
        end: {
          line: 37,
          column: 71
        }
      },
      "18": {
        start: {
          line: 39,
          column: 25
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "19": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "20": {
        start: {
          line: 49,
          column: 33
        },
        end: {
          line: 57,
          column: 19
        }
      },
      "21": {
        start: {
          line: 50,
          column: 27
        },
        end: {
          line: 57,
          column: 17
        }
      },
      "22": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 54
        }
      },
      "23": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 65,
          column: 11
        }
      },
      "24": {
        start: {
          line: 66,
          column: 23
        },
        end: {
          line: 66,
          column: 52
        }
      },
      "25": {
        start: {
          line: 67,
          column: 28
        },
        end: {
          line: 67,
          column: 81
        }
      },
      "26": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 70,
          column: 11
        }
      },
      "27": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 74,
          column: 11
        }
      },
      "28": {
        start: {
          line: 75,
          column: 23
        },
        end: {
          line: 75,
          column: 52
        }
      },
      "29": {
        start: {
          line: 76,
          column: 28
        },
        end: {
          line: 76,
          column: 81
        }
      },
      "30": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 83,
          column: 11
        }
      },
      "31": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 138,
          column: 5
        }
      },
      "32": {
        start: {
          line: 88,
          column: 21
        },
        end: {
          line: 88,
          column: 41
        }
      },
      "33": {
        start: {
          line: 89,
          column: 70
        },
        end: {
          line: 89,
          column: 74
        }
      },
      "34": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "35": {
        start: {
          line: 92,
          column: 27
        },
        end: {
          line: 92,
          column: 56
        }
      },
      "36": {
        start: {
          line: 93,
          column: 32
        },
        end: {
          line: 93,
          column: 85
        }
      },
      "37": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 100,
          column: 15
        }
      },
      "38": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 110,
          column: 11
        }
      },
      "39": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 116,
          column: 11
        }
      },
      "40": {
        start: {
          line: 117,
          column: 23
        },
        end: {
          line: 117,
          column: 52
        }
      },
      "41": {
        start: {
          line: 118,
          column: 28
        },
        end: {
          line: 118,
          column: 81
        }
      },
      "42": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 124,
          column: 11
        }
      },
      "43": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 128,
          column: 11
        }
      },
      "44": {
        start: {
          line: 129,
          column: 23
        },
        end: {
          line: 129,
          column: 52
        }
      },
      "45": {
        start: {
          line: 130,
          column: 28
        },
        end: {
          line: 130,
          column: 81
        }
      },
      "46": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 137,
          column: 11
        }
      },
      "47": {
        start: {
          line: 141,
          column: 19
        },
        end: {
          line: 141,
          column: 48
        }
      },
      "48": {
        start: {
          line: 142,
          column: 24
        },
        end: {
          line: 142,
          column: 77
        }
      },
      "49": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 146,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "GET",
        decl: {
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 31,
            column: 18
          }
        },
        loc: {
          start: {
            line: 31,
            column: 28
          },
          end: {
            line: 85,
            column: 1
          }
        },
        line: 31
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 50,
            column: 17
          },
          end: {
            line: 50,
            column: 18
          }
        },
        loc: {
          start: {
            line: 50,
            column: 27
          },
          end: {
            line: 57,
            column: 17
          }
        },
        line: 50
      },
      "7": {
        name: "POST",
        decl: {
          start: {
            line: 86,
            column: 15
          },
          end: {
            line: 86,
            column: 19
          }
        },
        loc: {
          start: {
            line: 86,
            column: 29
          },
          end: {
            line: 139,
            column: 1
          }
        },
        line: 86
      },
      "8": {
        name: "OPTIONS",
        decl: {
          start: {
            line: 140,
            column: 15
          },
          end: {
            line: 140,
            column: 22
          }
        },
        loc: {
          start: {
            line: 140,
            column: 32
          },
          end: {
            line: 147,
            column: 1
          }
        },
        line: 140
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 34,
            column: 26
          },
          end: {
            line: 34,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 26
          },
          end: {
            line: 34,
            column: 55
          }
        }, {
          start: {
            line: 34,
            column: 59
          },
          end: {
            line: 34,
            column: 64
          }
        }],
        line: 34
      },
      "1": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "2": {
        loc: {
          start: {
            line: 55,
            column: 24
          },
          end: {
            line: 55,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 55,
            column: 35
          },
          end: {
            line: 55,
            column: 67
          }
        }, {
          start: {
            line: 55,
            column: 70
          },
          end: {
            line: 55,
            column: 79
          }
        }],
        line: 55
      },
      "3": {
        loc: {
          start: {
            line: 56,
            column: 31
          },
          end: {
            line: 56,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 49
          },
          end: {
            line: 56,
            column: 89
          }
        }, {
          start: {
            line: 56,
            column: 92
          },
          end: {
            line: 56,
            column: 101
          }
        }],
        line: 56
      },
      "4": {
        loc: {
          start: {
            line: 73,
            column: 19
          },
          end: {
            line: 73,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 44
          },
          end: {
            line: 73,
            column: 57
          }
        }, {
          start: {
            line: 73,
            column: 60
          },
          end: {
            line: 73,
            column: 75
          }
        }],
        line: 73
      },
      "5": {
        loc: {
          start: {
            line: 89,
            column: 41
          },
          end: {
            line: 89,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 89,
            column: 50
          },
          end: {
            line: 89,
            column: 65
          }
        }],
        line: 89
      },
      "6": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "7": {
        loc: {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 91,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 91,
            column: 17
          }
        }, {
          start: {
            line: 91,
            column: 21
          },
          end: {
            line: 91,
            column: 30
          }
        }, {
          start: {
            line: 91,
            column: 34
          },
          end: {
            line: 91,
            column: 42
          }
        }],
        line: 91
      },
      "8": {
        loc: {
          start: {
            line: 108,
            column: 16
          },
          end: {
            line: 108,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 16
          },
          end: {
            line: 108,
            column: 54
          }
        }, {
          start: {
            line: 108,
            column: 58
          },
          end: {
            line: 108,
            column: 90
          }
        }, {
          start: {
            line: 108,
            column: 94
          },
          end: {
            line: 108,
            column: 103
          }
        }],
        line: 108
      },
      "9": {
        loc: {
          start: {
            line: 109,
            column: 23
          },
          end: {
            line: 109,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 23
          },
          end: {
            line: 109,
            column: 56
          }
        }, {
          start: {
            line: 109,
            column: 60
          },
          end: {
            line: 109,
            column: 69
          }
        }],
        line: 109
      },
      "10": {
        loc: {
          start: {
            line: 127,
            column: 19
          },
          end: {
            line: 127,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 127,
            column: 44
          },
          end: {
            line: 127,
            column: 57
          }
        }, {
          start: {
            line: 127,
            column: 60
          },
          end: {
            line: 127,
            column: 75
          }
        }],
        line: 127
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\security\\monitor\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n/**\r\n * API de monitoreo de seguridad\r\n * Proporciona estad\xEDsticas y eventos de seguridad para el dashboard\r\n */\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getSecurityStats, securityMonitor } from '@/lib/security/security-monitor';\r\nimport { generateCorsHeaders } from '@/lib/security/cors-config';\r\nimport { logger, LogLevel } from '@/lib/enterprise/logger';\r\n\r\n// ===================================\r\n// GET - Obtener estad\xEDsticas de seguridad\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const timeRange = searchParams.get('timeRange') as 'hour' | 'day' | 'week' || 'day';\r\n    const includeEvents = searchParams.get('includeEvents') === 'true';\r\n    \r\n    // Obtener estad\xEDsticas\r\n    const stats = getSecurityStats(timeRange);\r\n    \r\n    // Respuesta base\r\n    const response: any = {\r\n      success: true,\r\n      data: {\r\n        stats,\r\n        timestamp: new Date().toISOString(),\r\n        timeRange\r\n      }\r\n    };\r\n    \r\n    // Incluir eventos recientes si se solicita\r\n    if (includeEvents) {\r\n      const recentEvents = securityMonitor['eventBuffer']\r\n        .slice(-50) // \xDAltimos 50 eventos\r\n        .map(event => ({\r\n          type: event.type,\r\n          severity: event.severity,\r\n          source: event.source,\r\n          timestamp: event.timestamp,\r\n          ip: event.ip ? event.ip.substring(0, 8) + '***' : undefined, // Ofuscar IP\r\n          userAgent: event.userAgent ? event.userAgent.substring(0, 50) + '...' : undefined\r\n        }));\r\n      \r\n      response.data.recentEvents = recentEvents;\r\n    }\r\n    \r\n    // Log del acceso al monitoreo\r\n    logger.info(LogLevel.INFO, 'Security monitoring accessed', {\r\n      timeRange,\r\n      includeEvents,\r\n      statsCount: stats.totalEvents\r\n    });\r\n    \r\n    const origin = request.headers.get('origin');\r\n    const corsHeaders = generateCorsHeaders(origin, 'admin');\r\n    \r\n    return NextResponse.json(response, {\r\n      headers: corsHeaders\r\n    });\r\n    \r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Error accessing security monitoring', {\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    });\r\n    \r\n    const origin = request.headers.get('origin');\r\n    const corsHeaders = generateCorsHeaders(origin, 'admin');\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error accessing security monitoring'\r\n    }, { \r\n      status: 500,\r\n      headers: corsHeaders\r\n    });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// POST - Reportar evento de seguridad manual\r\n// ===================================\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { type, severity, details, source = 'manual_report' } = body;\r\n    \r\n    // Validar datos requeridos\r\n    if (!type || !severity || !details) {\r\n      const origin = request.headers.get('origin');\r\n      const corsHeaders = generateCorsHeaders(origin, 'admin');\r\n      \r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Missing required fields: type, severity, details'\r\n      }, { \r\n        status: 400,\r\n        headers: corsHeaders\r\n      });\r\n    }\r\n    \r\n    // Registrar evento de seguridad\r\n    securityMonitor.logSecurityEvent({\r\n      type,\r\n      severity,\r\n      source,\r\n      details,\r\n      ip: request.headers.get('x-forwarded-for') || request.headers.get('x-real-ip') || 'unknown',\r\n      userAgent: request.headers.get('user-agent') || 'unknown'\r\n    });\r\n    \r\n    logger.info(LogLevel.INFO, 'Manual security event reported', {\r\n      type,\r\n      severity,\r\n      source,\r\n      reportedBy: 'admin_user' // En un caso real, obtener del token de auth\r\n    });\r\n    \r\n    const origin = request.headers.get('origin');\r\n    const corsHeaders = generateCorsHeaders(origin, 'admin');\r\n    \r\n    return NextResponse.json({\r\n      success: true,\r\n      message: 'Security event reported successfully'\r\n    }, {\r\n      headers: corsHeaders\r\n    });\r\n    \r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Error reporting security event', {\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    });\r\n    \r\n    const origin = request.headers.get('origin');\r\n    const corsHeaders = generateCorsHeaders(origin, 'admin');\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error reporting security event'\r\n    }, { \r\n      status: 500,\r\n      headers: corsHeaders\r\n    });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// OPTIONS - CORS\r\n// ===================================\r\nexport async function OPTIONS(request: NextRequest) {\r\n  const origin = request.headers.get('origin');\r\n  const corsHeaders = generateCorsHeaders(origin, 'admin');\r\n  \r\n  return new NextResponse(null, {\r\n    status: 200,\r\n    headers: corsHeaders,\r\n  });\r\n}\r\n"],
      names: ["GET", "OPTIONS", "POST", "runtime", "request", "searchParams", "URL", "url", "timeRange", "get", "includeEvents", "stats", "getSecurityStats", "response", "success", "data", "timestamp", "Date", "toISOString", "recentEvents", "securityMonitor", "slice", "map", "event", "type", "severity", "source", "ip", "substring", "undefined", "userAgent", "logger", "info", "LogLevel", "INFO", "statsCount", "totalEvents", "origin", "headers", "corsHeaders", "generateCorsHeaders", "NextResponse", "json", "error", "ERROR", "Error", "message", "status", "body", "details", "logSecurityEvent", "reportedBy"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "42dda13cee6fa8a4a9d5d8be8ef79fb1b4ee3c4d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1bys3teigz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1bys3teigz();
cov_1bys3teigz().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1bys3teigz().f[0]++;
  cov_1bys3teigz().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1bys3teigz().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1bys3teigz().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_1bys3teigz().f[1]++;
    cov_1bys3teigz().s[4]++;
    return GET;
  },
  get OPTIONS() {
    /* istanbul ignore next */
    cov_1bys3teigz().f[2]++;
    cov_1bys3teigz().s[5]++;
    return OPTIONS;
  },
  get POST() {
    /* istanbul ignore next */
    cov_1bys3teigz().f[3]++;
    cov_1bys3teigz().s[6]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_1bys3teigz().f[4]++;
    cov_1bys3teigz().s[7]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_1bys3teigz().s[8]++, require("next/server"));
const _securitymonitor =
/* istanbul ignore next */
(cov_1bys3teigz().s[9]++, require("../../../../lib/security/security-monitor"));
const _corsconfig =
/* istanbul ignore next */
(cov_1bys3teigz().s[10]++, require("../../../../lib/security/cors-config"));
const _logger =
/* istanbul ignore next */
(cov_1bys3teigz().s[11]++, require("../../../../lib/enterprise/logger"));
const runtime =
/* istanbul ignore next */
(cov_1bys3teigz().s[12]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_1bys3teigz().f[5]++;
  cov_1bys3teigz().s[13]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_1bys3teigz().s[14]++, new URL(request.url));
    const timeRange =
    /* istanbul ignore next */
    (cov_1bys3teigz().s[15]++,
    /* istanbul ignore next */
    (cov_1bys3teigz().b[0][0]++, searchParams.get('timeRange')) ||
    /* istanbul ignore next */
    (cov_1bys3teigz().b[0][1]++, 'day'));
    const includeEvents =
    /* istanbul ignore next */
    (cov_1bys3teigz().s[16]++, searchParams.get('includeEvents') === 'true');
    // Obtener estadÃ­sticas
    const stats =
    /* istanbul ignore next */
    (cov_1bys3teigz().s[17]++, (0, _securitymonitor.getSecurityStats)(timeRange));
    // Respuesta base
    const response =
    /* istanbul ignore next */
    (cov_1bys3teigz().s[18]++, {
      success: true,
      data: {
        stats,
        timestamp: new Date().toISOString(),
        timeRange
      }
    });
    // Incluir eventos recientes si se solicita
    /* istanbul ignore next */
    cov_1bys3teigz().s[19]++;
    if (includeEvents) {
      /* istanbul ignore next */
      cov_1bys3teigz().b[1][0]++;
      const recentEvents =
      /* istanbul ignore next */
      (cov_1bys3teigz().s[20]++, _securitymonitor.securityMonitor['eventBuffer'].slice(-50) // Ãltimos 50 eventos
      .map(event => {
        /* istanbul ignore next */
        cov_1bys3teigz().f[6]++;
        cov_1bys3teigz().s[21]++;
        return {
          type: event.type,
          severity: event.severity,
          source: event.source,
          timestamp: event.timestamp,
          ip: event.ip ?
          /* istanbul ignore next */
          (cov_1bys3teigz().b[2][0]++, event.ip.substring(0, 8) + '***') :
          /* istanbul ignore next */
          (cov_1bys3teigz().b[2][1]++, undefined),
          userAgent: event.userAgent ?
          /* istanbul ignore next */
          (cov_1bys3teigz().b[3][0]++, event.userAgent.substring(0, 50) + '...') :
          /* istanbul ignore next */
          (cov_1bys3teigz().b[3][1]++, undefined)
        };
      }));
      /* istanbul ignore next */
      cov_1bys3teigz().s[22]++;
      response.data.recentEvents = recentEvents;
    } else
    /* istanbul ignore next */
    {
      cov_1bys3teigz().b[1][1]++;
    }
    // Log del acceso al monitoreo
    cov_1bys3teigz().s[23]++;
    _logger.logger.info(_logger.LogLevel.INFO, 'Security monitoring accessed', {
      timeRange,
      includeEvents,
      statsCount: stats.totalEvents
    });
    const origin =
    /* istanbul ignore next */
    (cov_1bys3teigz().s[24]++, request.headers.get('origin'));
    const corsHeaders =
    /* istanbul ignore next */
    (cov_1bys3teigz().s[25]++, (0, _corsconfig.generateCorsHeaders)(origin, 'admin'));
    /* istanbul ignore next */
    cov_1bys3teigz().s[26]++;
    return _server.NextResponse.json(response, {
      headers: corsHeaders
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1bys3teigz().s[27]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Error accessing security monitoring', {
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1bys3teigz().b[4][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1bys3teigz().b[4][1]++, 'Unknown error')
    });
    const origin =
    /* istanbul ignore next */
    (cov_1bys3teigz().s[28]++, request.headers.get('origin'));
    const corsHeaders =
    /* istanbul ignore next */
    (cov_1bys3teigz().s[29]++, (0, _corsconfig.generateCorsHeaders)(origin, 'admin'));
    /* istanbul ignore next */
    cov_1bys3teigz().s[30]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error accessing security monitoring'
    }, {
      status: 500,
      headers: corsHeaders
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_1bys3teigz().f[7]++;
  cov_1bys3teigz().s[31]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_1bys3teigz().s[32]++, await request.json());
    const {
      type,
      severity,
      details,
      source =
      /* istanbul ignore next */
      (cov_1bys3teigz().b[5][0]++, 'manual_report')
    } =
    /* istanbul ignore next */
    (cov_1bys3teigz().s[33]++, body);
    // Validar datos requeridos
    /* istanbul ignore next */
    cov_1bys3teigz().s[34]++;
    if (
    /* istanbul ignore next */
    (cov_1bys3teigz().b[7][0]++, !type) ||
    /* istanbul ignore next */
    (cov_1bys3teigz().b[7][1]++, !severity) ||
    /* istanbul ignore next */
    (cov_1bys3teigz().b[7][2]++, !details)) {
      /* istanbul ignore next */
      cov_1bys3teigz().b[6][0]++;
      const origin =
      /* istanbul ignore next */
      (cov_1bys3teigz().s[35]++, request.headers.get('origin'));
      const corsHeaders =
      /* istanbul ignore next */
      (cov_1bys3teigz().s[36]++, (0, _corsconfig.generateCorsHeaders)(origin, 'admin'));
      /* istanbul ignore next */
      cov_1bys3teigz().s[37]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Missing required fields: type, severity, details'
      }, {
        status: 400,
        headers: corsHeaders
      });
    } else
    /* istanbul ignore next */
    {
      cov_1bys3teigz().b[6][1]++;
    }
    // Registrar evento de seguridad
    cov_1bys3teigz().s[38]++;
    _securitymonitor.securityMonitor.logSecurityEvent({
      type,
      severity,
      source,
      details,
      ip:
      /* istanbul ignore next */
      (cov_1bys3teigz().b[8][0]++, request.headers.get('x-forwarded-for')) ||
      /* istanbul ignore next */
      (cov_1bys3teigz().b[8][1]++, request.headers.get('x-real-ip')) ||
      /* istanbul ignore next */
      (cov_1bys3teigz().b[8][2]++, 'unknown'),
      userAgent:
      /* istanbul ignore next */
      (cov_1bys3teigz().b[9][0]++, request.headers.get('user-agent')) ||
      /* istanbul ignore next */
      (cov_1bys3teigz().b[9][1]++, 'unknown')
    });
    /* istanbul ignore next */
    cov_1bys3teigz().s[39]++;
    _logger.logger.info(_logger.LogLevel.INFO, 'Manual security event reported', {
      type,
      severity,
      source,
      reportedBy: 'admin_user' // En un caso real, obtener del token de auth
    });
    const origin =
    /* istanbul ignore next */
    (cov_1bys3teigz().s[40]++, request.headers.get('origin'));
    const corsHeaders =
    /* istanbul ignore next */
    (cov_1bys3teigz().s[41]++, (0, _corsconfig.generateCorsHeaders)(origin, 'admin'));
    /* istanbul ignore next */
    cov_1bys3teigz().s[42]++;
    return _server.NextResponse.json({
      success: true,
      message: 'Security event reported successfully'
    }, {
      headers: corsHeaders
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1bys3teigz().s[43]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Error reporting security event', {
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1bys3teigz().b[10][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1bys3teigz().b[10][1]++, 'Unknown error')
    });
    const origin =
    /* istanbul ignore next */
    (cov_1bys3teigz().s[44]++, request.headers.get('origin'));
    const corsHeaders =
    /* istanbul ignore next */
    (cov_1bys3teigz().s[45]++, (0, _corsconfig.generateCorsHeaders)(origin, 'admin'));
    /* istanbul ignore next */
    cov_1bys3teigz().s[46]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error reporting security event'
    }, {
      status: 500,
      headers: corsHeaders
    });
  }
}
async function OPTIONS(request) {
  /* istanbul ignore next */
  cov_1bys3teigz().f[8]++;
  const origin =
  /* istanbul ignore next */
  (cov_1bys3teigz().s[47]++, request.headers.get('origin'));
  const corsHeaders =
  /* istanbul ignore next */
  (cov_1bys3teigz().s[48]++, (0, _corsconfig.generateCorsHeaders)(origin, 'admin'));
  /* istanbul ignore next */
  cov_1bys3teigz().s[49]++;
  return new _server.NextResponse(null, {
    status: 200,
    headers: corsHeaders
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWJ5czN0ZWlneiIsImFjdHVhbENvdmVyYWdlIiwicyIsIkdFVCIsImYiLCJPUFRJT05TIiwiUE9TVCIsInJ1bnRpbWUiLCJyZXF1ZXN0Iiwic2VhcmNoUGFyYW1zIiwiVVJMIiwidXJsIiwidGltZVJhbmdlIiwiYiIsImdldCIsImluY2x1ZGVFdmVudHMiLCJzdGF0cyIsIl9zZWN1cml0eW1vbml0b3IiLCJnZXRTZWN1cml0eVN0YXRzIiwicmVzcG9uc2UiLCJzdWNjZXNzIiwiZGF0YSIsInRpbWVzdGFtcCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsInJlY2VudEV2ZW50cyIsInNlY3VyaXR5TW9uaXRvciIsInNsaWNlIiwibWFwIiwiZXZlbnQiLCJ0eXBlIiwic2V2ZXJpdHkiLCJzb3VyY2UiLCJpcCIsInN1YnN0cmluZyIsInVuZGVmaW5lZCIsInVzZXJBZ2VudCIsIl9sb2dnZXIiLCJsb2dnZXIiLCJpbmZvIiwiTG9nTGV2ZWwiLCJJTkZPIiwic3RhdHNDb3VudCIsInRvdGFsRXZlbnRzIiwib3JpZ2luIiwiaGVhZGVycyIsImNvcnNIZWFkZXJzIiwiX2NvcnNjb25maWciLCJnZW5lcmF0ZUNvcnNIZWFkZXJzIiwiX3NlcnZlciIsIk5leHRSZXNwb25zZSIsImpzb24iLCJlcnJvciIsIkVSUk9SIiwiRXJyb3IiLCJtZXNzYWdlIiwic3RhdHVzIiwiYm9keSIsImRldGFpbHMiLCJsb2dTZWN1cml0eUV2ZW50IiwicmVwb3J0ZWRCeSJdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXHNyY1xcYXBwXFxhcGlcXHNlY3VyaXR5XFxtb25pdG9yXFxyb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb25maWd1cmFjacOzbiBwYXJhIE5vZGUuanMgUnVudGltZVxyXG5leHBvcnQgY29uc3QgcnVudGltZSA9ICdub2RlanMnO1xyXG5cclxuLyoqXHJcbiAqIEFQSSBkZSBtb25pdG9yZW8gZGUgc2VndXJpZGFkXHJcbiAqIFByb3BvcmNpb25hIGVzdGFkw61zdGljYXMgeSBldmVudG9zIGRlIHNlZ3VyaWRhZCBwYXJhIGVsIGRhc2hib2FyZFxyXG4gKi9cclxuXHJcbmltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XHJcbmltcG9ydCB7IGdldFNlY3VyaXR5U3RhdHMsIHNlY3VyaXR5TW9uaXRvciB9IGZyb20gJ0AvbGliL3NlY3VyaXR5L3NlY3VyaXR5LW1vbml0b3InO1xyXG5pbXBvcnQgeyBnZW5lcmF0ZUNvcnNIZWFkZXJzIH0gZnJvbSAnQC9saWIvc2VjdXJpdHkvY29ycy1jb25maWcnO1xyXG5pbXBvcnQgeyBsb2dnZXIsIExvZ0xldmVsIH0gZnJvbSAnQC9saWIvZW50ZXJwcmlzZS9sb2dnZXInO1xyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gR0VUIC0gT2J0ZW5lciBlc3RhZMOtc3RpY2FzIGRlIHNlZ3VyaWRhZFxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHsgc2VhcmNoUGFyYW1zIH0gPSBuZXcgVVJMKHJlcXVlc3QudXJsKTtcclxuICAgIGNvbnN0IHRpbWVSYW5nZSA9IHNlYXJjaFBhcmFtcy5nZXQoJ3RpbWVSYW5nZScpIGFzICdob3VyJyB8ICdkYXknIHwgJ3dlZWsnIHx8ICdkYXknO1xyXG4gICAgY29uc3QgaW5jbHVkZUV2ZW50cyA9IHNlYXJjaFBhcmFtcy5nZXQoJ2luY2x1ZGVFdmVudHMnKSA9PT0gJ3RydWUnO1xyXG4gICAgXHJcbiAgICAvLyBPYnRlbmVyIGVzdGFkw61zdGljYXNcclxuICAgIGNvbnN0IHN0YXRzID0gZ2V0U2VjdXJpdHlTdGF0cyh0aW1lUmFuZ2UpO1xyXG4gICAgXHJcbiAgICAvLyBSZXNwdWVzdGEgYmFzZVxyXG4gICAgY29uc3QgcmVzcG9uc2U6IGFueSA9IHtcclxuICAgICAgc3VjY2VzczogdHJ1ZSxcclxuICAgICAgZGF0YToge1xyXG4gICAgICAgIHN0YXRzLFxyXG4gICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxyXG4gICAgICAgIHRpbWVSYW5nZVxyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICAvLyBJbmNsdWlyIGV2ZW50b3MgcmVjaWVudGVzIHNpIHNlIHNvbGljaXRhXHJcbiAgICBpZiAoaW5jbHVkZUV2ZW50cykge1xyXG4gICAgICBjb25zdCByZWNlbnRFdmVudHMgPSBzZWN1cml0eU1vbml0b3JbJ2V2ZW50QnVmZmVyJ11cclxuICAgICAgICAuc2xpY2UoLTUwKSAvLyDDmmx0aW1vcyA1MCBldmVudG9zXHJcbiAgICAgICAgLm1hcChldmVudCA9PiAoe1xyXG4gICAgICAgICAgdHlwZTogZXZlbnQudHlwZSxcclxuICAgICAgICAgIHNldmVyaXR5OiBldmVudC5zZXZlcml0eSxcclxuICAgICAgICAgIHNvdXJjZTogZXZlbnQuc291cmNlLFxyXG4gICAgICAgICAgdGltZXN0YW1wOiBldmVudC50aW1lc3RhbXAsXHJcbiAgICAgICAgICBpcDogZXZlbnQuaXAgPyBldmVudC5pcC5zdWJzdHJpbmcoMCwgOCkgKyAnKioqJyA6IHVuZGVmaW5lZCwgLy8gT2Z1c2NhciBJUFxyXG4gICAgICAgICAgdXNlckFnZW50OiBldmVudC51c2VyQWdlbnQgPyBldmVudC51c2VyQWdlbnQuc3Vic3RyaW5nKDAsIDUwKSArICcuLi4nIDogdW5kZWZpbmVkXHJcbiAgICAgICAgfSkpO1xyXG4gICAgICBcclxuICAgICAgcmVzcG9uc2UuZGF0YS5yZWNlbnRFdmVudHMgPSByZWNlbnRFdmVudHM7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vIExvZyBkZWwgYWNjZXNvIGFsIG1vbml0b3Jlb1xyXG4gICAgbG9nZ2VyLmluZm8oTG9nTGV2ZWwuSU5GTywgJ1NlY3VyaXR5IG1vbml0b3JpbmcgYWNjZXNzZWQnLCB7XHJcbiAgICAgIHRpbWVSYW5nZSxcclxuICAgICAgaW5jbHVkZUV2ZW50cyxcclxuICAgICAgc3RhdHNDb3VudDogc3RhdHMudG90YWxFdmVudHNcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICBjb25zdCBvcmlnaW4gPSByZXF1ZXN0LmhlYWRlcnMuZ2V0KCdvcmlnaW4nKTtcclxuICAgIGNvbnN0IGNvcnNIZWFkZXJzID0gZ2VuZXJhdGVDb3JzSGVhZGVycyhvcmlnaW4sICdhZG1pbicpO1xyXG4gICAgXHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24ocmVzcG9uc2UsIHtcclxuICAgICAgaGVhZGVyczogY29yc0hlYWRlcnNcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGxvZ2dlci5lcnJvcihMb2dMZXZlbC5FUlJPUiwgJ0Vycm9yIGFjY2Vzc2luZyBzZWN1cml0eSBtb25pdG9yaW5nJywge1xyXG4gICAgICBlcnJvcjogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnVW5rbm93biBlcnJvcidcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICBjb25zdCBvcmlnaW4gPSByZXF1ZXN0LmhlYWRlcnMuZ2V0KCdvcmlnaW4nKTtcclxuICAgIGNvbnN0IGNvcnNIZWFkZXJzID0gZ2VuZXJhdGVDb3JzSGVhZGVycyhvcmlnaW4sICdhZG1pbicpO1xyXG4gICAgXHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgZXJyb3I6ICdFcnJvciBhY2Nlc3Npbmcgc2VjdXJpdHkgbW9uaXRvcmluZydcclxuICAgIH0sIHsgXHJcbiAgICAgIHN0YXR1czogNTAwLFxyXG4gICAgICBoZWFkZXJzOiBjb3JzSGVhZGVyc1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyBQT1NUIC0gUmVwb3J0YXIgZXZlbnRvIGRlIHNlZ3VyaWRhZCBtYW51YWxcclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgYm9keSA9IGF3YWl0IHJlcXVlc3QuanNvbigpO1xyXG4gICAgY29uc3QgeyB0eXBlLCBzZXZlcml0eSwgZGV0YWlscywgc291cmNlID0gJ21hbnVhbF9yZXBvcnQnIH0gPSBib2R5O1xyXG4gICAgXHJcbiAgICAvLyBWYWxpZGFyIGRhdG9zIHJlcXVlcmlkb3NcclxuICAgIGlmICghdHlwZSB8fCAhc2V2ZXJpdHkgfHwgIWRldGFpbHMpIHtcclxuICAgICAgY29uc3Qgb3JpZ2luID0gcmVxdWVzdC5oZWFkZXJzLmdldCgnb3JpZ2luJyk7XHJcbiAgICAgIGNvbnN0IGNvcnNIZWFkZXJzID0gZ2VuZXJhdGVDb3JzSGVhZGVycyhvcmlnaW4sICdhZG1pbicpO1xyXG4gICAgICBcclxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcclxuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgICBlcnJvcjogJ01pc3NpbmcgcmVxdWlyZWQgZmllbGRzOiB0eXBlLCBzZXZlcml0eSwgZGV0YWlscydcclxuICAgICAgfSwgeyBcclxuICAgICAgICBzdGF0dXM6IDQwMCxcclxuICAgICAgICBoZWFkZXJzOiBjb3JzSGVhZGVyc1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLy8gUmVnaXN0cmFyIGV2ZW50byBkZSBzZWd1cmlkYWRcclxuICAgIHNlY3VyaXR5TW9uaXRvci5sb2dTZWN1cml0eUV2ZW50KHtcclxuICAgICAgdHlwZSxcclxuICAgICAgc2V2ZXJpdHksXHJcbiAgICAgIHNvdXJjZSxcclxuICAgICAgZGV0YWlscyxcclxuICAgICAgaXA6IHJlcXVlc3QuaGVhZGVycy5nZXQoJ3gtZm9yd2FyZGVkLWZvcicpIHx8IHJlcXVlc3QuaGVhZGVycy5nZXQoJ3gtcmVhbC1pcCcpIHx8ICd1bmtub3duJyxcclxuICAgICAgdXNlckFnZW50OiByZXF1ZXN0LmhlYWRlcnMuZ2V0KCd1c2VyLWFnZW50JykgfHwgJ3Vua25vd24nXHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgbG9nZ2VyLmluZm8oTG9nTGV2ZWwuSU5GTywgJ01hbnVhbCBzZWN1cml0eSBldmVudCByZXBvcnRlZCcsIHtcclxuICAgICAgdHlwZSxcclxuICAgICAgc2V2ZXJpdHksXHJcbiAgICAgIHNvdXJjZSxcclxuICAgICAgcmVwb3J0ZWRCeTogJ2FkbWluX3VzZXInIC8vIEVuIHVuIGNhc28gcmVhbCwgb2J0ZW5lciBkZWwgdG9rZW4gZGUgYXV0aFxyXG4gICAgfSk7XHJcbiAgICBcclxuICAgIGNvbnN0IG9yaWdpbiA9IHJlcXVlc3QuaGVhZGVycy5nZXQoJ29yaWdpbicpO1xyXG4gICAgY29uc3QgY29yc0hlYWRlcnMgPSBnZW5lcmF0ZUNvcnNIZWFkZXJzKG9yaWdpbiwgJ2FkbWluJyk7XHJcbiAgICBcclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XHJcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgIG1lc3NhZ2U6ICdTZWN1cml0eSBldmVudCByZXBvcnRlZCBzdWNjZXNzZnVsbHknXHJcbiAgICB9LCB7XHJcbiAgICAgIGhlYWRlcnM6IGNvcnNIZWFkZXJzXHJcbiAgICB9KTtcclxuICAgIFxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBsb2dnZXIuZXJyb3IoTG9nTGV2ZWwuRVJST1IsICdFcnJvciByZXBvcnRpbmcgc2VjdXJpdHkgZXZlbnQnLCB7XHJcbiAgICAgIGVycm9yOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJ1xyXG4gICAgfSk7XHJcbiAgICBcclxuICAgIGNvbnN0IG9yaWdpbiA9IHJlcXVlc3QuaGVhZGVycy5nZXQoJ29yaWdpbicpO1xyXG4gICAgY29uc3QgY29yc0hlYWRlcnMgPSBnZW5lcmF0ZUNvcnNIZWFkZXJzKG9yaWdpbiwgJ2FkbWluJyk7XHJcbiAgICBcclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XHJcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICBlcnJvcjogJ0Vycm9yIHJlcG9ydGluZyBzZWN1cml0eSBldmVudCdcclxuICAgIH0sIHsgXHJcbiAgICAgIHN0YXR1czogNTAwLFxyXG4gICAgICBoZWFkZXJzOiBjb3JzSGVhZGVyc1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyBPUFRJT05TIC0gQ09SU1xyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gT1BUSU9OUyhyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xyXG4gIGNvbnN0IG9yaWdpbiA9IHJlcXVlc3QuaGVhZGVycy5nZXQoJ29yaWdpbicpO1xyXG4gIGNvbnN0IGNvcnNIZWFkZXJzID0gZ2VuZXJhdGVDb3JzSGVhZGVycyhvcmlnaW4sICdhZG1pbicpO1xyXG4gIFxyXG4gIHJldHVybiBuZXcgTmV4dFJlc3BvbnNlKG51bGwsIHtcclxuICAgIHN0YXR1czogMjAwLFxyXG4gICAgaGVhZGVyczogY29yc0hlYWRlcnMsXHJcbiAgfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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