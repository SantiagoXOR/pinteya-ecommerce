{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\ui\\AdminDataTable.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { cn } from '@/lib/core/utils';\r\nimport { \r\n  ChevronLeft, \r\n  ChevronRight, \r\n  ChevronsLeft, \r\n  ChevronsRight,\r\n  Search,\r\n  Filter,\r\n  Download,\r\n  MoreHorizontal\r\n} from 'lucide-react';\r\n\r\ninterface Column<T> {\r\n  key: keyof T | string;\r\n  title: string;\r\n  render?: (value: any, row: T) => React.ReactNode;\r\n  sortable?: boolean;\r\n  width?: string;\r\n  align?: 'left' | 'center' | 'right';\r\n}\r\n\r\ninterface FilterConfig {\r\n  key: string;\r\n  label: string;\r\n  type: 'text' | 'select' | 'date';\r\n  options?: { label: string; value: string }[];\r\n}\r\n\r\ninterface PaginationConfig {\r\n  page: number;\r\n  pageSize: number;\r\n  total: number;\r\n  onPageChange: (page: number) => void;\r\n  onPageSizeChange: (pageSize: number) => void;\r\n}\r\n\r\ninterface AdminDataTableProps<T> {\r\n  data: T[];\r\n  columns: Column<T>[];\r\n  loading?: boolean;\r\n  error?: string;\r\n  pagination?: PaginationConfig;\r\n  filters?: FilterConfig[];\r\n  searchable?: boolean;\r\n  exportable?: boolean;\r\n  selectable?: boolean;\r\n  onRowClick?: (row: T) => void;\r\n  onSelectionChange?: (selectedRows: T[]) => void;\r\n  actions?: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport function AdminDataTable<T extends Record<string, any>>({\r\n  data,\r\n  columns,\r\n  loading = false,\r\n  error,\r\n  pagination,\r\n  filters,\r\n  searchable = true,\r\n  exportable = false,\r\n  selectable = false,\r\n  onRowClick,\r\n  onSelectionChange,\r\n  actions,\r\n  className\r\n}: AdminDataTableProps<T>) {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedRows, setSelectedRows] = useState<T[]>([]);\r\n  const [sortConfig, setSortConfig] = useState<{\r\n    key: string;\r\n    direction: 'asc' | 'desc';\r\n  } | null>(null);\r\n\r\n  // Asegurar que data siempre sea un array\r\n  console.log('🔍 AdminDataTable: data recibida:', { data, type: typeof data, isArray: Array.isArray(data) });\r\n  const safeData = Array.isArray(data) ? data : [];\r\n\r\n  // Filter and search data\r\n  const filteredData = safeData.filter(row => {\r\n    if (!searchTerm) {return true;}\r\n    return Object.values(row).some(value => \r\n      String(value).toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n  });\r\n\r\n  // Sort data\r\n  const sortedData = sortConfig\r\n    ? [...filteredData].sort((a, b) => {\r\n        const aValue = a[sortConfig.key];\r\n        const bValue = b[sortConfig.key];\r\n        \r\n        if (aValue < bValue) {\r\n          return sortConfig.direction === 'asc' ? -1 : 1;\r\n        }\r\n        if (aValue > bValue) {\r\n          return sortConfig.direction === 'asc' ? 1 : -1;\r\n        }\r\n        return 0;\r\n      })\r\n    : filteredData;\r\n\r\n  const handleSort = (key: string) => {\r\n    setSortConfig(current => {\r\n      if (current?.key === key) {\r\n        return {\r\n          key,\r\n          direction: current.direction === 'asc' ? 'desc' : 'asc'\r\n        };\r\n      }\r\n      return { key, direction: 'asc' };\r\n    });\r\n  };\r\n\r\n  const handleRowSelection = (row: T, checked: boolean) => {\r\n    const newSelection = checked\r\n      ? [...selectedRows, row]\r\n      : selectedRows.filter(r => r !== row);\r\n    \r\n    setSelectedRows(newSelection);\r\n    onSelectionChange?.(newSelection);\r\n  };\r\n\r\n  const handleSelectAll = (checked: boolean) => {\r\n    const newSelection = checked ? [...sortedData] : [];\r\n    setSelectedRows(newSelection);\r\n    onSelectionChange?.(newSelection);\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\r\n        <p className=\"text-red-800\">\r\n          Error: {error instanceof Error ? error.message : error?.toString() || 'Error desconocido'}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={cn(\"bg-white rounded-lg border border-gray-200\", className)}>\r\n      {/* Header */}\r\n      <div className=\"p-4 border-b border-gray-200\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-4\">\r\n            {/* Search */}\r\n            {searchable && (\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Buscar...\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blaze-orange-500 focus:border-transparent\"\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {/* Filters */}\r\n            {filters && filters.length > 0 && (\r\n              <button className=\"flex items-center space-x-2 px-3 py-2 border border-gray-300 rounded-lg hover:bg-gray-50\">\r\n                <Filter className=\"w-4 h-4\" />\r\n                <span>Filtros</span>\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"flex items-center space-x-2\">\r\n            {/* Export */}\r\n            {exportable && (\r\n              <button className=\"flex items-center space-x-2 px-3 py-2 border border-gray-300 rounded-lg hover:bg-gray-50\">\r\n                <Download className=\"w-4 h-4\" />\r\n                <span>Exportar</span>\r\n              </button>\r\n            )}\r\n\r\n            {/* Actions */}\r\n            {actions}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Table */}\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"w-full\">\r\n          <thead className=\"bg-gray-50\">\r\n            <tr>\r\n              {selectable && (\r\n                <th className=\"w-12 px-4 py-3 text-left\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={selectedRows.length === sortedData.length && sortedData.length > 0}\r\n                    onChange={(e) => handleSelectAll(e.target.checked)}\r\n                    className=\"rounded border-gray-300 text-blaze-orange-600 focus:ring-blaze-orange-500\"\r\n                  />\r\n                </th>\r\n              )}\r\n              {columns.map((column) => (\r\n                <th\r\n                  key={String(column.key)}\r\n                  className={cn(\r\n                    \"px-4 py-3 text-xs font-medium text-gray-500 uppercase tracking-wider\",\r\n                    column.align === 'center' && \"text-center\",\r\n                    column.align === 'right' && \"text-right\",\r\n                    column.sortable && \"cursor-pointer hover:bg-gray-100\"\r\n                  )}\r\n                  style={{ width: column.width }}\r\n                  onClick={() => column.sortable && handleSort(String(column.key))}\r\n                >\r\n                  <div className=\"flex items-center space-x-1\">\r\n                    <span>{column.title}</span>\r\n                    {column.sortable && sortConfig?.key === column.key && (\r\n                      <span className=\"text-blaze-orange-600\">\r\n                        {sortConfig.direction === 'asc' ? '↑' : '↓'}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white divide-y divide-gray-200\">\r\n            {loading ? (\r\n              <tr>\r\n                <td colSpan={columns.length + (selectable ? 1 : 0)} className=\"px-4 py-8 text-center\">\r\n                  <div className=\"flex items-center justify-center\">\r\n                    <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blaze-orange-600\"></div>\r\n                    <span className=\"ml-2 text-gray-600\">Cargando...</span>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ) : sortedData.length === 0 ? (\r\n              <tr>\r\n                <td colSpan={columns.length + (selectable ? 1 : 0)} className=\"px-4 py-8 text-center text-gray-500\">\r\n                  No se encontraron datos\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              sortedData.map((row, index) => (\r\n                <tr\r\n                  key={index}\r\n                  className={cn(\r\n                    \"hover:bg-gray-50 transition-colors\",\r\n                    onRowClick && \"cursor-pointer\",\r\n                    selectedRows.includes(row) && \"bg-blaze-orange-50\"\r\n                  )}\r\n                  onClick={() => onRowClick?.(row)}\r\n                >\r\n                  {selectable && (\r\n                    <td className=\"px-4 py-4\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={selectedRows.includes(row)}\r\n                        onChange={(e) => {\r\n                          e.stopPropagation();\r\n                          handleRowSelection(row, e.target.checked);\r\n                        }}\r\n                        className=\"rounded border-gray-300 text-blaze-orange-600 focus:ring-blaze-orange-500\"\r\n                      />\r\n                    </td>\r\n                  )}\r\n                  {columns.map((column) => (\r\n                    <td\r\n                      key={String(column.key)}\r\n                      className={cn(\r\n                        \"px-4 py-4 whitespace-nowrap text-sm text-gray-900\",\r\n                        column.align === 'center' && \"text-center\",\r\n                        column.align === 'right' && \"text-right\"\r\n                      )}\r\n                    >\r\n                      {column.render\r\n                        ? column.render(row[column.key as keyof T], row)\r\n                        : String(row[column.key as keyof T] || '')\r\n                      }\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Pagination */}\r\n      {pagination && (\r\n        <div className=\"px-4 py-3 border-t border-gray-200 flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-2 text-sm text-gray-700\">\r\n            <span>Mostrando</span>\r\n            <select\r\n              value={pagination.pageSize}\r\n              onChange={(e) => pagination.onPageSizeChange(Number(e.target.value))}\r\n              className=\"border border-gray-300 rounded px-2 py-1\"\r\n            >\r\n              <option value={10}>10</option>\r\n              <option value={25}>25</option>\r\n              <option value={50}>50</option>\r\n              <option value={100}>100</option>\r\n            </select>\r\n            <span>de {pagination.total} resultados</span>\r\n          </div>\r\n\r\n          <div className=\"flex items-center space-x-2\">\r\n            <button\r\n              onClick={() => pagination.onPageChange(1)}\r\n              disabled={pagination.page === 1}\r\n              className=\"p-2 rounded hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              <ChevronsLeft className=\"w-4 h-4\" />\r\n            </button>\r\n            <button\r\n              onClick={() => pagination.onPageChange(pagination.page - 1)}\r\n              disabled={pagination.page === 1}\r\n              className=\"p-2 rounded hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              <ChevronLeft className=\"w-4 h-4\" />\r\n            </button>\r\n            \r\n            <span className=\"px-3 py-1 text-sm\">\r\n              Página {pagination.page} de {Math.ceil(pagination.total / pagination.pageSize)}\r\n            </span>\r\n            \r\n            <button\r\n              onClick={() => pagination.onPageChange(pagination.page + 1)}\r\n              disabled={pagination.page >= Math.ceil(pagination.total / pagination.pageSize)}\r\n              className=\"p-2 rounded hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              <ChevronRight className=\"w-4 h-4\" />\r\n            </button>\r\n            <button\r\n              onClick={() => pagination.onPageChange(Math.ceil(pagination.total / pagination.pageSize))}\r\n              disabled={pagination.page >= Math.ceil(pagination.total / pagination.pageSize)}\r\n              className=\"p-2 rounded hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              <ChevronsRight className=\"w-4 h-4\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["AdminDataTable","data","columns","loading","error","pagination","filters","searchable","exportable","selectable","onRowClick","onSelectionChange","actions","className","searchTerm","setSearchTerm","useState","selectedRows","setSelectedRows","sortConfig","setSortConfig","console","log","type","isArray","Array","safeData","filteredData","filter","row","Object","values","some","value","String","toLowerCase","includes","sortedData","sort","a","b","aValue","key","bValue","direction","handleSort","current","handleRowSelection","checked","newSelection","r","handleSelectAll","div","p","Error","message","toString","cn","Search","input","placeholder","onChange","e","target","length","button","Filter","span","Download","table","thead","tr","th","map","column","align","sortable","style","width","onClick","title","tbody","td","colSpan","index","stopPropagation","render","select","pageSize","onPageSizeChange","Number","option","total","onPageChange","disabled","page","ChevronsLeft","ChevronLeft","Math","ceil","ChevronRight","ChevronsRight"],"mappings":"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"}