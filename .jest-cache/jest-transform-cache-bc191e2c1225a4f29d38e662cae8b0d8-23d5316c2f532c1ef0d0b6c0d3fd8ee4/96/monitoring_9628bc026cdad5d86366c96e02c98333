0487a77fefc33e4242361e166420e5f4
"use strict";

/* istanbul ignore next */
function cov_2i8gt1vyg() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\middleware\\monitoring.ts";
  var hash = "532949e119009dfc9f6e685a209d22594c0545f3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\middleware\\monitoring.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 22
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 36
        }
      },
      "6": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "7": {
        start: {
          line: 20,
          column: 29
        },
        end: {
          line: 20,
          column: 78
        }
      },
      "8": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 51
        }
      },
      "9": {
        start: {
          line: 23,
          column: 22
        },
        end: {
          line: 23,
          column: 32
        }
      },
      "10": {
        start: {
          line: 24,
          column: 39
        },
        end: {
          line: 24,
          column: 54
        }
      },
      "11": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "12": {
        start: {
          line: 27,
          column: 25
        },
        end: {
          line: 27,
          column: 52
        }
      },
      "13": {
        start: {
          line: 29,
          column: 29
        },
        end: {
          line: 29,
          column: 51
        }
      },
      "14": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 39,
          column: 9
        }
      },
      "15": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 38,
          column: 15
        }
      },
      "16": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 73
        }
      },
      "17": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 61
        }
      },
      "18": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 24
        }
      },
      "19": {
        start: {
          line: 46,
          column: 29
        },
        end: {
          line: 46,
          column: 96
        }
      },
      "20": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 53,
          column: 11
        }
      },
      "21": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 58,
          column: 39
        }
      },
      "22": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 43
        }
      },
      "23": {
        start: {
          line: 63,
          column: 15
        },
        end: {
          line: 73,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 32
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "monitoringMiddleware",
        decl: {
          start: {
            line: 22,
            column: 15
          },
          end: {
            line: 22,
            column: 35
          }
        },
        loc: {
          start: {
            line: 22,
            column: 45
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 22
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 46,
            column: 29
          },
          end: {
            line: 46,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 54
          },
          end: {
            line: 46,
            column: 67
          }
        }, {
          start: {
            line: 46,
            column: 70
          },
          end: {
            line: 46,
            column: 96
          }
        }],
        line: 46
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\middleware\\monitoring.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server'\r\nimport { proactiveMonitoring } from '../lib/monitoring/proactive-monitoring'\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger'\r\n\r\n/**\r\n * Middleware para capturar errores y m\xE9tricas autom\xE1ticamente\r\n */\r\nexport async function monitoringMiddleware(request: NextRequest) {\r\n  const startTime = Date.now()\r\n  const { pathname, searchParams } = request.nextUrl\r\n  \r\n  try {\r\n    // Continuar con la request\r\n    const response = NextResponse.next()\r\n    \r\n    // Medir tiempo de respuesta\r\n    const responseTime = Date.now() - startTime\r\n    \r\n    // Reportar m\xE9tricas de rendimiento\r\n    if (responseTime > 2000) { // M\xE1s de 2 segundos\r\n      await proactiveMonitoring.reportError(\r\n        `Slow response detected: ${responseTime}ms for ${pathname}`,\r\n        {\r\n          path: pathname,\r\n          responseTime,\r\n          method: request.method,\r\n          userAgent: request.headers.get('user-agent'),\r\n          searchParams: Object.fromEntries(searchParams.entries())\r\n        }\r\n      )\r\n    }\r\n    \r\n    // Agregar headers de monitoreo\r\n    response.headers.set('X-Response-Time', responseTime.toString())\r\n    response.headers.set('X-Monitoring-Enabled', 'true')\r\n    \r\n    return response\r\n    \r\n  } catch (error) {\r\n    // Capturar errores del middleware\r\n    const errorMessage = error instanceof Error ? error.message : 'Unknown middleware error'\r\n    \r\n    await proactiveMonitoring.reportError(error, {\r\n      path: pathname,\r\n      method: request.method,\r\n      userAgent: request.headers.get('user-agent'),\r\n      searchParams: Object.fromEntries(searchParams.entries()),\r\n      timestamp: new Date().toISOString()\r\n    })\r\n    \r\n    logger.error(LogLevel.ERROR, 'Middleware error', {\r\n      error: errorMessage,\r\n      path: pathname,\r\n      method: request.method\r\n    }, LogCategory.SYSTEM)\r\n    \r\n    // Continuar con la request a pesar del error\r\n    return NextResponse.next()\r\n  }\r\n}\r\n\r\n/**\r\n * Configuraci\xF3n del matcher para el middleware\r\n */\r\nexport const config = {\r\n  matcher: [\r\n    /*\r\n     * Match all request paths except for the ones starting with:\r\n     * - api (API routes)\r\n     * - _next/static (static files)\r\n     * - _next/image (image optimization files)\r\n     * - favicon.ico (favicon file)\r\n     */\r\n    '/((?!api|_next/static|_next/image|favicon.ico).*)',\r\n  ],\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["config", "monitoringMiddleware", "request", "startTime", "Date", "now", "pathname", "searchParams", "nextUrl", "response", "NextResponse", "next", "responseTime", "proactiveMonitoring", "reportError", "path", "method", "userAgent", "headers", "get", "Object", "fromEntries", "entries", "set", "toString", "error", "errorMessage", "Error", "message", "timestamp", "toISOString", "logger", "LogLevel", "ERROR", "LogCategory", "SYSTEM", "matcher"],
      mappings: ";;;;;;;;;;;QAgEaA;eAAAA;;QAzDSC;eAAAA;;;wBAPoB;qCACN;wBACU;AAKvC,eAAeA,qBAAqBC,OAAoB;IAC7D,MAAMC,YAAYC,KAAKC,GAAG;IAC1B,MAAM,EAAEC,QAAQ,EAAEC,YAAY,EAAE,GAAGL,QAAQM,OAAO;IAElD,IAAI;QACF,2BAA2B;QAC3B,MAAMC,WAAWC,oBAAY,CAACC,IAAI;QAElC,4BAA4B;QAC5B,MAAMC,eAAeR,KAAKC,GAAG,KAAKF;QAElC,mCAAmC;QACnC,IAAIS,eAAe,MAAM;YACvB,MAAMC,wCAAmB,CAACC,WAAW,CACnC,CAAC,wBAAwB,EAAEF,aAAa,OAAO,EAAEN,UAAU,EAC3D;gBACES,MAAMT;gBACNM;gBACAI,QAAQd,QAAQc,MAAM;gBACtBC,WAAWf,QAAQgB,OAAO,CAACC,GAAG,CAAC;gBAC/BZ,cAAca,OAAOC,WAAW,CAACd,aAAae,OAAO;YACvD;QAEJ;QAEA,+BAA+B;QAC/Bb,SAASS,OAAO,CAACK,GAAG,CAAC,mBAAmBX,aAAaY,QAAQ;QAC7Df,SAASS,OAAO,CAACK,GAAG,CAAC,wBAAwB;QAE7C,OAAOd;IAET,EAAE,OAAOgB,OAAO;QACd,kCAAkC;QAClC,MAAMC,eAAeD,iBAAiBE,QAAQF,MAAMG,OAAO,GAAG;QAE9D,MAAMf,wCAAmB,CAACC,WAAW,CAACW,OAAO;YAC3CV,MAAMT;YACNU,QAAQd,QAAQc,MAAM;YACtBC,WAAWf,QAAQgB,OAAO,CAACC,GAAG,CAAC;YAC/BZ,cAAca,OAAOC,WAAW,CAACd,aAAae,OAAO;YACrDO,WAAW,IAAIzB,OAAO0B,WAAW;QACnC;QAEAC,cAAM,CAACN,KAAK,CAACO,gBAAQ,CAACC,KAAK,EAAE,oBAAoB;YAC/CR,OAAOC;YACPX,MAAMT;YACNU,QAAQd,QAAQc,MAAM;QACxB,GAAGkB,mBAAW,CAACC,MAAM;QAErB,6CAA6C;QAC7C,OAAOzB,oBAAY,CAACC,IAAI;IAC1B;AACF;AAKO,MAAMX,SAAS;IACpBoC,SAAS;QACP;;;;;;KAMC,GACD;KACD;AACH"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "532949e119009dfc9f6e685a209d22594c0545f3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2i8gt1vyg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2i8gt1vyg();
cov_2i8gt1vyg().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2i8gt1vyg().f[0]++;
  cov_2i8gt1vyg().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2i8gt1vyg().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2i8gt1vyg().s[3]++;
_export(exports, {
  get config() {
    /* istanbul ignore next */
    cov_2i8gt1vyg().f[1]++;
    cov_2i8gt1vyg().s[4]++;
    return config;
  },
  get monitoringMiddleware() {
    /* istanbul ignore next */
    cov_2i8gt1vyg().f[2]++;
    cov_2i8gt1vyg().s[5]++;
    return monitoringMiddleware;
  }
});
const _server =
/* istanbul ignore next */
(cov_2i8gt1vyg().s[6]++, require("next/server"));
const _proactivemonitoring =
/* istanbul ignore next */
(cov_2i8gt1vyg().s[7]++, require("../lib/monitoring/proactive-monitoring"));
const _logger =
/* istanbul ignore next */
(cov_2i8gt1vyg().s[8]++, require("../lib/enterprise/logger"));
async function monitoringMiddleware(request) {
  /* istanbul ignore next */
  cov_2i8gt1vyg().f[3]++;
  const startTime =
  /* istanbul ignore next */
  (cov_2i8gt1vyg().s[9]++, Date.now());
  const {
    pathname,
    searchParams
  } =
  /* istanbul ignore next */
  (cov_2i8gt1vyg().s[10]++, request.nextUrl);
  /* istanbul ignore next */
  cov_2i8gt1vyg().s[11]++;
  try {
    // Continuar con la request
    const response =
    /* istanbul ignore next */
    (cov_2i8gt1vyg().s[12]++, _server.NextResponse.next());
    // Medir tiempo de respuesta
    const responseTime =
    /* istanbul ignore next */
    (cov_2i8gt1vyg().s[13]++, Date.now() - startTime);
    // Reportar métricas de rendimiento
    /* istanbul ignore next */
    cov_2i8gt1vyg().s[14]++;
    if (responseTime > 2000) {
      /* istanbul ignore next */
      cov_2i8gt1vyg().b[0][0]++;
      cov_2i8gt1vyg().s[15]++;
      await _proactivemonitoring.proactiveMonitoring.reportError(`Slow response detected: ${responseTime}ms for ${pathname}`, {
        path: pathname,
        responseTime,
        method: request.method,
        userAgent: request.headers.get('user-agent'),
        searchParams: Object.fromEntries(searchParams.entries())
      });
    } else
    /* istanbul ignore next */
    {
      cov_2i8gt1vyg().b[0][1]++;
    }
    // Agregar headers de monitoreo
    cov_2i8gt1vyg().s[16]++;
    response.headers.set('X-Response-Time', responseTime.toString());
    /* istanbul ignore next */
    cov_2i8gt1vyg().s[17]++;
    response.headers.set('X-Monitoring-Enabled', 'true');
    /* istanbul ignore next */
    cov_2i8gt1vyg().s[18]++;
    return response;
  } catch (error) {
    // Capturar errores del middleware
    const errorMessage =
    /* istanbul ignore next */
    (cov_2i8gt1vyg().s[19]++, error instanceof Error ?
    /* istanbul ignore next */
    (cov_2i8gt1vyg().b[1][0]++, error.message) :
    /* istanbul ignore next */
    (cov_2i8gt1vyg().b[1][1]++, 'Unknown middleware error'));
    /* istanbul ignore next */
    cov_2i8gt1vyg().s[20]++;
    await _proactivemonitoring.proactiveMonitoring.reportError(error, {
      path: pathname,
      method: request.method,
      userAgent: request.headers.get('user-agent'),
      searchParams: Object.fromEntries(searchParams.entries()),
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_2i8gt1vyg().s[21]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Middleware error', {
      error: errorMessage,
      path: pathname,
      method: request.method
    }, _logger.LogCategory.SYSTEM);
    // Continuar con la request a pesar del error
    /* istanbul ignore next */
    cov_2i8gt1vyg().s[22]++;
    return _server.NextResponse.next();
  }
}
const config =
/* istanbul ignore next */
(cov_2i8gt1vyg().s[23]++, {
  matcher: [
  /*
  * Match all request paths except for the ones starting with:
  * - api (API routes)
  * - _next/static (static files)
  * - _next/image (image optimization files)
  * - favicon.ico (favicon file)
  */
  '/((?!api|_next/static|_next/image|favicon.ico).*)']
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb25maWciLCJjb3ZfMmk4Z3QxdnlnIiwiZiIsInMiLCJtb25pdG9yaW5nTWlkZGxld2FyZSIsInJlcXVlc3QiLCJzdGFydFRpbWUiLCJEYXRlIiwibm93IiwicGF0aG5hbWUiLCJzZWFyY2hQYXJhbXMiLCJuZXh0VXJsIiwicmVzcG9uc2UiLCJfc2VydmVyIiwiTmV4dFJlc3BvbnNlIiwibmV4dCIsInJlc3BvbnNlVGltZSIsImIiLCJfcHJvYWN0aXZlbW9uaXRvcmluZyIsInByb2FjdGl2ZU1vbml0b3JpbmciLCJyZXBvcnRFcnJvciIsInBhdGgiLCJtZXRob2QiLCJ1c2VyQWdlbnQiLCJoZWFkZXJzIiwiZ2V0IiwiT2JqZWN0IiwiZnJvbUVudHJpZXMiLCJlbnRyaWVzIiwic2V0IiwidG9TdHJpbmciLCJlcnJvciIsImVycm9yTWVzc2FnZSIsIkVycm9yIiwibWVzc2FnZSIsInRpbWVzdGFtcCIsInRvSVNPU3RyaW5nIiwiX2xvZ2dlciIsImxvZ2dlciIsIkxvZ0xldmVsIiwiRVJST1IiLCJMb2dDYXRlZ29yeSIsIlNZU1RFTSIsIm1hdGNoZXIiXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXG1hcnRpXFxEZXNrdG9wXFxERVNBUlJPTExPU1dcXEJPSUxFUlBMQVRURSBFLUNPTU1FUkNFXFxzcmNcXG1pZGRsZXdhcmVcXG1vbml0b3JpbmcudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJ1xyXG5pbXBvcnQgeyBwcm9hY3RpdmVNb25pdG9yaW5nIH0gZnJvbSAnLi4vbGliL21vbml0b3JpbmcvcHJvYWN0aXZlLW1vbml0b3JpbmcnXHJcbmltcG9ydCB7IGxvZ2dlciwgTG9nTGV2ZWwsIExvZ0NhdGVnb3J5IH0gZnJvbSAnQC9saWIvZW50ZXJwcmlzZS9sb2dnZXInXHJcblxyXG4vKipcclxuICogTWlkZGxld2FyZSBwYXJhIGNhcHR1cmFyIGVycm9yZXMgeSBtw6l0cmljYXMgYXV0b23DoXRpY2FtZW50ZVxyXG4gKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1vbml0b3JpbmdNaWRkbGV3YXJlKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XHJcbiAgY29uc3Qgc3RhcnRUaW1lID0gRGF0ZS5ub3coKVxyXG4gIGNvbnN0IHsgcGF0aG5hbWUsIHNlYXJjaFBhcmFtcyB9ID0gcmVxdWVzdC5uZXh0VXJsXHJcbiAgXHJcbiAgdHJ5IHtcclxuICAgIC8vIENvbnRpbnVhciBjb24gbGEgcmVxdWVzdFxyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBOZXh0UmVzcG9uc2UubmV4dCgpXHJcbiAgICBcclxuICAgIC8vIE1lZGlyIHRpZW1wbyBkZSByZXNwdWVzdGFcclxuICAgIGNvbnN0IHJlc3BvbnNlVGltZSA9IERhdGUubm93KCkgLSBzdGFydFRpbWVcclxuICAgIFxyXG4gICAgLy8gUmVwb3J0YXIgbcOpdHJpY2FzIGRlIHJlbmRpbWllbnRvXHJcbiAgICBpZiAocmVzcG9uc2VUaW1lID4gMjAwMCkgeyAvLyBNw6FzIGRlIDIgc2VndW5kb3NcclxuICAgICAgYXdhaXQgcHJvYWN0aXZlTW9uaXRvcmluZy5yZXBvcnRFcnJvcihcclxuICAgICAgICBgU2xvdyByZXNwb25zZSBkZXRlY3RlZDogJHtyZXNwb25zZVRpbWV9bXMgZm9yICR7cGF0aG5hbWV9YCxcclxuICAgICAgICB7XHJcbiAgICAgICAgICBwYXRoOiBwYXRobmFtZSxcclxuICAgICAgICAgIHJlc3BvbnNlVGltZSxcclxuICAgICAgICAgIG1ldGhvZDogcmVxdWVzdC5tZXRob2QsXHJcbiAgICAgICAgICB1c2VyQWdlbnQ6IHJlcXVlc3QuaGVhZGVycy5nZXQoJ3VzZXItYWdlbnQnKSxcclxuICAgICAgICAgIHNlYXJjaFBhcmFtczogT2JqZWN0LmZyb21FbnRyaWVzKHNlYXJjaFBhcmFtcy5lbnRyaWVzKCkpXHJcbiAgICAgICAgfVxyXG4gICAgICApXHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vIEFncmVnYXIgaGVhZGVycyBkZSBtb25pdG9yZW9cclxuICAgIHJlc3BvbnNlLmhlYWRlcnMuc2V0KCdYLVJlc3BvbnNlLVRpbWUnLCByZXNwb25zZVRpbWUudG9TdHJpbmcoKSlcclxuICAgIHJlc3BvbnNlLmhlYWRlcnMuc2V0KCdYLU1vbml0b3JpbmctRW5hYmxlZCcsICd0cnVlJylcclxuICAgIFxyXG4gICAgcmV0dXJuIHJlc3BvbnNlXHJcbiAgICBcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgLy8gQ2FwdHVyYXIgZXJyb3JlcyBkZWwgbWlkZGxld2FyZVxyXG4gICAgY29uc3QgZXJyb3JNZXNzYWdlID0gZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnVW5rbm93biBtaWRkbGV3YXJlIGVycm9yJ1xyXG4gICAgXHJcbiAgICBhd2FpdCBwcm9hY3RpdmVNb25pdG9yaW5nLnJlcG9ydEVycm9yKGVycm9yLCB7XHJcbiAgICAgIHBhdGg6IHBhdGhuYW1lLFxyXG4gICAgICBtZXRob2Q6IHJlcXVlc3QubWV0aG9kLFxyXG4gICAgICB1c2VyQWdlbnQ6IHJlcXVlc3QuaGVhZGVycy5nZXQoJ3VzZXItYWdlbnQnKSxcclxuICAgICAgc2VhcmNoUGFyYW1zOiBPYmplY3QuZnJvbUVudHJpZXMoc2VhcmNoUGFyYW1zLmVudHJpZXMoKSksXHJcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXHJcbiAgICB9KVxyXG4gICAgXHJcbiAgICBsb2dnZXIuZXJyb3IoTG9nTGV2ZWwuRVJST1IsICdNaWRkbGV3YXJlIGVycm9yJywge1xyXG4gICAgICBlcnJvcjogZXJyb3JNZXNzYWdlLFxyXG4gICAgICBwYXRoOiBwYXRobmFtZSxcclxuICAgICAgbWV0aG9kOiByZXF1ZXN0Lm1ldGhvZFxyXG4gICAgfSwgTG9nQ2F0ZWdvcnkuU1lTVEVNKVxyXG4gICAgXHJcbiAgICAvLyBDb250aW51YXIgY29uIGxhIHJlcXVlc3QgYSBwZXNhciBkZWwgZXJyb3JcclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UubmV4dCgpXHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogQ29uZmlndXJhY2nDs24gZGVsIG1hdGNoZXIgcGFyYSBlbCBtaWRkbGV3YXJlXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xyXG4gIG1hdGNoZXI6IFtcclxuICAgIC8qXHJcbiAgICAgKiBNYXRjaCBhbGwgcmVxdWVzdCBwYXRocyBleGNlcHQgZm9yIHRoZSBvbmVzIHN0YXJ0aW5nIHdpdGg6XHJcbiAgICAgKiAtIGFwaSAoQVBJIHJvdXRlcylcclxuICAgICAqIC0gX25leHQvc3RhdGljIChzdGF0aWMgZmlsZXMpXHJcbiAgICAgKiAtIF9uZXh0L2ltYWdlIChpbWFnZSBvcHRpbWl6YXRpb24gZmlsZXMpXHJcbiAgICAgKiAtIGZhdmljb24uaWNvIChmYXZpY29uIGZpbGUpXHJcbiAgICAgKi9cclxuICAgICcvKCg/IWFwaXxfbmV4dC9zdGF0aWN8X25leHQvaW1hZ2V8ZmF2aWNvbi5pY28pLiopJyxcclxuICBdLFxyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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