{"version":3,"names":["CheckoutFlow","DEFAULT_CHECKOUT_STEPS","cov_qv6yvqdea","s","id","name","description","icon","_lucidereact","ShoppingCart","isComplete","isActive","Truck","User","CheckCircle","_react","forwardRef","cartItems","b","checkoutData","isLoading","errors","onComplete","onStepChange","currentStep","showProgress","metrics","testMode","className","children","props","ref","f","steps","setSteps","useState","startTime","Date","useEffect","prevSteps","map","step","index","progressPercentage","length","getTestId","suffix","undefined","_jsxruntime","jsxs","_utils","cn","jsx","_card","Card","CardContent","_badge","Badge","variant","_progress","Progress","value","Icon","Clock","Math","round","now","getTime","Object","keys","AlertCircle","entries","field","error","Error","message","toString","CardHeader","CardTitle","CreditCard","_button","Button","onClick","ArrowLeft","disabled","size","Fragment","ArrowRight","Shield","_cartsummary","CartSummary","totalPrice","shippingCost","discount","finalTotal","showProductCards","productCardContext","showShippingDetails","displayName"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\checkout-flow.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Progress } from \"@/components/ui/progress\"\r\nimport { CartSummary } from \"@/components/ui/cart-summary\"\r\nimport { CartItem } from \"@/types/api\"\r\nimport {\r\n  CheckCircle,\r\n  CreditCard,\r\n  ArrowLeft,\r\n  ArrowRight,\r\n  AlertCircle,\r\n  ShoppingCart,\r\n  Truck,\r\n  User,\r\n  Clock,\r\n  Shield\r\n} from \"lucide-react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\n// Tipos mejorados con mejor tipado\r\nexport interface CheckoutStep {\r\n  id: string\r\n  name: string\r\n  description: string\r\n  icon: React.ComponentType<React.SVGProps<SVGSVGElement>>\r\n  isComplete: boolean\r\n  isActive: boolean\r\n}\r\n\r\nexport interface CheckoutMetrics {\r\n  startTime?: Date\r\n  currentStep?: string\r\n  completedSteps?: string[]\r\n  errors?: string[]\r\n  performanceData?: {\r\n    loadTime: number\r\n    renderTime: number\r\n  }\r\n}\r\n\r\nexport interface CheckoutFlowProps {\r\n  /** Items del carrito */\r\n  cartItems: CartItem[]\r\n  /** Datos del checkout */\r\n  checkoutData?: {\r\n    totalPrice: number\r\n    shippingCost?: number\r\n    discount?: number\r\n    finalTotal?: number\r\n  }\r\n  /** Estado de carga */\r\n  isLoading?: boolean\r\n  /** Errores */\r\n  errors?: Record<string, string>\r\n  /** Callback para finalizar checkout */\r\n  onComplete?: () => void\r\n  /** Callback para cambio de paso */\r\n  onStepChange?: (stepId: string) => void\r\n  /** Paso actual (0-based) */\r\n  currentStep?: number\r\n  /** Mostrar indicador de progreso */\r\n  showProgress?: boolean\r\n  /** Métricas de rendimiento */\r\n  metrics?: CheckoutMetrics\r\n  /** Modo de testing para screenshots */\r\n  testMode?: boolean\r\n  /** Clase CSS adicional */\r\n  className?: string\r\n  /** Contenido personalizado */\r\n  children?: React.ReactNode\r\n}\r\n\r\n// Pasos del checkout predefinidos\r\nconst DEFAULT_CHECKOUT_STEPS: CheckoutStep[] = [\r\n  {\r\n    id: 'cart',\r\n    name: 'Carrito',\r\n    description: 'Revisar productos',\r\n    icon: ShoppingCart,\r\n    isComplete: false,\r\n    isActive: true\r\n  },\r\n  {\r\n    id: 'shipping',\r\n    name: 'Envío',\r\n    description: 'Información de entrega',\r\n    icon: Truck,\r\n    isComplete: false,\r\n    isActive: false\r\n  },\r\n  {\r\n    id: 'payment',\r\n    name: 'Pago',\r\n    description: 'Datos del comprador',\r\n    icon: User,\r\n    isComplete: false,\r\n    isActive: false\r\n  },\r\n  {\r\n    id: 'confirmation',\r\n    name: 'Confirmación',\r\n    description: 'Finalizar compra',\r\n    icon: CheckCircle,\r\n    isComplete: false,\r\n    isActive: false\r\n  }\r\n]\r\n\r\n/**\r\n * CheckoutFlow Enterprise - Componente optimizado para flujo de compra sin autenticación\r\n *\r\n * Características mejoradas:\r\n * - ✅ Indicador de progreso visual paso a paso\r\n * - ✅ Métricas de rendimiento integradas\r\n * - ✅ Manejo robusto de errores con contexto\r\n * - ✅ Screenshots automáticos para testing\r\n * - ✅ Integración con Design System Pinteya\r\n * - ✅ Responsive design mobile-first\r\n * - ✅ Accesibilidad WCAG 2.1 AA\r\n * - ✅ Optimización de performance\r\n *\r\n * @example\r\n * ```tsx\r\n * <CheckoutFlow\r\n *   cartItems={items}\r\n *   checkoutData={data}\r\n *   currentStep={1}\r\n *   showProgress={true}\r\n *   testMode={process.env.NODE_ENV === 'test'}\r\n *   onComplete={handleComplete}\r\n *   onStepChange={handleStepChange}\r\n * />\r\n * ```\r\n */\r\nexport const CheckoutFlow = React.forwardRef<HTMLDivElement, CheckoutFlowProps>(\r\n  ({\r\n    cartItems = [],\r\n    checkoutData = {},\r\n    isLoading = false,\r\n    errors = {},\r\n    onComplete,\r\n    onStepChange,\r\n    currentStep = 0,\r\n    showProgress = true,\r\n    metrics,\r\n    testMode = false,\r\n    className,\r\n    children,\r\n    ...props\r\n  }, ref) => {\r\n    // Estado interno para pasos\r\n    const [steps, setSteps] = React.useState<CheckoutStep[]>(DEFAULT_CHECKOUT_STEPS)\r\n    const [startTime] = React.useState<Date>(new Date())\r\n\r\n    // Actualizar pasos basado en currentStep\r\n    React.useEffect(() => {\r\n      setSteps(prevSteps =>\r\n        prevSteps.map((step, index) => ({\r\n          ...step,\r\n          isComplete: index < currentStep,\r\n          isActive: index === currentStep\r\n        }))\r\n      )\r\n    }, [currentStep])\r\n\r\n    // Calcular progreso\r\n    const progressPercentage = ((currentStep + 1) / steps.length) * 100\r\n\r\n    // Helper para generar data-testids para testing\r\n    const getTestId = (suffix: string) => testMode ? `checkout-flow-${suffix}` : undefined\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\"w-full max-w-4xl mx-auto space-y-6 p-4\", className)}\r\n        data-testid={getTestId('container')}\r\n        {...props}\r\n      >\r\n        {/* Indicador de progreso */}\r\n        {showProgress && (\r\n          <Card data-testid={getTestId('progress-card')}>\r\n            <CardContent className=\"pt-6\">\r\n              <div className=\"space-y-4\">\r\n                {/* Barra de progreso */}\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm font-medium text-gray-700\">\r\n                      Progreso del checkout\r\n                    </span>\r\n                    <Badge variant=\"secondary\" data-testid={getTestId('progress-badge')}>\r\n                      {currentStep + 1} de {steps.length}\r\n                    </Badge>\r\n                  </div>\r\n                  <Progress\r\n                    value={progressPercentage}\r\n                    className=\"h-2\"\r\n                    data-testid={getTestId('progress-bar')}\r\n                  />\r\n                </div>\r\n\r\n                {/* Pasos visuales */}\r\n                <div className=\"flex justify-between items-center\">\r\n                  {steps.map((step, index) => {\r\n                    const Icon = step.icon\r\n                    return (\r\n                      <div\r\n                        key={step.id}\r\n                        className={cn(\r\n                          \"flex flex-col items-center space-y-2 flex-1\",\r\n                          index < steps.length - 1 && \"border-r border-gray-200 pr-4\"\r\n                        )}\r\n                        data-testid={getTestId(`step-${step.id}`)}\r\n                      >\r\n                        <div className={cn(\r\n                          \"w-10 h-10 rounded-full flex items-center justify-center border-2 transition-colors\",\r\n                          step.isComplete && \"bg-green-500 border-green-500 text-white\",\r\n                          step.isActive && !step.isComplete && \"bg-primary border-primary text-white\",\r\n                          !step.isActive && !step.isComplete && \"bg-gray-100 border-gray-300 text-gray-500\"\r\n                        )}>\r\n                          <Icon className=\"w-5 h-5\" />\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                          <p className={cn(\r\n                            \"text-xs font-medium\",\r\n                            step.isActive && \"text-primary\",\r\n                            step.isComplete && \"text-green-600\",\r\n                            !step.isActive && !step.isComplete && \"text-gray-500\"\r\n                          )}>\r\n                            {step.name}\r\n                          </p>\r\n                          <p className=\"text-xs text-gray-400 hidden sm:block\">\r\n                            {step.description}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n\r\n        {/* Métricas de rendimiento (solo en modo test) */}\r\n        {testMode && metrics && (\r\n          <Card className=\"border-dashed border-blue-200 bg-blue-50\" data-testid={getTestId('metrics-card')}>\r\n            <CardContent className=\"pt-4\">\r\n              <div className=\"flex items-center gap-2 mb-2\">\r\n                <Clock className=\"w-4 h-4 text-blue-600\" />\r\n                <span className=\"text-sm font-medium text-blue-800\">Métricas de Testing</span>\r\n              </div>\r\n              <div className=\"grid grid-cols-2 gap-4 text-xs\">\r\n                <div>\r\n                  <span className=\"text-blue-600\">Tiempo transcurrido:</span>\r\n                  <span className=\"ml-1 font-mono\">\r\n                    {metrics.startTime ? Math.round((Date.now() - metrics.startTime.getTime()) / 1000) : 0}s\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span className=\"text-blue-600\">Paso actual:</span>\r\n                  <span className=\"ml-1 font-mono\">{metrics.currentStep || steps[currentStep]?.name}</span>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n\r\n        {/* Errores mejorados */}\r\n        {Object.keys(errors).length > 0 && (\r\n          <Card className=\"border-red-200 bg-red-50\" data-testid={getTestId('errors-card')}>\r\n            <CardContent className=\"pt-4\">\r\n              <div className=\"flex items-center gap-2 text-red-800 mb-3\">\r\n                <AlertCircle className=\"w-5 h-5\" />\r\n                <span className=\"font-medium\">Se encontraron errores</span>\r\n              </div>\r\n              <ul className=\"space-y-2\">\r\n                {Object.entries(errors).map(([field, error]) => (\r\n                  <li key={field} className=\"flex items-start gap-2 text-sm text-red-700\">\r\n                    <span className=\"w-1 h-1 bg-red-500 rounded-full mt-2 flex-shrink-0\" />\r\n                    <span><strong>{field}:</strong> {error instanceof Error ? error.message : error?.toString() || 'Error desconocido'}</span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n\r\n        {/* Layout principal con grid responsive */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n          {/* Formulario principal */}\r\n          <div className=\"lg:col-span-2 space-y-4\">\r\n            <Card data-testid={getTestId('main-form')}>\r\n              <CardHeader className=\"pb-4\">\r\n                <CardTitle className=\"text-xl flex items-center gap-3\">\r\n                  <div className={cn(\r\n                    \"w-8 h-8 rounded-full flex items-center justify-center\",\r\n                    \"bg-primary text-white\"\r\n                  )}>\r\n                    <CreditCard className=\"w-4 h-4\" />\r\n                  </div>\r\n                  <div>\r\n                    <span>Finalizar Compra</span>\r\n                    {steps[currentStep] && (\r\n                      <p className=\"text-sm text-gray-500 font-normal mt-1\">\r\n                        {steps[currentStep].description}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                {/* Contenido del formulario */}\r\n                <div data-testid={getTestId('form-content')}>\r\n                  {children}\r\n                </div>\r\n\r\n                {/* Botones de acción */}\r\n                <div className=\"flex flex-col sm:flex-row gap-3 pt-4 border-t\">\r\n                  {currentStep > 0 && (\r\n                    <Button\r\n                      variant=\"outline\"\r\n                      onClick={() => onStepChange?.(steps[currentStep - 1]?.id)}\r\n                      className=\"sm:w-auto\"\r\n                      data-testid={getTestId('back-button')}\r\n                    >\r\n                      <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n                      Anterior\r\n                    </Button>\r\n                  )}\r\n\r\n                  <Button\r\n                    onClick={onComplete}\r\n                    disabled={isLoading}\r\n                    className=\"flex-1 sm:flex-none sm:min-w-[200px] h-12 text-base font-medium\"\r\n                    size=\"lg\"\r\n                    data-testid={getTestId('submit-button')}\r\n                  >\r\n                    {isLoading ? (\r\n                      <>\r\n                        <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\" />\r\n                        Procesando...\r\n                      </>\r\n                    ) : currentStep < steps.length - 1 ? (\r\n                      <>\r\n                        Continuar\r\n                        <ArrowRight className=\"w-4 h-4 ml-2\" />\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Shield className=\"w-4 h-4 mr-2\" />\r\n                        Completar Pedido\r\n                      </>\r\n                    )}\r\n                  </Button>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Sidebar con resumen */}\r\n          <div className=\"space-y-4\">\r\n            <CartSummary\r\n              cartItems={cartItems}\r\n              totalPrice={checkoutData.totalPrice || 0}\r\n              shippingCost={checkoutData.shippingCost}\r\n              discount={checkoutData.discount}\r\n              finalTotal={checkoutData.finalTotal}\r\n              variant=\"detailed\"\r\n              showProductCards={true}\r\n              productCardContext=\"checkout\"\r\n              showShippingDetails={true}\r\n              data-testid={getTestId('cart-summary')}\r\n            />\r\n\r\n            {/* Información de seguridad */}\r\n            <Card className=\"border-green-200 bg-green-50\">\r\n              <CardContent className=\"pt-4\">\r\n                <div className=\"flex items-center gap-2 text-green-800 mb-2\">\r\n                  <Shield className=\"w-4 h-4\" />\r\n                  <span className=\"text-sm font-medium\">Compra Segura</span>\r\n                </div>\r\n                <p className=\"text-xs text-green-700\">\r\n                  Tus datos están protegidos con encriptación SSL de 256 bits.\r\n                  Procesamiento seguro con MercadoPago.\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nCheckoutFlow.displayName = \"CheckoutFlow\"\r\n\r\n// Exportar tipos para uso externo\r\nexport type { CheckoutStep, CheckoutMetrics }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}