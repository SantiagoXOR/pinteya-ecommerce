{"version":3,"names":["cov_246ckz0orc","actualCoverage","s","GET","f","runtime","request","url","URL","searchParams","forEach","value","key","set","response","fetch","toString","method","headers","b","get","ok","_server","NextResponse","json","error","status","data"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\logistics\\route.ts"],"sourcesContent":["// Configuración para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// =====================================================\r\n// API: LOGISTICS REDIRECT\r\n// Descripción: Redirección a dashboard de logística\r\n// Endpoint: GET /api/admin/logistics\r\n// =====================================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\n\r\nexport async function GET(request: NextRequest) {\r\n  // Redirigir a la API del dashboard\r\n  const url = new URL('/api/admin/logistics/dashboard', request.url);\r\n  \r\n  // Copiar query parameters si los hay\r\n  const searchParams = new URL(request.url).searchParams;\r\n  searchParams.forEach((value, key) => {\r\n    url.searchParams.set(key, value);\r\n  });\r\n  \r\n  // Hacer la llamada interna\r\n  const response = await fetch(url.toString(), {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Cookie': request.headers.get('cookie') || '',\r\n      'Authorization': request.headers.get('authorization') || '',\r\n    },\r\n  });\r\n  \r\n  if (!response.ok) {\r\n    return NextResponse.json(\r\n      { error: 'Error al obtener datos de logística' },\r\n      { status: response.status }\r\n    );\r\n  }\r\n  \r\n  const data = await response.json();\r\n  return NextResponse.json(data);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]}