362247f8c6a784c16dca03a9f3ee2f13
// ===================================
// PINTEYA E-COMMERCE - STRUCTURED LOGGING SYSTEM
// ===================================
"use strict";

/* istanbul ignore next */
function cov_76dq07ys0() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\enterprise\\logger\\index.ts";
  var hash = "69fdbeeaff7be31506d267a910290c9a2da9474d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\enterprise\\logger\\index.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 39,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 27
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 24
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 24
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 30
        }
      },
      "9": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 27
        }
      },
      "10": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 26
        }
      },
      "11": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 22
        }
      },
      "12": {
        start: {
          line: 40,
          column: 29
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "13": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 32
        }
      },
      "14": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 30
        }
      },
      "15": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 30
        }
      },
      "16": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 32
        }
      },
      "17": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 38
        }
      },
      "18": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 20
        }
      },
      "19": {
        start: {
          line: 48,
          column: 32
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "20": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 39
        }
      },
      "21": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 39
        }
      },
      "22": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 35
        }
      },
      "23": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 33
        }
      },
      "24": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 31
        }
      },
      "25": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 41
        }
      },
      "26": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 47
        }
      },
      "27": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 33
        }
      },
      "28": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 23
        }
      },
      "29": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 65
        }
      },
      "30": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 34
        }
      },
      "31": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 64
        }
      },
      "32": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 81
        }
      },
      "33": {
        start: {
          line: 67,
          column: 23
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "34": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 70
        }
      },
      "35": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 81,
          column: 61
        }
      },
      "36": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "37": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 19
        }
      },
      "38": {
        start: {
          line: 87,
          column: 31
        },
        end: {
          line: 87,
          column: 57
        }
      },
      "39": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "40": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "41": {
        start: {
          line: 92,
          column: 20
        },
        end: {
          line: 92,
          column: 50
        }
      },
      "42": {
        start: {
          line: 93,
          column: 20
        },
        end: {
          line: 93,
          column: 26
        }
      },
      "43": {
        start: {
          line: 95,
          column: 20
        },
        end: {
          line: 95,
          column: 49
        }
      },
      "44": {
        start: {
          line: 96,
          column: 20
        },
        end: {
          line: 96,
          column: 26
        }
      },
      "45": {
        start: {
          line: 98,
          column: 20
        },
        end: {
          line: 98,
          column: 49
        }
      },
      "46": {
        start: {
          line: 99,
          column: 20
        },
        end: {
          line: 99,
          column: 26
        }
      },
      "47": {
        start: {
          line: 102,
          column: 20
        },
        end: {
          line: 102,
          column: 50
        }
      },
      "48": {
        start: {
          line: 103,
          column: 20
        },
        end: {
          line: 103,
          column: 26
        }
      },
      "49": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "50": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 122,
          column: 11
        }
      },
      "51": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 133,
          column: 11
        }
      },
      "52": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 144,
          column: 11
        }
      },
      "53": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 155,
          column: 11
        }
      },
      "54": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 167,
          column: 11
        }
      },
      "55": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 179,
          column: 11
        }
      },
      "56": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 190,
          column: 11
        }
      },
      "57": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 201,
          column: 11
        }
      },
      "58": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 216,
          column: 11
        }
      },
      "59": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 231,
          column: 11
        }
      },
      "60": {
        start: {
          line: 235,
          column: 22
        },
        end: {
          line: 235,
          column: 32
        }
      },
      "61": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 269,
          column: 9
        }
      },
      "62": {
        start: {
          line: 237,
          column: 27
        },
        end: {
          line: 237,
          column: 31
        }
      },
      "63": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 261,
          column: 13
        }
      },
      "64": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 253,
          column: 19
        }
      },
      "65": {
        start: {
          line: 240,
          column: 37
        },
        end: {
          line: 240,
          column: 55
        }
      },
      "66": {
        start: {
          line: 241,
          column: 20
        },
        end: {
          line: 244,
          column: 33
        }
      },
      "67": {
        start: {
          line: 245,
          column: 20
        },
        end: {
          line: 245,
          column: 33
        }
      },
      "68": {
        start: {
          line: 247,
          column: 37
        },
        end: {
          line: 247,
          column: 55
        }
      },
      "69": {
        start: {
          line: 248,
          column: 20
        },
        end: {
          line: 251,
          column: 33
        }
      },
      "70": {
        start: {
          line: 252,
          column: 20
        },
        end: {
          line: 252,
          column: 32
        }
      },
      "71": {
        start: {
          line: 255,
          column: 33
        },
        end: {
          line: 255,
          column: 51
        }
      },
      "72": {
        start: {
          line: 256,
          column: 16
        },
        end: {
          line: 259,
          column: 29
        }
      },
      "73": {
        start: {
          line: 260,
          column: 16
        },
        end: {
          line: 260,
          column: 30
        }
      },
      "74": {
        start: {
          line: 263,
          column: 29
        },
        end: {
          line: 263,
          column: 47
        }
      },
      "75": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 267,
          column: 25
        }
      },
      "76": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 24
        }
      },
      "77": {
        start: {
          line: 272,
          column: 15
        },
        end: {
          line: 272,
          column: 37
        }
      },
      "78": {
        start: {
          line: 273,
          column: 19
        },
        end: {
          line: 275,
          column: 1
        }
      },
      "79": {
        start: {
          line: 274,
          column: 4
        },
        end: {
          line: 274,
          column: 58
        }
      },
      "80": {
        start: {
          line: 276,
          column: 19
        },
        end: {
          line: 278,
          column: 1
        }
      },
      "81": {
        start: {
          line: 277,
          column: 4
        },
        end: {
          line: 277,
          column: 58
        }
      },
      "82": {
        start: {
          line: 279,
          column: 20
        },
        end: {
          line: 281,
          column: 1
        }
      },
      "83": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 280,
          column: 60
        }
      },
      "84": {
        start: {
          line: 282,
          column: 23
        },
        end: {
          line: 284,
          column: 1
        }
      },
      "85": {
        start: {
          line: 283,
          column: 4
        },
        end: {
          line: 283,
          column: 66
        }
      },
      "86": {
        start: {
          line: 285,
          column: 17
        },
        end: {
          line: 285,
          column: 23
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 23
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 19
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 22
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 23
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 22
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 18
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 40,
            column: 29
          },
          end: {
            line: 40,
            column: 30
          }
        },
        loc: {
          start: {
            line: 40,
            column: 48
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 40
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 33
          }
        },
        loc: {
          start: {
            line: 48,
            column: 54
          },
          end: {
            line: 58,
            column: 1
          }
        },
        line: 48
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 17
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 60
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        loc: {
          start: {
            line: 66,
            column: 21
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 66
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 26
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 76
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        loc: {
          start: {
            line: 83,
            column: 20
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 83
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        loc: {
          start: {
            line: 113,
            column: 51
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 113
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        loc: {
          start: {
            line: 124,
            column: 51
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 124
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        },
        loc: {
          start: {
            line: 135,
            column: 53
          },
          end: {
            line: 145,
            column: 5
          }
        },
        line: 135
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        },
        loc: {
          start: {
            line: 146,
            column: 59
          },
          end: {
            line: 156,
            column: 5
          }
        },
        line: 146
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        },
        loc: {
          start: {
            line: 158,
            column: 50
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 158
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        loc: {
          start: {
            line: 170,
            column: 52
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 170
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        loc: {
          start: {
            line: 181,
            column: 44
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 181
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 192,
            column: 4
          },
          end: {
            line: 192,
            column: 5
          }
        },
        loc: {
          start: {
            line: 192,
            column: 44
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 192
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        },
        loc: {
          start: {
            line: 203,
            column: 46
          },
          end: {
            line: 217,
            column: 5
          }
        },
        line: 203
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        loc: {
          start: {
            line: 218,
            column: 49
          },
          end: {
            line: 232,
            column: 5
          }
        },
        line: 218
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 234,
            column: 5
          }
        },
        loc: {
          start: {
            line: 234,
            column: 48
          },
          end: {
            line: 270,
            column: 5
          }
        },
        line: 234
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 239,
            column: 35
          },
          end: {
            line: 239,
            column: 36
          }
        },
        loc: {
          start: {
            line: 239,
            column: 44
          },
          end: {
            line: 246,
            column: 17
          }
        },
        line: 239
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 246,
            column: 25
          },
          end: {
            line: 246,
            column: 26
          }
        },
        loc: {
          start: {
            line: 246,
            column: 34
          },
          end: {
            line: 253,
            column: 17
          }
        },
        line: 246
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 273,
            column: 19
          },
          end: {
            line: 273,
            column: 20
          }
        },
        loc: {
          start: {
            line: 273,
            column: 60
          },
          end: {
            line: 275,
            column: 1
          }
        },
        line: 273
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 276,
            column: 19
          },
          end: {
            line: 276,
            column: 20
          }
        },
        loc: {
          start: {
            line: 276,
            column: 60
          },
          end: {
            line: 278,
            column: 1
          }
        },
        line: 276
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 279,
            column: 20
          },
          end: {
            line: 279,
            column: 21
          }
        },
        loc: {
          start: {
            line: 279,
            column: 62
          },
          end: {
            line: 281,
            column: 1
          }
        },
        line: 279
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 282,
            column: 23
          },
          end: {
            line: 282,
            column: 24
          }
        },
        loc: {
          start: {
            line: 282,
            column: 68
          },
          end: {
            line: 284,
            column: 1
          }
        },
        line: 282
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 61,
            column: 27
          },
          end: {
            line: 61,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 27
          },
          end: {
            line: 61,
            column: 47
          }
        }, {
          start: {
            line: 61,
            column: 51
          },
          end: {
            line: 61,
            column: 64
          }
        }],
        line: 61
      },
      "1": {
        loc: {
          start: {
            line: 64,
            column: 24
          },
          end: {
            line: 64,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 64,
            column: 64
          },
          end: {
            line: 64,
            column: 70
          }
        }, {
          start: {
            line: 64,
            column: 73
          },
          end: {
            line: 64,
            column: 80
          }
        }],
        line: 64
      },
      "2": {
        loc: {
          start: {
            line: 81,
            column: 17
          },
          end: {
            line: 81,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 81,
            column: 54
          },
          end: {
            line: 81,
            column: 55
          }
        }, {
          start: {
            line: 81,
            column: 58
          },
          end: {
            line: 81,
            column: 59
          }
        }],
        line: 81
      },
      "3": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "4": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "5": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 91,
            column: 16
          },
          end: {
            line: 93,
            column: 26
          }
        }, {
          start: {
            line: 94,
            column: 16
          },
          end: {
            line: 96,
            column: 26
          }
        }, {
          start: {
            line: 97,
            column: 16
          },
          end: {
            line: 99,
            column: 26
          }
        }, {
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 100,
            column: 29
          }
        }, {
          start: {
            line: 101,
            column: 16
          },
          end: {
            line: 103,
            column: 26
          }
        }],
        line: 90
      },
      "6": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "7": {
        loc: {
          start: {
            line: 174,
            column: 22
          },
          end: {
            line: 174,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 22
          },
          end: {
            line: 174,
            column: 30
          }
        }, {
          start: {
            line: 174,
            column: 34
          },
          end: {
            line: 174,
            column: 39
          }
        }],
        line: 174
      },
      "8": {
        loc: {
          start: {
            line: 210,
            column: 19
          },
          end: {
            line: 214,
            column: 25
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 210,
            column: 27
          },
          end: {
            line: 214,
            column: 13
          }
        }, {
          start: {
            line: 214,
            column: 16
          },
          end: {
            line: 214,
            column: 25
          }
        }],
        line: 210
      },
      "9": {
        loc: {
          start: {
            line: 225,
            column: 19
          },
          end: {
            line: 229,
            column: 25
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 225,
            column: 27
          },
          end: {
            line: 229,
            column: 13
          }
        }, {
          start: {
            line: 229,
            column: 16
          },
          end: {
            line: 229,
            column: 25
          }
        }],
        line: 225
      },
      "10": {
        loc: {
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 261,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 261,
            column: 13
          }
        }, {
          start: {
            line: 254,
            column: 19
          },
          end: {
            line: 261,
            column: 13
          }
        }],
        line: 238
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\enterprise\\logger\\index.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - STRUCTURED LOGGING SYSTEM\r\n// ===================================\r\n\r\nexport enum LogLevel {\r\n  DEBUG = 'debug',\r\n  INFO = 'info',\r\n  WARN = 'warn',\r\n  ERROR = 'error',\r\n  CRITICAL = 'critical'\r\n}\r\n\r\nexport enum LogCategory {\r\n  PAYMENT = 'payment',\r\n  WEBHOOK = 'webhook',\r\n  ORDER = 'order',\r\n  AUTH = 'auth',\r\n  API = 'api',\r\n  SECURITY = 'security',\r\n  PERFORMANCE = 'performance',\r\n  USER = 'user'\r\n}\r\n\r\ninterface BaseLogEntry {\r\n  timestamp: string;\r\n  level: LogLevel;\r\n  category: LogCategory;\r\n  message: string;\r\n  requestId?: string;\r\n  userId?: string;\r\n  sessionId?: string;\r\n  clientIP?: string;\r\n  userAgent?: string;\r\n  environment: string;\r\n}\r\n\r\ninterface PaymentLogEntry extends BaseLogEntry {\r\n  category: LogCategory.PAYMENT;\r\n  paymentData: {\r\n    orderId?: string;\r\n    paymentId?: string;\r\n    amount?: number;\r\n    currency?: string;\r\n    status?: string;\r\n    method?: string;\r\n    preferenceId?: string;\r\n  };\r\n}\r\n\r\ninterface WebhookLogEntry extends BaseLogEntry {\r\n  category: LogCategory.WEBHOOK;\r\n  webhookData: {\r\n    type?: string;\r\n    action?: string;\r\n    dataId?: string;\r\n    signature?: string;\r\n    isValid?: boolean;\r\n    processingTime?: number;\r\n  };\r\n}\r\n\r\ninterface SecurityLogEntry extends BaseLogEntry {\r\n  category: LogCategory.SECURITY;\r\n  securityData: {\r\n    threat?: string;\r\n    blocked?: boolean;\r\n    reason?: string;\r\n    riskScore?: number;\r\n  };\r\n}\r\n\r\ninterface PerformanceLogEntry extends BaseLogEntry {\r\n  category: LogCategory.PERFORMANCE;\r\n  performanceData: {\r\n    operation?: string;\r\n    duration?: number;\r\n    endpoint?: string;\r\n    statusCode?: number;\r\n    responseSize?: number;\r\n  };\r\n}\r\n\r\ntype LogEntry = PaymentLogEntry | WebhookLogEntry | SecurityLogEntry | PerformanceLogEntry | BaseLogEntry;\r\n\r\nclass StructuredLogger {\r\n  private environment: string;\r\n  private enableConsole: boolean;\r\n  private enableFile: boolean;\r\n  private minLevel: LogLevel;\r\n\r\n  constructor() {\r\n    this.environment = process.env.NODE_ENV || 'development';\r\n    this.enableConsole = true;\r\n    this.enableFile = process.env.NODE_ENV === 'production';\r\n    this.minLevel = process.env.NODE_ENV === 'production' ? LogLevel.INFO : LogLevel.DEBUG;\r\n  }\r\n\r\n  private shouldLog(level: LogLevel): boolean {\r\n    const levels = [LogLevel.DEBUG, LogLevel.INFO, LogLevel.WARN, LogLevel.ERROR, LogLevel.CRITICAL];\r\n    return levels.indexOf(level) >= levels.indexOf(this.minLevel);\r\n  }\r\n\r\n  private formatLogEntry(entry: LogEntry): string {\r\n    return JSON.stringify({\r\n      ...entry,\r\n      timestamp: new Date().toISOString(),\r\n      environment: this.environment,\r\n    }, null, this.environment === 'development' ? 2 : 0);\r\n  }\r\n\r\n  private writeLog(entry: LogEntry): void {\r\n    if (!this.shouldLog(entry.level)) {return;}\r\n\r\n    const formattedEntry = this.formatLogEntry(entry);\r\n\r\n    // Console output\r\n    if (this.enableConsole) {\r\n      switch (entry.level) {\r\n        case LogLevel.DEBUG:\r\n          console.debug(formattedEntry);\r\n          break;\r\n        case LogLevel.INFO:\r\n          console.info(formattedEntry);\r\n          break;\r\n        case LogLevel.WARN:\r\n          console.warn(formattedEntry);\r\n          break;\r\n        case LogLevel.ERROR:\r\n        case LogLevel.CRITICAL:\r\n          console.error(formattedEntry);\r\n          break;\r\n      }\r\n    }\r\n\r\n    // File output (en producci\xF3n se podr\xEDa integrar con servicios como Winston, Pino, etc.)\r\n    if (this.enableFile) {\r\n      // TODO: Implementar escritura a archivo o servicio de logging externo\r\n      // Por ahora solo console en producci\xF3n\r\n    }\r\n  }\r\n\r\n  // M\xE9todos p\xFAblicos para diferentes categor\xEDas\r\n  payment(level: LogLevel, message: string, paymentData: PaymentLogEntry['paymentData'], metadata?: Partial<BaseLogEntry>): void {\r\n    this.writeLog({\r\n      timestamp: new Date().toISOString(),\r\n      level,\r\n      category: LogCategory.PAYMENT,\r\n      message,\r\n      paymentData,\r\n      environment: this.environment,\r\n      ...metadata,\r\n    } as PaymentLogEntry);\r\n  }\r\n\r\n  webhook(level: LogLevel, message: string, webhookData: WebhookLogEntry['webhookData'], metadata?: Partial<BaseLogEntry>): void {\r\n    this.writeLog({\r\n      timestamp: new Date().toISOString(),\r\n      level,\r\n      category: LogCategory.WEBHOOK,\r\n      message,\r\n      webhookData,\r\n      environment: this.environment,\r\n      ...metadata,\r\n    } as WebhookLogEntry);\r\n  }\r\n\r\n  security(level: LogLevel, message: string, securityData: SecurityLogEntry['securityData'], metadata?: Partial<BaseLogEntry>): void {\r\n    this.writeLog({\r\n      timestamp: new Date().toISOString(),\r\n      level,\r\n      category: LogCategory.SECURITY,\r\n      message,\r\n      securityData,\r\n      environment: this.environment,\r\n      ...metadata,\r\n    } as SecurityLogEntry);\r\n  }\r\n\r\n  performance(level: LogLevel, message: string, performanceData: PerformanceLogEntry['performanceData'], metadata?: Partial<BaseLogEntry>): void {\r\n    this.writeLog({\r\n      timestamp: new Date().toISOString(),\r\n      level,\r\n      category: LogCategory.PERFORMANCE,\r\n      message,\r\n      performanceData,\r\n      environment: this.environment,\r\n      ...metadata,\r\n    } as PerformanceLogEntry);\r\n  }\r\n\r\n  // M\xE9todo log gen\xE9rico para compatibilidad\r\n  log(level: LogLevel, category: LogCategory, message: string, data?: any, metadata?: Partial<BaseLogEntry>): void {\r\n    this.writeLog({\r\n      timestamp: new Date().toISOString(),\r\n      level,\r\n      category,\r\n      message,\r\n      environment: this.environment,\r\n      data,\r\n      ...metadata,\r\n    } as BaseLogEntry);\r\n  }\r\n\r\n  // M\xE9todos de conveniencia\r\n  debug(level: LogLevel, message: string, data?: any, category?: LogCategory, metadata?: Partial<BaseLogEntry>): void {\r\n    this.writeLog({\r\n      timestamp: new Date().toISOString(),\r\n      level: level,\r\n      category: category || LogCategory.API,\r\n      message,\r\n      environment: this.environment,\r\n      data,\r\n      ...metadata,\r\n    } as BaseLogEntry);\r\n  }\r\n\r\n  info(category: LogCategory, message: string, data?: any, metadata?: Partial<BaseLogEntry>): void {\r\n    this.writeLog({\r\n      timestamp: new Date().toISOString(),\r\n      level: LogLevel.INFO,\r\n      category,\r\n      message,\r\n      environment: this.environment,\r\n      data,\r\n      ...metadata,\r\n    } as BaseLogEntry);\r\n  }\r\n\r\n  warn(category: LogCategory, message: string, data?: any, metadata?: Partial<BaseLogEntry>): void {\r\n    this.writeLog({\r\n      timestamp: new Date().toISOString(),\r\n      level: LogLevel.WARN,\r\n      category,\r\n      message,\r\n      environment: this.environment,\r\n      data,\r\n      ...metadata,\r\n    } as BaseLogEntry);\r\n  }\r\n\r\n  error(category: LogCategory, message: string, error?: Error, metadata?: Partial<BaseLogEntry>): void {\r\n    this.writeLog({\r\n      timestamp: new Date().toISOString(),\r\n      level: LogLevel.ERROR,\r\n      category,\r\n      message,\r\n      environment: this.environment,\r\n      error: error ? {\r\n        name: error.name,\r\n        message: error.message,\r\n        stack: error.stack,\r\n      } : undefined,\r\n      ...metadata,\r\n    } as BaseLogEntry);\r\n  }\r\n\r\n  critical(category: LogCategory, message: string, error?: Error, metadata?: Partial<BaseLogEntry>): void {\r\n    this.writeLog({\r\n      timestamp: new Date().toISOString(),\r\n      level: LogLevel.CRITICAL,\r\n      category,\r\n      message,\r\n      environment: this.environment,\r\n      error: error ? {\r\n        name: error.name,\r\n        message: error.message,\r\n        stack: error.stack,\r\n      } : undefined,\r\n      ...metadata,\r\n    } as BaseLogEntry);\r\n  }\r\n\r\n  // M\xE9todo para medir performance\r\n  measurePerformance<T>(operation: string, fn: () => T | Promise<T>, metadata?: Partial<BaseLogEntry>): T | Promise<T> {\r\n    const start = Date.now();\r\n    \r\n    try {\r\n      const result = fn();\r\n      \r\n      if (result instanceof Promise) {\r\n        return result.then((value) => {\r\n          const duration = Date.now() - start;\r\n          this.performance(LogLevel.INFO, `Operation completed: ${operation}`, {\r\n            operation,\r\n            duration,\r\n          }, metadata);\r\n          return value;\r\n        }).catch((error) => {\r\n          const duration = Date.now() - start;\r\n          this.performance(LogLevel.ERROR, `Operation failed: ${operation}`, {\r\n            operation,\r\n            duration,\r\n          }, metadata);\r\n          throw error;\r\n        });\r\n      } else {\r\n        const duration = Date.now() - start;\r\n        this.performance(LogLevel.INFO, `Operation completed: ${operation}`, {\r\n          operation,\r\n          duration,\r\n        }, metadata);\r\n        return result;\r\n      }\r\n    } catch (error) {\r\n      const duration = Date.now() - start;\r\n      this.performance(LogLevel.ERROR, `Operation failed: ${operation}`, {\r\n        operation,\r\n        duration,\r\n      }, metadata);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\n// Instancia singleton del logger\r\nexport const logger = new StructuredLogger();\r\n\r\n// Funciones de conveniencia para uso directo\r\nexport const logPayment = (level: LogLevel, message: string, paymentData: PaymentLogEntry['paymentData'], metadata?: Partial<BaseLogEntry>) => {\r\n  logger.payment(level, message, paymentData, metadata);\r\n};\r\n\r\nexport const logWebhook = (level: LogLevel, message: string, webhookData: WebhookLogEntry['webhookData'], metadata?: Partial<BaseLogEntry>) => {\r\n  logger.webhook(level, message, webhookData, metadata);\r\n};\r\n\r\nexport const logSecurity = (level: LogLevel, message: string, securityData: SecurityLogEntry['securityData'], metadata?: Partial<BaseLogEntry>) => {\r\n  logger.security(level, message, securityData, metadata);\r\n};\r\n\r\nexport const logPerformance = (level: LogLevel, message: string, performanceData: PerformanceLogEntry['performanceData'], metadata?: Partial<BaseLogEntry>) => {\r\n  logger.performance(level, message, performanceData, metadata);\r\n};\r\n\r\nexport default logger;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["LogCategory", "LogLevel", "logPayment", "logPerformance", "logSecurity", "logWebhook", "logger", "StructuredLogger", "environment", "process", "env", "NODE_ENV", "enableConsole", "enableFile", "minLevel", "shouldLog", "level", "levels", "indexOf", "formatLogEntry", "entry", "JSON", "stringify", "timestamp", "Date", "toISOString", "writeLog", "formattedEntry", "console", "debug", "info", "warn", "error", "payment", "message", "paymentData", "metadata", "category", "webhook", "webhookData", "security", "securityData", "performance", "performanceData", "log", "data", "name", "stack", "undefined", "critical", "measurePerformance", "operation", "fn", "start", "now", "result", "Promise", "then", "value", "duration", "catch"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "69fdbeeaff7be31506d267a910290c9a2da9474d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_76dq07ys0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_76dq07ys0();
cov_76dq07ys0().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_76dq07ys0().f[0]++;
  cov_76dq07ys0().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_76dq07ys0().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_76dq07ys0().s[3]++;
_export(exports, {
  get LogCategory() {
    /* istanbul ignore next */
    cov_76dq07ys0().f[1]++;
    cov_76dq07ys0().s[4]++;
    return LogCategory;
  },
  get LogLevel() {
    /* istanbul ignore next */
    cov_76dq07ys0().f[2]++;
    cov_76dq07ys0().s[5]++;
    return LogLevel;
  },
  get default() {
    /* istanbul ignore next */
    cov_76dq07ys0().f[3]++;
    cov_76dq07ys0().s[6]++;
    return _default;
  },
  get logPayment() {
    /* istanbul ignore next */
    cov_76dq07ys0().f[4]++;
    cov_76dq07ys0().s[7]++;
    return logPayment;
  },
  get logPerformance() {
    /* istanbul ignore next */
    cov_76dq07ys0().f[5]++;
    cov_76dq07ys0().s[8]++;
    return logPerformance;
  },
  get logSecurity() {
    /* istanbul ignore next */
    cov_76dq07ys0().f[6]++;
    cov_76dq07ys0().s[9]++;
    return logSecurity;
  },
  get logWebhook() {
    /* istanbul ignore next */
    cov_76dq07ys0().f[7]++;
    cov_76dq07ys0().s[10]++;
    return logWebhook;
  },
  get logger() {
    /* istanbul ignore next */
    cov_76dq07ys0().f[8]++;
    cov_76dq07ys0().s[11]++;
    return logger;
  }
});
var LogLevel =
/* istanbul ignore next */
(/*#__PURE__*/cov_76dq07ys0().s[12]++, function (LogLevel) {
  /* istanbul ignore next */
  cov_76dq07ys0().f[9]++;
  cov_76dq07ys0().s[13]++;
  LogLevel["DEBUG"] = "debug";
  /* istanbul ignore next */
  cov_76dq07ys0().s[14]++;
  LogLevel["INFO"] = "info";
  /* istanbul ignore next */
  cov_76dq07ys0().s[15]++;
  LogLevel["WARN"] = "warn";
  /* istanbul ignore next */
  cov_76dq07ys0().s[16]++;
  LogLevel["ERROR"] = "error";
  /* istanbul ignore next */
  cov_76dq07ys0().s[17]++;
  LogLevel["CRITICAL"] = "critical";
  /* istanbul ignore next */
  cov_76dq07ys0().s[18]++;
  return LogLevel;
}({}));
var LogCategory =
/* istanbul ignore next */
(/*#__PURE__*/cov_76dq07ys0().s[19]++, function (LogCategory) {
  /* istanbul ignore next */
  cov_76dq07ys0().f[10]++;
  cov_76dq07ys0().s[20]++;
  LogCategory["PAYMENT"] = "payment";
  /* istanbul ignore next */
  cov_76dq07ys0().s[21]++;
  LogCategory["WEBHOOK"] = "webhook";
  /* istanbul ignore next */
  cov_76dq07ys0().s[22]++;
  LogCategory["ORDER"] = "order";
  /* istanbul ignore next */
  cov_76dq07ys0().s[23]++;
  LogCategory["AUTH"] = "auth";
  /* istanbul ignore next */
  cov_76dq07ys0().s[24]++;
  LogCategory["API"] = "api";
  /* istanbul ignore next */
  cov_76dq07ys0().s[25]++;
  LogCategory["SECURITY"] = "security";
  /* istanbul ignore next */
  cov_76dq07ys0().s[26]++;
  LogCategory["PERFORMANCE"] = "performance";
  /* istanbul ignore next */
  cov_76dq07ys0().s[27]++;
  LogCategory["USER"] = "user";
  /* istanbul ignore next */
  cov_76dq07ys0().s[28]++;
  return LogCategory;
}({}));
class StructuredLogger {
  constructor() {
    /* istanbul ignore next */
    cov_76dq07ys0().f[11]++;
    cov_76dq07ys0().s[29]++;
    this.environment =
    /* istanbul ignore next */
    (cov_76dq07ys0().b[0][0]++, process.env.NODE_ENV) ||
    /* istanbul ignore next */
    (cov_76dq07ys0().b[0][1]++, 'development');
    /* istanbul ignore next */
    cov_76dq07ys0().s[30]++;
    this.enableConsole = true;
    /* istanbul ignore next */
    cov_76dq07ys0().s[31]++;
    this.enableFile = process.env.NODE_ENV === 'production';
    /* istanbul ignore next */
    cov_76dq07ys0().s[32]++;
    this.minLevel = process.env.NODE_ENV === 'production' ?
    /* istanbul ignore next */
    (cov_76dq07ys0().b[1][0]++, "info") :
    /* istanbul ignore next */
    (cov_76dq07ys0().b[1][1]++, "debug");
  }
  shouldLog(level) {
    /* istanbul ignore next */
    cov_76dq07ys0().f[12]++;
    const levels =
    /* istanbul ignore next */
    (cov_76dq07ys0().s[33]++, ["debug", "info", "warn", "error", "critical"]);
    /* istanbul ignore next */
    cov_76dq07ys0().s[34]++;
    return levels.indexOf(level) >= levels.indexOf(this.minLevel);
  }
  formatLogEntry(entry) {
    /* istanbul ignore next */
    cov_76dq07ys0().f[13]++;
    cov_76dq07ys0().s[35]++;
    return JSON.stringify({
      ...entry,
      timestamp: new Date().toISOString(),
      environment: this.environment
    }, null, this.environment === 'development' ?
    /* istanbul ignore next */
    (cov_76dq07ys0().b[2][0]++, 2) :
    /* istanbul ignore next */
    (cov_76dq07ys0().b[2][1]++, 0));
  }
  writeLog(entry) {
    /* istanbul ignore next */
    cov_76dq07ys0().f[14]++;
    cov_76dq07ys0().s[36]++;
    if (!this.shouldLog(entry.level)) {
      /* istanbul ignore next */
      cov_76dq07ys0().b[3][0]++;
      cov_76dq07ys0().s[37]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_76dq07ys0().b[3][1]++;
    }
    const formattedEntry =
    /* istanbul ignore next */
    (cov_76dq07ys0().s[38]++, this.formatLogEntry(entry));
    // Console output
    /* istanbul ignore next */
    cov_76dq07ys0().s[39]++;
    if (this.enableConsole) {
      /* istanbul ignore next */
      cov_76dq07ys0().b[4][0]++;
      cov_76dq07ys0().s[40]++;
      switch (entry.level) {
        case "debug":
          /* istanbul ignore next */
          cov_76dq07ys0().b[5][0]++;
          cov_76dq07ys0().s[41]++;
          console.debug(formattedEntry);
          /* istanbul ignore next */
          cov_76dq07ys0().s[42]++;
          break;
        case "info":
          /* istanbul ignore next */
          cov_76dq07ys0().b[5][1]++;
          cov_76dq07ys0().s[43]++;
          console.info(formattedEntry);
          /* istanbul ignore next */
          cov_76dq07ys0().s[44]++;
          break;
        case "warn":
          /* istanbul ignore next */
          cov_76dq07ys0().b[5][2]++;
          cov_76dq07ys0().s[45]++;
          console.warn(formattedEntry);
          /* istanbul ignore next */
          cov_76dq07ys0().s[46]++;
          break;
        case "error":
          /* istanbul ignore next */
          cov_76dq07ys0().b[5][3]++;
        case "critical":
          /* istanbul ignore next */
          cov_76dq07ys0().b[5][4]++;
          cov_76dq07ys0().s[47]++;
          console.error(formattedEntry);
          /* istanbul ignore next */
          cov_76dq07ys0().s[48]++;
          break;
      }
    } else
    /* istanbul ignore next */
    {
      cov_76dq07ys0().b[4][1]++;
    }
    // File output (en producción se podría integrar con servicios como Winston, Pino, etc.)
    cov_76dq07ys0().s[49]++;
    if (this.enableFile) {
      /* istanbul ignore next */
      cov_76dq07ys0().b[6][0]++;
    } // TODO: Implementar escritura a archivo o servicio de logging externo
    // Por ahora solo console en producción
    else
    /* istanbul ignore next */
    {
      cov_76dq07ys0().b[6][1]++;
    }
  }
  // Métodos públicos para diferentes categorías
  payment(level, message, paymentData, metadata) {
    /* istanbul ignore next */
    cov_76dq07ys0().f[15]++;
    cov_76dq07ys0().s[50]++;
    this.writeLog({
      timestamp: new Date().toISOString(),
      level,
      category: "payment",
      message,
      paymentData,
      environment: this.environment,
      ...metadata
    });
  }
  webhook(level, message, webhookData, metadata) {
    /* istanbul ignore next */
    cov_76dq07ys0().f[16]++;
    cov_76dq07ys0().s[51]++;
    this.writeLog({
      timestamp: new Date().toISOString(),
      level,
      category: "webhook",
      message,
      webhookData,
      environment: this.environment,
      ...metadata
    });
  }
  security(level, message, securityData, metadata) {
    /* istanbul ignore next */
    cov_76dq07ys0().f[17]++;
    cov_76dq07ys0().s[52]++;
    this.writeLog({
      timestamp: new Date().toISOString(),
      level,
      category: "security",
      message,
      securityData,
      environment: this.environment,
      ...metadata
    });
  }
  performance(level, message, performanceData, metadata) {
    /* istanbul ignore next */
    cov_76dq07ys0().f[18]++;
    cov_76dq07ys0().s[53]++;
    this.writeLog({
      timestamp: new Date().toISOString(),
      level,
      category: "performance",
      message,
      performanceData,
      environment: this.environment,
      ...metadata
    });
  }
  // Método log genérico para compatibilidad
  log(level, category, message, data, metadata) {
    /* istanbul ignore next */
    cov_76dq07ys0().f[19]++;
    cov_76dq07ys0().s[54]++;
    this.writeLog({
      timestamp: new Date().toISOString(),
      level,
      category,
      message,
      environment: this.environment,
      data,
      ...metadata
    });
  }
  // Métodos de conveniencia
  debug(level, message, data, category, metadata) {
    /* istanbul ignore next */
    cov_76dq07ys0().f[20]++;
    cov_76dq07ys0().s[55]++;
    this.writeLog({
      timestamp: new Date().toISOString(),
      level: level,
      category:
      /* istanbul ignore next */
      (cov_76dq07ys0().b[7][0]++, category) ||
      /* istanbul ignore next */
      (cov_76dq07ys0().b[7][1]++, "api"),
      message,
      environment: this.environment,
      data,
      ...metadata
    });
  }
  info(category, message, data, metadata) {
    /* istanbul ignore next */
    cov_76dq07ys0().f[21]++;
    cov_76dq07ys0().s[56]++;
    this.writeLog({
      timestamp: new Date().toISOString(),
      level: "info",
      category,
      message,
      environment: this.environment,
      data,
      ...metadata
    });
  }
  warn(category, message, data, metadata) {
    /* istanbul ignore next */
    cov_76dq07ys0().f[22]++;
    cov_76dq07ys0().s[57]++;
    this.writeLog({
      timestamp: new Date().toISOString(),
      level: "warn",
      category,
      message,
      environment: this.environment,
      data,
      ...metadata
    });
  }
  error(category, message, error, metadata) {
    /* istanbul ignore next */
    cov_76dq07ys0().f[23]++;
    cov_76dq07ys0().s[58]++;
    this.writeLog({
      timestamp: new Date().toISOString(),
      level: "error",
      category,
      message,
      environment: this.environment,
      error: error ?
      /* istanbul ignore next */
      (cov_76dq07ys0().b[8][0]++, {
        name: error.name,
        message: error.message,
        stack: error.stack
      }) :
      /* istanbul ignore next */
      (cov_76dq07ys0().b[8][1]++, undefined),
      ...metadata
    });
  }
  critical(category, message, error, metadata) {
    /* istanbul ignore next */
    cov_76dq07ys0().f[24]++;
    cov_76dq07ys0().s[59]++;
    this.writeLog({
      timestamp: new Date().toISOString(),
      level: "critical",
      category,
      message,
      environment: this.environment,
      error: error ?
      /* istanbul ignore next */
      (cov_76dq07ys0().b[9][0]++, {
        name: error.name,
        message: error.message,
        stack: error.stack
      }) :
      /* istanbul ignore next */
      (cov_76dq07ys0().b[9][1]++, undefined),
      ...metadata
    });
  }
  // Método para medir performance
  measurePerformance(operation, fn, metadata) {
    /* istanbul ignore next */
    cov_76dq07ys0().f[25]++;
    const start =
    /* istanbul ignore next */
    (cov_76dq07ys0().s[60]++, Date.now());
    /* istanbul ignore next */
    cov_76dq07ys0().s[61]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_76dq07ys0().s[62]++, fn());
      /* istanbul ignore next */
      cov_76dq07ys0().s[63]++;
      if (result instanceof Promise) {
        /* istanbul ignore next */
        cov_76dq07ys0().b[10][0]++;
        cov_76dq07ys0().s[64]++;
        return result.then(value => {
          /* istanbul ignore next */
          cov_76dq07ys0().f[26]++;
          const duration =
          /* istanbul ignore next */
          (cov_76dq07ys0().s[65]++, Date.now() - start);
          /* istanbul ignore next */
          cov_76dq07ys0().s[66]++;
          this.performance("info", `Operation completed: ${operation}`, {
            operation,
            duration
          }, metadata);
          /* istanbul ignore next */
          cov_76dq07ys0().s[67]++;
          return value;
        }).catch(error => {
          /* istanbul ignore next */
          cov_76dq07ys0().f[27]++;
          const duration =
          /* istanbul ignore next */
          (cov_76dq07ys0().s[68]++, Date.now() - start);
          /* istanbul ignore next */
          cov_76dq07ys0().s[69]++;
          this.performance("error", `Operation failed: ${operation}`, {
            operation,
            duration
          }, metadata);
          /* istanbul ignore next */
          cov_76dq07ys0().s[70]++;
          throw error;
        });
      } else {
        /* istanbul ignore next */
        cov_76dq07ys0().b[10][1]++;
        const duration =
        /* istanbul ignore next */
        (cov_76dq07ys0().s[71]++, Date.now() - start);
        /* istanbul ignore next */
        cov_76dq07ys0().s[72]++;
        this.performance("info", `Operation completed: ${operation}`, {
          operation,
          duration
        }, metadata);
        /* istanbul ignore next */
        cov_76dq07ys0().s[73]++;
        return result;
      }
    } catch (error) {
      const duration =
      /* istanbul ignore next */
      (cov_76dq07ys0().s[74]++, Date.now() - start);
      /* istanbul ignore next */
      cov_76dq07ys0().s[75]++;
      this.performance("error", `Operation failed: ${operation}`, {
        operation,
        duration
      }, metadata);
      /* istanbul ignore next */
      cov_76dq07ys0().s[76]++;
      throw error;
    }
  }
}
const logger =
/* istanbul ignore next */
(cov_76dq07ys0().s[77]++, new StructuredLogger());
/* istanbul ignore next */
cov_76dq07ys0().s[78]++;
const logPayment = (level, message, paymentData, metadata) => {
  /* istanbul ignore next */
  cov_76dq07ys0().f[28]++;
  cov_76dq07ys0().s[79]++;
  logger.payment(level, message, paymentData, metadata);
};
/* istanbul ignore next */
cov_76dq07ys0().s[80]++;
const logWebhook = (level, message, webhookData, metadata) => {
  /* istanbul ignore next */
  cov_76dq07ys0().f[29]++;
  cov_76dq07ys0().s[81]++;
  logger.webhook(level, message, webhookData, metadata);
};
/* istanbul ignore next */
cov_76dq07ys0().s[82]++;
const logSecurity = (level, message, securityData, metadata) => {
  /* istanbul ignore next */
  cov_76dq07ys0().f[30]++;
  cov_76dq07ys0().s[83]++;
  logger.security(level, message, securityData, metadata);
};
/* istanbul ignore next */
cov_76dq07ys0().s[84]++;
const logPerformance = (level, message, performanceData, metadata) => {
  /* istanbul ignore next */
  cov_76dq07ys0().f[31]++;
  cov_76dq07ys0().s[85]++;
  logger.performance(level, message, performanceData, metadata);
};
const _default =
/* istanbul ignore next */
(cov_76dq07ys0().s[86]++, logger);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,