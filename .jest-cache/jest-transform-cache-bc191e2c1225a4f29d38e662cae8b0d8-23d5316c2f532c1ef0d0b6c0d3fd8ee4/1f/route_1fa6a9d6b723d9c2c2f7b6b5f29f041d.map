{"version":3,"names":["cov_1vesezs6c1","actualCoverage","s","GET","f","runtime","supabase","_supabasejs","createClient","process","env","NEXT_PUBLIC_SUPABASE_URL","SUPABASE_SERVICE_ROLE_KEY","request","session","_config","auth","user","b","_server","NextResponse","json","success","error","status","searchParams","URL","url","email","get","data","from","select","eq","single","code","console"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\users\\profile\\route.ts"],"sourcesContent":["// Configuración para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n/**\r\n * API para obtener perfil de usuario\r\n * GET /api/admin/users/profile?email=user@example.com\r\n */\r\n\r\nimport { NextRequest, NextResponse } from 'next/server'\r\nimport { auth } from '@/lib/auth/config'\r\nimport { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabase = createClient(\r\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\r\n)\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticación\r\n    const session = await auth()\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'No autorizado' },\r\n        { status: 401 }\r\n      )\r\n    }\r\n\r\n    const { searchParams } = new URL(request.url)\r\n    const email = searchParams.get('email')\r\n\r\n    if (!email) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'Email es requerido' },\r\n        { status: 400 }\r\n      )\r\n    }\r\n\r\n    // Buscar usuario con roles\r\n    const { data: user, error } = await supabase\r\n      .from('users')\r\n      .select(`\r\n        *,\r\n        user_roles (\r\n          role_name,\r\n          description,\r\n          permissions\r\n        )\r\n      `)\r\n      .eq('email', email)\r\n      .single()\r\n\r\n    if (error) {\r\n      if (error.code === 'PGRST116') {\r\n        return NextResponse.json(\r\n          { success: false, error: 'Usuario no encontrado' },\r\n          { status: 404 }\r\n        )\r\n      }\r\n      \r\n      console.error('Error al buscar usuario:', error)\r\n      return NextResponse.json(\r\n        { success: false, error: 'Error al buscar usuario' },\r\n        { status: 500 }\r\n      )\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      user,\r\n    })\r\n\r\n  } catch (error) {\r\n    console.error('Error al obtener perfil de usuario:', error)\r\n    return NextResponse.json(\r\n      { success: false, error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}