8d62ad2dc072bda8e00dc3ba164ecb6a
'use client';
"use strict";

/* istanbul ignore next */
function cov_bngqux7ra() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useCategoriesWithDynamicCounts.ts";
  var hash = "953037567d39e48d8bd6909f40a3cf1e64270df4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useCategoriesWithDynamicCounts.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 39
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 46
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 45
        }
      },
      "7": {
        start: {
          line: 23,
          column: 15
        },
        end: {
          line: 23,
          column: 31
        }
      },
      "8": {
        start: {
          line: 24,
          column: 23
        },
        end: {
          line: 24,
          column: 49
        }
      },
      "9": {
        start: {
          line: 25,
          column: 29
        },
        end: {
          line: 25,
          column: 61
        }
      },
      "10": {
        start: {
          line: 26,
          column: 39
        },
        end: {
          line: 104,
          column: 1
        }
      },
      "11": {
        start: {
          line: 28,
          column: 95
        },
        end: {
          line: 28,
          column: 130
        }
      },
      "12": {
        start: {
          line: 30,
          column: 24
        },
        end: {
          line: 34,
          column: 6
        }
      },
      "13": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 67
        }
      },
      "14": {
        start: {
          line: 31,
          column: 41
        },
        end: {
          line: 31,
          column: 49
        }
      },
      "15": {
        start: {
          line: 36,
          column: 82
        },
        end: {
          line: 36,
          column: 185
        }
      },
      "16": {
        start: {
          line: 38,
          column: 40
        },
        end: {
          line: 56,
          column: 6
        }
      },
      "17": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "18": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 22
        }
      },
      "19": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 50,
          column: 11
        }
      },
      "20": {
        start: {
          line: 44,
          column: 33
        },
        end: {
          line: 44,
          column: 112
        }
      },
      "21": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 49,
          column: 14
        }
      },
      "22": {
        start: {
          line: 58,
          column: 32
        },
        end: {
          line: 70,
          column: 6
        }
      },
      "23": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "24": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 47
        }
      },
      "25": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 66,
          column: 16
        }
      },
      "26": {
        start: {
          line: 63,
          column: 60
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "27": {
        start: {
          line: 72,
          column: 22
        },
        end: {
          line: 72,
          column: 79
        }
      },
      "28": {
        start: {
          line: 73,
          column: 18
        },
        end: {
          line: 73,
          column: 48
        }
      },
      "29": {
        start: {
          line: 75,
          column: 18
        },
        end: {
          line: 90,
          column: 6
        }
      },
      "30": {
        start: {
          line: 76,
          column: 32
        },
        end: {
          line: 76,
          column: 58
        }
      },
      "31": {
        start: {
          line: 77,
          column: 39
        },
        end: {
          line: 77,
          column: 103
        }
      },
      "32": {
        start: {
          line: 77,
          column: 73
        },
        end: {
          line: 77,
          column: 95
        }
      },
      "33": {
        start: {
          line: 78,
          column: 30
        },
        end: {
          line: 78,
          column: 97
        }
      },
      "34": {
        start: {
          line: 78,
          column: 69
        },
        end: {
          line: 78,
          column: 93
        }
      },
      "35": {
        start: {
          line: 79,
          column: 30
        },
        end: {
          line: 79,
          column: 55
        }
      },
      "36": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 86,
          column: 10
        }
      },
      "37": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 103,
          column: 6
        }
      },
      "38": {
        start: {
          line: 97,
          column: 35
        },
        end: {
          line: 97,
          column: 85
        }
      },
      "39": {
        start: {
          line: 97,
          column: 67
        },
        end: {
          line: 97,
          column: 84
        }
      },
      "40": {
        start: {
          line: 98,
          column: 34
        },
        end: {
          line: 98,
          column: 105
        }
      },
      "41": {
        start: {
          line: 98,
          column: 66
        },
        end: {
          line: 98,
          column: 83
        }
      },
      "42": {
        start: {
          line: 105,
          column: 32
        },
        end: {
          line: 120,
          column: 1
        }
      },
      "43": {
        start: {
          line: 106,
          column: 24
        },
        end: {
          line: 114,
          column: 6
        }
      },
      "44": {
        start: {
          line: 106,
          column: 49
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "45": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 119,
          column: 7
        }
      },
      "46": {
        start: {
          line: 121,
          column: 38
        },
        end: {
          line: 125,
          column: 1
        }
      },
      "47": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 124,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 35
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 42
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 41
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 39
          },
          end: {
            line: 26,
            column: 40
          }
        },
        loc: {
          start: {
            line: 26,
            column: 121
          },
          end: {
            line: 104,
            column: 1
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 44
          },
          end: {
            line: 30,
            column: 45
          }
        },
        loc: {
          start: {
            line: 30,
            column: 48
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 31,
            column: 34
          },
          end: {
            line: 31,
            column: 35
          }
        },
        loc: {
          start: {
            line: 31,
            column: 41
          },
          end: {
            line: 31,
            column: 49
          }
        },
        line: 31
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 38,
            column: 60
          },
          end: {
            line: 38,
            column: 61
          }
        },
        loc: {
          start: {
            line: 38,
            column: 64
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 38
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 43,
            column: 34
          },
          end: {
            line: 43,
            column: 35
          }
        },
        loc: {
          start: {
            line: 43,
            column: 46
          },
          end: {
            line: 50,
            column: 9
          }
        },
        line: 43
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 58,
            column: 52
          },
          end: {
            line: 58,
            column: 53
          }
        },
        loc: {
          start: {
            line: 58,
            column: 56
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 58
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 63,
            column: 47
          },
          end: {
            line: 63,
            column: 48
          }
        },
        loc: {
          start: {
            line: 63,
            column: 60
          },
          end: {
            line: 66,
            column: 13
          }
        },
        line: 63
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 75,
            column: 38
          },
          end: {
            line: 75,
            column: 39
          }
        },
        loc: {
          start: {
            line: 75,
            column: 42
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 75
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 77,
            column: 66
          },
          end: {
            line: 77,
            column: 67
          }
        },
        loc: {
          start: {
            line: 77,
            column: 73
          },
          end: {
            line: 77,
            column: 95
          }
        },
        line: 77
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 78,
            column: 57
          },
          end: {
            line: 78,
            column: 58
          }
        },
        loc: {
          start: {
            line: 78,
            column: 69
          },
          end: {
            line: 78,
            column: 93
          }
        },
        line: 78
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 97,
            column: 27
          },
          end: {
            line: 97,
            column: 28
          }
        },
        loc: {
          start: {
            line: 97,
            column: 35
          },
          end: {
            line: 97,
            column: 85
          }
        },
        line: 97
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 97,
            column: 60
          },
          end: {
            line: 97,
            column: 61
          }
        },
        loc: {
          start: {
            line: 97,
            column: 67
          },
          end: {
            line: 97,
            column: 84
          }
        },
        line: 97
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 98,
            column: 26
          },
          end: {
            line: 98,
            column: 27
          }
        },
        loc: {
          start: {
            line: 98,
            column: 34
          },
          end: {
            line: 98,
            column: 105
          }
        },
        line: 98
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 98,
            column: 59
          },
          end: {
            line: 98,
            column: 60
          }
        },
        loc: {
          start: {
            line: 98,
            column: 66
          },
          end: {
            line: 98,
            column: 83
          }
        },
        line: 98
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 105,
            column: 32
          },
          end: {
            line: 105,
            column: 33
          }
        },
        loc: {
          start: {
            line: 105,
            column: 90
          },
          end: {
            line: 120,
            column: 1
          }
        },
        line: 105
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 106,
            column: 44
          },
          end: {
            line: 106,
            column: 45
          }
        },
        loc: {
          start: {
            line: 106,
            column: 49
          },
          end: {
            line: 111,
            column: 9
          }
        },
        line: 106
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 121,
            column: 38
          },
          end: {
            line: 121,
            column: 39
          }
        },
        loc: {
          start: {
            line: 121,
            column: 42
          },
          end: {
            line: 125,
            column: 1
          }
        },
        line: 121
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 40
          },
          end: {
            line: 26,
            column: 118
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 26,
            column: 116
          },
          end: {
            line: 26,
            column: 118
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 42
          },
          end: {
            line: 26,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 26,
            column: 56
          },
          end: {
            line: 26,
            column: 58
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 60
          },
          end: {
            line: 26,
            column: 83
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 26,
            column: 81
          },
          end: {
            line: 26,
            column: 83
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 26,
            column: 85
          },
          end: {
            line: 26,
            column: 111
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 26,
            column: 107
          },
          end: {
            line: 26,
            column: 111
          }
        }],
        line: 26
      },
      "4": {
        loc: {
          start: {
            line: 36,
            column: 133
          },
          end: {
            line: 36,
            column: 171
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 155
          },
          end: {
            line: 36,
            column: 166
          }
        }, {
          start: {
            line: 36,
            column: 169
          },
          end: {
            line: 36,
            column: 171
          }
        }],
        line: 36
      },
      "5": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "6": {
        loc: {
          start: {
            line: 44,
            column: 33
          },
          end: {
            line: 44,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 44,
            column: 72
          },
          end: {
            line: 44,
            column: 100
          }
        }, {
          start: {
            line: 44,
            column: 103
          },
          end: {
            line: 44,
            column: 112
          }
        }],
        line: 44
      },
      "7": {
        loc: {
          start: {
            line: 44,
            column: 33
          },
          end: {
            line: 44,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 33
          },
          end: {
            line: 44,
            column: 52
          }
        }, {
          start: {
            line: 44,
            column: 56
          },
          end: {
            line: 44,
            column: 69
          }
        }],
        line: 44
      },
      "8": {
        loc: {
          start: {
            line: 47,
            column: 32
          },
          end: {
            line: 47,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 61
          },
          end: {
            line: 47,
            column: 73
          }
        }, {
          start: {
            line: 47,
            column: 76
          },
          end: {
            line: 47,
            column: 104
          }
        }],
        line: 47
      },
      "9": {
        loc: {
          start: {
            line: 47,
            column: 76
          },
          end: {
            line: 47,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 76
          },
          end: {
            line: 47,
            column: 99
          }
        }, {
          start: {
            line: 47,
            column: 103
          },
          end: {
            line: 47,
            column: 104
          }
        }],
        line: 47
      },
      "10": {
        loc: {
          start: {
            line: 48,
            column: 27
          },
          end: {
            line: 48,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 27
          },
          end: {
            line: 48,
            column: 46
          }
        }, {
          start: {
            line: 48,
            column: 50
          },
          end: {
            line: 48,
            column: 63
          }
        }],
        line: 48
      },
      "11": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "12": {
        loc: {
          start: {
            line: 72,
            column: 22
          },
          end: {
            line: 72,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 22
          },
          end: {
            line: 72,
            column: 39
          }
        }, {
          start: {
            line: 72,
            column: 43
          },
          end: {
            line: 72,
            column: 62
          }
        }, {
          start: {
            line: 72,
            column: 66
          },
          end: {
            line: 72,
            column: 79
          }
        }],
        line: 72
      },
      "13": {
        loc: {
          start: {
            line: 73,
            column: 18
          },
          end: {
            line: 73,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 18
          },
          end: {
            line: 73,
            column: 33
          }
        }, {
          start: {
            line: 73,
            column: 37
          },
          end: {
            line: 73,
            column: 48
          }
        }],
        line: 73
      },
      "14": {
        loc: {
          start: {
            line: 98,
            column: 34
          },
          end: {
            line: 98,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 34
          },
          end: {
            line: 98,
            column: 100
          }
        }, {
          start: {
            line: 98,
            column: 104
          },
          end: {
            line: 98,
            column: 105
          }
        }],
        line: 98
      },
      "15": {
        loc: {
          start: {
            line: 105,
            column: 45
          },
          end: {
            line: 105,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 105,
            column: 66
          },
          end: {
            line: 105,
            column: 68
          }
        }],
        line: 105
      },
      "16": {
        loc: {
          start: {
            line: 105,
            column: 70
          },
          end: {
            line: 105,
            column: 87
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 105,
            column: 85
          },
          end: {
            line: 105,
            column: 87
          }
        }],
        line: 105
      },
      "17": {
        loc: {
          start: {
            line: 108,
            column: 15
          },
          end: {
            line: 110,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 15
          },
          end: {
            line: 108,
            column: 25
          }
        }, {
          start: {
            line: 108,
            column: 29
          },
          end: {
            line: 110,
            column: 13
          }
        }],
        line: 108
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useCategoriesWithDynamicCounts.ts"],
      sourcesContent: ["'use client';\r\n\r\nimport { useMemo } from 'react';\r\nimport { useCategories } from './useCategories';\r\nimport { useCategoryProductCounts, ProductFilters } from './useFilteredProducts';\r\nimport { Category } from '@/types/database';\r\n\r\n// ===================================\r\n// TIPOS\r\n// ===================================\r\n\r\nexport interface CategoryWithDynamicCount extends Category {\r\n  products_count: number;\r\n  isLoading?: boolean;\r\n}\r\n\r\nexport interface UseCategoriesWithDynamicCountsOptions {\r\n  baseFilters?: Omit<ProductFilters, 'categories' | 'category'>;\r\n  selectedCategories?: string[];\r\n  enableDynamicCounts?: boolean;\r\n}\r\n\r\n// ===================================\r\n// HOOK PRINCIPAL\r\n// ===================================\r\n\r\n/**\r\n * Hook que combina categor\xEDas est\xE1ticas con conteos din\xE1micos de productos\r\n * basados en filtros actuales\r\n */\r\nexport const useCategoriesWithDynamicCounts = ({\r\n  baseFilters = {},\r\n  selectedCategories = [],\r\n  enableDynamicCounts = true,\r\n}: UseCategoriesWithDynamicCountsOptions = {}) => {\r\n  // Obtener categor\xEDas base\r\n  const { categories: baseCategories, loading: categoriesLoading, error: categoriesError } = useCategories();\r\n\r\n  // Extraer slugs de categor\xEDas para obtener conteos\r\n  const categoryIds = useMemo(() => {\r\n    return baseCategories.map(cat => cat.slug).filter(Boolean);\r\n  }, [baseCategories]);\r\n\r\n  // Obtener conteos din\xE1micos solo si est\xE1 habilitado\r\n  const {\r\n    data: dynamicCounts,\r\n    isLoading: countsLoading,\r\n    error: countsError\r\n  } = useCategoryProductCounts(\r\n    enableDynamicCounts ? categoryIds : [],\r\n    baseFilters\r\n  );\r\n\r\n  // Combinar categor\xEDas con conteos din\xE1micos\r\n  const categoriesWithDynamicCounts = useMemo((): CategoryWithDynamicCount[] => {\r\n    // Si no hay categor\xEDas base, retornar array vac\xEDo\r\n    if (baseCategories.length === 0) {\r\n      return [];\r\n    }\r\n\r\n    return baseCategories.map(category => {\r\n      const dynamicCount = enableDynamicCounts && dynamicCounts\r\n        ? dynamicCounts[category.slug]\r\n        : undefined;\r\n\r\n      return {\r\n        ...category,\r\n        products_count: dynamicCount !== undefined ? dynamicCount : (category.products_count || 0),\r\n        isLoading: enableDynamicCounts && countsLoading,\r\n      };\r\n    });\r\n  }, [baseCategories, dynamicCounts, enableDynamicCounts, countsLoading]);\r\n  \r\n  // Filtrar categor\xEDas seleccionadas si es necesario\r\n  const availableCategories = useMemo(() => {\r\n    if (selectedCategories.length === 0) {\r\n      return categoriesWithDynamicCounts;\r\n    }\r\n    \r\n    // Mostrar todas las categor\xEDas, pero marcar las seleccionadas\r\n    return categoriesWithDynamicCounts.map(category => ({\r\n      ...category,\r\n      isSelected: selectedCategories.includes(category.slug),\r\n    }));\r\n  }, [categoriesWithDynamicCounts, selectedCategories]);\r\n  \r\n  // Estados combinados\r\n  const isLoading = categoriesLoading || (enableDynamicCounts && countsLoading);\r\n  const error = categoriesError || countsError;\r\n  \r\n  // Estad\xEDsticas \xFAtiles\r\n  const stats = useMemo(() => {\r\n    const totalCategories = availableCategories.length;\r\n    const categoriesWithProducts = availableCategories.filter(cat => cat.products_count > 0).length;\r\n    const totalProducts = availableCategories.reduce((sum, cat) => sum + cat.products_count, 0);\r\n    const selectedCount = selectedCategories.length;\r\n    \r\n    return {\r\n      totalCategories,\r\n      categoriesWithProducts,\r\n      totalProducts,\r\n      selectedCount,\r\n      hasSelection: selectedCount > 0,\r\n    };\r\n  }, [availableCategories, selectedCategories]);\r\n  \r\n  return {\r\n    categories: availableCategories,\r\n    loading: isLoading,\r\n    error,\r\n    stats,\r\n    // Funciones de utilidad\r\n    getCategoryBySlug: (slug: string) => availableCategories.find(cat => cat.slug === slug),\r\n    getCategoryCount: (slug: string) => availableCategories.find(cat => cat.slug === slug)?.products_count || 0,\r\n    // Configuraci\xF3n\r\n    enableDynamicCounts,\r\n    baseFilters,\r\n    selectedCategories,\r\n  };\r\n};\r\n\r\n// ===================================\r\n// HOOK SIMPLIFICADO PARA CASOS COMUNES\r\n// ===================================\r\n\r\n/**\r\n * Hook simplificado para obtener categor\xEDas con conteos din\xE1micos\r\n * basados en filtros de b\xFAsqueda y otros filtros activos\r\n */\r\nexport const useCategoriesForFilters = (\r\n  searchTerm?: string,\r\n  selectedCategories: string[] = [],\r\n  otherFilters: Omit<ProductFilters, 'categories' | 'category' | 'search'> = {}\r\n) => {\r\n  const baseFilters = useMemo(() => ({\r\n    ...otherFilters,\r\n    ...(searchTerm && { search: searchTerm }),\r\n  }), [searchTerm, otherFilters]);\r\n  \r\n  return useCategoriesWithDynamicCounts({\r\n    baseFilters,\r\n    selectedCategories,\r\n    enableDynamicCounts: true,\r\n  });\r\n};\r\n\r\n// ===================================\r\n// HOOK PARA CONTEOS EST\xC1TICOS (FALLBACK)\r\n// ===================================\r\n\r\n/**\r\n * Hook que devuelve categor\xEDas con conteos est\xE1ticos\r\n * \xDAtil cuando no se necesitan conteos din\xE1micos o como fallback\r\n */\r\nexport const useCategoriesWithStaticCounts = () => {\r\n  return useCategoriesWithDynamicCounts({\r\n    enableDynamicCounts: false,\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useCategoriesForFilters", "useCategoriesWithDynamicCounts", "useCategoriesWithStaticCounts", "baseFilters", "selectedCategories", "enableDynamicCounts", "categories", "baseCategories", "loading", "categoriesLoading", "error", "categoriesError", "useCategories", "categoryIds", "useMemo", "map", "cat", "slug", "filter", "Boolean", "data", "dynamicCounts", "isLoading", "countsLoading", "countsError", "useCategoryProductCounts", "categoriesWithDynamicCounts", "length", "category", "dynamicCount", "undefined", "products_count", "availableCategories", "isSelected", "includes", "stats", "totalCategories", "categoriesWithProducts", "totalProducts", "reduce", "sum", "selectedCount", "hasSelection", "getCategoryBySlug", "find", "getCategoryCount", "searchTerm", "otherFilters", "search"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "953037567d39e48d8bd6909f40a3cf1e64270df4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_bngqux7ra = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_bngqux7ra();
cov_bngqux7ra().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_bngqux7ra().f[0]++;
  cov_bngqux7ra().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_bngqux7ra().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_bngqux7ra().s[3]++;
_export(exports, {
  get useCategoriesForFilters() {
    /* istanbul ignore next */
    cov_bngqux7ra().f[1]++;
    cov_bngqux7ra().s[4]++;
    return useCategoriesForFilters;
  },
  get useCategoriesWithDynamicCounts() {
    /* istanbul ignore next */
    cov_bngqux7ra().f[2]++;
    cov_bngqux7ra().s[5]++;
    return useCategoriesWithDynamicCounts;
  },
  get useCategoriesWithStaticCounts() {
    /* istanbul ignore next */
    cov_bngqux7ra().f[3]++;
    cov_bngqux7ra().s[6]++;
    return useCategoriesWithStaticCounts;
  }
});
const _react =
/* istanbul ignore next */
(cov_bngqux7ra().s[7]++, require("react"));
const _useCategories =
/* istanbul ignore next */
(cov_bngqux7ra().s[8]++, require("./useCategories"));
const _useFilteredProducts =
/* istanbul ignore next */
(cov_bngqux7ra().s[9]++, require("./useFilteredProducts"));
/* istanbul ignore next */
cov_bngqux7ra().s[10]++;
const useCategoriesWithDynamicCounts = ({
  baseFilters =
  /* istanbul ignore next */
  (cov_bngqux7ra().b[1][0]++, {}),
  selectedCategories =
  /* istanbul ignore next */
  (cov_bngqux7ra().b[2][0]++, []),
  enableDynamicCounts =
  /* istanbul ignore next */
  (cov_bngqux7ra().b[3][0]++, true)
} =
/* istanbul ignore next */
(cov_bngqux7ra().b[0][0]++, {})) => {
  /* istanbul ignore next */
  cov_bngqux7ra().f[4]++;
  // Obtener categorías base
  const {
    categories: baseCategories,
    loading: categoriesLoading,
    error: categoriesError
  } =
  /* istanbul ignore next */
  (cov_bngqux7ra().s[11]++, (0, _useCategories.useCategories)());
  // Extraer slugs de categorías para obtener conteos
  const categoryIds =
  /* istanbul ignore next */
  (cov_bngqux7ra().s[12]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_bngqux7ra().f[5]++;
    cov_bngqux7ra().s[13]++;
    return baseCategories.map(cat => {
      /* istanbul ignore next */
      cov_bngqux7ra().f[6]++;
      cov_bngqux7ra().s[14]++;
      return cat.slug;
    }).filter(Boolean);
  }, [baseCategories]));
  // Obtener conteos dinámicos solo si está habilitado
  const {
    data: dynamicCounts,
    isLoading: countsLoading,
    error: countsError
  } =
  /* istanbul ignore next */
  (cov_bngqux7ra().s[15]++, (0, _useFilteredProducts.useCategoryProductCounts)(enableDynamicCounts ?
  /* istanbul ignore next */
  (cov_bngqux7ra().b[4][0]++, categoryIds) :
  /* istanbul ignore next */
  (cov_bngqux7ra().b[4][1]++, []), baseFilters));
  // Combinar categorías con conteos dinámicos
  const categoriesWithDynamicCounts =
  /* istanbul ignore next */
  (cov_bngqux7ra().s[16]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_bngqux7ra().f[7]++;
    cov_bngqux7ra().s[17]++;
    // Si no hay categorías base, retornar array vacío
    if (baseCategories.length === 0) {
      /* istanbul ignore next */
      cov_bngqux7ra().b[5][0]++;
      cov_bngqux7ra().s[18]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_bngqux7ra().b[5][1]++;
    }
    cov_bngqux7ra().s[19]++;
    return baseCategories.map(category => {
      /* istanbul ignore next */
      cov_bngqux7ra().f[8]++;
      const dynamicCount =
      /* istanbul ignore next */
      (cov_bngqux7ra().s[20]++,
      /* istanbul ignore next */
      (cov_bngqux7ra().b[7][0]++, enableDynamicCounts) &&
      /* istanbul ignore next */
      (cov_bngqux7ra().b[7][1]++, dynamicCounts) ?
      /* istanbul ignore next */
      (cov_bngqux7ra().b[6][0]++, dynamicCounts[category.slug]) :
      /* istanbul ignore next */
      (cov_bngqux7ra().b[6][1]++, undefined));
      /* istanbul ignore next */
      cov_bngqux7ra().s[21]++;
      return {
        ...category,
        products_count: dynamicCount !== undefined ?
        /* istanbul ignore next */
        (cov_bngqux7ra().b[8][0]++, dynamicCount) :
        /* istanbul ignore next */
        (cov_bngqux7ra().b[8][1]++,
        /* istanbul ignore next */
        (cov_bngqux7ra().b[9][0]++, category.products_count) ||
        /* istanbul ignore next */
        (cov_bngqux7ra().b[9][1]++, 0)),
        isLoading:
        /* istanbul ignore next */
        (cov_bngqux7ra().b[10][0]++, enableDynamicCounts) &&
        /* istanbul ignore next */
        (cov_bngqux7ra().b[10][1]++, countsLoading)
      };
    });
  }, [baseCategories, dynamicCounts, enableDynamicCounts, countsLoading]));
  // Filtrar categorías seleccionadas si es necesario
  const availableCategories =
  /* istanbul ignore next */
  (cov_bngqux7ra().s[22]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_bngqux7ra().f[9]++;
    cov_bngqux7ra().s[23]++;
    if (selectedCategories.length === 0) {
      /* istanbul ignore next */
      cov_bngqux7ra().b[11][0]++;
      cov_bngqux7ra().s[24]++;
      return categoriesWithDynamicCounts;
    } else
    /* istanbul ignore next */
    {
      cov_bngqux7ra().b[11][1]++;
    }
    // Mostrar todas las categorías, pero marcar las seleccionadas
    cov_bngqux7ra().s[25]++;
    return categoriesWithDynamicCounts.map(category => {
      /* istanbul ignore next */
      cov_bngqux7ra().f[10]++;
      cov_bngqux7ra().s[26]++;
      return {
        ...category,
        isSelected: selectedCategories.includes(category.slug)
      };
    });
  }, [categoriesWithDynamicCounts, selectedCategories]));
  // Estados combinados
  const isLoading =
  /* istanbul ignore next */
  (cov_bngqux7ra().s[27]++,
  /* istanbul ignore next */
  (cov_bngqux7ra().b[12][0]++, categoriesLoading) ||
  /* istanbul ignore next */
  (cov_bngqux7ra().b[12][1]++, enableDynamicCounts) &&
  /* istanbul ignore next */
  (cov_bngqux7ra().b[12][2]++, countsLoading));
  const error =
  /* istanbul ignore next */
  (cov_bngqux7ra().s[28]++,
  /* istanbul ignore next */
  (cov_bngqux7ra().b[13][0]++, categoriesError) ||
  /* istanbul ignore next */
  (cov_bngqux7ra().b[13][1]++, countsError));
  // Estadísticas útiles
  const stats =
  /* istanbul ignore next */
  (cov_bngqux7ra().s[29]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_bngqux7ra().f[11]++;
    const totalCategories =
    /* istanbul ignore next */
    (cov_bngqux7ra().s[30]++, availableCategories.length);
    const categoriesWithProducts =
    /* istanbul ignore next */
    (cov_bngqux7ra().s[31]++, availableCategories.filter(cat => {
      /* istanbul ignore next */
      cov_bngqux7ra().f[12]++;
      cov_bngqux7ra().s[32]++;
      return cat.products_count > 0;
    }).length);
    const totalProducts =
    /* istanbul ignore next */
    (cov_bngqux7ra().s[33]++, availableCategories.reduce((sum, cat) => {
      /* istanbul ignore next */
      cov_bngqux7ra().f[13]++;
      cov_bngqux7ra().s[34]++;
      return sum + cat.products_count;
    }, 0));
    const selectedCount =
    /* istanbul ignore next */
    (cov_bngqux7ra().s[35]++, selectedCategories.length);
    /* istanbul ignore next */
    cov_bngqux7ra().s[36]++;
    return {
      totalCategories,
      categoriesWithProducts,
      totalProducts,
      selectedCount,
      hasSelection: selectedCount > 0
    };
  }, [availableCategories, selectedCategories]));
  /* istanbul ignore next */
  cov_bngqux7ra().s[37]++;
  return {
    categories: availableCategories,
    loading: isLoading,
    error,
    stats,
    // Funciones de utilidad
    getCategoryBySlug: slug => {
      /* istanbul ignore next */
      cov_bngqux7ra().f[14]++;
      cov_bngqux7ra().s[38]++;
      return availableCategories.find(cat => {
        /* istanbul ignore next */
        cov_bngqux7ra().f[15]++;
        cov_bngqux7ra().s[39]++;
        return cat.slug === slug;
      });
    },
    getCategoryCount: slug => {
      /* istanbul ignore next */
      cov_bngqux7ra().f[16]++;
      cov_bngqux7ra().s[40]++;
      return /* istanbul ignore next */(cov_bngqux7ra().b[14][0]++, availableCategories.find(cat => {
        /* istanbul ignore next */
        cov_bngqux7ra().f[17]++;
        cov_bngqux7ra().s[41]++;
        return cat.slug === slug;
      })?.products_count) ||
      /* istanbul ignore next */
      (cov_bngqux7ra().b[14][1]++, 0);
    },
    // Configuración
    enableDynamicCounts,
    baseFilters,
    selectedCategories
  };
};
/* istanbul ignore next */
cov_bngqux7ra().s[42]++;
const useCategoriesForFilters = (searchTerm, selectedCategories =
/* istanbul ignore next */
(cov_bngqux7ra().b[15][0]++, []), otherFilters =
/* istanbul ignore next */
(cov_bngqux7ra().b[16][0]++, {})) => {
  /* istanbul ignore next */
  cov_bngqux7ra().f[18]++;
  const baseFilters =
  /* istanbul ignore next */
  (cov_bngqux7ra().s[43]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_bngqux7ra().f[19]++;
    cov_bngqux7ra().s[44]++;
    return {
      ...otherFilters,
      ...(
      /* istanbul ignore next */
      (cov_bngqux7ra().b[17][0]++, searchTerm) &&
      /* istanbul ignore next */
      (cov_bngqux7ra().b[17][1]++, {
        search: searchTerm
      }))
    };
  }, [searchTerm, otherFilters]));
  /* istanbul ignore next */
  cov_bngqux7ra().s[45]++;
  return useCategoriesWithDynamicCounts({
    baseFilters,
    selectedCategories,
    enableDynamicCounts: true
  });
};
/* istanbul ignore next */
cov_bngqux7ra().s[46]++;
const useCategoriesWithStaticCounts = () => {
  /* istanbul ignore next */
  cov_bngqux7ra().f[20]++;
  cov_bngqux7ra().s[47]++;
  return useCategoriesWithDynamicCounts({
    enableDynamicCounts: false
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,