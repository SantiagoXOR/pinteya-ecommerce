f28e8fd4f7e939b92f4377f99efc233f
// ===================================
// PINTEYA E-COMMERCE - LAZY METRICS DASHBOARD
// ===================================
"use client";
"use strict";

/* istanbul ignore next */
function cov_16vyzw6748() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\Dashboard\\LazyMetricsDashboard.tsx";
  var hash = "70c94a9adae7406335c27f6546ddad17edf1561b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\Dashboard\\LazyMetricsDashboard.tsx",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "2": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "3": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 26,
          column: 3
        }
      },
      "4": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 33
        }
      },
      "5": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 36
        }
      },
      "6": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 36
        }
      },
      "7": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 48
        }
      },
      "8": {
        start: {
          line: 28,
          column: 29
        },
        end: {
          line: 28,
          column: 72
        }
      },
      "9": {
        start: {
          line: 29,
          column: 14
        },
        end: {
          line: 29,
          column: 35
        }
      },
      "10": {
        start: {
          line: 30,
          column: 21
        },
        end: {
          line: 30,
          column: 44
        }
      },
      "11": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 51
        }
      },
      "12": {
        start: {
          line: 32,
          column: 39
        },
        end: {
          line: 32,
          column: 51
        }
      },
      "13": {
        start: {
          line: 33,
          column: 28
        },
        end: {
          line: 33,
          column: 41
        }
      },
      "14": {
        start: {
          line: 34,
          column: 27
        },
        end: {
          line: 34,
          column: 40
        }
      },
      "15": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 37,
          column: 20
        }
      },
      "16": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 66
        }
      },
      "17": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "18": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 19
        }
      },
      "19": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "20": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 46,
          column: 10
        }
      },
      "21": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 53
        }
      },
      "22": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "23": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 30
        }
      },
      "24": {
        start: {
          line: 52,
          column: 17
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "25": {
        start: {
          line: 55,
          column: 32
        },
        end: {
          line: 55,
          column: 88
        }
      },
      "26": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "27": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "28": {
        start: {
          line: 58,
          column: 23
        },
        end: {
          line: 58,
          column: 95
        }
      },
      "29": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 63,
          column: 13
        }
      },
      "30": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 57
        }
      },
      "31": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 39
        }
      },
      "32": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 25
        }
      },
      "33": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "34": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 31
        }
      },
      "35": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 18
        }
      },
      "36": {
        start: {
          line: 73,
          column: 39
        },
        end: {
          line: 73,
          column: 159
        }
      },
      "37": {
        start: {
          line: 73,
          column: 60
        },
        end: {
          line: 73,
          column: 158
        }
      },
      "38": {
        start: {
          line: 73,
          column: 101
        },
        end: {
          line: 73,
          column: 157
        }
      },
      "39": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 189,
          column: 7
        }
      },
      "40": {
        start: {
          line: 112,
          column: 45
        },
        end: {
          line: 136,
          column: 25
        }
      },
      "41": {
        start: {
          line: 142,
          column: 45
        },
        end: {
          line: 186,
          column: 25
        }
      },
      "42": {
        start: {
          line: 156,
          column: 69
        },
        end: {
          line: 165,
          column: 49
        }
      },
      "43": {
        start: {
          line: 177,
          column: 77
        },
        end: {
          line: 179,
          column: 57
        }
      },
      "44": {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 220,
          column: 7
        }
      },
      "45": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 231,
          column: 7
        }
      },
      "46": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 21
        }
      },
      "47": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 239,
          column: 10
        }
      },
      "48": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 245,
          column: 10
        }
      },
      "49": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 60
        }
      },
      "50": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 259,
          column: 9
        }
      },
      "51": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 258,
          column: 15
        }
      },
      "52": {
        start: {
          line: 254,
          column: 27
        },
        end: {
          line: 257,
          column: 22
        }
      },
      "53": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 260,
          column: 35
        }
      },
      "54": {
        start: {
          line: 264,
          column: 21
        },
        end: {
          line: 271,
          column: 5
        }
      },
      "55": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 107
        }
      },
      "56": {
        start: {
          line: 266,
          column: 49
        },
        end: {
          line: 266,
          column: 105
        }
      },
      "57": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 270,
          column: 11
        }
      },
      "58": {
        start: {
          line: 272,
          column: 4
        },
        end: {
          line: 274,
          column: 6
        }
      },
      "59": {
        start: {
          line: 277,
          column: 25
        },
        end: {
          line: 277,
          column: 47
        }
      },
      "60": {
        start: {
          line: 278,
          column: 4
        },
        end: {
          line: 284,
          column: 7
        }
      },
      "61": {
        start: {
          line: 280,
          column: 22
        },
        end: {
          line: 280,
          column: 48
        }
      },
      "62": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 281,
          column: 39
        }
      },
      "63": {
        start: {
          line: 281,
          column: 19
        },
        end: {
          line: 281,
          column: 38
        }
      },
      "64": {
        start: {
          line: 285,
          column: 4
        },
        end: {
          line: 285,
          column: 16
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 16
          }
        },
        loc: {
          start: {
            line: 9,
            column: 30
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 29
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 15
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 32
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "4": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 33
          }
        },
        loc: {
          start: {
            line: 31,
            column: 47
          },
          end: {
            line: 38,
            column: 1
          }
        },
        line: 31
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 35,
            column: 39
          },
          end: {
            line: 35,
            column: 40
          }
        },
        loc: {
          start: {
            line: 35,
            column: 61
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 35
      },
      "6": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 39,
            column: 9
          },
          end: {
            line: 39,
            column: 34
          }
        },
        loc: {
          start: {
            line: 39,
            column: 53
          },
          end: {
            line: 71,
            column: 1
          }
        },
        line: 39
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 73,
            column: 56
          },
          end: {
            line: 73,
            column: 57
          }
        },
        loc: {
          start: {
            line: 73,
            column: 60
          },
          end: {
            line: 73,
            column: 158
          }
        },
        line: 73
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 73,
            column: 83
          },
          end: {
            line: 73,
            column: 84
          }
        },
        loc: {
          start: {
            line: 73,
            column: 101
          },
          end: {
            line: 73,
            column: 157
          }
        },
        line: 73
      },
      "9": {
        name: "DashboardSkeleton",
        decl: {
          start: {
            line: 75,
            column: 9
          },
          end: {
            line: 75,
            column: 26
          }
        },
        loc: {
          start: {
            line: 75,
            column: 29
          },
          end: {
            line: 190,
            column: 1
          }
        },
        line: 75
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 112,
            column: 23
          },
          end: {
            line: 112,
            column: 24
          }
        },
        loc: {
          start: {
            line: 112,
            column: 45
          },
          end: {
            line: 136,
            column: 25
          }
        },
        line: 112
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 142,
            column: 23
          },
          end: {
            line: 142,
            column: 24
          }
        },
        loc: {
          start: {
            line: 142,
            column: 45
          },
          end: {
            line: 186,
            column: 25
          }
        },
        line: 142
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 156,
            column: 47
          },
          end: {
            line: 156,
            column: 48
          }
        },
        loc: {
          start: {
            line: 156,
            column: 69
          },
          end: {
            line: 165,
            column: 49
          }
        },
        line: 156
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 177,
            column: 55
          },
          end: {
            line: 177,
            column: 56
          }
        },
        loc: {
          start: {
            line: 177,
            column: 77
          },
          end: {
            line: 179,
            column: 57
          }
        },
        line: 177
      },
      "14": {
        name: "DashboardError",
        decl: {
          start: {
            line: 192,
            column: 9
          },
          end: {
            line: 192,
            column: 23
          }
        },
        loc: {
          start: {
            line: 192,
            column: 42
          },
          end: {
            line: 221,
            column: 1
          }
        },
        line: 192
      },
      "15": {
        name: "LazyMetricsDashboard",
        decl: {
          start: {
            line: 222,
            column: 9
          },
          end: {
            line: 222,
            column: 29
          }
        },
        loc: {
          start: {
            line: 222,
            column: 32
          },
          end: {
            line: 232,
            column: 1
          }
        },
        line: 222
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        },
        loc: {
          start: {
            line: 235,
            column: 22
          },
          end: {
            line: 240,
            column: 5
          }
        },
        line: 235
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        },
        loc: {
          start: {
            line: 241,
            column: 43
          },
          end: {
            line: 246,
            column: 5
          }
        },
        line: 241
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 247,
            column: 4
          },
          end: {
            line: 247,
            column: 5
          }
        },
        loc: {
          start: {
            line: 247,
            column: 40
          },
          end: {
            line: 249,
            column: 5
          }
        },
        line: 247
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 250,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        },
        loc: {
          start: {
            line: 250,
            column: 13
          },
          end: {
            line: 261,
            column: 5
          }
        },
        line: 250
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 254,
            column: 23
          },
          end: {
            line: 254,
            column: 24
          }
        },
        loc: {
          start: {
            line: 254,
            column: 27
          },
          end: {
            line: 257,
            column: 22
          }
        },
        line: 254
      },
      "21": {
        name: "usePrefetchDashboard",
        decl: {
          start: {
            line: 263,
            column: 9
          },
          end: {
            line: 263,
            column: 29
          }
        },
        loc: {
          start: {
            line: 263,
            column: 32
          },
          end: {
            line: 275,
            column: 1
          }
        },
        line: 263
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 264,
            column: 21
          },
          end: {
            line: 264,
            column: 22
          }
        },
        loc: {
          start: {
            line: 264,
            column: 25
          },
          end: {
            line: 271,
            column: 5
          }
        },
        line: 264
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 266,
            column: 31
          },
          end: {
            line: 266,
            column: 32
          }
        },
        loc: {
          start: {
            line: 266,
            column: 49
          },
          end: {
            line: 266,
            column: 105
          }
        },
        line: 266
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 268,
            column: 44
          },
          end: {
            line: 268,
            column: 45
          }
        },
        loc: {
          start: {
            line: 268,
            column: 48
          },
          end: {
            line: 270,
            column: 9
          }
        },
        line: 268
      },
      "25": {
        name: "DashboardPrefetch",
        decl: {
          start: {
            line: 276,
            column: 9
          },
          end: {
            line: 276,
            column: 26
          }
        },
        loc: {
          start: {
            line: 276,
            column: 29
          },
          end: {
            line: 286,
            column: 1
          }
        },
        line: 276
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 278,
            column: 29
          },
          end: {
            line: 278,
            column: 30
          }
        },
        loc: {
          start: {
            line: 278,
            column: 33
          },
          end: {
            line: 282,
            column: 5
          }
        },
        line: 278
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 281,
            column: 15
          },
          end: {
            line: 281,
            column: 16
          }
        },
        loc: {
          start: {
            line: 281,
            column: 19
          },
          end: {
            line: 281,
            column: 38
          }
        },
        line: 281
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 36,
            column: 15
          },
          end: {
            line: 36,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 29
          },
          end: {
            line: 36,
            column: 45
          }
        }, {
          start: {
            line: 36,
            column: 48
          },
          end: {
            line: 36,
            column: 65
          }
        }],
        line: 36
      },
      "2": {
        loc: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "3": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 20
          }
        }, {
          start: {
            line: 40,
            column: 24
          },
          end: {
            line: 40,
            column: 27
          }
        }, {
          start: {
            line: 40,
            column: 31
          },
          end: {
            line: 40,
            column: 45
          }
        }],
        line: 40
      },
      "4": {
        loc: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "5": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 20
          }
        }, {
          start: {
            line: 43,
            column: 24
          },
          end: {
            line: 43,
            column: 47
          }
        }, {
          start: {
            line: 43,
            column: 51
          },
          end: {
            line: 43,
            column: 76
          }
        }],
        line: 43
      },
      "6": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "7": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 13
          }
        }, {
          start: {
            line: 49,
            column: 17
          },
          end: {
            line: 49,
            column: 31
          }
        }],
        line: 49
      },
      "8": {
        loc: {
          start: {
            line: 55,
            column: 32
          },
          end: {
            line: 55,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 32
          },
          end: {
            line: 55,
            column: 53
          }
        }, {
          start: {
            line: 55,
            column: 57
          },
          end: {
            line: 55,
            column: 88
          }
        }],
        line: 55
      },
      "9": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "10": {
        loc: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 57,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 57,
            column: 29
          }
        }, {
          start: {
            line: 57,
            column: 33
          },
          end: {
            line: 57,
            column: 79
          }
        }],
        line: 57
      },
      "11": {
        loc: {
          start: {
            line: 58,
            column: 23
          },
          end: {
            line: 58,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 58,
            column: 47
          },
          end: {
            line: 58,
            column: 88
          }
        }, {
          start: {
            line: 58,
            column: 91
          },
          end: {
            line: 58,
            column: 95
          }
        }],
        line: 58
      },
      "12": {
        loc: {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 63,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 63,
            column: 13
          }
        }, {
          start: {
            line: 61,
            column: 19
          },
          end: {
            line: 63,
            column: 13
          }
        }],
        line: 59
      },
      "13": {
        loc: {
          start: {
            line: 59,
            column: 16
          },
          end: {
            line: 59,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 16
          },
          end: {
            line: 59,
            column: 20
          }
        }, {
          start: {
            line: 59,
            column: 25
          },
          end: {
            line: 59,
            column: 33
          }
        }, {
          start: {
            line: 59,
            column: 37
          },
          end: {
            line: 59,
            column: 45
          }
        }],
        line: 59
      },
      "14": {
        loc: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "15": {
        loc: {
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 259,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 259,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "16": {
        loc: {
          start: {
            line: 253,
            column: 23
          },
          end: {
            line: 253,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 253,
            column: 23
          },
          end: {
            line: 253,
            column: 39
          }
        }, {
          start: {
            line: 253,
            column: 43
          },
          end: {
            line: 253,
            column: 69
          }
        }],
        line: 253
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\Dashboard\\LazyMetricsDashboard.tsx"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - LAZY METRICS DASHBOARD\r\n// ===================================\r\n\r\n\"use client\";\r\n\r\nimport React, { lazy, Suspense } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { RefreshCw } from 'lucide-react';\r\n\r\n// Lazy loading del dashboard principal\r\nconst MetricsDashboard = lazy(() => import('./MetricsDashboard'));\r\n\r\n// Componente de loading\r\nfunction DashboardSkeleton() {\r\n  return (\r\n    <div className=\"space-y-6 animate-pulse\">\r\n      {/* Header skeleton */}\r\n      <div className=\"flex justify-between items-center\">\r\n        <div>\r\n          <div className=\"h-8 bg-gray-200 rounded w-64 mb-2\"></div>\r\n          <div className=\"h-4 bg-gray-200 rounded w-96\"></div>\r\n        </div>\r\n        <div className=\"flex gap-4\">\r\n          <div className=\"h-10 bg-gray-200 rounded w-32\"></div>\r\n          <div className=\"h-10 bg-gray-200 rounded w-32\"></div>\r\n          <div className=\"h-10 bg-gray-200 rounded w-24\"></div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Metrics cards skeleton */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        {Array.from({ length: 4 }).map((_, i) => (\r\n          <Card key={i}>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <div className=\"h-4 bg-gray-200 rounded w-24\"></div>\r\n              <div className=\"h-4 w-4 bg-gray-200 rounded\"></div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"h-8 bg-gray-200 rounded w-16 mb-2\"></div>\r\n              <div className=\"h-3 bg-gray-200 rounded w-32\"></div>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Endpoint cards skeleton */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n        {Array.from({ length: 3 }).map((_, i) => (\r\n          <Card key={i}>\r\n            <CardHeader>\r\n              <div className=\"h-6 bg-gray-200 rounded w-48\"></div>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                {Array.from({ length: 4 }).map((_, j) => (\r\n                  <div key={j}>\r\n                    <div className=\"h-3 bg-gray-200 rounded w-12 mb-1\"></div>\r\n                    <div className=\"h-4 bg-gray-200 rounded w-16\"></div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"border-t pt-4\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-32 mb-2\"></div>\r\n                <div className=\"grid grid-cols-2 gap-2\">\r\n                  {Array.from({ length: 4 }).map((_, j) => (\r\n                    <div key={j} className=\"h-3 bg-gray-200 rounded w-20\"></div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Componente de error\r\nfunction DashboardError({ error, retry }: { error: Error; retry: () => void }) {\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center h-64 space-y-4\">\r\n      <div className=\"text-red-500 text-center\">\r\n        <h3 className=\"text-lg font-semibold mb-2\">Error al cargar el dashboard</h3>\r\n        <p className=\"text-sm text-gray-600\">{error.message}</p>\r\n      </div>\r\n      <button\r\n        onClick={retry}\r\n        className=\"flex items-center px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors\"\r\n      >\r\n        <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n        Reintentar\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Componente principal con lazy loading\r\nexport default function LazyMetricsDashboard() {\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 p-6\">\r\n      <Suspense fallback={<DashboardSkeleton />}>\r\n        <ErrorBoundary>\r\n          <MetricsDashboard />\r\n        </ErrorBoundary>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Error boundary para manejar errores de carga\r\nclass ErrorBoundary extends React.Component<\r\n  { children: React.ReactNode },\r\n  { hasError: boolean; error?: Error }\r\n> {\r\n  constructor(props: { children: React.ReactNode }) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error) {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\r\n    console.error('Dashboard error:', error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <DashboardError\r\n          error={this.state.error || new Error('Unknown error')}\r\n          retry={() => this.setState({ hasError: false, error: undefined })}\r\n        />\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\n// Hook para precargar el dashboard\r\nexport function usePrefetchDashboard() {\r\n  const prefetch = () => {\r\n    // Precargar el componente\r\n    import('./MetricsDashboard');\r\n    \r\n    // Precargar datos de m\xE9tricas\r\n    fetch('/api/metrics?hours=1').catch(() => {\r\n      // Ignorar errores de precarga\r\n    });\r\n  };\r\n\r\n  return { prefetch };\r\n}\r\n\r\n// Componente de precarga para usar en otras p\xE1ginas\r\nexport function DashboardPrefetch() {\r\n  const { prefetch } = usePrefetchDashboard();\r\n\r\n  React.useEffect(() => {\r\n    // Precargar despu\xE9s de un peque\xF1o delay\r\n    const timer = setTimeout(prefetch, 1000);\r\n    return () => clearTimeout(timer);\r\n  }, [prefetch]);\r\n\r\n  return null;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["DashboardPrefetch", "LazyMetricsDashboard", "usePrefetchDashboard", "MetricsDashboard", "lazy", "DashboardSkeleton", "div", "className", "Array", "from", "length", "map", "_", "i", "Card", "CardHeader", "CardContent", "j", "DashboardError", "error", "retry", "h3", "p", "message", "button", "onClick", "RefreshCw", "Suspense", "fallback", "ErrorBoundary", "React", "Component", "props", "state", "hasError", "getDerivedStateFromError", "componentDidCatch", "errorInfo", "console", "render", "Error", "setState", "undefined", "children", "prefetch", "fetch", "catch", "useEffect", "timer", "setTimeout", "clearTimeout"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "70c94a9adae7406335c27f6546ddad17edf1561b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_16vyzw6748 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_16vyzw6748();
cov_16vyzw6748().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_16vyzw6748().f[0]++;
  cov_16vyzw6748().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_16vyzw6748().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_16vyzw6748().s[3]++;
_export(exports, {
  get DashboardPrefetch() {
    /* istanbul ignore next */
    cov_16vyzw6748().f[1]++;
    cov_16vyzw6748().s[4]++;
    return DashboardPrefetch;
  },
  get
  // Componente principal con lazy loading
  default() {
    /* istanbul ignore next */
    cov_16vyzw6748().f[2]++;
    cov_16vyzw6748().s[5]++;
    return LazyMetricsDashboard;
  },
  get usePrefetchDashboard() {
    /* istanbul ignore next */
    cov_16vyzw6748().f[3]++;
    cov_16vyzw6748().s[6]++;
    return usePrefetchDashboard;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_16vyzw6748().s[7]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_16vyzw6748().s[8]++, _interop_require_wildcard(require("react")));
const _card =
/* istanbul ignore next */
(cov_16vyzw6748().s[9]++, require("../ui/card"));
const _lucidereact =
/* istanbul ignore next */
(cov_16vyzw6748().s[10]++, require("lucide-react"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_16vyzw6748().f[4]++;
  cov_16vyzw6748().s[11]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_16vyzw6748().b[0][0]++;
    cov_16vyzw6748().s[12]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_16vyzw6748().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_16vyzw6748().s[13]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_16vyzw6748().s[14]++, new WeakMap());
  /* istanbul ignore next */
  cov_16vyzw6748().s[15]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_16vyzw6748().f[5]++;
    cov_16vyzw6748().s[16]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_16vyzw6748().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_16vyzw6748().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_16vyzw6748().f[6]++;
  cov_16vyzw6748().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_16vyzw6748().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_16vyzw6748().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_16vyzw6748().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_16vyzw6748().b[2][0]++;
    cov_16vyzw6748().s[18]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_16vyzw6748().b[2][1]++;
  }
  cov_16vyzw6748().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_16vyzw6748().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_16vyzw6748().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_16vyzw6748().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_16vyzw6748().b[4][0]++;
    cov_16vyzw6748().s[20]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_16vyzw6748().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_16vyzw6748().s[21]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_16vyzw6748().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_16vyzw6748().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_16vyzw6748().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_16vyzw6748().b[6][0]++;
    cov_16vyzw6748().s[23]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_16vyzw6748().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_16vyzw6748().s[24]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_16vyzw6748().s[25]++,
  /* istanbul ignore next */
  (cov_16vyzw6748().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_16vyzw6748().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_16vyzw6748().s[26]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_16vyzw6748().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_16vyzw6748().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_16vyzw6748().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_16vyzw6748().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_16vyzw6748().s[28]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_16vyzw6748().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_16vyzw6748().b[11][1]++, null));
      /* istanbul ignore next */
      cov_16vyzw6748().s[29]++;
      if (
      /* istanbul ignore next */
      (cov_16vyzw6748().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_16vyzw6748().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_16vyzw6748().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_16vyzw6748().b[12][0]++;
        cov_16vyzw6748().s[30]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_16vyzw6748().b[12][1]++;
        cov_16vyzw6748().s[31]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_16vyzw6748().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_16vyzw6748().s[32]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_16vyzw6748().s[33]++;
  if (cache) {
    /* istanbul ignore next */
    cov_16vyzw6748().b[14][0]++;
    cov_16vyzw6748().s[34]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_16vyzw6748().b[14][1]++;
  }
  cov_16vyzw6748().s[35]++;
  return newObj;
}
// Lazy loading del dashboard principal
const MetricsDashboard =
/* istanbul ignore next */
(/*#__PURE__*/cov_16vyzw6748().s[36]++, (0, _react.lazy)(() => {
  /* istanbul ignore next */
  cov_16vyzw6748().f[7]++;
  cov_16vyzw6748().s[37]++;
  return Promise.resolve().then(() => {
    /* istanbul ignore next */
    cov_16vyzw6748().f[8]++;
    cov_16vyzw6748().s[38]++;
    return /*#__PURE__*/_interop_require_wildcard(require("./MetricsDashboard"));
  });
}));
// Componente de loading
function DashboardSkeleton() {
  /* istanbul ignore next */
  cov_16vyzw6748().f[9]++;
  cov_16vyzw6748().s[39]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "space-y-6 animate-pulse",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex justify-between items-center",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "h-8 bg-gray-200 rounded w-64 mb-2"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "h-4 bg-gray-200 rounded w-96"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex gap-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "h-10 bg-gray-200 rounded w-32"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "h-10 bg-gray-200 rounded w-32"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "h-10 bg-gray-200 rounded w-24"
        })]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6",
      children: Array.from({
        length: 4
      }).map((_, i) => {
        /* istanbul ignore next */
        cov_16vyzw6748().f[10]++;
        cov_16vyzw6748().s[40]++;
        return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
            className: "flex flex-row items-center justify-between space-y-0 pb-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "h-4 bg-gray-200 rounded w-24"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "h-4 w-4 bg-gray-200 rounded"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "h-8 bg-gray-200 rounded w-16 mb-2"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "h-3 bg-gray-200 rounded w-32"
            })]
          })]
        }, i);
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "grid grid-cols-1 lg:grid-cols-3 gap-6",
      children: Array.from({
        length: 3
      }).map((_, i) => {
        /* istanbul ignore next */
        cov_16vyzw6748().f[11]++;
        cov_16vyzw6748().s[41]++;
        return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
            children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "h-6 bg-gray-200 rounded w-48"
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
            className: "space-y-4",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "grid grid-cols-2 gap-4",
              children: Array.from({
                length: 4
              }).map((_, j) => {
                /* istanbul ignore next */
                cov_16vyzw6748().f[12]++;
                cov_16vyzw6748().s[42]++;
                return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "h-3 bg-gray-200 rounded w-12 mb-1"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "h-4 bg-gray-200 rounded w-16"
                  })]
                }, j);
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "border-t pt-4",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "h-4 bg-gray-200 rounded w-32 mb-2"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "grid grid-cols-2 gap-2",
                children: Array.from({
                  length: 4
                }).map((_, j) => {
                  /* istanbul ignore next */
                  cov_16vyzw6748().f[13]++;
                  cov_16vyzw6748().s[43]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "h-3 bg-gray-200 rounded w-20"
                  }, j);
                })
              })]
            })]
          })]
        }, i);
      })
    })]
  });
}
// Componente de error
function DashboardError({
  error,
  retry
}) {
  /* istanbul ignore next */
  cov_16vyzw6748().f[14]++;
  cov_16vyzw6748().s[44]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "flex flex-col items-center justify-center h-64 space-y-4",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "text-red-500 text-center",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
        className: "text-lg font-semibold mb-2",
        children: "Error al cargar el dashboard"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-sm text-gray-600",
        children: error.message
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("button", {
      onClick: retry,
      className: "flex items-center px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
        className: "w-4 h-4 mr-2"
      }), "Reintentar"]
    })]
  });
}
function LazyMetricsDashboard() {
  /* istanbul ignore next */
  cov_16vyzw6748().f[15]++;
  cov_16vyzw6748().s[45]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: "min-h-screen bg-gray-50 p-6",
    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_react.Suspense, {
      fallback: /*#__PURE__*/(0, _jsxruntime.jsx)(DashboardSkeleton, {}),
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(ErrorBoundary, {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(MetricsDashboard, {})
      })
    })
  });
}
// Error boundary para manejar errores de carga
class ErrorBoundary extends
/* istanbul ignore next */
(_react.default.Component) {
  constructor(props) {
    /* istanbul ignore next */
    cov_16vyzw6748().f[16]++;
    cov_16vyzw6748().s[46]++;
    super(props);
    /* istanbul ignore next */
    cov_16vyzw6748().s[47]++;
    this.state = {
      hasError: false
    };
  }
  static getDerivedStateFromError(error) {
    /* istanbul ignore next */
    cov_16vyzw6748().f[17]++;
    cov_16vyzw6748().s[48]++;
    return {
      hasError: true,
      error
    };
  }
  componentDidCatch(error, errorInfo) {
    /* istanbul ignore next */
    cov_16vyzw6748().f[18]++;
    cov_16vyzw6748().s[49]++;
    console.error('Dashboard error:', error, errorInfo);
  }
  render() {
    /* istanbul ignore next */
    cov_16vyzw6748().f[19]++;
    cov_16vyzw6748().s[50]++;
    if (this.state.hasError) {
      /* istanbul ignore next */
      cov_16vyzw6748().b[15][0]++;
      cov_16vyzw6748().s[51]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)(DashboardError, {
        error:
        /* istanbul ignore next */
        (cov_16vyzw6748().b[16][0]++, this.state.error) ||
        /* istanbul ignore next */
        (cov_16vyzw6748().b[16][1]++, new Error('Unknown error')),
        retry: () => {
          /* istanbul ignore next */
          cov_16vyzw6748().f[20]++;
          cov_16vyzw6748().s[52]++;
          return this.setState({
            hasError: false,
            error: undefined
          });
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_16vyzw6748().b[15][1]++;
    }
    cov_16vyzw6748().s[53]++;
    return this.props.children;
  }
}
function usePrefetchDashboard() {
  /* istanbul ignore next */
  cov_16vyzw6748().f[21]++;
  cov_16vyzw6748().s[54]++;
  const prefetch = () => {
    /* istanbul ignore next */
    cov_16vyzw6748().f[22]++;
    cov_16vyzw6748().s[55]++;
    // Precargar el componente
    Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_16vyzw6748().f[23]++;
      cov_16vyzw6748().s[56]++;
      return /*#__PURE__*/_interop_require_wildcard(require("./MetricsDashboard"));
    });
    // Precargar datos de métricas
    /* istanbul ignore next */
    cov_16vyzw6748().s[57]++;
    fetch('/api/metrics?hours=1').catch(() => {
      /* istanbul ignore next */
      cov_16vyzw6748().f[24]++;
    } // Ignorar errores de precarga
    );
  };
  /* istanbul ignore next */
  cov_16vyzw6748().s[58]++;
  return {
    prefetch
  };
}
function DashboardPrefetch() {
  /* istanbul ignore next */
  cov_16vyzw6748().f[25]++;
  const {
    prefetch
  } =
  /* istanbul ignore next */
  (cov_16vyzw6748().s[59]++, usePrefetchDashboard());
  /* istanbul ignore next */
  cov_16vyzw6748().s[60]++;
  _react.default.useEffect(() => {
    /* istanbul ignore next */
    cov_16vyzw6748().f[26]++;
    // Precargar después de un pequeño delay
    const timer =
    /* istanbul ignore next */
    (cov_16vyzw6748().s[61]++, setTimeout(prefetch, 1000));
    /* istanbul ignore next */
    cov_16vyzw6748().s[62]++;
    return () => {
      /* istanbul ignore next */
      cov_16vyzw6748().f[27]++;
      cov_16vyzw6748().s[63]++;
      return clearTimeout(timer);
    };
  }, [prefetch]);
  /* istanbul ignore next */
  cov_16vyzw6748().s[64]++;
  return null;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,