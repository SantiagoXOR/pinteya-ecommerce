{"version":3,"names":["cov_1yxcyoj4pa","actualCoverage","s","GET","f","POST","runtime","supabaseUrl","process","env","NEXT_PUBLIC_SUPABASE_URL","supabaseServiceKey","SUPABASE_SERVICE_ROLE_KEY","request","console","log","session","_config","auth","user","b","_server","NextResponse","json","error","code","status","userId","id","isAdmin","email","supabase","_supabasejs","createClient","url","URL","page","parseInt","searchParams","get","limit","search","category_id","offset","query","from","select","count","or","eq","range","order","ascending","data","products","message","productsLength","length","details","transformedProducts","map","product","category_name","categories","name","undefined","total","returned","success","pagination","totalPages","Math","ceil","hasMore","hasPrevious","meta","timestamp","Date","toISOString","method","role","Error","body","hasName","hasPrice","price","hasCategory","productData","description","parseFloat","stock","images","created_at","updated_at","insert","single","transformedProduct","productId"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products-direct\\route.ts"],"sourcesContent":["// Configuraci√≥n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;\r\n\r\n/**\r\n * GET /api/admin/products-direct\r\n * API directa sin middleware para el panel admin\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    console.log('üîç Admin Products Direct: Starting...');\r\n\r\n    // Verificar autenticaci√≥n con NextAuth.js\r\n    const session = await auth();\r\n\r\n    if (!session?.user) {\r\n      console.log('‚ùå Admin Products Direct: No authenticated user');\r\n      return NextResponse.json(\r\n        {\r\n          error: 'Acceso denegado - Autenticaci√≥n requerida',\r\n          code: 'AUTH_REQUIRED'\r\n        },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n    console.log('‚úÖ Admin Products Direct: User authenticated', { userId });\r\n\r\n    // Verificar si es admin (simplificado)\r\n    const isAdmin = session.user.email === 'santiago@xor.com.ar';\r\n\r\n    if (!isAdmin) {\r\n      console.log('‚ùå Admin Products Direct: User not admin');\r\n      return NextResponse.json(\r\n        {\r\n          error: 'Acceso denegado - Se requieren permisos de administrador',\r\n          code: 'ADMIN_REQUIRED'\r\n        },\r\n        { status: 403 }\r\n      );\r\n    }\r\n\r\n    console.log('üîç Admin Products Direct: User info', {\r\n      userId,\r\n      email: session.user.email,\r\n      isAdmin\r\n    });\r\n\r\n    // Usuario verificado como admin\r\n    console.log('‚úÖ Admin Products Direct: Usuario verificado como admin');\r\n    console.log(`üìã Admin status: ${isAdmin}`);\r\n\r\n    // Comentamos la verificaci√≥n de rol temporalmente para debug\r\n    // if (userRole !== 'admin' && userRole !== 'moderator') {\r\n    //   return NextResponse.json(\r\n    //     {\r\n    //       error: 'Acceso denegado - Se requiere rol admin',\r\n    //       code: 'ADMIN_REQUIRED'\r\n    //     },\r\n    //     { status: 403 }\r\n    //   );\r\n    // }\r\n\r\n    console.log('‚úÖ Admin Products Direct: Access granted');\r\n\r\n    // Crear cliente Supabase con service key\r\n    const supabase = createClient(supabaseUrl, supabaseServiceKey);\r\n\r\n    // Obtener par√°metros de consulta\r\n    const url = new URL(request.url);\r\n    const page = parseInt(url.searchParams.get('page') || '1');\r\n    const limit = parseInt(url.searchParams.get('limit') || '20');\r\n    const search = url.searchParams.get('search') || '';\r\n    const category_id = url.searchParams.get('category_id') || '';\r\n\r\n    const offset = (page - 1) * limit;\r\n\r\n    console.log('üîç Admin Products Direct: Query params', {\r\n      page, limit, offset, search, category_id\r\n    });\r\n\r\n    // Construir consulta\r\n    let query = supabase\r\n      .from('products')\r\n      .select(`\r\n        id,\r\n        name,\r\n        description,\r\n        price,\r\n        stock,\r\n        category_id,\r\n        images,\r\n        created_at,\r\n        updated_at,\r\n        categories (\r\n          id,\r\n          name\r\n        )\r\n      `, { count: 'exact' });\r\n\r\n    // Aplicar filtros\r\n    if (search) {\r\n      query = query.or(`name.ilike.%${search}%,description.ilike.%${search}%`);\r\n    }\r\n\r\n    if (category_id) {\r\n      query = query.eq('category_id', category_id);\r\n    }\r\n\r\n    // Aplicar paginaci√≥n y ordenamiento\r\n    query = query\r\n      .range(offset, offset + limit - 1)\r\n      .order('created_at', { ascending: false });\r\n\r\n    const { data: products, error, count } = await query;\r\n\r\n    console.log('üîç Admin Products Direct: Query executed', {\r\n      error: error?.message,\r\n      count,\r\n      productsLength: products?.length\r\n    });\r\n\r\n    if (error) {\r\n      console.error('‚ùå Error consultando productos:', error);\r\n      return NextResponse.json(\r\n        { \r\n          error: 'Error al consultar productos',\r\n          details: error.message\r\n        },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Transformar productos\r\n    const transformedProducts = products?.map(product => ({\r\n      ...product,\r\n      category_name: product.categories?.name || null,\r\n      categories: undefined,\r\n    })) || [];\r\n\r\n    console.log('‚úÖ Admin Products Direct: Success', {\r\n      total: count,\r\n      returned: transformedProducts.length,\r\n      page,\r\n      limit\r\n    });\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        products: transformedProducts,\r\n        total: count || 0,\r\n        pagination: {\r\n          page,\r\n          limit,\r\n          offset,\r\n          totalPages: Math.ceil((count || 0) / limit),\r\n          hasMore: (count || 0) > offset + limit,\r\n          hasPrevious: page > 1\r\n        }\r\n      },\r\n      meta: {\r\n        timestamp: new Date().toISOString(),\r\n        method: 'admin_direct',\r\n        user: userId,\r\n        role: 'admin'\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('‚ùå Error fatal en admin products direct:', error);\r\n    return NextResponse.json(\r\n      {\r\n        error: 'Error interno del servidor',\r\n        details: error instanceof Error ? error.message : 'Error desconocido'\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * POST /api/admin/products-direct\r\n * Crear nuevo producto (versi√≥n directa)\r\n */\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    console.log('üîç Admin Products Direct POST: Starting...');\r\n\r\n    // Verificar autenticaci√≥n con NextAuth.js\r\n    const session = await auth();\r\n\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        {\r\n          error: 'Acceso denegado - Autenticaci√≥n requerida',\r\n          code: 'AUTH_REQUIRED'\r\n        },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n\r\n    // Verificar si es admin (simplificado)\r\n    const isAdmin = session.user.email === 'santiago@xor.com.ar';\r\n\r\n    if (!isAdmin) {\r\n      return NextResponse.json(\r\n        {\r\n          error: 'Acceso denegado - Se requieren permisos de administrador',\r\n          code: 'ADMIN_REQUIRED'\r\n        },\r\n        { status: 403 }\r\n      );\r\n    }\r\n\r\n    // Usuario verificado como admin\r\n    console.log('‚úÖ Admin Products Direct POST: Usuario verificado como admin');\r\n    console.log(`üìã Admin status: ${isAdmin}`);\r\n\r\n    // Comentamos la verificaci√≥n de rol temporalmente para debug\r\n\r\n    // Crear cliente Supabase con service key\r\n    const supabase = createClient(supabaseUrl, supabaseServiceKey);\r\n    const body = await request.json();\r\n\r\n    console.log('üîç Admin Products Direct POST: Body received', {\r\n      hasName: !!body.name,\r\n      hasPrice: !!body.price,\r\n      hasCategory: !!body.category_id\r\n    });\r\n\r\n    // Validaci√≥n b√°sica\r\n    if (!body.name || !body.price || !body.category_id) {\r\n      return NextResponse.json(\r\n        { \r\n          error: 'Campos requeridos: name, price, category_id',\r\n          code: 'VALIDATION_ERROR'\r\n        },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Crear producto\r\n    const productData = {\r\n      name: body.name,\r\n      description: body.description || '',\r\n      price: parseFloat(body.price),\r\n      stock: parseInt(body.stock) || 0,\r\n      category_id: body.category_id,\r\n      images: body.images || {},\r\n      created_at: new Date().toISOString(),\r\n      updated_at: new Date().toISOString(),\r\n    };\r\n\r\n    const { data: product, error } = await supabase\r\n      .from('products')\r\n      .insert(productData)\r\n      .select(`\r\n        id,\r\n        name,\r\n        description,\r\n        price,\r\n        stock,\r\n        category_id,\r\n        images,\r\n        created_at,\r\n        updated_at,\r\n        categories (\r\n          id,\r\n          name\r\n        )\r\n      `)\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('‚ùå Error creando producto:', error);\r\n      return NextResponse.json(\r\n        { \r\n          error: 'Error al crear producto',\r\n          details: error.message\r\n        },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Transformar respuesta\r\n    const transformedProduct = {\r\n      ...product,\r\n      category_name: product.categories?.name || null,\r\n      categories: undefined,\r\n    };\r\n\r\n    console.log('‚úÖ Admin Products Direct POST: Success', {\r\n      productId: product.id,\r\n      name: product.name\r\n    });\r\n\r\n    return NextResponse.json(\r\n      {\r\n        success: true,\r\n        message: 'Producto creado exitosamente',\r\n        data: transformedProduct\r\n      },\r\n      { status: 201 }\r\n    );\r\n\r\n  } catch (error) {\r\n    console.error('‚ùå Error fatal en admin products direct POST:', error);\r\n    return NextResponse.json(\r\n      {\r\n        error: 'Error interno del servidor',\r\n        details: error instanceof Error ? error.message : 'Error desconocido'\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}