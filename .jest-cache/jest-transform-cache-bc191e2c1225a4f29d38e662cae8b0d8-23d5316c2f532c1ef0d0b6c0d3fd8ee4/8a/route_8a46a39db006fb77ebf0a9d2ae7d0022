43f0b789b6ab5c0bd614f95ff643ba7a
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_1yxcyoj4pa() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products-direct\\route.ts";
  var hash = "d64d37a50037303bc7947b22de2accd35ecf0368";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products-direct\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 54
        }
      },
      "9": {
        start: {
          line: 25,
          column: 20
        },
        end: {
          line: 25,
          column: 52
        }
      },
      "10": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 24
        }
      },
      "11": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 56
        }
      },
      "12": {
        start: {
          line: 28,
          column: 27
        },
        end: {
          line: 28,
          column: 64
        }
      },
      "13": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 178,
          column: 5
        }
      },
      "14": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 61
        }
      },
      "15": {
        start: {
          line: 33,
          column: 24
        },
        end: {
          line: 33,
          column: 49
        }
      },
      "16": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "17": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 74
        }
      },
      "18": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 41,
          column: 15
        }
      },
      "19": {
        start: {
          line: 43,
          column: 23
        },
        end: {
          line: 43,
          column: 38
        }
      },
      "20": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 46,
          column: 11
        }
      },
      "21": {
        start: {
          line: 48,
          column: 24
        },
        end: {
          line: 48,
          column: 68
        }
      },
      "22": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "23": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 67
        }
      },
      "24": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 56,
          column: 15
        }
      },
      "25": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 62,
          column: 11
        }
      },
      "26": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 78
        }
      },
      "27": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 51
        }
      },
      "28": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 63
        }
      },
      "29": {
        start: {
          line: 78,
          column: 25
        },
        end: {
          line: 78,
          column: 87
        }
      },
      "30": {
        start: {
          line: 80,
          column: 20
        },
        end: {
          line: 80,
          column: 40
        }
      },
      "31": {
        start: {
          line: 81,
          column: 21
        },
        end: {
          line: 81,
          column: 66
        }
      },
      "32": {
        start: {
          line: 82,
          column: 22
        },
        end: {
          line: 82,
          column: 69
        }
      },
      "33": {
        start: {
          line: 83,
          column: 23
        },
        end: {
          line: 83,
          column: 59
        }
      },
      "34": {
        start: {
          line: 84,
          column: 28
        },
        end: {
          line: 84,
          column: 69
        }
      },
      "35": {
        start: {
          line: 85,
          column: 23
        },
        end: {
          line: 85,
          column: 41
        }
      },
      "36": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 92,
          column: 11
        }
      },
      "37": {
        start: {
          line: 94,
          column: 20
        },
        end: {
          line: 110,
          column: 10
        }
      },
      "38": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "39": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 85
        }
      },
      "40": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "41": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 57
        }
      },
      "42": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 121,
          column: 11
        }
      },
      "43": {
        start: {
          line: 122,
          column: 49
        },
        end: {
          line: 122,
          column: 60
        }
      },
      "44": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 127,
          column: 11
        }
      },
      "45": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "46": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 67
        }
      },
      "47": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 135,
          column: 15
        }
      },
      "48": {
        start: {
          line: 138,
          column: 36
        },
        end: {
          line: 142,
          column: 21
        }
      },
      "49": {
        start: {
          line: 138,
          column: 62
        },
        end: {
          line: 142,
          column: 13
        }
      },
      "50": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 148,
          column: 11
        }
      },
      "51": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 169,
          column: 11
        }
      },
      "52": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 72
        }
      },
      "53": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 177,
          column: 11
        }
      },
      "54": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 285,
          column: 5
        }
      },
      "55": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 66
        }
      },
      "56": {
        start: {
          line: 184,
          column: 24
        },
        end: {
          line: 184,
          column: 49
        }
      },
      "57": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "58": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 191,
          column: 15
        }
      },
      "59": {
        start: {
          line: 193,
          column: 23
        },
        end: {
          line: 193,
          column: 38
        }
      },
      "60": {
        start: {
          line: 195,
          column: 24
        },
        end: {
          line: 195,
          column: 68
        }
      },
      "61": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 203,
          column: 9
        }
      },
      "62": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 202,
          column: 15
        }
      },
      "63": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 83
        }
      },
      "64": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 206,
          column: 51
        }
      },
      "65": {
        start: {
          line: 209,
          column: 25
        },
        end: {
          line: 209,
          column: 87
        }
      },
      "66": {
        start: {
          line: 210,
          column: 21
        },
        end: {
          line: 210,
          column: 41
        }
      },
      "67": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 215,
          column: 11
        }
      },
      "68": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 224,
          column: 9
        }
      },
      "69": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 223,
          column: 15
        }
      },
      "70": {
        start: {
          line: 226,
          column: 28
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "71": {
        start: {
          line: 236,
          column: 41
        },
        end: {
          line: 250,
          column: 17
        }
      },
      "72": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 259,
          column: 9
        }
      },
      "73": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 62
        }
      },
      "74": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 258,
          column: 15
        }
      },
      "75": {
        start: {
          line: 261,
          column: 35
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "76": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 269,
          column: 11
        }
      },
      "77": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 276,
          column: 11
        }
      },
      "78": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 278,
          column: 77
        }
      },
      "79": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 284,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "GET",
        decl: {
          start: {
            line: 29,
            column: 15
          },
          end: {
            line: 29,
            column: 18
          }
        },
        loc: {
          start: {
            line: 29,
            column: 28
          },
          end: {
            line: 179,
            column: 1
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 138,
            column: 50
          },
          end: {
            line: 138,
            column: 51
          }
        },
        loc: {
          start: {
            line: 138,
            column: 62
          },
          end: {
            line: 142,
            column: 13
          }
        },
        line: 138
      },
      "6": {
        name: "POST",
        decl: {
          start: {
            line: 180,
            column: 15
          },
          end: {
            line: 180,
            column: 19
          }
        },
        loc: {
          start: {
            line: 180,
            column: 29
          },
          end: {
            line: 286,
            column: 1
          }
        },
        line: 180
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "1": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "2": {
        loc: {
          start: {
            line: 81,
            column: 30
          },
          end: {
            line: 81,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 30
          },
          end: {
            line: 81,
            column: 58
          }
        }, {
          start: {
            line: 81,
            column: 62
          },
          end: {
            line: 81,
            column: 65
          }
        }],
        line: 81
      },
      "3": {
        loc: {
          start: {
            line: 82,
            column: 31
          },
          end: {
            line: 82,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 31
          },
          end: {
            line: 82,
            column: 60
          }
        }, {
          start: {
            line: 82,
            column: 64
          },
          end: {
            line: 82,
            column: 68
          }
        }],
        line: 82
      },
      "4": {
        loc: {
          start: {
            line: 83,
            column: 23
          },
          end: {
            line: 83,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 23
          },
          end: {
            line: 83,
            column: 53
          }
        }, {
          start: {
            line: 83,
            column: 57
          },
          end: {
            line: 83,
            column: 59
          }
        }],
        line: 83
      },
      "5": {
        loc: {
          start: {
            line: 84,
            column: 28
          },
          end: {
            line: 84,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 28
          },
          end: {
            line: 84,
            column: 63
          }
        }, {
          start: {
            line: 84,
            column: 67
          },
          end: {
            line: 84,
            column: 69
          }
        }],
        line: 84
      },
      "6": {
        loc: {
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "7": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "8": {
        loc: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "9": {
        loc: {
          start: {
            line: 138,
            column: 36
          },
          end: {
            line: 142,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 36
          },
          end: {
            line: 142,
            column: 15
          }
        }, {
          start: {
            line: 142,
            column: 19
          },
          end: {
            line: 142,
            column: 21
          }
        }],
        line: 138
      },
      "10": {
        loc: {
          start: {
            line: 140,
            column: 31
          },
          end: {
            line: 140,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 31
          },
          end: {
            line: 140,
            column: 55
          }
        }, {
          start: {
            line: 140,
            column: 59
          },
          end: {
            line: 140,
            column: 63
          }
        }],
        line: 140
      },
      "11": {
        loc: {
          start: {
            line: 153,
            column: 23
          },
          end: {
            line: 153,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 23
          },
          end: {
            line: 153,
            column: 28
          }
        }, {
          start: {
            line: 153,
            column: 32
          },
          end: {
            line: 153,
            column: 33
          }
        }],
        line: 153
      },
      "12": {
        loc: {
          start: {
            line: 158,
            column: 43
          },
          end: {
            line: 158,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 43
          },
          end: {
            line: 158,
            column: 48
          }
        }, {
          start: {
            line: 158,
            column: 52
          },
          end: {
            line: 158,
            column: 53
          }
        }],
        line: 158
      },
      "13": {
        loc: {
          start: {
            line: 159,
            column: 30
          },
          end: {
            line: 159,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 30
          },
          end: {
            line: 159,
            column: 35
          }
        }, {
          start: {
            line: 159,
            column: 39
          },
          end: {
            line: 159,
            column: 40
          }
        }],
        line: 159
      },
      "14": {
        loc: {
          start: {
            line: 174,
            column: 21
          },
          end: {
            line: 174,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 174,
            column: 46
          },
          end: {
            line: 174,
            column: 59
          }
        }, {
          start: {
            line: 174,
            column: 62
          },
          end: {
            line: 174,
            column: 81
          }
        }],
        line: 174
      },
      "15": {
        loc: {
          start: {
            line: 185,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "16": {
        loc: {
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 203,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 203,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "17": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "18": {
        loc: {
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 217,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 217,
            column: 22
          }
        }, {
          start: {
            line: 217,
            column: 26
          },
          end: {
            line: 217,
            column: 37
          }
        }, {
          start: {
            line: 217,
            column: 41
          },
          end: {
            line: 217,
            column: 58
          }
        }],
        line: 217
      },
      "19": {
        loc: {
          start: {
            line: 228,
            column: 25
          },
          end: {
            line: 228,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 228,
            column: 25
          },
          end: {
            line: 228,
            column: 41
          }
        }, {
          start: {
            line: 228,
            column: 45
          },
          end: {
            line: 228,
            column: 47
          }
        }],
        line: 228
      },
      "20": {
        loc: {
          start: {
            line: 230,
            column: 19
          },
          end: {
            line: 230,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 230,
            column: 19
          },
          end: {
            line: 230,
            column: 39
          }
        }, {
          start: {
            line: 230,
            column: 43
          },
          end: {
            line: 230,
            column: 44
          }
        }],
        line: 230
      },
      "21": {
        loc: {
          start: {
            line: 232,
            column: 20
          },
          end: {
            line: 232,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 232,
            column: 20
          },
          end: {
            line: 232,
            column: 31
          }
        }, {
          start: {
            line: 232,
            column: 35
          },
          end: {
            line: 232,
            column: 37
          }
        }],
        line: 232
      },
      "22": {
        loc: {
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 259,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 259,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "23": {
        loc: {
          start: {
            line: 263,
            column: 27
          },
          end: {
            line: 263,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 263,
            column: 27
          },
          end: {
            line: 263,
            column: 51
          }
        }, {
          start: {
            line: 263,
            column: 55
          },
          end: {
            line: 263,
            column: 59
          }
        }],
        line: 263
      },
      "24": {
        loc: {
          start: {
            line: 281,
            column: 21
          },
          end: {
            line: 281,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 281,
            column: 46
          },
          end: {
            line: 281,
            column: 59
          }
        }, {
          start: {
            line: 281,
            column: 62
          },
          end: {
            line: 281,
            column: 81
          }
        }],
        line: 281
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products-direct\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;\r\n\r\n/**\r\n * GET /api/admin/products-direct\r\n * API directa sin middleware para el panel admin\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    console.log('\uD83D\uDD0D Admin Products Direct: Starting...');\r\n\r\n    // Verificar autenticaci\xF3n con NextAuth.js\r\n    const session = await auth();\r\n\r\n    if (!session?.user) {\r\n      console.log('\u274C Admin Products Direct: No authenticated user');\r\n      return NextResponse.json(\r\n        {\r\n          error: 'Acceso denegado - Autenticaci\xF3n requerida',\r\n          code: 'AUTH_REQUIRED'\r\n        },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n    console.log('\u2705 Admin Products Direct: User authenticated', { userId });\r\n\r\n    // Verificar si es admin (simplificado)\r\n    const isAdmin = session.user.email === 'santiago@xor.com.ar';\r\n\r\n    if (!isAdmin) {\r\n      console.log('\u274C Admin Products Direct: User not admin');\r\n      return NextResponse.json(\r\n        {\r\n          error: 'Acceso denegado - Se requieren permisos de administrador',\r\n          code: 'ADMIN_REQUIRED'\r\n        },\r\n        { status: 403 }\r\n      );\r\n    }\r\n\r\n    console.log('\uD83D\uDD0D Admin Products Direct: User info', {\r\n      userId,\r\n      email: session.user.email,\r\n      isAdmin\r\n    });\r\n\r\n    // Usuario verificado como admin\r\n    console.log('\u2705 Admin Products Direct: Usuario verificado como admin');\r\n    console.log(`\uD83D\uDCCB Admin status: ${isAdmin}`);\r\n\r\n    // Comentamos la verificaci\xF3n de rol temporalmente para debug\r\n    // if (userRole !== 'admin' && userRole !== 'moderator') {\r\n    //   return NextResponse.json(\r\n    //     {\r\n    //       error: 'Acceso denegado - Se requiere rol admin',\r\n    //       code: 'ADMIN_REQUIRED'\r\n    //     },\r\n    //     { status: 403 }\r\n    //   );\r\n    // }\r\n\r\n    console.log('\u2705 Admin Products Direct: Access granted');\r\n\r\n    // Crear cliente Supabase con service key\r\n    const supabase = createClient(supabaseUrl, supabaseServiceKey);\r\n\r\n    // Obtener par\xE1metros de consulta\r\n    const url = new URL(request.url);\r\n    const page = parseInt(url.searchParams.get('page') || '1');\r\n    const limit = parseInt(url.searchParams.get('limit') || '20');\r\n    const search = url.searchParams.get('search') || '';\r\n    const category_id = url.searchParams.get('category_id') || '';\r\n\r\n    const offset = (page - 1) * limit;\r\n\r\n    console.log('\uD83D\uDD0D Admin Products Direct: Query params', {\r\n      page, limit, offset, search, category_id\r\n    });\r\n\r\n    // Construir consulta\r\n    let query = supabase\r\n      .from('products')\r\n      .select(`\r\n        id,\r\n        name,\r\n        description,\r\n        price,\r\n        stock,\r\n        category_id,\r\n        images,\r\n        created_at,\r\n        updated_at,\r\n        categories (\r\n          id,\r\n          name\r\n        )\r\n      `, { count: 'exact' });\r\n\r\n    // Aplicar filtros\r\n    if (search) {\r\n      query = query.or(`name.ilike.%${search}%,description.ilike.%${search}%`);\r\n    }\r\n\r\n    if (category_id) {\r\n      query = query.eq('category_id', category_id);\r\n    }\r\n\r\n    // Aplicar paginaci\xF3n y ordenamiento\r\n    query = query\r\n      .range(offset, offset + limit - 1)\r\n      .order('created_at', { ascending: false });\r\n\r\n    const { data: products, error, count } = await query;\r\n\r\n    console.log('\uD83D\uDD0D Admin Products Direct: Query executed', {\r\n      error: error?.message,\r\n      count,\r\n      productsLength: products?.length\r\n    });\r\n\r\n    if (error) {\r\n      console.error('\u274C Error consultando productos:', error);\r\n      return NextResponse.json(\r\n        { \r\n          error: 'Error al consultar productos',\r\n          details: error.message\r\n        },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Transformar productos\r\n    const transformedProducts = products?.map(product => ({\r\n      ...product,\r\n      category_name: product.categories?.name || null,\r\n      categories: undefined,\r\n    })) || [];\r\n\r\n    console.log('\u2705 Admin Products Direct: Success', {\r\n      total: count,\r\n      returned: transformedProducts.length,\r\n      page,\r\n      limit\r\n    });\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        products: transformedProducts,\r\n        total: count || 0,\r\n        pagination: {\r\n          page,\r\n          limit,\r\n          offset,\r\n          totalPages: Math.ceil((count || 0) / limit),\r\n          hasMore: (count || 0) > offset + limit,\r\n          hasPrevious: page > 1\r\n        }\r\n      },\r\n      meta: {\r\n        timestamp: new Date().toISOString(),\r\n        method: 'admin_direct',\r\n        user: userId,\r\n        role: 'admin'\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('\u274C Error fatal en admin products direct:', error);\r\n    return NextResponse.json(\r\n      {\r\n        error: 'Error interno del servidor',\r\n        details: error instanceof Error ? error.message : 'Error desconocido'\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * POST /api/admin/products-direct\r\n * Crear nuevo producto (versi\xF3n directa)\r\n */\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    console.log('\uD83D\uDD0D Admin Products Direct POST: Starting...');\r\n\r\n    // Verificar autenticaci\xF3n con NextAuth.js\r\n    const session = await auth();\r\n\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        {\r\n          error: 'Acceso denegado - Autenticaci\xF3n requerida',\r\n          code: 'AUTH_REQUIRED'\r\n        },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n\r\n    // Verificar si es admin (simplificado)\r\n    const isAdmin = session.user.email === 'santiago@xor.com.ar';\r\n\r\n    if (!isAdmin) {\r\n      return NextResponse.json(\r\n        {\r\n          error: 'Acceso denegado - Se requieren permisos de administrador',\r\n          code: 'ADMIN_REQUIRED'\r\n        },\r\n        { status: 403 }\r\n      );\r\n    }\r\n\r\n    // Usuario verificado como admin\r\n    console.log('\u2705 Admin Products Direct POST: Usuario verificado como admin');\r\n    console.log(`\uD83D\uDCCB Admin status: ${isAdmin}`);\r\n\r\n    // Comentamos la verificaci\xF3n de rol temporalmente para debug\r\n\r\n    // Crear cliente Supabase con service key\r\n    const supabase = createClient(supabaseUrl, supabaseServiceKey);\r\n    const body = await request.json();\r\n\r\n    console.log('\uD83D\uDD0D Admin Products Direct POST: Body received', {\r\n      hasName: !!body.name,\r\n      hasPrice: !!body.price,\r\n      hasCategory: !!body.category_id\r\n    });\r\n\r\n    // Validaci\xF3n b\xE1sica\r\n    if (!body.name || !body.price || !body.category_id) {\r\n      return NextResponse.json(\r\n        { \r\n          error: 'Campos requeridos: name, price, category_id',\r\n          code: 'VALIDATION_ERROR'\r\n        },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Crear producto\r\n    const productData = {\r\n      name: body.name,\r\n      description: body.description || '',\r\n      price: parseFloat(body.price),\r\n      stock: parseInt(body.stock) || 0,\r\n      category_id: body.category_id,\r\n      images: body.images || {},\r\n      created_at: new Date().toISOString(),\r\n      updated_at: new Date().toISOString(),\r\n    };\r\n\r\n    const { data: product, error } = await supabase\r\n      .from('products')\r\n      .insert(productData)\r\n      .select(`\r\n        id,\r\n        name,\r\n        description,\r\n        price,\r\n        stock,\r\n        category_id,\r\n        images,\r\n        created_at,\r\n        updated_at,\r\n        categories (\r\n          id,\r\n          name\r\n        )\r\n      `)\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('\u274C Error creando producto:', error);\r\n      return NextResponse.json(\r\n        { \r\n          error: 'Error al crear producto',\r\n          details: error.message\r\n        },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Transformar respuesta\r\n    const transformedProduct = {\r\n      ...product,\r\n      category_name: product.categories?.name || null,\r\n      categories: undefined,\r\n    };\r\n\r\n    console.log('\u2705 Admin Products Direct POST: Success', {\r\n      productId: product.id,\r\n      name: product.name\r\n    });\r\n\r\n    return NextResponse.json(\r\n      {\r\n        success: true,\r\n        message: 'Producto creado exitosamente',\r\n        data: transformedProduct\r\n      },\r\n      { status: 201 }\r\n    );\r\n\r\n  } catch (error) {\r\n    console.error('\u274C Error fatal en admin products direct POST:', error);\r\n    return NextResponse.json(\r\n      {\r\n        error: 'Error interno del servidor',\r\n        details: error instanceof Error ? error.message : 'Error desconocido'\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "supabaseUrl", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "supabaseServiceKey", "SUPABASE_SERVICE_ROLE_KEY", "request", "console", "log", "session", "auth", "user", "NextResponse", "json", "error", "code", "status", "userId", "id", "isAdmin", "email", "supabase", "createClient", "url", "URL", "page", "parseInt", "searchParams", "get", "limit", "search", "category_id", "offset", "query", "from", "select", "count", "or", "eq", "range", "order", "ascending", "data", "products", "message", "productsLength", "length", "details", "transformedProducts", "map", "product", "category_name", "categories", "name", "undefined", "total", "returned", "success", "pagination", "totalPages", "Math", "ceil", "hasMore", "hasPrevious", "meta", "timestamp", "Date", "toISOString", "method", "role", "Error", "body", "hasName", "hasPrice", "price", "hasCategory", "productData", "description", "parseFloat", "stock", "images", "created_at", "updated_at", "insert", "single", "transformedProduct", "productId"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QAcfA;eAAAA;;QAkLAC;eAAAA;;QA/LTC;eAAAA;;;wBAE6B;wBACrB;4BACQ;AAJtB,MAAMA,UAAU;AAMvB,MAAMC,cAAcC,QAAQC,GAAG,CAACC,wBAAwB;AACxD,MAAMC,qBAAqBH,QAAQC,GAAG,CAACG,yBAAyB;AAMzD,eAAeR,IAAIS,OAAoB;IAC5C,IAAI;QACFC,QAAQC,GAAG,CAAC;QAEZ,0CAA0C;QAC1C,MAAMC,UAAU,MAAMC,IAAAA,YAAI;QAE1B,IAAI,CAACD,SAASE,MAAM;YAClBJ,QAAQC,GAAG,CAAC;YACZ,OAAOI,oBAAY,CAACC,IAAI,CACtB;gBACEC,OAAO;gBACPC,MAAM;YACR,GACA;gBAAEC,QAAQ;YAAI;QAElB;QAEA,MAAMC,SAASR,QAAQE,IAAI,CAACO,EAAE;QAC9BX,QAAQC,GAAG,CAAC,+CAA+C;YAAES;QAAO;QAEpE,uCAAuC;QACvC,MAAME,UAAUV,QAAQE,IAAI,CAACS,KAAK,KAAK;QAEvC,IAAI,CAACD,SAAS;YACZZ,QAAQC,GAAG,CAAC;YACZ,OAAOI,oBAAY,CAACC,IAAI,CACtB;gBACEC,OAAO;gBACPC,MAAM;YACR,GACA;gBAAEC,QAAQ;YAAI;QAElB;QAEAT,QAAQC,GAAG,CAAC,uCAAuC;YACjDS;YACAG,OAAOX,QAAQE,IAAI,CAACS,KAAK;YACzBD;QACF;QAEA,gCAAgC;QAChCZ,QAAQC,GAAG,CAAC;QACZD,QAAQC,GAAG,CAAC,CAAC,iBAAiB,EAAEW,SAAS;QAEzC,6DAA6D;QAC7D,0DAA0D;QAC1D,8BAA8B;QAC9B,QAAQ;QACR,0DAA0D;QAC1D,+BAA+B;QAC/B,SAAS;QACT,sBAAsB;QACtB,OAAO;QACP,IAAI;QAEJZ,QAAQC,GAAG,CAAC;QAEZ,yCAAyC;QACzC,MAAMa,WAAWC,IAAAA,wBAAY,EAACtB,aAAaI;QAE3C,iCAAiC;QACjC,MAAMmB,MAAM,IAAIC,IAAIlB,QAAQiB,GAAG;QAC/B,MAAME,OAAOC,SAASH,IAAII,YAAY,CAACC,GAAG,CAAC,WAAW;QACtD,MAAMC,QAAQH,SAASH,IAAII,YAAY,CAACC,GAAG,CAAC,YAAY;QACxD,MAAME,SAASP,IAAII,YAAY,CAACC,GAAG,CAAC,aAAa;QACjD,MAAMG,cAAcR,IAAII,YAAY,CAACC,GAAG,CAAC,kBAAkB;QAE3D,MAAMI,SAAS,AAACP,CAAAA,OAAO,CAAA,IAAKI;QAE5BtB,QAAQC,GAAG,CAAC,0CAA0C;YACpDiB;YAAMI;YAAOG;YAAQF;YAAQC;QAC/B;QAEA,qBAAqB;QACrB,IAAIE,QAAQZ,SACTa,IAAI,CAAC,YACLC,MAAM,CAAC,CAAC;;;;;;;;;;;;;;MAcT,CAAC,EAAE;YAAEC,OAAO;QAAQ;QAEtB,kBAAkB;QAClB,IAAIN,QAAQ;YACVG,QAAQA,MAAMI,EAAE,CAAC,CAAC,YAAY,EAAEP,OAAO,qBAAqB,EAAEA,OAAO,CAAC,CAAC;QACzE;QAEA,IAAIC,aAAa;YACfE,QAAQA,MAAMK,EAAE,CAAC,eAAeP;QAClC;QAEA,oCAAoC;QACpCE,QAAQA,MACLM,KAAK,CAACP,QAAQA,SAASH,QAAQ,GAC/BW,KAAK,CAAC,cAAc;YAAEC,WAAW;QAAM;QAE1C,MAAM,EAAEC,MAAMC,QAAQ,EAAE7B,KAAK,EAAEsB,KAAK,EAAE,GAAG,MAAMH;QAE/C1B,QAAQC,GAAG,CAAC,4CAA4C;YACtDM,OAAOA,OAAO8B;YACdR;YACAS,gBAAgBF,UAAUG;QAC5B;QAEA,IAAIhC,OAAO;YACTP,QAAQO,KAAK,CAAC,kCAAkCA;YAChD,OAAOF,oBAAY,CAACC,IAAI,CACtB;gBACEC,OAAO;gBACPiC,SAASjC,MAAM8B,OAAO;YACxB,GACA;gBAAE5B,QAAQ;YAAI;QAElB;QAEA,wBAAwB;QACxB,MAAMgC,sBAAsBL,UAAUM,IAAIC,CAAAA,UAAY,CAAA;gBACpD,GAAGA,OAAO;gBACVC,eAAeD,QAAQE,UAAU,EAAEC,QAAQ;gBAC3CD,YAAYE;YACd,CAAA,MAAO,EAAE;QAET/C,QAAQC,GAAG,CAAC,oCAAoC;YAC9C+C,OAAOnB;YACPoB,UAAUR,oBAAoBF,MAAM;YACpCrB;YACAI;QACF;QAEA,OAAOjB,oBAAY,CAACC,IAAI,CAAC;YACvB4C,SAAS;YACTf,MAAM;gBACJC,UAAUK;gBACVO,OAAOnB,SAAS;gBAChBsB,YAAY;oBACVjC;oBACAI;oBACAG;oBACA2B,YAAYC,KAAKC,IAAI,CAAC,AAACzB,CAAAA,SAAS,CAAA,IAAKP;oBACrCiC,SAAS,AAAC1B,CAAAA,SAAS,CAAA,IAAKJ,SAASH;oBACjCkC,aAAatC,OAAO;gBACtB;YACF;YACAuC,MAAM;gBACJC,WAAW,IAAIC,OAAOC,WAAW;gBACjCC,QAAQ;gBACRzD,MAAMM;gBACNoD,MAAM;YACR;QACF;IAEF,EAAE,OAAOvD,OAAO;QACdP,QAAQO,KAAK,CAAC,2CAA2CA;QACzD,OAAOF,oBAAY,CAACC,IAAI,CACtB;YACEC,OAAO;YACPiC,SAASjC,iBAAiBwD,QAAQxD,MAAM8B,OAAO,GAAG;QACpD,GACA;YAAE5B,QAAQ;QAAI;IAElB;AACF;AAMO,eAAelB,KAAKQ,OAAoB;IAC7C,IAAI;QACFC,QAAQC,GAAG,CAAC;QAEZ,0CAA0C;QAC1C,MAAMC,UAAU,MAAMC,IAAAA,YAAI;QAE1B,IAAI,CAACD,SAASE,MAAM;YAClB,OAAOC,oBAAY,CAACC,IAAI,CACtB;gBACEC,OAAO;gBACPC,MAAM;YACR,GACA;gBAAEC,QAAQ;YAAI;QAElB;QAEA,MAAMC,SAASR,QAAQE,IAAI,CAACO,EAAE;QAE9B,uCAAuC;QACvC,MAAMC,UAAUV,QAAQE,IAAI,CAACS,KAAK,KAAK;QAEvC,IAAI,CAACD,SAAS;YACZ,OAAOP,oBAAY,CAACC,IAAI,CACtB;gBACEC,OAAO;gBACPC,MAAM;YACR,GACA;gBAAEC,QAAQ;YAAI;QAElB;QAEA,gCAAgC;QAChCT,QAAQC,GAAG,CAAC;QACZD,QAAQC,GAAG,CAAC,CAAC,iBAAiB,EAAEW,SAAS;QAEzC,6DAA6D;QAE7D,yCAAyC;QACzC,MAAME,WAAWC,IAAAA,wBAAY,EAACtB,aAAaI;QAC3C,MAAMmE,OAAO,MAAMjE,QAAQO,IAAI;QAE/BN,QAAQC,GAAG,CAAC,gDAAgD;YAC1DgE,SAAS,CAAC,CAACD,KAAKlB,IAAI;YACpBoB,UAAU,CAAC,CAACF,KAAKG,KAAK;YACtBC,aAAa,CAAC,CAACJ,KAAKxC,WAAW;QACjC;QAEA,oBAAoB;QACpB,IAAI,CAACwC,KAAKlB,IAAI,IAAI,CAACkB,KAAKG,KAAK,IAAI,CAACH,KAAKxC,WAAW,EAAE;YAClD,OAAOnB,oBAAY,CAACC,IAAI,CACtB;gBACEC,OAAO;gBACPC,MAAM;YACR,GACA;gBAAEC,QAAQ;YAAI;QAElB;QAEA,iBAAiB;QACjB,MAAM4D,cAAc;YAClBvB,MAAMkB,KAAKlB,IAAI;YACfwB,aAAaN,KAAKM,WAAW,IAAI;YACjCH,OAAOI,WAAWP,KAAKG,KAAK;YAC5BK,OAAOrD,SAAS6C,KAAKQ,KAAK,KAAK;YAC/BhD,aAAawC,KAAKxC,WAAW;YAC7BiD,QAAQT,KAAKS,MAAM,IAAI,CAAC;YACxBC,YAAY,IAAIf,OAAOC,WAAW;YAClCe,YAAY,IAAIhB,OAAOC,WAAW;QACpC;QAEA,MAAM,EAAEzB,MAAMQ,OAAO,EAAEpC,KAAK,EAAE,GAAG,MAAMO,SACpCa,IAAI,CAAC,YACLiD,MAAM,CAACP,aACPzC,MAAM,CAAC,CAAC;;;;;;;;;;;;;;MAcT,CAAC,EACAiD,MAAM;QAET,IAAItE,OAAO;YACTP,QAAQO,KAAK,CAAC,6BAA6BA;YAC3C,OAAOF,oBAAY,CAACC,IAAI,CACtB;gBACEC,OAAO;gBACPiC,SAASjC,MAAM8B,OAAO;YACxB,GACA;gBAAE5B,QAAQ;YAAI;QAElB;QAEA,wBAAwB;QACxB,MAAMqE,qBAAqB;YACzB,GAAGnC,OAAO;YACVC,eAAeD,QAAQE,UAAU,EAAEC,QAAQ;YAC3CD,YAAYE;QACd;QAEA/C,QAAQC,GAAG,CAAC,yCAAyC;YACnD8E,WAAWpC,QAAQhC,EAAE;YACrBmC,MAAMH,QAAQG,IAAI;QACpB;QAEA,OAAOzC,oBAAY,CAACC,IAAI,CACtB;YACE4C,SAAS;YACTb,SAAS;YACTF,MAAM2C;QACR,GACA;YAAErE,QAAQ;QAAI;IAGlB,EAAE,OAAOF,OAAO;QACdP,QAAQO,KAAK,CAAC,gDAAgDA;QAC9D,OAAOF,oBAAY,CAACC,IAAI,CACtB;YACEC,OAAO;YACPiC,SAASjC,iBAAiBwD,QAAQxD,MAAM8B,OAAO,GAAG;QACpD,GACA;YAAE5B,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d64d37a50037303bc7947b22de2accd35ecf0368"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1yxcyoj4pa = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1yxcyoj4pa();
cov_1yxcyoj4pa().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1yxcyoj4pa().f[0]++;
  cov_1yxcyoj4pa().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1yxcyoj4pa().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_1yxcyoj4pa().f[1]++;
    cov_1yxcyoj4pa().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_1yxcyoj4pa().f[2]++;
    cov_1yxcyoj4pa().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_1yxcyoj4pa().f[3]++;
    cov_1yxcyoj4pa().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_1yxcyoj4pa().s[7]++, require("next/server"));
const _config =
/* istanbul ignore next */
(cov_1yxcyoj4pa().s[8]++, require("../../../../lib/auth/config"));
const _supabasejs =
/* istanbul ignore next */
(cov_1yxcyoj4pa().s[9]++, require("@supabase/supabase-js"));
const runtime =
/* istanbul ignore next */
(cov_1yxcyoj4pa().s[10]++, 'nodejs');
const supabaseUrl =
/* istanbul ignore next */
(cov_1yxcyoj4pa().s[11]++, process.env.NEXT_PUBLIC_SUPABASE_URL);
const supabaseServiceKey =
/* istanbul ignore next */
(cov_1yxcyoj4pa().s[12]++, process.env.SUPABASE_SERVICE_ROLE_KEY);
async function GET(request) {
  /* istanbul ignore next */
  cov_1yxcyoj4pa().f[4]++;
  cov_1yxcyoj4pa().s[13]++;
  try {
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[14]++;
    console.log('ğ Admin Products Direct: Starting...');
    // Verificar autenticaciÃ³n con NextAuth.js
    const session =
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().s[15]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[16]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_1yxcyoj4pa().b[0][0]++;
      cov_1yxcyoj4pa().s[17]++;
      console.log('â Admin Products Direct: No authenticated user');
      /* istanbul ignore next */
      cov_1yxcyoj4pa().s[18]++;
      return _server.NextResponse.json({
        error: 'Acceso denegado - AutenticaciÃ³n requerida',
        code: 'AUTH_REQUIRED'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1yxcyoj4pa().b[0][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().s[19]++, session.user.id);
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[20]++;
    console.log('â Admin Products Direct: User authenticated', {
      userId
    });
    // Verificar si es admin (simplificado)
    const isAdmin =
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().s[21]++, session.user.email === 'santiago@xor.com.ar');
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[22]++;
    if (!isAdmin) {
      /* istanbul ignore next */
      cov_1yxcyoj4pa().b[1][0]++;
      cov_1yxcyoj4pa().s[23]++;
      console.log('â Admin Products Direct: User not admin');
      /* istanbul ignore next */
      cov_1yxcyoj4pa().s[24]++;
      return _server.NextResponse.json({
        error: 'Acceso denegado - Se requieren permisos de administrador',
        code: 'ADMIN_REQUIRED'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_1yxcyoj4pa().b[1][1]++;
    }
    cov_1yxcyoj4pa().s[25]++;
    console.log('ğ Admin Products Direct: User info', {
      userId,
      email: session.user.email,
      isAdmin
    });
    // Usuario verificado como admin
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[26]++;
    console.log('â Admin Products Direct: Usuario verificado como admin');
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[27]++;
    console.log(`ğ Admin status: ${isAdmin}`);
    // Comentamos la verificaciÃ³n de rol temporalmente para debug
    // if (userRole !== 'admin' && userRole !== 'moderator') {
    //   return NextResponse.json(
    //     {
    //       error: 'Acceso denegado - Se requiere rol admin',
    //       code: 'ADMIN_REQUIRED'
    //     },
    //     { status: 403 }
    //   );
    // }
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[28]++;
    console.log('â Admin Products Direct: Access granted');
    // Crear cliente Supabase con service key
    const supabase =
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().s[29]++, (0, _supabasejs.createClient)(supabaseUrl, supabaseServiceKey));
    // Obtener parÃ¡metros de consulta
    const url =
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().s[30]++, new URL(request.url));
    const page =
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().s[31]++, parseInt(
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().b[2][0]++, url.searchParams.get('page')) ||
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().b[2][1]++, '1')));
    const limit =
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().s[32]++, parseInt(
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().b[3][0]++, url.searchParams.get('limit')) ||
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().b[3][1]++, '20')));
    const search =
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().s[33]++,
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().b[4][0]++, url.searchParams.get('search')) ||
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().b[4][1]++, ''));
    const category_id =
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().s[34]++,
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().b[5][0]++, url.searchParams.get('category_id')) ||
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().b[5][1]++, ''));
    const offset =
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().s[35]++, (page - 1) * limit);
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[36]++;
    console.log('ğ Admin Products Direct: Query params', {
      page,
      limit,
      offset,
      search,
      category_id
    });
    // Construir consulta
    let query =
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().s[37]++, supabase.from('products').select(`
        id,
        name,
        description,
        price,
        stock,
        category_id,
        images,
        created_at,
        updated_at,
        categories (
          id,
          name
        )
      `, {
      count: 'exact'
    }));
    // Aplicar filtros
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[38]++;
    if (search) {
      /* istanbul ignore next */
      cov_1yxcyoj4pa().b[6][0]++;
      cov_1yxcyoj4pa().s[39]++;
      query = query.or(`name.ilike.%${search}%,description.ilike.%${search}%`);
    } else
    /* istanbul ignore next */
    {
      cov_1yxcyoj4pa().b[6][1]++;
    }
    cov_1yxcyoj4pa().s[40]++;
    if (category_id) {
      /* istanbul ignore next */
      cov_1yxcyoj4pa().b[7][0]++;
      cov_1yxcyoj4pa().s[41]++;
      query = query.eq('category_id', category_id);
    } else
    /* istanbul ignore next */
    {
      cov_1yxcyoj4pa().b[7][1]++;
    }
    // Aplicar paginaciÃ³n y ordenamiento
    cov_1yxcyoj4pa().s[42]++;
    query = query.range(offset, offset + limit - 1).order('created_at', {
      ascending: false
    });
    const {
      data: products,
      error,
      count
    } =
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().s[43]++, await query);
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[44]++;
    console.log('ğ Admin Products Direct: Query executed', {
      error: error?.message,
      count,
      productsLength: products?.length
    });
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[45]++;
    if (error) {
      /* istanbul ignore next */
      cov_1yxcyoj4pa().b[8][0]++;
      cov_1yxcyoj4pa().s[46]++;
      console.error('â Error consultando productos:', error);
      /* istanbul ignore next */
      cov_1yxcyoj4pa().s[47]++;
      return _server.NextResponse.json({
        error: 'Error al consultar productos',
        details: error.message
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_1yxcyoj4pa().b[8][1]++;
    }
    // Transformar productos
    const transformedProducts =
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().s[48]++,
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().b[9][0]++, products?.map(product => {
      /* istanbul ignore next */
      cov_1yxcyoj4pa().f[5]++;
      cov_1yxcyoj4pa().s[49]++;
      return {
        ...product,
        category_name:
        /* istanbul ignore next */
        (cov_1yxcyoj4pa().b[10][0]++, product.categories?.name) ||
        /* istanbul ignore next */
        (cov_1yxcyoj4pa().b[10][1]++, null),
        categories: undefined
      };
    })) ||
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().b[9][1]++, []));
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[50]++;
    console.log('â Admin Products Direct: Success', {
      total: count,
      returned: transformedProducts.length,
      page,
      limit
    });
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[51]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        products: transformedProducts,
        total:
        /* istanbul ignore next */
        (cov_1yxcyoj4pa().b[11][0]++, count) ||
        /* istanbul ignore next */
        (cov_1yxcyoj4pa().b[11][1]++, 0),
        pagination: {
          page,
          limit,
          offset,
          totalPages: Math.ceil((
          /* istanbul ignore next */
          (cov_1yxcyoj4pa().b[12][0]++, count) ||
          /* istanbul ignore next */
          (cov_1yxcyoj4pa().b[12][1]++, 0)) / limit),
          hasMore: (
          /* istanbul ignore next */
          (cov_1yxcyoj4pa().b[13][0]++, count) ||
          /* istanbul ignore next */
          (cov_1yxcyoj4pa().b[13][1]++, 0)) > offset + limit,
          hasPrevious: page > 1
        }
      },
      meta: {
        timestamp: new Date().toISOString(),
        method: 'admin_direct',
        user: userId,
        role: 'admin'
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[52]++;
    console.error('â Error fatal en admin products direct:', error);
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[53]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1yxcyoj4pa().b[14][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1yxcyoj4pa().b[14][1]++, 'Error desconocido')
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_1yxcyoj4pa().f[6]++;
  cov_1yxcyoj4pa().s[54]++;
  try {
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[55]++;
    console.log('ğ Admin Products Direct POST: Starting...');
    // Verificar autenticaciÃ³n con NextAuth.js
    const session =
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().s[56]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[57]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_1yxcyoj4pa().b[15][0]++;
      cov_1yxcyoj4pa().s[58]++;
      return _server.NextResponse.json({
        error: 'Acceso denegado - AutenticaciÃ³n requerida',
        code: 'AUTH_REQUIRED'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1yxcyoj4pa().b[15][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().s[59]++, session.user.id);
    // Verificar si es admin (simplificado)
    const isAdmin =
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().s[60]++, session.user.email === 'santiago@xor.com.ar');
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[61]++;
    if (!isAdmin) {
      /* istanbul ignore next */
      cov_1yxcyoj4pa().b[16][0]++;
      cov_1yxcyoj4pa().s[62]++;
      return _server.NextResponse.json({
        error: 'Acceso denegado - Se requieren permisos de administrador',
        code: 'ADMIN_REQUIRED'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_1yxcyoj4pa().b[16][1]++;
    }
    // Usuario verificado como admin
    cov_1yxcyoj4pa().s[63]++;
    console.log('â Admin Products Direct POST: Usuario verificado como admin');
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[64]++;
    console.log(`ğ Admin status: ${isAdmin}`);
    // Comentamos la verificaciÃ³n de rol temporalmente para debug
    // Crear cliente Supabase con service key
    const supabase =
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().s[65]++, (0, _supabasejs.createClient)(supabaseUrl, supabaseServiceKey));
    const body =
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().s[66]++, await request.json());
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[67]++;
    console.log('ğ Admin Products Direct POST: Body received', {
      hasName: !!body.name,
      hasPrice: !!body.price,
      hasCategory: !!body.category_id
    });
    // ValidaciÃ³n bÃ¡sica
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[68]++;
    if (
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().b[18][0]++, !body.name) ||
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().b[18][1]++, !body.price) ||
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().b[18][2]++, !body.category_id)) {
      /* istanbul ignore next */
      cov_1yxcyoj4pa().b[17][0]++;
      cov_1yxcyoj4pa().s[69]++;
      return _server.NextResponse.json({
        error: 'Campos requeridos: name, price, category_id',
        code: 'VALIDATION_ERROR'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1yxcyoj4pa().b[17][1]++;
    }
    // Crear producto
    const productData =
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().s[70]++, {
      name: body.name,
      description:
      /* istanbul ignore next */
      (cov_1yxcyoj4pa().b[19][0]++, body.description) ||
      /* istanbul ignore next */
      (cov_1yxcyoj4pa().b[19][1]++, ''),
      price: parseFloat(body.price),
      stock:
      /* istanbul ignore next */
      (cov_1yxcyoj4pa().b[20][0]++, parseInt(body.stock)) ||
      /* istanbul ignore next */
      (cov_1yxcyoj4pa().b[20][1]++, 0),
      category_id: body.category_id,
      images:
      /* istanbul ignore next */
      (cov_1yxcyoj4pa().b[21][0]++, body.images) ||
      /* istanbul ignore next */
      (cov_1yxcyoj4pa().b[21][1]++, {}),
      created_at: new Date().toISOString(),
      updated_at: new Date().toISOString()
    });
    const {
      data: product,
      error
    } =
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().s[71]++, await supabase.from('products').insert(productData).select(`
        id,
        name,
        description,
        price,
        stock,
        category_id,
        images,
        created_at,
        updated_at,
        categories (
          id,
          name
        )
      `).single());
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[72]++;
    if (error) {
      /* istanbul ignore next */
      cov_1yxcyoj4pa().b[22][0]++;
      cov_1yxcyoj4pa().s[73]++;
      console.error('â Error creando producto:', error);
      /* istanbul ignore next */
      cov_1yxcyoj4pa().s[74]++;
      return _server.NextResponse.json({
        error: 'Error al crear producto',
        details: error.message
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_1yxcyoj4pa().b[22][1]++;
    }
    // Transformar respuesta
    const transformedProduct =
    /* istanbul ignore next */
    (cov_1yxcyoj4pa().s[75]++, {
      ...product,
      category_name:
      /* istanbul ignore next */
      (cov_1yxcyoj4pa().b[23][0]++, product.categories?.name) ||
      /* istanbul ignore next */
      (cov_1yxcyoj4pa().b[23][1]++, null),
      categories: undefined
    });
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[76]++;
    console.log('â Admin Products Direct POST: Success', {
      productId: product.id,
      name: product.name
    });
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[77]++;
    return _server.NextResponse.json({
      success: true,
      message: 'Producto creado exitosamente',
      data: transformedProduct
    }, {
      status: 201
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[78]++;
    console.error('â Error fatal en admin products direct POST:', error);
    /* istanbul ignore next */
    cov_1yxcyoj4pa().s[79]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1yxcyoj4pa().b[24][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1yxcyoj4pa().b[24][1]++, 'Error desconocido')
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,