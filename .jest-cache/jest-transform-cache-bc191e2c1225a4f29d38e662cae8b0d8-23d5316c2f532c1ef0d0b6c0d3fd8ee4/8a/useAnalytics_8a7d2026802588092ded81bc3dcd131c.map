{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useAnalytics.ts"],"sourcesContent":["/**\r\n * Hook personalizado para Analytics en Pinteya E-commerce\r\n * Proporciona funciones de tracking y métricas fáciles de usar\r\n */\r\n\r\nimport { useEffect, useCallback, useState } from 'react';\r\nimport { useAuth } from './useAuth';\r\nimport { usePathname } from 'next/navigation';\r\nimport { analytics, AnalyticsEvent, ConversionMetrics, UserInteraction } from '@/lib/integrations/analytics';\r\n\r\nexport interface UseAnalyticsReturn {\r\n  // Tracking functions\r\n  trackEvent: (event: string, category: string, action: string, label?: string, value?: number, metadata?: Record<string, any>) => void;\r\n  trackEcommerceEvent: (action: string, data: Record<string, any>) => void;\r\n  trackPageView: (page?: string) => void;\r\n  trackConversion: (type: string, value?: number, metadata?: Record<string, any>) => void;\r\n  trackProductView: (productId: string, productName: string, category: string, price: number) => void;\r\n  trackAddToCart: (productId: string, productName: string, price: number, quantity: number) => void;\r\n  trackRemoveFromCart: (productId: string, productName: string) => void;\r\n  trackCheckoutStart: (cartValue: number, itemCount: number) => void;\r\n  trackPurchase: (orderId: string, value: number, items: any[]) => void;\r\n  trackSearch: (query: string, resultsCount: number) => void;\r\n  \r\n  // Data retrieval\r\n  getEvents: () => AnalyticsEvent[];\r\n  getInteractions: () => UserInteraction[];\r\n  getConversionMetrics: () => ConversionMetrics;\r\n  getSessionId: () => string;\r\n  \r\n  // State\r\n  isEnabled: boolean;\r\n  setEnabled: (enabled: boolean) => void;\r\n  \r\n  // Real-time metrics\r\n  sessionMetrics: ConversionMetrics;\r\n  refreshMetrics: () => void;\r\n}\r\n\r\nexport const useAnalytics = (): UseAnalyticsReturn => {\r\n  const { user } = useAuth();\r\n  const pathname = usePathname();\r\n  const [isEnabled, setIsEnabled] = useState(true);\r\n  const [sessionMetrics, setSessionMetrics] = useState<ConversionMetrics>({\r\n    cartAdditions: 0,\r\n    cartRemovals: 0,\r\n    checkoutStarts: 0,\r\n    checkoutCompletions: 0,\r\n    productViews: 0,\r\n    categoryViews: 0,\r\n    searchQueries: 0,\r\n    conversionRate: 0,\r\n    averageOrderValue: 0,\r\n    cartAbandonmentRate: 0,\r\n  });\r\n\r\n  // Track page views automáticamente cuando cambia la ruta\r\n  useEffect(() => {\r\n    if (isEnabled) {\r\n      analytics.trackPageView(pathname);\r\n    }\r\n  }, [pathname, isEnabled]);\r\n\r\n  // Actualizar métricas periódicamente\r\n  useEffect(() => {\r\n    const updateMetrics = () => {\r\n      setSessionMetrics(analytics.getConversionMetrics());\r\n    };\r\n\r\n    updateMetrics();\r\n    const interval = setInterval(updateMetrics, 5000); // Actualizar cada 5 segundos\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Habilitar/deshabilitar analytics\r\n  useEffect(() => {\r\n    if (isEnabled) {\r\n      analytics.enable();\r\n    } else {\r\n      analytics.disable();\r\n    }\r\n  }, [isEnabled]);\r\n\r\n  const trackEvent = useCallback((\r\n    event: string,\r\n    category: string,\r\n    action: string,\r\n    label?: string,\r\n    value?: number,\r\n    metadata?: Record<string, any>\r\n  ) => {\r\n    if (!isEnabled) {return;}\r\n    \r\n    const enrichedMetadata = {\r\n      ...metadata,\r\n      userId: user?.id,\r\n      userEmail: user?.emailAddresses?.[0]?.emailAddress,\r\n    };\r\n    \r\n    analytics.trackEvent(event, category, action, label, value, enrichedMetadata);\r\n  }, [isEnabled, user]);\r\n\r\n  const trackEcommerceEvent = useCallback((action: string, data: Record<string, any>) => {\r\n    if (!isEnabled) {return;}\r\n    \r\n    const enrichedData = {\r\n      ...data,\r\n      userId: user?.id,\r\n      userEmail: user?.emailAddresses?.[0]?.emailAddress,\r\n    };\r\n    \r\n    analytics.trackEcommerceEvent(action, enrichedData);\r\n  }, [isEnabled, user]);\r\n\r\n  const trackPageView = useCallback((page?: string) => {\r\n    if (!isEnabled) {return;}\r\n    analytics.trackPageView(page);\r\n  }, [isEnabled]);\r\n\r\n  const trackConversion = useCallback((type: string, value?: number, metadata?: Record<string, any>) => {\r\n    if (!isEnabled) {return;}\r\n    \r\n    const enrichedMetadata = {\r\n      ...metadata,\r\n      userId: user?.id,\r\n    };\r\n    \r\n    analytics.trackConversion(type, value, enrichedMetadata);\r\n  }, [isEnabled, user]);\r\n\r\n  // Funciones específicas para e-commerce\r\n  const trackProductView = useCallback((\r\n    productId: string,\r\n    productName: string,\r\n    category: string,\r\n    price: number\r\n  ) => {\r\n    trackEcommerceEvent('view_item', {\r\n      item_id: productId,\r\n      item_name: productName,\r\n      item_category: category,\r\n      price: price,\r\n      currency: 'ARS',\r\n    });\r\n  }, [trackEcommerceEvent]);\r\n\r\n  const trackAddToCart = useCallback((\r\n    productId: string,\r\n    productName: string,\r\n    price: number,\r\n    quantity: number\r\n  ) => {\r\n    trackEcommerceEvent('add_to_cart', {\r\n      item_id: productId,\r\n      item_name: productName,\r\n      price: price,\r\n      quantity: quantity,\r\n      currency: 'ARS',\r\n      value: price * quantity,\r\n    });\r\n  }, [trackEcommerceEvent]);\r\n\r\n  const trackRemoveFromCart = useCallback((\r\n    productId: string,\r\n    productName: string\r\n  ) => {\r\n    trackEcommerceEvent('remove_from_cart', {\r\n      item_id: productId,\r\n      item_name: productName,\r\n    });\r\n  }, [trackEcommerceEvent]);\r\n\r\n  const trackCheckoutStart = useCallback((\r\n    cartValue: number,\r\n    itemCount: number\r\n  ) => {\r\n    trackEcommerceEvent('begin_checkout', {\r\n      value: cartValue,\r\n      currency: 'ARS',\r\n      num_items: itemCount,\r\n    });\r\n  }, [trackEcommerceEvent]);\r\n\r\n  const trackPurchase = useCallback((\r\n    orderId: string,\r\n    value: number,\r\n    items: any[]\r\n  ) => {\r\n    trackEcommerceEvent('purchase', {\r\n      transaction_id: orderId,\r\n      value: value,\r\n      currency: 'ARS',\r\n      items: items,\r\n    });\r\n    \r\n    // También trackear como conversión\r\n    trackConversion('purchase', value, {\r\n      orderId,\r\n      itemCount: items.length,\r\n    });\r\n  }, [trackEcommerceEvent, trackConversion]);\r\n\r\n  const trackSearch = useCallback((\r\n    query: string,\r\n    resultsCount: number\r\n  ) => {\r\n    trackEcommerceEvent('search', {\r\n      search_term: query,\r\n      results_count: resultsCount,\r\n    });\r\n  }, [trackEcommerceEvent]);\r\n\r\n  const getEvents = useCallback(() => {\r\n    return analytics.getEvents();\r\n  }, []);\r\n\r\n  const getInteractions = useCallback(() => {\r\n    return analytics.getInteractions();\r\n  }, []);\r\n\r\n  const getConversionMetrics = useCallback(() => {\r\n    return analytics.getConversionMetrics();\r\n  }, []);\r\n\r\n  const getSessionId = useCallback(() => {\r\n    return analytics.getSessionId();\r\n  }, []);\r\n\r\n  const refreshMetrics = useCallback(() => {\r\n    setSessionMetrics(analytics.getConversionMetrics());\r\n  }, []);\r\n\r\n  const setEnabled = useCallback((enabled: boolean) => {\r\n    setIsEnabled(enabled);\r\n  }, []);\r\n\r\n  return {\r\n    // Tracking functions\r\n    trackEvent,\r\n    trackEcommerceEvent,\r\n    trackPageView,\r\n    trackConversion,\r\n    trackProductView,\r\n    trackAddToCart,\r\n    trackRemoveFromCart,\r\n    trackCheckoutStart,\r\n    trackPurchase,\r\n    trackSearch,\r\n    \r\n    // Data retrieval\r\n    getEvents,\r\n    getInteractions,\r\n    getConversionMetrics,\r\n    getSessionId,\r\n    \r\n    // State\r\n    isEnabled,\r\n    setEnabled,\r\n    \r\n    // Real-time metrics\r\n    sessionMetrics,\r\n    refreshMetrics,\r\n  };\r\n};\r\n\r\n// Hook específico para métricas en tiempo real\r\nexport const useRealTimeMetrics = (refreshInterval: number = 5000) => {\r\n  const [metrics, setMetrics] = useState<ConversionMetrics>({\r\n    cartAdditions: 0,\r\n    cartRemovals: 0,\r\n    checkoutStarts: 0,\r\n    checkoutCompletions: 0,\r\n    productViews: 0,\r\n    categoryViews: 0,\r\n    searchQueries: 0,\r\n    conversionRate: 0,\r\n    averageOrderValue: 0,\r\n    cartAbandonmentRate: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const updateMetrics = () => {\r\n      setMetrics(analytics.getConversionMetrics());\r\n    };\r\n\r\n    updateMetrics();\r\n    const interval = setInterval(updateMetrics, refreshInterval);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [refreshInterval]);\r\n\r\n  return metrics;\r\n};\r\n\r\n// Hook para tracking automático de componentes\r\nexport const useComponentTracking = (componentName: string, trackMount: boolean = true) => {\r\n  const { trackEvent } = useOptimizedAnalytics();\r\n\r\n  useEffect(() => {\r\n    if (trackMount) {\r\n      trackEvent('component_mount', 'ui', 'mount', componentName);\r\n    }\r\n\r\n    return () => {\r\n      trackEvent('component_unmount', 'ui', 'unmount', componentName);\r\n    };\r\n  }, [componentName, trackMount, trackEvent]);\r\n\r\n  const trackComponentEvent = useCallback((action: string, metadata?: Record<string, any>) => {\r\n    trackEvent('component_interaction', 'ui', action, componentName, undefined, metadata);\r\n  }, [componentName, trackEvent]);\r\n\r\n  return { trackComponentEvent };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["useAnalytics","useComponentTracking","useRealTimeMetrics","user","useAuth","pathname","usePathname","isEnabled","setIsEnabled","useState","sessionMetrics","setSessionMetrics","cartAdditions","cartRemovals","checkoutStarts","checkoutCompletions","productViews","categoryViews","searchQueries","conversionRate","averageOrderValue","cartAbandonmentRate","useEffect","analytics","trackPageView","updateMetrics","getConversionMetrics","interval","setInterval","clearInterval","enable","disable","trackEvent","useCallback","event","category","action","label","value","metadata","enrichedMetadata","userId","id","userEmail","emailAddresses","emailAddress","trackEcommerceEvent","data","enrichedData","page","trackConversion","type","trackProductView","productId","productName","price","item_id","item_name","item_category","currency","trackAddToCart","quantity","trackRemoveFromCart","trackCheckoutStart","cartValue","itemCount","num_items","trackPurchase","orderId","items","transaction_id","length","trackSearch","query","resultsCount","search_term","results_count","getEvents","getInteractions","getSessionId","refreshMetrics","setEnabled","enabled","refreshInterval","metrics","setMetrics","componentName","trackMount","useOptimizedAnalytics","trackComponentEvent","undefined"],"mappings":"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"}