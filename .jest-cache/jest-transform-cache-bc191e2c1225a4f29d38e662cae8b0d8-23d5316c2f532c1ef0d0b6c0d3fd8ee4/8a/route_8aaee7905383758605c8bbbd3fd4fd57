77f235d294dbdbece483474a8c2766ee
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_y423xmhfi() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products-secure\\route.ts";
  var hash = "9225d33eef591c36716e069fbc8354695bac7b39";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products-secure\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 27
        },
        end: {
          line: 24,
          column: 78
        }
      },
      "9": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 24
        }
      },
      "10": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 185,
          column: 5
        }
      },
      "11": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 79
        }
      },
      "12": {
        start: {
          line: 30,
          column: 27
        },
        end: {
          line: 30,
          column: 101
        }
      },
      "13": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "14": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 71
        }
      },
      "15": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 39,
          column: 15
        }
      },
      "16": {
        start: {
          line: 41,
          column: 35
        },
        end: {
          line: 41,
          column: 45
        }
      },
      "17": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 79
        }
      },
      "18": {
        start: {
          line: 44,
          column: 20
        },
        end: {
          line: 44,
          column: 40
        }
      },
      "19": {
        start: {
          line: 45,
          column: 26
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "20": {
        start: {
          line: 54,
          column: 21
        },
        end: {
          line: 54,
          column: 58
        }
      },
      "21": {
        start: {
          line: 55,
          column: 22
        },
        end: {
          line: 55,
          column: 74
        }
      },
      "22": {
        start: {
          line: 56,
          column: 23
        },
        end: {
          line: 56,
          column: 41
        }
      },
      "23": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 62,
          column: 11
        }
      },
      "24": {
        start: {
          line: 64,
          column: 20
        },
        end: {
          line: 80,
          column: 10
        }
      },
      "25": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "26": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 105
        }
      },
      "27": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "28": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 64
        }
      },
      "29": {
        start: {
          line: 89,
          column: 32
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "30": {
        start: {
          line: 96,
          column: 23
        },
        end: {
          line: 96,
          column: 99
        }
      },
      "31": {
        start: {
          line: 97,
          column: 26
        },
        end: {
          line: 97,
          column: 72
        }
      },
      "32": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 100,
          column: 11
        }
      },
      "33": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 56
        }
      },
      "34": {
        start: {
          line: 104,
          column: 49
        },
        end: {
          line: 104,
          column: 60
        }
      },
      "35": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "36": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 54
        }
      },
      "37": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 113,
          column: 15
        }
      },
      "38": {
        start: {
          line: 116,
          column: 36
        },
        end: {
          line: 127,
          column: 21
        }
      },
      "39": {
        start: {
          line: 116,
          column: 62
        },
        end: {
          line: 127,
          column: 13
        }
      },
      "40": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 132,
          column: 11
        }
      },
      "41": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 137,
          column: 11
        }
      },
      "42": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 165,
          column: 11
        }
      },
      "43": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 70
        }
      },
      "44": {
        start: {
          line: 168,
          column: 29
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "45": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 56
        }
      },
      "46": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 184,
          column: 11
        }
      },
      "47": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 292,
          column: 5
        }
      },
      "48": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 67
        }
      },
      "49": {
        start: {
          line: 191,
          column: 27
        },
        end: {
          line: 191,
          column: 103
        }
      },
      "50": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "51": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 198,
          column: 15
        }
      },
      "52": {
        start: {
          line: 200,
          column: 35
        },
        end: {
          line: 200,
          column: 45
        }
      },
      "53": {
        start: {
          line: 202,
          column: 21
        },
        end: {
          line: 202,
          column: 41
        }
      },
      "54": {
        start: {
          line: 203,
          column: 30
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "55": {
        start: {
          line: 212,
          column: 28
        },
        end: {
          line: 212,
          column: 86
        }
      },
      "56": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "57": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 219,
          column: 15
        }
      },
      "58": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "59": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 226,
          column: 15
        }
      },
      "60": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "61": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 233,
          column: 15
        }
      },
      "62": {
        start: {
          line: 236,
          column: 57
        },
        end: {
          line: 236,
          column: 152
        }
      },
      "63": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 243,
          column: 9
        }
      },
      "64": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 242,
          column: 15
        }
      },
      "65": {
        start: {
          line: 245,
          column: 41
        },
        end: {
          line: 259,
          column: 17
        }
      },
      "66": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 268,
          column: 9
        }
      },
      "67": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 60
        }
      },
      "68": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 267,
          column: 15
        }
      },
      "69": {
        start: {
          line: 270,
          column: 35
        },
        end: {
          line: 273,
          column: 9
        }
      },
      "70": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 275,
          column: 121
        }
      },
      "71": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 67
        }
      },
      "72": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 283,
          column: 11
        }
      },
      "73": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 285,
          column: 69
        }
      },
      "74": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 291,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "GET",
        decl: {
          start: {
            line: 26,
            column: 15
          },
          end: {
            line: 26,
            column: 18
          }
        },
        loc: {
          start: {
            line: 26,
            column: 28
          },
          end: {
            line: 186,
            column: 1
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 116,
            column: 50
          },
          end: {
            line: 116,
            column: 51
          }
        },
        loc: {
          start: {
            line: 116,
            column: 62
          },
          end: {
            line: 127,
            column: 13
          }
        },
        line: 116
      },
      "6": {
        name: "POST",
        decl: {
          start: {
            line: 187,
            column: 15
          },
          end: {
            line: 187,
            column: 19
          }
        },
        loc: {
          start: {
            line: 187,
            column: 29
          },
          end: {
            line: 293,
            column: 1
          }
        },
        line: 187
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 38,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 38,
            column: 41
          }
        }, {
          start: {
            line: 38,
            column: 45
          },
          end: {
            line: 38,
            column: 48
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 46,
            column: 18
          },
          end: {
            line: 46,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 18
          },
          end: {
            line: 46,
            column: 46
          }
        }, {
          start: {
            line: 46,
            column: 50
          },
          end: {
            line: 46,
            column: 53
          }
        }],
        line: 46
      },
      "3": {
        loc: {
          start: {
            line: 47,
            column: 19
          },
          end: {
            line: 47,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 19
          },
          end: {
            line: 47,
            column: 48
          }
        }, {
          start: {
            line: 47,
            column: 52
          },
          end: {
            line: 47,
            column: 56
          }
        }],
        line: 47
      },
      "4": {
        loc: {
          start: {
            line: 48,
            column: 20
          },
          end: {
            line: 48,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 20
          },
          end: {
            line: 48,
            column: 50
          }
        }, {
          start: {
            line: 48,
            column: 54
          },
          end: {
            line: 48,
            column: 56
          }
        }],
        line: 48
      },
      "5": {
        loc: {
          start: {
            line: 49,
            column: 22
          },
          end: {
            line: 49,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 22
          },
          end: {
            line: 49,
            column: 54
          }
        }, {
          start: {
            line: 49,
            column: 58
          },
          end: {
            line: 49,
            column: 60
          }
        }],
        line: 49
      },
      "6": {
        loc: {
          start: {
            line: 50,
            column: 20
          },
          end: {
            line: 50,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 20
          },
          end: {
            line: 50,
            column: 50
          }
        }, {
          start: {
            line: 50,
            column: 54
          },
          end: {
            line: 50,
            column: 66
          }
        }],
        line: 50
      },
      "7": {
        loc: {
          start: {
            line: 51,
            column: 23
          },
          end: {
            line: 51,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 23
          },
          end: {
            line: 51,
            column: 56
          }
        }, {
          start: {
            line: 51,
            column: 60
          },
          end: {
            line: 51,
            column: 66
          }
        }],
        line: 51
      },
      "8": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "9": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "10": {
        loc: {
          start: {
            line: 96,
            column: 23
          },
          end: {
            line: 96,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 96,
            column: 68
          },
          end: {
            line: 96,
            column: 84
          }
        }, {
          start: {
            line: 96,
            column: 87
          },
          end: {
            line: 96,
            column: 99
          }
        }],
        line: 96
      },
      "11": {
        loc: {
          start: {
            line: 97,
            column: 26
          },
          end: {
            line: 97,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 97,
            column: 58
          },
          end: {
            line: 97,
            column: 63
          }
        }, {
          start: {
            line: 97,
            column: 66
          },
          end: {
            line: 97,
            column: 72
          }
        }],
        line: 97
      },
      "12": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "13": {
        loc: {
          start: {
            line: 116,
            column: 36
          },
          end: {
            line: 127,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 36
          },
          end: {
            line: 127,
            column: 15
          }
        }, {
          start: {
            line: 127,
            column: 19
          },
          end: {
            line: 127,
            column: 21
          }
        }],
        line: 116
      },
      "14": {
        loc: {
          start: {
            line: 123,
            column: 31
          },
          end: {
            line: 123,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 31
          },
          end: {
            line: 123,
            column: 55
          }
        }, {
          start: {
            line: 123,
            column: 59
          },
          end: {
            line: 123,
            column: 63
          }
        }],
        line: 123
      },
      "15": {
        loc: {
          start: {
            line: 143,
            column: 23
          },
          end: {
            line: 143,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 143,
            column: 23
          },
          end: {
            line: 143,
            column: 28
          }
        }, {
          start: {
            line: 143,
            column: 32
          },
          end: {
            line: 143,
            column: 33
          }
        }],
        line: 143
      },
      "16": {
        loc: {
          start: {
            line: 147,
            column: 43
          },
          end: {
            line: 147,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 43
          },
          end: {
            line: 147,
            column: 48
          }
        }, {
          start: {
            line: 147,
            column: 52
          },
          end: {
            line: 147,
            column: 53
          }
        }],
        line: 147
      },
      "17": {
        loc: {
          start: {
            line: 148,
            column: 47
          },
          end: {
            line: 148,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 47
          },
          end: {
            line: 148,
            column: 52
          }
        }, {
          start: {
            line: 148,
            column: 56
          },
          end: {
            line: 148,
            column: 57
          }
        }],
        line: 148
      },
      "18": {
        loc: {
          start: {
            line: 169,
            column: 21
          },
          end: {
            line: 169,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 169,
            column: 46
          },
          end: {
            line: 169,
            column: 59
          }
        }, {
          start: {
            line: 169,
            column: 62
          },
          end: {
            line: 169,
            column: 77
          }
        }],
        line: 169
      },
      "19": {
        loc: {
          start: {
            line: 170,
            column: 19
          },
          end: {
            line: 170,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 170,
            column: 44
          },
          end: {
            line: 170,
            column: 55
          }
        }, {
          start: {
            line: 170,
            column: 58
          },
          end: {
            line: 170,
            column: 67
          }
        }],
        line: 170
      },
      "20": {
        loc: {
          start: {
            line: 171,
            column: 18
          },
          end: {
            line: 171,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 171,
            column: 43
          },
          end: {
            line: 171,
            column: 53
          }
        }, {
          start: {
            line: 171,
            column: 56
          },
          end: {
            line: 171,
            column: 70
          }
        }],
        line: 171
      },
      "21": {
        loc: {
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "22": {
        loc: {
          start: {
            line: 197,
            column: 24
          },
          end: {
            line: 197,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 197,
            column: 24
          },
          end: {
            line: 197,
            column: 41
          }
        }, {
          start: {
            line: 197,
            column: 45
          },
          end: {
            line: 197,
            column: 48
          }
        }],
        line: 197
      },
      "23": {
        loc: {
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "24": {
        loc: {
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 214,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 214,
            column: 29
          }
        }, {
          start: {
            line: 214,
            column: 33
          },
          end: {
            line: 214,
            column: 67
          }
        }],
        line: 214
      },
      "25": {
        loc: {
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "26": {
        loc: {
          start: {
            line: 221,
            column: 12
          },
          end: {
            line: 221,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 221,
            column: 12
          },
          end: {
            line: 221,
            column: 30
          }
        }, {
          start: {
            line: 221,
            column: 34
          },
          end: {
            line: 221,
            column: 56
          }
        }],
        line: 221
      },
      "27": {
        loc: {
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "28": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 243,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 243,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "29": {
        loc: {
          start: {
            line: 237,
            column: 12
          },
          end: {
            line: 237,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 237,
            column: 12
          },
          end: {
            line: 237,
            column: 25
          }
        }, {
          start: {
            line: 237,
            column: 29
          },
          end: {
            line: 237,
            column: 38
          }
        }],
        line: 237
      },
      "30": {
        loc: {
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 268,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 268,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products-secure\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n/**\r\n * API segura para gesti\xF3n de productos del panel administrativo\r\n * Usa Supabase Auth directamente para evitar conflictos con Clerk\r\n */\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { \r\n  requireAdminAuth, \r\n  checkPermission, \r\n  logAdminAction, \r\n  validateInput \r\n} from '@/lib/auth/supabase-auth-utils';\r\n\r\n/**\r\n * GET /api/admin/products-secure\r\n * Obtener lista paginada de productos con autenticaci\xF3n segura\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    console.log('\uD83D\uDD12 Products Secure API: Starting with authentication...');\r\n\r\n    // Verificar autenticaci\xF3n y permisos\r\n    const authResult = await checkPermission(request, 'products', 'read');\r\n\r\n    if (!authResult.allowed) {\r\n      console.warn('\u274C Authentication failed:', authResult.error);\r\n      return NextResponse.json(\r\n        { \r\n          error: authResult.error,\r\n          code: 'AUTH_FAILED',\r\n          timestamp: new Date().toISOString()\r\n        },\r\n        { status: authResult.status || 401 }\r\n      );\r\n    }\r\n\r\n    const { user, supabase } = authResult;\r\n    console.log('\u2705 User authenticated:', user?.email, 'Role:', user?.role);\r\n\r\n    // Obtener y validar par\xE1metros de query\r\n    const url = new URL(request.url);\r\n    const rawParams = {\r\n      page: url.searchParams.get('page') || '1',\r\n      limit: url.searchParams.get('limit') || '10',\r\n      search: url.searchParams.get('search') || '',\r\n      category: url.searchParams.get('category') || '',\r\n      sortBy: url.searchParams.get('sortBy') || 'created_at',\r\n      sortOrder: url.searchParams.get('sortOrder') || 'desc'\r\n    };\r\n\r\n    // Validar par\xE1metros\r\n    const page = Math.max(1, parseInt(rawParams.page));\r\n    const limit = Math.min(50, Math.max(1, parseInt(rawParams.limit))); // M\xE1ximo 50 por p\xE1gina\r\n    const offset = (page - 1) * limit;\r\n\r\n    console.log('\uD83D\uDD0D Query params:', { page, limit, offset, search: rawParams.search });\r\n\r\n    // Construir query optimizada\r\n    let query = supabase\r\n      .from('products')\r\n      .select(`\r\n        id,\r\n        name,\r\n        description,\r\n        price,\r\n        stock,\r\n        category_id,\r\n        images,\r\n        created_at,\r\n        updated_at,\r\n        categories (\r\n          id,\r\n          name\r\n        )\r\n      `, { count: 'exact' });\r\n\r\n    // Aplicar filtros\r\n    if (rawParams.search) {\r\n      query = query.or(`name.ilike.%${rawParams.search}%,description.ilike.%${rawParams.search}%`);\r\n    }\r\n\r\n    if (rawParams.category) {\r\n      query = query.eq('category_id', rawParams.category);\r\n    }\r\n\r\n    // Aplicar ordenamiento\r\n    const validSortFields = ['name', 'price', 'stock', 'created_at', 'updated_at'];\r\n    const sortBy = validSortFields.includes(rawParams.sortBy) ? rawParams.sortBy : 'created_at';\r\n    const sortOrder = rawParams.sortOrder === 'asc' ? 'asc' : 'desc';\r\n    \r\n    query = query.order(sortBy, { ascending: sortOrder === 'asc' });\r\n\r\n    // Aplicar paginaci\xF3n\r\n    query = query.range(offset, offset + limit - 1);\r\n\r\n    // Ejecutar query\r\n    const { data: products, error, count } = await query;\r\n\r\n    if (error) {\r\n      console.error('\u274C Supabase error:', error);\r\n      return NextResponse.json(\r\n        { \r\n          error: 'Error al obtener productos',\r\n          details: error.message,\r\n          code: 'DATABASE_ERROR'\r\n        },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Transformar productos\r\n    const transformedProducts = products?.map(product => ({\r\n      id: product.id,\r\n      name: product.name,\r\n      description: product.description,\r\n      price: product.price,\r\n      stock: product.stock,\r\n      category_id: product.category_id,\r\n      category_name: product.categories?.name || null,\r\n      images: product.images,\r\n      created_at: product.created_at,\r\n      updated_at: product.updated_at\r\n    })) || [];\r\n\r\n    // Log de acci\xF3n administrativa\r\n    await logAdminAction(\r\n      user!.id,\r\n      'READ',\r\n      'products',\r\n      undefined,\r\n      null,\r\n      { count: transformedProducts.length, filters: rawParams }\r\n    );\r\n\r\n    console.log('\u2705 Products Secure API: Success', {\r\n      total: count,\r\n      returned: transformedProducts.length,\r\n      user: user?.email\r\n    });\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: 'Productos obtenidos exitosamente',\r\n      data: {\r\n        products: transformedProducts,\r\n        total: count || 0,\r\n        pagination: {\r\n          page,\r\n          limit,\r\n          totalPages: Math.ceil((count || 0) / limit),\r\n          hasNext: offset + limit < (count || 0),\r\n          hasPrev: page > 1\r\n        },\r\n        filters: {\r\n          search: rawParams.search,\r\n          category: rawParams.category,\r\n          sortBy,\r\n          sortOrder\r\n        }\r\n      },\r\n      meta: {\r\n        timestamp: new Date().toISOString(),\r\n        api: 'products-secure',\r\n        version: '2.0.0',\r\n        user: user?.email,\r\n        authenticated: true\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('\u274C Fatal error in products secure API:', error);\r\n    \r\n    const errorDetails = {\r\n      message: error instanceof Error ? error.message : 'Unknown error',\r\n      stack: error instanceof Error ? error.stack : undefined,\r\n      name: error instanceof Error ? error.name : 'UnknownError'\r\n    };\r\n\r\n    console.error('\u274C Error details:', errorDetails);\r\n\r\n    return NextResponse.json(\r\n      {\r\n        error: 'Error interno del servidor',\r\n        details: errorDetails.message,\r\n        code: 'INTERNAL_ERROR',\r\n        debug: {\r\n          errorName: errorDetails.name,\r\n          timestamp: new Date().toISOString()\r\n        }\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * POST /api/admin/products-secure\r\n * Crear nuevo producto con autenticaci\xF3n segura\r\n */\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    console.log('\uD83D\uDD12 Products Secure API: Creating product...');\r\n\r\n    // Verificar autenticaci\xF3n y permisos\r\n    const authResult = await checkPermission(request, 'products', 'create');\r\n\r\n    if (!authResult.allowed) {\r\n      return NextResponse.json(\r\n        { \r\n          error: authResult.error,\r\n          code: 'AUTH_FAILED'\r\n        },\r\n        { status: authResult.status || 401 }\r\n      );\r\n    }\r\n\r\n    const { user, supabase } = authResult;\r\n\r\n    // Obtener y validar datos del cuerpo\r\n    const body = await request.json();\r\n    \r\n    const allowedFields = [\r\n      'name', 'description', 'price', 'stock', \r\n      'category_id', 'images', 'status'\r\n    ];\r\n    \r\n    const productData = validateInput(body, allowedFields);\r\n\r\n    // Validaciones espec\xEDficas\r\n    if (!productData.name || productData.name.trim().length < 2) {\r\n      return NextResponse.json(\r\n        { error: 'El nombre del producto es requerido (m\xEDnimo 2 caracteres)' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    if (!productData.price || productData.price <= 0) {\r\n      return NextResponse.json(\r\n        { error: 'El precio debe ser mayor a 0' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    if (!productData.category_id) {\r\n      return NextResponse.json(\r\n        { error: 'La categor\xEDa es requerida' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Verificar que la categor\xEDa existe\r\n    const { data: category, error: categoryError } = await supabase\r\n      .from('categories')\r\n      .select('id, name')\r\n      .eq('id', productData.category_id)\r\n      .single();\r\n\r\n    if (categoryError || !category) {\r\n      return NextResponse.json(\r\n        { error: 'Categor\xEDa no encontrada' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Crear producto\r\n    const { data: product, error } = await supabase\r\n      .from('products')\r\n      .insert({\r\n        ...productData,\r\n        created_at: new Date().toISOString(),\r\n        updated_at: new Date().toISOString()\r\n      })\r\n      .select(`\r\n        id,\r\n        name,\r\n        description,\r\n        price,\r\n        stock,\r\n        category_id,\r\n        images,\r\n        created_at,\r\n        updated_at\r\n      `)\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('Error creating product:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al crear producto', details: error.message },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Transformar respuesta\r\n    const transformedProduct = {\r\n      ...product,\r\n      category_name: category.name\r\n    };\r\n\r\n    // Log de acci\xF3n administrativa\r\n    await logAdminAction(\r\n      user!.id,\r\n      'CREATE',\r\n      'product',\r\n      product.id,\r\n      null,\r\n      transformedProduct\r\n    );\r\n\r\n    console.log('\u2705 Product created successfully:', product.id);\r\n\r\n    return NextResponse.json(\r\n      {\r\n        success: true,\r\n        message: 'Producto creado exitosamente',\r\n        data: transformedProduct\r\n      },\r\n      { status: 201 }\r\n    );\r\n\r\n  } catch (error) {\r\n    console.error('\u274C Error in POST products secure API:', error);\r\n    \r\n    return NextResponse.json(\r\n      {\r\n        error: 'Error interno del servidor',\r\n        code: 'INTERNAL_ERROR'\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "request", "console", "log", "authResult", "checkPermission", "allowed", "warn", "error", "NextResponse", "json", "code", "timestamp", "Date", "toISOString", "status", "user", "supabase", "email", "role", "url", "URL", "rawParams", "page", "searchParams", "get", "limit", "search", "category", "sortBy", "sortOrder", "Math", "max", "parseInt", "min", "offset", "query", "from", "select", "count", "or", "eq", "validSortFields", "includes", "order", "ascending", "range", "data", "products", "details", "message", "transformedProducts", "map", "product", "id", "name", "description", "price", "stock", "category_id", "category_name", "categories", "images", "created_at", "updated_at", "logAdminAction", "undefined", "length", "filters", "total", "returned", "success", "pagination", "totalPages", "ceil", "hasNext", "hasPrev", "meta", "api", "version", "authenticated", "errorDetails", "Error", "stack", "debug", "errorName", "body", "allowedFields", "productData", "validateInput", "trim", "categoryError", "single", "insert", "transformedProduct"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9225d33eef591c36716e069fbc8354695bac7b39"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_y423xmhfi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_y423xmhfi();
cov_y423xmhfi().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_y423xmhfi().f[0]++;
  cov_y423xmhfi().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_y423xmhfi().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_y423xmhfi().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_y423xmhfi().f[1]++;
    cov_y423xmhfi().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_y423xmhfi().f[2]++;
    cov_y423xmhfi().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_y423xmhfi().f[3]++;
    cov_y423xmhfi().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_y423xmhfi().s[7]++, require("next/server"));
const _supabaseauthutils =
/* istanbul ignore next */
(cov_y423xmhfi().s[8]++, require("../../../../lib/auth/supabase-auth-utils"));
const runtime =
/* istanbul ignore next */
(cov_y423xmhfi().s[9]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_y423xmhfi().f[4]++;
  cov_y423xmhfi().s[10]++;
  try {
    /* istanbul ignore next */
    cov_y423xmhfi().s[11]++;
    console.log('ğ Products Secure API: Starting with authentication...');
    // Verificar autenticaciÃ³n y permisos
    const authResult =
    /* istanbul ignore next */
    (cov_y423xmhfi().s[12]++, await (0, _supabaseauthutils.checkPermission)(request, 'products', 'read'));
    /* istanbul ignore next */
    cov_y423xmhfi().s[13]++;
    if (!authResult.allowed) {
      /* istanbul ignore next */
      cov_y423xmhfi().b[0][0]++;
      cov_y423xmhfi().s[14]++;
      console.warn('â Authentication failed:', authResult.error);
      /* istanbul ignore next */
      cov_y423xmhfi().s[15]++;
      return _server.NextResponse.json({
        error: authResult.error,
        code: 'AUTH_FAILED',
        timestamp: new Date().toISOString()
      }, {
        status:
        /* istanbul ignore next */
        (cov_y423xmhfi().b[1][0]++, authResult.status) ||
        /* istanbul ignore next */
        (cov_y423xmhfi().b[1][1]++, 401)
      });
    } else
    /* istanbul ignore next */
    {
      cov_y423xmhfi().b[0][1]++;
    }
    const {
      user,
      supabase
    } =
    /* istanbul ignore next */
    (cov_y423xmhfi().s[16]++, authResult);
    /* istanbul ignore next */
    cov_y423xmhfi().s[17]++;
    console.log('â User authenticated:', user?.email, 'Role:', user?.role);
    // Obtener y validar parÃ¡metros de query
    const url =
    /* istanbul ignore next */
    (cov_y423xmhfi().s[18]++, new URL(request.url));
    const rawParams =
    /* istanbul ignore next */
    (cov_y423xmhfi().s[19]++, {
      page:
      /* istanbul ignore next */
      (cov_y423xmhfi().b[2][0]++, url.searchParams.get('page')) ||
      /* istanbul ignore next */
      (cov_y423xmhfi().b[2][1]++, '1'),
      limit:
      /* istanbul ignore next */
      (cov_y423xmhfi().b[3][0]++, url.searchParams.get('limit')) ||
      /* istanbul ignore next */
      (cov_y423xmhfi().b[3][1]++, '10'),
      search:
      /* istanbul ignore next */
      (cov_y423xmhfi().b[4][0]++, url.searchParams.get('search')) ||
      /* istanbul ignore next */
      (cov_y423xmhfi().b[4][1]++, ''),
      category:
      /* istanbul ignore next */
      (cov_y423xmhfi().b[5][0]++, url.searchParams.get('category')) ||
      /* istanbul ignore next */
      (cov_y423xmhfi().b[5][1]++, ''),
      sortBy:
      /* istanbul ignore next */
      (cov_y423xmhfi().b[6][0]++, url.searchParams.get('sortBy')) ||
      /* istanbul ignore next */
      (cov_y423xmhfi().b[6][1]++, 'created_at'),
      sortOrder:
      /* istanbul ignore next */
      (cov_y423xmhfi().b[7][0]++, url.searchParams.get('sortOrder')) ||
      /* istanbul ignore next */
      (cov_y423xmhfi().b[7][1]++, 'desc')
    });
    // Validar parÃ¡metros
    const page =
    /* istanbul ignore next */
    (cov_y423xmhfi().s[20]++, Math.max(1, parseInt(rawParams.page)));
    const limit =
    /* istanbul ignore next */
    (cov_y423xmhfi().s[21]++, Math.min(50, Math.max(1, parseInt(rawParams.limit)))); // MÃ¡ximo 50 por pÃ¡gina
    const offset =
    /* istanbul ignore next */
    (cov_y423xmhfi().s[22]++, (page - 1) * limit);
    /* istanbul ignore next */
    cov_y423xmhfi().s[23]++;
    console.log('ğ Query params:', {
      page,
      limit,
      offset,
      search: rawParams.search
    });
    // Construir query optimizada
    let query =
    /* istanbul ignore next */
    (cov_y423xmhfi().s[24]++, supabase.from('products').select(`
        id,
        name,
        description,
        price,
        stock,
        category_id,
        images,
        created_at,
        updated_at,
        categories (
          id,
          name
        )
      `, {
      count: 'exact'
    }));
    // Aplicar filtros
    /* istanbul ignore next */
    cov_y423xmhfi().s[25]++;
    if (rawParams.search) {
      /* istanbul ignore next */
      cov_y423xmhfi().b[8][0]++;
      cov_y423xmhfi().s[26]++;
      query = query.or(`name.ilike.%${rawParams.search}%,description.ilike.%${rawParams.search}%`);
    } else
    /* istanbul ignore next */
    {
      cov_y423xmhfi().b[8][1]++;
    }
    cov_y423xmhfi().s[27]++;
    if (rawParams.category) {
      /* istanbul ignore next */
      cov_y423xmhfi().b[9][0]++;
      cov_y423xmhfi().s[28]++;
      query = query.eq('category_id', rawParams.category);
    } else
    /* istanbul ignore next */
    {
      cov_y423xmhfi().b[9][1]++;
    }
    // Aplicar ordenamiento
    const validSortFields =
    /* istanbul ignore next */
    (cov_y423xmhfi().s[29]++, ['name', 'price', 'stock', 'created_at', 'updated_at']);
    const sortBy =
    /* istanbul ignore next */
    (cov_y423xmhfi().s[30]++, validSortFields.includes(rawParams.sortBy) ?
    /* istanbul ignore next */
    (cov_y423xmhfi().b[10][0]++, rawParams.sortBy) :
    /* istanbul ignore next */
    (cov_y423xmhfi().b[10][1]++, 'created_at'));
    const sortOrder =
    /* istanbul ignore next */
    (cov_y423xmhfi().s[31]++, rawParams.sortOrder === 'asc' ?
    /* istanbul ignore next */
    (cov_y423xmhfi().b[11][0]++, 'asc') :
    /* istanbul ignore next */
    (cov_y423xmhfi().b[11][1]++, 'desc'));
    /* istanbul ignore next */
    cov_y423xmhfi().s[32]++;
    query = query.order(sortBy, {
      ascending: sortOrder === 'asc'
    });
    // Aplicar paginaciÃ³n
    /* istanbul ignore next */
    cov_y423xmhfi().s[33]++;
    query = query.range(offset, offset + limit - 1);
    // Ejecutar query
    const {
      data: products,
      error,
      count
    } =
    /* istanbul ignore next */
    (cov_y423xmhfi().s[34]++, await query);
    /* istanbul ignore next */
    cov_y423xmhfi().s[35]++;
    if (error) {
      /* istanbul ignore next */
      cov_y423xmhfi().b[12][0]++;
      cov_y423xmhfi().s[36]++;
      console.error('â Supabase error:', error);
      /* istanbul ignore next */
      cov_y423xmhfi().s[37]++;
      return _server.NextResponse.json({
        error: 'Error al obtener productos',
        details: error.message,
        code: 'DATABASE_ERROR'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_y423xmhfi().b[12][1]++;
    }
    // Transformar productos
    const transformedProducts =
    /* istanbul ignore next */
    (cov_y423xmhfi().s[38]++,
    /* istanbul ignore next */
    (cov_y423xmhfi().b[13][0]++, products?.map(product => {
      /* istanbul ignore next */
      cov_y423xmhfi().f[5]++;
      cov_y423xmhfi().s[39]++;
      return {
        id: product.id,
        name: product.name,
        description: product.description,
        price: product.price,
        stock: product.stock,
        category_id: product.category_id,
        category_name:
        /* istanbul ignore next */
        (cov_y423xmhfi().b[14][0]++, product.categories?.name) ||
        /* istanbul ignore next */
        (cov_y423xmhfi().b[14][1]++, null),
        images: product.images,
        created_at: product.created_at,
        updated_at: product.updated_at
      };
    })) ||
    /* istanbul ignore next */
    (cov_y423xmhfi().b[13][1]++, []));
    // Log de acciÃ³n administrativa
    /* istanbul ignore next */
    cov_y423xmhfi().s[40]++;
    await (0, _supabaseauthutils.logAdminAction)(user.id, 'READ', 'products', undefined, null, {
      count: transformedProducts.length,
      filters: rawParams
    });
    /* istanbul ignore next */
    cov_y423xmhfi().s[41]++;
    console.log('â Products Secure API: Success', {
      total: count,
      returned: transformedProducts.length,
      user: user?.email
    });
    /* istanbul ignore next */
    cov_y423xmhfi().s[42]++;
    return _server.NextResponse.json({
      success: true,
      message: 'Productos obtenidos exitosamente',
      data: {
        products: transformedProducts,
        total:
        /* istanbul ignore next */
        (cov_y423xmhfi().b[15][0]++, count) ||
        /* istanbul ignore next */
        (cov_y423xmhfi().b[15][1]++, 0),
        pagination: {
          page,
          limit,
          totalPages: Math.ceil((
          /* istanbul ignore next */
          (cov_y423xmhfi().b[16][0]++, count) ||
          /* istanbul ignore next */
          (cov_y423xmhfi().b[16][1]++, 0)) / limit),
          hasNext: offset + limit < (
          /* istanbul ignore next */
          (cov_y423xmhfi().b[17][0]++, count) ||
          /* istanbul ignore next */
          (cov_y423xmhfi().b[17][1]++, 0)),
          hasPrev: page > 1
        },
        filters: {
          search: rawParams.search,
          category: rawParams.category,
          sortBy,
          sortOrder
        }
      },
      meta: {
        timestamp: new Date().toISOString(),
        api: 'products-secure',
        version: '2.0.0',
        user: user?.email,
        authenticated: true
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_y423xmhfi().s[43]++;
    console.error('â Fatal error in products secure API:', error);
    const errorDetails =
    /* istanbul ignore next */
    (cov_y423xmhfi().s[44]++, {
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_y423xmhfi().b[18][0]++, error.message) :
      /* istanbul ignore next */
      (cov_y423xmhfi().b[18][1]++, 'Unknown error'),
      stack: error instanceof Error ?
      /* istanbul ignore next */
      (cov_y423xmhfi().b[19][0]++, error.stack) :
      /* istanbul ignore next */
      (cov_y423xmhfi().b[19][1]++, undefined),
      name: error instanceof Error ?
      /* istanbul ignore next */
      (cov_y423xmhfi().b[20][0]++, error.name) :
      /* istanbul ignore next */
      (cov_y423xmhfi().b[20][1]++, 'UnknownError')
    });
    /* istanbul ignore next */
    cov_y423xmhfi().s[45]++;
    console.error('â Error details:', errorDetails);
    /* istanbul ignore next */
    cov_y423xmhfi().s[46]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor',
      details: errorDetails.message,
      code: 'INTERNAL_ERROR',
      debug: {
        errorName: errorDetails.name,
        timestamp: new Date().toISOString()
      }
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_y423xmhfi().f[6]++;
  cov_y423xmhfi().s[47]++;
  try {
    /* istanbul ignore next */
    cov_y423xmhfi().s[48]++;
    console.log('ğ Products Secure API: Creating product...');
    // Verificar autenticaciÃ³n y permisos
    const authResult =
    /* istanbul ignore next */
    (cov_y423xmhfi().s[49]++, await (0, _supabaseauthutils.checkPermission)(request, 'products', 'create'));
    /* istanbul ignore next */
    cov_y423xmhfi().s[50]++;
    if (!authResult.allowed) {
      /* istanbul ignore next */
      cov_y423xmhfi().b[21][0]++;
      cov_y423xmhfi().s[51]++;
      return _server.NextResponse.json({
        error: authResult.error,
        code: 'AUTH_FAILED'
      }, {
        status:
        /* istanbul ignore next */
        (cov_y423xmhfi().b[22][0]++, authResult.status) ||
        /* istanbul ignore next */
        (cov_y423xmhfi().b[22][1]++, 401)
      });
    } else
    /* istanbul ignore next */
    {
      cov_y423xmhfi().b[21][1]++;
    }
    const {
      user,
      supabase
    } =
    /* istanbul ignore next */
    (cov_y423xmhfi().s[52]++, authResult);
    // Obtener y validar datos del cuerpo
    const body =
    /* istanbul ignore next */
    (cov_y423xmhfi().s[53]++, await request.json());
    const allowedFields =
    /* istanbul ignore next */
    (cov_y423xmhfi().s[54]++, ['name', 'description', 'price', 'stock', 'category_id', 'images', 'status']);
    const productData =
    /* istanbul ignore next */
    (cov_y423xmhfi().s[55]++, (0, _supabaseauthutils.validateInput)(body, allowedFields));
    // Validaciones especÃ­ficas
    /* istanbul ignore next */
    cov_y423xmhfi().s[56]++;
    if (
    /* istanbul ignore next */
    (cov_y423xmhfi().b[24][0]++, !productData.name) ||
    /* istanbul ignore next */
    (cov_y423xmhfi().b[24][1]++, productData.name.trim().length < 2)) {
      /* istanbul ignore next */
      cov_y423xmhfi().b[23][0]++;
      cov_y423xmhfi().s[57]++;
      return _server.NextResponse.json({
        error: 'El nombre del producto es requerido (mÃ­nimo 2 caracteres)'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_y423xmhfi().b[23][1]++;
    }
    cov_y423xmhfi().s[58]++;
    if (
    /* istanbul ignore next */
    (cov_y423xmhfi().b[26][0]++, !productData.price) ||
    /* istanbul ignore next */
    (cov_y423xmhfi().b[26][1]++, productData.price <= 0)) {
      /* istanbul ignore next */
      cov_y423xmhfi().b[25][0]++;
      cov_y423xmhfi().s[59]++;
      return _server.NextResponse.json({
        error: 'El precio debe ser mayor a 0'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_y423xmhfi().b[25][1]++;
    }
    cov_y423xmhfi().s[60]++;
    if (!productData.category_id) {
      /* istanbul ignore next */
      cov_y423xmhfi().b[27][0]++;
      cov_y423xmhfi().s[61]++;
      return _server.NextResponse.json({
        error: 'La categorÃ­a es requerida'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_y423xmhfi().b[27][1]++;
    }
    // Verificar que la categorÃ­a existe
    const {
      data: category,
      error: categoryError
    } =
    /* istanbul ignore next */
    (cov_y423xmhfi().s[62]++, await supabase.from('categories').select('id, name').eq('id', productData.category_id).single());
    /* istanbul ignore next */
    cov_y423xmhfi().s[63]++;
    if (
    /* istanbul ignore next */
    (cov_y423xmhfi().b[29][0]++, categoryError) ||
    /* istanbul ignore next */
    (cov_y423xmhfi().b[29][1]++, !category)) {
      /* istanbul ignore next */
      cov_y423xmhfi().b[28][0]++;
      cov_y423xmhfi().s[64]++;
      return _server.NextResponse.json({
        error: 'CategorÃ­a no encontrada'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_y423xmhfi().b[28][1]++;
    }
    // Crear producto
    const {
      data: product,
      error
    } =
    /* istanbul ignore next */
    (cov_y423xmhfi().s[65]++, await supabase.from('products').insert({
      ...productData,
      created_at: new Date().toISOString(),
      updated_at: new Date().toISOString()
    }).select(`
        id,
        name,
        description,
        price,
        stock,
        category_id,
        images,
        created_at,
        updated_at
      `).single());
    /* istanbul ignore next */
    cov_y423xmhfi().s[66]++;
    if (error) {
      /* istanbul ignore next */
      cov_y423xmhfi().b[30][0]++;
      cov_y423xmhfi().s[67]++;
      console.error('Error creating product:', error);
      /* istanbul ignore next */
      cov_y423xmhfi().s[68]++;
      return _server.NextResponse.json({
        error: 'Error al crear producto',
        details: error.message
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_y423xmhfi().b[30][1]++;
    }
    // Transformar respuesta
    const transformedProduct =
    /* istanbul ignore next */
    (cov_y423xmhfi().s[69]++, {
      ...product,
      category_name: category.name
    });
    // Log de acciÃ³n administrativa
    /* istanbul ignore next */
    cov_y423xmhfi().s[70]++;
    await (0, _supabaseauthutils.logAdminAction)(user.id, 'CREATE', 'product', product.id, null, transformedProduct);
    /* istanbul ignore next */
    cov_y423xmhfi().s[71]++;
    console.log('â Product created successfully:', product.id);
    /* istanbul ignore next */
    cov_y423xmhfi().s[72]++;
    return _server.NextResponse.json({
      success: true,
      message: 'Producto creado exitosamente',
      data: transformedProduct
    }, {
      status: 201
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_y423xmhfi().s[73]++;
    console.error('â Error in POST products secure API:', error);
    /* istanbul ignore next */
    cov_y423xmhfi().s[74]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor',
      code: 'INTERNAL_ERROR'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,