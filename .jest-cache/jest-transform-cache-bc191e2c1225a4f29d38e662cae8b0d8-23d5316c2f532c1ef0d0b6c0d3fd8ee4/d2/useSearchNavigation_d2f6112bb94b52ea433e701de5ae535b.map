{"version":3,"names":["default","cov_l0b808llr","f","s","_default","useSearchNavigation","options","b","preserveParams","scrollToTop","replace","onBeforeNavigate","onAfterNavigate","router","_navigation","useRouter","searchParams","useSearchParams","navigateToSearch","_react","useCallback","query","category","additionalParams","trim","params","URLSearchParams","set","forEach","value","key","Object","entries","searchUrl","toString","push","setTimeout","window","scrollTo","top","behavior","navigateToProduct","productId","productSlug","productUrl","navigateToCategory","categoryId","categorySlug","categoryUrl","prefetchSearch","prefetch","prefetchProduct","getCurrentSearchQuery","get","getCurrentCategory","buildSearchUrl"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useSearchNavigation.ts"],"sourcesContent":["// ===================================\r\n// HOOK: useSearchNavigation - Navegación optimizada para búsquedas\r\n// ===================================\r\n\r\nimport { useCallback } from 'react';\r\nimport { useRouter, useSearchParams } from 'next/navigation';\r\n\r\nexport interface SearchNavigationOptions {\r\n  /** Preservar parámetros existentes */\r\n  preserveParams?: boolean;\r\n  /** Scroll al top después de navegar */\r\n  scrollToTop?: boolean;\r\n  /** Usar replace en lugar de push */\r\n  replace?: boolean;\r\n  /** Callback antes de navegar */\r\n  onBeforeNavigate?: (url: string) => void;\r\n  /** Callback después de navegar */\r\n  onAfterNavigate?: (url: string) => void;\r\n}\r\n\r\nexport function useSearchNavigation(options: SearchNavigationOptions = {}) {\r\n  const {\r\n    preserveParams = false,\r\n    scrollToTop = true,\r\n    replace = false,\r\n    onBeforeNavigate,\r\n    onAfterNavigate,\r\n  } = options;\r\n\r\n  const router = useRouter();\r\n  const searchParams = useSearchParams();\r\n\r\n  // ===================================\r\n  // NAVEGACIÓN A RESULTADOS DE BÚSQUEDA\r\n  // ===================================\r\n\r\n  const navigateToSearch = useCallback((\r\n    query: string,\r\n    category?: string,\r\n    additionalParams?: Record<string, string>\r\n  ) => {\r\n    if (!query.trim()) {return;}\r\n\r\n    // Construir URL de búsqueda\r\n    const params = new URLSearchParams();\r\n    \r\n    // Parámetro principal de búsqueda\r\n    params.set('q', query.trim());\r\n    \r\n    // Categoría si se especifica\r\n    if (category && category !== 'all') {\r\n      params.set('category', category);\r\n    }\r\n    \r\n    // Preservar parámetros existentes si está habilitado\r\n    if (preserveParams) {\r\n      searchParams.forEach((value, key) => {\r\n        if (key !== 'q' && key !== 'category') {\r\n          params.set(key, value);\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Parámetros adicionales\r\n    if (additionalParams) {\r\n      Object.entries(additionalParams).forEach(([key, value]) => {\r\n        params.set(key, value);\r\n      });\r\n    }\r\n\r\n    const searchUrl = `/search?${params.toString()}`;\r\n    \r\n    // Callback antes de navegar\r\n    onBeforeNavigate?.(searchUrl);\r\n    \r\n    // Navegar\r\n    if (replace) {\r\n      router.replace(searchUrl);\r\n    } else {\r\n      router.push(searchUrl);\r\n    }\r\n    \r\n    // Scroll al top si está habilitado\r\n    if (scrollToTop) {\r\n      setTimeout(() => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n      }, 100);\r\n    }\r\n    \r\n    // Callback después de navegar\r\n    onAfterNavigate?.(searchUrl);\r\n    \r\n  }, [router, searchParams, preserveParams, replace, scrollToTop, onBeforeNavigate, onAfterNavigate]);\r\n\r\n  // ===================================\r\n  // NAVEGACIÓN A PRODUCTO\r\n  // ===================================\r\n\r\n  const navigateToProduct = useCallback((productId: string, productSlug?: string) => {\r\n    const productUrl = productSlug \r\n      ? `/products/${productSlug}` \r\n      : `/products/${productId}`;\r\n    \r\n    onBeforeNavigate?.(productUrl);\r\n    router.push(productUrl);\r\n    onAfterNavigate?.(productUrl);\r\n    \r\n  }, [router, onBeforeNavigate, onAfterNavigate]);\r\n\r\n  // ===================================\r\n  // NAVEGACIÓN A CATEGORÍA\r\n  // ===================================\r\n\r\n  const navigateToCategory = useCallback((categoryId: string, categorySlug?: string) => {\r\n    const categoryUrl = categorySlug \r\n      ? `/shop/${categorySlug}` \r\n      : `/shop?category=${categoryId}`;\r\n    \r\n    onBeforeNavigate?.(categoryUrl);\r\n    router.push(categoryUrl);\r\n    onAfterNavigate?.(categoryUrl);\r\n    \r\n  }, [router, onBeforeNavigate, onAfterNavigate]);\r\n\r\n  // ===================================\r\n  // PREFETCH OPTIMIZADO\r\n  // ===================================\r\n\r\n  const prefetchSearch = useCallback((query: string, category?: string) => {\r\n    if (!query.trim()) {return;}\r\n    \r\n    const params = new URLSearchParams();\r\n    params.set('q', query.trim());\r\n    if (category && category !== 'all') {\r\n      params.set('category', category);\r\n    }\r\n    \r\n    const searchUrl = `/search?${params.toString()}`;\r\n    router.prefetch(searchUrl);\r\n    \r\n  }, [router]);\r\n\r\n  const prefetchProduct = useCallback((productId: string, productSlug?: string) => {\r\n    const productUrl = productSlug \r\n      ? `/products/${productSlug}` \r\n      : `/products/${productId}`;\r\n    \r\n    router.prefetch(productUrl);\r\n  }, [router]);\r\n\r\n  // ===================================\r\n  // UTILIDADES\r\n  // ===================================\r\n\r\n  const getCurrentSearchQuery = useCallback(() => {\r\n    return searchParams.get('q') || '';\r\n  }, [searchParams]);\r\n\r\n  const getCurrentCategory = useCallback(() => {\r\n    return searchParams.get('category') || '';\r\n  }, [searchParams]);\r\n\r\n  const buildSearchUrl = useCallback((\r\n    query: string,\r\n    category?: string,\r\n    additionalParams?: Record<string, string>\r\n  ) => {\r\n    const params = new URLSearchParams();\r\n    params.set('q', query.trim());\r\n    \r\n    if (category && category !== 'all') {\r\n      params.set('category', category);\r\n    }\r\n    \r\n    if (additionalParams) {\r\n      Object.entries(additionalParams).forEach(([key, value]) => {\r\n        params.set(key, value);\r\n      });\r\n    }\r\n    \r\n    return `/search?${params.toString()}`;\r\n  }, []);\r\n\r\n  // ===================================\r\n  // RETURN\r\n  // ===================================\r\n\r\n  return {\r\n    // Funciones de navegación\r\n    navigateToSearch,\r\n    navigateToProduct,\r\n    navigateToCategory,\r\n    \r\n    // Funciones de prefetch\r\n    prefetchSearch,\r\n    prefetchProduct,\r\n    \r\n    // Utilidades\r\n    getCurrentSearchQuery,\r\n    getCurrentCategory,\r\n    buildSearchUrl,\r\n    \r\n    // Router directo para casos especiales\r\n    router,\r\n  };\r\n}\r\n\r\nexport default useSearchNavigation;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}