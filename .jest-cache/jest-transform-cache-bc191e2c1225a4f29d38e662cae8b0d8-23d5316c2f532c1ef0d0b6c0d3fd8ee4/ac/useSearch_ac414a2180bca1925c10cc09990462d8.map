{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useSearch.ts"],"sourcesContent":["// ===================================\n// HOOK: useSearch - Sistema de b√∫squeda centralizado\n// ===================================\n\nimport React, { useState, useCallback, useRef } from 'react'\nimport { useRouter } from 'next/navigation'\nimport { useDebouncedCallback } from 'use-debounce'\nimport { searchProducts } from '@/lib/api/products'\nimport { ProductWithCategory } from '@/types/api'\nimport { useSearchErrorHandler } from './useSearchErrorHandler'\nimport { useSearchToast } from './useSearchToast'\n\n// ===================================\n// TIPOS\n// ===================================\n\nexport interface SearchState {\n  query: string\n  results: ProductWithCategory[]\n  suggestions: SearchSuggestion[]\n  isLoading: boolean\n  error: string | null\n  hasSearched: boolean\n}\n\nexport interface SearchSuggestion {\n  id: string\n  type: 'product' | 'category' | 'recent' | 'trending'\n  title: string\n  subtitle?: string\n  image?: string\n  badge?: string\n  href: string\n}\n\nexport interface UseSearchOptions {\n  /** Tiempo de debounce en milisegundos */\n  debounceMs?: number\n  /** N√∫mero m√°ximo de sugerencias */\n  maxSuggestions?: number\n  /** L√≠mite de resultados de b√∫squeda */\n  searchLimit?: number\n  /** Guardar b√∫squedas recientes */\n  saveRecentSearches?: boolean\n  /** Callback cuando se realiza una b√∫squeda */\n  onSearch?: (query: string, results: ProductWithCategory[]) => void\n  /** Callback cuando se selecciona una sugerencia */\n  onSuggestionSelect?: (suggestion: SearchSuggestion) => void\n}\n\n// ===================================\n// B√öSQUEDAS TRENDING POR DEFECTO\n// ===================================\n\nconst defaultTrendingSearches: SearchSuggestion[] = [\n  {\n    id: 'trending-1',\n    type: 'trending',\n    title: 'Pintura l√°tex',\n    href: '/search?q=pintura+latex',\n  },\n  {\n    id: 'trending-2',\n    type: 'trending',\n    title: 'Sherwin Williams',\n    href: '/search?q=sherwin+williams',\n  },\n  {\n    id: 'trending-3',\n    type: 'trending',\n    title: 'Rodillos premium',\n    href: '/search?q=rodillos+premium',\n  },\n  {\n    id: 'trending-4',\n    type: 'trending',\n    title: 'Pinceles',\n    href: '/search?q=pinceles',\n  },\n]\n\n// ===================================\n// HOOK PRINCIPAL\n// ===================================\n\nexport function useSearch(options: UseSearchOptions = {}) {\n  const {\n    debounceMs = 150,\n    maxSuggestions = 8,\n    searchLimit = 12,\n    saveRecentSearches = true,\n    onSearch,\n    onSuggestionSelect,\n  } = options\n\n  const router = useRouter()\n  const debounceRef = useRef<NodeJS.Timeout>()\n  const safetyTimeoutRef = useRef<NodeJS.Timeout>() // Timeout de seguridad para evitar loading permanente\n  const optionsRef = useRef(options) // Ref para opciones estables\n  const recentSearchesRef = useRef<string[]>([]) // Ref para b√∫squedas recientes\n\n  // Hooks para manejo de errores y toast notifications\n  const errorHandler = useSearchErrorHandler({\n    onError: error => {\n      console.error('Error de b√∫squeda:', error)\n    },\n    onRetrySuccess: () => {\n      toastHandler.showRetrySuccessToast()\n    },\n    onRetryFailed: (error, attempts) => {\n      toastHandler.showRetryFailedToast(attempts)\n    },\n  })\n\n  const toastHandler = useSearchToast({\n    defaultDuration: 4000,\n    maxToasts: 2,\n  })\n\n  // Actualizar ref cuando cambien las opciones\n  optionsRef.current = options\n\n  // Estado principal\n  const [state, setState] = useState<SearchState>({\n    query: '',\n    results: [],\n    suggestions: [],\n    isLoading: false,\n    error: null,\n    hasSearched: false,\n  })\n\n  const [recentSearches, setRecentSearches] = useState<string[]>([])\n\n  // Sincronizar referencia con estado para evitar dependencias en useCallback\n  React.useEffect(() => {\n    recentSearchesRef.current = recentSearches\n  }, [recentSearches])\n\n  // ===================================\n  // FUNCIONES AUXILIARES SIMPLIFICADAS\n  // ===================================\n\n  // ===================================\n  // FUNCIONES PRINCIPALES CON USE-DEBOUNCE\n  // ===================================\n\n  /**\n   * Funci√≥n de b√∫squeda interna optimizada\n   */\n  const performSearch = useCallback(\n    async (searchQuery: string) => {\n      // Limpiar timeout de seguridad anterior\n      if (safetyTimeoutRef.current) {\n        clearTimeout(safetyTimeoutRef.current)\n      }\n\n      // Si la query est√° vac√≠a, mostrar sugerencias por defecto\n      if (!searchQuery.trim()) {\n        const defaultSuggestions = [\n          ...defaultTrendingSearches.slice(0, 4),\n          ...recentSearchesRef.current.slice(0, 3).map((search, index) => ({\n            id: `recent-${index}`,\n            type: 'recent' as const,\n            title: search,\n            href: `/search?q=${encodeURIComponent(search)}`,\n          })),\n        ].slice(0, maxSuggestions)\n\n        setState(prev => ({\n          ...prev,\n          query: searchQuery,\n          suggestions: defaultSuggestions,\n          isLoading: false,\n        }))\n        return\n      }\n\n      // Timeout de seguridad para evitar loading permanente (5 segundos)\n      safetyTimeoutRef.current = setTimeout(() => {\n        setState(prev => ({\n          ...prev,\n          isLoading: false,\n          error: 'Tiempo de espera agotado. Intenta nuevamente.',\n        }))\n      }, 5000)\n\n      // Ejecutar b√∫squeda directamente (el debounce se maneja en searchWithDebounce)\n      try {\n        const response = await searchProducts(searchQuery, maxSuggestions)\n\n        // Limpiar timeout de seguridad ya que la API respondi√≥\n        if (safetyTimeoutRef.current) {\n          clearTimeout(safetyTimeoutRef.current)\n        }\n\n        if (response.success && response.data && Array.isArray(response.data)) {\n          const productSuggestions = response.data.map(product => ({\n            id: `product-${product.id}`,\n            type: 'product' as const,\n            title: product.name,\n            subtitle: product.category?.name || 'Sin categor√≠a',\n            image: product.images?.previews?.[0] || '/images/products/placeholder.jpg',\n            badge: product.stock > 0 ? 'En stock' : 'Sin stock',\n            href: `/shop-details/${product.id}`,\n          }))\n\n          setState(prev => ({\n            ...prev,\n            query: searchQuery, // Actualizar query cuando hay resultados exitosos\n            suggestions: productSuggestions,\n            isLoading: false,\n            error: null,\n          }))\n        } else {\n          setState(prev => ({\n            ...prev,\n            query: searchQuery, // Actualizar query incluso cuando no hay resultados\n            suggestions: [],\n            isLoading: false,\n            error: response.error || 'No se encontraron resultados',\n          }))\n        }\n      } catch (error) {\n        console.error('‚ùå useSearch: Error en b√∫squeda:', error)\n\n        // Limpiar timeout de seguridad\n        if (safetyTimeoutRef.current) {\n          clearTimeout(safetyTimeoutRef.current)\n        }\n\n        setState(prev => ({\n          ...prev,\n          query: searchQuery, // Actualizar query incluso en caso de error\n          suggestions: [],\n          isLoading: false,\n          error: 'Error en la b√∫squeda. Intenta nuevamente.',\n        }))\n      }\n    },\n    [maxSuggestions]\n  ) // Solo maxSuggestions es necesario como dependencia\n\n  /**\n   * Funci√≥n de b√∫squeda con debounce optimizado usando use-debounce\n   */\n  const searchWithDebounce = useDebouncedCallback(\n    (searchQuery: string) => {\n      console.log('üîç useSearch: searchWithDebounce (use-debounce) llamado con:', searchQuery)\n\n      // Actualizar estado de loading inmediatamente\n      setState(prev => ({\n        ...prev,\n        isLoading: !!searchQuery.trim(),\n        error: null,\n      }))\n\n      // Ejecutar b√∫squeda\n      performSearch(searchQuery)\n    },\n    debounceMs,\n    {\n      maxWait: 2000,\n      leading: false,\n      trailing: true,\n    }\n  )\n\n  /**\n   * Ejecuta una b√∫squeda completa y navega a resultados\n   */\n  const executeSearch = useCallback(\n    async (searchQuery: string, category?: string) => {\n      if (!searchQuery.trim()) {\n        return\n      }\n\n      try {\n        setState(prev => ({ ...prev, isLoading: true, error: null }))\n\n        // Guardar en historial\n        if (saveRecentSearches && searchQuery.trim()) {\n          const updated = [\n            searchQuery.trim(),\n            ...recentSearchesRef.current.filter(s => s !== searchQuery.trim()),\n          ].slice(0, 5)\n\n          setRecentSearches(updated)\n          try {\n            localStorage.setItem('pinteya-recent-searches', JSON.stringify(updated))\n          } catch (error) {\n            console.warn('Error guardando b√∫squeda reciente:', error)\n          }\n        }\n\n        // Realizar b√∫squeda con manejo robusto de errores\n        const response = await errorHandler.executeWithRetry(\n          () => searchProducts(searchQuery.trim(), searchLimit),\n          `b√∫squeda de \"${searchQuery.trim()}\"`\n        )\n\n        if (response.success && response.data) {\n          const resultCount = response.data.length\n\n          setState(prev => ({\n            ...prev,\n            results: response.data || [],\n            isLoading: false,\n            hasSearched: true,\n            error: null,\n          }))\n\n          // Limpiar errores previos\n          errorHandler.clearError()\n\n          // Mostrar toast de √©xito si hay resultados\n          if (resultCount > 0) {\n            toastHandler.showSuccessToast(searchQuery.trim(), resultCount)\n          } else {\n            toastHandler.showNoResultsToast(searchQuery.trim())\n          }\n\n          // Callback personalizado\n          optionsRef.current.onSearch?.(searchQuery.trim(), response.data || [])\n\n          // Navegar a resultados\n          const searchParams = new URLSearchParams()\n          searchParams.set('q', searchQuery.trim())\n          if (category) {\n            searchParams.set('category', category)\n          }\n\n          router.push(`/search?${searchParams.toString()}`)\n        } else {\n          const errorMessage = response.error || 'No se encontraron resultados'\n\n          setState(prev => ({\n            ...prev,\n            results: [],\n            isLoading: false,\n            hasSearched: true,\n            error: errorMessage,\n          }))\n\n          // Mostrar toast de advertencia para respuestas sin √©xito\n          toastHandler.showWarningToast('B√∫squeda sin resultados', errorMessage)\n        }\n      } catch (error) {\n        console.error('‚ùå Error ejecutando b√∫squeda:', error)\n\n        // Manejar error con el error handler\n        const searchError = errorHandler.handleError(error)\n\n        setState(prev => ({\n          ...prev,\n          results: [],\n          isLoading: false,\n          hasSearched: true,\n          error: searchError.message,\n        }))\n\n        // Mostrar toast de error\n        toastHandler.showErrorToast(searchError, errorHandler.retryCount, () => {\n          executeSearch(searchQuery.trim(), category)\n        })\n      }\n    },\n    [searchLimit, saveRecentSearches, router, errorHandler, toastHandler]\n  ) // Remover recentSearches de dependencias para evitar bucle infinito\n\n  /**\n   * Maneja la selecci√≥n de una sugerencia\n   */\n  const selectSuggestion = useCallback(\n    (suggestion: SearchSuggestion) => {\n      // Guardar en historial si es producto o categor√≠a\n      if ((suggestion.type === 'product' || suggestion.type === 'category') && saveRecentSearches) {\n        const updated = [\n          suggestion.title,\n          ...recentSearchesRef.current.filter(s => s !== suggestion.title),\n        ].slice(0, 5)\n\n        setRecentSearches(updated)\n        try {\n          localStorage.setItem('pinteya-recent-searches', JSON.stringify(updated))\n        } catch (error) {\n          console.warn('Error guardando b√∫squeda reciente:', error)\n        }\n      }\n\n      // Actualizar estado\n      setState(prev => ({\n        ...prev,\n        query: suggestion.title,\n      }))\n\n      // Callback personalizado\n      optionsRef.current.onSuggestionSelect?.(suggestion)\n\n      // Navegar\n      router.push(suggestion.href)\n    },\n    [saveRecentSearches, router]\n  ) // Remover recentSearches de dependencias para evitar bucle infinito\n\n  /**\n   * Limpia el estado de b√∫squeda\n   */\n  const clearSearch = useCallback(() => {\n    // Limpiar todos los timeouts\n    if (debounceRef.current) {\n      clearTimeout(debounceRef.current)\n    }\n    if (safetyTimeoutRef.current) {\n      clearTimeout(safetyTimeoutRef.current)\n    }\n\n    // Resetear estado completamente (sin sugerencias por defecto para tests)\n    setState({\n      query: '',\n      results: [],\n      suggestions: [],\n      isLoading: false,\n      error: null,\n      hasSearched: false,\n    })\n  }, []) // Remover dependencia circular\n\n  /**\n   * Inicializa el hook (cargar b√∫squedas recientes)\n   */\n  const initialize = useCallback(() => {\n    if (saveRecentSearches) {\n      try {\n        const stored = localStorage.getItem('pinteya-recent-searches')\n        if (stored && stored.trim() !== '' && stored !== '\"\"' && stored !== \"''\") {\n          // Validar que no est√© corrupto\n          if (stored.includes('\"\"') && stored.length < 5) {\n            console.warn('Detected corrupted recent searches data, cleaning up')\n            localStorage.removeItem('pinteya-recent-searches')\n            return\n          }\n\n          const parsed = JSON.parse(stored)\n          // Verificar que sea un array v√°lido\n          if (Array.isArray(parsed)) {\n            setRecentSearches(parsed)\n          } else {\n            console.warn('Invalid recent searches format, resetting')\n            localStorage.removeItem('pinteya-recent-searches')\n          }\n        }\n      } catch (error) {\n        console.warn('Error cargando b√∫squedas recientes:', error)\n        // Limpiar datos corruptos\n        localStorage.removeItem('pinteya-recent-searches')\n      }\n    }\n  }, [saveRecentSearches])\n\n  // ===================================\n  // CLEANUP\n  // ===================================\n\n  const cleanup = useCallback(() => {\n    // Cancelar debounce de use-debounce\n    searchWithDebounce.cancel()\n\n    // Limpiar timeouts manuales restantes\n    if (debounceRef.current) {\n      clearTimeout(debounceRef.current)\n    }\n    if (safetyTimeoutRef.current) {\n      clearTimeout(safetyTimeoutRef.current)\n    }\n  }, [searchWithDebounce])\n\n  // ===================================\n  // RETURN\n  // ===================================\n\n  return {\n    // Estado\n    ...state,\n    recentSearches,\n\n    // Estado de errores y toasts\n    searchError: errorHandler.currentError,\n    isRetrying: errorHandler.isRetrying,\n    retryCount: errorHandler.retryCount,\n    toasts: toastHandler.toasts,\n\n    // Funciones principales\n    searchWithDebounce,\n    executeSearch,\n    selectSuggestion,\n    clearSearch,\n    initialize,\n    cleanup,\n\n    // Funciones de manejo de errores\n    clearError: errorHandler.clearError,\n    retryManually: errorHandler.retryManually,\n\n    // Funciones de toast\n    removeToast: toastHandler.removeToast,\n    clearToasts: toastHandler.clearToasts,\n  }\n}\n\nexport default useSearch\n"],"names":["useSearch","defaultTrendingSearches","id","type","title","href","options","debounceMs","maxSuggestions","searchLimit","saveRecentSearches","onSearch","onSuggestionSelect","router","useRouter","debounceRef","useRef","safetyTimeoutRef","optionsRef","recentSearchesRef","errorHandler","useSearchErrorHandler","onError","error","console","onRetrySuccess","toastHandler","showRetrySuccessToast","onRetryFailed","attempts","showRetryFailedToast","useSearchToast","defaultDuration","maxToasts","current","state","setState","useState","query","results","suggestions","isLoading","hasSearched","recentSearches","setRecentSearches","React","useEffect","performSearch","useCallback","searchQuery","clearTimeout","trim","defaultSuggestions","slice","map","search","index","encodeURIComponent","prev","setTimeout","response","searchProducts","success","data","Array","isArray","productSuggestions","product","name","subtitle","category","image","images","previews","badge","stock","searchWithDebounce","useDebouncedCallback","log","maxWait","leading","trailing","executeSearch","updated","filter","s","localStorage","setItem","JSON","stringify","warn","executeWithRetry","resultCount","length","clearError","showSuccessToast","showNoResultsToast","searchParams","URLSearchParams","set","push","toString","errorMessage","showWarningToast","searchError","handleError","message","showErrorToast","retryCount","selectSuggestion","suggestion","clearSearch","initialize","stored","getItem","includes","removeItem","parsed","parse","cleanup","cancel","currentError","isRetrying","toasts","retryManually","removeToast","clearToasts"],"mappings":"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"}