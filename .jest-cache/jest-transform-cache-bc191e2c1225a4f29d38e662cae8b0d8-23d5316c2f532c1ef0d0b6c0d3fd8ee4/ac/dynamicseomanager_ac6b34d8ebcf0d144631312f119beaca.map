{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\seo\\dynamic-seo-manager.ts"],"sourcesContent":["// ===================================\n// PINTEYA E-COMMERCE - DYNAMIC SEO MANAGER - ENHANCED\n// Sistema de gestión dinámica de SEO para productos, categorías y páginas\n// Versión mejorada con templates, cache y análisis automático\n// ===================================\n\nimport type { Metadata } from 'next'\nimport { generateProductSEOText, generateCategorySEOText } from './dynamic-seo-text'\nimport { logger, LogCategory, LogLevel } from '@/lib/enterprise/logger'\nimport { getRedisClient } from '@/lib/integrations/redis'\n\n// ===================================\n// INTERFACES Y TIPOS MEJORADOS\n// ===================================\n\n// Configuración SEO mejorada\nexport interface SEOConfig {\n  title: string\n  description: string\n  keywords: string[]\n  canonical?: string\n  noindex?: boolean\n  nofollow?: boolean\n  ogImage?: string\n  ogType?: string\n  twitterCard?: 'summary' | 'summary_large_image' | 'app' | 'player'\n  structuredData?: object[]\n}\n\n// Template SEO para generación dinámica\nexport interface SEOTemplate {\n  id: string\n  name: string\n  type: 'product' | 'category' | 'page' | 'blog' | 'custom'\n  titleTemplate: string\n  descriptionTemplate: string\n  keywordsTemplate: string[]\n  robotsDirective?: string\n  priority: number\n  isActive: boolean\n  variables: string[]\n  conditions?: SEOCondition[]\n}\n\n// Condiciones para aplicar templates\nexport interface SEOCondition {\n  field: string\n  operator: 'equals' | 'contains' | 'startsWith' | 'endsWith' | 'greaterThan' | 'lessThan'\n  value: any\n}\n\n// Análisis SEO\nexport interface SEOAnalysis {\n  score: number\n  issues: SEOIssue[]\n  recommendations: SEORecommendation[]\n  metrics: {\n    titleLength: number\n    descriptionLength: number\n    keywordDensity: number\n    readabilityScore: number\n    imageOptimization: number\n  }\n}\n\n// Problemas SEO detectados\nexport interface SEOIssue {\n  type: 'error' | 'warning' | 'info'\n  category: 'title' | 'description' | 'keywords' | 'images' | 'structure' | 'performance'\n  message: string\n  impact: 'high' | 'medium' | 'low'\n  fix?: string\n}\n\n// Recomendaciones SEO\nexport interface SEORecommendation {\n  category: string\n  message: string\n  priority: 'high' | 'medium' | 'low'\n  implementation: string\n}\n\n// Configuración global del sistema SEO\nexport interface DynamicSEOConfig {\n  defaultLanguage: string\n  supportedLanguages: string[]\n  baseUrl: string\n  siteName: string\n  defaultImage: string\n  twitterHandle: string\n  facebookAppId?: string\n  enableAutoGeneration: boolean\n  enableAnalytics: boolean\n  cacheEnabled: boolean\n  cacheTTL: number\n}\n\n// ===================================\n// CONFIGURACIÓN POR DEFECTO\n// ===================================\n\nconst DEFAULT_SEO_CONFIG: DynamicSEOConfig = {\n  defaultLanguage: 'es',\n  supportedLanguages: ['es', 'en'],\n  baseUrl: process.env.NEXT_PUBLIC_APP_URL || 'https://pinteya.com',\n  siteName: 'Pinteya E-commerce',\n  defaultImage: '/images/og-default.jpg',\n  twitterHandle: '@pinteya',\n  enableAutoGeneration: true,\n  enableAnalytics: true,\n  cacheEnabled: true,\n  cacheTTL: 3600, // 1 hora\n}\n\nconst DEFAULT_TEMPLATES: SEOTemplate[] = [\n  {\n    id: 'product-default',\n    name: 'Producto por Defecto',\n    type: 'product',\n    titleTemplate: '{productName} - {categoryName} | {siteName}',\n    descriptionTemplate:\n      'Compra {productName} en {siteName}. {productDescription} Precio: ${productPrice}. Envío gratis.',\n    keywordsTemplate: ['{productName}', '{categoryName}', 'comprar', 'precio', '{siteName}'],\n    robotsDirective: 'index,follow',\n    priority: 1,\n    isActive: true,\n    variables: ['productName', 'categoryName', 'productDescription', 'productPrice', 'siteName'],\n  },\n  {\n    id: 'category-default',\n    name: 'Categoría por Defecto',\n    type: 'category',\n    titleTemplate: '{categoryName} - Productos de Calidad | {siteName}',\n    descriptionTemplate:\n      'Descubre nuestra selección de {categoryName} en {siteName}. {productCount} productos disponibles con envío gratis.',\n    keywordsTemplate: ['{categoryName}', 'productos', 'comprar', '{siteName}'],\n    robotsDirective: 'index,follow',\n    priority: 1,\n    isActive: true,\n    variables: ['categoryName', 'productCount', 'siteName'],\n  },\n  {\n    id: 'page-default',\n    name: 'Página por Defecto',\n    type: 'page',\n    titleTemplate: '{pageTitle} | {siteName}',\n    descriptionTemplate: '{pageDescription}',\n    keywordsTemplate: ['{pageKeywords}'],\n    robotsDirective: 'index,follow',\n    priority: 1,\n    isActive: true,\n    variables: ['pageTitle', 'pageDescription', 'pageKeywords', 'siteName'],\n  },\n]\n\nexport interface ProductSEOData {\n  id: string\n  name: string\n  description: string\n  price: number\n  currency: string\n  brand: string\n  category: string\n  subcategory?: string\n  images: string[]\n  availability: 'InStock' | 'OutOfStock' | 'PreOrder'\n  condition: 'NewCondition' | 'UsedCondition' | 'RefurbishedCondition'\n  sku?: string\n  gtin?: string\n  mpn?: string\n  slug: string\n}\n\nexport interface CategorySEOData {\n  id: string\n  name: string\n  description: string\n  slug: string\n  parentCategory?: string\n  productCount: number\n  image?: string\n  subcategories?: string[]\n}\n\nexport interface PageSEOData {\n  path: string\n  title: string\n  description: string\n  type: 'page' | 'article' | 'product' | 'category' | 'checkout' | 'profile'\n  lastModified?: Date\n  priority?: number\n  changeFreq?: 'always' | 'hourly' | 'daily' | 'weekly' | 'monthly' | 'yearly' | 'never'\n}\n\n// ===================================\n// ENHANCED DYNAMIC SEO MANAGER CLASS\n// ===================================\n\nexport class EnhancedDynamicSEOManager {\n  private static instance: EnhancedDynamicSEOManager\n  private config: DynamicSEOConfig\n  private templates: Map<string, SEOTemplate>\n  private cache: Map<string, { metadata: SEOConfig; timestamp: number }>\n  private redis: any\n\n  private constructor(config?: Partial<DynamicSEOConfig>) {\n    this.config = { ...DEFAULT_SEO_CONFIG, ...config }\n    this.templates = new Map()\n    this.cache = new Map()\n\n    // Cargar templates por defecto\n    DEFAULT_TEMPLATES.forEach(template => {\n      this.templates.set(template.id, template)\n    })\n\n    // Inicializar Redis si está disponible\n    this.initializeRedis()\n\n    logger.info(\n      LogLevel.INFO,\n      'Enhanced Dynamic SEO Manager initialized',\n      {\n        templatesCount: this.templates.size,\n        cacheEnabled: this.config.cacheEnabled,\n      },\n      LogCategory.SEO\n    )\n  }\n\n  public static getInstance(config?: Partial<DynamicSEOConfig>): EnhancedDynamicSEOManager {\n    if (!EnhancedDynamicSEOManager.instance) {\n      EnhancedDynamicSEOManager.instance = new EnhancedDynamicSEOManager(config)\n    }\n    return EnhancedDynamicSEOManager.instance\n  }\n\n  private async initializeRedis(): Promise<void> {\n    try {\n      this.redis = await getRedisClient()\n      logger.info(LogLevel.INFO, 'Redis initialized for SEO caching', {}, LogCategory.SEO)\n    } catch (error) {\n      logger.warn(\n        LogLevel.WARN,\n        'Redis not available, using memory cache only',\n        {},\n        LogCategory.SEO\n      )\n    }\n  }\n\n  // ===================================\n  // GESTIÓN DE TEMPLATES\n  // ===================================\n\n  public addTemplate(template: SEOTemplate): void {\n    this.templates.set(template.id, template)\n\n    logger.info(\n      LogLevel.INFO,\n      'SEO template added',\n      {\n        templateId: template.id,\n        type: template.type,\n        priority: template.priority,\n      },\n      LogCategory.SEO\n    )\n  }\n\n  public updateTemplate(templateId: string, updates: Partial<SEOTemplate>): boolean {\n    const template = this.templates.get(templateId)\n    if (!template) {\n      logger.warn(\n        LogLevel.WARN,\n        'SEO template not found for update',\n        {\n          templateId,\n        },\n        LogCategory.SEO\n      )\n      return false\n    }\n\n    const updatedTemplate = { ...template, ...updates }\n    this.templates.set(templateId, updatedTemplate)\n\n    // Limpiar cache relacionado\n    this.clearCacheByType(template.type)\n\n    logger.info(\n      LogLevel.INFO,\n      'SEO template updated',\n      {\n        templateId,\n        changes: Object.keys(updates),\n      },\n      LogCategory.SEO\n    )\n\n    return true\n  }\n\n  public getTemplatesByType(type: SEOTemplate['type']): SEOTemplate[] {\n    return Array.from(this.templates.values())\n      .filter(template => template.type === type && template.isActive)\n      .sort((a, b) => b.priority - a.priority)\n  }\n\n  // ===================================\n  // GENERACIÓN DE METADATA MEJORADA\n  // ===================================\n\n  public async generateMetadata(\n    type: SEOTemplate['type'],\n    data: Record<string, any>,\n    options?: {\n      templateId?: string\n      language?: string\n      customTemplate?: Partial<SEOTemplate>\n    }\n  ): Promise<SEOConfig> {\n    const cacheKey = this.generateCacheKey(type, data, options)\n\n    // Verificar cache\n    if (this.config.cacheEnabled) {\n      const cached = await this.getCachedMetadata(cacheKey)\n      if (cached) {\n        return cached\n      }\n    }\n\n    try {\n      // Seleccionar template\n      const template = this.selectTemplate(type, data, options)\n\n      if (!template) {\n        throw new Error(`No template found for type: ${type}`)\n      }\n\n      // Generar metadata\n      const metadata = await this.processTemplate(template, data, options)\n\n      // Cachear resultado\n      if (this.config.cacheEnabled) {\n        await this.setCachedMetadata(cacheKey, metadata)\n      }\n\n      logger.info(\n        LogLevel.INFO,\n        'SEO metadata generated',\n        {\n          type,\n          templateId: template.id,\n          cacheKey,\n          titleLength: metadata.title.length,\n          descriptionLength: metadata.description.length,\n        },\n        LogCategory.SEO\n      )\n\n      return metadata\n    } catch (error) {\n      logger.error(\n        LogLevel.ERROR,\n        'Failed to generate SEO metadata',\n        error as Error,\n        LogCategory.SEO\n      )\n\n      // Fallback a metadata básica\n      return this.generateFallbackMetadata(type, data)\n    }\n  }\n\n  private selectTemplate(\n    type: SEOTemplate['type'],\n    data: Record<string, any>,\n    options?: { templateId?: string; customTemplate?: Partial<SEOTemplate> }\n  ): SEOTemplate | null {\n    // Template personalizado\n    if (options?.customTemplate) {\n      return {\n        id: 'custom',\n        name: 'Custom Template',\n        type,\n        priority: 999,\n        isActive: true,\n        variables: [],\n        titleTemplate: '',\n        descriptionTemplate: '',\n        keywordsTemplate: [],\n        ...options.customTemplate,\n      } as SEOTemplate\n    }\n\n    // Template específico\n    if (options?.templateId) {\n      const template = this.templates.get(options.templateId)\n      if (template && template.isActive) {\n        return template\n      }\n    }\n\n    // Buscar template por tipo y condiciones\n    const candidates = this.getTemplatesByType(type)\n\n    for (const template of candidates) {\n      if (this.evaluateConditions(template, data)) {\n        return template\n      }\n    }\n\n    return candidates[0] || null\n  }\n\n  private evaluateConditions(template: SEOTemplate, data: Record<string, any>): boolean {\n    if (!template.conditions || template.conditions.length === 0) {\n      return true\n    }\n\n    return template.conditions.every(condition => {\n      const value = this.getNestedValue(data, condition.field)\n\n      switch (condition.operator) {\n        case 'equals':\n          return value === condition.value\n        case 'contains':\n          return String(value).includes(String(condition.value))\n        case 'startsWith':\n          return String(value).startsWith(String(condition.value))\n        case 'endsWith':\n          return String(value).endsWith(String(condition.value))\n        case 'greaterThan':\n          return Number(value) > Number(condition.value)\n        case 'lessThan':\n          return Number(value) < Number(condition.value)\n        default:\n          return true\n      }\n    })\n  }\n\n  private async processTemplate(\n    template: SEOTemplate,\n    data: Record<string, any>,\n    options?: { language?: string }\n  ): Promise<SEOConfig> {\n    const language = options?.language || this.config.defaultLanguage\n    const processedData = this.enrichData(data, language)\n\n    // Procesar title\n    const title = this.processTemplateString(template.titleTemplate, processedData)\n\n    // Procesar description\n    const description = this.processTemplateString(template.descriptionTemplate, processedData)\n\n    // Procesar keywords\n    const keywords = template.keywordsTemplate\n      .map(keyword => this.processTemplateString(keyword, processedData))\n      .filter(Boolean)\n\n    // Generar URL canónica\n    const canonical = this.generateCanonicalUrl(data, language)\n\n    // Generar structured data\n    const structuredData = await this.generateStructuredData(template.type, processedData)\n\n    return {\n      title: this.optimizeTitle(title),\n      description: this.optimizeDescription(description),\n      keywords: this.optimizeKeywords(keywords),\n      canonical,\n      ogImage: data.image || this.config.defaultImage,\n      ogType: this.getOGType(template.type),\n      twitterCard: 'summary_large_image',\n      structuredData: structuredData ? [structuredData] : undefined,\n      noindex: template.robotsDirective?.includes('noindex') || false,\n      nofollow: template.robotsDirective?.includes('nofollow') || false,\n    }\n  }\n\n  private processTemplateString(template: string, data: Record<string, any>): string {\n    return template.replace(/\\{([^}]+)\\}/g, (match, key) => {\n      const value = this.getNestedValue(data, key)\n      return value !== undefined ? String(value) : match\n    })\n  }\n\n  private enrichData(data: Record<string, any>, language: string): Record<string, any> {\n    return {\n      ...data,\n      siteName: this.config.siteName,\n      baseUrl: this.config.baseUrl,\n      language,\n      currentDate: new Date().toISOString().split('T')[0],\n      currentYear: new Date().getFullYear(),\n    }\n  }\n\n  private getNestedValue(obj: Record<string, any>, path: string): any {\n    return path.split('.').reduce((current, key) => current?.[key], obj)\n  }\n\n  // ===================================\n  // OPTIMIZACIÓN DE METADATA\n  // ===================================\n\n  private optimizeTitle(title: string): string {\n    // Límite recomendado: 60 caracteres\n    if (title.length <= 60) {\n      return title\n    }\n\n    // Truncar en palabra completa\n    const truncated = title.substring(0, 57)\n    const lastSpace = truncated.lastIndexOf(' ')\n\n    return lastSpace > 40 ? truncated.substring(0, lastSpace) + '...' : truncated + '...'\n  }\n\n  private optimizeDescription(description: string): string {\n    // Límite recomendado: 160 caracteres\n    if (description.length <= 160) {\n      return description\n    }\n\n    // Truncar en palabra completa\n    const truncated = description.substring(0, 157)\n    const lastSpace = truncated.lastIndexOf(' ')\n\n    return lastSpace > 140 ? truncated.substring(0, lastSpace) + '...' : truncated + '...'\n  }\n\n  private optimizeKeywords(keywords: string[]): string[] {\n    // Filtrar keywords vacías y duplicadas\n    const unique = [...new Set(keywords.filter(Boolean))]\n\n    // Límite recomendado: 10 keywords\n    return unique.slice(0, 10)\n  }\n\n  // ===================================\n  // UTILIDADES\n  // ===================================\n\n  private generateCanonicalUrl(data: Record<string, any>, language: string): string {\n    const baseUrl = this.config.baseUrl\n    const path = data.path || data.slug || ''\n    const langPrefix = language !== this.config.defaultLanguage ? `/${language}` : ''\n\n    return `${baseUrl}${langPrefix}${path}`\n  }\n\n  private getOGType(type: SEOTemplate['type']): string {\n    switch (type) {\n      case 'product':\n        return 'product'\n      case 'blog':\n        return 'article'\n      default:\n        return 'website'\n    }\n  }\n\n  private async generateStructuredData(\n    type: SEOTemplate['type'],\n    data: Record<string, any>\n  ): Promise<any> {\n    switch (type) {\n      case 'product':\n        return this.generateProductStructuredData(data)\n      case 'category':\n        return this.generateCategoryStructuredData(data)\n      case 'blog':\n        return this.generateArticleStructuredData(data)\n      default:\n        return this.generateWebsiteStructuredData(data)\n    }\n  }\n\n  private generateProductStructuredData(data: Record<string, any>): any {\n    return {\n      '@context': 'https://schema.org',\n      '@type': 'Product',\n      name: data.productName || data.name,\n      description: data.productDescription || data.description,\n      image: data.image || this.config.defaultImage,\n      brand: {\n        '@type': 'Brand',\n        name: this.config.siteName,\n      },\n      offers: {\n        '@type': 'Offer',\n        price: data.productPrice || data.price,\n        priceCurrency: 'ARS',\n        availability:\n          data.stock > 0 ? 'https://schema.org/InStock' : 'https://schema.org/OutOfStock',\n        seller: {\n          '@type': 'Organization',\n          name: this.config.siteName,\n        },\n      },\n    }\n  }\n\n  private generateCategoryStructuredData(data: Record<string, any>): any {\n    return {\n      '@context': 'https://schema.org',\n      '@type': 'CollectionPage',\n      name: data.categoryName || data.name,\n      description: data.categoryDescription || data.description,\n      url: this.generateCanonicalUrl(data, this.config.defaultLanguage),\n    }\n  }\n\n  private generateArticleStructuredData(data: Record<string, any>): any {\n    return {\n      '@context': 'https://schema.org',\n      '@type': 'Article',\n      headline: data.title,\n      description: data.description,\n      image: data.image || this.config.defaultImage,\n      author: {\n        '@type': 'Person',\n        name: data.author || this.config.siteName,\n      },\n      publisher: {\n        '@type': 'Organization',\n        name: this.config.siteName,\n        logo: {\n          '@type': 'ImageObject',\n          url: `${this.config.baseUrl}/logo.png`,\n        },\n      },\n      datePublished: data.publishedAt || data.createdAt,\n      dateModified: data.updatedAt || data.publishedAt || data.createdAt,\n    }\n  }\n\n  private generateWebsiteStructuredData(data: Record<string, any>): any {\n    return {\n      '@context': 'https://schema.org',\n      '@type': 'WebSite',\n      name: this.config.siteName,\n      url: this.config.baseUrl,\n      potentialAction: {\n        '@type': 'SearchAction',\n        target: `${this.config.baseUrl}/search?q={search_term_string}`,\n        'query-input': 'required name=search_term_string',\n      },\n    }\n  }\n\n  private generateFallbackMetadata(\n    type: SEOTemplate['type'],\n    data: Record<string, any>\n  ): SEOConfig {\n    const title = data.title || data.name || `${this.config.siteName}`\n    const description =\n      data.description || `Descubre productos de calidad en ${this.config.siteName}`\n\n    return {\n      title: this.optimizeTitle(title),\n      description: this.optimizeDescription(description),\n      keywords: ['ecommerce', 'productos', 'comprar'],\n      canonical: this.generateCanonicalUrl(data, this.config.defaultLanguage),\n      ogImage: this.config.defaultImage,\n      ogType: 'website',\n      twitterCard: 'summary_large_image',\n      noindex: false,\n      nofollow: false,\n    }\n  }\n\n  // ===================================\n  // GESTIÓN DE CACHE\n  // ===================================\n\n  private generateCacheKey(\n    type: SEOTemplate['type'],\n    data: Record<string, any>,\n    options?: any\n  ): string {\n    const keyData = {\n      type,\n      id: data.id || data.slug,\n      templateId: options?.templateId,\n      language: options?.language || this.config.defaultLanguage,\n    }\n\n    return `seo:${JSON.stringify(keyData)}`\n  }\n\n  private async getCachedMetadata(cacheKey: string): Promise<SEOConfig | null> {\n    try {\n      // Intentar Redis primero\n      if (this.redis) {\n        const cached = await this.redis.get(cacheKey)\n        if (cached) {\n          return JSON.parse(cached)\n        }\n      }\n\n      // Fallback a cache en memoria\n      const memoryCached = this.cache.get(cacheKey)\n      if (memoryCached) {\n        const isExpired = Date.now() - memoryCached.timestamp > this.config.cacheTTL * 1000\n        if (!isExpired) {\n          return memoryCached.metadata\n        } else {\n          this.cache.delete(cacheKey)\n        }\n      }\n\n      return null\n    } catch (error) {\n      logger.warn(LogLevel.WARN, 'Failed to get cached SEO metadata', { cacheKey }, LogCategory.SEO)\n      return null\n    }\n  }\n\n  private async setCachedMetadata(cacheKey: string, metadata: SEOConfig): Promise<void> {\n    try {\n      // Cachear en Redis si está disponible\n      if (this.redis) {\n        await this.redis.setex(cacheKey, this.config.cacheTTL, JSON.stringify(metadata))\n      }\n\n      // Cachear en memoria como backup\n      this.cache.set(cacheKey, {\n        metadata,\n        timestamp: Date.now(),\n      })\n    } catch (error) {\n      logger.warn(LogLevel.WARN, 'Failed to cache SEO metadata', { cacheKey }, LogCategory.SEO)\n    }\n  }\n\n  private clearCacheByType(type: SEOTemplate['type']): void {\n    const keysToDelete = Array.from(this.cache.keys()).filter(key =>\n      key.includes(`\"type\":\"${type}\"`)\n    )\n\n    keysToDelete.forEach(key => this.cache.delete(key))\n\n    logger.info(\n      LogLevel.INFO,\n      'SEO cache cleared by type',\n      {\n        type,\n        clearedKeys: keysToDelete.length,\n      },\n      LogCategory.SEO\n    )\n  }\n\n  public clearCache(): void {\n    this.cache.clear()\n    logger.info(LogLevel.INFO, 'SEO cache cleared completely', {}, LogCategory.SEO)\n  }\n\n  // ===================================\n  // ANÁLISIS SEO\n  // ===================================\n\n  public analyzeSEO(metadata: SEOConfig): SEOAnalysis {\n    const issues: SEOIssue[] = []\n    const recommendations: SEORecommendation[] = []\n\n    // Analizar título\n    if (!metadata.title) {\n      issues.push({\n        type: 'error',\n        category: 'title',\n        message: 'El título es requerido',\n        impact: 'high',\n        fix: 'Agregar un título descriptivo',\n      })\n    } else if (metadata.title.length > 60) {\n      issues.push({\n        type: 'warning',\n        category: 'title',\n        message: 'El título es demasiado largo (>60 caracteres)',\n        impact: 'medium',\n        fix: 'Reducir la longitud del título',\n      })\n    } else if (metadata.title.length < 30) {\n      issues.push({\n        type: 'warning',\n        category: 'title',\n        message: 'El título es demasiado corto (<30 caracteres)',\n        impact: 'medium',\n        fix: 'Expandir el título con más información relevante',\n      })\n    }\n\n    // Analizar descripción\n    if (!metadata.description) {\n      issues.push({\n        type: 'error',\n        category: 'description',\n        message: 'La descripción es requerida',\n        impact: 'high',\n        fix: 'Agregar una descripción informativa',\n      })\n    } else if (metadata.description.length > 160) {\n      issues.push({\n        type: 'warning',\n        category: 'description',\n        message: 'La descripción es demasiado larga (>160 caracteres)',\n        impact: 'medium',\n        fix: 'Reducir la longitud de la descripción',\n      })\n    } else if (metadata.description.length < 120) {\n      issues.push({\n        type: 'info',\n        category: 'description',\n        message: 'La descripción podría ser más descriptiva',\n        impact: 'low',\n        fix: 'Expandir la descripción con más detalles',\n      })\n    }\n\n    // Analizar keywords\n    if (!metadata.keywords || metadata.keywords.length === 0) {\n      issues.push({\n        type: 'warning',\n        category: 'keywords',\n        message: 'No hay palabras clave definidas',\n        impact: 'medium',\n        fix: 'Agregar palabras clave relevantes',\n      })\n    } else if (metadata.keywords.length > 10) {\n      issues.push({\n        type: 'warning',\n        category: 'keywords',\n        message: 'Demasiadas palabras clave (>10)',\n        impact: 'low',\n        fix: 'Reducir a las palabras clave más importantes',\n      })\n    }\n\n    // Calcular score\n    const totalIssues = issues.length\n    const criticalIssues = issues.filter(i => i.impact === 'high').length\n    const mediumIssues = issues.filter(i => i.impact === 'medium').length\n\n    let score = 100\n    score -= criticalIssues * 20\n    score -= mediumIssues * 10\n    score -= (totalIssues - criticalIssues - mediumIssues) * 5\n    score = Math.max(0, score)\n\n    return {\n      score,\n      issues,\n      recommendations,\n      metrics: {\n        titleLength: metadata.title?.length || 0,\n        descriptionLength: metadata.description?.length || 0,\n        keywordDensity: metadata.keywords?.length || 0,\n        readabilityScore: 0, // TODO: Implementar análisis de legibilidad\n        imageOptimization: metadata.ogImage ? 100 : 0,\n      },\n    }\n  }\n\n  // ===================================\n  // CONFIGURACIÓN Y ESTADÍSTICAS\n  // ===================================\n\n  public updateConfig(updates: Partial<DynamicSEOConfig>): void {\n    this.config = { ...this.config, ...updates }\n\n    logger.info(\n      LogLevel.INFO,\n      'SEO configuration updated',\n      {\n        changes: Object.keys(updates),\n      },\n      LogCategory.SEO\n    )\n  }\n\n  public getConfig(): DynamicSEOConfig {\n    return { ...this.config }\n  }\n\n  public getStats(): {\n    templatesCount: number\n    cacheSize: number\n    activeTemplatesByType: Record<string, number>\n  } {\n    const activeTemplatesByType = Array.from(this.templates.values())\n      .filter(t => t.isActive)\n      .reduce(\n        (acc, template) => {\n          acc[template.type] = (acc[template.type] || 0) + 1\n          return acc\n        },\n        {} as Record<string, number>\n      )\n\n    return {\n      templatesCount: this.templates.size,\n      cacheSize: this.cache.size,\n      activeTemplatesByType,\n    }\n  }\n\n  public destroy(): void {\n    this.cache.clear()\n    this.templates.clear()\n    EnhancedDynamicSEOManager.instance = null as any\n  }\n}\n\n// ===================================\n// INSTANCIA SINGLETON Y UTILIDADES\n// ===================================\n\nexport const enhancedDynamicSEOManager = EnhancedDynamicSEOManager.getInstance()\n\n// Configuración base del sitio (mantenida para compatibilidad)\nconst SITE_CONFIG = {\n  name: 'Pinteya E-commerce',\n  description: 'Tu pinturería online especializada en productos de pintura, ferretería y corralón',\n  url: 'https://pinteya-ecommerce.vercel.app',\n  logo: '/images/logo/LOGO POSITIVO.svg',\n  defaultImage: '/images/hero/hero-bg.jpg',\n  locale: 'es_AR',\n  currency: 'ARS',\n  themeColor: '#ea5a17',\n  twitterHandle: '@pinteya_ecommerce',\n}\n\n// Plantillas de SEO optimizadas (mantenidas para compatibilidad)\nconst SEO_TEMPLATES = {\n  product: {\n    title: (product: ProductSEOData) => `${product.name} - ${product.brand} | Pinteya E-commerce`,\n    description: async (product: ProductSEOData) => await generateProductSEOText(product),\n    keywords: (product: ProductSEOData) => [\n      product.name.toLowerCase(),\n      product.brand.toLowerCase(),\n      product.category.toLowerCase(),\n      ...(product.subcategory ? [product.subcategory.toLowerCase()] : []),\n      'pinturería online',\n      'envío gratis',\n      'argentina',\n      'comprar online',\n    ],\n  },\n  category: {\n    title: (category: CategorySEOData) =>\n      `${category.name} | Pinteya E-commerce - Tu Pinturería Online`,\n    description: (category: CategorySEOData) =>\n      `Descubre nuestra selección de ${category.name.toLowerCase()} en Pinteya. ${category.description} ${category.productCount} productos disponibles. Envío gratis en compras superiores a $50.000.`,\n    keywords: (category: CategorySEOData) => [\n      category.name.toLowerCase(),\n      'pinturería online',\n      'ferretería',\n      'corralón',\n      'envío gratis',\n      'argentina',\n      'productos de calidad',\n    ],\n  },\n  page: {\n    title: (page: PageSEOData) => `${page.title} | Pinteya E-commerce`,\n    description: (page: PageSEOData) => page.description,\n    keywords: () => ['pinturería online', 'pinturas', 'ferretería', 'corralón', 'argentina'],\n  },\n}\n\nclass DynamicSEOManager {\n  private static instance: DynamicSEOManager\n\n  static getInstance(): DynamicSEOManager {\n    if (!DynamicSEOManager.instance) {\n      DynamicSEOManager.instance = new DynamicSEOManager()\n    }\n    return DynamicSEOManager.instance\n  }\n\n  // Generar metadata para productos\n  generateProductMetadata(product: ProductSEOData): Metadata {\n    const title = SEO_TEMPLATES.product.title(product)\n    const description = SEO_TEMPLATES.product.description(product)\n    const keywords = SEO_TEMPLATES.product.keywords(product)\n\n    // Validar que product.slug existe antes de generar canonical\n    if (!product.slug) {\n      console.warn('Product slug is missing, using fallback')\n    }\n\n    const canonical = product.slug ? `${SITE_CONFIG.url}/products/${product.slug}` : SITE_CONFIG.url\n    const ogImage = product.images?.[0] || SITE_CONFIG.defaultImage\n\n    return {\n      title,\n      description,\n      keywords,\n      alternates: canonical\n        ? {\n            canonical,\n          }\n        : undefined,\n      openGraph: {\n        title,\n        description,\n        url: canonical,\n        siteName: SITE_CONFIG.name,\n        images: [\n          {\n            url: ogImage,\n            width: 1200,\n            height: 630,\n            alt: product.name,\n          },\n        ],\n        locale: SITE_CONFIG.locale,\n        type: 'website',\n      },\n      twitter: {\n        card: 'summary_large_image',\n        title,\n        description,\n        images: [ogImage],\n      },\n      robots: {\n        index: true,\n        follow: true,\n        googleBot: {\n          index: true,\n          follow: true,\n          'max-video-preview': -1,\n          'max-image-preview': 'large',\n          'max-snippet': -1,\n        },\n      },\n      other: {\n        'product:price:amount': product.price.toString(),\n        'product:price:currency': 'ARS',\n        'product:availability': product.stock > 0 ? 'InStock' : 'OutOfStock',\n        'product:condition': 'NewCondition',\n        'product:brand': product.brand,\n        'product:category': product.category,\n      },\n    }\n  }\n\n  // Generar metadata para categorías\n  generateCategoryMetadata(category: CategorySEOData): Metadata {\n    const title = SEO_TEMPLATES.category.title(category)\n    const description = SEO_TEMPLATES.category.description(category)\n    const keywords = SEO_TEMPLATES.category.keywords(category)\n\n    // Validar que category.slug existe antes de generar canonical\n    if (!category.slug) {\n      console.warn('Category slug is missing, using fallback')\n    }\n\n    const canonical = category.slug\n      ? `${SITE_CONFIG.url}/categories/${category.slug}`\n      : SITE_CONFIG.url\n    const ogImage = category.image || SITE_CONFIG.defaultImage\n\n    return {\n      title,\n      description,\n      keywords,\n      alternates: canonical\n        ? {\n            canonical,\n          }\n        : undefined,\n      openGraph: {\n        title,\n        description,\n        url: canonical,\n        siteName: SITE_CONFIG.name,\n        images: [\n          {\n            url: ogImage,\n            width: 1200,\n            height: 630,\n            alt: `${category.name} - ${SITE_CONFIG.name}`,\n          },\n        ],\n        locale: SITE_CONFIG.locale,\n        type: 'website',\n      },\n      twitter: {\n        card: 'summary_large_image',\n        title,\n        description,\n        images: [ogImage],\n      },\n      robots: {\n        index: true,\n        follow: true,\n        googleBot: {\n          index: true,\n          follow: true,\n          'max-video-preview': -1,\n          'max-image-preview': 'large',\n          'max-snippet': -1,\n        },\n      },\n      other: {\n        'category:name': category.name,\n        'category:product_count': category.productCount.toString(),\n      },\n    }\n  }\n\n  // Generar metadata para páginas generales\n  generatePageMetadata(page: PageSEOData): Metadata {\n    const title = SEO_TEMPLATES.page.title(page)\n    const description = SEO_TEMPLATES.page.description(page)\n    const keywords = SEO_TEMPLATES.page.keywords()\n\n    // Validar que page.path existe antes de generar canonical\n    if (!page.path) {\n      console.warn('Page path is missing, using fallback')\n    }\n\n    const canonical = page.path ? `${SITE_CONFIG.url}${page.path}` : SITE_CONFIG.url\n\n    return {\n      title,\n      description,\n      keywords,\n      alternates: canonical\n        ? {\n            canonical,\n          }\n        : undefined,\n      openGraph: {\n        title,\n        description,\n        url: canonical,\n        siteName: SITE_CONFIG.name,\n        images: [\n          {\n            url: SITE_CONFIG.defaultImage,\n            width: 1200,\n            height: 630,\n            alt: `${page.title} - ${SITE_CONFIG.name}`,\n          },\n        ],\n        locale: SITE_CONFIG.locale,\n        type: page.type === 'article' ? 'article' : 'website',\n      },\n      twitter: {\n        card: 'summary_large_image',\n        title,\n        description,\n        images: [SITE_CONFIG.defaultImage],\n      },\n      robots: {\n        index: page.type !== 'checkout' && page.type !== 'profile',\n        follow: true,\n        googleBot: {\n          index: page.type !== 'checkout' && page.type !== 'profile',\n          follow: true,\n          'max-video-preview': -1,\n          'max-image-preview': 'large',\n          'max-snippet': -1,\n        },\n      },\n    }\n  }\n\n  // Optimizar título para SEO\n  optimizeTitle(title: string, maxLength: number = 60): string {\n    if (title.length <= maxLength) {\n      return title\n    }\n\n    // Truncar en la última palabra completa\n    const truncated = title.slice(0, maxLength)\n    const lastSpace = truncated.lastIndexOf(' ')\n\n    return lastSpace > 0 ? truncated.slice(0, lastSpace) + '...' : truncated + '...'\n  }\n\n  // Optimizar descripción para SEO\n  optimizeDescription(description: string, maxLength: number = 160): string {\n    if (description.length <= maxLength) {\n      return description\n    }\n\n    // Truncar en la última oración completa\n    const truncated = description.slice(0, maxLength)\n    const lastPeriod = truncated.lastIndexOf('.')\n    const lastSpace = truncated.lastIndexOf(' ')\n\n    const cutPoint = lastPeriod > 0 ? lastPeriod + 1 : lastSpace\n    return cutPoint > 0 ? truncated.slice(0, cutPoint) + '...' : truncated + '...'\n  }\n\n  // Generar slug SEO-friendly\n  generateSlug(text: string): string {\n    return text\n      .toLowerCase()\n      .normalize('NFD')\n      .replace(/[\\u0300-\\u036f]/g, '') // Remover acentos\n      .replace(/[^a-z0-9\\s-]/g, '') // Solo letras, números, espacios y guiones\n      .replace(/\\s+/g, '-') // Espacios a guiones\n      .replace(/-+/g, '-') // Múltiples guiones a uno\n      .replace(/^-|-$/g, '') // Remover guiones al inicio y final\n  }\n\n  // Extraer keywords relevantes del texto\n  extractKeywords(text: string, maxKeywords: number = 10): string[] {\n    const stopWords = new Set([\n      'el',\n      'la',\n      'de',\n      'que',\n      'y',\n      'a',\n      'en',\n      'un',\n      'es',\n      'se',\n      'no',\n      'te',\n      'lo',\n      'le',\n      'da',\n      'su',\n      'por',\n      'son',\n      'con',\n      'para',\n      'al',\n      'del',\n      'los',\n      'las',\n      'una',\n      'como',\n      'pero',\n      'sus',\n      'le',\n      'ya',\n      'o',\n      'porque',\n      'cuando',\n      'muy',\n      'sin',\n      'sobre',\n      'también',\n      'me',\n      'hasta',\n      'donde',\n      'quien',\n      'desde',\n      'todos',\n      'durante',\n      'todo',\n      'esto',\n      'eso',\n    ])\n\n    const words = text\n      .toLowerCase()\n      .replace(/[^\\w\\s]/g, ' ')\n      .split(/\\s+/)\n      .filter(word => word.length > 3 && !stopWords.has(word))\n\n    // Contar frecuencia de palabras\n    const wordCount = words.reduce(\n      (acc, word) => {\n        acc[word] = (acc[word] || 0) + 1\n        return acc\n      },\n      {} as Record<string, number>\n    )\n\n    // Ordenar por frecuencia y tomar las más relevantes\n    return Object.entries(wordCount)\n      .sort(([, a], [, b]) => b - a)\n      .slice(0, maxKeywords)\n      .map(([word]) => word)\n  }\n\n  // Validar configuración SEO\n  validateSEOConfig(config: SEOConfig): { isValid: boolean; errors: string[] } {\n    const errors: string[] = []\n\n    if (!config.title || config.title.length === 0) {\n      errors.push('El título es requerido')\n    } else if (config.title.length > 60) {\n      errors.push('El título no debe exceder 60 caracteres')\n    }\n\n    if (!config.description || config.description.length === 0) {\n      errors.push('La descripción es requerida')\n    } else if (config.description.length > 160) {\n      errors.push('La descripción no debe exceder 160 caracteres')\n    }\n\n    if (config.keywords && config.keywords.length === 0) {\n      errors.push('Se recomienda incluir al menos 3 keywords')\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n    }\n  }\n}\n\n// Exportar instancia singleton\nexport const dynamicSEOManager = DynamicSEOManager.getInstance()\n\n// Exportar tipos y utilidades\nexport { DynamicSEOManager, SITE_CONFIG, SEO_TEMPLATES }\n"],"names":["DynamicSEOManager","EnhancedDynamicSEOManager","SEO_TEMPLATES","SITE_CONFIG","dynamicSEOManager","enhancedDynamicSEOManager","DEFAULT_SEO_CONFIG","defaultLanguage","supportedLanguages","baseUrl","process","env","NEXT_PUBLIC_APP_URL","siteName","defaultImage","twitterHandle","enableAutoGeneration","enableAnalytics","cacheEnabled","cacheTTL","DEFAULT_TEMPLATES","id","name","type","titleTemplate","descriptionTemplate","keywordsTemplate","robotsDirective","priority","isActive","variables","config","templates","Map","cache","forEach","template","set","initializeRedis","logger","info","LogLevel","INFO","templatesCount","size","LogCategory","SEO","getInstance","instance","redis","getRedisClient","error","warn","WARN","addTemplate","templateId","updateTemplate","updates","get","updatedTemplate","clearCacheByType","changes","Object","keys","getTemplatesByType","Array","from","values","filter","sort","a","b","generateMetadata","data","options","cacheKey","generateCacheKey","cached","getCachedMetadata","selectTemplate","Error","metadata","processTemplate","setCachedMetadata","titleLength","title","length","descriptionLength","description","ERROR","generateFallbackMetadata","customTemplate","candidates","evaluateConditions","conditions","every","condition","value","getNestedValue","field","operator","String","includes","startsWith","endsWith","Number","language","processedData","enrichData","processTemplateString","keywords","map","keyword","Boolean","canonical","generateCanonicalUrl","structuredData","generateStructuredData","optimizeTitle","optimizeDescription","optimizeKeywords","ogImage","image","ogType","getOGType","twitterCard","undefined","noindex","nofollow","replace","match","key","currentDate","Date","toISOString","split","currentYear","getFullYear","obj","path","reduce","current","truncated","substring","lastSpace","lastIndexOf","unique","Set","slice","slug","langPrefix","generateProductStructuredData","generateCategoryStructuredData","generateArticleStructuredData","generateWebsiteStructuredData","productName","productDescription","brand","offers","price","productPrice","priceCurrency","availability","stock","seller","categoryName","categoryDescription","url","headline","author","publisher","logo","datePublished","publishedAt","createdAt","dateModified","updatedAt","potentialAction","target","keyData","JSON","stringify","parse","memoryCached","isExpired","now","timestamp","delete","setex","keysToDelete","clearedKeys","clearCache","clear","analyzeSEO","issues","recommendations","push","category","message","impact","fix","totalIssues","criticalIssues","i","mediumIssues","score","Math","max","metrics","keywordDensity","readabilityScore","imageOptimization","updateConfig","getConfig","getStats","activeTemplatesByType","t","acc","cacheSize","destroy","locale","currency","themeColor","product","generateProductSEOText","toLowerCase","subcategory","productCount","page","generateProductMetadata","console","images","alternates","openGraph","width","height","alt","twitter","card","robots","index","follow","googleBot","other","toString","generateCategoryMetadata","generatePageMetadata","maxLength","lastPeriod","cutPoint","generateSlug","text","normalize","extractKeywords","maxKeywords","stopWords","words","word","has","wordCount","entries","validateSEOConfig","errors","isValid"],"mappings":"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"}