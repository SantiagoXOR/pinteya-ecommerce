ce63ace48047a6d016895fe7af06e830
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get SearchAutocomplete () {
        return SearchAutocomplete;
    },
    get searchAutocompleteVariants () {
        return searchAutocompleteVariants;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _classvarianceauthority = require("class-variance-authority");
const _utils = require("../../lib/utils");
const _lucidereact = require("lucide-react");
const _navigation = require("next/navigation");
const _products = require("../../lib/api/products");
const _badge = require("./badge");
const _image = /*#__PURE__*/ _interop_require_default(require("next/image"));
const _useTrendingSearches = require("../../hooks/useTrendingSearches");
const _useRecentSearches = require("../../hooks/useRecentSearches");
const _shop = require("../../constants/shop");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const searchAutocompleteVariants = (0, _classvarianceauthority.cva)('relative w-full', {
    variants: {
        size: {
            sm: 'text-sm',
            md: 'text-base',
            lg: 'text-lg'
        }
    },
    defaultVariants: {
        size: 'md'
    }
});
// Búsquedas trending por defecto para pinturería
const defaultTrendingSearches = [
    {
        id: 'trending-1',
        type: 'trending',
        title: 'Pintura látex',
        href: '/shop?search=pintura+latex'
    },
    {
        id: 'trending-2',
        type: 'trending',
        title: 'Sherwin Williams',
        href: '/shop?search=sherwin+williams'
    },
    {
        id: 'trending-3',
        type: 'trending',
        title: 'Rodillos premium',
        href: '/shop?search=rodillos+premium'
    },
    {
        id: 'trending-4',
        type: 'trending',
        title: 'Pinceles',
        href: '/shop?search=pinceles'
    }
];
const SearchAutocomplete = /*#__PURE__*/ _react.forwardRef(({ className, size, onSearch, onSuggestionSelect, showRecentSearches = true, showTrendingSearches = true, maxSuggestions = 8, debounceMs = 300, placeholder = 'Látex interior blanco 20lts, rodillos, pinceles...', // Props opcionales para integración con hooks externos
query: externalQuery, suggestions: externalSuggestions, isLoading: externalIsLoading, error: externalError, searchWithDebounce: externalSearchWithDebounce, onClear: externalOnClear, ...props }, ref)=>{
    // Hook para obtener búsquedas trending reales
    const { trendingSearches, trackSearch } = (0, _useTrendingSearches.useTrendingSearches)({
        limit: 4,
        enabled: showTrendingSearches
    });
    // Hook para gestionar búsquedas recientes
    const { recentSearches, addSearch: addRecentSearch, getRecentSearches } = (0, _useRecentSearches.useRecentSearches)({
        maxSearches: _shop.SEARCH_CONSTANTS.MAX_RECENT_SEARCHES,
        enablePersistence: showRecentSearches,
        expirationDays: _shop.SEARCH_CONSTANTS.RECENT_SEARCHES_EXPIRATION_DAYS
    });
    // Estado interno (usado solo si no hay props externas)
    const [internalQuery, setInternalQuery] = (0, _react.useState)('');
    const [internalSuggestions, setInternalSuggestions] = (0, _react.useState)([]);
    const [internalIsLoading, setInternalIsLoading] = (0, _react.useState)(false);
    const [isOpen, setIsOpen] = (0, _react.useState)(false);
    const [selectedIndex, setSelectedIndex] = (0, _react.useState)(-1);
    // Usar props externas si están disponibles, sino usar estado interno
    const query = externalQuery !== undefined ? externalQuery : internalQuery;
    const suggestions = externalSuggestions !== undefined ? externalSuggestions : internalSuggestions;
    const isLoading = externalIsLoading !== undefined ? externalIsLoading : internalIsLoading;
    const error = externalError;
    const router = (0, _navigation.useRouter)();
    const inputRef = (0, _react.useRef)(null);
    const dropdownRef = (0, _react.useRef)(null);
    const debounceRef = (0, _react.useRef)();
    // Buscar productos con debounce
    const searchProductsDebounced = (0, _react.useCallback)(async (searchQuery)=>{
        // No ejecutar si hay props externas
        if (externalSuggestions !== undefined) {
            return;
        }
        if (!searchQuery.trim()) {
            setInternalSuggestions([]);
            return;
        }
        setInternalIsLoading(true);
        try {
            const response = await (0, _products.searchProducts)(searchQuery, 6);
            if (response.success && response.data) {
                const productSuggestions = response.data.map((product)=>({
                        id: `product-${product.id}`,
                        type: 'product',
                        title: product.name,
                        subtitle: product.category?.name,
                        image: product.images?.previews?.[0] || product.images?.thumbnails?.[0] || '/images/products/placeholder.jpg',
                        badge: product.stock > 0 ? 'En stock' : 'Sin stock',
                        href: `/product/${product.id}`
                    }));
                setInternalSuggestions(productSuggestions.slice(0, maxSuggestions));
            }
        } catch (error) {
            console.error('Error searching products:', error);
            setInternalSuggestions([]);
        } finally{
            setInternalIsLoading(false);
        }
    }, [
        maxSuggestions,
        externalSuggestions
    ]);
    // Manejar cambio en el input
    const handleInputChange = (e)=>{
        const value = e.target.value;
        // Si hay función externa de búsqueda, usarla
        if (externalSearchWithDebounce) {
            externalSearchWithDebounce(value);
        } else {
            // Usar lógica interna
            setInternalQuery(value);
            setSelectedIndex(-1);
            // Limpiar debounce anterior
            if (debounceRef.current) {
                clearTimeout(debounceRef.current);
            }
            // Configurar nuevo debounce
            debounceRef.current = setTimeout(()=>{
                searchProductsDebounced(value);
            }, debounceMs);
        }
    };
    // Mostrar sugerencias por defecto cuando se enfoca
    const handleFocus = ()=>{
        setIsOpen(true);
        if (!query.trim() && !externalSuggestions) {
            // Solo mostrar sugerencias por defecto si no hay props externas
            const defaultSuggestions = [];
            // Agregar búsquedas recientes
            if (showRecentSearches && recentSearches.length > 0) {
                defaultSuggestions.push(...getRecentSearches(3).map((search, index)=>({
                        id: `recent-${index}`,
                        type: 'recent',
                        title: search,
                        href: `/search?q=${encodeURIComponent(search)}`
                    })));
            }
            // Agregar búsquedas trending reales
            if (showTrendingSearches && trendingSearches.length > 0) {
                const trendingSuggestions = trendingSearches.map((trending)=>({
                        id: trending.id,
                        type: 'trending',
                        title: trending.query,
                        href: trending.href,
                        badge: trending.count ? `${trending.count}` : undefined
                    }));
                defaultSuggestions.push(...trendingSuggestions.slice(0, 4));
            }
            setInternalSuggestions(defaultSuggestions.slice(0, maxSuggestions));
        }
    };
    // Manejar selección de sugerencia
    const handleSuggestionSelect = (suggestion)=>{
        if (suggestion.type === 'product' || suggestion.type === 'category') {
            addRecentSearch(suggestion.title);
        }
        // Registrar búsquedas trending y recientes en analytics
        if (suggestion.type === 'trending' || suggestion.type === 'recent') {
            trackSearch(suggestion.title).catch(console.warn);
        }
        // Solo actualizar query interna si no hay query externa
        if (externalQuery === undefined) {
            setInternalQuery(suggestion.title);
        }
        setIsOpen(false);
        if (onSuggestionSelect) {
            onSuggestionSelect(suggestion);
        } else {
            router.push(suggestion.href);
        }
    };
    // Manejar envío del formulario
    const handleSubmit = (e)=>{
        e.preventDefault();
        if (query.trim()) {
            addRecentSearch(query.trim());
            setIsOpen(false);
            // Registrar búsqueda en analytics para trending
            trackSearch(query.trim()).catch(console.warn);
            if (onSearch) {
                onSearch(query.trim());
            } else {
                router.push(`/search?q=${encodeURIComponent(query.trim())}`);
            }
        }
    };
    // Manejar teclas
    const handleKeyDown = (e)=>{
        if (!isOpen) {
            return;
        }
        switch(e.key){
            case 'ArrowDown':
                e.preventDefault();
                setSelectedIndex((prev)=>prev < suggestions.length - 1 ? prev + 1 : prev);
                break;
            case 'ArrowUp':
                e.preventDefault();
                setSelectedIndex((prev)=>prev > 0 ? prev - 1 : -1);
                break;
            case 'Enter':
                e.preventDefault();
                if (selectedIndex >= 0 && suggestions[selectedIndex]) {
                    handleSuggestionSelect(suggestions[selectedIndex]);
                } else {
                    handleSubmit(e);
                }
                break;
            case 'Escape':
                setIsOpen(false);
                setSelectedIndex(-1);
                break;
        }
    };
    // Cerrar dropdown al hacer click fuera
    (0, _react.useEffect)(()=>{
        const handleClickOutside = (event)=>{
            if (dropdownRef.current && !dropdownRef.current.contains(event.target) && inputRef.current && !inputRef.current.contains(event.target)) {
                setIsOpen(false);
            }
        };
        document.addEventListener('mousedown', handleClickOutside);
        return ()=>document.removeEventListener('mousedown', handleClickOutside);
    }, []);
    // Limpiar debounce al desmontar
    (0, _react.useEffect)(()=>{
        return ()=>{
            if (debounceRef.current) {
                clearTimeout(debounceRef.current);
            }
        };
    }, []);
    const getSuggestionIcon = (type)=>{
        switch(type){
            case 'recent':
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Clock, {
                    className: "w-4 h-4 text-gray-400"
                });
            case 'trending':
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.TrendingUp, {
                    className: "w-4 h-4 text-fun-green-600"
                });
            case 'product':
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Package, {
                    className: "w-4 h-4 text-gray-600"
                });
            default:
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Search, {
                    className: "w-4 h-4 text-gray-400"
                });
        }
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: (0, _utils.cn)(searchAutocompleteVariants({
            size
        }), className),
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: "relative",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "relative",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                            ref: inputRef,
                            type: "search",
                            value: query,
                            onChange: handleInputChange,
                            onFocus: handleFocus,
                            onKeyDown: handleKeyDown,
                            placeholder: placeholder,
                            autoComplete: "off",
                            "data-testid": "search-input",
                            className: (0, _utils.cn)('w-full rounded-r-[5px] bg-yellow-100 border border-gray-3 py-2.5 pl-4 pr-10 outline-none transition-all duration-200', 'focus:border-primary/50 focus:ring-2 focus:ring-primary/20', 'placeholder:text-gray-400 placeholder:font-normal', size === 'sm' && 'py-2 text-sm', size === 'lg' && 'py-3 text-lg'),
                            ...props
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "absolute right-3 top-1/2 -translate-y-1/2 flex items-center gap-2",
                            children: [
                                query && /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                    type: "button",
                                    onClick: ()=>{
                                        if (externalOnClear) {
                                            externalOnClear();
                                        } else {
                                            setInternalQuery('');
                                            setInternalSuggestions([]);
                                        }
                                        inputRef.current?.focus();
                                    },
                                    className: "text-gray-400 hover:text-gray-600 transition-colors",
                                    "aria-label": "Clear search",
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.X, {
                                        className: "w-4 h-4"
                                    })
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                    type: "submit",
                                    className: "text-gray-500 hover:text-primary transition-colors",
                                    "aria-label": "Search",
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Search, {
                                        className: "w-4 h-4"
                                    })
                                })
                            ]
                        })
                    ]
                }),
                isOpen && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    ref: dropdownRef,
                    className: "absolute top-full left-0 right-0 z-50 mt-1 rounded-md shadow-lg max-h-96 overflow-y-auto",
                    style: {
                        backgroundColor: '#fff3c5'
                    },
                    role: "listbox",
                    "aria-label": "Search suggestions",
                    children: [
                        isLoading && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "p-4 text-center text-gray-500",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: "animate-spin w-5 h-5 border-2 border-primary border-t-transparent rounded-full mx-auto mb-2"
                                }),
                                "Buscando..."
                            ]
                        }),
                        !isLoading && suggestions.length === 0 && query.trim() && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "p-4 text-center text-gray-500",
                            children: [
                                'No se encontraron resultados para "',
                                query,
                                '"'
                            ]
                        }),
                        !isLoading && suggestions.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "py-2",
                            children: [
                                showRecentSearches && suggestions.some((s)=>s.type === 'recent') && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "px-3 py-2",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                                            className: "text-xs font-medium text-fun-green-700 uppercase tracking-wide mb-2",
                                            children: "B\xfasquedas recientes"
                                        }),
                                        suggestions.filter((s)=>s.type === 'recent').map((suggestion, index)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                                                onClick: ()=>handleSuggestionSelect(suggestion),
                                                onMouseEnter: ()=>setSelectedIndex(suggestions.indexOf(suggestion)),
                                                className: (0, _utils.cn)('w-full flex items-center gap-3 px-3 py-2 text-left hover:bg-white/50 hover:border-l-2 hover:border-fun-green-500 rounded-md transition-all duration-200', selectedIndex === suggestions.indexOf(suggestion) && 'bg-white/70 border-l-2 border-fun-green-600'),
                                                role: "option",
                                                "aria-selected": selectedIndex === suggestions.indexOf(suggestion),
                                                children: [
                                                    getSuggestionIcon(suggestion.type),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                        className: "text-sm text-gray-700",
                                                        children: suggestion.title
                                                    })
                                                ]
                                            }, suggestion.id))
                                    ]
                                }),
                                suggestions.some((s)=>s.type === 'product') && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "px-3 py-2",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                                            className: "text-xs font-medium text-fun-green-700 uppercase tracking-wide mb-2",
                                            children: "Productos"
                                        }),
                                        suggestions.filter((s)=>s.type === 'product').map((suggestion, index)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                                                onClick: ()=>handleSuggestionSelect(suggestion),
                                                onMouseEnter: ()=>setSelectedIndex(suggestions.indexOf(suggestion)),
                                                className: (0, _utils.cn)('w-full flex items-center gap-3 px-3 py-2 text-left hover:bg-white/50 hover:border-l-2 hover:border-fun-green-500 rounded-md transition-all duration-200', selectedIndex === suggestions.indexOf(suggestion) && 'bg-white/70 border-l-2 border-fun-green-600'),
                                                role: "option",
                                                "aria-selected": selectedIndex === suggestions.indexOf(suggestion),
                                                children: [
                                                    suggestion.image ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                        className: "w-8 h-8 rounded-md overflow-hidden bg-gray-100 flex-shrink-0",
                                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_image.default, {
                                                            src: suggestion.image,
                                                            alt: suggestion.title,
                                                            width: 32,
                                                            height: 32,
                                                            className: "w-full h-full object-cover"
                                                        })
                                                    }) : getSuggestionIcon(suggestion.type),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                        className: "flex-1 min-w-0",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                className: "text-sm font-medium text-gray-900 truncate",
                                                                children: suggestion.title
                                                            }),
                                                            suggestion.subtitle && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                className: "text-xs text-fun-green-600 truncate font-medium",
                                                                children: suggestion.subtitle
                                                            })
                                                        ]
                                                    }),
                                                    suggestion.badge && /*#__PURE__*/ (0, _jsxruntime.jsx)(_badge.Badge, {
                                                        variant: "secondary",
                                                        size: "sm",
                                                        children: suggestion.badge
                                                    })
                                                ]
                                            }, suggestion.id))
                                    ]
                                }),
                                showTrendingSearches && suggestions.some((s)=>s.type === 'trending') && !query.trim() && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "px-3 py-2",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                                            className: "text-xs font-medium text-fun-green-700 uppercase tracking-wide mb-2",
                                            children: "B\xfasquedas populares"
                                        }),
                                        suggestions.filter((s)=>s.type === 'trending').map((suggestion, index)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                                                onClick: ()=>handleSuggestionSelect(suggestion),
                                                onMouseEnter: ()=>setSelectedIndex(suggestions.indexOf(suggestion)),
                                                className: (0, _utils.cn)('w-full flex items-center gap-3 px-3 py-2 text-left hover:bg-white/50 hover:border-l-2 hover:border-fun-green-500 rounded-md transition-all duration-200', selectedIndex === suggestions.indexOf(suggestion) && 'bg-white/70 border-l-2 border-fun-green-600'),
                                                role: "option",
                                                "aria-selected": selectedIndex === suggestions.indexOf(suggestion),
                                                children: [
                                                    getSuggestionIcon(suggestion.type),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                        className: "text-sm text-gray-700",
                                                        children: suggestion.title
                                                    })
                                                ]
                                            }, suggestion.id))
                                    ]
                                })
                            ]
                        })
                    ]
                })
            ]
        })
    });
});
SearchAutocomplete.displayName = 'SearchAutocomplete';

//# sourceMappingURL=data:application/json;base64,