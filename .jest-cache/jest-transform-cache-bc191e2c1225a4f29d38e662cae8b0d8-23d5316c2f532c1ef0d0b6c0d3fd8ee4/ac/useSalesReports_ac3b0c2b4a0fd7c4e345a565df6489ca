798547ea84e62190c0023a7f50a8f72f
'use client';
"use strict";

/* istanbul ignore next */
function cov_9r7or87j1() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useSalesReports.ts";
  var hash = "8611186ebd79f55a785cf256f4dbd04cf9fdf45c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useSalesReports.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 31
        }
      },
      "3": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 31
        }
      },
      "4": {
        start: {
          line: 13,
          column: 18
        },
        end: {
          line: 13,
          column: 58
        }
      },
      "5": {
        start: {
          line: 15,
          column: 38
        },
        end: {
          line: 15,
          column: 64
        }
      },
      "6": {
        start: {
          line: 16,
          column: 38
        },
        end: {
          line: 16,
          column: 65
        }
      },
      "7": {
        start: {
          line: 17,
          column: 30
        },
        end: {
          line: 17,
          column: 56
        }
      },
      "8": {
        start: {
          line: 18,
          column: 39
        },
        end: {
          line: 21,
          column: 6
        }
      },
      "9": {
        start: {
          line: 22,
          column: 27
        },
        end: {
          line: 55,
          column: 6
        }
      },
      "10": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 27
        }
      },
      "11": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 23
        }
      },
      "12": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "13": {
        start: {
          line: 26,
          column: 32
        },
        end: {
          line: 35,
          column: 14
        }
      },
      "14": {
        start: {
          line: 36,
          column: 29
        },
        end: {
          line: 36,
          column: 83
        }
      },
      "15": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 39,
          column: 13
        }
      },
      "16": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 68
        }
      },
      "17": {
        start: {
          line: 40,
          column: 25
        },
        end: {
          line: 40,
          column: 46
        }
      },
      "18": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 31
        }
      },
      "19": {
        start: {
          line: 43,
          column: 33
        },
        end: {
          line: 43,
          column: 89
        }
      },
      "20": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 35
        }
      },
      "21": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 49,
          column: 15
        }
      },
      "22": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 32
        }
      },
      "23": {
        start: {
          line: 56,
          column: 23
        },
        end: {
          line: 61,
          column: 10
        }
      },
      "24": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 60,
          column: 16
        }
      },
      "25": {
        start: {
          line: 57,
          column: 33
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "26": {
        start: {
          line: 62,
          column: 24
        },
        end: {
          line: 66,
          column: 6
        }
      },
      "27": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 31
        }
      },
      "28": {
        start: {
          line: 67,
          column: 25
        },
        end: {
          line: 103,
          column: 6
        }
      },
      "29": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "30": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 31
        }
      },
      "31": {
        start: {
          line: 70,
          column: 32
        },
        end: {
          line: 73,
          column: 14
        }
      },
      "32": {
        start: {
          line: 74,
          column: 29
        },
        end: {
          line: 74,
          column: 82
        }
      },
      "33": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 77,
          column: 13
        }
      },
      "34": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 61
        }
      },
      "35": {
        start: {
          line: 78,
          column: 25
        },
        end: {
          line: 78,
          column: 46
        }
      },
      "36": {
        start: {
          line: 79,
          column: 24
        },
        end: {
          line: 79,
          column: 56
        }
      },
      "37": {
        start: {
          line: 80,
          column: 22
        },
        end: {
          line: 80,
          column: 49
        }
      },
      "38": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 25
        }
      },
      "39": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 90
        }
      },
      "40": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 41
        }
      },
      "41": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 22
        }
      },
      "42": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 44
        }
      },
      "43": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 41
        }
      },
      "44": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 90,
          column: 15
        }
      },
      "45": {
        start: {
          line: 92,
          column: 33
        },
        end: {
          line: 92,
          column: 89
        }
      },
      "46": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 97,
          column: 15
        }
      },
      "47": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 32
        }
      },
      "48": {
        start: {
          line: 104,
          column: 33
        },
        end: {
          line: 138,
          column: 6
        }
      },
      "49": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "50": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 31
        }
      },
      "51": {
        start: {
          line: 107,
          column: 29
        },
        end: {
          line: 116,
          column: 14
        }
      },
      "52": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 119,
          column: 13
        }
      },
      "53": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 118,
          column: 74
        }
      },
      "54": {
        start: {
          line: 120,
          column: 25
        },
        end: {
          line: 120,
          column: 46
        }
      },
      "55": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 31
        }
      },
      "56": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 125,
          column: 15
        }
      },
      "57": {
        start: {
          line: 127,
          column: 33
        },
        end: {
          line: 127,
          column: 96
        }
      },
      "58": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 132,
          column: 15
        }
      },
      "59": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 32
        }
      },
      "60": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 143,
          column: 7
        }
      },
      "61": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 25
        }
      },
      "62": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 153,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "useSalesReports",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 24
          }
        },
        loc: {
          start: {
            line: 14,
            column: 27
          },
          end: {
            line: 154,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 51
          },
          end: {
            line: 22,
            column: 52
          }
        },
        loc: {
          start: {
            line: 22,
            column: 61
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 56,
            column: 47
          },
          end: {
            line: 56,
            column: 48
          }
        },
        loc: {
          start: {
            line: 56,
            column: 61
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 56
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 57,
            column: 24
          },
          end: {
            line: 57,
            column: 25
          }
        },
        loc: {
          start: {
            line: 57,
            column: 33
          },
          end: {
            line: 60,
            column: 13
          }
        },
        line: 57
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 62,
            column: 48
          },
          end: {
            line: 62,
            column: 49
          }
        },
        loc: {
          start: {
            line: 62,
            column: 58
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 62
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 67,
            column: 49
          },
          end: {
            line: 67,
            column: 50
          }
        },
        loc: {
          start: {
            line: 67,
            column: 65
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 67
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 104,
            column: 57
          },
          end: {
            line: 104,
            column: 58
          }
        },
        loc: {
          start: {
            line: 104,
            column: 73
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 104
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 139,
            column: 26
          },
          end: {
            line: 139,
            column: 27
          }
        },
        loc: {
          start: {
            line: 139,
            column: 30
          },
          end: {
            line: 141,
            column: 5
          }
        },
        line: 139
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 19
          },
          end: {
            line: 31,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 19
          },
          end: {
            line: 29,
            column: 35
          }
        }, {
          start: {
            line: 29,
            column: 39
          },
          end: {
            line: 31,
            column: 17
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 19
          },
          end: {
            line: 34,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 19
          },
          end: {
            line: 32,
            column: 33
          }
        }, {
          start: {
            line: 32,
            column: 37
          },
          end: {
            line: 34,
            column: 17
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 39,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 39,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "3": {
        loc: {
          start: {
            line: 43,
            column: 33
          },
          end: {
            line: 43,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 56
          },
          end: {
            line: 43,
            column: 67
          }
        }, {
          start: {
            line: 43,
            column: 70
          },
          end: {
            line: 43,
            column: 89
          }
        }],
        line: 43
      },
      "4": {
        loc: {
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "5": {
        loc: {
          start: {
            line: 92,
            column: 33
          },
          end: {
            line: 92,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 92,
            column: 56
          },
          end: {
            line: 92,
            column: 67
          }
        }, {
          start: {
            line: 92,
            column: 70
          },
          end: {
            line: 92,
            column: 89
          }
        }],
        line: 92
      },
      "6": {
        loc: {
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 119,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 119,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "7": {
        loc: {
          start: {
            line: 127,
            column: 33
          },
          end: {
            line: 127,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 127,
            column: 56
          },
          end: {
            line: 127,
            column: 67
          }
        }, {
          start: {
            line: 127,
            column: 70
          },
          end: {
            line: 127,
            column: 96
          }
        }],
        line: 127
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useSalesReports.ts"],
      sourcesContent: ["'use client'\r\n\r\nimport { useState, useEffect, useCallback } from 'react'\r\nimport { toast } from '@/components/ui/use-toast'\r\n\r\nexport interface SalesData {\r\n  id: string\r\n  date: string\r\n  totalSales: number\r\n  totalOrders: number\r\n  averageOrderValue: number\r\n  topProducts: Array<{\r\n    id: string\r\n    name: string\r\n    sales: number\r\n    revenue: number\r\n  }>\r\n  salesByCategory: Array<{\r\n    category: string\r\n    sales: number\r\n    percentage: number\r\n  }>\r\n}\r\n\r\nexport interface SalesFilters {\r\n  startDate: string\r\n  endDate: string\r\n  category?: string\r\n  status?: 'completed' | 'pending' | 'cancelled'\r\n}\r\n\r\nexport interface UseSalesReportsReturn {\r\n  salesData: SalesData | null\r\n  isLoading: boolean\r\n  error: string | null\r\n  filters: SalesFilters\r\n  setFilters: (filters: Partial<SalesFilters>) => void\r\n  refreshData: () => Promise<void>\r\n  exportReport: (format: 'csv' | 'pdf' | 'excel') => Promise<void>\r\n  generateCustomReport: (config: any) => Promise<void>\r\n}\r\n\r\nexport function useSalesReports(): UseSalesReportsReturn {\r\n  const [salesData, setSalesData] = useState<SalesData | null>(null)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [filters, setFiltersState] = useState<SalesFilters>({\r\n    startDate: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\r\n    endDate: new Date().toISOString().split('T')[0]\r\n  })\r\n\r\n  const fetchSalesData = useCallback(async () => {\r\n    setIsLoading(true)\r\n    setError(null)\r\n\r\n    try {\r\n      const queryParams = new URLSearchParams({\r\n        startDate: filters.startDate,\r\n        endDate: filters.endDate,\r\n        ...(filters.category && { category: filters.category }),\r\n        ...(filters.status && { status: filters.status })\r\n      })\r\n\r\n      const response = await fetch(`/api/admin/sales/reports?${queryParams}`)\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Error al obtener datos de ventas')\r\n      }\r\n\r\n      const data = await response.json()\r\n      setSalesData(data)\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido'\r\n      setError(errorMessage)\r\n      toast({\r\n        title: 'Error',\r\n        description: errorMessage,\r\n        variant: 'destructive'\r\n      })\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }, [filters])\r\n\r\n  const setFilters = useCallback((newFilters: Partial<SalesFilters>) => {\r\n    setFiltersState(prev => ({ ...prev, ...newFilters }))\r\n  }, [])\r\n\r\n  const refreshData = useCallback(async () => {\r\n    await fetchSalesData()\r\n  }, [fetchSalesData])\r\n\r\n  const exportReport = useCallback(async (format: 'csv' | 'pdf' | 'excel') => {\r\n    try {\r\n      setIsLoading(true)\r\n      \r\n      const queryParams = new URLSearchParams({\r\n        ...filters,\r\n        format\r\n      })\r\n\r\n      const response = await fetch(`/api/admin/sales/export?${queryParams}`)\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Error al exportar reporte')\r\n      }\r\n\r\n      const blob = await response.blob()\r\n      const url = window.URL.createObjectURL(blob)\r\n      const a = document.createElement('a')\r\n      a.href = url\r\n      a.download = `sales-report-${filters.startDate}-${filters.endDate}.${format}`\r\n      document.body.appendChild(a)\r\n      a.click()\r\n      window.URL.revokeObjectURL(url)\r\n      document.body.removeChild(a)\r\n\r\n      toast({\r\n        title: '\xC9xito',\r\n        description: 'Reporte exportado correctamente'\r\n      })\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error al exportar'\r\n      toast({\r\n        title: 'Error',\r\n        description: errorMessage,\r\n        variant: 'destructive'\r\n      })\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }, [filters])\r\n\r\n  const generateCustomReport = useCallback(async (config: any) => {\r\n    try {\r\n      setIsLoading(true)\r\n      \r\n      const response = await fetch('/api/admin/sales/custom-report', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ ...config, filters })\r\n      })\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Error al generar reporte personalizado')\r\n      }\r\n\r\n      const data = await response.json()\r\n      setSalesData(data)\r\n\r\n      toast({\r\n        title: '\xC9xito',\r\n        description: 'Reporte personalizado generado correctamente'\r\n      })\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error al generar reporte'\r\n      toast({\r\n        title: 'Error',\r\n        description: errorMessage,\r\n        variant: 'destructive'\r\n      })\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }, [filters])\r\n\r\n  useEffect(() => {\r\n    fetchSalesData()\r\n  }, [fetchSalesData])\r\n\r\n  return {\r\n    salesData,\r\n    isLoading,\r\n    error,\r\n    filters,\r\n    setFilters,\r\n    refreshData,\r\n    exportReport,\r\n    generateCustomReport\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useSalesReports", "salesData", "setSalesData", "useState", "isLoading", "setIsLoading", "error", "setError", "filters", "setFiltersState", "startDate", "Date", "now", "toISOString", "split", "endDate", "fetchSalesData", "useCallback", "queryParams", "URLSearchParams", "category", "status", "response", "fetch", "ok", "Error", "data", "json", "err", "errorMessage", "message", "toast", "title", "description", "variant", "setFilters", "newFilters", "prev", "refreshData", "exportReport", "format", "blob", "url", "window", "URL", "createObjectURL", "a", "document", "createElement", "href", "download", "body", "appendChild", "click", "revokeObjectURL", "removeChild", "generateCustomReport", "config", "method", "headers", "JSON", "stringify", "useEffect"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8611186ebd79f55a785cf256f4dbd04cf9fdf45c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_9r7or87j1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_9r7or87j1();
cov_9r7or87j1().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_9r7or87j1().s[1]++;
Object.defineProperty(exports, "useSalesReports", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_9r7or87j1().f[0]++;
    cov_9r7or87j1().s[2]++;
    return useSalesReports;
  }
});
const _react =
/* istanbul ignore next */
(cov_9r7or87j1().s[3]++, require("react"));
const _usetoast =
/* istanbul ignore next */
(cov_9r7or87j1().s[4]++, require("../../components/ui/use-toast"));
function useSalesReports() {
  /* istanbul ignore next */
  cov_9r7or87j1().f[1]++;
  const [salesData, setSalesData] =
  /* istanbul ignore next */
  (cov_9r7or87j1().s[5]++, (0, _react.useState)(null));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_9r7or87j1().s[6]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_9r7or87j1().s[7]++, (0, _react.useState)(null));
  const [filters, setFiltersState] =
  /* istanbul ignore next */
  (cov_9r7or87j1().s[8]++, (0, _react.useState)({
    startDate: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],
    endDate: new Date().toISOString().split('T')[0]
  }));
  const fetchSalesData =
  /* istanbul ignore next */
  (cov_9r7or87j1().s[9]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_9r7or87j1().f[2]++;
    cov_9r7or87j1().s[10]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_9r7or87j1().s[11]++;
    setError(null);
    /* istanbul ignore next */
    cov_9r7or87j1().s[12]++;
    try {
      const queryParams =
      /* istanbul ignore next */
      (cov_9r7or87j1().s[13]++, new URLSearchParams({
        startDate: filters.startDate,
        endDate: filters.endDate,
        ...(
        /* istanbul ignore next */
        (cov_9r7or87j1().b[0][0]++, filters.category) &&
        /* istanbul ignore next */
        (cov_9r7or87j1().b[0][1]++, {
          category: filters.category
        })),
        ...(
        /* istanbul ignore next */
        (cov_9r7or87j1().b[1][0]++, filters.status) &&
        /* istanbul ignore next */
        (cov_9r7or87j1().b[1][1]++, {
          status: filters.status
        }))
      }));
      const response =
      /* istanbul ignore next */
      (cov_9r7or87j1().s[14]++, await fetch(`/api/admin/sales/reports?${queryParams}`));
      /* istanbul ignore next */
      cov_9r7or87j1().s[15]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_9r7or87j1().b[2][0]++;
        cov_9r7or87j1().s[16]++;
        throw new Error('Error al obtener datos de ventas');
      } else
      /* istanbul ignore next */
      {
        cov_9r7or87j1().b[2][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_9r7or87j1().s[17]++, await response.json());
      /* istanbul ignore next */
      cov_9r7or87j1().s[18]++;
      setSalesData(data);
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_9r7or87j1().s[19]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_9r7or87j1().b[3][0]++, err.message) :
      /* istanbul ignore next */
      (cov_9r7or87j1().b[3][1]++, 'Error desconocido'));
      /* istanbul ignore next */
      cov_9r7or87j1().s[20]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_9r7or87j1().s[21]++;
      (0, _usetoast.toast)({
        title: 'Error',
        description: errorMessage,
        variant: 'destructive'
      });
    } finally {
      /* istanbul ignore next */
      cov_9r7or87j1().s[22]++;
      setIsLoading(false);
    }
  }, [filters]));
  const setFilters =
  /* istanbul ignore next */
  (cov_9r7or87j1().s[23]++, (0, _react.useCallback)(newFilters => {
    /* istanbul ignore next */
    cov_9r7or87j1().f[3]++;
    cov_9r7or87j1().s[24]++;
    setFiltersState(prev => {
      /* istanbul ignore next */
      cov_9r7or87j1().f[4]++;
      cov_9r7or87j1().s[25]++;
      return {
        ...prev,
        ...newFilters
      };
    });
  }, []));
  const refreshData =
  /* istanbul ignore next */
  (cov_9r7or87j1().s[26]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_9r7or87j1().f[5]++;
    cov_9r7or87j1().s[27]++;
    await fetchSalesData();
  }, [fetchSalesData]));
  const exportReport =
  /* istanbul ignore next */
  (cov_9r7or87j1().s[28]++, (0, _react.useCallback)(async format => {
    /* istanbul ignore next */
    cov_9r7or87j1().f[6]++;
    cov_9r7or87j1().s[29]++;
    try {
      /* istanbul ignore next */
      cov_9r7or87j1().s[30]++;
      setIsLoading(true);
      const queryParams =
      /* istanbul ignore next */
      (cov_9r7or87j1().s[31]++, new URLSearchParams({
        ...filters,
        format
      }));
      const response =
      /* istanbul ignore next */
      (cov_9r7or87j1().s[32]++, await fetch(`/api/admin/sales/export?${queryParams}`));
      /* istanbul ignore next */
      cov_9r7or87j1().s[33]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_9r7or87j1().b[4][0]++;
        cov_9r7or87j1().s[34]++;
        throw new Error('Error al exportar reporte');
      } else
      /* istanbul ignore next */
      {
        cov_9r7or87j1().b[4][1]++;
      }
      const blob =
      /* istanbul ignore next */
      (cov_9r7or87j1().s[35]++, await response.blob());
      const url =
      /* istanbul ignore next */
      (cov_9r7or87j1().s[36]++, window.URL.createObjectURL(blob));
      const a =
      /* istanbul ignore next */
      (cov_9r7or87j1().s[37]++, document.createElement('a'));
      /* istanbul ignore next */
      cov_9r7or87j1().s[38]++;
      a.href = url;
      /* istanbul ignore next */
      cov_9r7or87j1().s[39]++;
      a.download = `sales-report-${filters.startDate}-${filters.endDate}.${format}`;
      /* istanbul ignore next */
      cov_9r7or87j1().s[40]++;
      document.body.appendChild(a);
      /* istanbul ignore next */
      cov_9r7or87j1().s[41]++;
      a.click();
      /* istanbul ignore next */
      cov_9r7or87j1().s[42]++;
      window.URL.revokeObjectURL(url);
      /* istanbul ignore next */
      cov_9r7or87j1().s[43]++;
      document.body.removeChild(a);
      /* istanbul ignore next */
      cov_9r7or87j1().s[44]++;
      (0, _usetoast.toast)({
        title: 'Éxito',
        description: 'Reporte exportado correctamente'
      });
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_9r7or87j1().s[45]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_9r7or87j1().b[5][0]++, err.message) :
      /* istanbul ignore next */
      (cov_9r7or87j1().b[5][1]++, 'Error al exportar'));
      /* istanbul ignore next */
      cov_9r7or87j1().s[46]++;
      (0, _usetoast.toast)({
        title: 'Error',
        description: errorMessage,
        variant: 'destructive'
      });
    } finally {
      /* istanbul ignore next */
      cov_9r7or87j1().s[47]++;
      setIsLoading(false);
    }
  }, [filters]));
  const generateCustomReport =
  /* istanbul ignore next */
  (cov_9r7or87j1().s[48]++, (0, _react.useCallback)(async config => {
    /* istanbul ignore next */
    cov_9r7or87j1().f[7]++;
    cov_9r7or87j1().s[49]++;
    try {
      /* istanbul ignore next */
      cov_9r7or87j1().s[50]++;
      setIsLoading(true);
      const response =
      /* istanbul ignore next */
      (cov_9r7or87j1().s[51]++, await fetch('/api/admin/sales/custom-report', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          ...config,
          filters
        })
      }));
      /* istanbul ignore next */
      cov_9r7or87j1().s[52]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_9r7or87j1().b[6][0]++;
        cov_9r7or87j1().s[53]++;
        throw new Error('Error al generar reporte personalizado');
      } else
      /* istanbul ignore next */
      {
        cov_9r7or87j1().b[6][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_9r7or87j1().s[54]++, await response.json());
      /* istanbul ignore next */
      cov_9r7or87j1().s[55]++;
      setSalesData(data);
      /* istanbul ignore next */
      cov_9r7or87j1().s[56]++;
      (0, _usetoast.toast)({
        title: 'Éxito',
        description: 'Reporte personalizado generado correctamente'
      });
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_9r7or87j1().s[57]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_9r7or87j1().b[7][0]++, err.message) :
      /* istanbul ignore next */
      (cov_9r7or87j1().b[7][1]++, 'Error al generar reporte'));
      /* istanbul ignore next */
      cov_9r7or87j1().s[58]++;
      (0, _usetoast.toast)({
        title: 'Error',
        description: errorMessage,
        variant: 'destructive'
      });
    } finally {
      /* istanbul ignore next */
      cov_9r7or87j1().s[59]++;
      setIsLoading(false);
    }
  }, [filters]));
  /* istanbul ignore next */
  cov_9r7or87j1().s[60]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_9r7or87j1().f[8]++;
    cov_9r7or87j1().s[61]++;
    fetchSalesData();
  }, [fetchSalesData]);
  /* istanbul ignore next */
  cov_9r7or87j1().s[62]++;
  return {
    salesData,
    isLoading,
    error,
    filters,
    setFilters,
    refreshData,
    exportReport,
    generateCustomReport
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,