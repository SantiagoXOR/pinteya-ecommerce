ea7cd85e85a5fbdc008c6b37750c517b
'use client';
"use strict";

/* istanbul ignore next */
function cov_12kyft54w8() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\debug\\ApiDebugPanel.tsx";
  var hash = "a00f7deee81e256ebb2f83561251f9f44ca96be6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\debug\\ApiDebugPanel.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 29
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 43
        }
      },
      "6": {
        start: {
          line: 15,
          column: 14
        },
        end: {
          line: 15,
          column: 38
        }
      },
      "7": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 16,
          column: 42
        }
      },
      "8": {
        start: {
          line: 17,
          column: 15
        },
        end: {
          line: 17,
          column: 40
        }
      },
      "9": {
        start: {
          line: 18,
          column: 21
        },
        end: {
          line: 18,
          column: 52
        }
      },
      "10": {
        start: {
          line: 19,
          column: 21
        },
        end: {
          line: 19,
          column: 44
        }
      },
      "11": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 51
        }
      },
      "12": {
        start: {
          line: 21,
          column: 39
        },
        end: {
          line: 21,
          column: 51
        }
      },
      "13": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 22,
          column: 41
        }
      },
      "14": {
        start: {
          line: 23,
          column: 27
        },
        end: {
          line: 23,
          column: 40
        }
      },
      "15": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 20
        }
      },
      "16": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 66
        }
      },
      "17": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "18": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 19
        }
      },
      "19": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "20": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 35,
          column: 10
        }
      },
      "21": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 37,
          column: 53
        }
      },
      "22": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "23": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 30
        }
      },
      "24": {
        start: {
          line: 41,
          column: 17
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "25": {
        start: {
          line: 44,
          column: 32
        },
        end: {
          line: 44,
          column: 88
        }
      },
      "26": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "27": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "28": {
        start: {
          line: 47,
          column: 23
        },
        end: {
          line: 47,
          column: 95
        }
      },
      "29": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 52,
          column: 13
        }
      },
      "30": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 57
        }
      },
      "31": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 39
        }
      },
      "32": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 25
        }
      },
      "33": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "34": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 31
        }
      },
      "35": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 18
        }
      },
      "36": {
        start: {
          line: 62,
          column: 34
        },
        end: {
          line: 62,
          column: 58
        }
      },
      "37": {
        start: {
          line: 63,
          column: 40
        },
        end: {
          line: 63,
          column: 67
        }
      },
      "38": {
        start: {
          line: 64,
          column: 46
        },
        end: {
          line: 64,
          column: 72
        }
      },
      "39": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 136,
          column: 11
        }
      },
      "40": {
        start: {
          line: 67,
          column: 28
        },
        end: {
          line: 67,
          column: 39
        }
      },
      "41": {
        start: {
          line: 68,
          column: 29
        },
        end: {
          line: 68,
          column: 41
        }
      },
      "42": {
        start: {
          line: 69,
          column: 30
        },
        end: {
          line: 69,
          column: 43
        }
      },
      "43": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 90,
          column: 10
        }
      },
      "44": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 33
        }
      },
      "45": {
        start: {
          line: 73,
          column: 28
        },
        end: {
          line: 73,
          column: 42
        }
      },
      "46": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 89,
          column: 13
        }
      },
      "47": {
        start: {
          line: 75,
          column: 30
        },
        end: {
          line: 84,
          column: 17
        }
      },
      "48": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 88,
          column: 23
        }
      },
      "49": {
        start: {
          line: 85,
          column: 35
        },
        end: {
          line: 88,
          column: 21
        }
      },
      "50": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 110,
          column: 10
        }
      },
      "51": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 34
        }
      },
      "52": {
        start: {
          line: 93,
          column: 28
        },
        end: {
          line: 93,
          column: 42
        }
      },
      "53": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 109,
          column: 13
        }
      },
      "54": {
        start: {
          line: 95,
          column: 30
        },
        end: {
          line: 104,
          column: 17
        }
      },
      "55": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 108,
          column: 23
        }
      },
      "56": {
        start: {
          line: 105,
          column: 35
        },
        end: {
          line: 108,
          column: 21
        }
      },
      "57": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 130,
          column: 10
        }
      },
      "58": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 35
        }
      },
      "59": {
        start: {
          line: 113,
          column: 28
        },
        end: {
          line: 113,
          column: 42
        }
      },
      "60": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 129,
          column: 13
        }
      },
      "61": {
        start: {
          line: 115,
          column: 30
        },
        end: {
          line: 124,
          column: 17
        }
      },
      "62": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 128,
          column: 23
        }
      },
      "63": {
        start: {
          line: 125,
          column: 35
        },
        end: {
          line: 128,
          column: 21
        }
      },
      "64": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 135,
          column: 10
        }
      },
      "65": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 38
        }
      },
      "66": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 40
        }
      },
      "67": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 42
        }
      },
      "68": {
        start: {
          line: 137,
          column: 25
        },
        end: {
          line: 140,
          column: 5
        }
      },
      "69": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 23
        }
      },
      "70": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 31
        }
      },
      "71": {
        start: {
          line: 141,
          column: 26
        },
        end: {
          line: 158,
          column: 5
        }
      },
      "72": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "73": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 146,
          column: 19
        }
      },
      "74": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 150,
          column: 19
        }
      },
      "75": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 154,
          column: 19
        }
      },
      "76": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 28
        }
      },
      "77": {
        start: {
          line: 159,
          column: 27
        },
        end: {
          line: 170,
          column: 5
        }
      },
      "78": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "79": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 53
        }
      },
      "80": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 164,
          column: 55
        }
      },
      "81": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 166,
          column: 49
        }
      },
      "82": {
        start: {
          line: 168,
          column: 16
        },
        end: {
          line: 168,
          column: 51
        }
      },
      "83": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 301,
          column: 7
        }
      },
      "84": {
        start: {
          line: 206,
          column: 49
        },
        end: {
          line: 206,
          column: 75
        }
      },
      "85": {
        start: {
          line: 222,
          column: 60
        },
        end: {
          line: 297,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 33
          }
        },
        loc: {
          start: {
            line: 20,
            column: 47
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 39
          },
          end: {
            line: 24,
            column: 40
          }
        },
        loc: {
          start: {
            line: 24,
            column: 61
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 28,
            column: 9
          },
          end: {
            line: 28,
            column: 34
          }
        },
        loc: {
          start: {
            line: 28,
            column: 53
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 28
      },
      "4": {
        name: "ApiDebugPanel",
        decl: {
          start: {
            line: 61,
            column: 9
          },
          end: {
            line: 61,
            column: 22
          }
        },
        loc: {
          start: {
            line: 61,
            column: 38
          },
          end: {
            line: 302,
            column: 1
          }
        },
        line: 61
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 66,
            column: 26
          },
          end: {
            line: 66,
            column: 27
          }
        },
        loc: {
          start: {
            line: 66,
            column: 30
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 66
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 70,
            column: 22
          },
          end: {
            line: 70,
            column: 23
          }
        },
        loc: {
          start: {
            line: 70,
            column: 33
          },
          end: {
            line: 90,
            column: 9
          }
        },
        line: 70
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 85,
            column: 27
          },
          end: {
            line: 85,
            column: 28
          }
        },
        loc: {
          start: {
            line: 85,
            column: 35
          },
          end: {
            line: 88,
            column: 21
          }
        },
        line: 85
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 91,
            column: 23
          },
          end: {
            line: 91,
            column: 24
          }
        },
        loc: {
          start: {
            line: 91,
            column: 34
          },
          end: {
            line: 110,
            column: 9
          }
        },
        line: 91
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 105,
            column: 27
          },
          end: {
            line: 105,
            column: 28
          }
        },
        loc: {
          start: {
            line: 105,
            column: 35
          },
          end: {
            line: 108,
            column: 21
          }
        },
        line: 105
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 111,
            column: 24
          },
          end: {
            line: 111,
            column: 25
          }
        },
        loc: {
          start: {
            line: 111,
            column: 35
          },
          end: {
            line: 130,
            column: 9
          }
        },
        line: 111
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 125,
            column: 27
          },
          end: {
            line: 125,
            column: 28
          }
        },
        loc: {
          start: {
            line: 125,
            column: 35
          },
          end: {
            line: 128,
            column: 21
          }
        },
        line: 125
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 131,
            column: 15
          },
          end: {
            line: 131,
            column: 16
          }
        },
        loc: {
          start: {
            line: 131,
            column: 19
          },
          end: {
            line: 135,
            column: 9
          }
        },
        line: 131
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 137,
            column: 25
          },
          end: {
            line: 137,
            column: 26
          }
        },
        loc: {
          start: {
            line: 137,
            column: 29
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 137
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 141,
            column: 26
          },
          end: {
            line: 141,
            column: 27
          }
        },
        loc: {
          start: {
            line: 141,
            column: 36
          },
          end: {
            line: 158,
            column: 5
          }
        },
        line: 141
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 159,
            column: 27
          },
          end: {
            line: 159,
            column: 28
          }
        },
        loc: {
          start: {
            line: 159,
            column: 37
          },
          end: {
            line: 170,
            column: 5
          }
        },
        line: 159
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 206,
            column: 45
          },
          end: {
            line: 206,
            column: 46
          }
        },
        loc: {
          start: {
            line: 206,
            column: 49
          },
          end: {
            line: 206,
            column: 75
          }
        },
        line: 206
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 222,
            column: 37
          },
          end: {
            line: 222,
            column: 38
          }
        },
        loc: {
          start: {
            line: 222,
            column: 60
          },
          end: {
            line: 297,
            column: 36
          }
        },
        line: 222
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 15
          },
          end: {
            line: 25,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 29
          },
          end: {
            line: 25,
            column: 45
          }
        }, {
          start: {
            line: 25,
            column: 48
          },
          end: {
            line: 25,
            column: 65
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 20
          }
        }, {
          start: {
            line: 29,
            column: 24
          },
          end: {
            line: 29,
            column: 27
          }
        }, {
          start: {
            line: 29,
            column: 31
          },
          end: {
            line: 29,
            column: 45
          }
        }],
        line: 29
      },
      "4": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "5": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 20
          }
        }, {
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 47
          }
        }, {
          start: {
            line: 32,
            column: 51
          },
          end: {
            line: 32,
            column: 76
          }
        }],
        line: 32
      },
      "6": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "7": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 13
          }
        }, {
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 38,
            column: 31
          }
        }],
        line: 38
      },
      "8": {
        loc: {
          start: {
            line: 44,
            column: 32
          },
          end: {
            line: 44,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 32
          },
          end: {
            line: 44,
            column: 53
          }
        }, {
          start: {
            line: 44,
            column: 57
          },
          end: {
            line: 44,
            column: 88
          }
        }],
        line: 44
      },
      "9": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "10": {
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 46,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 46,
            column: 29
          }
        }, {
          start: {
            line: 46,
            column: 33
          },
          end: {
            line: 46,
            column: 79
          }
        }],
        line: 46
      },
      "11": {
        loc: {
          start: {
            line: 47,
            column: 23
          },
          end: {
            line: 47,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 47
          },
          end: {
            line: 47,
            column: 88
          }
        }, {
          start: {
            line: 47,
            column: 91
          },
          end: {
            line: 47,
            column: 95
          }
        }],
        line: 47
      },
      "12": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 52,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 52,
            column: 13
          }
        }, {
          start: {
            line: 50,
            column: 19
          },
          end: {
            line: 52,
            column: 13
          }
        }],
        line: 48
      },
      "13": {
        loc: {
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 20
          }
        }, {
          start: {
            line: 48,
            column: 25
          },
          end: {
            line: 48,
            column: 33
          }
        }, {
          start: {
            line: 48,
            column: 37
          },
          end: {
            line: 48,
            column: 45
          }
        }],
        line: 48
      },
      "14": {
        loc: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "15": {
        loc: {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "16": {
        loc: {
          start: {
            line: 74,
            column: 16
          },
          end: {
            line: 74,
            column: 153
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 16
          },
          end: {
            line: 74,
            column: 66
          }
        }, {
          start: {
            line: 74,
            column: 70
          },
          end: {
            line: 74,
            column: 117
          }
        }, {
          start: {
            line: 74,
            column: 121
          },
          end: {
            line: 74,
            column: 153
          }
        }],
        line: 74
      },
      "17": {
        loc: {
          start: {
            line: 80,
            column: 28
          },
          end: {
            line: 80,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 80,
            column: 53
          },
          end: {
            line: 80,
            column: 60
          }
        }, {
          start: {
            line: 80,
            column: 63
          },
          end: {
            line: 80,
            column: 115
          }
        }],
        line: 80
      },
      "18": {
        loc: {
          start: {
            line: 80,
            column: 63
          },
          end: {
            line: 80,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 80,
            column: 94
          },
          end: {
            line: 80,
            column: 103
          }
        }, {
          start: {
            line: 80,
            column: 106
          },
          end: {
            line: 80,
            column: 115
          }
        }],
        line: 80
      },
      "19": {
        loc: {
          start: {
            line: 82,
            column: 26
          },
          end: {
            line: 82,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 26
          },
          end: {
            line: 82,
            column: 33
          }
        }, {
          start: {
            line: 82,
            column: 37
          },
          end: {
            line: 82,
            column: 44
          }
        }],
        line: 82
      },
      "20": {
        loc: {
          start: {
            line: 83,
            column: 27
          },
          end: {
            line: 83,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 83,
            column: 52
          },
          end: {
            line: 83,
            column: 59
          }
        }, {
          start: {
            line: 83,
            column: 62
          },
          end: {
            line: 83,
            column: 71
          }
        }],
        line: 83
      },
      "21": {
        loc: {
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "22": {
        loc: {
          start: {
            line: 94,
            column: 16
          },
          end: {
            line: 94,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 16
          },
          end: {
            line: 94,
            column: 62
          }
        }, {
          start: {
            line: 94,
            column: 66
          },
          end: {
            line: 94,
            column: 106
          }
        }],
        line: 94
      },
      "23": {
        loc: {
          start: {
            line: 102,
            column: 26
          },
          end: {
            line: 102,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 26
          },
          end: {
            line: 102,
            column: 33
          }
        }, {
          start: {
            line: 102,
            column: 37
          },
          end: {
            line: 102,
            column: 44
          }
        }],
        line: 102
      },
      "24": {
        loc: {
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 129,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 129,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "25": {
        loc: {
          start: {
            line: 122,
            column: 26
          },
          end: {
            line: 122,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 26
          },
          end: {
            line: 122,
            column: 33
          }
        }, {
          start: {
            line: 122,
            column: 37
          },
          end: {
            line: 122,
            column: 44
          }
        }],
        line: 122
      },
      "26": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 146,
            column: 19
          }
        }, {
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 150,
            column: 19
          }
        }, {
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 154,
            column: 19
          }
        }, {
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 156,
            column: 28
          }
        }],
        line: 142
      },
      "27": {
        loc: {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 162,
            column: 53
          }
        }, {
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 164,
            column: 55
          }
        }, {
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 166,
            column: 49
          }
        }, {
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 168,
            column: 51
          }
        }],
        line: 160
      },
      "28": {
        loc: {
          start: {
            line: 208,
            column: 46
          },
          end: {
            line: 208,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 208,
            column: 59
          },
          end: {
            line: 208,
            column: 69
          }
        }, {
          start: {
            line: 208,
            column: 72
          },
          end: {
            line: 208,
            column: 80
          }
        }],
        line: 208
      },
      "29": {
        loc: {
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 299,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 215,
            column: 22
          }
        }, {
          start: {
            line: 215,
            column: 40
          },
          end: {
            line: 299,
            column: 14
          }
        }],
        line: 215
      },
      "30": {
        loc: {
          start: {
            line: 219,
            column: 30
          },
          end: {
            line: 297,
            column: 37
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 219,
            column: 67
          },
          end: {
            line: 222,
            column: 22
          }
        }, {
          start: {
            line: 222,
            column: 25
          },
          end: {
            line: 297,
            column: 37
          }
        }],
        line: 219
      },
      "31": {
        loc: {
          start: {
            line: 271,
            column: 44
          },
          end: {
            line: 280,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 271,
            column: 44
          },
          end: {
            line: 271,
            column: 55
          }
        }, {
          start: {
            line: 271,
            column: 73
          },
          end: {
            line: 280,
            column: 46
          }
        }],
        line: 271
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0, 0],
      "27": [0, 0, 0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\debug\\ApiDebugPanel.tsx"],
      sourcesContent: ["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport '@/styles/collapsible.css';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from '@/components/ui/collapsible';\r\nimport { ChevronDown, ChevronRight, RefreshCw, AlertTriangle, CheckCircle, XCircle } from 'lucide-react';\r\n\r\ninterface ApiDebugEntry {\r\n  id: string;\r\n  timestamp: Date;\r\n  endpoint: string;\r\n  method: string;\r\n  status: 'success' | 'error' | 'warning';\r\n  responseTime: number;\r\n  data: any;\r\n  error?: string;\r\n  validationResults?: {\r\n    totalReceived: number;\r\n    validItems: number;\r\n    filteredOut: number;\r\n    issues: string[];\r\n  };\r\n}\r\n\r\ninterface ApiDebugPanelProps {\r\n  className?: string;\r\n}\r\n\r\nexport function ApiDebugPanel({ className }: ApiDebugPanelProps) {\r\n  const [entries, setEntries] = useState<ApiDebugEntry[]>([]);\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const [selectedEntry, setSelectedEntry] = useState<string | null>(null);\r\n\r\n  // Interceptar console.log para capturar logs de API\r\n  useEffect(() => {\r\n    const originalLog = console.log;\r\n    const originalWarn = console.warn;\r\n    const originalError = console.error;\r\n\r\n    console.log = (...args) => {\r\n      originalLog(...args);\r\n      \r\n      // Capturar logs espec\xEDficos de API\r\n      const message = args.join(' ');\r\n      if (message.includes('\uD83D\uDD0D Processing orders response:') || \r\n          message.includes('\uD83D\uDD0D Order filtering results:') ||\r\n          message.includes('\uD83D\uDEA8 CRITICAL:')) {\r\n        \r\n        const entry: ApiDebugEntry = {\r\n          id: Date.now().toString(),\r\n          timestamp: new Date(),\r\n          endpoint: '/api/admin/orders',\r\n          method: 'GET',\r\n          status: message.includes('\uD83D\uDEA8') ? 'error' : message.includes('filtered') ? 'warning' : 'success',\r\n          responseTime: 0,\r\n          data: args[1] || args[0],\r\n          error: message.includes('\uD83D\uDEA8') ? message : undefined\r\n        };\r\n\r\n        setEntries(prev => [entry, ...prev.slice(0, 19)]); // Mantener solo 20 entradas\r\n      }\r\n    };\r\n\r\n    console.warn = (...args) => {\r\n      originalWarn(...args);\r\n      \r\n      const message = args.join(' ');\r\n      if (message.includes('\uD83D\uDD0D Order validation failed') || \r\n          message.includes('\uD83D\uDD0D Order has invalid')) {\r\n        \r\n        const entry: ApiDebugEntry = {\r\n          id: Date.now().toString() + '_warn',\r\n          timestamp: new Date(),\r\n          endpoint: '/api/admin/orders',\r\n          method: 'VALIDATION',\r\n          status: 'warning',\r\n          responseTime: 0,\r\n          data: args[1] || args[0],\r\n          error: message\r\n        };\r\n\r\n        setEntries(prev => [entry, ...prev.slice(0, 19)]);\r\n      }\r\n    };\r\n\r\n    console.error = (...args) => {\r\n      originalError(...args);\r\n      \r\n      const message = args.join(' ');\r\n      if (message.includes('\uD83D\uDEA8 CRITICAL:')) {\r\n        \r\n        const entry: ApiDebugEntry = {\r\n          id: Date.now().toString() + '_error',\r\n          timestamp: new Date(),\r\n          endpoint: '/api/admin/orders',\r\n          method: 'VALIDATION',\r\n          status: 'error',\r\n          responseTime: 0,\r\n          data: args[1] || args[0],\r\n          error: message\r\n        };\r\n\r\n        setEntries(prev => [entry, ...prev.slice(0, 19)]);\r\n      }\r\n    };\r\n\r\n    return () => {\r\n      console.log = originalLog;\r\n      console.warn = originalWarn;\r\n      console.error = originalError;\r\n    };\r\n  }, []);\r\n\r\n  const clearEntries = () => {\r\n    setEntries([]);\r\n    setSelectedEntry(null);\r\n  };\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'success': return <CheckCircle className=\"w-4 h-4 text-green-500\" />;\r\n      case 'warning': return <AlertTriangle className=\"w-4 h-4 text-yellow-500\" />;\r\n      case 'error': return <XCircle className=\"w-4 h-4 text-red-500\" />;\r\n      default: return null;\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'success': return 'bg-green-100 text-green-800';\r\n      case 'warning': return 'bg-yellow-100 text-yellow-800';\r\n      case 'error': return 'bg-red-100 text-red-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className={`${className} border-2 border-dashed border-blue-300 bg-blue-50`}>\r\n      <CardHeader className=\"pb-3\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <CardTitle className=\"text-lg font-semibold text-blue-800 flex items-center gap-2\">\r\n            \uD83D\uDD27 API Debug Panel\r\n            <Badge variant=\"outline\" className=\"text-xs\">\r\n              {entries.length} entries\r\n            </Badge>\r\n          </CardTitle>\r\n          <div className=\"flex gap-2\">\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={clearEntries}\r\n              className=\"text-xs\"\r\n            >\r\n              Clear\r\n            </Button>\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={() => setIsExpanded(!isExpanded)}\r\n              className=\"text-xs\"\r\n            >\r\n              {isExpanded ? 'Collapse' : 'Expand'}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      \r\n      {isExpanded && (\r\n        <CardContent className=\"pt-0\">\r\n          <div className=\"space-y-2 max-h-96 overflow-y-auto\">\r\n            {entries.length === 0 ? (\r\n              <div className=\"text-center py-8 text-gray-500\">\r\n                No API calls captured yet. Try refreshing the orders page.\r\n              </div>\r\n            ) : (\r\n              entries.map((entry) => (\r\n                <Collapsible key={entry.id}>\r\n                  <CollapsibleTrigger className=\"w-full\">\r\n                    <div className=\"flex items-center justify-between p-3 bg-white rounded-lg border hover:bg-gray-50 transition-colors\">\r\n                      <div className=\"flex items-center gap-3\">\r\n                        {getStatusIcon(entry.status)}\r\n                        <div className=\"text-left\">\r\n                          <div className=\"font-medium text-sm\">\r\n                            {entry.method} {entry.endpoint}\r\n                          </div>\r\n                          <div className=\"text-xs text-gray-500\">\r\n                            {entry.timestamp.toLocaleTimeString()}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <Badge className={getStatusColor(entry.status)}>\r\n                          {entry.status}\r\n                        </Badge>\r\n                        <ChevronDown className=\"w-4 h-4\" />\r\n                      </div>\r\n                    </div>\r\n                  </CollapsibleTrigger>\r\n                  <CollapsibleContent>\r\n                    <div className=\"mt-2 p-3 bg-gray-50 rounded-lg border\">\r\n                      {entry.error && (\r\n                        <div className=\"mb-3 p-2 bg-red-50 border border-red-200 rounded text-sm text-red-700\">\r\n                          <strong>Error:</strong> {entry.error}\r\n                        </div>\r\n                      )}\r\n                      <div className=\"text-sm\">\r\n                        <strong>Data:</strong>\r\n                        <pre className=\"mt-1 p-2 bg-white border rounded text-xs overflow-x-auto\">\r\n                          {JSON.stringify(entry.data, null, 2)}\r\n                        </pre>\r\n                      </div>\r\n                    </div>\r\n                  </CollapsibleContent>\r\n                </Collapsible>\r\n              ))\r\n            )}\r\n          </div>\r\n        </CardContent>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["ApiDebugPanel", "className", "entries", "setEntries", "useState", "isExpanded", "setIsExpanded", "selectedEntry", "setSelectedEntry", "useEffect", "originalLog", "console", "log", "originalWarn", "warn", "originalError", "error", "args", "message", "join", "includes", "entry", "id", "Date", "now", "toString", "timestamp", "endpoint", "method", "status", "responseTime", "data", "undefined", "prev", "slice", "clearEntries", "getStatusIcon", "CheckCircle", "AlertTriangle", "XCircle", "getStatusColor", "Card", "CardHeader", "div", "CardTitle", "Badge", "variant", "length", "Button", "size", "onClick", "CardContent", "map", "Collapsible", "CollapsibleTrigger", "toLocaleTimeString", "ChevronDown", "CollapsibleContent", "strong", "pre", "JSON", "stringify"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a00f7deee81e256ebb2f83561251f9f44ca96be6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_12kyft54w8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_12kyft54w8();
cov_12kyft54w8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_12kyft54w8().s[1]++;
Object.defineProperty(exports, "ApiDebugPanel", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_12kyft54w8().f[0]++;
    cov_12kyft54w8().s[2]++;
    return ApiDebugPanel;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_12kyft54w8().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_12kyft54w8().s[4]++, _interop_require_wildcard(require("react")));
/* istanbul ignore next */
cov_12kyft54w8().s[5]++;
require("../../../styles/collapsible.css");
const _card =
/* istanbul ignore next */
(cov_12kyft54w8().s[6]++, require("../../ui/card"));
const _button =
/* istanbul ignore next */
(cov_12kyft54w8().s[7]++, require("../../ui/button"));
const _badge =
/* istanbul ignore next */
(cov_12kyft54w8().s[8]++, require("../../ui/badge"));
const _collapsible =
/* istanbul ignore next */
(cov_12kyft54w8().s[9]++, require("../../ui/collapsible"));
const _lucidereact =
/* istanbul ignore next */
(cov_12kyft54w8().s[10]++, require("lucide-react"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_12kyft54w8().f[1]++;
  cov_12kyft54w8().s[11]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_12kyft54w8().b[0][0]++;
    cov_12kyft54w8().s[12]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_12kyft54w8().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_12kyft54w8().s[13]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_12kyft54w8().s[14]++, new WeakMap());
  /* istanbul ignore next */
  cov_12kyft54w8().s[15]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_12kyft54w8().f[2]++;
    cov_12kyft54w8().s[16]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_12kyft54w8().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_12kyft54w8().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_12kyft54w8().f[3]++;
  cov_12kyft54w8().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_12kyft54w8().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_12kyft54w8().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_12kyft54w8().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_12kyft54w8().b[2][0]++;
    cov_12kyft54w8().s[18]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_12kyft54w8().b[2][1]++;
  }
  cov_12kyft54w8().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_12kyft54w8().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_12kyft54w8().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_12kyft54w8().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_12kyft54w8().b[4][0]++;
    cov_12kyft54w8().s[20]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_12kyft54w8().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_12kyft54w8().s[21]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_12kyft54w8().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_12kyft54w8().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_12kyft54w8().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_12kyft54w8().b[6][0]++;
    cov_12kyft54w8().s[23]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_12kyft54w8().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_12kyft54w8().s[24]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_12kyft54w8().s[25]++,
  /* istanbul ignore next */
  (cov_12kyft54w8().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_12kyft54w8().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_12kyft54w8().s[26]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_12kyft54w8().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_12kyft54w8().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_12kyft54w8().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_12kyft54w8().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_12kyft54w8().s[28]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_12kyft54w8().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_12kyft54w8().b[11][1]++, null));
      /* istanbul ignore next */
      cov_12kyft54w8().s[29]++;
      if (
      /* istanbul ignore next */
      (cov_12kyft54w8().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_12kyft54w8().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_12kyft54w8().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_12kyft54w8().b[12][0]++;
        cov_12kyft54w8().s[30]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_12kyft54w8().b[12][1]++;
        cov_12kyft54w8().s[31]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_12kyft54w8().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_12kyft54w8().s[32]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_12kyft54w8().s[33]++;
  if (cache) {
    /* istanbul ignore next */
    cov_12kyft54w8().b[14][0]++;
    cov_12kyft54w8().s[34]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_12kyft54w8().b[14][1]++;
  }
  cov_12kyft54w8().s[35]++;
  return newObj;
}
function ApiDebugPanel({
  className
}) {
  /* istanbul ignore next */
  cov_12kyft54w8().f[4]++;
  const [entries, setEntries] =
  /* istanbul ignore next */
  (cov_12kyft54w8().s[36]++, (0, _react.useState)([]));
  const [isExpanded, setIsExpanded] =
  /* istanbul ignore next */
  (cov_12kyft54w8().s[37]++, (0, _react.useState)(false));
  const [selectedEntry, setSelectedEntry] =
  /* istanbul ignore next */
  (cov_12kyft54w8().s[38]++, (0, _react.useState)(null));
  // Interceptar console.log para capturar logs de API
  /* istanbul ignore next */
  cov_12kyft54w8().s[39]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_12kyft54w8().f[5]++;
    const originalLog =
    /* istanbul ignore next */
    (cov_12kyft54w8().s[40]++, console.log);
    const originalWarn =
    /* istanbul ignore next */
    (cov_12kyft54w8().s[41]++, console.warn);
    const originalError =
    /* istanbul ignore next */
    (cov_12kyft54w8().s[42]++, console.error);
    /* istanbul ignore next */
    cov_12kyft54w8().s[43]++;
    console.log = (...args) => {
      /* istanbul ignore next */
      cov_12kyft54w8().f[6]++;
      cov_12kyft54w8().s[44]++;
      originalLog(...args);
      // Capturar logs específicos de API
      const message =
      /* istanbul ignore next */
      (cov_12kyft54w8().s[45]++, args.join(' '));
      /* istanbul ignore next */
      cov_12kyft54w8().s[46]++;
      if (
      /* istanbul ignore next */
      (cov_12kyft54w8().b[16][0]++, message.includes('🔍 Processing orders response:')) ||
      /* istanbul ignore next */
      (cov_12kyft54w8().b[16][1]++, message.includes('🔍 Order filtering results:')) ||
      /* istanbul ignore next */
      (cov_12kyft54w8().b[16][2]++, message.includes('🚨 CRITICAL:'))) {
        /* istanbul ignore next */
        cov_12kyft54w8().b[15][0]++;
        const entry =
        /* istanbul ignore next */
        (cov_12kyft54w8().s[47]++, {
          id: Date.now().toString(),
          timestamp: new Date(),
          endpoint: '/api/admin/orders',
          method: 'GET',
          status: message.includes('🚨') ?
          /* istanbul ignore next */
          (cov_12kyft54w8().b[17][0]++, 'error') :
          /* istanbul ignore next */
          (cov_12kyft54w8().b[17][1]++, message.includes('filtered') ?
          /* istanbul ignore next */
          (cov_12kyft54w8().b[18][0]++, 'warning') :
          /* istanbul ignore next */
          (cov_12kyft54w8().b[18][1]++, 'success')),
          responseTime: 0,
          data:
          /* istanbul ignore next */
          (cov_12kyft54w8().b[19][0]++, args[1]) ||
          /* istanbul ignore next */
          (cov_12kyft54w8().b[19][1]++, args[0]),
          error: message.includes('🚨') ?
          /* istanbul ignore next */
          (cov_12kyft54w8().b[20][0]++, message) :
          /* istanbul ignore next */
          (cov_12kyft54w8().b[20][1]++, undefined)
        });
        /* istanbul ignore next */
        cov_12kyft54w8().s[48]++;
        setEntries(prev => {
          /* istanbul ignore next */
          cov_12kyft54w8().f[7]++;
          cov_12kyft54w8().s[49]++;
          return [entry, ...prev.slice(0, 19)];
        }); // Mantener solo 20 entradas
      } else
      /* istanbul ignore next */
      {
        cov_12kyft54w8().b[15][1]++;
      }
    };
    /* istanbul ignore next */
    cov_12kyft54w8().s[50]++;
    console.warn = (...args) => {
      /* istanbul ignore next */
      cov_12kyft54w8().f[8]++;
      cov_12kyft54w8().s[51]++;
      originalWarn(...args);
      const message =
      /* istanbul ignore next */
      (cov_12kyft54w8().s[52]++, args.join(' '));
      /* istanbul ignore next */
      cov_12kyft54w8().s[53]++;
      if (
      /* istanbul ignore next */
      (cov_12kyft54w8().b[22][0]++, message.includes('🔍 Order validation failed')) ||
      /* istanbul ignore next */
      (cov_12kyft54w8().b[22][1]++, message.includes('🔍 Order has invalid'))) {
        /* istanbul ignore next */
        cov_12kyft54w8().b[21][0]++;
        const entry =
        /* istanbul ignore next */
        (cov_12kyft54w8().s[54]++, {
          id: Date.now().toString() + '_warn',
          timestamp: new Date(),
          endpoint: '/api/admin/orders',
          method: 'VALIDATION',
          status: 'warning',
          responseTime: 0,
          data:
          /* istanbul ignore next */
          (cov_12kyft54w8().b[23][0]++, args[1]) ||
          /* istanbul ignore next */
          (cov_12kyft54w8().b[23][1]++, args[0]),
          error: message
        });
        /* istanbul ignore next */
        cov_12kyft54w8().s[55]++;
        setEntries(prev => {
          /* istanbul ignore next */
          cov_12kyft54w8().f[9]++;
          cov_12kyft54w8().s[56]++;
          return [entry, ...prev.slice(0, 19)];
        });
      } else
      /* istanbul ignore next */
      {
        cov_12kyft54w8().b[21][1]++;
      }
    };
    /* istanbul ignore next */
    cov_12kyft54w8().s[57]++;
    console.error = (...args) => {
      /* istanbul ignore next */
      cov_12kyft54w8().f[10]++;
      cov_12kyft54w8().s[58]++;
      originalError(...args);
      const message =
      /* istanbul ignore next */
      (cov_12kyft54w8().s[59]++, args.join(' '));
      /* istanbul ignore next */
      cov_12kyft54w8().s[60]++;
      if (message.includes('🚨 CRITICAL:')) {
        /* istanbul ignore next */
        cov_12kyft54w8().b[24][0]++;
        const entry =
        /* istanbul ignore next */
        (cov_12kyft54w8().s[61]++, {
          id: Date.now().toString() + '_error',
          timestamp: new Date(),
          endpoint: '/api/admin/orders',
          method: 'VALIDATION',
          status: 'error',
          responseTime: 0,
          data:
          /* istanbul ignore next */
          (cov_12kyft54w8().b[25][0]++, args[1]) ||
          /* istanbul ignore next */
          (cov_12kyft54w8().b[25][1]++, args[0]),
          error: message
        });
        /* istanbul ignore next */
        cov_12kyft54w8().s[62]++;
        setEntries(prev => {
          /* istanbul ignore next */
          cov_12kyft54w8().f[11]++;
          cov_12kyft54w8().s[63]++;
          return [entry, ...prev.slice(0, 19)];
        });
      } else
      /* istanbul ignore next */
      {
        cov_12kyft54w8().b[24][1]++;
      }
    };
    /* istanbul ignore next */
    cov_12kyft54w8().s[64]++;
    return () => {
      /* istanbul ignore next */
      cov_12kyft54w8().f[12]++;
      cov_12kyft54w8().s[65]++;
      console.log = originalLog;
      /* istanbul ignore next */
      cov_12kyft54w8().s[66]++;
      console.warn = originalWarn;
      /* istanbul ignore next */
      cov_12kyft54w8().s[67]++;
      console.error = originalError;
    };
  }, []);
  /* istanbul ignore next */
  cov_12kyft54w8().s[68]++;
  const clearEntries = () => {
    /* istanbul ignore next */
    cov_12kyft54w8().f[13]++;
    cov_12kyft54w8().s[69]++;
    setEntries([]);
    /* istanbul ignore next */
    cov_12kyft54w8().s[70]++;
    setSelectedEntry(null);
  };
  /* istanbul ignore next */
  cov_12kyft54w8().s[71]++;
  const getStatusIcon = status => {
    /* istanbul ignore next */
    cov_12kyft54w8().f[14]++;
    cov_12kyft54w8().s[72]++;
    switch (status) {
      case 'success':
        /* istanbul ignore next */
        cov_12kyft54w8().b[26][0]++;
        cov_12kyft54w8().s[73]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.CheckCircle, {
          className: "w-4 h-4 text-green-500"
        });
      case 'warning':
        /* istanbul ignore next */
        cov_12kyft54w8().b[26][1]++;
        cov_12kyft54w8().s[74]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
          className: "w-4 h-4 text-yellow-500"
        });
      case 'error':
        /* istanbul ignore next */
        cov_12kyft54w8().b[26][2]++;
        cov_12kyft54w8().s[75]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.XCircle, {
          className: "w-4 h-4 text-red-500"
        });
      default:
        /* istanbul ignore next */
        cov_12kyft54w8().b[26][3]++;
        cov_12kyft54w8().s[76]++;
        return null;
    }
  };
  /* istanbul ignore next */
  cov_12kyft54w8().s[77]++;
  const getStatusColor = status => {
    /* istanbul ignore next */
    cov_12kyft54w8().f[15]++;
    cov_12kyft54w8().s[78]++;
    switch (status) {
      case 'success':
        /* istanbul ignore next */
        cov_12kyft54w8().b[27][0]++;
        cov_12kyft54w8().s[79]++;
        return 'bg-green-100 text-green-800';
      case 'warning':
        /* istanbul ignore next */
        cov_12kyft54w8().b[27][1]++;
        cov_12kyft54w8().s[80]++;
        return 'bg-yellow-100 text-yellow-800';
      case 'error':
        /* istanbul ignore next */
        cov_12kyft54w8().b[27][2]++;
        cov_12kyft54w8().s[81]++;
        return 'bg-red-100 text-red-800';
      default:
        /* istanbul ignore next */
        cov_12kyft54w8().b[27][3]++;
        cov_12kyft54w8().s[82]++;
        return 'bg-gray-100 text-gray-800';
    }
  };
  /* istanbul ignore next */
  cov_12kyft54w8().s[83]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
    className: `${className} border-2 border-dashed border-blue-300 bg-blue-50`,
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
      className: "pb-3",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center justify-between",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardTitle, {
          className: "text-lg font-semibold text-blue-800 flex items-center gap-2",
          children: ["\uD83D\uDD27 API Debug Panel", /*#__PURE__*/(0, _jsxruntime.jsxs)(_badge.Badge, {
            variant: "outline",
            className: "text-xs",
            children: [entries.length, " entries"]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex gap-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
            variant: "outline",
            size: "sm",
            onClick: clearEntries,
            className: "text-xs",
            children: "Clear"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
            variant: "outline",
            size: "sm",
            onClick: () => {
              /* istanbul ignore next */
              cov_12kyft54w8().f[16]++;
              cov_12kyft54w8().s[84]++;
              return setIsExpanded(!isExpanded);
            },
            className: "text-xs",
            children: isExpanded ?
            /* istanbul ignore next */
            (cov_12kyft54w8().b[28][0]++, 'Collapse') :
            /* istanbul ignore next */
            (cov_12kyft54w8().b[28][1]++, 'Expand')
          })]
        })]
      })
    }),
    /* istanbul ignore next */
    (cov_12kyft54w8().b[29][0]++, isExpanded) &&
    /* istanbul ignore next */
    (cov_12kyft54w8().b[29][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
      className: "pt-0",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "space-y-2 max-h-96 overflow-y-auto",
        children: entries.length === 0 ?
        /* istanbul ignore next */
        (/*#__PURE__*/cov_12kyft54w8().b[30][0]++, (0, _jsxruntime.jsx)("div", {
          className: "text-center py-8 text-gray-500",
          children: "No API calls captured yet. Try refreshing the orders page."
        })) :
        /* istanbul ignore next */
        (cov_12kyft54w8().b[30][1]++, entries.map(entry => {
          /* istanbul ignore next */
          cov_12kyft54w8().f[17]++;
          cov_12kyft54w8().s[85]++;
          return /*#__PURE__*/(0, _jsxruntime.jsxs)(_collapsible.Collapsible, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_collapsible.CollapsibleTrigger, {
              className: "w-full",
              children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between p-3 bg-white rounded-lg border hover:bg-gray-50 transition-colors",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center gap-3",
                  children: [getStatusIcon(entry.status), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "text-left",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "font-medium text-sm",
                      children: [entry.method, " ", entry.endpoint]
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "text-xs text-gray-500",
                      children: entry.timestamp.toLocaleTimeString()
                    })]
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center gap-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                    className: getStatusColor(entry.status),
                    children: entry.status
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.ChevronDown, {
                    className: "w-4 h-4"
                  })]
                })]
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_collapsible.CollapsibleContent, {
              children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "mt-2 p-3 bg-gray-50 rounded-lg border",
                children: [
                /* istanbul ignore next */
                (cov_12kyft54w8().b[31][0]++, entry.error) &&
                /* istanbul ignore next */
                (cov_12kyft54w8().b[31][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "mb-3 p-2 bg-red-50 border border-red-200 rounded text-sm text-red-700",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
                    children: "Error:"
                  }), " ", entry.error]
                })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "text-sm",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
                    children: "Data:"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("pre", {
                    className: "mt-1 p-2 bg-white border rounded text-xs overflow-x-auto",
                    children: JSON.stringify(entry.data, null, 2)
                  })]
                })]
              })
            })]
          }, entry.id);
        }))
      })
    }))]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,