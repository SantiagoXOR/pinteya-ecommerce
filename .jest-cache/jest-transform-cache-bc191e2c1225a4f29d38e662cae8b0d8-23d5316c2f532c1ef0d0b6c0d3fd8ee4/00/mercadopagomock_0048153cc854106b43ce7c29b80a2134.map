{"version":3,"names":["cov_qdyrdbck","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","createMockCheckoutUrl","createMockPreference","default","_default","generateTestCardData","isMockEnabled","processMockPayment","simulateWebhook","MOCK_CONFIG","networkDelay","successRate","pendingRate","rejectionRate","baseUrl","process","env","NEXT_PUBLIC_APP_URL","delay","ms","Promise","resolve","setTimeout","data","console","log","preferenceId","_uuid","v4","mockResult","id","init_point","sandbox_init_point","collector_id","client_id","marketplace","operation_type","additional_info","auto_return","back_urls","success","failure","pending","cardData","status","status_detail","cardNumber","lastDigits","slice","random","Math","paymentId","externalReference","replace","redirectUrl","params","URLSearchParams","payment_id","external_reference","merchant_order_id","Date","now","toString","result","redirect_url","NODE_ENV","NEXT_PUBLIC_MOCK_PAYMENTS","paymentData","webhookData","action","api_version","date_created","toISOString","parseInt","live_mode","user_id","response","fetch","method","headers","body","JSON","stringify","ok","error","testCards","number","expiry","cvv","document","floor","length"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\integrations\\mercadopago\\mercadopago-mock.ts"],"sourcesContent":["/**\r\n * MERCADOPAGO MOCK PARA DESARROLLO\r\n * Simula el comportamiento de MercadoPago para testing local\r\n */\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n// Tipos para el mock\r\nexport interface MockPaymentResult {\r\n  success: boolean;\r\n  payment_id: string;\r\n  status: 'approved' | 'rejected' | 'pending';\r\n  status_detail: string;\r\n  external_reference: string;\r\n  redirect_url: string;\r\n}\r\n\r\nexport interface MockPreferenceResult {\r\n  id: string;\r\n  init_point: string;\r\n  sandbox_init_point: string;\r\n  collector_id: number;\r\n  client_id: string;\r\n  marketplace: string;\r\n  operation_type: string;\r\n  additional_info: string;\r\n  auto_return: string;\r\n  back_urls: {\r\n    success: string;\r\n    failure: string;\r\n    pending: string;\r\n  };\r\n}\r\n\r\n// Configuración del mock\r\nconst MOCK_CONFIG = {\r\n  // Simular delay de red\r\n  networkDelay: 1000,\r\n  \r\n  // Probabilidades de resultado (para testing)\r\n  successRate: 0.8, // 80% de pagos exitosos\r\n  pendingRate: 0.1, // 10% de pagos pendientes\r\n  rejectionRate: 0.1, // 10% de pagos rechazados\r\n  \r\n  // URLs base para mock\r\n  baseUrl: process.env.NEXT_PUBLIC_APP_URL || 'http://localhost:3000',\r\n};\r\n\r\n// Simular delay de red\r\nconst delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n/**\r\n * Mock de creación de preferencia\r\n */\r\nexport async function createMockPreference(data: any): Promise<MockPreferenceResult> {\r\n  console.log('🧪 MOCK: Creando preferencia de prueba...');\r\n  \r\n  await delay(MOCK_CONFIG.networkDelay);\r\n  \r\n  const preferenceId = `mock-${uuidv4()}`;\r\n  const mockResult: MockPreferenceResult = {\r\n    id: preferenceId,\r\n    init_point: `${MOCK_CONFIG.baseUrl}/mock/mercadopago/checkout?preference_id=${preferenceId}`,\r\n    sandbox_init_point: `${MOCK_CONFIG.baseUrl}/mock/mercadopago/checkout?preference_id=${preferenceId}&sandbox=true`,\r\n    collector_id: 123456789,\r\n    client_id: 'mock_client_id',\r\n    marketplace: 'NONE',\r\n    operation_type: 'regular_payment',\r\n    additional_info: 'Mock payment for testing',\r\n    auto_return: data.auto_return || 'approved',\r\n    back_urls: {\r\n      success: data.back_urls?.success || `${MOCK_CONFIG.baseUrl}/checkout/success`,\r\n      failure: data.back_urls?.failure || `${MOCK_CONFIG.baseUrl}/checkout/failure`,\r\n      pending: data.back_urls?.pending || `${MOCK_CONFIG.baseUrl}/checkout/pending`,\r\n    }\r\n  };\r\n  \r\n  console.log('✅ MOCK: Preferencia creada:', preferenceId);\r\n  return mockResult;\r\n}\r\n\r\n/**\r\n * Mock de procesamiento de pago\r\n */\r\nexport async function processMockPayment(preferenceId: string, cardData: any): Promise<MockPaymentResult> {\r\n  console.log('🧪 MOCK: Procesando pago de prueba...');\r\n  \r\n  await delay(MOCK_CONFIG.networkDelay * 2); // Simular procesamiento más lento\r\n  \r\n  // Determinar resultado basado en datos de la tarjeta\r\n  let status: 'approved' | 'rejected' | 'pending' = 'approved';\r\n  let status_detail = 'accredited';\r\n  \r\n  // Simular diferentes resultados basados en el número de tarjeta\r\n  if (cardData.cardNumber) {\r\n    const lastDigits = cardData.cardNumber.slice(-4);\r\n    \r\n    // Tarjetas específicas para testing\r\n    switch (lastDigits) {\r\n      case '3704': // Visa aprobada\r\n        status = 'approved';\r\n        status_detail = 'accredited';\r\n        break;\r\n      case '6260': // Visa rechazada\r\n        status = 'rejected';\r\n        status_detail = 'cc_rejected_insufficient_amount';\r\n        break;\r\n      case '0001': // Pendiente\r\n        status = 'pending';\r\n        status_detail = 'pending_contingency';\r\n        break;\r\n      default:\r\n        // Resultado aleatorio basado en configuración\r\n        const random = Math.random();\r\n        if (random < MOCK_CONFIG.successRate) {\r\n          status = 'approved';\r\n          status_detail = 'accredited';\r\n        } else if (random < MOCK_CONFIG.successRate + MOCK_CONFIG.pendingRate) {\r\n          status = 'pending';\r\n          status_detail = 'pending_contingency';\r\n        } else {\r\n          status = 'rejected';\r\n          status_detail = 'cc_rejected_other_reason';\r\n        }\r\n    }\r\n  }\r\n  \r\n  const paymentId = `mock-payment-${uuidv4()}`;\r\n  const externalReference = preferenceId.replace('mock-', 'order-');\r\n  \r\n  // Determinar URL de redirección\r\n  let redirectUrl = `${MOCK_CONFIG.baseUrl}/checkout/success`;\r\n  if (status === 'rejected') {\r\n    redirectUrl = `${MOCK_CONFIG.baseUrl}/checkout/failure`;\r\n  } else if (status === 'pending') {\r\n    redirectUrl = `${MOCK_CONFIG.baseUrl}/checkout/pending`;\r\n  }\r\n  \r\n  // Agregar parámetros de query\r\n  const params = new URLSearchParams({\r\n    payment_id: paymentId,\r\n    status,\r\n    status_detail,\r\n    external_reference: externalReference,\r\n    merchant_order_id: `mock-order-${Date.now()}`,\r\n  });\r\n  \r\n  redirectUrl += `?${params.toString()}`;\r\n  \r\n  const result: MockPaymentResult = {\r\n    success: status === 'approved',\r\n    payment_id: paymentId,\r\n    status,\r\n    status_detail,\r\n    external_reference: externalReference,\r\n    redirect_url: redirectUrl,\r\n  };\r\n  \r\n  console.log(`${status === 'approved' ? '✅' : status === 'pending' ? '⏳' : '❌'} MOCK: Pago ${status}:`, paymentId);\r\n  \r\n  return result;\r\n}\r\n\r\n/**\r\n * Verificar si el modo mock está habilitado\r\n */\r\nexport function isMockEnabled(): boolean {\r\n  return process.env.NODE_ENV === 'development' && \r\n         process.env.NEXT_PUBLIC_MOCK_PAYMENTS === 'true';\r\n}\r\n\r\n/**\r\n * Simular webhook de MercadoPago\r\n */\r\nexport async function simulateWebhook(paymentData: MockPaymentResult) {\r\n  console.log('🧪 MOCK: Simulando webhook...');\r\n  \r\n  const webhookData = {\r\n    action: 'payment.created',\r\n    api_version: 'v1',\r\n    data: {\r\n      id: paymentData.payment_id,\r\n    },\r\n    date_created: new Date().toISOString(),\r\n    id: parseInt(paymentData.payment_id.replace('mock-payment-', '')),\r\n    live_mode: false,\r\n    type: 'payment',\r\n    user_id: 123456789,\r\n  };\r\n  \r\n  try {\r\n    const response = await fetch(`${MOCK_CONFIG.baseUrl}/api/payments/webhook`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'X-Signature': 'mock-signature',\r\n      },\r\n      body: JSON.stringify(webhookData),\r\n    });\r\n    \r\n    if (response.ok) {\r\n      console.log('✅ MOCK: Webhook simulado exitosamente');\r\n    } else {\r\n      console.log('❌ MOCK: Error en webhook simulado');\r\n    }\r\n  } catch (error) {\r\n    console.log('❌ MOCK: Error al simular webhook:', error);\r\n  }\r\n}\r\n\r\n/**\r\n * Generar datos de tarjeta de prueba\r\n */\r\nexport function generateTestCardData() {\r\n  const testCards = [\r\n    {\r\n      number: '4509953566233704',\r\n      name: 'APRO APRO',\r\n      expiry: '11/25',\r\n      cvv: '123',\r\n      document: '12345678',\r\n      result: 'approved'\r\n    },\r\n    {\r\n      number: '4013540682746260',\r\n      name: 'OTHE OTHE',\r\n      expiry: '11/25',\r\n      cvv: '123',\r\n      document: '12345678',\r\n      result: 'rejected'\r\n    },\r\n    {\r\n      number: '5031755734530604',\r\n      name: 'APRO APRO',\r\n      expiry: '11/25',\r\n      cvv: '123',\r\n      document: '12345678',\r\n      result: 'approved'\r\n    }\r\n  ];\r\n  \r\n  return testCards[Math.floor(Math.random() * testCards.length)];\r\n}\r\n\r\n/**\r\n * Crear página de checkout mock\r\n */\r\nexport function createMockCheckoutUrl(preferenceId: string): string {\r\n  return `${MOCK_CONFIG.baseUrl}/mock/mercadopago/checkout?preference_id=${preferenceId}`;\r\n}\r\n\r\nexport default {\r\n  createMockPreference,\r\n  processMockPayment,\r\n  isMockEnabled,\r\n  simulateWebhook,\r\n  generateTestCardData,\r\n  createMockCheckoutUrl,\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;;;GAGC;;AAAA;AAAA,SAAAA,aAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;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","ignoreList":[]}