358c5b7cbd58c7daa818cfb48e3decef
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_193ds5znpz() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\monitoring\\alerts\\route.ts";
  var hash = "c9e717350e12ccbd55e0cf019162ad2e8a7692f5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\monitoring\\alerts\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 21
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 20
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 23
        }
      },
      "8": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "9": {
        start: {
          line: 27,
          column: 19
        },
        end: {
          line: 27,
          column: 64
        }
      },
      "10": {
        start: {
          line: 28,
          column: 21
        },
        end: {
          line: 28,
          column: 74
        }
      },
      "11": {
        start: {
          line: 29,
          column: 18
        },
        end: {
          line: 29,
          column: 69
        }
      },
      "12": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 63
        }
      },
      "13": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 24
        }
      },
      "14": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "15": {
        start: {
          line: 35,
          column: 27
        },
        end: {
          line: 35,
          column: 79
        }
      },
      "16": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "17": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 42,
          column: 15
        }
      },
      "18": {
        start: {
          line: 44,
          column: 29
        },
        end: {
          line: 44,
          column: 57
        }
      },
      "19": {
        start: {
          line: 45,
          column: 23
        },
        end: {
          line: 45,
          column: 49
        }
      },
      "20": {
        start: {
          line: 46,
          column: 22
        },
        end: {
          line: 46,
          column: 47
        }
      },
      "21": {
        start: {
          line: 47,
          column: 22
        },
        end: {
          line: 47,
          column: 65
        }
      },
      "22": {
        start: {
          line: 48,
          column: 23
        },
        end: {
          line: 48,
          column: 66
        }
      },
      "23": {
        start: {
          line: 50,
          column: 25
        },
        end: {
          line: 50,
          column: 63
        }
      },
      "24": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "25": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 61
        }
      },
      "26": {
        start: {
          line: 54,
          column: 20
        },
        end: {
          line: 56,
          column: 44
        }
      },
      "27": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "28": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 47
        }
      },
      "29": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "30": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 45
        }
      },
      "31": {
        start: {
          line: 63,
          column: 40
        },
        end: {
          line: 63,
          column: 51
        }
      },
      "32": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "33": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 72
        }
      },
      "34": {
        start: {
          line: 68,
          column: 32
        },
        end: {
          line: 68,
          column: 174
        }
      },
      "35": {
        start: {
          line: 69,
          column: 27
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "36": {
        start: {
          line: 72,
          column: 41
        },
        end: {
          line: 72,
          column: 59
        }
      },
      "37": {
        start: {
          line: 73,
          column: 44
        },
        end: {
          line: 73,
          column: 65
        }
      },
      "38": {
        start: {
          line: 74,
          column: 45
        },
        end: {
          line: 74,
          column: 67
        }
      },
      "39": {
        start: {
          line: 75,
          column: 46
        },
        end: {
          line: 75,
          column: 69
        }
      },
      "40": {
        start: {
          line: 78,
          column: 43
        },
        end: {
          line: 78,
          column: 64
        }
      },
      "41": {
        start: {
          line: 79,
          column: 49
        },
        end: {
          line: 79,
          column: 76
        }
      },
      "42": {
        start: {
          line: 80,
          column: 45
        },
        end: {
          line: 80,
          column: 68
        }
      },
      "43": {
        start: {
          line: 81,
          column: 47
        },
        end: {
          line: 81,
          column: 72
        }
      },
      "44": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 93,
          column: 39
        }
      },
      "45": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 105,
          column: 11
        }
      },
      "46": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 109,
          column: 39
        }
      },
      "47": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 115,
          column: 11
        }
      },
      "48": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 266,
          column: 5
        }
      },
      "49": {
        start: {
          line: 121,
          column: 27
        },
        end: {
          line: 121,
          column: 79
        }
      },
      "50": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "51": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 128,
          column: 15
        }
      },
      "52": {
        start: {
          line: 130,
          column: 21
        },
        end: {
          line: 130,
          column: 41
        }
      },
      "53": {
        start: {
          line: 131,
          column: 33
        },
        end: {
          line: 131,
          column: 37
        }
      },
      "54": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "55": {
        start: {
          line: 134,
          column: 149
        },
        end: {
          line: 134,
          column: 155
        }
      },
      "56": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 143,
          column: 13
        }
      },
      "57": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 142,
          column: 19
        }
      },
      "58": {
        start: {
          line: 144,
          column: 27
        },
        end: {
          line: 144,
          column: 90
        }
      },
      "59": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 164,
          column: 15
        }
      },
      "60": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 171,
          column: 43
        }
      },
      "61": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 179,
          column: 15
        }
      },
      "62": {
        start: {
          line: 180,
          column: 15
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "63": {
        start: {
          line: 182,
          column: 97
        },
        end: {
          line: 182,
          column: 103
        }
      },
      "64": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 190,
          column: 13
        }
      },
      "65": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 189,
          column: 19
        }
      },
      "66": {
        start: {
          line: 191,
          column: 30
        },
        end: {
          line: 191,
          column: 96
        }
      },
      "67": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 200,
          column: 15
        }
      },
      "68": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 206,
          column: 43
        }
      },
      "69": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 215,
          column: 15
        }
      },
      "70": {
        start: {
          line: 216,
          column: 15
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "71": {
        start: {
          line: 218,
          column: 66
        },
        end: {
          line: 218,
          column: 72
        }
      },
      "72": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 226,
          column: 13
        }
      },
      "73": {
        start: {
          line: 220,
          column: 16
        },
        end: {
          line: 225,
          column: 19
        }
      },
      "74": {
        start: {
          line: 227,
          column: 33
        },
        end: {
          line: 227,
          column: 102
        }
      },
      "75": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 234,
          column: 15
        }
      },
      "76": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 239,
          column: 43
        }
      },
      "77": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 247,
          column: 15
        }
      },
      "78": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 254,
          column: 15
        }
      },
      "79": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 259,
          column: 39
        }
      },
      "80": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 265,
          column: 11
        }
      },
      "81": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 337,
          column: 5
        }
      },
      "82": {
        start: {
          line: 271,
          column: 27
        },
        end: {
          line: 271,
          column: 79
        }
      },
      "83": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 279,
          column: 9
        }
      },
      "84": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 278,
          column: 15
        }
      },
      "85": {
        start: {
          line: 280,
          column: 21
        },
        end: {
          line: 280,
          column: 41
        }
      },
      "86": {
        start: {
          line: 281,
          column: 36
        },
        end: {
          line: 281,
          column: 40
        }
      },
      "87": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 289,
          column: 9
        }
      },
      "88": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 288,
          column: 15
        }
      },
      "89": {
        start: {
          line: 290,
          column: 22
        },
        end: {
          line: 290,
          column: 27
        }
      },
      "90": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 305,
          column: 9
        }
      },
      "91": {
        start: {
          line: 293,
          column: 16
        },
        end: {
          line: 293,
          column: 112
        }
      },
      "92": {
        start: {
          line: 294,
          column: 16
        },
        end: {
          line: 294,
          column: 22
        }
      },
      "93": {
        start: {
          line: 296,
          column: 16
        },
        end: {
          line: 296,
          column: 108
        }
      },
      "94": {
        start: {
          line: 297,
          column: 16
        },
        end: {
          line: 297,
          column: 22
        }
      },
      "95": {
        start: {
          line: 299,
          column: 16
        },
        end: {
          line: 304,
          column: 19
        }
      },
      "96": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 313,
          column: 9
        }
      },
      "97": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 312,
          column: 15
        }
      },
      "98": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 318,
          column: 39
        }
      },
      "99": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 326,
          column: 11
        }
      },
      "100": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 330,
          column: 39
        }
      },
      "101": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 336,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 17
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "GET",
        decl: {
          start: {
            line: 32,
            column: 15
          },
          end: {
            line: 32,
            column: 18
          }
        },
        loc: {
          start: {
            line: 32,
            column: 28
          },
          end: {
            line: 117,
            column: 1
          }
        },
        line: 32
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 72,
            column: 36
          },
          end: {
            line: 72,
            column: 37
          }
        },
        loc: {
          start: {
            line: 72,
            column: 41
          },
          end: {
            line: 72,
            column: 59
          }
        },
        line: 72
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 73,
            column: 39
          },
          end: {
            line: 73,
            column: 40
          }
        },
        loc: {
          start: {
            line: 73,
            column: 44
          },
          end: {
            line: 73,
            column: 65
          }
        },
        line: 73
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 74,
            column: 40
          },
          end: {
            line: 74,
            column: 41
          }
        },
        loc: {
          start: {
            line: 74,
            column: 45
          },
          end: {
            line: 74,
            column: 67
          }
        },
        line: 74
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 75,
            column: 41
          },
          end: {
            line: 75,
            column: 42
          }
        },
        loc: {
          start: {
            line: 75,
            column: 46
          },
          end: {
            line: 75,
            column: 69
          }
        },
        line: 75
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 78,
            column: 38
          },
          end: {
            line: 78,
            column: 39
          }
        },
        loc: {
          start: {
            line: 78,
            column: 43
          },
          end: {
            line: 78,
            column: 64
          }
        },
        line: 78
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 79,
            column: 44
          },
          end: {
            line: 79,
            column: 45
          }
        },
        loc: {
          start: {
            line: 79,
            column: 49
          },
          end: {
            line: 79,
            column: 76
          }
        },
        line: 79
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 80,
            column: 40
          },
          end: {
            line: 80,
            column: 41
          }
        },
        loc: {
          start: {
            line: 80,
            column: 45
          },
          end: {
            line: 80,
            column: 68
          }
        },
        line: 80
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 81,
            column: 42
          },
          end: {
            line: 81,
            column: 43
          }
        },
        loc: {
          start: {
            line: 81,
            column: 47
          },
          end: {
            line: 81,
            column: 72
          }
        },
        line: 81
      },
      "14": {
        name: "POST",
        decl: {
          start: {
            line: 118,
            column: 15
          },
          end: {
            line: 118,
            column: 19
          }
        },
        loc: {
          start: {
            line: 118,
            column: 29
          },
          end: {
            line: 267,
            column: 1
          }
        },
        line: 118
      },
      "15": {
        name: "PATCH",
        decl: {
          start: {
            line: 268,
            column: 15
          },
          end: {
            line: 268,
            column: 20
          }
        },
        loc: {
          start: {
            line: 268,
            column: 30
          },
          end: {
            line: 338,
            column: 1
          }
        },
        line: 268
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "1": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 31
          }
        }, {
          start: {
            line: 36,
            column: 35
          },
          end: {
            line: 36,
            column: 53
          }
        }],
        line: 36
      },
      "2": {
        loc: {
          start: {
            line: 47,
            column: 31
          },
          end: {
            line: 47,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 31
          },
          end: {
            line: 47,
            column: 56
          }
        }, {
          start: {
            line: 47,
            column: 60
          },
          end: {
            line: 47,
            column: 64
          }
        }],
        line: 47
      },
      "3": {
        loc: {
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 58
          }
        }, {
          start: {
            line: 48,
            column: 62
          },
          end: {
            line: 48,
            column: 65
          }
        }],
        line: 48
      },
      "4": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "5": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "6": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "7": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "8": {
        loc: {
          start: {
            line: 70,
            column: 19
          },
          end: {
            line: 70,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 19
          },
          end: {
            line: 70,
            column: 32
          }
        }, {
          start: {
            line: 70,
            column: 36
          },
          end: {
            line: 70,
            column: 37
          }
        }],
        line: 70
      },
      "9": {
        loc: {
          start: {
            line: 72,
            column: 22
          },
          end: {
            line: 72,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 22
          },
          end: {
            line: 72,
            column: 67
          }
        }, {
          start: {
            line: 72,
            column: 71
          },
          end: {
            line: 72,
            column: 72
          }
        }],
        line: 72
      },
      "10": {
        loc: {
          start: {
            line: 73,
            column: 25
          },
          end: {
            line: 73,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 25
          },
          end: {
            line: 73,
            column: 73
          }
        }, {
          start: {
            line: 73,
            column: 77
          },
          end: {
            line: 73,
            column: 78
          }
        }],
        line: 73
      },
      "11": {
        loc: {
          start: {
            line: 74,
            column: 26
          },
          end: {
            line: 74,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 26
          },
          end: {
            line: 74,
            column: 75
          }
        }, {
          start: {
            line: 74,
            column: 79
          },
          end: {
            line: 74,
            column: 80
          }
        }],
        line: 74
      },
      "12": {
        loc: {
          start: {
            line: 75,
            column: 27
          },
          end: {
            line: 75,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 27
          },
          end: {
            line: 75,
            column: 77
          }
        }, {
          start: {
            line: 75,
            column: 81
          },
          end: {
            line: 75,
            column: 82
          }
        }],
        line: 75
      },
      "13": {
        loc: {
          start: {
            line: 78,
            column: 24
          },
          end: {
            line: 78,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 24
          },
          end: {
            line: 78,
            column: 72
          }
        }, {
          start: {
            line: 78,
            column: 76
          },
          end: {
            line: 78,
            column: 77
          }
        }],
        line: 78
      },
      "14": {
        loc: {
          start: {
            line: 79,
            column: 30
          },
          end: {
            line: 79,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 30
          },
          end: {
            line: 79,
            column: 84
          }
        }, {
          start: {
            line: 79,
            column: 88
          },
          end: {
            line: 79,
            column: 89
          }
        }],
        line: 79
      },
      "15": {
        loc: {
          start: {
            line: 80,
            column: 26
          },
          end: {
            line: 80,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 26
          },
          end: {
            line: 80,
            column: 76
          }
        }, {
          start: {
            line: 80,
            column: 80
          },
          end: {
            line: 80,
            column: 81
          }
        }],
        line: 80
      },
      "16": {
        loc: {
          start: {
            line: 81,
            column: 28
          },
          end: {
            line: 81,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 28
          },
          end: {
            line: 81,
            column: 80
          }
        }, {
          start: {
            line: 81,
            column: 84
          },
          end: {
            line: 81,
            column: 85
          }
        }],
        line: 81
      },
      "17": {
        loc: {
          start: {
            line: 86,
            column: 25
          },
          end: {
            line: 86,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 25
          },
          end: {
            line: 86,
            column: 39
          }
        }, {
          start: {
            line: 86,
            column: 43
          },
          end: {
            line: 86,
            column: 44
          }
        }],
        line: 86
      },
      "18": {
        loc: {
          start: {
            line: 97,
            column: 24
          },
          end: {
            line: 97,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 24
          },
          end: {
            line: 97,
            column: 30
          }
        }, {
          start: {
            line: 97,
            column: 34
          },
          end: {
            line: 97,
            column: 36
          }
        }],
        line: 97
      },
      "19": {
        loc: {
          start: {
            line: 108,
            column: 19
          },
          end: {
            line: 108,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 108,
            column: 44
          },
          end: {
            line: 108,
            column: 57
          }
        }, {
          start: {
            line: 108,
            column: 60
          },
          end: {
            line: 108,
            column: 75
          }
        }],
        line: 108
      },
      "20": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "21": {
        loc: {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 122,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 122,
            column: 31
          }
        }, {
          start: {
            line: 122,
            column: 35
          },
          end: {
            line: 122,
            column: 53
          }
        }],
        line: 122
      },
      "22": {
        loc: {
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        }, {
          start: {
            line: 180,
            column: 15
          },
          end: {
            line: 255,
            column: 9
          }
        }],
        line: 132
      },
      "23": {
        loc: {
          start: {
            line: 134,
            column: 130
          },
          end: {
            line: 134,
            column: 144
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 134,
            column: 140
          },
          end: {
            line: 134,
            column: 144
          }
        }],
        line: 134
      },
      "24": {
        loc: {
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "25": {
        loc: {
          start: {
            line: 136,
            column: 16
          },
          end: {
            line: 136,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 16
          },
          end: {
            line: 136,
            column: 21
          }
        }, {
          start: {
            line: 136,
            column: 25
          },
          end: {
            line: 136,
            column: 36
          }
        }, {
          start: {
            line: 136,
            column: 40
          },
          end: {
            line: 136,
            column: 50
          }
        }, {
          start: {
            line: 136,
            column: 54
          },
          end: {
            line: 136,
            column: 77
          }
        }, {
          start: {
            line: 136,
            column: 81
          },
          end: {
            line: 136,
            column: 87
          }
        }],
        line: 136
      },
      "26": {
        loc: {
          start: {
            line: 148,
            column: 29
          },
          end: {
            line: 148,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 29
          },
          end: {
            line: 148,
            column: 40
          }
        }, {
          start: {
            line: 148,
            column: 44
          },
          end: {
            line: 148,
            column: 46
          }
        }],
        line: 148
      },
      "27": {
        loc: {
          start: {
            line: 154,
            column: 33
          },
          end: {
            line: 154,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 33
          },
          end: {
            line: 154,
            column: 48
          }
        }, {
          start: {
            line: 154,
            column: 52
          },
          end: {
            line: 154,
            column: 53
          }
        }],
        line: 154
      },
      "28": {
        loc: {
          start: {
            line: 155,
            column: 26
          },
          end: {
            line: 157,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 26
          },
          end: {
            line: 155,
            column: 34
          }
        }, {
          start: {
            line: 155,
            column: 38
          },
          end: {
            line: 157,
            column: 17
          }
        }],
        line: 155
      },
      "29": {
        loc: {
          start: {
            line: 158,
            column: 33
          },
          end: {
            line: 158,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 33
          },
          end: {
            line: 158,
            column: 48
          }
        }, {
          start: {
            line: 158,
            column: 52
          },
          end: {
            line: 158,
            column: 54
          }
        }],
        line: 158
      },
      "30": {
        loc: {
          start: {
            line: 159,
            column: 22
          },
          end: {
            line: 159,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 22
          },
          end: {
            line: 159,
            column: 26
          }
        }, {
          start: {
            line: 159,
            column: 30
          },
          end: {
            line: 159,
            column: 32
          }
        }],
        line: 159
      },
      "31": {
        loc: {
          start: {
            line: 180,
            column: 15
          },
          end: {
            line: 255,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 15
          },
          end: {
            line: 255,
            column: 9
          }
        }, {
          start: {
            line: 216,
            column: 15
          },
          end: {
            line: 255,
            column: 9
          }
        }],
        line: 180
      },
      "32": {
        loc: {
          start: {
            line: 182,
            column: 59
          },
          end: {
            line: 182,
            column: 73
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 182,
            column: 69
          },
          end: {
            line: 182,
            column: 73
          }
        }],
        line: 182
      },
      "33": {
        loc: {
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 190,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 190,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "34": {
        loc: {
          start: {
            line: 183,
            column: 16
          },
          end: {
            line: 183,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 16
          },
          end: {
            line: 183,
            column: 21
          }
        }, {
          start: {
            line: 183,
            column: 25
          },
          end: {
            line: 183,
            column: 42
          }
        }, {
          start: {
            line: 183,
            column: 46
          },
          end: {
            line: 183,
            column: 53
          }
        }],
        line: 183
      },
      "35": {
        loc: {
          start: {
            line: 196,
            column: 24
          },
          end: {
            line: 196,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 24
          },
          end: {
            line: 196,
            column: 37
          }
        }, {
          start: {
            line: 196,
            column: 41
          },
          end: {
            line: 196,
            column: 43
          }
        }],
        line: 196
      },
      "36": {
        loc: {
          start: {
            line: 216,
            column: 15
          },
          end: {
            line: 255,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 15
          },
          end: {
            line: 255,
            column: 9
          }
        }, {
          start: {
            line: 248,
            column: 15
          },
          end: {
            line: 255,
            column: 9
          }
        }],
        line: 216
      },
      "37": {
        loc: {
          start: {
            line: 218,
            column: 47
          },
          end: {
            line: 218,
            column: 61
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 218,
            column: 57
          },
          end: {
            line: 218,
            column: 61
          }
        }],
        line: 218
      },
      "38": {
        loc: {
          start: {
            line: 219,
            column: 12
          },
          end: {
            line: 226,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 12
          },
          end: {
            line: 226,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "39": {
        loc: {
          start: {
            line: 219,
            column: 16
          },
          end: {
            line: 219,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 219,
            column: 16
          },
          end: {
            line: 219,
            column: 21
          }
        }, {
          start: {
            line: 219,
            column: 25
          },
          end: {
            line: 219,
            column: 36
          }
        }, {
          start: {
            line: 219,
            column: 40
          },
          end: {
            line: 219,
            column: 48
          }
        }],
        line: 219
      },
      "40": {
        loc: {
          start: {
            line: 258,
            column: 19
          },
          end: {
            line: 258,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 258,
            column: 44
          },
          end: {
            line: 258,
            column: 57
          }
        }, {
          start: {
            line: 258,
            column: 60
          },
          end: {
            line: 258,
            column: 75
          }
        }],
        line: 258
      },
      "41": {
        loc: {
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "42": {
        loc: {
          start: {
            line: 272,
            column: 12
          },
          end: {
            line: 272,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 272,
            column: 12
          },
          end: {
            line: 272,
            column: 31
          }
        }, {
          start: {
            line: 272,
            column: 35
          },
          end: {
            line: 272,
            column: 53
          }
        }],
        line: 272
      },
      "43": {
        loc: {
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 289,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 289,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 282
      },
      "44": {
        loc: {
          start: {
            line: 282,
            column: 12
          },
          end: {
            line: 282,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 282,
            column: 12
          },
          end: {
            line: 282,
            column: 20
          }
        }, {
          start: {
            line: 282,
            column: 24
          },
          end: {
            line: 282,
            column: 31
          }
        }],
        line: 282
      },
      "45": {
        loc: {
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 294,
            column: 22
          }
        }, {
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 297,
            column: 22
          }
        }, {
          start: {
            line: 298,
            column: 12
          },
          end: {
            line: 304,
            column: 19
          }
        }],
        line: 291
      },
      "46": {
        loc: {
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 306
      },
      "47": {
        loc: {
          start: {
            line: 329,
            column: 19
          },
          end: {
            line: 329,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 329,
            column: 44
          },
          end: {
            line: 329,
            column: 57
          }
        }, {
          start: {
            line: 329,
            column: 60
          },
          end: {
            line: 329,
            column: 75
          }
        }],
        line: 329
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0],
      "24": [0, 0],
      "25": [0, 0, 0, 0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0],
      "33": [0, 0],
      "34": [0, 0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0],
      "38": [0, 0],
      "39": [0, 0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0, 0],
      "46": [0, 0],
      "47": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\monitoring\\alerts\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - ALERTS MANAGEMENT API\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getAuthenticatedAdmin } from '@/lib/auth/admin-auth';\r\nimport { \r\n  enterpriseAlertSystem,\r\n  AlertLevel,\r\n  NotificationType,\r\n  AlertStatus\r\n} from '@/lib/monitoring/alert-system';\r\nimport { getSupabaseClient } from '@/lib/integrations/supabase';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\n\r\n/**\r\n * GET /api/admin/monitoring/alerts\r\n * Obtiene alertas activas y configuraci\xF3n\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n de admin\r\n    const authResult = await getAuthenticatedAdmin(request);\r\n    \r\n    if (!authResult.isAdmin || !authResult.userId) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Acceso no autorizado'\r\n      }, { status: 401 });\r\n    }\r\n\r\n    const searchParams = request.nextUrl.searchParams;\r\n    const status = searchParams.get('status') as AlertStatus | null;\r\n    const level = searchParams.get('level') as AlertLevel | null;\r\n    const limit = parseInt(searchParams.get('limit') || '50');\r\n    const offset = parseInt(searchParams.get('offset') || '0');\r\n\r\n    // Obtener alertas de la base de datos\r\n    const supabase = getSupabaseClient(true);\r\n    if (!supabase) {\r\n      throw new Error('Supabase client not available');\r\n    }\r\n\r\n    let query = supabase\r\n      .from('enterprise_alerts')\r\n      .select('*')\r\n      .order('triggered_at', { ascending: false })\r\n      .range(offset, offset + limit - 1);\r\n\r\n    if (status) {\r\n      query = query.eq('status', status);\r\n    }\r\n\r\n    if (level) {\r\n      query = query.eq('level', level);\r\n    }\r\n\r\n    const { data: alerts, error } = await query;\r\n\r\n    if (error) {\r\n      throw new Error(`Failed to fetch alerts: ${error.message}`);\r\n    }\r\n\r\n    // Obtener estad\xEDsticas\r\n    const { data: stats } = await supabase\r\n      .from('enterprise_alerts')\r\n      .select('level, status')\r\n      .gte('triggered_at', new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString());\r\n\r\n    const statistics = {\r\n      total: stats?.length || 0,\r\n      byLevel: {\r\n        info: stats?.filter(s => s.level === 'info').length || 0,\r\n        warning: stats?.filter(s => s.level === 'warning').length || 0,\r\n        critical: stats?.filter(s => s.level === 'critical').length || 0,\r\n        emergency: stats?.filter(s => s.level === 'emergency').length || 0\r\n      },\r\n      byStatus: {\r\n        active: stats?.filter(s => s.status === 'active').length || 0,\r\n        acknowledged: stats?.filter(s => s.status === 'acknowledged').length || 0,\r\n        resolved: stats?.filter(s => s.status === 'resolved').length || 0,\r\n        suppressed: stats?.filter(s => s.status === 'suppressed').length || 0\r\n      }\r\n    };\r\n\r\n    logger.info(LogLevel.INFO, 'Alerts retrieved', {\r\n      userId: authResult.userId,\r\n      alertsCount: alerts?.length || 0,\r\n      filters: { status, level, limit, offset }\r\n    }, LogCategory.SYSTEM);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        alerts: alerts || [],\r\n        statistics,\r\n        pagination: {\r\n          limit,\r\n          offset,\r\n          total: statistics.total\r\n        }\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Failed to get alerts', {\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    }, LogCategory.SYSTEM);\r\n\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error interno del servidor'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n/**\r\n * POST /api/admin/monitoring/alerts\r\n * Crea una nueva regla de alerta o canal de notificaci\xF3n\r\n */\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n de admin\r\n    const authResult = await getAuthenticatedAdmin(request);\r\n    \r\n    if (!authResult.isAdmin || !authResult.userId) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Acceso no autorizado'\r\n      }, { status: 401 });\r\n    }\r\n\r\n    const body = await request.json();\r\n    const { type, config } = body;\r\n\r\n    if (type === 'alert_rule') {\r\n      // Crear regla de alerta\r\n      const {\r\n        name,\r\n        description,\r\n        metricName,\r\n        condition,\r\n        threshold,\r\n        level,\r\n        cooldownMinutes,\r\n        channels,\r\n        escalationRules,\r\n        tags,\r\n        enabled = true\r\n      } = config;\r\n\r\n      // Validar datos requeridos\r\n      if (!name || !metricName || !condition || threshold === undefined || !level) {\r\n        return NextResponse.json({\r\n          success: false,\r\n          error: 'Faltan campos requeridos'\r\n        }, { status: 400 });\r\n      }\r\n\r\n      const ruleId = `rule_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n\r\n      enterpriseAlertSystem.setAlertRule({\r\n        id: ruleId,\r\n        name,\r\n        description: description || '',\r\n        enabled,\r\n        metricName,\r\n        condition,\r\n        threshold,\r\n        level,\r\n        cooldownMinutes: cooldownMinutes || 5,\r\n        channels: channels || ['default_log'],\r\n        escalationRules: escalationRules || [],\r\n        tags: tags || {},\r\n        metadata: {\r\n          createdBy: authResult.userId,\r\n          createdAt: new Date().toISOString()\r\n        }\r\n      });\r\n\r\n      logger.info(LogLevel.INFO, 'Alert rule created', {\r\n        ruleId,\r\n        name,\r\n        metricName,\r\n        level,\r\n        createdBy: authResult.userId\r\n      }, LogCategory.SYSTEM);\r\n\r\n      return NextResponse.json({\r\n        success: true,\r\n        data: { ruleId, name, enabled }\r\n      });\r\n\r\n    } else if (type === 'notification_channel') {\r\n      // Crear canal de notificaci\xF3n\r\n      const {\r\n        name,\r\n        notificationType,\r\n        channelConfig,\r\n        enabled = true,\r\n        levels,\r\n        rateLimit\r\n      } = config;\r\n\r\n      if (!name || !notificationType || !levels) {\r\n        return NextResponse.json({\r\n          success: false,\r\n          error: 'Faltan campos requeridos para el canal'\r\n        }, { status: 400 });\r\n      }\r\n\r\n      const channelId = `channel_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n\r\n      enterpriseAlertSystem.setNotificationChannel({\r\n        id: channelId,\r\n        type: notificationType,\r\n        name,\r\n        config: channelConfig || {},\r\n        enabled,\r\n        levels,\r\n        rateLimit\r\n      });\r\n\r\n      logger.info(LogLevel.INFO, 'Notification channel created', {\r\n        channelId,\r\n        name,\r\n        type: notificationType,\r\n        createdBy: authResult.userId\r\n      }, LogCategory.SYSTEM);\r\n\r\n      return NextResponse.json({\r\n        success: true,\r\n        data: { channelId, name, type: notificationType, enabled }\r\n      });\r\n\r\n    } else if (type === 'escalation_rule') {\r\n      // Crear regla de escalamiento\r\n      const {\r\n        name,\r\n        conditions,\r\n        actions,\r\n        enabled = true\r\n      } = config;\r\n\r\n      if (!name || !conditions || !actions) {\r\n        return NextResponse.json({\r\n          success: false,\r\n          error: 'Faltan campos requeridos para la regla de escalamiento'\r\n        }, { status: 400 });\r\n      }\r\n\r\n      const escalationId = `escalation_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n\r\n      enterpriseAlertSystem.setEscalationRule({\r\n        id: escalationId,\r\n        name,\r\n        enabled,\r\n        conditions,\r\n        actions\r\n      });\r\n\r\n      logger.info(LogLevel.INFO, 'Escalation rule created', {\r\n        escalationId,\r\n        name,\r\n        createdBy: authResult.userId\r\n      }, LogCategory.SYSTEM);\r\n\r\n      return NextResponse.json({\r\n        success: true,\r\n        data: { escalationId, name, enabled }\r\n      });\r\n\r\n    } else {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Tipo de configuraci\xF3n no v\xE1lido'\r\n      }, { status: 400 });\r\n    }\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Failed to create alert configuration', {\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    }, LogCategory.SYSTEM);\r\n\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error interno del servidor'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n/**\r\n * PATCH /api/admin/monitoring/alerts\r\n * Actualiza estado de alertas (acknowledge, resolve)\r\n */\r\nexport async function PATCH(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n de admin\r\n    const authResult = await getAuthenticatedAdmin(request);\r\n    \r\n    if (!authResult.isAdmin || !authResult.userId) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Acceso no autorizado'\r\n      }, { status: 401 });\r\n    }\r\n\r\n    const body = await request.json();\r\n    const { alertId, action } = body;\r\n\r\n    if (!alertId || !action) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Faltan alertId y action'\r\n      }, { status: 400 });\r\n    }\r\n\r\n    let success = false;\r\n\r\n    switch (action) {\r\n      case 'acknowledge':\r\n        success = await enterpriseAlertSystem.acknowledgeAlert(alertId, authResult.userId);\r\n        break;\r\n      case 'resolve':\r\n        success = await enterpriseAlertSystem.resolveAlert(alertId, authResult.userId);\r\n        break;\r\n      default:\r\n        return NextResponse.json({\r\n          success: false,\r\n          error: 'Acci\xF3n no v\xE1lida'\r\n        }, { status: 400 });\r\n    }\r\n\r\n    if (!success) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'No se pudo actualizar la alerta'\r\n      }, { status: 404 });\r\n    }\r\n\r\n    logger.info(LogLevel.INFO, `Alert ${action}d`, {\r\n      alertId,\r\n      action,\r\n      userId: authResult.userId\r\n    }, LogCategory.SYSTEM);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: { alertId, action, status: 'updated' }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Failed to update alert', {\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    }, LogCategory.SYSTEM);\r\n\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error interno del servidor'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "PATCH", "POST", "runtime", "request", "authResult", "getAuthenticatedAdmin", "isAdmin", "userId", "NextResponse", "json", "success", "error", "status", "searchParams", "nextUrl", "get", "level", "limit", "parseInt", "offset", "supabase", "getSupabaseClient", "Error", "query", "from", "select", "order", "ascending", "range", "eq", "data", "alerts", "message", "stats", "gte", "Date", "now", "toISOString", "statistics", "total", "length", "byLevel", "info", "filter", "s", "warning", "critical", "emergency", "byStatus", "active", "acknowledged", "resolved", "suppressed", "logger", "LogLevel", "INFO", "alertsCount", "filters", "LogCategory", "SYSTEM", "pagination", "ERROR", "body", "type", "config", "name", "description", "metricName", "condition", "threshold", "cooldownMinutes", "channels", "escalationRules", "tags", "enabled", "undefined", "ruleId", "Math", "random", "toString", "substr", "enterpriseAlertSystem", "setAlertRule", "id", "metadata", "createdBy", "createdAt", "notificationType", "channelConfig", "levels", "rateLimit", "channelId", "setNotificationChannel", "conditions", "actions", "escalationId", "setEscalationRule", "alertId", "action", "acknowledgeAlert", "resolveAlert"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c9e717350e12ccbd55e0cf019162ad2e8a7692f5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_193ds5znpz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_193ds5znpz();
cov_193ds5znpz().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_193ds5znpz().f[0]++;
  cov_193ds5znpz().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_193ds5znpz().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_193ds5znpz().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_193ds5znpz().f[1]++;
    cov_193ds5znpz().s[4]++;
    return GET;
  },
  get PATCH() {
    /* istanbul ignore next */
    cov_193ds5znpz().f[2]++;
    cov_193ds5znpz().s[5]++;
    return PATCH;
  },
  get POST() {
    /* istanbul ignore next */
    cov_193ds5znpz().f[3]++;
    cov_193ds5znpz().s[6]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_193ds5znpz().f[4]++;
    cov_193ds5znpz().s[7]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_193ds5znpz().s[8]++, require("next/server"));
const _adminauth =
/* istanbul ignore next */
(cov_193ds5znpz().s[9]++, require("../../../../../lib/auth/admin-auth"));
const _alertsystem =
/* istanbul ignore next */
(cov_193ds5znpz().s[10]++, require("../../../../../lib/monitoring/alert-system"));
const _supabase =
/* istanbul ignore next */
(cov_193ds5znpz().s[11]++, require("../../../../../lib/integrations/supabase"));
const _logger =
/* istanbul ignore next */
(cov_193ds5znpz().s[12]++, require("../../../../../lib/enterprise/logger"));
const runtime =
/* istanbul ignore next */
(cov_193ds5znpz().s[13]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_193ds5znpz().f[5]++;
  cov_193ds5znpz().s[14]++;
  try {
    // Verificar autenticaciÃ³n de admin
    const authResult =
    /* istanbul ignore next */
    (cov_193ds5znpz().s[15]++, await (0, _adminauth.getAuthenticatedAdmin)(request));
    /* istanbul ignore next */
    cov_193ds5znpz().s[16]++;
    if (
    /* istanbul ignore next */
    (cov_193ds5znpz().b[1][0]++, !authResult.isAdmin) ||
    /* istanbul ignore next */
    (cov_193ds5znpz().b[1][1]++, !authResult.userId)) {
      /* istanbul ignore next */
      cov_193ds5znpz().b[0][0]++;
      cov_193ds5znpz().s[17]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Acceso no autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_193ds5znpz().b[0][1]++;
    }
    const searchParams =
    /* istanbul ignore next */
    (cov_193ds5znpz().s[18]++, request.nextUrl.searchParams);
    const status =
    /* istanbul ignore next */
    (cov_193ds5znpz().s[19]++, searchParams.get('status'));
    const level =
    /* istanbul ignore next */
    (cov_193ds5znpz().s[20]++, searchParams.get('level'));
    const limit =
    /* istanbul ignore next */
    (cov_193ds5znpz().s[21]++, parseInt(
    /* istanbul ignore next */
    (cov_193ds5znpz().b[2][0]++, searchParams.get('limit')) ||
    /* istanbul ignore next */
    (cov_193ds5znpz().b[2][1]++, '50')));
    const offset =
    /* istanbul ignore next */
    (cov_193ds5znpz().s[22]++, parseInt(
    /* istanbul ignore next */
    (cov_193ds5znpz().b[3][0]++, searchParams.get('offset')) ||
    /* istanbul ignore next */
    (cov_193ds5znpz().b[3][1]++, '0')));
    // Obtener alertas de la base de datos
    const supabase =
    /* istanbul ignore next */
    (cov_193ds5znpz().s[23]++, (0, _supabase.getSupabaseClient)(true));
    /* istanbul ignore next */
    cov_193ds5znpz().s[24]++;
    if (!supabase) {
      /* istanbul ignore next */
      cov_193ds5znpz().b[4][0]++;
      cov_193ds5znpz().s[25]++;
      throw new Error('Supabase client not available');
    } else
    /* istanbul ignore next */
    {
      cov_193ds5znpz().b[4][1]++;
    }
    let query =
    /* istanbul ignore next */
    (cov_193ds5znpz().s[26]++, supabase.from('enterprise_alerts').select('*').order('triggered_at', {
      ascending: false
    }).range(offset, offset + limit - 1));
    /* istanbul ignore next */
    cov_193ds5znpz().s[27]++;
    if (status) {
      /* istanbul ignore next */
      cov_193ds5znpz().b[5][0]++;
      cov_193ds5znpz().s[28]++;
      query = query.eq('status', status);
    } else
    /* istanbul ignore next */
    {
      cov_193ds5znpz().b[5][1]++;
    }
    cov_193ds5znpz().s[29]++;
    if (level) {
      /* istanbul ignore next */
      cov_193ds5znpz().b[6][0]++;
      cov_193ds5znpz().s[30]++;
      query = query.eq('level', level);
    } else
    /* istanbul ignore next */
    {
      cov_193ds5znpz().b[6][1]++;
    }
    const {
      data: alerts,
      error
    } =
    /* istanbul ignore next */
    (cov_193ds5znpz().s[31]++, await query);
    /* istanbul ignore next */
    cov_193ds5znpz().s[32]++;
    if (error) {
      /* istanbul ignore next */
      cov_193ds5znpz().b[7][0]++;
      cov_193ds5znpz().s[33]++;
      throw new Error(`Failed to fetch alerts: ${error.message}`);
    } else
    /* istanbul ignore next */
    {
      cov_193ds5znpz().b[7][1]++;
    }
    // Obtener estadÃ­sticas
    const {
      data: stats
    } =
    /* istanbul ignore next */
    (cov_193ds5znpz().s[34]++, await supabase.from('enterprise_alerts').select('level, status').gte('triggered_at', new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString()));
    const statistics =
    /* istanbul ignore next */
    (cov_193ds5znpz().s[35]++, {
      total:
      /* istanbul ignore next */
      (cov_193ds5znpz().b[8][0]++, stats?.length) ||
      /* istanbul ignore next */
      (cov_193ds5znpz().b[8][1]++, 0),
      byLevel: {
        info:
        /* istanbul ignore next */
        (cov_193ds5znpz().b[9][0]++, stats?.filter(s => {
          /* istanbul ignore next */
          cov_193ds5znpz().f[6]++;
          cov_193ds5znpz().s[36]++;
          return s.level === 'info';
        }).length) ||
        /* istanbul ignore next */
        (cov_193ds5znpz().b[9][1]++, 0),
        warning:
        /* istanbul ignore next */
        (cov_193ds5znpz().b[10][0]++, stats?.filter(s => {
          /* istanbul ignore next */
          cov_193ds5znpz().f[7]++;
          cov_193ds5znpz().s[37]++;
          return s.level === 'warning';
        }).length) ||
        /* istanbul ignore next */
        (cov_193ds5znpz().b[10][1]++, 0),
        critical:
        /* istanbul ignore next */
        (cov_193ds5znpz().b[11][0]++, stats?.filter(s => {
          /* istanbul ignore next */
          cov_193ds5znpz().f[8]++;
          cov_193ds5znpz().s[38]++;
          return s.level === 'critical';
        }).length) ||
        /* istanbul ignore next */
        (cov_193ds5znpz().b[11][1]++, 0),
        emergency:
        /* istanbul ignore next */
        (cov_193ds5znpz().b[12][0]++, stats?.filter(s => {
          /* istanbul ignore next */
          cov_193ds5znpz().f[9]++;
          cov_193ds5znpz().s[39]++;
          return s.level === 'emergency';
        }).length) ||
        /* istanbul ignore next */
        (cov_193ds5znpz().b[12][1]++, 0)
      },
      byStatus: {
        active:
        /* istanbul ignore next */
        (cov_193ds5znpz().b[13][0]++, stats?.filter(s => {
          /* istanbul ignore next */
          cov_193ds5znpz().f[10]++;
          cov_193ds5znpz().s[40]++;
          return s.status === 'active';
        }).length) ||
        /* istanbul ignore next */
        (cov_193ds5znpz().b[13][1]++, 0),
        acknowledged:
        /* istanbul ignore next */
        (cov_193ds5znpz().b[14][0]++, stats?.filter(s => {
          /* istanbul ignore next */
          cov_193ds5znpz().f[11]++;
          cov_193ds5znpz().s[41]++;
          return s.status === 'acknowledged';
        }).length) ||
        /* istanbul ignore next */
        (cov_193ds5znpz().b[14][1]++, 0),
        resolved:
        /* istanbul ignore next */
        (cov_193ds5znpz().b[15][0]++, stats?.filter(s => {
          /* istanbul ignore next */
          cov_193ds5znpz().f[12]++;
          cov_193ds5znpz().s[42]++;
          return s.status === 'resolved';
        }).length) ||
        /* istanbul ignore next */
        (cov_193ds5znpz().b[15][1]++, 0),
        suppressed:
        /* istanbul ignore next */
        (cov_193ds5znpz().b[16][0]++, stats?.filter(s => {
          /* istanbul ignore next */
          cov_193ds5znpz().f[13]++;
          cov_193ds5znpz().s[43]++;
          return s.status === 'suppressed';
        }).length) ||
        /* istanbul ignore next */
        (cov_193ds5znpz().b[16][1]++, 0)
      }
    });
    /* istanbul ignore next */
    cov_193ds5znpz().s[44]++;
    _logger.logger.info(_logger.LogLevel.INFO, 'Alerts retrieved', {
      userId: authResult.userId,
      alertsCount:
      /* istanbul ignore next */
      (cov_193ds5znpz().b[17][0]++, alerts?.length) ||
      /* istanbul ignore next */
      (cov_193ds5znpz().b[17][1]++, 0),
      filters: {
        status,
        level,
        limit,
        offset
      }
    }, _logger.LogCategory.SYSTEM);
    /* istanbul ignore next */
    cov_193ds5znpz().s[45]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        alerts:
        /* istanbul ignore next */
        (cov_193ds5znpz().b[18][0]++, alerts) ||
        /* istanbul ignore next */
        (cov_193ds5znpz().b[18][1]++, []),
        statistics,
        pagination: {
          limit,
          offset,
          total: statistics.total
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_193ds5znpz().s[46]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Failed to get alerts', {
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_193ds5znpz().b[19][0]++, error.message) :
      /* istanbul ignore next */
      (cov_193ds5znpz().b[19][1]++, 'Unknown error')
    }, _logger.LogCategory.SYSTEM);
    /* istanbul ignore next */
    cov_193ds5znpz().s[47]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_193ds5znpz().f[14]++;
  cov_193ds5znpz().s[48]++;
  try {
    // Verificar autenticaciÃ³n de admin
    const authResult =
    /* istanbul ignore next */
    (cov_193ds5znpz().s[49]++, await (0, _adminauth.getAuthenticatedAdmin)(request));
    /* istanbul ignore next */
    cov_193ds5znpz().s[50]++;
    if (
    /* istanbul ignore next */
    (cov_193ds5znpz().b[21][0]++, !authResult.isAdmin) ||
    /* istanbul ignore next */
    (cov_193ds5znpz().b[21][1]++, !authResult.userId)) {
      /* istanbul ignore next */
      cov_193ds5znpz().b[20][0]++;
      cov_193ds5znpz().s[51]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Acceso no autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_193ds5znpz().b[20][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_193ds5znpz().s[52]++, await request.json());
    const {
      type,
      config
    } =
    /* istanbul ignore next */
    (cov_193ds5znpz().s[53]++, body);
    /* istanbul ignore next */
    cov_193ds5znpz().s[54]++;
    if (type === 'alert_rule') {
      /* istanbul ignore next */
      cov_193ds5znpz().b[22][0]++;
      // Crear regla de alerta
      const {
        name,
        description,
        metricName,
        condition,
        threshold,
        level,
        cooldownMinutes,
        channels,
        escalationRules,
        tags,
        enabled =
        /* istanbul ignore next */
        (cov_193ds5znpz().b[23][0]++, true)
      } =
      /* istanbul ignore next */
      (cov_193ds5znpz().s[55]++, config);
      // Validar datos requeridos
      /* istanbul ignore next */
      cov_193ds5znpz().s[56]++;
      if (
      /* istanbul ignore next */
      (cov_193ds5znpz().b[25][0]++, !name) ||
      /* istanbul ignore next */
      (cov_193ds5znpz().b[25][1]++, !metricName) ||
      /* istanbul ignore next */
      (cov_193ds5znpz().b[25][2]++, !condition) ||
      /* istanbul ignore next */
      (cov_193ds5znpz().b[25][3]++, threshold === undefined) ||
      /* istanbul ignore next */
      (cov_193ds5znpz().b[25][4]++, !level)) {
        /* istanbul ignore next */
        cov_193ds5znpz().b[24][0]++;
        cov_193ds5znpz().s[57]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Faltan campos requeridos'
        }, {
          status: 400
        });
      } else
      /* istanbul ignore next */
      {
        cov_193ds5znpz().b[24][1]++;
      }
      const ruleId =
      /* istanbul ignore next */
      (cov_193ds5znpz().s[58]++, `rule_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);
      /* istanbul ignore next */
      cov_193ds5znpz().s[59]++;
      _alertsystem.enterpriseAlertSystem.setAlertRule({
        id: ruleId,
        name,
        description:
        /* istanbul ignore next */
        (cov_193ds5znpz().b[26][0]++, description) ||
        /* istanbul ignore next */
        (cov_193ds5znpz().b[26][1]++, ''),
        enabled,
        metricName,
        condition,
        threshold,
        level,
        cooldownMinutes:
        /* istanbul ignore next */
        (cov_193ds5znpz().b[27][0]++, cooldownMinutes) ||
        /* istanbul ignore next */
        (cov_193ds5znpz().b[27][1]++, 5),
        channels:
        /* istanbul ignore next */
        (cov_193ds5znpz().b[28][0]++, channels) ||
        /* istanbul ignore next */
        (cov_193ds5znpz().b[28][1]++, ['default_log']),
        escalationRules:
        /* istanbul ignore next */
        (cov_193ds5znpz().b[29][0]++, escalationRules) ||
        /* istanbul ignore next */
        (cov_193ds5znpz().b[29][1]++, []),
        tags:
        /* istanbul ignore next */
        (cov_193ds5znpz().b[30][0]++, tags) ||
        /* istanbul ignore next */
        (cov_193ds5znpz().b[30][1]++, {}),
        metadata: {
          createdBy: authResult.userId,
          createdAt: new Date().toISOString()
        }
      });
      /* istanbul ignore next */
      cov_193ds5znpz().s[60]++;
      _logger.logger.info(_logger.LogLevel.INFO, 'Alert rule created', {
        ruleId,
        name,
        metricName,
        level,
        createdBy: authResult.userId
      }, _logger.LogCategory.SYSTEM);
      /* istanbul ignore next */
      cov_193ds5znpz().s[61]++;
      return _server.NextResponse.json({
        success: true,
        data: {
          ruleId,
          name,
          enabled
        }
      });
    } else {
      /* istanbul ignore next */
      cov_193ds5znpz().b[22][1]++;
      cov_193ds5znpz().s[62]++;
      if (type === 'notification_channel') {
        /* istanbul ignore next */
        cov_193ds5znpz().b[31][0]++;
        // Crear canal de notificaciÃ³n
        const {
          name,
          notificationType,
          channelConfig,
          enabled =
          /* istanbul ignore next */
          (cov_193ds5znpz().b[32][0]++, true),
          levels,
          rateLimit
        } =
        /* istanbul ignore next */
        (cov_193ds5znpz().s[63]++, config);
        /* istanbul ignore next */
        cov_193ds5znpz().s[64]++;
        if (
        /* istanbul ignore next */
        (cov_193ds5znpz().b[34][0]++, !name) ||
        /* istanbul ignore next */
        (cov_193ds5znpz().b[34][1]++, !notificationType) ||
        /* istanbul ignore next */
        (cov_193ds5znpz().b[34][2]++, !levels)) {
          /* istanbul ignore next */
          cov_193ds5znpz().b[33][0]++;
          cov_193ds5znpz().s[65]++;
          return _server.NextResponse.json({
            success: false,
            error: 'Faltan campos requeridos para el canal'
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_193ds5znpz().b[33][1]++;
        }
        const channelId =
        /* istanbul ignore next */
        (cov_193ds5znpz().s[66]++, `channel_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);
        /* istanbul ignore next */
        cov_193ds5znpz().s[67]++;
        _alertsystem.enterpriseAlertSystem.setNotificationChannel({
          id: channelId,
          type: notificationType,
          name,
          config:
          /* istanbul ignore next */
          (cov_193ds5znpz().b[35][0]++, channelConfig) ||
          /* istanbul ignore next */
          (cov_193ds5znpz().b[35][1]++, {}),
          enabled,
          levels,
          rateLimit
        });
        /* istanbul ignore next */
        cov_193ds5znpz().s[68]++;
        _logger.logger.info(_logger.LogLevel.INFO, 'Notification channel created', {
          channelId,
          name,
          type: notificationType,
          createdBy: authResult.userId
        }, _logger.LogCategory.SYSTEM);
        /* istanbul ignore next */
        cov_193ds5znpz().s[69]++;
        return _server.NextResponse.json({
          success: true,
          data: {
            channelId,
            name,
            type: notificationType,
            enabled
          }
        });
      } else {
        /* istanbul ignore next */
        cov_193ds5znpz().b[31][1]++;
        cov_193ds5znpz().s[70]++;
        if (type === 'escalation_rule') {
          /* istanbul ignore next */
          cov_193ds5znpz().b[36][0]++;
          // Crear regla de escalamiento
          const {
            name,
            conditions,
            actions,
            enabled =
            /* istanbul ignore next */
            (cov_193ds5znpz().b[37][0]++, true)
          } =
          /* istanbul ignore next */
          (cov_193ds5znpz().s[71]++, config);
          /* istanbul ignore next */
          cov_193ds5znpz().s[72]++;
          if (
          /* istanbul ignore next */
          (cov_193ds5znpz().b[39][0]++, !name) ||
          /* istanbul ignore next */
          (cov_193ds5znpz().b[39][1]++, !conditions) ||
          /* istanbul ignore next */
          (cov_193ds5znpz().b[39][2]++, !actions)) {
            /* istanbul ignore next */
            cov_193ds5znpz().b[38][0]++;
            cov_193ds5znpz().s[73]++;
            return _server.NextResponse.json({
              success: false,
              error: 'Faltan campos requeridos para la regla de escalamiento'
            }, {
              status: 400
            });
          } else
          /* istanbul ignore next */
          {
            cov_193ds5znpz().b[38][1]++;
          }
          const escalationId =
          /* istanbul ignore next */
          (cov_193ds5znpz().s[74]++, `escalation_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);
          /* istanbul ignore next */
          cov_193ds5znpz().s[75]++;
          _alertsystem.enterpriseAlertSystem.setEscalationRule({
            id: escalationId,
            name,
            enabled,
            conditions,
            actions
          });
          /* istanbul ignore next */
          cov_193ds5znpz().s[76]++;
          _logger.logger.info(_logger.LogLevel.INFO, 'Escalation rule created', {
            escalationId,
            name,
            createdBy: authResult.userId
          }, _logger.LogCategory.SYSTEM);
          /* istanbul ignore next */
          cov_193ds5znpz().s[77]++;
          return _server.NextResponse.json({
            success: true,
            data: {
              escalationId,
              name,
              enabled
            }
          });
        } else {
          /* istanbul ignore next */
          cov_193ds5znpz().b[36][1]++;
          cov_193ds5znpz().s[78]++;
          return _server.NextResponse.json({
            success: false,
            error: 'Tipo de configuraciÃ³n no vÃ¡lido'
          }, {
            status: 400
          });
        }
      }
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_193ds5znpz().s[79]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Failed to create alert configuration', {
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_193ds5znpz().b[40][0]++, error.message) :
      /* istanbul ignore next */
      (cov_193ds5znpz().b[40][1]++, 'Unknown error')
    }, _logger.LogCategory.SYSTEM);
    /* istanbul ignore next */
    cov_193ds5znpz().s[80]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function PATCH(request) {
  /* istanbul ignore next */
  cov_193ds5znpz().f[15]++;
  cov_193ds5znpz().s[81]++;
  try {
    // Verificar autenticaciÃ³n de admin
    const authResult =
    /* istanbul ignore next */
    (cov_193ds5znpz().s[82]++, await (0, _adminauth.getAuthenticatedAdmin)(request));
    /* istanbul ignore next */
    cov_193ds5znpz().s[83]++;
    if (
    /* istanbul ignore next */
    (cov_193ds5znpz().b[42][0]++, !authResult.isAdmin) ||
    /* istanbul ignore next */
    (cov_193ds5znpz().b[42][1]++, !authResult.userId)) {
      /* istanbul ignore next */
      cov_193ds5znpz().b[41][0]++;
      cov_193ds5znpz().s[84]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Acceso no autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_193ds5znpz().b[41][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_193ds5znpz().s[85]++, await request.json());
    const {
      alertId,
      action
    } =
    /* istanbul ignore next */
    (cov_193ds5znpz().s[86]++, body);
    /* istanbul ignore next */
    cov_193ds5znpz().s[87]++;
    if (
    /* istanbul ignore next */
    (cov_193ds5znpz().b[44][0]++, !alertId) ||
    /* istanbul ignore next */
    (cov_193ds5znpz().b[44][1]++, !action)) {
      /* istanbul ignore next */
      cov_193ds5znpz().b[43][0]++;
      cov_193ds5znpz().s[88]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Faltan alertId y action'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_193ds5znpz().b[43][1]++;
    }
    let success =
    /* istanbul ignore next */
    (cov_193ds5znpz().s[89]++, false);
    /* istanbul ignore next */
    cov_193ds5znpz().s[90]++;
    switch (action) {
      case 'acknowledge':
        /* istanbul ignore next */
        cov_193ds5znpz().b[45][0]++;
        cov_193ds5znpz().s[91]++;
        success = await _alertsystem.enterpriseAlertSystem.acknowledgeAlert(alertId, authResult.userId);
        /* istanbul ignore next */
        cov_193ds5znpz().s[92]++;
        break;
      case 'resolve':
        /* istanbul ignore next */
        cov_193ds5znpz().b[45][1]++;
        cov_193ds5znpz().s[93]++;
        success = await _alertsystem.enterpriseAlertSystem.resolveAlert(alertId, authResult.userId);
        /* istanbul ignore next */
        cov_193ds5znpz().s[94]++;
        break;
      default:
        /* istanbul ignore next */
        cov_193ds5znpz().b[45][2]++;
        cov_193ds5znpz().s[95]++;
        return _server.NextResponse.json({
          success: false,
          error: 'AcciÃ³n no vÃ¡lida'
        }, {
          status: 400
        });
    }
    /* istanbul ignore next */
    cov_193ds5znpz().s[96]++;
    if (!success) {
      /* istanbul ignore next */
      cov_193ds5znpz().b[46][0]++;
      cov_193ds5znpz().s[97]++;
      return _server.NextResponse.json({
        success: false,
        error: 'No se pudo actualizar la alerta'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_193ds5znpz().b[46][1]++;
    }
    cov_193ds5znpz().s[98]++;
    _logger.logger.info(_logger.LogLevel.INFO, `Alert ${action}d`, {
      alertId,
      action,
      userId: authResult.userId
    }, _logger.LogCategory.SYSTEM);
    /* istanbul ignore next */
    cov_193ds5znpz().s[99]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        alertId,
        action,
        status: 'updated'
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_193ds5znpz().s[100]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Failed to update alert', {
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_193ds5znpz().b[47][0]++, error.message) :
      /* istanbul ignore next */
      (cov_193ds5znpz().b[47][1]++, 'Unknown error')
    }, _logger.LogCategory.SYSTEM);
    /* istanbul ignore next */
    cov_193ds5znpz().s[101]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,