612a334700cbac9f9ae863a8c5e949d6
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_2654neh42p() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\preferences\\display\\route.ts";
  var hash = "0e4e7151761169bf776c8e15b3860ca36620ec06";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\preferences\\display\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 21
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 57
        }
      },
      "8": {
        start: {
          line: 22,
          column: 18
        },
        end: {
          line: 22,
          column: 69
        }
      },
      "9": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 23,
          column: 77
        }
      },
      "10": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 24
        }
      },
      "11": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "12": {
        start: {
          line: 27,
          column: 24
        },
        end: {
          line: 27,
          column: 49
        }
      },
      "13": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "14": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 33,
          column: 15
        }
      },
      "15": {
        start: {
          line: 35,
          column: 23
        },
        end: {
          line: 35,
          column: 38
        }
      },
      "16": {
        start: {
          line: 36,
          column: 21
        },
        end: {
          line: 36,
          column: 41
        }
      },
      "17": {
        start: {
          line: 37,
          column: 28
        },
        end: {
          line: 37,
          column: 32
        }
      },
      "18": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "19": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 43,
          column: 15
        }
      },
      "20": {
        start: {
          line: 46,
          column: 33
        },
        end: {
          line: 46,
          column: 65
        }
      },
      "21": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "22": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 52,
          column: 15
        }
      },
      "23": {
        start: {
          line: 55,
          column: 58
        },
        end: {
          line: 55,
          column: 165
        }
      },
      "24": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "25": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 81
        }
      },
      "26": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 62,
          column: 15
        }
      },
      "27": {
        start: {
          line: 65,
          column: 30
        },
        end: {
          line: 65,
          column: 61
        }
      },
      "28": {
        start: {
          line: 66,
          column: 35
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "29": {
        start: {
          line: 74,
          column: 46
        },
        end: {
          line: 78,
          column: 28
        }
      },
      "30": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "31": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 81
        }
      },
      "32": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 85,
          column: 15
        }
      },
      "33": {
        start: {
          line: 88,
          column: 28
        },
        end: {
          line: 88,
          column: 72
        }
      },
      "34": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 95,
          column: 24
        }
      },
      "35": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 100,
          column: 11
        }
      },
      "36": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 78
        }
      },
      "37": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 107,
          column: 11
        }
      },
      "38": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 168,
          column: 5
        }
      },
      "39": {
        start: {
          line: 113,
          column: 26
        },
        end: {
          line: 113,
          column: 28
        }
      },
      "40": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "41": {
        start: {
          line: 116,
          column: 39
        },
        end: {
          line: 120,
          column: 13
        }
      },
      "42": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 123,
          column: 13
        }
      },
      "43": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 54
        }
      },
      "44": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "45": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 135,
          column: 13
        }
      },
      "46": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 131,
          column: 19
        }
      },
      "47": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 132,
          column: 54
        }
      },
      "48": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "49": {
        start: {
          line: 139,
          column: 40
        },
        end: {
          line: 148,
          column: 13
        }
      },
      "50": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 151,
          column: 13
        }
      },
      "51": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 150,
          column: 54
        }
      },
      "52": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "53": {
        start: {
          line: 155,
          column: 36
        },
        end: {
          line: 159,
          column: 13
        }
      },
      "54": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 162,
          column: 13
        }
      },
      "55": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 48
        }
      },
      "56": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 68
        }
      },
      "57": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 77
        }
      },
      "58": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 17
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "PATCH",
        decl: {
          start: {
            line: 25,
            column: 15
          },
          end: {
            line: 25,
            column: 20
          }
        },
        loc: {
          start: {
            line: 25,
            column: 30
          },
          end: {
            line: 109,
            column: 1
          }
        },
        line: 25
      },
      "4": {
        name: "validateDisplaySettings",
        decl: {
          start: {
            line: 111,
            column: 9
          },
          end: {
            line: 111,
            column: 32
          }
        },
        loc: {
          start: {
            line: 111,
            column: 42
          },
          end: {
            line: 169,
            column: 1
          }
        },
        line: 111
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "3": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "4": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 22
          }
        }, {
          start: {
            line: 56,
            column: 26
          },
          end: {
            line: 56,
            column: 56
          }
        }],
        line: 56
      },
      "5": {
        loc: {
          start: {
            line: 65,
            column: 30
          },
          end: {
            line: 65,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 30
          },
          end: {
            line: 65,
            column: 55
          }
        }, {
          start: {
            line: 65,
            column: 59
          },
          end: {
            line: 65,
            column: 61
          }
        }],
        line: 65
      },
      "6": {
        loc: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "7": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "8": {
        loc: {
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "9": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "10": {
        loc: {
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "11": {
        loc: {
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 151,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 151,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "12": {
        loc: {
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "13": {
        loc: {
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "14": {
        loc: {
          start: {
            line: 164,
            column: 15
          },
          end: {
            line: 164,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 164,
            column: 51
          },
          end: {
            line: 164,
            column: 60
          }
        }, {
          start: {
            line: 164,
            column: 63
          },
          end: {
            line: 164,
            column: 67
          }
        }],
        line: 164
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\preferences\\display\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API DE PREFERENCIAS DE DISPLAY\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { logPreferenceActivity, getRequestInfo } from '@/lib/activity/activityLogger';\r\n\r\n// PATCH - Actualizar preferencias de display\r\nexport async function PATCH(request: NextRequest) {\r\n  try {\r\n    const session = await auth();\r\n    if (!session?.user?.id) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n    const body = await request.json();\r\n    const { display } = body;\r\n\r\n    if (!display) {\r\n      return NextResponse.json(\r\n        { error: 'Configuraci\xF3n de display requerida' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Validar configuraciones de display\r\n    const validatedDisplay = validateDisplaySettings(display);\r\n    if (!validatedDisplay) {\r\n      return NextResponse.json(\r\n        { error: 'Configuraci\xF3n de display inv\xE1lida' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Obtener preferencias actuales\r\n    const { data: currentPrefs, error: fetchError } = await supabaseAdmin\r\n      .from('user_preferences')\r\n      .select('preferences')\r\n      .eq('user_id', userId)\r\n      .single();\r\n\r\n    if (fetchError && fetchError.code !== 'PGRST116') {\r\n      console.error('Error al obtener preferencias actuales:', fetchError);\r\n      return NextResponse.json(\r\n        { error: 'Error al obtener preferencias actuales' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Combinar con preferencias existentes\r\n    const existingPrefs = currentPrefs?.preferences || {};\r\n    const updatedPreferences = {\r\n      ...existingPrefs,\r\n      display: {\r\n        ...existingPrefs.display,\r\n        ...validatedDisplay,\r\n      },\r\n    };\r\n\r\n    // Actualizar en la base de datos\r\n    const { data: updatedPrefs, error } = await supabaseAdmin\r\n      .from('user_preferences')\r\n      .upsert({\r\n        user_id: userId,\r\n        preferences: updatedPreferences,\r\n        updated_at: new Date().toISOString(),\r\n      })\r\n      .select()\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('Error al actualizar preferencias de display:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al actualizar preferencias de display' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Registrar actividad\r\n    const requestInfo = getRequestInfo(request);\r\n    await logPreferenceActivity(\r\n      userId,\r\n      'update_display',\r\n      {\r\n        updated_settings: Object.keys(validatedDisplay),\r\n        language: validatedDisplay.language,\r\n        timezone: validatedDisplay.timezone,\r\n        currency: validatedDisplay.currency,\r\n        theme: validatedDisplay.theme,\r\n      },\r\n      requestInfo\r\n    );\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      display: updatedPrefs.preferences.display,\r\n      message: 'Preferencias de display actualizadas correctamente',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en PATCH /api/user/preferences/display:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// Funci\xF3n para validar configuraciones de display\r\nfunction validateDisplaySettings(display: any): any | null {\r\n  try {\r\n    const validated: any = {};\r\n\r\n    // Validar idioma\r\n    if (display.language) {\r\n      const supportedLanguages = ['es', 'en', 'pt'];\r\n      if (supportedLanguages.includes(display.language)) {\r\n        validated.language = display.language;\r\n      }\r\n    }\r\n\r\n    // Validar zona horaria\r\n    if (display.timezone) {\r\n      try {\r\n        // Verificar que la zona horaria sea v\xE1lida\r\n        Intl.DateTimeFormat(undefined, { timeZone: display.timezone });\r\n        validated.timezone = display.timezone;\r\n      } catch {\r\n        // Zona horaria inv\xE1lida, no incluir en la validaci\xF3n\r\n      }\r\n    }\r\n\r\n    // Validar moneda\r\n    if (display.currency) {\r\n      const supportedCurrencies = ['ARS', 'USD', 'EUR', 'BRL', 'CLP', 'COP', 'MXN', 'PEN'];\r\n      if (supportedCurrencies.includes(display.currency)) {\r\n        validated.currency = display.currency;\r\n      }\r\n    }\r\n\r\n    // Validar tema\r\n    if (display.theme) {\r\n      const supportedThemes = ['light', 'dark', 'system'];\r\n      if (supportedThemes.includes(display.theme)) {\r\n        validated.theme = display.theme;\r\n      }\r\n    }\r\n\r\n    return Object.keys(validated).length > 0 ? validated : null;\r\n  } catch (error) {\r\n    console.error('Error al validar configuraciones de display:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["PATCH", "runtime", "request", "session", "auth", "user", "id", "NextResponse", "json", "error", "status", "userId", "body", "display", "validatedDisplay", "validateDisplaySettings", "data", "currentPrefs", "fetchError", "supabaseAdmin", "from", "select", "eq", "single", "code", "console", "existingPrefs", "preferences", "updatedPreferences", "updatedPrefs", "upsert", "user_id", "updated_at", "Date", "toISOString", "requestInfo", "getRequestInfo", "logPreferenceActivity", "updated_settings", "Object", "keys", "language", "timezone", "currency", "theme", "success", "message", "validated", "supportedLanguages", "includes", "Intl", "DateTimeFormat", "undefined", "timeZone", "supportedCurrencies", "supportedThemes", "length"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0e4e7151761169bf776c8e15b3860ca36620ec06"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2654neh42p = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2654neh42p();
cov_2654neh42p().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2654neh42p().f[0]++;
  cov_2654neh42p().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2654neh42p().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2654neh42p().s[3]++;
_export(exports, {
  get PATCH() {
    /* istanbul ignore next */
    cov_2654neh42p().f[1]++;
    cov_2654neh42p().s[4]++;
    return PATCH;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_2654neh42p().f[2]++;
    cov_2654neh42p().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_2654neh42p().s[6]++, require("next/server"));
const _config =
/* istanbul ignore next */
(cov_2654neh42p().s[7]++, require("../../../../../lib/auth/config"));
const _supabase =
/* istanbul ignore next */
(cov_2654neh42p().s[8]++, require("../../../../../lib/integrations/supabase"));
const _activityLogger =
/* istanbul ignore next */
(cov_2654neh42p().s[9]++, require("../../../../../lib/activity/activityLogger"));
const runtime =
/* istanbul ignore next */
(cov_2654neh42p().s[10]++, 'nodejs');
async function PATCH(request) {
  /* istanbul ignore next */
  cov_2654neh42p().f[3]++;
  cov_2654neh42p().s[11]++;
  try {
    const session =
    /* istanbul ignore next */
    (cov_2654neh42p().s[12]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_2654neh42p().s[13]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_2654neh42p().b[0][0]++;
      cov_2654neh42p().s[14]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2654neh42p().b[0][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_2654neh42p().s[15]++, session.user.id);
    const body =
    /* istanbul ignore next */
    (cov_2654neh42p().s[16]++, await request.json());
    const {
      display
    } =
    /* istanbul ignore next */
    (cov_2654neh42p().s[17]++, body);
    /* istanbul ignore next */
    cov_2654neh42p().s[18]++;
    if (!display) {
      /* istanbul ignore next */
      cov_2654neh42p().b[1][0]++;
      cov_2654neh42p().s[19]++;
      return _server.NextResponse.json({
        error: 'ConfiguraciÃ³n de display requerida'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2654neh42p().b[1][1]++;
    }
    // Validar configuraciones de display
    const validatedDisplay =
    /* istanbul ignore next */
    (cov_2654neh42p().s[20]++, validateDisplaySettings(display));
    /* istanbul ignore next */
    cov_2654neh42p().s[21]++;
    if (!validatedDisplay) {
      /* istanbul ignore next */
      cov_2654neh42p().b[2][0]++;
      cov_2654neh42p().s[22]++;
      return _server.NextResponse.json({
        error: 'ConfiguraciÃ³n de display invÃ¡lida'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2654neh42p().b[2][1]++;
    }
    // Obtener preferencias actuales
    const {
      data: currentPrefs,
      error: fetchError
    } =
    /* istanbul ignore next */
    (cov_2654neh42p().s[23]++, await _supabase.supabaseAdmin.from('user_preferences').select('preferences').eq('user_id', userId).single());
    /* istanbul ignore next */
    cov_2654neh42p().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_2654neh42p().b[4][0]++, fetchError) &&
    /* istanbul ignore next */
    (cov_2654neh42p().b[4][1]++, fetchError.code !== 'PGRST116')) {
      /* istanbul ignore next */
      cov_2654neh42p().b[3][0]++;
      cov_2654neh42p().s[25]++;
      console.error('Error al obtener preferencias actuales:', fetchError);
      /* istanbul ignore next */
      cov_2654neh42p().s[26]++;
      return _server.NextResponse.json({
        error: 'Error al obtener preferencias actuales'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2654neh42p().b[3][1]++;
    }
    // Combinar con preferencias existentes
    const existingPrefs =
    /* istanbul ignore next */
    (cov_2654neh42p().s[27]++,
    /* istanbul ignore next */
    (cov_2654neh42p().b[5][0]++, currentPrefs?.preferences) ||
    /* istanbul ignore next */
    (cov_2654neh42p().b[5][1]++, {}));
    const updatedPreferences =
    /* istanbul ignore next */
    (cov_2654neh42p().s[28]++, {
      ...existingPrefs,
      display: {
        ...existingPrefs.display,
        ...validatedDisplay
      }
    });
    // Actualizar en la base de datos
    const {
      data: updatedPrefs,
      error
    } =
    /* istanbul ignore next */
    (cov_2654neh42p().s[29]++, await _supabase.supabaseAdmin.from('user_preferences').upsert({
      user_id: userId,
      preferences: updatedPreferences,
      updated_at: new Date().toISOString()
    }).select().single());
    /* istanbul ignore next */
    cov_2654neh42p().s[30]++;
    if (error) {
      /* istanbul ignore next */
      cov_2654neh42p().b[6][0]++;
      cov_2654neh42p().s[31]++;
      console.error('Error al actualizar preferencias de display:', error);
      /* istanbul ignore next */
      cov_2654neh42p().s[32]++;
      return _server.NextResponse.json({
        error: 'Error al actualizar preferencias de display'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2654neh42p().b[6][1]++;
    }
    // Registrar actividad
    const requestInfo =
    /* istanbul ignore next */
    (cov_2654neh42p().s[33]++, (0, _activityLogger.getRequestInfo)(request));
    /* istanbul ignore next */
    cov_2654neh42p().s[34]++;
    await (0, _activityLogger.logPreferenceActivity)(userId, 'update_display', {
      updated_settings: Object.keys(validatedDisplay),
      language: validatedDisplay.language,
      timezone: validatedDisplay.timezone,
      currency: validatedDisplay.currency,
      theme: validatedDisplay.theme
    }, requestInfo);
    /* istanbul ignore next */
    cov_2654neh42p().s[35]++;
    return _server.NextResponse.json({
      success: true,
      display: updatedPrefs.preferences.display,
      message: 'Preferencias de display actualizadas correctamente'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2654neh42p().s[36]++;
    console.error('Error en PATCH /api/user/preferences/display:', error);
    /* istanbul ignore next */
    cov_2654neh42p().s[37]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
// FunciÃ³n para validar configuraciones de display
function validateDisplaySettings(display) {
  /* istanbul ignore next */
  cov_2654neh42p().f[4]++;
  cov_2654neh42p().s[38]++;
  try {
    const validated =
    /* istanbul ignore next */
    (cov_2654neh42p().s[39]++, {});
    // Validar idioma
    /* istanbul ignore next */
    cov_2654neh42p().s[40]++;
    if (display.language) {
      /* istanbul ignore next */
      cov_2654neh42p().b[7][0]++;
      const supportedLanguages =
      /* istanbul ignore next */
      (cov_2654neh42p().s[41]++, ['es', 'en', 'pt']);
      /* istanbul ignore next */
      cov_2654neh42p().s[42]++;
      if (supportedLanguages.includes(display.language)) {
        /* istanbul ignore next */
        cov_2654neh42p().b[8][0]++;
        cov_2654neh42p().s[43]++;
        validated.language = display.language;
      } else
      /* istanbul ignore next */
      {
        cov_2654neh42p().b[8][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2654neh42p().b[7][1]++;
    }
    // Validar zona horaria
    cov_2654neh42p().s[44]++;
    if (display.timezone) {
      /* istanbul ignore next */
      cov_2654neh42p().b[9][0]++;
      cov_2654neh42p().s[45]++;
      try {
        /* istanbul ignore next */
        cov_2654neh42p().s[46]++;
        // Verificar que la zona horaria sea vÃ¡lida
        Intl.DateTimeFormat(undefined, {
          timeZone: display.timezone
        });
        /* istanbul ignore next */
        cov_2654neh42p().s[47]++;
        validated.timezone = display.timezone;
      } catch {
        // Zona horaria invÃ¡lida, no incluir en la validaciÃ³n
      }
    } else
    /* istanbul ignore next */
    {
      cov_2654neh42p().b[9][1]++;
    }
    // Validar moneda
    cov_2654neh42p().s[48]++;
    if (display.currency) {
      /* istanbul ignore next */
      cov_2654neh42p().b[10][0]++;
      const supportedCurrencies =
      /* istanbul ignore next */
      (cov_2654neh42p().s[49]++, ['ARS', 'USD', 'EUR', 'BRL', 'CLP', 'COP', 'MXN', 'PEN']);
      /* istanbul ignore next */
      cov_2654neh42p().s[50]++;
      if (supportedCurrencies.includes(display.currency)) {
        /* istanbul ignore next */
        cov_2654neh42p().b[11][0]++;
        cov_2654neh42p().s[51]++;
        validated.currency = display.currency;
      } else
      /* istanbul ignore next */
      {
        cov_2654neh42p().b[11][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2654neh42p().b[10][1]++;
    }
    // Validar tema
    cov_2654neh42p().s[52]++;
    if (display.theme) {
      /* istanbul ignore next */
      cov_2654neh42p().b[12][0]++;
      const supportedThemes =
      /* istanbul ignore next */
      (cov_2654neh42p().s[53]++, ['light', 'dark', 'system']);
      /* istanbul ignore next */
      cov_2654neh42p().s[54]++;
      if (supportedThemes.includes(display.theme)) {
        /* istanbul ignore next */
        cov_2654neh42p().b[13][0]++;
        cov_2654neh42p().s[55]++;
        validated.theme = display.theme;
      } else
      /* istanbul ignore next */
      {
        cov_2654neh42p().b[13][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2654neh42p().b[12][1]++;
    }
    cov_2654neh42p().s[56]++;
    return Object.keys(validated).length > 0 ?
    /* istanbul ignore next */
    (cov_2654neh42p().b[14][0]++, validated) :
    /* istanbul ignore next */
    (cov_2654neh42p().b[14][1]++, null);
  } catch (error) {
    /* istanbul ignore next */
    cov_2654neh42p().s[57]++;
    console.error('Error al validar configuraciones de display:', error);
    /* istanbul ignore next */
    cov_2654neh42p().s[58]++;
    return null;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,