{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\logistics\\CarrierPerformanceTable.tsx"],"sourcesContent":["// =====================================================\r\n// COMPONENTE: CARRIER PERFORMANCE TABLE ENTERPRISE\r\n// Descripción: Tabla de performance de couriers con métricas\r\n// Basado en: shadcn/ui DataTable + Recharts\r\n// =====================================================\r\n\r\n'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { \r\n  TrendingUp, \r\n  TrendingDown, \r\n  BarChart3, \r\n  Download,\r\n  Eye,\r\n  Award,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  Clock,\r\n  DollarSign\r\n} from 'lucide-react';\r\nimport { CarrierPerformance } from '@/types/logistics';\r\nimport { cn } from '@/lib/core/utils';\r\nimport { formatCurrency, formatDate } from '@/lib/utils/consolidated-utils';\r\n\r\n// =====================================================\r\n// INTERFACES\r\n// =====================================================\r\n\r\ninterface CarrierPerformanceTableProps {\r\n  carriers: CarrierPerformance[];\r\n  className?: string;\r\n}\r\n\r\ninterface PerformanceRowProps {\r\n  carrier: CarrierPerformance;\r\n  rank: number;\r\n  showDetails: boolean;\r\n  onToggleDetails: () => void;\r\n}\r\n\r\n// =====================================================\r\n// CONFIGURACIÓN\r\n// =====================================================\r\n\r\nconst performanceThresholds = {\r\n  excellent: 95,\r\n  good: 85,\r\n  average: 70,\r\n  poor: 50\r\n};\r\n\r\nconst getPerformanceLevel = (rate: number) => {\r\n  if (rate >= performanceThresholds.excellent) {return 'excellent';}\r\n  if (rate >= performanceThresholds.good) {return 'good';}\r\n  if (rate >= performanceThresholds.average) {return 'average';}\r\n  return 'poor';\r\n};\r\n\r\nconst performanceConfig = {\r\n  excellent: {\r\n    label: 'Excelente',\r\n    color: 'text-green-600',\r\n    bgColor: 'bg-green-100',\r\n    icon: Award\r\n  },\r\n  good: {\r\n    label: 'Bueno',\r\n    color: 'text-blue-600',\r\n    bgColor: 'bg-blue-100',\r\n    icon: CheckCircle\r\n  },\r\n  average: {\r\n    label: 'Regular',\r\n    color: 'text-yellow-600',\r\n    bgColor: 'bg-yellow-100',\r\n    icon: Clock\r\n  },\r\n  poor: {\r\n    label: 'Deficiente',\r\n    color: 'text-red-600',\r\n    bgColor: 'bg-red-100',\r\n    icon: AlertTriangle\r\n  }\r\n};\r\n\r\n// =====================================================\r\n// COMPONENTE PRINCIPAL\r\n// =====================================================\r\n\r\nexport function CarrierPerformanceTable({ carriers, className }: CarrierPerformanceTableProps) {\r\n  const [sortBy, setSortBy] = useState<'on_time_rate' | 'total_shipments' | 'average_cost_per_shipment'>('on_time_rate');\r\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc');\r\n  const [expandedRows, setExpandedRows] = useState<Set<number>>(new Set());\r\n  \r\n  // Ordenar carriers\r\n  const sortedCarriers = [...carriers].sort((a, b) => {\r\n    const aValue = a[sortBy];\r\n    const bValue = b[sortBy];\r\n    \r\n    if (sortOrder === 'desc') {\r\n      return bValue - aValue;\r\n    }\r\n    return aValue - bValue;\r\n  });\r\n  \r\n  // Calcular estadísticas generales\r\n  const totalShipments = carriers.reduce((acc, c) => acc + c.total_shipments, 0);\r\n  const averageOnTimeRate = carriers.length > 0 \r\n    ? carriers.reduce((acc, c) => acc + c.on_time_rate, 0) / carriers.length \r\n    : 0;\r\n  const bestPerformer = carriers.reduce((best, current) => \r\n    current.on_time_rate > best.on_time_rate ? current : best\r\n  );\r\n  const worstPerformer = carriers.reduce((worst, current) => \r\n    current.on_time_rate < worst.on_time_rate ? current : worst\r\n  );\r\n  \r\n  const handleSort = (column: typeof sortBy) => {\r\n    if (sortBy === column) {\r\n      setSortOrder(sortOrder === 'desc' ? 'asc' : 'desc');\r\n    } else {\r\n      setSortBy(column);\r\n      setSortOrder('desc');\r\n    }\r\n  };\r\n  \r\n  const toggleRowExpansion = (carrierId: number) => {\r\n    const newExpanded = new Set(expandedRows);\r\n    if (newExpanded.has(carrierId)) {\r\n      newExpanded.delete(carrierId);\r\n    } else {\r\n      newExpanded.add(carrierId);\r\n    }\r\n    setExpandedRows(newExpanded);\r\n  };\r\n  \r\n  if (carriers.length === 0) {\r\n    return (\r\n      <Card className={className}>\r\n        <CardContent className=\"p-6\">\r\n          <div className=\"text-center\">\r\n            <BarChart3 className=\"w-8 h-8 text-muted-foreground mx-auto mb-2\" />\r\n            <p className=\"text-muted-foreground\">No hay datos de performance disponibles</p>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <div className={cn(\"space-y-6\", className)}>\r\n      {/* Métricas resumen */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-muted-foreground\">\r\n                  Total Envíos\r\n                </p>\r\n                <p className=\"text-2xl font-bold\">{totalShipments.toLocaleString()}</p>\r\n              </div>\r\n              <BarChart3 className=\"w-8 h-8 text-blue-500\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        \r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-muted-foreground\">\r\n                  Puntualidad Promedio\r\n                </p>\r\n                <p className=\"text-2xl font-bold\">{averageOnTimeRate.toFixed(1)}%</p>\r\n              </div>\r\n              <Clock className=\"w-8 h-8 text-green-500\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        \r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-muted-foreground\">\r\n                  Mejor Performer\r\n                </p>\r\n                <p className=\"text-lg font-bold truncate\">{bestPerformer?.carrier_name}</p>\r\n                <p className=\"text-sm text-green-600\">{bestPerformer?.on_time_rate.toFixed(1)}%</p>\r\n              </div>\r\n              <Award className=\"w-8 h-8 text-yellow-500\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        \r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-muted-foreground\">\r\n                  Necesita Mejora\r\n                </p>\r\n                <p className=\"text-lg font-bold truncate\">{worstPerformer?.carrier_name}</p>\r\n                <p className=\"text-sm text-red-600\">{worstPerformer?.on_time_rate.toFixed(1)}%</p>\r\n              </div>\r\n              <AlertTriangle className=\"w-8 h-8 text-red-500\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n      \r\n      {/* Tabla principal */}\r\n      <Card>\r\n        <CardHeader>\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <CardTitle>Performance por Courier</CardTitle>\r\n              <CardDescription>\r\n                Métricas detalladas de rendimiento y eficiencia\r\n              </CardDescription>\r\n            </div>\r\n            \r\n            <div className=\"flex items-center gap-3\">\r\n              <Select value={sortBy} onValueChange={(value: any) => setSortBy(value)}>\r\n                <SelectTrigger className=\"w-48\">\r\n                  <SelectValue />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  <SelectItem value=\"on_time_rate\">Puntualidad</SelectItem>\r\n                  <SelectItem value=\"total_shipments\">Total Envíos</SelectItem>\r\n                  <SelectItem value=\"average_cost_per_shipment\">Costo Promedio</SelectItem>\r\n                </SelectContent>\r\n              </Select>\r\n              \r\n              <Button variant=\"outline\" size=\"sm\">\r\n                <Download className=\"w-4 h-4 mr-2\" />\r\n                Exportar\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n        \r\n        <CardContent>\r\n          <div className=\"rounded-md border\">\r\n            <Table>\r\n              <TableHeader>\r\n                <TableRow>\r\n                  <TableHead className=\"w-12\">#</TableHead>\r\n                  <TableHead>Courier</TableHead>\r\n                  <TableHead \r\n                    className=\"cursor-pointer hover:bg-muted/50\"\r\n                    onClick={() => handleSort('total_shipments')}\r\n                  >\r\n                    <div className=\"flex items-center gap-1\">\r\n                      Envíos\r\n                      {sortBy === 'total_shipments' && (\r\n                        sortOrder === 'desc' ? <TrendingDown className=\"w-3 h-3\" /> : <TrendingUp className=\"w-3 h-3\" />\r\n                      )}\r\n                    </div>\r\n                  </TableHead>\r\n                  <TableHead>Entregados</TableHead>\r\n                  <TableHead \r\n                    className=\"cursor-pointer hover:bg-muted/50\"\r\n                    onClick={() => handleSort('on_time_rate')}\r\n                  >\r\n                    <div className=\"flex items-center gap-1\">\r\n                      Puntualidad\r\n                      {sortBy === 'on_time_rate' && (\r\n                        sortOrder === 'desc' ? <TrendingDown className=\"w-3 h-3\" /> : <TrendingUp className=\"w-3 h-3\" />\r\n                      )}\r\n                    </div>\r\n                  </TableHead>\r\n                  <TableHead \r\n                    className=\"cursor-pointer hover:bg-muted/50\"\r\n                    onClick={() => handleSort('average_cost_per_shipment')}\r\n                  >\r\n                    <div className=\"flex items-center gap-1\">\r\n                      Costo Promedio\r\n                      {sortBy === 'average_cost_per_shipment' && (\r\n                        sortOrder === 'desc' ? <TrendingDown className=\"w-3 h-3\" /> : <TrendingUp className=\"w-3 h-3\" />\r\n                      )}\r\n                    </div>\r\n                  </TableHead>\r\n                  <TableHead>Performance</TableHead>\r\n                  <TableHead className=\"w-12\"></TableHead>\r\n                </TableRow>\r\n              </TableHeader>\r\n              <TableBody>\r\n                {sortedCarriers.map((carrier, index) => (\r\n                  <PerformanceRow\r\n                    key={carrier.carrier_id}\r\n                    carrier={carrier}\r\n                    rank={index + 1}\r\n                    showDetails={expandedRows.has(carrier.carrier_id)}\r\n                    onToggleDetails={() => toggleRowExpansion(carrier.carrier_id)}\r\n                  />\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\n// =====================================================\r\n// COMPONENTE PERFORMANCE ROW\r\n// =====================================================\r\n\r\nfunction PerformanceRow({ carrier, rank, showDetails, onToggleDetails }: PerformanceRowProps) {\r\n  const performanceLevel = getPerformanceLevel(carrier.on_time_rate);\r\n  const config = performanceConfig[performanceLevel];\r\n  const Icon = config.icon;\r\n  \r\n  const deliveryRate = carrier.total_shipments > 0 \r\n    ? (carrier.delivered_shipments / carrier.total_shipments) * 100 \r\n    : 0;\r\n  \r\n  return (\r\n    <>\r\n      <TableRow className=\"hover:bg-muted/50\">\r\n        <TableCell>\r\n          <div className=\"flex items-center justify-center\">\r\n            {rank <= 3 ? (\r\n              <Badge variant={rank === 1 ? \"default\" : \"secondary\"} className=\"w-6 h-6 rounded-full p-0 flex items-center justify-center\">\r\n                {rank}\r\n              </Badge>\r\n            ) : (\r\n              <span className=\"text-muted-foreground\">{rank}</span>\r\n            )}\r\n          </div>\r\n        </TableCell>\r\n        \r\n        <TableCell>\r\n          <div className=\"font-medium\">{carrier.carrier_name}</div>\r\n        </TableCell>\r\n        \r\n        <TableCell>\r\n          <div className=\"font-medium\">{carrier.total_shipments.toLocaleString()}</div>\r\n        </TableCell>\r\n        \r\n        <TableCell>\r\n          <div className=\"space-y-1\">\r\n            <div className=\"font-medium\">{carrier.delivered_shipments.toLocaleString()}</div>\r\n            <div className=\"text-xs text-muted-foreground\">\r\n              {deliveryRate.toFixed(1)}% del total\r\n            </div>\r\n          </div>\r\n        </TableCell>\r\n        \r\n        <TableCell>\r\n          <div className=\"space-y-2\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <span className=\"font-medium\">{carrier.on_time_rate.toFixed(1)}%</span>\r\n              <Icon className={cn(\"w-4 h-4\", config.color)} />\r\n            </div>\r\n            <Progress value={carrier.on_time_rate} className=\"h-2\" />\r\n          </div>\r\n        </TableCell>\r\n        \r\n        <TableCell>\r\n          <div className=\"font-medium\">{formatCurrency(carrier.average_cost_per_shipment)}</div>\r\n        </TableCell>\r\n        \r\n        <TableCell>\r\n          <Badge variant=\"outline\" className={cn(\"text-xs\", config.color, config.bgColor)}>\r\n            {config.label}\r\n          </Badge>\r\n        </TableCell>\r\n        \r\n        <TableCell>\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={onToggleDetails}\r\n            className=\"w-8 h-8 p-0\"\r\n          >\r\n            <Eye className=\"w-4 h-4\" />\r\n          </Button>\r\n        </TableCell>\r\n      </TableRow>\r\n      \r\n      {/* Fila expandida con detalles */}\r\n      {showDetails && (\r\n        <TableRow>\r\n          <TableCell colSpan={8} className=\"bg-muted/25\">\r\n            <div className=\"p-4 space-y-4\">\r\n              <h5 className=\"font-semibold\">Detalles de Performance - {carrier.carrier_name}</h5>\r\n              \r\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                <div className=\"space-y-2\">\r\n                  <h6 className=\"text-sm font-medium text-muted-foreground\">Métricas de Entrega</h6>\r\n                  <div className=\"space-y-1 text-sm\">\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Entregas a tiempo:</span>\r\n                      <span className=\"font-medium\">{carrier.on_time_deliveries}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Tiempo promedio:</span>\r\n                      <span className=\"font-medium\">{carrier.average_delivery_time} días</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Tasa de entrega:</span>\r\n                      <span className=\"font-medium\">{deliveryRate.toFixed(1)}%</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"space-y-2\">\r\n                  <h6 className=\"text-sm font-medium text-muted-foreground\">Métricas Financieras</h6>\r\n                  <div className=\"space-y-1 text-sm\">\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Ingresos totales:</span>\r\n                      <span className=\"font-medium\">{formatCurrency(carrier.total_cost)}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Costo por envío:</span>\r\n                      <span className=\"font-medium\">{formatCurrency(carrier.average_cost_per_shipment)}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Eficiencia costo:</span>\r\n                      <span className=\"font-medium\">\r\n                        {carrier.total_shipments > 0 \r\n                          ? (carrier.total_cost / carrier.total_shipments).toFixed(2)\r\n                          : '0'\r\n                        }\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"space-y-2\">\r\n                  <h6 className=\"text-sm font-medium text-muted-foreground\">Calificación General</h6>\r\n                  <div className=\"space-y-2\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Icon className={cn(\"w-5 h-5\", config.color)} />\r\n                      <span className={cn(\"font-medium\", config.color)}>{config.label}</span>\r\n                    </div>\r\n                    <Progress value={carrier.on_time_rate} className=\"h-3\" />\r\n                    <div className=\"text-xs text-muted-foreground\">\r\n                      Basado en puntualidad y eficiencia\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TableCell>\r\n        </TableRow>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["CarrierPerformanceTable","performanceThresholds","excellent","good","average","poor","getPerformanceLevel","rate","performanceConfig","label","color","bgColor","icon","Award","CheckCircle","Clock","AlertTriangle","carriers","className","sortBy","setSortBy","useState","sortOrder","setSortOrder","expandedRows","setExpandedRows","Set","sortedCarriers","sort","a","b","aValue","bValue","totalShipments","reduce","acc","c","total_shipments","averageOnTimeRate","length","on_time_rate","bestPerformer","best","current","worstPerformer","worst","handleSort","column","toggleRowExpansion","carrierId","newExpanded","has","delete","add","Card","CardContent","div","BarChart3","p","cn","toLocaleString","toFixed","carrier_name","CardHeader","CardTitle","CardDescription","Select","value","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectItem","Button","variant","size","Download","Table","TableHeader","TableRow","TableHead","onClick","TrendingDown","TrendingUp","TableBody","map","carrier","index","PerformanceRow","rank","showDetails","carrier_id","onToggleDetails","performanceLevel","config","Icon","deliveryRate","delivered_shipments","TableCell","Badge","span","Progress","formatCurrency","average_cost_per_shipment","Eye","colSpan","h5","h6","on_time_deliveries","average_delivery_time","total_cost"],"mappings":"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"}