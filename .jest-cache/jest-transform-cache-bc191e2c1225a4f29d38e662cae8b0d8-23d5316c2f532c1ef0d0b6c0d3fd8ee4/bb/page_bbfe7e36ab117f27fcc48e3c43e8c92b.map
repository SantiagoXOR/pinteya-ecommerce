{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\driver\\dashboard\\page.tsx"],"sourcesContent":["/**\r\n * Dashboard principal para drivers\r\n * Interfaz mobile-first con informaci√≥n de rutas, estado y acciones r√°pidas\r\n */\r\n\r\n'use client';\r\n\r\n\n// Forzar renderizado din√°mico para evitar problemas con prerendering\nexport const dynamic = 'force-dynamic';\nimport React, { useEffect, useState } from 'react';\r\nimport { LoadScript } from '@react-google-maps/api';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport {\r\n  Navigation,\r\n  MapPin,\r\n  Clock,\r\n  Package,\r\n  CheckCircle,\r\n  AlertCircle,\r\n  Truck,\r\n  Route,\r\n  Play,\r\n  Pause,\r\n  MoreVertical,\r\n  List,\r\n  Map\r\n} from 'lucide-react';\r\nimport { useDriver } from '@/contexts/DriverContext';\r\nimport { cn } from '@/lib/core/utils';\r\nimport Link from 'next/link';\r\nimport PendingOrdersList from '@/components/driver/PendingOrdersList';\r\nimport LiveNavigationMap from '@/components/driver/LiveNavigationMap';\r\n\r\ninterface PendingOrder {\r\n  id: number;\r\n  orderNumber: string;\r\n  total: number;\r\n  status: string;\r\n  paymentStatus: string;\r\n  fulfillmentStatus: string;\r\n  createdAt: string;\r\n  estimatedDelivery?: string;\r\n  shippingAddress: {\r\n    streetName: string;\r\n    streetNumber: string;\r\n    floor?: string;\r\n    apartment?: string;\r\n    cityName: string;\r\n    stateName: string;\r\n    zipCode: string;\r\n    fullAddress: string;\r\n  };\r\n  items: Array<{\r\n    id: number;\r\n    productName: string;\r\n    quantity: number;\r\n    price: number;\r\n    weight: number;\r\n  }>;\r\n  totalItems: number;\r\n  totalWeight: number;\r\n  notes?: string;\r\n}\r\n\r\ninterface DeliveryStop {\r\n  orderId: number;\r\n  orderNumber: string;\r\n  address: string;\r\n  coordinates?: {\r\n    lat: number;\r\n    lng: number;\r\n  };\r\n  sequence: number;\r\n  status: 'pending' | 'current' | 'completed';\r\n  estimatedArrival?: string;\r\n  total: number;\r\n  items: number;\r\n  notes?: string;\r\n}\r\n\r\nexport default function DriverDashboardPage() {\r\n  const { state, goOnline, goOffline, startRoute } = useDriver();\r\n  const [activeTab, setActiveTab] = useState('orders');\r\n  const [routeStops, setRouteStops] = useState<DeliveryStop[]>([]);\r\n  const [isNavigating, setIsNavigating] = useState(false);\r\n\r\n  // Estad√≠sticas del d√≠a\r\n  const todayStats = {\r\n    completedDeliveries: 0,\r\n    totalDistance: 0,\r\n    activeTime: '0h 0m',\r\n    efficiency: 0\r\n  };\r\n\r\n  // Ruta activa actual\r\n  const activeRoute = state.currentRoute;\r\n\r\n  // Pr√≥ximas rutas asignadas\r\n  const upcomingRoutes = state.assignedRoutes.filter(route =>\r\n    route.status === 'planned'\r\n  );\r\n\r\n  // Funci√≥n para geocodificar direcciones\r\n  const geocodeAddress = async (address: string): Promise<{ lat: number; lng: number } | null> => {\r\n    return new Promise((resolve) => {\r\n      if (!window.google || !window.google.maps) {\r\n        console.warn('Google Maps not loaded, using default coordinates');\r\n        // Coordenadas por defecto para C√≥rdoba\r\n        resolve({ lat: -31.4201, lng: -64.1888 });\r\n        return;\r\n      }\r\n\r\n      const geocoder = new google.maps.Geocoder();\r\n      geocoder.geocode(\r\n        {\r\n          address: address + ', C√≥rdoba, Argentina',\r\n          region: 'AR'\r\n        },\r\n        (results, status) => {\r\n          if (status === 'OK' && results && results[0]) {\r\n            const location = results[0].geometry.location;\r\n            resolve({\r\n              lat: location.lat(),\r\n              lng: location.lng()\r\n            });\r\n          } else {\r\n            console.warn('Geocoding failed for address:', address, 'Status:', status);\r\n            // Coordenadas por defecto para C√≥rdoba con peque√±a variaci√≥n\r\n            resolve({\r\n              lat: -31.4201 + (Math.random() - 0.5) * 0.01,\r\n              lng: -64.1888 + (Math.random() - 0.5) * 0.01\r\n            });\r\n          }\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleStartRoute = async (orders: PendingOrder[]) => {\r\n    try {\r\n      console.log('üöÄ Starting route with orders:', orders);\r\n\r\n      // Geocodificar todas las direcciones\r\n      const stopsWithCoordinates: DeliveryStop[] = [];\r\n\r\n      for (let i = 0; i < orders.length; i++) {\r\n        const order = orders[i];\r\n        console.log(`üìç Geocoding address: ${order.shippingAddress.fullAddress}`);\r\n\r\n        const coordinates = await geocodeAddress(order.shippingAddress.fullAddress);\r\n\r\n        const stop: DeliveryStop = {\r\n          orderId: order.id,\r\n          orderNumber: order.orderNumber,\r\n          address: order.shippingAddress.fullAddress,\r\n          coordinates: coordinates,\r\n          sequence: i + 1,\r\n          status: i === 0 ? 'current' : 'pending',\r\n          total: order.total,\r\n          items: order.totalItems,\r\n          notes: order.notes\r\n        };\r\n\r\n        stopsWithCoordinates.push(stop);\r\n        console.log(`‚úÖ Stop ${i + 1} geocoded:`, stop);\r\n      }\r\n\r\n      console.log('üó∫Ô∏è All stops geocoded:', stopsWithCoordinates);\r\n      setRouteStops(stopsWithCoordinates);\r\n      setIsNavigating(true);\r\n      setActiveTab('navigation');\r\n\r\n      // Actualizar contexto del driver\r\n      startRoute(`route-${Date.now()}`);\r\n\r\n    } catch (error) {\r\n      console.error('Error starting route:', error);\r\n    }\r\n  };\r\n\r\n  const handleCompleteDelivery = (orderId: number) => {\r\n    setRouteStops(prev => prev.map(stop =>\r\n      stop.orderId === orderId\r\n        ? { ...stop, status: 'completed' as const }\r\n        : stop\r\n    ));\r\n\r\n    // Actualizar el siguiente stop como current\r\n    const currentIndex = routeStops.findIndex(stop => stop.orderId === orderId);\r\n    if (currentIndex < routeStops.length - 1) {\r\n      setRouteStops(prev => prev.map((stop, index) =>\r\n        index === currentIndex + 1\r\n          ? { ...stop, status: 'current' as const }\r\n          : stop\r\n      ));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LoadScript\r\n      googleMapsApiKey={process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY || ''}\r\n      libraries={['places', 'geometry']}\r\n      loadingElement={<div>Cargando Google Maps...</div>}\r\n    >\r\n      <div className=\"p-4 space-y-6 max-w-4xl mx-auto\">\r\n      {/* Estado y controles principales */}\r\n      <Card>\r\n        <CardHeader className=\"pb-3\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <CardTitle className=\"text-lg\">Estado del Driver</CardTitle>\r\n              <CardDescription>\r\n                {state.driver?.vehicle_type} - {state.driver?.license_plate}\r\n              </CardDescription>\r\n            </div>\r\n            <div className={cn(\r\n              \"w-3 h-3 rounded-full\",\r\n              state.isOnline ? \"bg-green-500\" : \"bg-gray-400\"\r\n            )} />\r\n          </div>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          {/* Control de estado online/offline */}\r\n          <div className=\"flex space-x-2\">\r\n            <Button\r\n              onClick={goOnline}\r\n              disabled={state.isOnline}\r\n              className=\"flex-1\"\r\n              variant={state.isOnline ? \"secondary\" : \"default\"}\r\n            >\r\n              <Play className=\"mr-2 h-4 w-4\" />\r\n              {state.isOnline ? 'En L√≠nea' : 'Conectarse'}\r\n            </Button>\r\n            <Button\r\n              onClick={goOffline}\r\n              disabled={!state.isOnline}\r\n              variant=\"outline\"\r\n              className=\"flex-1\"\r\n            >\r\n              <Pause className=\"mr-2 h-4 w-4\" />\r\n              Desconectar\r\n            </Button>\r\n          </div>\r\n\r\n          {/* Ubicaci√≥n actual */}\r\n          {state.currentLocation && (\r\n            <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\r\n              <MapPin className=\"h-4 w-4\" />\r\n              <span>\r\n                Ubicaci√≥n: {state.currentLocation.lat.toFixed(4)}, {state.currentLocation.lng.toFixed(4)}\r\n              </span>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Tabs para √≥rdenes y navegaci√≥n */}\r\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\r\n        <TabsList className=\"grid w-full grid-cols-2\">\r\n          <TabsTrigger value=\"orders\" className=\"flex items-center gap-2\">\r\n            <List className=\"h-4 w-4\" />\r\n            √ìrdenes del D√≠a\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"navigation\" className=\"flex items-center gap-2\" disabled={!isNavigating}>\r\n            <Map className=\"h-4 w-4\" />\r\n            Navegaci√≥n GPS\r\n          </TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"orders\" className=\"mt-6\">\r\n          <PendingOrdersList\r\n            onStartRoute={handleStartRoute}\r\n            onSelectOrder={(order) => console.log('Selected order:', order)}\r\n          />\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"navigation\" className=\"mt-6\">\r\n          {isNavigating && routeStops.length > 0 ? (\r\n            <LiveNavigationMap\r\n              stops={routeStops}\r\n              onCompleteDelivery={handleCompleteDelivery}\r\n              onNavigationUpdate={(location) => {\r\n                // Actualizar ubicaci√≥n en el contexto\r\n                console.log('üìç GPS Navigation update:', location);\r\n              }}\r\n            />\r\n          ) : (\r\n            <Card>\r\n              <CardContent className=\"text-center py-8\">\r\n                <Navigation className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                <h3 className=\"text-lg font-semibold mb-2\">No hay navegaci√≥n activa</h3>\r\n                <p className=\"text-gray-600 mb-4\">Selecciona √≥rdenes e inicia un recorrido para usar la navegaci√≥n GPS</p>\r\n                <Button onClick={() => setActiveTab('orders')}>\r\n                  <List className=\"h-4 w-4 mr-2\" />\r\n                  Ver √ìrdenes\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          )}\r\n        </TabsContent>\r\n      </Tabs>\r\n\r\n      {/* Estad√≠sticas del d√≠a */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"text-lg\">Estad√≠sticas de Hoy</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n            <div className=\"text-center\">\r\n              <div className=\"text-2xl font-bold text-green-600\">\r\n                {todayStats.completedDeliveries}\r\n              </div>\r\n              <div className=\"text-sm text-gray-600\">Entregas</div>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <div className=\"text-2xl font-bold text-blue-600\">\r\n                {todayStats.totalDistance}km\r\n              </div>\r\n              <div className=\"text-sm text-gray-600\">Distancia</div>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <div className=\"text-2xl font-bold text-purple-600\">\r\n                {todayStats.activeTime}\r\n              </div>\r\n              <div className=\"text-sm text-gray-600\">Tiempo Activo</div>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <div className=\"text-2xl font-bold text-orange-600\">\r\n                {todayStats.efficiency}%\r\n              </div>\r\n              <div className=\"text-sm text-gray-600\">Eficiencia</div>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Acciones r√°pidas */}\r\n      <div className=\"grid grid-cols-2 gap-3\">\r\n        <Link href=\"/driver/deliveries\">\r\n          <Button variant=\"outline\" className=\"w-full h-16 flex-col\">\r\n            <CheckCircle className=\"h-5 w-5 mb-1\" />\r\n            <span className=\"text-sm\">Entregas</span>\r\n          </Button>\r\n        </Link>\r\n        <Link href=\"/driver/profile\">\r\n          <Button variant=\"outline\" className=\"w-full h-16 flex-col\">\r\n            <Truck className=\"h-5 w-5 mb-1\" />\r\n            <span className=\"text-sm\">Mi Perfil</span>\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n      </div>\r\n    </LoadScript>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["DriverDashboardPage","dynamic","state","goOnline","goOffline","startRoute","useDriver","activeTab","setActiveTab","useState","routeStops","setRouteStops","isNavigating","setIsNavigating","todayStats","completedDeliveries","totalDistance","activeTime","efficiency","activeRoute","currentRoute","upcomingRoutes","assignedRoutes","filter","route","status","geocodeAddress","address","Promise","resolve","window","google","maps","console","warn","lat","lng","geocoder","Geocoder","geocode","region","results","location","geometry","Math","random","handleStartRoute","orders","log","stopsWithCoordinates","i","length","order","shippingAddress","fullAddress","coordinates","stop","orderId","id","orderNumber","sequence","total","items","totalItems","notes","push","Date","now","error","handleCompleteDelivery","prev","map","currentIndex","findIndex","index","LoadScript","googleMapsApiKey","process","env","NEXT_PUBLIC_GOOGLE_MAPS_API_KEY","libraries","loadingElement","div","className","Card","CardHeader","CardTitle","CardDescription","driver","vehicle_type","license_plate","cn","isOnline","CardContent","Button","onClick","disabled","variant","Play","Pause","currentLocation","MapPin","span","toFixed","Tabs","value","onValueChange","TabsList","TabsTrigger","List","Map","TabsContent","PendingOrdersList","onStartRoute","onSelectOrder","LiveNavigationMap","stops","onCompleteDelivery","onNavigationUpdate","Navigation","h3","p","Link","href","CheckCircle","Truck"],"mappings":"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"}