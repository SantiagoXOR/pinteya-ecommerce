cf8728a60f052a7b449acc1aeb028845
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_jl0u269z3() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\monitoring\\stream\\route.ts";
  var hash = "8b3de49acb0897fa86420e6b1daef7574e780099";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\monitoring\\stream\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 20
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 23
        }
      },
      "8": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 60
        }
      },
      "9": {
        start: {
          line: 27,
          column: 34
        },
        end: {
          line: 27,
          column: 99
        }
      },
      "10": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 24
        }
      },
      "11": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 142,
          column: 5
        }
      },
      "12": {
        start: {
          line: 31,
          column: 33
        },
        end: {
          line: 31,
          column: 53
        }
      },
      "13": {
        start: {
          line: 32,
          column: 25
        },
        end: {
          line: 32,
          column: 122
        }
      },
      "14": {
        start: {
          line: 33,
          column: 35
        },
        end: {
          line: 33,
          column: 68
        }
      },
      "15": {
        start: {
          line: 34,
          column: 29
        },
        end: {
          line: 34,
          column: 56
        }
      },
      "16": {
        start: {
          line: 36,
          column: 28
        },
        end: {
          line: 39,
          column: 9
        }
      },
      "17": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "18": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 47,
          column: 13
        }
      },
      "19": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 63
        }
      },
      "20": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 46,
          column: 19
        }
      },
      "21": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "22": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "23": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 51
        }
      },
      "24": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 57,
          column: 19
        }
      },
      "25": {
        start: {
          line: 61,
          column: 29
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "26": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 74,
          column: 11
        }
      },
      "27": {
        start: {
          line: 76,
          column: 23
        },
        end: {
          line: 117,
          column: 10
        }
      },
      "28": {
        start: {
          line: 79,
          column: 34
        },
        end: {
          line: 88,
          column: 17
        }
      },
      "29": {
        start: {
          line: 80,
          column: 20
        },
        end: {
          line: 87,
          column: 21
        }
      },
      "30": {
        start: {
          line: 81,
          column: 37
        },
        end: {
          line: 81,
          column: 73
        }
      },
      "31": {
        start: {
          line: 82,
          column: 24
        },
        end: {
          line: 82,
          column: 75
        }
      },
      "32": {
        start: {
          line: 83,
          column: 24
        },
        end: {
          line: 83,
          column: 36
        }
      },
      "33": {
        start: {
          line: 85,
          column: 24
        },
        end: {
          line: 85,
          column: 104
        }
      },
      "34": {
        start: {
          line: 86,
          column: 24
        },
        end: {
          line: 86,
          column: 37
        }
      },
      "35": {
        start: {
          line: 90,
          column: 31
        },
        end: {
          line: 90,
          column: 121
        }
      },
      "36": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 102,
          column: 19
        }
      },
      "37": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 110,
          column: 19
        }
      },
      "38": {
        start: {
          line: 105,
          column: 20
        },
        end: {
          line: 105,
          column: 40
        }
      },
      "39": {
        start: {
          line: 106,
          column: 20
        },
        end: {
          line: 106,
          column: 39
        }
      },
      "40": {
        start: {
          line: 107,
          column: 20
        },
        end: {
          line: 109,
          column: 23
        }
      },
      "41": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 115,
          column: 19
        }
      },
      "42": {
        start: {
          line: 119,
          column: 24
        },
        end: {
          line: 126,
          column: 10
        }
      },
      "43": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 129,
          column: 11
        }
      },
      "44": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 98
        }
      },
      "45": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 141,
          column: 11
        }
      },
      "46": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 224,
          column: 5
        }
      },
      "47": {
        start: {
          line: 146,
          column: 21
        },
        end: {
          line: 146,
          column: 41
        }
      },
      "48": {
        start: {
          line: 147,
          column: 41
        },
        end: {
          line: 147,
          column: 45
        }
      },
      "49": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "50": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 157,
          column: 15
        }
      },
      "51": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "52": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 170,
          column: 15
        }
      },
      "53": {
        start: {
          line: 173,
          column: 22
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "54": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "55": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 182,
          column: 90
        }
      },
      "56": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 183,
          column: 22
        }
      },
      "57": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 185,
          column: 106
        }
      },
      "58": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 186,
          column: 22
        }
      },
      "59": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 188,
          column: 100
        }
      },
      "60": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 189,
          column: 22
        }
      },
      "61": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 191,
          column: 97
        }
      },
      "62": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 22
        }
      },
      "63": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 194,
          column: 22
        }
      },
      "64": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 200,
          column: 11
        }
      },
      "65": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 211,
          column: 11
        }
      },
      "66": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 101
        }
      },
      "67": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 223,
          column: 11
        }
      },
      "68": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 235,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "GET",
        decl: {
          start: {
            line: 29,
            column: 15
          },
          end: {
            line: 29,
            column: 18
          }
        },
        loc: {
          start: {
            line: 29,
            column: 28
          },
          end: {
            line: 143,
            column: 1
          }
        },
        line: 29
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        },
        loc: {
          start: {
            line: 77,
            column: 31
          },
          end: {
            line: 111,
            column: 13
          }
        },
        line: 77
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 79,
            column: 34
          },
          end: {
            line: 79,
            column: 35
          }
        },
        loc: {
          start: {
            line: 79,
            column: 49
          },
          end: {
            line: 88,
            column: 17
          }
        },
        line: 79
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 104,
            column: 57
          },
          end: {
            line: 104,
            column: 58
          }
        },
        loc: {
          start: {
            line: 104,
            column: 61
          },
          end: {
            line: 110,
            column: 17
          }
        },
        line: 104
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 112,
            column: 13
          }
        },
        loc: {
          start: {
            line: 112,
            column: 22
          },
          end: {
            line: 116,
            column: 13
          }
        },
        line: 112
      },
      "10": {
        name: "POST",
        decl: {
          start: {
            line: 144,
            column: 15
          },
          end: {
            line: 144,
            column: 19
          }
        },
        loc: {
          start: {
            line: 144,
            column: 29
          },
          end: {
            line: 225,
            column: 1
          }
        },
        line: 144
      },
      "11": {
        name: "OPTIONS",
        decl: {
          start: {
            line: 226,
            column: 15
          },
          end: {
            line: 226,
            column: 22
          }
        },
        loc: {
          start: {
            line: 226,
            column: 25
          },
          end: {
            line: 236,
            column: 1
          }
        },
        line: 226
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 25
          },
          end: {
            line: 32,
            column: 122
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 25
          },
          end: {
            line: 32,
            column: 53
          }
        }, {
          start: {
            line: 32,
            column: 57
          },
          end: {
            line: 32,
            column: 122
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "2": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "3": {
        loc: {
          start: {
            line: 135,
            column: 21
          },
          end: {
            line: 135,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 135,
            column: 46
          },
          end: {
            line: 135,
            column: 59
          }
        }, {
          start: {
            line: 135,
            column: 62
          },
          end: {
            line: 135,
            column: 77
          }
        }],
        line: 135
      },
      "4": {
        loc: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 158,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 158,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "5": {
        loc: {
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 148,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 148,
            column: 17
          }
        }, {
          start: {
            line: 148,
            column: 21
          },
          end: {
            line: 148,
            column: 26
          }
        }],
        line: 148
      },
      "6": {
        loc: {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "7": {
        loc: {
          start: {
            line: 180,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 183,
            column: 22
          }
        }, {
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 186,
            column: 22
          }
        }, {
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 189,
            column: 22
          }
        }, {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 192,
            column: 22
          }
        }, {
          start: {
            line: 193,
            column: 12
          },
          end: {
            line: 194,
            column: 22
          }
        }],
        line: 180
      },
      "8": {
        loc: {
          start: {
            line: 217,
            column: 21
          },
          end: {
            line: 217,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 217,
            column: 46
          },
          end: {
            line: 217,
            column: 59
          }
        }, {
          start: {
            line: 217,
            column: 62
          },
          end: {
            line: 217,
            column: 77
          }
        }],
        line: 217
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0, 0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\monitoring\\stream\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - STREAMING API ENDPOINT\r\n// ===================================\r\n\r\nimport { NextRequest } from 'next/server';\r\nimport { logger, LogCategory } from '@/lib/enterprise/logger';\r\nimport { realTimeMetricsStreaming, StreamingUtils, StreamEventType } from '@/lib/monitoring/real-time-metrics-streaming';\r\n\r\n/**\r\n * GET - Establece conexi\xF3n de Server-Sent Events\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const clientId = searchParams.get('clientId') || `client_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n    const subscriptionsParam = searchParams.get('subscriptions');\r\n    const filtersParam = searchParams.get('filters');\r\n\r\n    // Parsear suscripciones\r\n    let subscriptions: StreamEventType[] = [StreamEventType.METRICS_UPDATE, StreamEventType.ALERT_CREATED];\r\n    if (subscriptionsParam) {\r\n      try {\r\n        subscriptions = JSON.parse(subscriptionsParam);\r\n      } catch (error) {\r\n        logger.warn(LogCategory.API, 'Invalid subscriptions parameter', { subscriptionsParam });\r\n      }\r\n    }\r\n\r\n    // Parsear filtros\r\n    let filters;\r\n    if (filtersParam) {\r\n      try {\r\n        filters = JSON.parse(filtersParam);\r\n      } catch (error) {\r\n        logger.warn(LogCategory.API, 'Invalid filters parameter', { filtersParam });\r\n      }\r\n    }\r\n\r\n    // Crear configuraci\xF3n del cliente\r\n    const clientConfig = {\r\n      clientId,\r\n      subscriptions,\r\n      filters,\r\n      rateLimit: {\r\n        maxEventsPerSecond: 15,\r\n        burstLimit: 50\r\n      }\r\n    };\r\n\r\n    logger.info(LogCategory.API, 'SSE connection requested', {\r\n      clientId,\r\n      subscriptions,\r\n      filters\r\n    });\r\n\r\n    // Crear stream de respuesta\r\n    const stream = new ReadableStream({\r\n      start(controller) {\r\n        // Funci\xF3n para enviar eventos al cliente\r\n        const sendEvent = async (event: any) => {\r\n          try {\r\n            const data = `data: ${JSON.stringify(event)}\\n\\n`;\r\n            controller.enqueue(new TextEncoder().encode(data));\r\n            return true;\r\n          } catch (error) {\r\n            logger.error(LogCategory.API, 'Error sending SSE event', error as Error);\r\n            return false;\r\n          }\r\n        };\r\n\r\n        // Registrar cliente en el sistema de streaming\r\n        const client = realTimeMetricsStreaming.registerClient(clientConfig, sendEvent);\r\n\r\n        // Enviar evento de conexi\xF3n establecida\r\n        sendEvent({\r\n          type: 'connection_established',\r\n          data: {\r\n            clientId,\r\n            timestamp: Date.now(),\r\n            subscriptions,\r\n            message: 'Conexi\xF3n de streaming establecida exitosamente'\r\n          },\r\n          timestamp: Date.now(),\r\n          id: `connection_${clientId}`\r\n        });\r\n\r\n        // Manejar cierre de conexi\xF3n\r\n        request.signal.addEventListener('abort', () => {\r\n          client.disconnect();\r\n          controller.close();\r\n          logger.info(LogCategory.API, 'SSE connection closed', { clientId });\r\n        });\r\n      },\r\n\r\n      cancel() {\r\n        logger.info(LogCategory.API, 'SSE stream cancelled', { clientId });\r\n      }\r\n    });\r\n\r\n    // Configurar headers para SSE\r\n    const headers = new Headers({\r\n      'Content-Type': 'text/event-stream',\r\n      'Cache-Control': 'no-cache',\r\n      'Connection': 'keep-alive',\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Headers': 'Cache-Control',\r\n      'X-Accel-Buffering': 'no' // Para nginx\r\n    });\r\n\r\n    return new Response(stream, { headers });\r\n\r\n  } catch (error) {\r\n    logger.error(LogCategory.API, 'Error establishing SSE connection', error as Error);\r\n    \r\n    return new Response(\r\n      JSON.stringify({\r\n        success: false,\r\n        error: 'Error establishing streaming connection',\r\n        details: error instanceof Error ? error.message : 'Unknown error'\r\n      }),\r\n      {\r\n        status: 500,\r\n        headers: { 'Content-Type': 'application/json' }\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * POST - Env\xEDa evento personalizado al stream\r\n */\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { type, data, clientId } = body;\r\n\r\n    if (!type || !data) {\r\n      return new Response(\r\n        JSON.stringify({\r\n          success: false,\r\n          error: 'Missing required fields: type, data'\r\n        }),\r\n        {\r\n          status: 400,\r\n          headers: { 'Content-Type': 'application/json' }\r\n        }\r\n      );\r\n    }\r\n\r\n    // Validar tipo de evento\r\n    if (!Object.values(StreamEventType).includes(type)) {\r\n      return new Response(\r\n        JSON.stringify({\r\n          success: false,\r\n          error: 'Invalid event type',\r\n          validTypes: Object.values(StreamEventType)\r\n        }),\r\n        {\r\n          status: 400,\r\n          headers: { 'Content-Type': 'application/json' }\r\n        }\r\n      );\r\n    }\r\n\r\n    // Crear evento personalizado\r\n    const event = {\r\n      type,\r\n      data,\r\n      timestamp: Date.now(),\r\n      id: `custom_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\r\n    };\r\n\r\n    // Enviar evento seg\xFAn el tipo\r\n    switch (type) {\r\n      case StreamEventType.ALERT_CREATED:\r\n        realTimeMetricsStreaming.createAlertEvent(data);\r\n        break;\r\n      \r\n      case StreamEventType.ALERT_RESOLVED:\r\n        realTimeMetricsStreaming.createAlertResolvedEvent(data.alertId);\r\n        break;\r\n      \r\n      case StreamEventType.BUDGET_VIOLATION:\r\n        realTimeMetricsStreaming.createBudgetViolationEvent(data);\r\n        break;\r\n      \r\n      case StreamEventType.SYSTEM_STATUS:\r\n        realTimeMetricsStreaming.createSystemStatusEvent(data);\r\n        break;\r\n      \r\n      default:\r\n        // Para otros tipos, usar broadcast gen\xE9rico\r\n        // realTimeMetricsStreaming.broadcastEvent(event);\r\n        break;\r\n    }\r\n\r\n    logger.info(LogCategory.API, 'Custom streaming event sent', {\r\n      type,\r\n      clientId,\r\n      eventId: event.id\r\n    });\r\n\r\n    return new Response(\r\n      JSON.stringify({\r\n        success: true,\r\n        eventId: event.id,\r\n        timestamp: event.timestamp,\r\n        message: 'Event sent successfully'\r\n      }),\r\n      {\r\n        status: 200,\r\n        headers: { 'Content-Type': 'application/json' }\r\n      }\r\n    );\r\n\r\n  } catch (error) {\r\n    logger.error(LogCategory.API, 'Error sending custom streaming event', error as Error);\r\n    \r\n    return new Response(\r\n      JSON.stringify({\r\n        success: false,\r\n        error: 'Error sending custom event',\r\n        details: error instanceof Error ? error.message : 'Unknown error'\r\n      }),\r\n      {\r\n        status: 500,\r\n        headers: { 'Content-Type': 'application/json' }\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * OPTIONS - Maneja preflight CORS\r\n */\r\nexport async function OPTIONS() {\r\n  return new Response(null, {\r\n    status: 200,\r\n    headers: {\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\r\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\r\n      'Access-Control-Max-Age': '86400'\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "OPTIONS", "POST", "runtime", "request", "searchParams", "URL", "url", "clientId", "get", "Date", "now", "Math", "random", "toString", "substr", "subscriptionsParam", "filtersParam", "subscriptions", "StreamEventType", "METRICS_UPDATE", "ALERT_CREATED", "JSON", "parse", "error", "logger", "warn", "LogCategory", "API", "filters", "clientConfig", "rateLimit", "maxEventsPerSecond", "burstLimit", "info", "stream", "ReadableStream", "start", "controller", "sendEvent", "event", "data", "stringify", "enqueue", "TextEncoder", "encode", "client", "realTimeMetricsStreaming", "registerClient", "type", "timestamp", "message", "id", "signal", "addEventListener", "disconnect", "close", "cancel", "headers", "Headers", "Response", "success", "details", "Error", "status", "body", "json", "Object", "values", "includes", "validTypes", "createAlertEvent", "ALERT_RESOLVED", "createAlertResolvedEvent", "alertId", "BUDGET_VIOLATION", "createBudgetViolationEvent", "SYSTEM_STATUS", "createSystemStatusEvent", "eventId"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8b3de49acb0897fa86420e6b1daef7574e780099"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_jl0u269z3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_jl0u269z3();
cov_jl0u269z3().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_jl0u269z3().f[0]++;
  cov_jl0u269z3().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_jl0u269z3().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_jl0u269z3().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_jl0u269z3().f[1]++;
    cov_jl0u269z3().s[4]++;
    return GET;
  },
  get OPTIONS() {
    /* istanbul ignore next */
    cov_jl0u269z3().f[2]++;
    cov_jl0u269z3().s[5]++;
    return OPTIONS;
  },
  get POST() {
    /* istanbul ignore next */
    cov_jl0u269z3().f[3]++;
    cov_jl0u269z3().s[6]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_jl0u269z3().f[4]++;
    cov_jl0u269z3().s[7]++;
    return runtime;
  }
});
const _logger =
/* istanbul ignore next */
(cov_jl0u269z3().s[8]++, require("../../../../lib/enterprise/logger"));
const _realtimemetricsstreaming =
/* istanbul ignore next */
(cov_jl0u269z3().s[9]++, require("../../../../lib/monitoring/real-time-metrics-streaming"));
const runtime =
/* istanbul ignore next */
(cov_jl0u269z3().s[10]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_jl0u269z3().f[5]++;
  cov_jl0u269z3().s[11]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_jl0u269z3().s[12]++, new URL(request.url));
    const clientId =
    /* istanbul ignore next */
    (cov_jl0u269z3().s[13]++,
    /* istanbul ignore next */
    (cov_jl0u269z3().b[0][0]++, searchParams.get('clientId')) ||
    /* istanbul ignore next */
    (cov_jl0u269z3().b[0][1]++, `client_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`));
    const subscriptionsParam =
    /* istanbul ignore next */
    (cov_jl0u269z3().s[14]++, searchParams.get('subscriptions'));
    const filtersParam =
    /* istanbul ignore next */
    (cov_jl0u269z3().s[15]++, searchParams.get('filters'));
    // Parsear suscripciones
    let subscriptions =
    /* istanbul ignore next */
    (cov_jl0u269z3().s[16]++, [_realtimemetricsstreaming.StreamEventType.METRICS_UPDATE, _realtimemetricsstreaming.StreamEventType.ALERT_CREATED]);
    /* istanbul ignore next */
    cov_jl0u269z3().s[17]++;
    if (subscriptionsParam) {
      /* istanbul ignore next */
      cov_jl0u269z3().b[1][0]++;
      cov_jl0u269z3().s[18]++;
      try {
        /* istanbul ignore next */
        cov_jl0u269z3().s[19]++;
        subscriptions = JSON.parse(subscriptionsParam);
      } catch (error) {
        /* istanbul ignore next */
        cov_jl0u269z3().s[20]++;
        _logger.logger.warn(_logger.LogCategory.API, 'Invalid subscriptions parameter', {
          subscriptionsParam
        });
      }
    } else
    /* istanbul ignore next */
    {
      cov_jl0u269z3().b[1][1]++;
    }
    // Parsear filtros
    let filters;
    /* istanbul ignore next */
    cov_jl0u269z3().s[21]++;
    if (filtersParam) {
      /* istanbul ignore next */
      cov_jl0u269z3().b[2][0]++;
      cov_jl0u269z3().s[22]++;
      try {
        /* istanbul ignore next */
        cov_jl0u269z3().s[23]++;
        filters = JSON.parse(filtersParam);
      } catch (error) {
        /* istanbul ignore next */
        cov_jl0u269z3().s[24]++;
        _logger.logger.warn(_logger.LogCategory.API, 'Invalid filters parameter', {
          filtersParam
        });
      }
    } else
    /* istanbul ignore next */
    {
      cov_jl0u269z3().b[2][1]++;
    }
    // Crear configuraciÃ³n del cliente
    const clientConfig =
    /* istanbul ignore next */
    (cov_jl0u269z3().s[25]++, {
      clientId,
      subscriptions,
      filters,
      rateLimit: {
        maxEventsPerSecond: 15,
        burstLimit: 50
      }
    });
    /* istanbul ignore next */
    cov_jl0u269z3().s[26]++;
    _logger.logger.info(_logger.LogCategory.API, 'SSE connection requested', {
      clientId,
      subscriptions,
      filters
    });
    // Crear stream de respuesta
    const stream =
    /* istanbul ignore next */
    (cov_jl0u269z3().s[27]++, new ReadableStream({
      start(controller) {
        /* istanbul ignore next */
        cov_jl0u269z3().f[6]++;
        cov_jl0u269z3().s[28]++;
        // FunciÃ³n para enviar eventos al cliente
        const sendEvent = async event => {
          /* istanbul ignore next */
          cov_jl0u269z3().f[7]++;
          cov_jl0u269z3().s[29]++;
          try {
            const data =
            /* istanbul ignore next */
            (cov_jl0u269z3().s[30]++, `data: ${JSON.stringify(event)}\n\n`);
            /* istanbul ignore next */
            cov_jl0u269z3().s[31]++;
            controller.enqueue(new TextEncoder().encode(data));
            /* istanbul ignore next */
            cov_jl0u269z3().s[32]++;
            return true;
          } catch (error) {
            /* istanbul ignore next */
            cov_jl0u269z3().s[33]++;
            _logger.logger.error(_logger.LogCategory.API, 'Error sending SSE event', error);
            /* istanbul ignore next */
            cov_jl0u269z3().s[34]++;
            return false;
          }
        };
        // Registrar cliente en el sistema de streaming
        const client =
        /* istanbul ignore next */
        (cov_jl0u269z3().s[35]++, _realtimemetricsstreaming.realTimeMetricsStreaming.registerClient(clientConfig, sendEvent));
        // Enviar evento de conexiÃ³n establecida
        /* istanbul ignore next */
        cov_jl0u269z3().s[36]++;
        sendEvent({
          type: 'connection_established',
          data: {
            clientId,
            timestamp: Date.now(),
            subscriptions,
            message: 'ConexiÃ³n de streaming establecida exitosamente'
          },
          timestamp: Date.now(),
          id: `connection_${clientId}`
        });
        // Manejar cierre de conexiÃ³n
        /* istanbul ignore next */
        cov_jl0u269z3().s[37]++;
        request.signal.addEventListener('abort', () => {
          /* istanbul ignore next */
          cov_jl0u269z3().f[8]++;
          cov_jl0u269z3().s[38]++;
          client.disconnect();
          /* istanbul ignore next */
          cov_jl0u269z3().s[39]++;
          controller.close();
          /* istanbul ignore next */
          cov_jl0u269z3().s[40]++;
          _logger.logger.info(_logger.LogCategory.API, 'SSE connection closed', {
            clientId
          });
        });
      },
      cancel() {
        /* istanbul ignore next */
        cov_jl0u269z3().f[9]++;
        cov_jl0u269z3().s[41]++;
        _logger.logger.info(_logger.LogCategory.API, 'SSE stream cancelled', {
          clientId
        });
      }
    }));
    // Configurar headers para SSE
    const headers =
    /* istanbul ignore next */
    (cov_jl0u269z3().s[42]++, new Headers({
      'Content-Type': 'text/event-stream',
      'Cache-Control': 'no-cache',
      'Connection': 'keep-alive',
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Headers': 'Cache-Control',
      'X-Accel-Buffering': 'no' // Para nginx
    }));
    /* istanbul ignore next */
    cov_jl0u269z3().s[43]++;
    return new Response(stream, {
      headers
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_jl0u269z3().s[44]++;
    _logger.logger.error(_logger.LogCategory.API, 'Error establishing SSE connection', error);
    /* istanbul ignore next */
    cov_jl0u269z3().s[45]++;
    return new Response(JSON.stringify({
      success: false,
      error: 'Error establishing streaming connection',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_jl0u269z3().b[3][0]++, error.message) :
      /* istanbul ignore next */
      (cov_jl0u269z3().b[3][1]++, 'Unknown error')
    }), {
      status: 500,
      headers: {
        'Content-Type': 'application/json'
      }
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_jl0u269z3().f[10]++;
  cov_jl0u269z3().s[46]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_jl0u269z3().s[47]++, await request.json());
    const {
      type,
      data,
      clientId
    } =
    /* istanbul ignore next */
    (cov_jl0u269z3().s[48]++, body);
    /* istanbul ignore next */
    cov_jl0u269z3().s[49]++;
    if (
    /* istanbul ignore next */
    (cov_jl0u269z3().b[5][0]++, !type) ||
    /* istanbul ignore next */
    (cov_jl0u269z3().b[5][1]++, !data)) {
      /* istanbul ignore next */
      cov_jl0u269z3().b[4][0]++;
      cov_jl0u269z3().s[50]++;
      return new Response(JSON.stringify({
        success: false,
        error: 'Missing required fields: type, data'
      }), {
        status: 400,
        headers: {
          'Content-Type': 'application/json'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_jl0u269z3().b[4][1]++;
    }
    // Validar tipo de evento
    cov_jl0u269z3().s[51]++;
    if (!Object.values(_realtimemetricsstreaming.StreamEventType).includes(type)) {
      /* istanbul ignore next */
      cov_jl0u269z3().b[6][0]++;
      cov_jl0u269z3().s[52]++;
      return new Response(JSON.stringify({
        success: false,
        error: 'Invalid event type',
        validTypes: Object.values(_realtimemetricsstreaming.StreamEventType)
      }), {
        status: 400,
        headers: {
          'Content-Type': 'application/json'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_jl0u269z3().b[6][1]++;
    }
    // Crear evento personalizado
    const event =
    /* istanbul ignore next */
    (cov_jl0u269z3().s[53]++, {
      type,
      data,
      timestamp: Date.now(),
      id: `custom_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`
    });
    // Enviar evento segÃºn el tipo
    /* istanbul ignore next */
    cov_jl0u269z3().s[54]++;
    switch (type) {
      case _realtimemetricsstreaming.StreamEventType.ALERT_CREATED:
        /* istanbul ignore next */
        cov_jl0u269z3().b[7][0]++;
        cov_jl0u269z3().s[55]++;
        _realtimemetricsstreaming.realTimeMetricsStreaming.createAlertEvent(data);
        /* istanbul ignore next */
        cov_jl0u269z3().s[56]++;
        break;
      case _realtimemetricsstreaming.StreamEventType.ALERT_RESOLVED:
        /* istanbul ignore next */
        cov_jl0u269z3().b[7][1]++;
        cov_jl0u269z3().s[57]++;
        _realtimemetricsstreaming.realTimeMetricsStreaming.createAlertResolvedEvent(data.alertId);
        /* istanbul ignore next */
        cov_jl0u269z3().s[58]++;
        break;
      case _realtimemetricsstreaming.StreamEventType.BUDGET_VIOLATION:
        /* istanbul ignore next */
        cov_jl0u269z3().b[7][2]++;
        cov_jl0u269z3().s[59]++;
        _realtimemetricsstreaming.realTimeMetricsStreaming.createBudgetViolationEvent(data);
        /* istanbul ignore next */
        cov_jl0u269z3().s[60]++;
        break;
      case _realtimemetricsstreaming.StreamEventType.SYSTEM_STATUS:
        /* istanbul ignore next */
        cov_jl0u269z3().b[7][3]++;
        cov_jl0u269z3().s[61]++;
        _realtimemetricsstreaming.realTimeMetricsStreaming.createSystemStatusEvent(data);
        /* istanbul ignore next */
        cov_jl0u269z3().s[62]++;
        break;
      default:
        /* istanbul ignore next */
        cov_jl0u269z3().b[7][4]++;
        cov_jl0u269z3().s[63]++;
        break;
    }
    /* istanbul ignore next */
    cov_jl0u269z3().s[64]++;
    _logger.logger.info(_logger.LogCategory.API, 'Custom streaming event sent', {
      type,
      clientId,
      eventId: event.id
    });
    /* istanbul ignore next */
    cov_jl0u269z3().s[65]++;
    return new Response(JSON.stringify({
      success: true,
      eventId: event.id,
      timestamp: event.timestamp,
      message: 'Event sent successfully'
    }), {
      status: 200,
      headers: {
        'Content-Type': 'application/json'
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_jl0u269z3().s[66]++;
    _logger.logger.error(_logger.LogCategory.API, 'Error sending custom streaming event', error);
    /* istanbul ignore next */
    cov_jl0u269z3().s[67]++;
    return new Response(JSON.stringify({
      success: false,
      error: 'Error sending custom event',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_jl0u269z3().b[8][0]++, error.message) :
      /* istanbul ignore next */
      (cov_jl0u269z3().b[8][1]++, 'Unknown error')
    }), {
      status: 500,
      headers: {
        'Content-Type': 'application/json'
      }
    });
  }
}
async function OPTIONS() {
  /* istanbul ignore next */
  cov_jl0u269z3().f[11]++;
  cov_jl0u269z3().s[68]++;
  return new Response(null, {
    status: 200,
    headers: {
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',
      'Access-Control-Allow-Headers': 'Content-Type, Authorization',
      'Access-Control-Max-Age': '86400'
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,