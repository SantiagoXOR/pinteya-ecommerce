0e886e89651a3a2c82098fcb6a1ee04f
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_4gk09zx8m() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\addresses\\validate\\route.ts";
  var hash = "d20645fe75c527b76ac292dad9c28c71853e6998";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\addresses\\validate\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 13
        },
        end: {
          line: 24,
          column: 27
        }
      },
      "9": {
        start: {
          line: 25,
          column: 30
        },
        end: {
          line: 25,
          column: 76
        }
      },
      "10": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 24
        }
      },
      "11": {
        start: {
          line: 28,
          column: 32
        },
        end: {
          line: 34,
          column: 2
        }
      },
      "12": {
        start: {
          line: 36,
          column: 25
        },
        end: {
          line: 36,
          column: 61
        }
      },
      "13": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 112,
          column: 5
        }
      },
      "14": {
        start: {
          line: 40,
          column: 23
        },
        end: {
          line: 40,
          column: 56
        }
      },
      "15": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "16": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 96
        }
      },
      "17": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 63
        }
      },
      "18": {
        start: {
          line: 46,
          column: 28
        },
        end: {
          line: 46,
          column: 125
        }
      },
      "19": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 82
        }
      },
      "20": {
        start: {
          line: 49,
          column: 32
        },
        end: {
          line: 56,
          column: 10
        }
      },
      "21": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "22": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 91
        }
      },
      "23": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 63
        }
      },
      "24": {
        start: {
          line: 61,
          column: 23
        },
        end: {
          line: 61,
          column: 54
        }
      },
      "25": {
        start: {
          line: 62,
          column: 25
        },
        end: {
          line: 62,
          column: 49
        }
      },
      "26": {
        start: {
          line: 64,
          column: 25
        },
        end: {
          line: 64,
          column: 28
        }
      },
      "27": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 69,
          column: 84
        }
      },
      "28": {
        start: {
          line: 66,
          column: 57
        },
        end: {
          line: 66,
          column: 75
        }
      },
      "29": {
        start: {
          line: 67,
          column: 13
        },
        end: {
          line: 69,
          column: 84
        }
      },
      "30": {
        start: {
          line: 67,
          column: 73
        },
        end: {
          line: 67,
          column: 91
        }
      },
      "31": {
        start: {
          line: 68,
          column: 13
        },
        end: {
          line: 69,
          column: 84
        }
      },
      "32": {
        start: {
          line: 68,
          column: 71
        },
        end: {
          line: 68,
          column: 89
        }
      },
      "33": {
        start: {
          line: 69,
          column: 13
        },
        end: {
          line: 69,
          column: 84
        }
      },
      "34": {
        start: {
          line: 69,
          column: 66
        },
        end: {
          line: 69,
          column: 84
        }
      },
      "35": {
        start: {
          line: 71,
          column: 30
        },
        end: {
          line: 71,
          column: 184
        }
      },
      "36": {
        start: {
          line: 71,
          column: 74
        },
        end: {
          line: 71,
          column: 183
        }
      },
      "37": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "38": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 30
        }
      },
      "39": {
        start: {
          line: 76,
          column: 27
        },
        end: {
          line: 76,
          column: 29
        }
      },
      "40": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 89,
          column: 11
        }
      },
      "41": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 88,
          column: 13
        }
      },
      "42": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 55
        }
      },
      "43": {
        start: {
          line: 80,
          column: 19
        },
        end: {
          line: 88,
          column: 13
        }
      },
      "44": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 58
        }
      },
      "45": {
        start: {
          line: 82,
          column: 19
        },
        end: {
          line: 88,
          column: 13
        }
      },
      "46": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 77
        }
      },
      "47": {
        start: {
          line: 84,
          column: 19
        },
        end: {
          line: 88,
          column: 13
        }
      },
      "48": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 85,
          column: 61
        }
      },
      "49": {
        start: {
          line: 86,
          column: 19
        },
        end: {
          line: 88,
          column: 13
        }
      },
      "50": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 57
        }
      },
      "51": {
        start: {
          line: 90,
          column: 24
        },
        end: {
          line: 90,
          column: 41
        }
      },
      "52": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 132
        }
      },
      "53": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 108,
          column: 10
        }
      },
      "54": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 62
        }
      },
      "55": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 59
        }
      },
      "56": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 116,
          column: 83
        }
      },
      "57": {
        start: {
          line: 118,
          column: 30
        },
        end: {
          line: 118,
          column: 70
        }
      },
      "58": {
        start: {
          line: 119,
          column: 24
        },
        end: {
          line: 119,
          column: 48
        }
      },
      "59": {
        start: {
          line: 120,
          column: 26
        },
        end: {
          line: 120,
          column: 52
        }
      },
      "60": {
        start: {
          line: 121,
          column: 28
        },
        end: {
          line: 121,
          column: 54
        }
      },
      "61": {
        start: {
          line: 123,
          column: 21
        },
        end: {
          line: 123,
          column: 24
        }
      },
      "62": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 124,
          column: 45
        }
      },
      "63": {
        start: {
          line: 124,
          column: 27
        },
        end: {
          line: 124,
          column: 45
        }
      },
      "64": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 125,
          column: 40
        }
      },
      "65": {
        start: {
          line: 125,
          column: 21
        },
        end: {
          line: 125,
          column: 40
        }
      },
      "66": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 126,
          column: 42
        }
      },
      "67": {
        start: {
          line: 126,
          column: 23
        },
        end: {
          line: 126,
          column: 42
        }
      },
      "68": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 127,
          column: 43
        }
      },
      "69": {
        start: {
          line: 127,
          column: 25
        },
        end: {
          line: 127,
          column: 43
        }
      },
      "70": {
        start: {
          line: 129,
          column: 28
        },
        end: {
          line: 160,
          column: 5
        }
      },
      "71": {
        start: {
          line: 161,
          column: 20
        },
        end: {
          line: 161,
          column: 46
        }
      },
      "72": {
        start: {
          line: 162,
          column: 21
        },
        end: {
          line: 162,
          column: 45
        }
      },
      "73": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 165,
          column: 5
        }
      },
      "74": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 48
        }
      },
      "75": {
        start: {
          line: 167,
          column: 23
        },
        end: {
          line: 171,
          column: 5
        }
      },
      "76": {
        start: {
          line: 172,
          column: 24
        },
        end: {
          line: 175,
          column: 5
        }
      },
      "77": {
        start: {
          line: 177,
          column: 30
        },
        end: {
          line: 177,
          column: 118
        }
      },
      "78": {
        start: {
          line: 179,
          column: 21
        },
        end: {
          line: 179,
          column: 119
        }
      },
      "79": {
        start: {
          line: 180,
          column: 20
        },
        end: {
          line: 180,
          column: 38
        }
      },
      "80": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 181,
          column: 134
        }
      },
      "81": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 204,
          column: 6
        }
      },
      "82": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 208,
          column: 76
        }
      },
      "83": {
        start: {
          line: 210,
          column: 30
        },
        end: {
          line: 210,
          column: 70
        }
      },
      "84": {
        start: {
          line: 211,
          column: 24
        },
        end: {
          line: 211,
          column: 48
        }
      },
      "85": {
        start: {
          line: 212,
          column: 26
        },
        end: {
          line: 212,
          column: 52
        }
      },
      "86": {
        start: {
          line: 214,
          column: 21
        },
        end: {
          line: 214,
          column: 22
        }
      },
      "87": {
        start: {
          line: 215,
          column: 4
        },
        end: {
          line: 215,
          column: 45
        }
      },
      "88": {
        start: {
          line: 215,
          column: 27
        },
        end: {
          line: 215,
          column: 45
        }
      },
      "89": {
        start: {
          line: 216,
          column: 4
        },
        end: {
          line: 216,
          column: 40
        }
      },
      "90": {
        start: {
          line: 216,
          column: 21
        },
        end: {
          line: 216,
          column: 40
        }
      },
      "91": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 217,
          column: 42
        }
      },
      "92": {
        start: {
          line: 217,
          column: 23
        },
        end: {
          line: 217,
          column: 42
        }
      },
      "93": {
        start: {
          line: 219,
          column: 28
        },
        end: {
          line: 228,
          column: 5
        }
      },
      "94": {
        start: {
          line: 229,
          column: 4
        },
        end: {
          line: 231,
          column: 5
        }
      },
      "95": {
        start: {
          line: 229,
          column: 37
        },
        end: {
          line: 229,
          column: 92
        }
      },
      "96": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 230,
          column: 26
        }
      },
      "97": {
        start: {
          line: 232,
          column: 20
        },
        end: {
          line: 232,
          column: 37
        }
      },
      "98": {
        start: {
          line: 234,
          column: 28
        },
        end: {
          line: 255,
          column: 5
        }
      },
      "99": {
        start: {
          line: 256,
          column: 20
        },
        end: {
          line: 256,
          column: 46
        }
      },
      "100": {
        start: {
          line: 257,
          column: 24
        },
        end: {
          line: 260,
          column: 5
        }
      },
      "101": {
        start: {
          line: 261,
          column: 4
        },
        end: {
          line: 281,
          column: 6
        }
      },
      "102": {
        start: {
          line: 284,
          column: 4
        },
        end: {
          line: 311,
          column: 5
        }
      },
      "103": {
        start: {
          line: 285,
          column: 21
        },
        end: {
          line: 285,
          column: 41
        }
      },
      "104": {
        start: {
          line: 287,
          column: 33
        },
        end: {
          line: 287,
          column: 72
        }
      },
      "105": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 295,
          column: 9
        }
      },
      "106": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 294,
          column: 15
        }
      },
      "107": {
        start: {
          line: 296,
          column: 28
        },
        end: {
          line: 296,
          column: 49
        }
      },
      "108": {
        start: {
          line: 298,
          column: 23
        },
        end: {
          line: 298,
          column: 73
        }
      },
      "109": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 303,
          column: 11
        }
      },
      "110": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 305,
          column: 66
        }
      },
      "111": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 310,
          column: 11
        }
      },
      "112": {
        start: {
          line: 314,
          column: 4
        },
        end: {
          line: 351,
          column: 5
        }
      },
      "113": {
        start: {
          line: 315,
          column: 33
        },
        end: {
          line: 315,
          column: 53
        }
      },
      "114": {
        start: {
          line: 316,
          column: 22
        },
        end: {
          line: 316,
          column: 43
        }
      },
      "115": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 322,
          column: 9
        }
      },
      "116": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 321,
          column: 15
        }
      },
      "117": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 63
        }
      },
      "118": {
        start: {
          line: 324,
          column: 37
        },
        end: {
          line: 324,
          column: 61
        }
      },
      "119": {
        start: {
          line: 326,
          column: 28
        },
        end: {
          line: 332,
          column: 21
        }
      },
      "120": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 343,
          column: 11
        }
      },
      "121": {
        start: {
          line: 335,
          column: 63
        },
        end: {
          line: 342,
          column: 17
        }
      },
      "122": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 345,
          column: 72
        }
      },
      "123": {
        start: {
          line: 346,
          column: 8
        },
        end: {
          line: 350,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "validateAddressWithGooglePlaces",
        decl: {
          start: {
            line: 38,
            column: 15
          },
          end: {
            line: 38,
            column: 46
          }
        },
        loc: {
          start: {
            line: 38,
            column: 56
          },
          end: {
            line: 113,
            column: 1
          }
        },
        line: 38
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 71,
            column: 61
          },
          end: {
            line: 71,
            column: 62
          }
        },
        loc: {
          start: {
            line: 71,
            column: 74
          },
          end: {
            line: 71,
            column: 183
          }
        },
        line: 71
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 77,
            column: 42
          },
          end: {
            line: 77,
            column: 43
          }
        },
        loc: {
          start: {
            line: 77,
            column: 55
          },
          end: {
            line: 89,
            column: 9
          }
        },
        line: 77
      },
      "7": {
        name: "enhancedSimulationValidation",
        decl: {
          start: {
            line: 115,
            column: 15
          },
          end: {
            line: 115,
            column: 43
          }
        },
        loc: {
          start: {
            line: 115,
            column: 53
          },
          end: {
            line: 205,
            column: 1
          }
        },
        line: 115
      },
      "8": {
        name: "fallbackValidation",
        decl: {
          start: {
            line: 207,
            column: 15
          },
          end: {
            line: 207,
            column: 33
          }
        },
        loc: {
          start: {
            line: 207,
            column: 43
          },
          end: {
            line: 282,
            column: 1
          }
        },
        line: 207
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 229,
            column: 29
          },
          end: {
            line: 229,
            column: 30
          }
        },
        loc: {
          start: {
            line: 229,
            column: 37
          },
          end: {
            line: 229,
            column: 92
          }
        },
        line: 229
      },
      "10": {
        name: "POST",
        decl: {
          start: {
            line: 283,
            column: 15
          },
          end: {
            line: 283,
            column: 19
          }
        },
        loc: {
          start: {
            line: 283,
            column: 29
          },
          end: {
            line: 312,
            column: 1
          }
        },
        line: 283
      },
      "11": {
        name: "GET",
        decl: {
          start: {
            line: 313,
            column: 15
          },
          end: {
            line: 313,
            column: 18
          }
        },
        loc: {
          start: {
            line: 313,
            column: 28
          },
          end: {
            line: 352,
            column: 1
          }
        },
        line: 313
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 324,
            column: 26
          },
          end: {
            line: 324,
            column: 27
          }
        },
        loc: {
          start: {
            line: 324,
            column: 37
          },
          end: {
            line: 324,
            column: 61
          }
        },
        line: 324
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 335,
            column: 41
          },
          end: {
            line: 335,
            column: 42
          }
        },
        loc: {
          start: {
            line: 335,
            column: 63
          },
          end: {
            line: 342,
            column: 17
          }
        },
        line: 335
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "1": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "2": {
        loc: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 57,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 57,
            column: 48
          }
        }, {
          start: {
            line: 57,
            column: 52
          },
          end: {
            line: 57,
            column: 93
          }
        }],
        line: 57
      },
      "3": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 69,
            column: 84
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 69,
            column: 84
          }
        }, {
          start: {
            line: 67,
            column: 13
          },
          end: {
            line: 69,
            column: 84
          }
        }],
        line: 66
      },
      "4": {
        loc: {
          start: {
            line: 67,
            column: 13
          },
          end: {
            line: 69,
            column: 84
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 13
          },
          end: {
            line: 69,
            column: 84
          }
        }, {
          start: {
            line: 68,
            column: 13
          },
          end: {
            line: 69,
            column: 84
          }
        }],
        line: 67
      },
      "5": {
        loc: {
          start: {
            line: 68,
            column: 13
          },
          end: {
            line: 69,
            column: 84
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 13
          },
          end: {
            line: 69,
            column: 84
          }
        }, {
          start: {
            line: 69,
            column: 13
          },
          end: {
            line: 69,
            column: 84
          }
        }],
        line: 68
      },
      "6": {
        loc: {
          start: {
            line: 69,
            column: 13
          },
          end: {
            line: 69,
            column: 84
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 13
          },
          end: {
            line: 69,
            column: 84
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "7": {
        loc: {
          start: {
            line: 71,
            column: 74
          },
          end: {
            line: 71,
            column: 183
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 74
          },
          end: {
            line: 71,
            column: 109
          }
        }, {
          start: {
            line: 71,
            column: 114
          },
          end: {
            line: 71,
            column: 143
          }
        }, {
          start: {
            line: 71,
            column: 147
          },
          end: {
            line: 71,
            column: 182
          }
        }],
        line: 71
      },
      "8": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "9": {
        loc: {
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        }, {
          start: {
            line: 80,
            column: 19
          },
          end: {
            line: 88,
            column: 13
          }
        }],
        line: 78
      },
      "10": {
        loc: {
          start: {
            line: 80,
            column: 19
          },
          end: {
            line: 88,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 19
          },
          end: {
            line: 88,
            column: 13
          }
        }, {
          start: {
            line: 82,
            column: 19
          },
          end: {
            line: 88,
            column: 13
          }
        }],
        line: 80
      },
      "11": {
        loc: {
          start: {
            line: 82,
            column: 19
          },
          end: {
            line: 88,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 19
          },
          end: {
            line: 88,
            column: 13
          }
        }, {
          start: {
            line: 84,
            column: 19
          },
          end: {
            line: 88,
            column: 13
          }
        }],
        line: 82
      },
      "12": {
        loc: {
          start: {
            line: 84,
            column: 19
          },
          end: {
            line: 88,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 19
          },
          end: {
            line: 88,
            column: 13
          }
        }, {
          start: {
            line: 86,
            column: 19
          },
          end: {
            line: 88,
            column: 13
          }
        }],
        line: 84
      },
      "13": {
        loc: {
          start: {
            line: 86,
            column: 19
          },
          end: {
            line: 88,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 19
          },
          end: {
            line: 88,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "14": {
        loc: {
          start: {
            line: 91,
            column: 50
          },
          end: {
            line: 91,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 91,
            column: 60
          },
          end: {
            line: 91,
            column: 68
          }
        }, {
          start: {
            line: 91,
            column: 71
          },
          end: {
            line: 91,
            column: 81
          }
        }],
        line: 91
      },
      "15": {
        loc: {
          start: {
            line: 95,
            column: 25
          },
          end: {
            line: 99,
            column: 25
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 95,
            column: 36
          },
          end: {
            line: 99,
            column: 13
          }
        }, {
          start: {
            line: 99,
            column: 16
          },
          end: {
            line: 99,
            column: 25
          }
        }],
        line: 95
      },
      "16": {
        loc: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 124,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 124,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "17": {
        loc: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "18": {
        loc: {
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 126,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 126,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "19": {
        loc: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 127,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 127,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "20": {
        loc: {
          start: {
            line: 163,
            column: 4
          },
          end: {
            line: 165,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 4
          },
          end: {
            line: 165,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "21": {
        loc: {
          start: {
            line: 167,
            column: 23
          },
          end: {
            line: 171,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 23
          },
          end: {
            line: 167,
            column: 31
          }
        }, {
          start: {
            line: 167,
            column: 35
          },
          end: {
            line: 171,
            column: 5
          }
        }],
        line: 167
      },
      "22": {
        loc: {
          start: {
            line: 181,
            column: 52
          },
          end: {
            line: 181,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 181,
            column: 62
          },
          end: {
            line: 181,
            column: 70
          }
        }, {
          start: {
            line: 181,
            column: 73
          },
          end: {
            line: 181,
            column: 83
          }
        }],
        line: 181
      },
      "23": {
        loc: {
          start: {
            line: 185,
            column: 21
          },
          end: {
            line: 189,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 185,
            column: 32
          },
          end: {
            line: 189,
            column: 9
          }
        }, {
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 189,
            column: 21
          }
        }],
        line: 185
      },
      "24": {
        loc: {
          start: {
            line: 215,
            column: 4
          },
          end: {
            line: 215,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 4
          },
          end: {
            line: 215,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "25": {
        loc: {
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 216,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 216,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "26": {
        loc: {
          start: {
            line: 217,
            column: 4
          },
          end: {
            line: 217,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 4
          },
          end: {
            line: 217,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "27": {
        loc: {
          start: {
            line: 229,
            column: 4
          },
          end: {
            line: 231,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 4
          },
          end: {
            line: 231,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "28": {
        loc: {
          start: {
            line: 257,
            column: 24
          },
          end: {
            line: 260,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 257,
            column: 24
          },
          end: {
            line: 257,
            column: 48
          }
        }, {
          start: {
            line: 257,
            column: 52
          },
          end: {
            line: 260,
            column: 5
          }
        }],
        line: 257
      },
      "29": {
        loc: {
          start: {
            line: 264,
            column: 21
          },
          end: {
            line: 268,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 264,
            column: 32
          },
          end: {
            line: 268,
            column: 9
          }
        }, {
          start: {
            line: 268,
            column: 12
          },
          end: {
            line: 268,
            column: 21
          }
        }],
        line: 264
      },
      "30": {
        loc: {
          start: {
            line: 269,
            column: 21
          },
          end: {
            line: 272,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 269,
            column: 31
          },
          end: {
            line: 272,
            column: 9
          }
        }, {
          start: {
            line: 272,
            column: 12
          },
          end: {
            line: 272,
            column: 21
          }
        }],
        line: 269
      },
      "31": {
        loc: {
          start: {
            line: 273,
            column: 27
          },
          end: {
            line: 273,
            column: 146
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 273,
            column: 37
          },
          end: {
            line: 273,
            column: 134
          }
        }, {
          start: {
            line: 273,
            column: 137
          },
          end: {
            line: 273,
            column: 146
          }
        }],
        line: 273
      },
      "32": {
        loc: {
          start: {
            line: 274,
            column: 20
          },
          end: {
            line: 280,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 274,
            column: 30
          },
          end: {
            line: 280,
            column: 9
          }
        }, {
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 280,
            column: 21
          }
        }],
        line: 274
      },
      "33": {
        loc: {
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 288
      },
      "34": {
        loc: {
          start: {
            line: 302,
            column: 21
          },
          end: {
            line: 302,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 302,
            column: 38
          },
          end: {
            line: 302,
            column: 72
          }
        }, {
          start: {
            line: 302,
            column: 75
          },
          end: {
            line: 302,
            column: 111
          }
        }],
        line: 302
      },
      "35": {
        loc: {
          start: {
            line: 317,
            column: 8
          },
          end: {
            line: 322,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 8
          },
          end: {
            line: 322,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "36": {
        loc: {
          start: {
            line: 317,
            column: 12
          },
          end: {
            line: 317,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 317,
            column: 12
          },
          end: {
            line: 317,
            column: 18
          }
        }, {
          start: {
            line: 317,
            column: 22
          },
          end: {
            line: 317,
            column: 38
          }
        }],
        line: 317
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\addresses\\validate\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { z } from 'zod';\r\nimport { Client } from '@googlemaps/google-maps-services-js';\r\n\r\n// Schema de validaci\xF3n para la direcci\xF3n\r\nconst AddressValidationSchema = z.object({\r\n  street: z.string().min(1, 'La direcci\xF3n es requerida'),\r\n  city: z.string().min(1, 'La ciudad es requerida'),\r\n  state: z.string().min(1, 'La provincia es requerida'),\r\n  postal_code: z.string().min(1, 'El c\xF3digo postal es requerido'),\r\n  country: z.string().default('Argentina'),\r\n});\r\n\r\ninterface ValidationResult {\r\n  isValid: boolean;\r\n  confidence: number;\r\n  suggestions?: string[];\r\n  coordinates?: {\r\n    latitude: number;\r\n    longitude: number;\r\n  };\r\n  formatted_address?: string;\r\n  components?: {\r\n    street_number?: string;\r\n    route?: string;\r\n    locality?: string;\r\n    administrative_area_level_1?: string;\r\n    postal_code?: string;\r\n    country?: string;\r\n  };\r\n  place_id?: string; // ID \xFAnico de Google Places\r\n  types?: string[]; // Tipos de lugar seg\xFAn Google Places\r\n}\r\n\r\n// Inicializar cliente de Google Maps\r\nconst googleMapsClient = new Client({});\r\n\r\n// Validaci\xF3n real de direcciones usando Google Places API\r\nasync function validateAddressWithGooglePlaces(address: {\r\n  street: string;\r\n  city: string;\r\n  state: string;\r\n  postal_code: string;\r\n  country: string;\r\n}): Promise<ValidationResult> {\r\n  try {\r\n    const apiKey = process.env.GOOGLE_PLACES_API_KEY;\r\n\r\n    if (!apiKey) {\r\n      console.warn('\u26A0\uFE0F Google Places API key no configurada, usando validaci\xF3n mejorada');\r\n      return await enhancedSimulationValidation(address);\r\n    }\r\n\r\n    // Construir direcci\xF3n completa para geocoding\r\n    const fullAddress = `${address.street}, ${address.city}, ${address.state} ${address.postal_code}, ${address.country}`;\r\n\r\n    console.log('\uD83C\uDF0D Validando direcci\xF3n con Google Places API:', fullAddress);\r\n\r\n    // Usar Geocoding API para validar y obtener coordenadas precisas\r\n    const geocodeResponse = await googleMapsClient.geocode({\r\n      params: {\r\n        address: fullAddress,\r\n        key: apiKey,\r\n        region: 'ar', // Priorizar resultados de Argentina\r\n        language: 'es', // Respuestas en espa\xF1ol\r\n      },\r\n    });\r\n\r\n    if (geocodeResponse.data.status !== 'OK' || geocodeResponse.data.results.length === 0) {\r\n      console.log('\u274C Google Places: No se encontraron resultados para la direcci\xF3n');\r\n      return await enhancedSimulationValidation(address);\r\n    }\r\n\r\n    const result = geocodeResponse.data.results[0];\r\n    const location = result.geometry.location;\r\n\r\n    // Calcular confianza basada en el tipo de resultado\r\n    let confidence = 0.5; // Base 50%\r\n\r\n    // Aumentar confianza seg\xFAn precisi\xF3n del resultado\r\n    if (result.geometry.location_type === 'ROOFTOP') confidence = 0.95;\r\n    else if (result.geometry.location_type === 'RANGE_INTERPOLATED') confidence = 0.85;\r\n    else if (result.geometry.location_type === 'GEOMETRIC_CENTER') confidence = 0.75;\r\n    else if (result.geometry.location_type === 'APPROXIMATE') confidence = 0.65;\r\n\r\n    // Verificar que est\xE9 en Argentina\r\n    const isInArgentina = result.address_components.some(\r\n      component => component.types.includes('country') &&\r\n      (component.short_name === 'AR' || component.long_name === 'Argentina')\r\n    );\r\n\r\n    if (!isInArgentina) {\r\n      confidence *= 0.5; // Reducir confianza si no est\xE1 en Argentina\r\n    }\r\n\r\n    // Extraer componentes de la direcci\xF3n\r\n    const components: any = {};\r\n    result.address_components.forEach(component => {\r\n      if (component.types.includes('route')) {\r\n        components.route = component.long_name;\r\n      } else if (component.types.includes('locality')) {\r\n        components.locality = component.long_name;\r\n      } else if (component.types.includes('administrative_area_level_1')) {\r\n        components.administrative_area_level_1 = component.long_name;\r\n      } else if (component.types.includes('postal_code')) {\r\n        components.postal_code = component.long_name;\r\n      } else if (component.types.includes('country')) {\r\n        components.country = component.long_name;\r\n      }\r\n    });\r\n\r\n    const isValid = confidence >= 0.6; // 60% m\xEDnimo de confianza\r\n\r\n    console.log(`\u2705 Google Places: Direcci\xF3n ${isValid ? 'v\xE1lida' : 'inv\xE1lida'} con ${Math.round(confidence * 100)}% confianza`);\r\n\r\n    return {\r\n      isValid,\r\n      confidence,\r\n      suggestions: !isValid ? [\r\n        'Verifica que la direcci\xF3n est\xE9 completa',\r\n        'Aseg\xFArate de incluir el n\xFAmero de la calle',\r\n        'Confirma que la ciudad y provincia sean correctas'\r\n      ] : undefined,\r\n      coordinates: {\r\n        latitude: location.lat,\r\n        longitude: location.lng\r\n      },\r\n      formatted_address: result.formatted_address,\r\n      components,\r\n      place_id: result.place_id,\r\n      types: result.types\r\n    };\r\n\r\n  } catch (error) {\r\n    console.error('\u274C Error en Google Places API:', error);\r\n    return await enhancedSimulationValidation(address);\r\n  }\r\n}\r\n\r\n// Validaci\xF3n mejorada que simula Google Places API con datos realistas\r\nasync function enhancedSimulationValidation(address: {\r\n  street: string;\r\n  city: string;\r\n  state: string;\r\n  postal_code: string;\r\n  country: string;\r\n}): Promise<ValidationResult> {\r\n  console.log('\uD83C\uDFAF Usando validaci\xF3n mejorada (simulaci\xF3n de Google Places API)');\r\n\r\n  // Validaciones b\xE1sicas mejoradas\r\n  const isValidPostalCode = /^[0-9]{4,5}$/.test(address.postal_code);\r\n  const isValidCity = address.city.length >= 2;\r\n  const isValidStreet = address.street.length >= 5;\r\n  const hasStreetNumber = /\\d+/.test(address.street);\r\n\r\n  // Calcular confianza basada en validaciones\r\n  let confidence = 0.5; // Base 50%\r\n\r\n  if (isValidPostalCode) confidence += 0.2;\r\n  if (isValidCity) confidence += 0.15;\r\n  if (isValidStreet) confidence += 0.15;\r\n  if (hasStreetNumber) confidence += 0.1;\r\n\r\n  // Simular coordenadas realistas para Argentina\r\n  const argentinaCities: Record<string, { lat: number; lng: number; confidence_bonus: number }> = {\r\n    'c\xF3rdoba': { lat: -31.4201, lng: -64.1888, confidence_bonus: 0.1 },\r\n    'cordoba': { lat: -31.4201, lng: -64.1888, confidence_bonus: 0.1 },\r\n    'buenos aires': { lat: -34.6118, lng: -58.3960, confidence_bonus: 0.1 },\r\n    'rosario': { lat: -32.9442, lng: -60.6505, confidence_bonus: 0.1 },\r\n    'mendoza': { lat: -32.8908, lng: -68.8272, confidence_bonus: 0.1 },\r\n    'alta gracia': { lat: -31.6539, lng: -64.4281, confidence_bonus: 0.1 },\r\n  };\r\n\r\n  const cityKey = address.city.toLowerCase();\r\n  const cityData = argentinaCities[cityKey];\r\n\r\n  if (cityData) {\r\n    confidence += cityData.confidence_bonus;\r\n  }\r\n\r\n  // Generar coordenadas simuladas\r\n  const baseCoords = cityData || { lat: -31.4201, lng: -64.1888, confidence_bonus: 0 };\r\n  const coordinates = {\r\n    latitude: baseCoords.lat + (Math.random() - 0.5) * 0.1, // Variaci\xF3n de ~5km\r\n    longitude: baseCoords.lng + (Math.random() - 0.5) * 0.1\r\n  };\r\n\r\n  // Generar direcci\xF3n formateada simulada\r\n  const formatted_address = `${address.street}, ${address.city}, ${address.state} ${address.postal_code}, Argentina`;\r\n\r\n  // Generar place_id simulado\r\n  const place_id = `ChIJ${Math.random().toString(36).substring(2, 15)}${Math.random().toString(36).substring(2, 15)}`;\r\n\r\n  const isValid = confidence >= 0.65; // 65% m\xEDnimo de confianza\r\n\r\n  console.log(`\u2705 Validaci\xF3n mejorada: Direcci\xF3n ${isValid ? 'v\xE1lida' : 'inv\xE1lida'} con ${Math.round(confidence * 100)}% confianza`);\r\n\r\n  return {\r\n    isValid,\r\n    confidence,\r\n    suggestions: !isValid ? [\r\n      'Verifica que la direcci\xF3n est\xE9 completa',\r\n      'Aseg\xFArate de incluir el n\xFAmero de la calle',\r\n      'Confirma que la ciudad y provincia sean correctas'\r\n    ] : undefined,\r\n    coordinates,\r\n    formatted_address,\r\n    components: {\r\n      route: address.street,\r\n      locality: address.city,\r\n      administrative_area_level_1: address.state,\r\n      postal_code: address.postal_code,\r\n      country: address.country\r\n    },\r\n    place_id,\r\n    types: ['street_address', 'establishment']\r\n  };\r\n}\r\n\r\n// Validaci\xF3n de respaldo cuando Google Places API no est\xE1 disponible\r\nasync function fallbackValidation(address: {\r\n  street: string;\r\n  city: string;\r\n  state: string;\r\n  postal_code: string;\r\n  country: string;\r\n}): Promise<ValidationResult> {\r\n  console.log('\uD83D\uDD04 Usando validaci\xF3n de respaldo (sin Google Places API)');\r\n\r\n  // Validaci\xF3n b\xE1sica mejorada\r\n  const isValidPostalCode = /^[0-9]{4,5}$/.test(address.postal_code);\r\n  const isValidCity = address.city.length >= 2;\r\n  const isValidStreet = address.street.length >= 5;\r\n\r\n  // Calcular confianza basada en validaciones b\xE1sicas\r\n  let confidence = 0;\r\n  if (isValidPostalCode) confidence += 0.3;\r\n  if (isValidCity) confidence += 0.25;\r\n  if (isValidStreet) confidence += 0.25;\r\n\r\n  // Validaciones adicionales para Argentina\r\n  const argentineCities = ['C\xF3rdoba', 'Buenos Aires', 'Rosario', 'Mendoza', 'La Plata', 'Tucum\xE1n', 'Salta', 'Santa Fe'];\r\n  if (argentineCities.some(city => address.city.toLowerCase().includes(city.toLowerCase()))) {\r\n    confidence += 0.2;\r\n  }\r\n\r\n  const isValid = confidence >= 0.7;\r\n\r\n  // Coordenadas aproximadas para ciudades principales de Argentina\r\n  const cityCoordinates: { [key: string]: { lat: number; lng: number } } = {\r\n    'c\xF3rdoba': { lat: -31.4201, lng: -64.1888 },\r\n    'buenos aires': { lat: -34.6118, lng: -58.3960 },\r\n    'rosario': { lat: -32.9442, lng: -60.6505 },\r\n    'mendoza': { lat: -32.8895, lng: -68.8458 },\r\n    'la plata': { lat: -34.9215, lng: -57.9545 }\r\n  };\r\n\r\n  const cityKey = address.city.toLowerCase();\r\n  const coordinates = cityCoordinates[cityKey] || { lat: -34.6118, lng: -58.3960 }; // Default Buenos Aires\r\n\r\n  return {\r\n    isValid,\r\n    confidence,\r\n    suggestions: !isValid ? [\r\n      `\xBFQuisiste decir \"${address.street.replace(/\\d+/, '123')}\"?`,\r\n      `Verifica el c\xF3digo postal para ${address.city}`,\r\n      'Aseg\xFArate de incluir el n\xFAmero de la calle'\r\n    ] : undefined,\r\n    coordinates: isValid ? {\r\n      latitude: coordinates.lat + (Math.random() - 0.5) * 0.01, // Peque\xF1a variaci\xF3n\r\n      longitude: coordinates.lng + (Math.random() - 0.5) * 0.01\r\n    } : undefined,\r\n    formatted_address: isValid ?\r\n      `${address.street}, ${address.city}, ${address.state} ${address.postal_code}, ${address.country}` :\r\n      undefined,\r\n    components: isValid ? {\r\n      route: address.street,\r\n      locality: address.city,\r\n      administrative_area_level_1: address.state,\r\n      postal_code: address.postal_code,\r\n      country: address.country\r\n    } : undefined\r\n  };\r\n}\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n\r\n    // Validar datos de entrada\r\n    const validationResult = AddressValidationSchema.safeParse(body);\r\n\r\n    if (!validationResult.success) {\r\n      return NextResponse.json(\r\n        {\r\n          error: 'Datos de direcci\xF3n inv\xE1lidos',\r\n          details: validationResult.error.errors\r\n        },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const addressData = validationResult.data;\r\n\r\n    // Validar direcci\xF3n con Google Places API\r\n    const result = await validateAddressWithGooglePlaces(addressData);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: result,\r\n      message: result.isValid\r\n        ? 'Direcci\xF3n validada correctamente'\r\n        : 'La direcci\xF3n necesita correcciones'\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error en validaci\xF3n de direcci\xF3n:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// Endpoint para autocompletar direcciones\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const query = searchParams.get('q');\r\n\r\n    if (!query || query.length < 3) {\r\n      return NextResponse.json({\r\n        success: true,\r\n        suggestions: []\r\n      });\r\n    }\r\n\r\n    // Simular autocompletado de direcciones\r\n    await new Promise(resolve => setTimeout(resolve, 300));\r\n\r\n    // Sugerencias simuladas basadas en la consulta\r\n    const suggestions = [\r\n      `${query} 123, C\xF3rdoba, C\xF3rdoba`,\r\n      `${query} 456, Buenos Aires, Buenos Aires`,\r\n      `${query} 789, Rosario, Santa Fe`,\r\n      `Av. ${query}, Mendoza, Mendoza`,\r\n      `${query} Norte, La Plata, Buenos Aires`\r\n    ].slice(0, 5);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      suggestions: suggestions.map((suggestion, index) => ({\r\n        id: `suggestion_${index}`,\r\n        description: suggestion,\r\n        structured_formatting: {\r\n          main_text: suggestion.split(',')[0],\r\n          secondary_text: suggestion.split(',').slice(1).join(',').trim()\r\n        }\r\n      }))\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error en autocompletado de direcciones:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "AddressValidationSchema", "z", "object", "street", "string", "min", "city", "state", "postal_code", "country", "default", "googleMapsClient", "Client", "validateAddressWithGooglePlaces", "address", "apiKey", "process", "env", "GOOGLE_PLACES_API_KEY", "console", "warn", "enhancedSimulationValidation", "fullAddress", "log", "geocodeResponse", "geocode", "params", "key", "region", "language", "data", "status", "results", "length", "result", "location", "geometry", "confidence", "location_type", "isInArgentina", "address_components", "some", "component", "types", "includes", "short_name", "long_name", "components", "forEach", "route", "locality", "administrative_area_level_1", "isValid", "Math", "round", "suggestions", "undefined", "coordinates", "latitude", "lat", "longitude", "lng", "formatted_address", "place_id", "error", "isValidPostalCode", "test", "isValidCity", "isValidStreet", "hasStreetNumber", "argentinaCities", "confidence_bonus", "cityKey", "toLowerCase", "cityData", "baseCoords", "random", "toString", "substring", "fallbackValidation", "argentineCities", "cityCoordinates", "replace", "request", "body", "json", "validationResult", "safeParse", "success", "NextResponse", "details", "errors", "addressData", "message", "searchParams", "URL", "url", "query", "get", "Promise", "resolve", "setTimeout", "slice", "map", "suggestion", "index", "id", "description", "structured_formatting", "main_text", "split", "secondary_text", "join", "trim"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d20645fe75c527b76ac292dad9c28c71853e6998"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_4gk09zx8m = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_4gk09zx8m();
cov_4gk09zx8m().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_4gk09zx8m().f[0]++;
  cov_4gk09zx8m().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_4gk09zx8m().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_4gk09zx8m().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_4gk09zx8m().f[1]++;
    cov_4gk09zx8m().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_4gk09zx8m().f[2]++;
    cov_4gk09zx8m().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_4gk09zx8m().f[3]++;
    cov_4gk09zx8m().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_4gk09zx8m().s[7]++, require("next/server"));
const _zod =
/* istanbul ignore next */
(cov_4gk09zx8m().s[8]++, require("zod"));
const _googlemapsservicesjs =
/* istanbul ignore next */
(cov_4gk09zx8m().s[9]++, require("@googlemaps/google-maps-services-js"));
const runtime =
/* istanbul ignore next */
(cov_4gk09zx8m().s[10]++, 'nodejs');
// Schema de validaciÃ³n para la direcciÃ³n
const AddressValidationSchema =
/* istanbul ignore next */
(cov_4gk09zx8m().s[11]++, _zod.z.object({
  street: _zod.z.string().min(1, 'La direcciÃ³n es requerida'),
  city: _zod.z.string().min(1, 'La ciudad es requerida'),
  state: _zod.z.string().min(1, 'La provincia es requerida'),
  postal_code: _zod.z.string().min(1, 'El cÃ³digo postal es requerido'),
  country: _zod.z.string().default('Argentina')
}));
// Inicializar cliente de Google Maps
const googleMapsClient =
/* istanbul ignore next */
(cov_4gk09zx8m().s[12]++, new _googlemapsservicesjs.Client({}));
// ValidaciÃ³n real de direcciones usando Google Places API
async function validateAddressWithGooglePlaces(address) {
  /* istanbul ignore next */
  cov_4gk09zx8m().f[4]++;
  cov_4gk09zx8m().s[13]++;
  try {
    const apiKey =
    /* istanbul ignore next */
    (cov_4gk09zx8m().s[14]++, process.env.GOOGLE_PLACES_API_KEY);
    /* istanbul ignore next */
    cov_4gk09zx8m().s[15]++;
    if (!apiKey) {
      /* istanbul ignore next */
      cov_4gk09zx8m().b[0][0]++;
      cov_4gk09zx8m().s[16]++;
      console.warn('â ï¸ Google Places API key no configurada, usando validaciÃ³n mejorada');
      /* istanbul ignore next */
      cov_4gk09zx8m().s[17]++;
      return await enhancedSimulationValidation(address);
    } else
    /* istanbul ignore next */
    {
      cov_4gk09zx8m().b[0][1]++;
    }
    // Construir direcciÃ³n completa para geocoding
    const fullAddress =
    /* istanbul ignore next */
    (cov_4gk09zx8m().s[18]++, `${address.street}, ${address.city}, ${address.state} ${address.postal_code}, ${address.country}`);
    /* istanbul ignore next */
    cov_4gk09zx8m().s[19]++;
    console.log('ğ Validando direcciÃ³n con Google Places API:', fullAddress);
    // Usar Geocoding API para validar y obtener coordenadas precisas
    const geocodeResponse =
    /* istanbul ignore next */
    (cov_4gk09zx8m().s[20]++, await googleMapsClient.geocode({
      params: {
        address: fullAddress,
        key: apiKey,
        region: 'ar',
        language: 'es'
      }
    }));
    /* istanbul ignore next */
    cov_4gk09zx8m().s[21]++;
    if (
    /* istanbul ignore next */
    (cov_4gk09zx8m().b[2][0]++, geocodeResponse.data.status !== 'OK') ||
    /* istanbul ignore next */
    (cov_4gk09zx8m().b[2][1]++, geocodeResponse.data.results.length === 0)) {
      /* istanbul ignore next */
      cov_4gk09zx8m().b[1][0]++;
      cov_4gk09zx8m().s[22]++;
      console.log('â Google Places: No se encontraron resultados para la direcciÃ³n');
      /* istanbul ignore next */
      cov_4gk09zx8m().s[23]++;
      return await enhancedSimulationValidation(address);
    } else
    /* istanbul ignore next */
    {
      cov_4gk09zx8m().b[1][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_4gk09zx8m().s[24]++, geocodeResponse.data.results[0]);
    const location =
    /* istanbul ignore next */
    (cov_4gk09zx8m().s[25]++, result.geometry.location);
    // Calcular confianza basada en el tipo de resultado
    let confidence =
    /* istanbul ignore next */
    (cov_4gk09zx8m().s[26]++, 0.5); // Base 50%
    // Aumentar confianza segÃºn precisiÃ³n del resultado
    /* istanbul ignore next */
    cov_4gk09zx8m().s[27]++;
    if (result.geometry.location_type === 'ROOFTOP') {
      /* istanbul ignore next */
      cov_4gk09zx8m().b[3][0]++;
      cov_4gk09zx8m().s[28]++;
      confidence = 0.95;
    } else {
      /* istanbul ignore next */
      cov_4gk09zx8m().b[3][1]++;
      cov_4gk09zx8m().s[29]++;
      if (result.geometry.location_type === 'RANGE_INTERPOLATED') {
        /* istanbul ignore next */
        cov_4gk09zx8m().b[4][0]++;
        cov_4gk09zx8m().s[30]++;
        confidence = 0.85;
      } else {
        /* istanbul ignore next */
        cov_4gk09zx8m().b[4][1]++;
        cov_4gk09zx8m().s[31]++;
        if (result.geometry.location_type === 'GEOMETRIC_CENTER') {
          /* istanbul ignore next */
          cov_4gk09zx8m().b[5][0]++;
          cov_4gk09zx8m().s[32]++;
          confidence = 0.75;
        } else {
          /* istanbul ignore next */
          cov_4gk09zx8m().b[5][1]++;
          cov_4gk09zx8m().s[33]++;
          if (result.geometry.location_type === 'APPROXIMATE') {
            /* istanbul ignore next */
            cov_4gk09zx8m().b[6][0]++;
            cov_4gk09zx8m().s[34]++;
            confidence = 0.65;
          } else
          /* istanbul ignore next */
          {
            cov_4gk09zx8m().b[6][1]++;
          }
        }
      }
    }
    // Verificar que estÃ© en Argentina
    const isInArgentina =
    /* istanbul ignore next */
    (cov_4gk09zx8m().s[35]++, result.address_components.some(component => {
      /* istanbul ignore next */
      cov_4gk09zx8m().f[5]++;
      cov_4gk09zx8m().s[36]++;
      return /* istanbul ignore next */(cov_4gk09zx8m().b[7][0]++, component.types.includes('country')) && (
      /* istanbul ignore next */
      (cov_4gk09zx8m().b[7][1]++, component.short_name === 'AR') ||
      /* istanbul ignore next */
      (cov_4gk09zx8m().b[7][2]++, component.long_name === 'Argentina'));
    }));
    /* istanbul ignore next */
    cov_4gk09zx8m().s[37]++;
    if (!isInArgentina) {
      /* istanbul ignore next */
      cov_4gk09zx8m().b[8][0]++;
      cov_4gk09zx8m().s[38]++;
      confidence *= 0.5; // Reducir confianza si no estÃ¡ en Argentina
    } else
    /* istanbul ignore next */
    {
      cov_4gk09zx8m().b[8][1]++;
    }
    // Extraer componentes de la direcciÃ³n
    const components =
    /* istanbul ignore next */
    (cov_4gk09zx8m().s[39]++, {});
    /* istanbul ignore next */
    cov_4gk09zx8m().s[40]++;
    result.address_components.forEach(component => {
      /* istanbul ignore next */
      cov_4gk09zx8m().f[6]++;
      cov_4gk09zx8m().s[41]++;
      if (component.types.includes('route')) {
        /* istanbul ignore next */
        cov_4gk09zx8m().b[9][0]++;
        cov_4gk09zx8m().s[42]++;
        components.route = component.long_name;
      } else {
        /* istanbul ignore next */
        cov_4gk09zx8m().b[9][1]++;
        cov_4gk09zx8m().s[43]++;
        if (component.types.includes('locality')) {
          /* istanbul ignore next */
          cov_4gk09zx8m().b[10][0]++;
          cov_4gk09zx8m().s[44]++;
          components.locality = component.long_name;
        } else {
          /* istanbul ignore next */
          cov_4gk09zx8m().b[10][1]++;
          cov_4gk09zx8m().s[45]++;
          if (component.types.includes('administrative_area_level_1')) {
            /* istanbul ignore next */
            cov_4gk09zx8m().b[11][0]++;
            cov_4gk09zx8m().s[46]++;
            components.administrative_area_level_1 = component.long_name;
          } else {
            /* istanbul ignore next */
            cov_4gk09zx8m().b[11][1]++;
            cov_4gk09zx8m().s[47]++;
            if (component.types.includes('postal_code')) {
              /* istanbul ignore next */
              cov_4gk09zx8m().b[12][0]++;
              cov_4gk09zx8m().s[48]++;
              components.postal_code = component.long_name;
            } else {
              /* istanbul ignore next */
              cov_4gk09zx8m().b[12][1]++;
              cov_4gk09zx8m().s[49]++;
              if (component.types.includes('country')) {
                /* istanbul ignore next */
                cov_4gk09zx8m().b[13][0]++;
                cov_4gk09zx8m().s[50]++;
                components.country = component.long_name;
              } else
              /* istanbul ignore next */
              {
                cov_4gk09zx8m().b[13][1]++;
              }
            }
          }
        }
      }
    });
    const isValid =
    /* istanbul ignore next */
    (cov_4gk09zx8m().s[51]++, confidence >= 0.6); // 60% mÃ­nimo de confianza
    /* istanbul ignore next */
    cov_4gk09zx8m().s[52]++;
    console.log(`â Google Places: DirecciÃ³n ${isValid ?
    /* istanbul ignore next */
    (cov_4gk09zx8m().b[14][0]++, 'vÃ¡lida') :
    /* istanbul ignore next */
    (cov_4gk09zx8m().b[14][1]++, 'invÃ¡lida')} con ${Math.round(confidence * 100)}% confianza`);
    /* istanbul ignore next */
    cov_4gk09zx8m().s[53]++;
    return {
      isValid,
      confidence,
      suggestions: !isValid ?
      /* istanbul ignore next */
      (cov_4gk09zx8m().b[15][0]++, ['Verifica que la direcciÃ³n estÃ© completa', 'AsegÃºrate de incluir el nÃºmero de la calle', 'Confirma que la ciudad y provincia sean correctas']) :
      /* istanbul ignore next */
      (cov_4gk09zx8m().b[15][1]++, undefined),
      coordinates: {
        latitude: location.lat,
        longitude: location.lng
      },
      formatted_address: result.formatted_address,
      components,
      place_id: result.place_id,
      types: result.types
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_4gk09zx8m().s[54]++;
    console.error('â Error en Google Places API:', error);
    /* istanbul ignore next */
    cov_4gk09zx8m().s[55]++;
    return await enhancedSimulationValidation(address);
  }
}
// ValidaciÃ³n mejorada que simula Google Places API con datos realistas
async function enhancedSimulationValidation(address) {
  /* istanbul ignore next */
  cov_4gk09zx8m().f[7]++;
  cov_4gk09zx8m().s[56]++;
  console.log('ğ¯ Usando validaciÃ³n mejorada (simulaciÃ³n de Google Places API)');
  // Validaciones bÃ¡sicas mejoradas
  const isValidPostalCode =
  /* istanbul ignore next */
  (cov_4gk09zx8m().s[57]++, /^[0-9]{4,5}$/.test(address.postal_code));
  const isValidCity =
  /* istanbul ignore next */
  (cov_4gk09zx8m().s[58]++, address.city.length >= 2);
  const isValidStreet =
  /* istanbul ignore next */
  (cov_4gk09zx8m().s[59]++, address.street.length >= 5);
  const hasStreetNumber =
  /* istanbul ignore next */
  (cov_4gk09zx8m().s[60]++, /\d+/.test(address.street));
  // Calcular confianza basada en validaciones
  let confidence =
  /* istanbul ignore next */
  (cov_4gk09zx8m().s[61]++, 0.5); // Base 50%
  /* istanbul ignore next */
  cov_4gk09zx8m().s[62]++;
  if (isValidPostalCode) {
    /* istanbul ignore next */
    cov_4gk09zx8m().b[16][0]++;
    cov_4gk09zx8m().s[63]++;
    confidence += 0.2;
  } else
  /* istanbul ignore next */
  {
    cov_4gk09zx8m().b[16][1]++;
  }
  cov_4gk09zx8m().s[64]++;
  if (isValidCity) {
    /* istanbul ignore next */
    cov_4gk09zx8m().b[17][0]++;
    cov_4gk09zx8m().s[65]++;
    confidence += 0.15;
  } else
  /* istanbul ignore next */
  {
    cov_4gk09zx8m().b[17][1]++;
  }
  cov_4gk09zx8m().s[66]++;
  if (isValidStreet) {
    /* istanbul ignore next */
    cov_4gk09zx8m().b[18][0]++;
    cov_4gk09zx8m().s[67]++;
    confidence += 0.15;
  } else
  /* istanbul ignore next */
  {
    cov_4gk09zx8m().b[18][1]++;
  }
  cov_4gk09zx8m().s[68]++;
  if (hasStreetNumber) {
    /* istanbul ignore next */
    cov_4gk09zx8m().b[19][0]++;
    cov_4gk09zx8m().s[69]++;
    confidence += 0.1;
  } else
  /* istanbul ignore next */
  {
    cov_4gk09zx8m().b[19][1]++;
  }
  // Simular coordenadas realistas para Argentina
  const argentinaCities =
  /* istanbul ignore next */
  (cov_4gk09zx8m().s[70]++, {
    'cÃ³rdoba': {
      lat: -31.4201,
      lng: -64.1888,
      confidence_bonus: 0.1
    },
    'cordoba': {
      lat: -31.4201,
      lng: -64.1888,
      confidence_bonus: 0.1
    },
    'buenos aires': {
      lat: -34.6118,
      lng: -58.3960,
      confidence_bonus: 0.1
    },
    'rosario': {
      lat: -32.9442,
      lng: -60.6505,
      confidence_bonus: 0.1
    },
    'mendoza': {
      lat: -32.8908,
      lng: -68.8272,
      confidence_bonus: 0.1
    },
    'alta gracia': {
      lat: -31.6539,
      lng: -64.4281,
      confidence_bonus: 0.1
    }
  });
  const cityKey =
  /* istanbul ignore next */
  (cov_4gk09zx8m().s[71]++, address.city.toLowerCase());
  const cityData =
  /* istanbul ignore next */
  (cov_4gk09zx8m().s[72]++, argentinaCities[cityKey]);
  /* istanbul ignore next */
  cov_4gk09zx8m().s[73]++;
  if (cityData) {
    /* istanbul ignore next */
    cov_4gk09zx8m().b[20][0]++;
    cov_4gk09zx8m().s[74]++;
    confidence += cityData.confidence_bonus;
  } else
  /* istanbul ignore next */
  {
    cov_4gk09zx8m().b[20][1]++;
  }
  // Generar coordenadas simuladas
  const baseCoords =
  /* istanbul ignore next */
  (cov_4gk09zx8m().s[75]++,
  /* istanbul ignore next */
  (cov_4gk09zx8m().b[21][0]++, cityData) ||
  /* istanbul ignore next */
  (cov_4gk09zx8m().b[21][1]++, {
    lat: -31.4201,
    lng: -64.1888,
    confidence_bonus: 0
  }));
  const coordinates =
  /* istanbul ignore next */
  (cov_4gk09zx8m().s[76]++, {
    latitude: baseCoords.lat + (Math.random() - 0.5) * 0.1,
    longitude: baseCoords.lng + (Math.random() - 0.5) * 0.1
  });
  // Generar direcciÃ³n formateada simulada
  const formatted_address =
  /* istanbul ignore next */
  (cov_4gk09zx8m().s[77]++, `${address.street}, ${address.city}, ${address.state} ${address.postal_code}, Argentina`);
  // Generar place_id simulado
  const place_id =
  /* istanbul ignore next */
  (cov_4gk09zx8m().s[78]++, `ChIJ${Math.random().toString(36).substring(2, 15)}${Math.random().toString(36).substring(2, 15)}`);
  const isValid =
  /* istanbul ignore next */
  (cov_4gk09zx8m().s[79]++, confidence >= 0.65); // 65% mÃ­nimo de confianza
  /* istanbul ignore next */
  cov_4gk09zx8m().s[80]++;
  console.log(`â ValidaciÃ³n mejorada: DirecciÃ³n ${isValid ?
  /* istanbul ignore next */
  (cov_4gk09zx8m().b[22][0]++, 'vÃ¡lida') :
  /* istanbul ignore next */
  (cov_4gk09zx8m().b[22][1]++, 'invÃ¡lida')} con ${Math.round(confidence * 100)}% confianza`);
  /* istanbul ignore next */
  cov_4gk09zx8m().s[81]++;
  return {
    isValid,
    confidence,
    suggestions: !isValid ?
    /* istanbul ignore next */
    (cov_4gk09zx8m().b[23][0]++, ['Verifica que la direcciÃ³n estÃ© completa', 'AsegÃºrate de incluir el nÃºmero de la calle', 'Confirma que la ciudad y provincia sean correctas']) :
    /* istanbul ignore next */
    (cov_4gk09zx8m().b[23][1]++, undefined),
    coordinates,
    formatted_address,
    components: {
      route: address.street,
      locality: address.city,
      administrative_area_level_1: address.state,
      postal_code: address.postal_code,
      country: address.country
    },
    place_id,
    types: ['street_address', 'establishment']
  };
}
// ValidaciÃ³n de respaldo cuando Google Places API no estÃ¡ disponible
async function fallbackValidation(address) {
  /* istanbul ignore next */
  cov_4gk09zx8m().f[8]++;
  cov_4gk09zx8m().s[82]++;
  console.log('ğ Usando validaciÃ³n de respaldo (sin Google Places API)');
  // ValidaciÃ³n bÃ¡sica mejorada
  const isValidPostalCode =
  /* istanbul ignore next */
  (cov_4gk09zx8m().s[83]++, /^[0-9]{4,5}$/.test(address.postal_code));
  const isValidCity =
  /* istanbul ignore next */
  (cov_4gk09zx8m().s[84]++, address.city.length >= 2);
  const isValidStreet =
  /* istanbul ignore next */
  (cov_4gk09zx8m().s[85]++, address.street.length >= 5);
  // Calcular confianza basada en validaciones bÃ¡sicas
  let confidence =
  /* istanbul ignore next */
  (cov_4gk09zx8m().s[86]++, 0);
  /* istanbul ignore next */
  cov_4gk09zx8m().s[87]++;
  if (isValidPostalCode) {
    /* istanbul ignore next */
    cov_4gk09zx8m().b[24][0]++;
    cov_4gk09zx8m().s[88]++;
    confidence += 0.3;
  } else
  /* istanbul ignore next */
  {
    cov_4gk09zx8m().b[24][1]++;
  }
  cov_4gk09zx8m().s[89]++;
  if (isValidCity) {
    /* istanbul ignore next */
    cov_4gk09zx8m().b[25][0]++;
    cov_4gk09zx8m().s[90]++;
    confidence += 0.25;
  } else
  /* istanbul ignore next */
  {
    cov_4gk09zx8m().b[25][1]++;
  }
  cov_4gk09zx8m().s[91]++;
  if (isValidStreet) {
    /* istanbul ignore next */
    cov_4gk09zx8m().b[26][0]++;
    cov_4gk09zx8m().s[92]++;
    confidence += 0.25;
  } else
  /* istanbul ignore next */
  {
    cov_4gk09zx8m().b[26][1]++;
  }
  // Validaciones adicionales para Argentina
  const argentineCities =
  /* istanbul ignore next */
  (cov_4gk09zx8m().s[93]++, ['CÃ³rdoba', 'Buenos Aires', 'Rosario', 'Mendoza', 'La Plata', 'TucumÃ¡n', 'Salta', 'Santa Fe']);
  /* istanbul ignore next */
  cov_4gk09zx8m().s[94]++;
  if (argentineCities.some(city => {
    /* istanbul ignore next */
    cov_4gk09zx8m().f[9]++;
    cov_4gk09zx8m().s[95]++;
    return address.city.toLowerCase().includes(city.toLowerCase());
  })) {
    /* istanbul ignore next */
    cov_4gk09zx8m().b[27][0]++;
    cov_4gk09zx8m().s[96]++;
    confidence += 0.2;
  } else
  /* istanbul ignore next */
  {
    cov_4gk09zx8m().b[27][1]++;
  }
  const isValid =
  /* istanbul ignore next */
  (cov_4gk09zx8m().s[97]++, confidence >= 0.7);
  // Coordenadas aproximadas para ciudades principales de Argentina
  const cityCoordinates =
  /* istanbul ignore next */
  (cov_4gk09zx8m().s[98]++, {
    'cÃ³rdoba': {
      lat: -31.4201,
      lng: -64.1888
    },
    'buenos aires': {
      lat: -34.6118,
      lng: -58.3960
    },
    'rosario': {
      lat: -32.9442,
      lng: -60.6505
    },
    'mendoza': {
      lat: -32.8895,
      lng: -68.8458
    },
    'la plata': {
      lat: -34.9215,
      lng: -57.9545
    }
  });
  const cityKey =
  /* istanbul ignore next */
  (cov_4gk09zx8m().s[99]++, address.city.toLowerCase());
  const coordinates =
  /* istanbul ignore next */
  (cov_4gk09zx8m().s[100]++,
  /* istanbul ignore next */
  (cov_4gk09zx8m().b[28][0]++, cityCoordinates[cityKey]) ||
  /* istanbul ignore next */
  (cov_4gk09zx8m().b[28][1]++, {
    lat: -34.6118,
    lng: -58.3960
  })); // Default Buenos Aires
  /* istanbul ignore next */
  cov_4gk09zx8m().s[101]++;
  return {
    isValid,
    confidence,
    suggestions: !isValid ?
    /* istanbul ignore next */
    (cov_4gk09zx8m().b[29][0]++, [`Â¿Quisiste decir "${address.street.replace(/\d+/, '123')}"?`, `Verifica el cÃ³digo postal para ${address.city}`, 'AsegÃºrate de incluir el nÃºmero de la calle']) :
    /* istanbul ignore next */
    (cov_4gk09zx8m().b[29][1]++, undefined),
    coordinates: isValid ?
    /* istanbul ignore next */
    (cov_4gk09zx8m().b[30][0]++, {
      latitude: coordinates.lat + (Math.random() - 0.5) * 0.01,
      longitude: coordinates.lng + (Math.random() - 0.5) * 0.01
    }) :
    /* istanbul ignore next */
    (cov_4gk09zx8m().b[30][1]++, undefined),
    formatted_address: isValid ?
    /* istanbul ignore next */
    (cov_4gk09zx8m().b[31][0]++, `${address.street}, ${address.city}, ${address.state} ${address.postal_code}, ${address.country}`) :
    /* istanbul ignore next */
    (cov_4gk09zx8m().b[31][1]++, undefined),
    components: isValid ?
    /* istanbul ignore next */
    (cov_4gk09zx8m().b[32][0]++, {
      route: address.street,
      locality: address.city,
      administrative_area_level_1: address.state,
      postal_code: address.postal_code,
      country: address.country
    }) :
    /* istanbul ignore next */
    (cov_4gk09zx8m().b[32][1]++, undefined)
  };
}
async function POST(request) {
  /* istanbul ignore next */
  cov_4gk09zx8m().f[10]++;
  cov_4gk09zx8m().s[102]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_4gk09zx8m().s[103]++, await request.json());
    // Validar datos de entrada
    const validationResult =
    /* istanbul ignore next */
    (cov_4gk09zx8m().s[104]++, AddressValidationSchema.safeParse(body));
    /* istanbul ignore next */
    cov_4gk09zx8m().s[105]++;
    if (!validationResult.success) {
      /* istanbul ignore next */
      cov_4gk09zx8m().b[33][0]++;
      cov_4gk09zx8m().s[106]++;
      return _server.NextResponse.json({
        error: 'Datos de direcciÃ³n invÃ¡lidos',
        details: validationResult.error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_4gk09zx8m().b[33][1]++;
    }
    const addressData =
    /* istanbul ignore next */
    (cov_4gk09zx8m().s[107]++, validationResult.data);
    // Validar direcciÃ³n con Google Places API
    const result =
    /* istanbul ignore next */
    (cov_4gk09zx8m().s[108]++, await validateAddressWithGooglePlaces(addressData));
    /* istanbul ignore next */
    cov_4gk09zx8m().s[109]++;
    return _server.NextResponse.json({
      success: true,
      data: result,
      message: result.isValid ?
      /* istanbul ignore next */
      (cov_4gk09zx8m().b[34][0]++, 'DirecciÃ³n validada correctamente') :
      /* istanbul ignore next */
      (cov_4gk09zx8m().b[34][1]++, 'La direcciÃ³n necesita correcciones')
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_4gk09zx8m().s[110]++;
    console.error('Error en validaciÃ³n de direcciÃ³n:', error);
    /* istanbul ignore next */
    cov_4gk09zx8m().s[111]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_4gk09zx8m().f[11]++;
  cov_4gk09zx8m().s[112]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_4gk09zx8m().s[113]++, new URL(request.url));
    const query =
    /* istanbul ignore next */
    (cov_4gk09zx8m().s[114]++, searchParams.get('q'));
    /* istanbul ignore next */
    cov_4gk09zx8m().s[115]++;
    if (
    /* istanbul ignore next */
    (cov_4gk09zx8m().b[36][0]++, !query) ||
    /* istanbul ignore next */
    (cov_4gk09zx8m().b[36][1]++, query.length < 3)) {
      /* istanbul ignore next */
      cov_4gk09zx8m().b[35][0]++;
      cov_4gk09zx8m().s[116]++;
      return _server.NextResponse.json({
        success: true,
        suggestions: []
      });
    } else
    /* istanbul ignore next */
    {
      cov_4gk09zx8m().b[35][1]++;
    }
    // Simular autocompletado de direcciones
    cov_4gk09zx8m().s[117]++;
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_4gk09zx8m().f[12]++;
      cov_4gk09zx8m().s[118]++;
      return setTimeout(resolve, 300);
    });
    // Sugerencias simuladas basadas en la consulta
    const suggestions =
    /* istanbul ignore next */
    (cov_4gk09zx8m().s[119]++, [`${query} 123, CÃ³rdoba, CÃ³rdoba`, `${query} 456, Buenos Aires, Buenos Aires`, `${query} 789, Rosario, Santa Fe`, `Av. ${query}, Mendoza, Mendoza`, `${query} Norte, La Plata, Buenos Aires`].slice(0, 5));
    /* istanbul ignore next */
    cov_4gk09zx8m().s[120]++;
    return _server.NextResponse.json({
      success: true,
      suggestions: suggestions.map((suggestion, index) => {
        /* istanbul ignore next */
        cov_4gk09zx8m().f[13]++;
        cov_4gk09zx8m().s[121]++;
        return {
          id: `suggestion_${index}`,
          description: suggestion,
          structured_formatting: {
            main_text: suggestion.split(',')[0],
            secondary_text: suggestion.split(',').slice(1).join(',').trim()
          }
        };
      })
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_4gk09zx8m().s[122]++;
    console.error('Error en autocompletado de direcciones:', error);
    /* istanbul ignore next */
    cov_4gk09zx8m().s[123]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,