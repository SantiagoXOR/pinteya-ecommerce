08df5d7c3166c633e63784c353cc27d9
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_2iwkf35so2() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\user-profile\\route.ts";
  var hash = "fb9d53a4d4243efff47957a82907006fcd0ab0b5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\user-profile\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 18
        },
        end: {
          line: 21,
          column: 66
        }
      },
      "8": {
        start: {
          line: 22,
          column: 19
        },
        end: {
          line: 22,
          column: 61
        }
      },
      "9": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 24
        }
      },
      "10": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 103,
          column: 5
        }
      },
      "11": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 27,
          column: 78
        }
      },
      "12": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "13": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 44,
          column: 15
        }
      },
      "14": {
        start: {
          line: 46,
          column: 28
        },
        end: {
          line: 46,
          column: 45
        }
      },
      "15": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 79
        }
      },
      "16": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "17": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 55,
          column: 15
        }
      },
      "18": {
        start: {
          line: 58,
          column: 55
        },
        end: {
          line: 58,
          column: 151
        }
      },
      "19": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 62,
          column: 11
        }
      },
      "20": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "21": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 74,
          column: 15
        }
      },
      "22": {
        start: {
          line: 77,
          column: 61
        },
        end: {
          line: 77,
          column: 179
        }
      },
      "23": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 81,
          column: 11
        }
      },
      "24": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 91,
          column: 11
        }
      },
      "25": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 62
        }
      },
      "26": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 102,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 18
          }
        },
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 104,
            column: 1
          }
        },
        line: 24
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 23
          },
          end: {
            line: 31,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 23
          },
          end: {
            line: 31,
            column: 39
          }
        }, {
          start: {
            line: 31,
            column: 43
          },
          end: {
            line: 31,
            column: 67
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "3": {
        loc: {
          start: {
            line: 60,
            column: 22
          },
          end: {
            line: 60,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 22
          },
          end: {
            line: 60,
            column: 38
          }
        }, {
          start: {
            line: 60,
            column: 42
          },
          end: {
            line: 60,
            column: 43
          }
        }],
        line: 60
      },
      "4": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "5": {
        loc: {
          start: {
            line: 79,
            column: 28
          },
          end: {
            line: 79,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 28
          },
          end: {
            line: 79,
            column: 50
          }
        }, {
          start: {
            line: 79,
            column: 54
          },
          end: {
            line: 79,
            column: 55
          }
        }],
        line: 79
      },
      "6": {
        loc: {
          start: {
            line: 86,
            column: 29
          },
          end: {
            line: 86,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 29
          },
          end: {
            line: 86,
            column: 37
          }
        }, {
          start: {
            line: 86,
            column: 41
          },
          end: {
            line: 86,
            column: 43
          }
        }],
        line: 86
      },
      "7": {
        loc: {
          start: {
            line: 87,
            column: 32
          },
          end: {
            line: 87,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 32
          },
          end: {
            line: 87,
            column: 46
          }
        }, {
          start: {
            line: 87,
            column: 50
          },
          end: {
            line: 87,
            column: 52
          }
        }],
        line: 87
      },
      "8": {
        loc: {
          start: {
            line: 88,
            column: 31
          },
          end: {
            line: 88,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 31
          },
          end: {
            line: 88,
            column: 47
          }
        }, {
          start: {
            line: 88,
            column: 51
          },
          end: {
            line: 88,
            column: 52
          }
        }],
        line: 88
      },
      "9": {
        loc: {
          start: {
            line: 89,
            column: 37
          },
          end: {
            line: 89,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 37
          },
          end: {
            line: 89,
            column: 59
          }
        }, {
          start: {
            line: 89,
            column: 63
          },
          end: {
            line: 89,
            column: 64
          }
        }],
        line: 89
      },
      "10": {
        loc: {
          start: {
            line: 98,
            column: 30
          },
          end: {
            line: 98,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 98,
            column: 55
          },
          end: {
            line: 98,
            column: 68
          }
        }, {
          start: {
            line: 98,
            column: 71
          },
          end: {
            line: 98,
            column: 86
          }
        }],
        line: 98
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\user-profile\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { getAuthenticatedUser } from '@/lib/auth/admin-auth';\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // MIGRADO: Usar getAuthenticatedUser en lugar de headers\r\n    const authResult = await getAuthenticatedUser(request);\r\n\r\n    if (!authResult.userId) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: authResult.error || 'Usuario no autenticado',\r\n        migration: {\r\n          status: 'MIGRATED',\r\n          oldMethod: 'headers x-clerk-user-id',\r\n          newMethod: 'getAuthenticatedUser()',\r\n          note: 'Ya no usa headers directamente'\r\n        },\r\n        debug: {\r\n          authResult,\r\n          deprecatedHeaders: Object.fromEntries(request.headers.entries())\r\n        }\r\n      }, { status: 401 });\r\n    }\r\n\r\n    const clerkUserId = authResult.userId;\r\n\r\n    console.log('\uD83D\uDD0D Debug User Profile: Searching for user:', clerkUserId);\r\n\r\n    // Verificar si supabaseAdmin est\xE1 disponible\r\n    if (!supabaseAdmin) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Supabase admin client not available'\r\n      }, { status: 500 });\r\n    }\r\n\r\n    // Buscar usuario sin joins para evitar problemas\r\n    const { data: profiles, error: searchError } = await supabaseAdmin\r\n      .from('user_profiles')\r\n      .select('*')\r\n      .eq('clerk_user_id', clerkUserId);\r\n\r\n    console.log('\uD83D\uDD0D Debug User Profile: Search results:', {\r\n      profiles: profiles?.length || 0,\r\n      error: searchError\r\n    });\r\n\r\n    if (searchError) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Database query error',\r\n        debug: {\r\n          clerkUserId,\r\n          searchError: searchError.message,\r\n          code: searchError.code\r\n        }\r\n      }, { status: 500 });\r\n    }\r\n\r\n    // Buscar solo usuarios activos sin joins\r\n    const { data: activeProfiles, error: activeError } = await supabaseAdmin\r\n      .from('user_profiles')\r\n      .select('*')\r\n      .eq('clerk_user_id', clerkUserId)\r\n      .eq('is_active', true);\r\n\r\n    console.log('\uD83D\uDD0D Debug User Profile: Active profiles:', {\r\n      activeProfiles: activeProfiles?.length || 0,\r\n      error: activeError\r\n    });\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      debug: {\r\n        clerkUserId,\r\n        allProfiles: profiles || [],\r\n        activeProfiles: activeProfiles || [],\r\n        totalProfiles: profiles?.length || 0,\r\n        totalActiveProfiles: activeProfiles?.length || 0\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('\uD83D\uDD0D Debug User Profile: Error:', error);\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Unexpected error',\r\n      debug: {\r\n        errorMessage: error instanceof Error ? error.message : 'Unknown error'\r\n      }\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "runtime", "request", "authResult", "getAuthenticatedUser", "userId", "NextResponse", "json", "success", "error", "migration", "status", "oldMethod", "newMethod", "note", "debug", "deprecatedHeaders", "Object", "fromEntries", "headers", "entries", "clerkUserId", "console", "log", "supabaseAdmin", "data", "profiles", "searchError", "from", "select", "eq", "length", "message", "code", "activeProfiles", "activeError", "allProfiles", "totalProfiles", "totalActiveProfiles", "errorMessage", "Error"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QAOfA;eAAAA;;QANTC;eAAAA;;;wBAE6B;0BACZ;2BACO;AAJ9B,MAAMA,UAAU;AAMhB,eAAeD,IAAIE,OAAoB;IAC5C,IAAI;QACF,yDAAyD;QACzD,MAAMC,aAAa,MAAMC,IAAAA,+BAAoB,EAACF;QAE9C,IAAI,CAACC,WAAWE,MAAM,EAAE;YACtB,OAAOC,oBAAY,CAACC,IAAI,CAAC;gBACvBC,SAAS;gBACTC,OAAON,WAAWM,KAAK,IAAI;gBAC3BC,WAAW;oBACTC,QAAQ;oBACRC,WAAW;oBACXC,WAAW;oBACXC,MAAM;gBACR;gBACAC,OAAO;oBACLZ;oBACAa,mBAAmBC,OAAOC,WAAW,CAAChB,QAAQiB,OAAO,CAACC,OAAO;gBAC/D;YACF,GAAG;gBAAET,QAAQ;YAAI;QACnB;QAEA,MAAMU,cAAclB,WAAWE,MAAM;QAErCiB,QAAQC,GAAG,CAAC,8CAA8CF;QAE1D,6CAA6C;QAC7C,IAAI,CAACG,uBAAa,EAAE;YAClB,OAAOlB,oBAAY,CAACC,IAAI,CAAC;gBACvBC,SAAS;gBACTC,OAAO;YACT,GAAG;gBAAEE,QAAQ;YAAI;QACnB;QAEA,iDAAiD;QACjD,MAAM,EAAEc,MAAMC,QAAQ,EAAEjB,OAAOkB,WAAW,EAAE,GAAG,MAAMH,uBAAa,CAC/DI,IAAI,CAAC,iBACLC,MAAM,CAAC,KACPC,EAAE,CAAC,iBAAiBT;QAEvBC,QAAQC,GAAG,CAAC,0CAA0C;YACpDG,UAAUA,UAAUK,UAAU;YAC9BtB,OAAOkB;QACT;QAEA,IAAIA,aAAa;YACf,OAAOrB,oBAAY,CAACC,IAAI,CAAC;gBACvBC,SAAS;gBACTC,OAAO;gBACPM,OAAO;oBACLM;oBACAM,aAAaA,YAAYK,OAAO;oBAChCC,MAAMN,YAAYM,IAAI;gBACxB;YACF,GAAG;gBAAEtB,QAAQ;YAAI;QACnB;QAEA,yCAAyC;QACzC,MAAM,EAAEc,MAAMS,cAAc,EAAEzB,OAAO0B,WAAW,EAAE,GAAG,MAAMX,uBAAa,CACrEI,IAAI,CAAC,iBACLC,MAAM,CAAC,KACPC,EAAE,CAAC,iBAAiBT,aACpBS,EAAE,CAAC,aAAa;QAEnBR,QAAQC,GAAG,CAAC,2CAA2C;YACrDW,gBAAgBA,gBAAgBH,UAAU;YAC1CtB,OAAO0B;QACT;QAEA,OAAO7B,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTO,OAAO;gBACLM;gBACAe,aAAaV,YAAY,EAAE;gBAC3BQ,gBAAgBA,kBAAkB,EAAE;gBACpCG,eAAeX,UAAUK,UAAU;gBACnCO,qBAAqBJ,gBAAgBH,UAAU;YACjD;QACF;IAEF,EAAE,OAAOtB,OAAO;QACda,QAAQb,KAAK,CAAC,iCAAiCA;QAC/C,OAAOH,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTC,OAAO;YACPM,OAAO;gBACLwB,cAAc9B,iBAAiB+B,QAAQ/B,MAAMuB,OAAO,GAAG;YACzD;QACF,GAAG;YAAErB,QAAQ;QAAI;IACnB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fb9d53a4d4243efff47957a82907006fcd0ab0b5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2iwkf35so2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2iwkf35so2();
cov_2iwkf35so2().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2iwkf35so2().f[0]++;
  cov_2iwkf35so2().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2iwkf35so2().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2iwkf35so2().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_2iwkf35so2().f[1]++;
    cov_2iwkf35so2().s[4]++;
    return GET;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_2iwkf35so2().f[2]++;
    cov_2iwkf35so2().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_2iwkf35so2().s[6]++, require("next/server"));
const _supabase =
/* istanbul ignore next */
(cov_2iwkf35so2().s[7]++, require("../../../../lib/integrations/supabase"));
const _adminauth =
/* istanbul ignore next */
(cov_2iwkf35so2().s[8]++, require("../../../../lib/auth/admin-auth"));
const runtime =
/* istanbul ignore next */
(cov_2iwkf35so2().s[9]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_2iwkf35so2().f[3]++;
  cov_2iwkf35so2().s[10]++;
  try {
    // MIGRADO: Usar getAuthenticatedUser en lugar de headers
    const authResult =
    /* istanbul ignore next */
    (cov_2iwkf35so2().s[11]++, await (0, _adminauth.getAuthenticatedUser)(request));
    /* istanbul ignore next */
    cov_2iwkf35so2().s[12]++;
    if (!authResult.userId) {
      /* istanbul ignore next */
      cov_2iwkf35so2().b[0][0]++;
      cov_2iwkf35so2().s[13]++;
      return _server.NextResponse.json({
        success: false,
        error:
        /* istanbul ignore next */
        (cov_2iwkf35so2().b[1][0]++, authResult.error) ||
        /* istanbul ignore next */
        (cov_2iwkf35so2().b[1][1]++, 'Usuario no autenticado'),
        migration: {
          status: 'MIGRATED',
          oldMethod: 'headers x-clerk-user-id',
          newMethod: 'getAuthenticatedUser()',
          note: 'Ya no usa headers directamente'
        },
        debug: {
          authResult,
          deprecatedHeaders: Object.fromEntries(request.headers.entries())
        }
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2iwkf35so2().b[0][1]++;
    }
    const clerkUserId =
    /* istanbul ignore next */
    (cov_2iwkf35so2().s[14]++, authResult.userId);
    /* istanbul ignore next */
    cov_2iwkf35so2().s[15]++;
    console.log('ğ Debug User Profile: Searching for user:', clerkUserId);
    // Verificar si supabaseAdmin estÃ¡ disponible
    /* istanbul ignore next */
    cov_2iwkf35so2().s[16]++;
    if (!_supabase.supabaseAdmin) {
      /* istanbul ignore next */
      cov_2iwkf35so2().b[2][0]++;
      cov_2iwkf35so2().s[17]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Supabase admin client not available'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2iwkf35so2().b[2][1]++;
    }
    // Buscar usuario sin joins para evitar problemas
    const {
      data: profiles,
      error: searchError
    } =
    /* istanbul ignore next */
    (cov_2iwkf35so2().s[18]++, await _supabase.supabaseAdmin.from('user_profiles').select('*').eq('clerk_user_id', clerkUserId));
    /* istanbul ignore next */
    cov_2iwkf35so2().s[19]++;
    console.log('ğ Debug User Profile: Search results:', {
      profiles:
      /* istanbul ignore next */
      (cov_2iwkf35so2().b[3][0]++, profiles?.length) ||
      /* istanbul ignore next */
      (cov_2iwkf35so2().b[3][1]++, 0),
      error: searchError
    });
    /* istanbul ignore next */
    cov_2iwkf35so2().s[20]++;
    if (searchError) {
      /* istanbul ignore next */
      cov_2iwkf35so2().b[4][0]++;
      cov_2iwkf35so2().s[21]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Database query error',
        debug: {
          clerkUserId,
          searchError: searchError.message,
          code: searchError.code
        }
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2iwkf35so2().b[4][1]++;
    }
    // Buscar solo usuarios activos sin joins
    const {
      data: activeProfiles,
      error: activeError
    } =
    /* istanbul ignore next */
    (cov_2iwkf35so2().s[22]++, await _supabase.supabaseAdmin.from('user_profiles').select('*').eq('clerk_user_id', clerkUserId).eq('is_active', true));
    /* istanbul ignore next */
    cov_2iwkf35so2().s[23]++;
    console.log('ğ Debug User Profile: Active profiles:', {
      activeProfiles:
      /* istanbul ignore next */
      (cov_2iwkf35so2().b[5][0]++, activeProfiles?.length) ||
      /* istanbul ignore next */
      (cov_2iwkf35so2().b[5][1]++, 0),
      error: activeError
    });
    /* istanbul ignore next */
    cov_2iwkf35so2().s[24]++;
    return _server.NextResponse.json({
      success: true,
      debug: {
        clerkUserId,
        allProfiles:
        /* istanbul ignore next */
        (cov_2iwkf35so2().b[6][0]++, profiles) ||
        /* istanbul ignore next */
        (cov_2iwkf35so2().b[6][1]++, []),
        activeProfiles:
        /* istanbul ignore next */
        (cov_2iwkf35so2().b[7][0]++, activeProfiles) ||
        /* istanbul ignore next */
        (cov_2iwkf35so2().b[7][1]++, []),
        totalProfiles:
        /* istanbul ignore next */
        (cov_2iwkf35so2().b[8][0]++, profiles?.length) ||
        /* istanbul ignore next */
        (cov_2iwkf35so2().b[8][1]++, 0),
        totalActiveProfiles:
        /* istanbul ignore next */
        (cov_2iwkf35so2().b[9][0]++, activeProfiles?.length) ||
        /* istanbul ignore next */
        (cov_2iwkf35so2().b[9][1]++, 0)
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2iwkf35so2().s[25]++;
    console.error('ğ Debug User Profile: Error:', error);
    /* istanbul ignore next */
    cov_2iwkf35so2().s[26]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Unexpected error',
      debug: {
        errorMessage: error instanceof Error ?
        /* istanbul ignore next */
        (cov_2iwkf35so2().b[10][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2iwkf35so2().b[10][1]++, 'Unknown error')
      }
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,