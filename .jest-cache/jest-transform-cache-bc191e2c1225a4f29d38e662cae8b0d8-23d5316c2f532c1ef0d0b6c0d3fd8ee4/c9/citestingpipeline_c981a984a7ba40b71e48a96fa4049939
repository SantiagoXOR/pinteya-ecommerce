f2551eb1b02c32ea1d06dbe245f84d5b
// ===================================
// PINTEYA E-COMMERCE - CI TESTING PIPELINE
// Pipeline de testing automatizado para integraciÃ³n continua
// ===================================
"use strict";

/* istanbul ignore next */
function cov_24c6n53n8j() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\testing\\ci-testing-pipeline.ts";
  var hash = "427370364330ee4b0df4e70253d34ea2bfc89c66";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\testing\\ci-testing-pipeline.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "2": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "3": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 26
        }
      },
      "5": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 33
        }
      },
      "6": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 24
        }
      },
      "7": {
        start: {
          line: 26,
          column: 33
        },
        end: {
          line: 26,
          column: 71
        }
      },
      "8": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "9": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 65
        }
      },
      "10": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 42
        }
      },
      "11": {
        start: {
          line: 40,
          column: 26
        },
        end: {
          line: 40,
          column: 43
        }
      },
      "12": {
        start: {
          line: 41,
          column: 23
        },
        end: {
          line: 41,
          column: 25
        }
      },
      "13": {
        start: {
          line: 42,
          column: 23
        },
        end: {
          line: 42,
          column: 25
        }
      },
      "14": {
        start: {
          line: 43,
          column: 32
        },
        end: {
          line: 43,
          column: 34
        }
      },
      "15": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 93
        }
      },
      "16": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "17": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "18": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 78
        }
      },
      "19": {
        start: {
          line: 49,
          column: 40
        },
        end: {
          line: 49,
          column: 89
        }
      },
      "20": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 45
        }
      },
      "21": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 54,
          column: 17
        }
      },
      "22": {
        start: {
          line: 52,
          column: 20
        },
        end: {
          line: 52,
          column: 94
        }
      },
      "23": {
        start: {
          line: 53,
          column: 20
        },
        end: {
          line: 53,
          column: 107
        }
      },
      "24": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 65,
          column: 13
        }
      },
      "25": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 80
        }
      },
      "26": {
        start: {
          line: 59,
          column: 41
        },
        end: {
          line: 59,
          column: 73
        }
      },
      "27": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 46
        }
      },
      "28": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 64,
          column: 17
        }
      },
      "29": {
        start: {
          line: 62,
          column: 20
        },
        end: {
          line: 62,
          column: 97
        }
      },
      "30": {
        start: {
          line: 63,
          column: 20
        },
        end: {
          line: 63,
          column: 108
        }
      },
      "31": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 75,
          column: 13
        }
      },
      "32": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 82
        }
      },
      "33": {
        start: {
          line: 69,
          column: 43
        },
        end: {
          line: 69,
          column: 77
        }
      },
      "34": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 48
        }
      },
      "35": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 74,
          column: 17
        }
      },
      "36": {
        start: {
          line: 72,
          column: 20
        },
        end: {
          line: 72,
          column: 101
        }
      },
      "37": {
        start: {
          line: 73,
          column: 20
        },
        end: {
          line: 73,
          column: 122
        }
      },
      "38": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 85,
          column: 13
        }
      },
      "39": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 78,
          column: 78
        }
      },
      "40": {
        start: {
          line: 79,
          column: 38
        },
        end: {
          line: 79,
          column: 67
        }
      },
      "41": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 43
        }
      },
      "42": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 84,
          column: 17
        }
      },
      "43": {
        start: {
          line: 82,
          column: 20
        },
        end: {
          line: 82,
          column: 92
        }
      },
      "44": {
        start: {
          line: 83,
          column: 20
        },
        end: {
          line: 83,
          column: 98
        }
      },
      "45": {
        start: {
          line: 86,
          column: 29
        },
        end: {
          line: 86,
          column: 58
        }
      },
      "46": {
        start: {
          line: 87,
          column: 28
        },
        end: {
          line: 87,
          column: 57
        }
      },
      "47": {
        start: {
          line: 88,
          column: 28
        },
        end: {
          line: 88,
          column: 70
        }
      },
      "48": {
        start: {
          line: 89,
          column: 27
        },
        end: {
          line: 96,
          column: 13
        }
      },
      "49": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 100,
          column: 13
        }
      },
      "50": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 99,
          column: 75
        }
      },
      "51": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 89
        }
      },
      "52": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 83
        }
      },
      "53": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 101
        }
      },
      "54": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 26
        }
      },
      "55": {
        start: {
          line: 106,
          column: 29
        },
        end: {
          line: 106,
          column: 58
        }
      },
      "56": {
        start: {
          line: 107,
          column: 33
        },
        end: {
          line: 107,
          column: 93
        }
      },
      "57": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 78
        }
      },
      "58": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 122,
          column: 14
        }
      },
      "59": {
        start: {
          line: 128,
          column: 23
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "60": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 97
        }
      },
      "61": {
        start: {
          line: 150,
          column: 27
        },
        end: {
          line: 156,
          column: 9
        }
      },
      "62": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 102
        }
      },
      "63": {
        start: {
          line: 162,
          column: 22
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "64": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 99
        }
      },
      "65": {
        start: {
          line: 174,
          column: 26
        },
        end: {
          line: 174,
          column: 43
        }
      },
      "66": {
        start: {
          line: 175,
          column: 22
        },
        end: {
          line: 175,
          column: 24
        }
      },
      "67": {
        start: {
          line: 177,
          column: 31
        },
        end: {
          line: 177,
          column: 73
        }
      },
      "68": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 35
        }
      },
      "69": {
        start: {
          line: 180,
          column: 27
        },
        end: {
          line: 180,
          column: 65
        }
      },
      "70": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 31
        }
      },
      "71": {
        start: {
          line: 183,
          column: 25
        },
        end: {
          line: 183,
          column: 64
        }
      },
      "72": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 29
        }
      },
      "73": {
        start: {
          line: 186,
          column: 30
        },
        end: {
          line: 186,
          column: 67
        }
      },
      "74": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 34
        }
      },
      "75": {
        start: {
          line: 188,
          column: 25
        },
        end: {
          line: 188,
          column: 54
        }
      },
      "76": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 197,
          column: 10
        }
      },
      "77": {
        start: {
          line: 193,
          column: 43
        },
        end: {
          line: 193,
          column: 64
        }
      },
      "78": {
        start: {
          line: 194,
          column: 43
        },
        end: {
          line: 194,
          column: 64
        }
      },
      "79": {
        start: {
          line: 195,
          column: 44
        },
        end: {
          line: 195,
          column: 66
        }
      },
      "80": {
        start: {
          line: 202,
          column: 26
        },
        end: {
          line: 202,
          column: 43
        }
      },
      "81": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 222,
          column: 9
        }
      },
      "82": {
        start: {
          line: 205,
          column: 36
        },
        end: {
          line: 205,
          column: 65
        }
      },
      "83": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 214,
          column: 14
        }
      },
      "84": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 221,
          column: 14
        }
      },
      "85": {
        start: {
          line: 227,
          column: 26
        },
        end: {
          line: 227,
          column: 43
        }
      },
      "86": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "87": {
        start: {
          line: 230,
          column: 27
        },
        end: {
          line: 230,
          column: 29
        }
      },
      "88": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 234,
          column: 13
        }
      },
      "89": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 62
        }
      },
      "90": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 237,
          column: 13
        }
      },
      "91": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 236,
          column: 72
        }
      },
      "92": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 246,
          column: 14
        }
      },
      "93": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 253,
          column: 14
        }
      },
      "94": {
        start: {
          line: 259,
          column: 26
        },
        end: {
          line: 259,
          column: 43
        }
      },
      "95": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 279,
          column: 9
        }
      },
      "96": {
        start: {
          line: 262,
          column: 33
        },
        end: {
          line: 262,
          column: 52
        }
      },
      "97": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 271,
          column: 14
        }
      },
      "98": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 278,
          column: 14
        }
      },
      "99": {
        start: {
          line: 284,
          column: 26
        },
        end: {
          line: 284,
          column: 43
        }
      },
      "100": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 304,
          column: 9
        }
      },
      "101": {
        start: {
          line: 287,
          column: 36
        },
        end: {
          line: 287,
          column: 55
        }
      },
      "102": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 296,
          column: 14
        }
      },
      "103": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 303,
          column: 14
        }
      },
      "104": {
        start: {
          line: 309,
          column: 27
        },
        end: {
          line: 309,
          column: 81
        }
      },
      "105": {
        start: {
          line: 309,
          column: 55
        },
        end: {
          line: 309,
          column: 77
        }
      },
      "106": {
        start: {
          line: 310,
          column: 28
        },
        end: {
          line: 310,
          column: 83
        }
      },
      "107": {
        start: {
          line: 310,
          column: 56
        },
        end: {
          line: 310,
          column: 79
        }
      },
      "108": {
        start: {
          line: 311,
          column: 28
        },
        end: {
          line: 311,
          column: 83
        }
      },
      "109": {
        start: {
          line: 311,
          column: 56
        },
        end: {
          line: 311,
          column: 79
        }
      },
      "110": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 317,
          column: 10
        }
      },
      "111": {
        start: {
          line: 322,
          column: 24
        },
        end: {
          line: 322,
          column: 62
        }
      },
      "112": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 326,
          column: 9
        }
      },
      "113": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 95
        }
      },
      "114": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 330,
          column: 9
        }
      },
      "115": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 110
        }
      },
      "116": {
        start: {
          line: 335,
          column: 23
        },
        end: {
          line: 335,
          column: 61
        }
      },
      "117": {
        start: {
          line: 336,
          column: 25
        },
        end: {
          line: 336,
          column: 60
        }
      },
      "118": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 347,
          column: 13
        }
      },
      "119": {
        start: {
          line: 344,
          column: 69
        },
        end: {
          line: 344,
          column: 77
        }
      },
      "120": {
        start: {
          line: 346,
          column: 95
        },
        end: {
          line: 346,
          column: 103
        }
      },
      "121": {
        start: {
          line: 350,
          column: 19
        },
        end: {
          line: 383,
          column: 1
        }
      },
      "122": {
        start: {
          line: 384,
          column: 26
        },
        end: {
          line: 384,
          column: 57
        }
      },
      "123": {
        start: {
          line: 385,
          column: 17
        },
        end: {
          line: 389,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 16
          }
        },
        loc: {
          start: {
            line: 9,
            column: 30
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 22
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 29
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 25
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 31
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 39,
            column: 6
          },
          end: {
            line: 39,
            column: 7
          }
        },
        loc: {
          start: {
            line: 39,
            column: 32
          },
          end: {
            line: 124,
            column: 5
          }
        },
        line: 39
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 127,
            column: 6
          },
          end: {
            line: 127,
            column: 7
          }
        },
        loc: {
          start: {
            line: 127,
            column: 44
          },
          end: {
            line: 146,
            column: 5
          }
        },
        line: 127
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 149,
            column: 6
          },
          end: {
            line: 149,
            column: 7
          }
        },
        loc: {
          start: {
            line: 149,
            column: 34
          },
          end: {
            line: 158,
            column: 5
          }
        },
        line: 149
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 161,
            column: 6
          },
          end: {
            line: 161,
            column: 7
          }
        },
        loc: {
          start: {
            line: 161,
            column: 36
          },
          end: {
            line: 170,
            column: 5
          }
        },
        line: 161
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 173,
            column: 6
          },
          end: {
            line: 173,
            column: 7
          }
        },
        loc: {
          start: {
            line: 173,
            column: 31
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 173
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 193,
            column: 38
          },
          end: {
            line: 193,
            column: 39
          }
        },
        loc: {
          start: {
            line: 193,
            column: 43
          },
          end: {
            line: 193,
            column: 64
          }
        },
        line: 193
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 194,
            column: 38
          },
          end: {
            line: 194,
            column: 39
          }
        },
        loc: {
          start: {
            line: 194,
            column: 43
          },
          end: {
            line: 194,
            column: 64
          }
        },
        line: 194
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 195,
            column: 39
          },
          end: {
            line: 195,
            column: 40
          }
        },
        loc: {
          start: {
            line: 195,
            column: 44
          },
          end: {
            line: 195,
            column: 66
          }
        },
        line: 195
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 201,
            column: 6
          },
          end: {
            line: 201,
            column: 7
          }
        },
        loc: {
          start: {
            line: 201,
            column: 44
          },
          end: {
            line: 223,
            column: 5
          }
        },
        line: 201
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 226,
            column: 6
          },
          end: {
            line: 226,
            column: 7
          }
        },
        loc: {
          start: {
            line: 226,
            column: 40
          },
          end: {
            line: 255,
            column: 5
          }
        },
        line: 226
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 258,
            column: 6
          },
          end: {
            line: 258,
            column: 7
          }
        },
        loc: {
          start: {
            line: 258,
            column: 41
          },
          end: {
            line: 280,
            column: 5
          }
        },
        line: 258
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 283,
            column: 6
          },
          end: {
            line: 283,
            column: 7
          }
        },
        loc: {
          start: {
            line: 283,
            column: 39
          },
          end: {
            line: 305,
            column: 5
          }
        },
        line: 283
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 308,
            column: 6
          },
          end: {
            line: 308,
            column: 7
          }
        },
        loc: {
          start: {
            line: 308,
            column: 31
          },
          end: {
            line: 318,
            column: 5
          }
        },
        line: 308
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 309,
            column: 41
          },
          end: {
            line: 309,
            column: 42
          }
        },
        loc: {
          start: {
            line: 309,
            column: 55
          },
          end: {
            line: 309,
            column: 77
          }
        },
        line: 309
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 310,
            column: 42
          },
          end: {
            line: 310,
            column: 43
          }
        },
        loc: {
          start: {
            line: 310,
            column: 56
          },
          end: {
            line: 310,
            column: 79
          }
        },
        line: 310
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 311,
            column: 42
          },
          end: {
            line: 311,
            column: 43
          }
        },
        loc: {
          start: {
            line: 311,
            column: 56
          },
          end: {
            line: 311,
            column: 79
          }
        },
        line: 311
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 321,
            column: 6
          },
          end: {
            line: 321,
            column: 7
          }
        },
        loc: {
          start: {
            line: 321,
            column: 53
          },
          end: {
            line: 331,
            column: 5
          }
        },
        line: 321
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 334,
            column: 6
          },
          end: {
            line: 334,
            column: 7
          }
        },
        loc: {
          start: {
            line: 334,
            column: 40
          },
          end: {
            line: 348,
            column: 5
          }
        },
        line: 334
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 344,
            column: 64
          },
          end: {
            line: 344,
            column: 65
          }
        },
        loc: {
          start: {
            line: 344,
            column: 69
          },
          end: {
            line: 344,
            column: 77
          }
        },
        line: 344
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 346,
            column: 90
          },
          end: {
            line: 346,
            column: 91
          }
        },
        loc: {
          start: {
            line: 346,
            column: 95
          },
          end: {
            line: 346,
            column: 103
          }
        },
        line: 346
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "2": {
        loc: {
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 54,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 54,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "3": {
        loc: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 65,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 65,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "4": {
        loc: {
          start: {
            line: 61,
            column: 16
          },
          end: {
            line: 64,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 16
          },
          end: {
            line: 64,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "5": {
        loc: {
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 75,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 75,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "6": {
        loc: {
          start: {
            line: 71,
            column: 16
          },
          end: {
            line: 74,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 16
          },
          end: {
            line: 74,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "7": {
        loc: {
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 85,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 85,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "8": {
        loc: {
          start: {
            line: 81,
            column: 16
          },
          end: {
            line: 84,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 16
          },
          end: {
            line: 84,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "9": {
        loc: {
          start: {
            line: 88,
            column: 28
          },
          end: {
            line: 88,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 28
          },
          end: {
            line: 88,
            column: 47
          }
        }, {
          start: {
            line: 88,
            column: 51
          },
          end: {
            line: 88,
            column: 70
          }
        }],
        line: 88
      },
      "10": {
        loc: {
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "11": {
        loc: {
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 98,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 98,
            column: 42
          }
        }, {
          start: {
            line: 98,
            column: 46
          },
          end: {
            line: 98,
            column: 72
          }
        }],
        line: 98
      },
      "12": {
        loc: {
          start: {
            line: 102,
            column: 52
          },
          end: {
            line: 102,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 102,
            column: 62
          },
          end: {
            line: 102,
            column: 69
          }
        }, {
          start: {
            line: 102,
            column: 72
          },
          end: {
            line: 102,
            column: 79
          }
        }],
        line: 102
      },
      "13": {
        loc: {
          start: {
            line: 107,
            column: 33
          },
          end: {
            line: 107,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 58
          },
          end: {
            line: 107,
            column: 71
          }
        }, {
          start: {
            line: 107,
            column: 74
          },
          end: {
            line: 107,
            column: 93
          }
        }],
        line: 107
      },
      "14": {
        loc: {
          start: {
            line: 129,
            column: 23
          },
          end: {
            line: 129,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 129,
            column: 54
          },
          end: {
            line: 129,
            column: 58
          }
        }, {
          start: {
            line: 129,
            column: 61
          },
          end: {
            line: 129,
            column: 64
          }
        }],
        line: 129
      },
      "15": {
        loc: {
          start: {
            line: 208,
            column: 24
          },
          end: {
            line: 208,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 208,
            column: 48
          },
          end: {
            line: 208,
            column: 56
          }
        }, {
          start: {
            line: 208,
            column: 59
          },
          end: {
            line: 208,
            column: 67
          }
        }],
        line: 208
      },
      "16": {
        loc: {
          start: {
            line: 210,
            column: 23
          },
          end: {
            line: 210,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 210,
            column: 45
          },
          end: {
            line: 210,
            column: 94
          }
        }, {
          start: {
            line: 210,
            column: 97
          },
          end: {
            line: 210,
            column: 106
          }
        }],
        line: 210
      },
      "17": {
        loc: {
          start: {
            line: 220,
            column: 23
          },
          end: {
            line: 220,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 220,
            column: 48
          },
          end: {
            line: 220,
            column: 61
          }
        }, {
          start: {
            line: 220,
            column: 64
          },
          end: {
            line: 220,
            column: 79
          }
        }],
        line: 220
      },
      "18": {
        loc: {
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 234,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 234,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "19": {
        loc: {
          start: {
            line: 235,
            column: 12
          },
          end: {
            line: 237,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 12
          },
          end: {
            line: 237,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "20": {
        loc: {
          start: {
            line: 240,
            column: 24
          },
          end: {
            line: 240,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 240,
            column: 46
          },
          end: {
            line: 240,
            column: 54
          }
        }, {
          start: {
            line: 240,
            column: 57
          },
          end: {
            line: 240,
            column: 65
          }
        }],
        line: 240
      },
      "21": {
        loc: {
          start: {
            line: 242,
            column: 23
          },
          end: {
            line: 242,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 242,
            column: 43
          },
          end: {
            line: 242,
            column: 60
          }
        }, {
          start: {
            line: 242,
            column: 63
          },
          end: {
            line: 242,
            column: 72
          }
        }],
        line: 242
      },
      "22": {
        loc: {
          start: {
            line: 252,
            column: 23
          },
          end: {
            line: 252,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 252,
            column: 48
          },
          end: {
            line: 252,
            column: 61
          }
        }, {
          start: {
            line: 252,
            column: 64
          },
          end: {
            line: 252,
            column: 79
          }
        }],
        line: 252
      },
      "23": {
        loc: {
          start: {
            line: 265,
            column: 24
          },
          end: {
            line: 265,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 265,
            column: 45
          },
          end: {
            line: 265,
            column: 53
          }
        }, {
          start: {
            line: 265,
            column: 56
          },
          end: {
            line: 265,
            column: 64
          }
        }],
        line: 265
      },
      "24": {
        loc: {
          start: {
            line: 267,
            column: 23
          },
          end: {
            line: 267,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 267,
            column: 43
          },
          end: {
            line: 267,
            column: 105
          }
        }, {
          start: {
            line: 267,
            column: 108
          },
          end: {
            line: 267,
            column: 117
          }
        }],
        line: 267
      },
      "25": {
        loc: {
          start: {
            line: 277,
            column: 23
          },
          end: {
            line: 277,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 277,
            column: 48
          },
          end: {
            line: 277,
            column: 61
          }
        }, {
          start: {
            line: 277,
            column: 64
          },
          end: {
            line: 277,
            column: 79
          }
        }],
        line: 277
      },
      "26": {
        loc: {
          start: {
            line: 290,
            column: 24
          },
          end: {
            line: 290,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 290,
            column: 42
          },
          end: {
            line: 290,
            column: 50
          }
        }, {
          start: {
            line: 290,
            column: 53
          },
          end: {
            line: 290,
            column: 61
          }
        }],
        line: 290
      },
      "27": {
        loc: {
          start: {
            line: 292,
            column: 23
          },
          end: {
            line: 292,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 292,
            column: 42
          },
          end: {
            line: 292,
            column: 95
          }
        }, {
          start: {
            line: 292,
            column: 98
          },
          end: {
            line: 292,
            column: 107
          }
        }],
        line: 292
      },
      "28": {
        loc: {
          start: {
            line: 302,
            column: 23
          },
          end: {
            line: 302,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 302,
            column: 48
          },
          end: {
            line: 302,
            column: 61
          }
        }, {
          start: {
            line: 302,
            column: 64
          },
          end: {
            line: 302,
            column: 79
          }
        }],
        line: 302
      },
      "29": {
        loc: {
          start: {
            line: 316,
            column: 25
          },
          end: {
            line: 316,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 316,
            column: 42
          },
          end: {
            line: 316,
            column: 72
          }
        }, {
          start: {
            line: 316,
            column: 75
          },
          end: {
            line: 316,
            column: 76
          }
        }],
        line: 316
      },
      "30": {
        loc: {
          start: {
            line: 323,
            column: 8
          },
          end: {
            line: 326,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 323,
            column: 8
          },
          end: {
            line: 326,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 323
      },
      "31": {
        loc: {
          start: {
            line: 327,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 327,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 327
      },
      "32": {
        loc: {
          start: {
            line: 327,
            column: 12
          },
          end: {
            line: 327,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 327,
            column: 12
          },
          end: {
            line: 327,
            column: 31
          }
        }, {
          start: {
            line: 327,
            column: 35
          },
          end: {
            line: 327,
            column: 65
          }
        }],
        line: 327
      },
      "33": {
        loc: {
          start: {
            line: 335,
            column: 23
          },
          end: {
            line: 335,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 335,
            column: 40
          },
          end: {
            line: 335,
            column: 49
          }
        }, {
          start: {
            line: 335,
            column: 52
          },
          end: {
            line: 335,
            column: 61
          }
        }],
        line: 335
      },
      "34": {
        loc: {
          start: {
            line: 344,
            column: 2
          },
          end: {
            line: 344,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 344,
            column: 29
          },
          end: {
            line: 344,
            column: 91
          }
        }, {
          start: {
            line: 344,
            column: 94
          },
          end: {
            line: 344,
            column: 96
          }
        }],
        line: 344
      },
      "35": {
        loc: {
          start: {
            line: 346,
            column: 2
          },
          end: {
            line: 346,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 346,
            column: 38
          },
          end: {
            line: 346,
            column: 117
          }
        }, {
          start: {
            line: 346,
            column: 120
          },
          end: {
            line: 346,
            column: 122
          }
        }],
        line: 346
      },
      "36": {
        loc: {
          start: {
            line: 380,
            column: 19
          },
          end: {
            line: 380,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 380,
            column: 19
          },
          end: {
            line: 380,
            column: 62
          }
        }, {
          start: {
            line: 380,
            column: 66
          },
          end: {
            line: 380,
            column: 68
          }
        }],
        line: 380
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\testing\\ci-testing-pipeline.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - CI TESTING PIPELINE\r\n// Pipeline de testing automatizado para integraci\xF3n continua\r\n// ===================================\r\n\r\nimport { automatedTestingManager } from './automated-testing-manager';\r\nimport type { TestSuite, RegressionTestConfig } from './automated-testing-manager';\r\n\r\n// ===================================\r\n// TIPOS Y INTERFACES\r\n// ===================================\r\n\r\ninterface PipelineConfig {\r\n  environment: 'development' | 'staging' | 'production';\r\n  runRegression: boolean;\r\n  runPerformance: boolean;\r\n  runAccessibility: boolean;\r\n  runSecurity: boolean;\r\n  failOnError: boolean;\r\n  notifications: {\r\n    slack?: string;\r\n    email?: string[];\r\n  };\r\n}\r\n\r\ninterface PipelineResult {\r\n  success: boolean;\r\n  duration: number;\r\n  suites: TestSuite[];\r\n  summary: {\r\n    totalTests: number;\r\n    passedTests: number;\r\n    failedTests: number;\r\n    successRate: number;\r\n  };\r\n  errors: string[];\r\n  recommendations: string[];\r\n}\r\n\r\ninterface SecurityTestResult {\r\n  vulnerabilities: Array<{\r\n    severity: 'low' | 'medium' | 'high' | 'critical';\r\n    type: string;\r\n    description: string;\r\n    file?: string;\r\n  }>;\r\n  score: number;\r\n}\r\n\r\n// ===================================\r\n// CI TESTING PIPELINE\r\n// ===================================\r\n\r\nclass CITestingPipeline {\r\n  private static instance: CITestingPipeline;\r\n\r\n  static getInstance(): CITestingPipeline {\r\n    if (!CITestingPipeline.instance) {\r\n      CITestingPipeline.instance = new CITestingPipeline();\r\n    }\r\n    return CITestingPipeline.instance;\r\n  }\r\n\r\n  /**\r\n   * Ejecutar pipeline completo de testing\r\n   */\r\n  async runPipeline(config: PipelineConfig): Promise<PipelineResult> {\r\n    const startTime = performance.now();\r\n    const suites: TestSuite[] = [];\r\n    const errors: string[] = [];\r\n    const recommendations: string[] = [];\r\n\r\n    console.log(`[CI Pipeline] Iniciando pipeline en ambiente ${config.environment}...`);\r\n\r\n    try {\r\n      // 1. Tests de Regresi\xF3n\r\n      if (config.runRegression) {\r\n        console.log('[CI Pipeline] Ejecutando tests de regresi\xF3n...');\r\n        const regressionSuite = await this.runRegressionTests(config.environment);\r\n        suites.push(regressionSuite);\r\n        \r\n        if (regressionSuite.failedTests > 0) {\r\n          errors.push(`${regressionSuite.failedTests} tests de regresi\xF3n fallaron`);\r\n          recommendations.push('Revisar cambios recientes que puedan haber causado regresiones');\r\n        }\r\n      }\r\n\r\n      // 2. Tests de Performance\r\n      if (config.runPerformance) {\r\n        console.log('[CI Pipeline] Ejecutando tests de performance...');\r\n        const performanceSuite = await this.runPerformanceTests();\r\n        suites.push(performanceSuite);\r\n        \r\n        if (performanceSuite.failedTests > 0) {\r\n          errors.push(`${performanceSuite.failedTests} tests de performance fallaron`);\r\n          recommendations.push('Optimizar componentes que exceden los thresholds de performance');\r\n        }\r\n      }\r\n\r\n      // 3. Tests de Accesibilidad\r\n      if (config.runAccessibility) {\r\n        console.log('[CI Pipeline] Ejecutando tests de accesibilidad...');\r\n        const accessibilitySuite = await this.runAccessibilityTests();\r\n        suites.push(accessibilitySuite);\r\n        \r\n        if (accessibilitySuite.failedTests > 0) {\r\n          errors.push(`${accessibilitySuite.failedTests} tests de accesibilidad fallaron`);\r\n          recommendations.push('Corregir violaciones de accesibilidad para mejorar la experiencia del usuario');\r\n        }\r\n      }\r\n\r\n      // 4. Tests de Seguridad\r\n      if (config.runSecurity) {\r\n        console.log('[CI Pipeline] Ejecutando tests de seguridad...');\r\n        const securitySuite = await this.runSecurityTests();\r\n        suites.push(securitySuite);\r\n        \r\n        if (securitySuite.failedTests > 0) {\r\n          errors.push(`${securitySuite.failedTests} tests de seguridad fallaron`);\r\n          recommendations.push('Corregir vulnerabilidades de seguridad inmediatamente');\r\n        }\r\n      }\r\n\r\n      const duration = performance.now() - startTime;\r\n      const summary = this.calculateSummary(suites);\r\n      const success = errors.length === 0 || !config.failOnError;\r\n\r\n      const result: PipelineResult = {\r\n        success,\r\n        duration,\r\n        suites,\r\n        summary,\r\n        errors,\r\n        recommendations\r\n      };\r\n\r\n      // Enviar notificaciones si est\xE1n configuradas\r\n      if (config.notifications.slack || config.notifications.email) {\r\n        await this.sendNotifications(result, config.notifications);\r\n      }\r\n\r\n      console.log(`[CI Pipeline] Pipeline completado en ${duration.toFixed(2)}ms`);\r\n      console.log(`[CI Pipeline] Resultado: ${success ? '\xC9XITO' : 'FALLO'}`);\r\n      console.log(`[CI Pipeline] Tests: ${summary.passedTests}/${summary.totalTests} pasaron`);\r\n\r\n      return result;\r\n\r\n    } catch (error) {\r\n      const duration = performance.now() - startTime;\r\n      const errorMessage = error instanceof Error ? error.message : 'Error desconocido';\r\n      \r\n      console.error(`[CI Pipeline] Error en pipeline: ${errorMessage}`);\r\n      \r\n      return {\r\n        success: false,\r\n        duration,\r\n        suites,\r\n        summary: this.calculateSummary(suites),\r\n        errors: [errorMessage, ...errors],\r\n        recommendations: ['Revisar logs del pipeline para identificar la causa del error', ...recommendations]\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Ejecutar tests de regresi\xF3n\r\n   */\r\n  private async runRegressionTests(environment: string): Promise<TestSuite> {\r\n    const config: RegressionTestConfig = {\r\n      threshold: environment === 'production' ? 0.05 : 0.1, // 5% en prod, 10% en dev\r\n      components: [\r\n        'ShopDetails',\r\n        'ProductGallery',\r\n        'CheckoutForm',\r\n        'UserDashboard',\r\n        'AdminDashboard'\r\n      ],\r\n      apis: [\r\n        '/api/products',\r\n        '/api/cart',\r\n        '/api/orders',\r\n        '/api/auth',\r\n        '/api/admin/dashboard'\r\n      ]\r\n    };\r\n\r\n    return await automatedTestingManager.runRegressionTests(config);\r\n  }\r\n\r\n  /**\r\n   * Ejecutar tests de performance\r\n   */\r\n  private async runPerformanceTests(): Promise<TestSuite> {\r\n    const components = [\r\n      'HomePage',\r\n      'ProductPage',\r\n      'CartPage',\r\n      'CheckoutPage',\r\n      'AdminPage'\r\n    ];\r\n\r\n    return await automatedTestingManager.runPerformanceTests(components);\r\n  }\r\n\r\n  /**\r\n   * Ejecutar tests de accesibilidad\r\n   */\r\n  private async runAccessibilityTests(): Promise<TestSuite> {\r\n    const pages = [\r\n      '/',\r\n      '/products',\r\n      '/cart',\r\n      '/checkout',\r\n      '/admin'\r\n    ];\r\n\r\n    return await automatedTestingManager.runAccessibilityTests(pages);\r\n  }\r\n\r\n  /**\r\n   * Ejecutar tests de seguridad\r\n   */\r\n  private async runSecurityTests(): Promise<TestSuite> {\r\n    const startTime = performance.now();\r\n    const tests = [];\r\n\r\n    // Test de vulnerabilidades de dependencias\r\n    const dependencyTest = await this.testDependencyVulnerabilities();\r\n    tests.push(dependencyTest);\r\n\r\n    // Test de configuraci\xF3n de seguridad\r\n    const configTest = await this.testSecurityConfiguration();\r\n    tests.push(configTest);\r\n\r\n    // Test de autenticaci\xF3n\r\n    const authTest = await this.testAuthenticationSecurity();\r\n    tests.push(authTest);\r\n\r\n    // Test de rate limiting\r\n    const rateLimitTest = await this.testRateLimitingSecurity();\r\n    tests.push(rateLimitTest);\r\n\r\n    const duration = performance.now() - startTime;\r\n    \r\n    return {\r\n      name: 'Security Tests',\r\n      tests,\r\n      totalTests: tests.length,\r\n      passedTests: tests.filter(t => t.status === 'passed').length,\r\n      failedTests: tests.filter(t => t.status === 'failed').length,\r\n      skippedTests: tests.filter(t => t.status === 'skipped').length,\r\n      duration\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Test de vulnerabilidades de dependencias\r\n   */\r\n  private async testDependencyVulnerabilities() {\r\n    const startTime = performance.now();\r\n    \r\n    try {\r\n      // Simular audit de dependencias\r\n      const vulnerabilities = Math.floor(Math.random() * 3); // 0-2 vulnerabilities\r\n      \r\n      return {\r\n        name: 'Dependency Vulnerabilities',\r\n        status: vulnerabilities === 0 ? 'passed' : 'failed' as const,\r\n        duration: performance.now() - startTime,\r\n        error: vulnerabilities > 0 ? `${vulnerabilities} vulnerabilidades encontradas` : undefined,\r\n        details: { vulnerabilities }\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        name: 'Dependency Vulnerabilities Error',\r\n        status: 'failed' as const,\r\n        duration: performance.now() - startTime,\r\n        error: error instanceof Error ? error.message : 'Unknown error'\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Test de configuraci\xF3n de seguridad\r\n   */\r\n  private async testSecurityConfiguration() {\r\n    const startTime = performance.now();\r\n    \r\n    try {\r\n      // Verificar configuraciones de seguridad\r\n      const issues = [];\r\n      \r\n      // Verificar variables de entorno\r\n      if (!process.env.NEXTAUTH_SECRET) {\r\n        issues.push('NEXTAUTH_SECRET no configurado');\r\n      }\r\n      \r\n      if (!process.env.SUPABASE_SERVICE_ROLE_KEY) {\r\n        issues.push('SUPABASE_SERVICE_ROLE_KEY no configurado');\r\n      }\r\n\r\n      return {\r\n        name: 'Security Configuration',\r\n        status: issues.length === 0 ? 'passed' : 'failed' as const,\r\n        duration: performance.now() - startTime,\r\n        error: issues.length > 0 ? issues.join(', ') : undefined,\r\n        details: { issues }\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        name: 'Security Configuration Error',\r\n        status: 'failed' as const,\r\n        duration: performance.now() - startTime,\r\n        error: error instanceof Error ? error.message : 'Unknown error'\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Test de seguridad de autenticaci\xF3n\r\n   */\r\n  private async testAuthenticationSecurity() {\r\n    const startTime = performance.now();\r\n    \r\n    try {\r\n      // Simular test de autenticaci\xF3n\r\n      const authStrength = Math.random() * 100; // 0-100% strength\r\n      \r\n      return {\r\n        name: 'Authentication Security',\r\n        status: authStrength >= 80 ? 'passed' : 'failed' as const,\r\n        duration: performance.now() - startTime,\r\n        error: authStrength < 80 ? `Fortaleza de autenticaci\xF3n ${authStrength.toFixed(1)}% < 80%` : undefined,\r\n        details: { authStrength }\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        name: 'Authentication Security Error',\r\n        status: 'failed' as const,\r\n        duration: performance.now() - startTime,\r\n        error: error instanceof Error ? error.message : 'Unknown error'\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Test de rate limiting\r\n   */\r\n  private async testRateLimitingSecurity() {\r\n    const startTime = performance.now();\r\n    \r\n    try {\r\n      // Simular test de rate limiting\r\n      const rateLimitActive = Math.random() > 0.2; // 80% chance active\r\n      \r\n      return {\r\n        name: 'Rate Limiting Security',\r\n        status: rateLimitActive ? 'passed' : 'failed' as const,\r\n        duration: performance.now() - startTime,\r\n        error: !rateLimitActive ? 'Rate limiting no est\xE1 activo en todos los endpoints' : undefined,\r\n        details: { rateLimitActive }\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        name: 'Rate Limiting Security Error',\r\n        status: 'failed' as const,\r\n        duration: performance.now() - startTime,\r\n        error: error instanceof Error ? error.message : 'Unknown error'\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calcular resumen de tests\r\n   */\r\n  private calculateSummary(suites: TestSuite[]) {\r\n    const totalTests = suites.reduce((sum, suite) => sum + suite.totalTests, 0);\r\n    const passedTests = suites.reduce((sum, suite) => sum + suite.passedTests, 0);\r\n    const failedTests = suites.reduce((sum, suite) => sum + suite.failedTests, 0);\r\n\r\n    return {\r\n      totalTests,\r\n      passedTests,\r\n      failedTests,\r\n      successRate: totalTests > 0 ? (passedTests / totalTests) * 100 : 0\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Enviar notificaciones\r\n   */\r\n  private async sendNotifications(result: PipelineResult, notifications: PipelineConfig['notifications']) {\r\n    const message = this.formatNotificationMessage(result);\r\n    \r\n    if (notifications.slack) {\r\n      console.log(`[CI Pipeline] Enviando notificaci\xF3n a Slack: ${notifications.slack}`);\r\n      // Aqu\xED se implementar\xEDa la integraci\xF3n con Slack\r\n    }\r\n    \r\n    if (notifications.email && notifications.email.length > 0) {\r\n      console.log(`[CI Pipeline] Enviando notificaci\xF3n por email a: ${notifications.email.join(', ')}`);\r\n      // Aqu\xED se implementar\xEDa la integraci\xF3n con email\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Formatear mensaje de notificaci\xF3n\r\n   */\r\n  private formatNotificationMessage(result: PipelineResult): string {\r\n    const status = result.success ? '\u2705 \xC9XITO' : '\u274C FALLO';\r\n    const duration = (result.duration / 1000).toFixed(2);\r\n    \r\n    return `\r\n\uD83E\uDDEA **Pipeline de Testing Completado**\r\n\r\n**Estado**: ${status}\r\n**Duraci\xF3n**: ${duration}s\r\n**Tests**: ${result.summary.passedTests}/${result.summary.totalTests} pasaron (${result.summary.successRate.toFixed(1)}%)\r\n\r\n${result.errors.length > 0 ? `**Errores**:\\n${result.errors.map(e => `\u2022 ${e}`).join('\\n')}` : ''}\r\n\r\n${result.recommendations.length > 0 ? `**Recomendaciones**:\\n${result.recommendations.map(r => `\u2022 ${r}`).join('\\n')}` : ''}\r\n    `.trim();\r\n  }\r\n}\r\n\r\n// ===================================\r\n// CONFIGURACIONES PREDEFINIDAS\r\n// ===================================\r\n\r\nexport const CI_CONFIGS = {\r\n  development: {\r\n    environment: 'development' as const,\r\n    runRegression: true,\r\n    runPerformance: true,\r\n    runAccessibility: false,\r\n    runSecurity: false,\r\n    failOnError: false,\r\n    notifications: {}\r\n  },\r\n  \r\n  staging: {\r\n    environment: 'staging' as const,\r\n    runRegression: true,\r\n    runPerformance: true,\r\n    runAccessibility: true,\r\n    runSecurity: true,\r\n    failOnError: true,\r\n    notifications: {\r\n      slack: process.env.SLACK_WEBHOOK_URL\r\n    }\r\n  },\r\n  \r\n  production: {\r\n    environment: 'production' as const,\r\n    runRegression: true,\r\n    runPerformance: true,\r\n    runAccessibility: true,\r\n    runSecurity: true,\r\n    failOnError: true,\r\n    notifications: {\r\n      slack: process.env.SLACK_WEBHOOK_URL,\r\n      email: process.env.NOTIFICATION_EMAILS?.split(',') || []\r\n    }\r\n  }\r\n};\r\n\r\n// ===================================\r\n// EXPORTS\r\n// ===================================\r\n\r\nexport const ciTestingPipeline = CITestingPipeline.getInstance();\r\n\r\nexport default {\r\n  ciTestingPipeline,\r\n  CITestingPipeline,\r\n  CI_CONFIGS\r\n};\r\n\r\nexport type {\r\n  PipelineConfig,\r\n  PipelineResult,\r\n  SecurityTestResult\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["CI_CONFIGS", "ciTestingPipeline", "CITestingPipeline", "getInstance", "instance", "runPipeline", "config", "startTime", "performance", "now", "suites", "errors", "recommendations", "console", "log", "environment", "runRegression", "regressionSuite", "runRegressionTests", "push", "failedTests", "runPerformance", "performanceSuite", "runPerformanceTests", "runAccessibility", "accessibilitySuite", "runAccessibilityTests", "runSecurity", "securitySuite", "runSecurityTests", "duration", "summary", "calculateSummary", "success", "length", "failOnError", "result", "notifications", "slack", "email", "sendNotifications", "toFixed", "passedTests", "totalTests", "error", "errorMessage", "Error", "message", "threshold", "components", "apis", "automatedTestingManager", "pages", "tests", "dependencyTest", "testDependencyVulnerabilities", "configTest", "testSecurityConfiguration", "authTest", "testAuthenticationSecurity", "rateLimitTest", "testRateLimitingSecurity", "name", "filter", "t", "status", "skippedTests", "vulnerabilities", "Math", "floor", "random", "undefined", "details", "issues", "process", "env", "NEXTAUTH_SECRET", "SUPABASE_SERVICE_ROLE_KEY", "join", "authStrength", "rateLimitActive", "reduce", "sum", "suite", "successRate", "formatNotificationMessage", "map", "e", "r", "trim", "development", "staging", "SLACK_WEBHOOK_URL", "production", "NOTIFICATION_EMAILS", "split"],
      mappings: "AAAA,sCAAsC;AACtC,2CAA2C;AAC3C,6DAA6D;AAC7D,sCAAsC;;;;;;;;;;;;QA2azBA;eAAAA;;QAyCAC;eAAAA;;QAEb;eAAA;;;yCApdwC;AA4CxC,sCAAsC;AACtC,sBAAsB;AACtB,sCAAsC;AAEtC,MAAMC;IAGJ,OAAOC,cAAiC;QACtC,IAAI,CAACD,kBAAkBE,QAAQ,EAAE;YAC/BF,kBAAkBE,QAAQ,GAAG,IAAIF;QACnC;QACA,OAAOA,kBAAkBE,QAAQ;IACnC;IAEA;;GAEC,GACD,MAAMC,YAAYC,MAAsB,EAA2B;QACjE,MAAMC,YAAYC,YAAYC,GAAG;QACjC,MAAMC,SAAsB,EAAE;QAC9B,MAAMC,SAAmB,EAAE;QAC3B,MAAMC,kBAA4B,EAAE;QAEpCC,QAAQC,GAAG,CAAC,CAAC,6CAA6C,EAAER,OAAOS,WAAW,CAAC,GAAG,CAAC;QAEnF,IAAI;YACF,wBAAwB;YACxB,IAAIT,OAAOU,aAAa,EAAE;gBACxBH,QAAQC,GAAG,CAAC;gBACZ,MAAMG,kBAAkB,MAAM,IAAI,CAACC,kBAAkB,CAACZ,OAAOS,WAAW;gBACxEL,OAAOS,IAAI,CAACF;gBAEZ,IAAIA,gBAAgBG,WAAW,GAAG,GAAG;oBACnCT,OAAOQ,IAAI,CAAC,GAAGF,gBAAgBG,WAAW,CAAC,4BAA4B,CAAC;oBACxER,gBAAgBO,IAAI,CAAC;gBACvB;YACF;YAEA,0BAA0B;YAC1B,IAAIb,OAAOe,cAAc,EAAE;gBACzBR,QAAQC,GAAG,CAAC;gBACZ,MAAMQ,mBAAmB,MAAM,IAAI,CAACC,mBAAmB;gBACvDb,OAAOS,IAAI,CAACG;gBAEZ,IAAIA,iBAAiBF,WAAW,GAAG,GAAG;oBACpCT,OAAOQ,IAAI,CAAC,GAAGG,iBAAiBF,WAAW,CAAC,8BAA8B,CAAC;oBAC3ER,gBAAgBO,IAAI,CAAC;gBACvB;YACF;YAEA,4BAA4B;YAC5B,IAAIb,OAAOkB,gBAAgB,EAAE;gBAC3BX,QAAQC,GAAG,CAAC;gBACZ,MAAMW,qBAAqB,MAAM,IAAI,CAACC,qBAAqB;gBAC3DhB,OAAOS,IAAI,CAACM;gBAEZ,IAAIA,mBAAmBL,WAAW,GAAG,GAAG;oBACtCT,OAAOQ,IAAI,CAAC,GAAGM,mBAAmBL,WAAW,CAAC,gCAAgC,CAAC;oBAC/ER,gBAAgBO,IAAI,CAAC;gBACvB;YACF;YAEA,wBAAwB;YACxB,IAAIb,OAAOqB,WAAW,EAAE;gBACtBd,QAAQC,GAAG,CAAC;gBACZ,MAAMc,gBAAgB,MAAM,IAAI,CAACC,gBAAgB;gBACjDnB,OAAOS,IAAI,CAACS;gBAEZ,IAAIA,cAAcR,WAAW,GAAG,GAAG;oBACjCT,OAAOQ,IAAI,CAAC,GAAGS,cAAcR,WAAW,CAAC,4BAA4B,CAAC;oBACtER,gBAAgBO,IAAI,CAAC;gBACvB;YACF;YAEA,MAAMW,WAAWtB,YAAYC,GAAG,KAAKF;YACrC,MAAMwB,UAAU,IAAI,CAACC,gBAAgB,CAACtB;YACtC,MAAMuB,UAAUtB,OAAOuB,MAAM,KAAK,KAAK,CAAC5B,OAAO6B,WAAW;YAE1D,MAAMC,SAAyB;gBAC7BH;gBACAH;gBACApB;gBACAqB;gBACApB;gBACAC;YACF;YAEA,8CAA8C;YAC9C,IAAIN,OAAO+B,aAAa,CAACC,KAAK,IAAIhC,OAAO+B,aAAa,CAACE,KAAK,EAAE;gBAC5D,MAAM,IAAI,CAACC,iBAAiB,CAACJ,QAAQ9B,OAAO+B,aAAa;YAC3D;YAEAxB,QAAQC,GAAG,CAAC,CAAC,qCAAqC,EAAEgB,SAASW,OAAO,CAAC,GAAG,EAAE,CAAC;YAC3E5B,QAAQC,GAAG,CAAC,CAAC,yBAAyB,EAAEmB,UAAU,UAAU,SAAS;YACrEpB,QAAQC,GAAG,CAAC,CAAC,qBAAqB,EAAEiB,QAAQW,WAAW,CAAC,CAAC,EAAEX,QAAQY,UAAU,CAAC,QAAQ,CAAC;YAEvF,OAAOP;QAET,EAAE,OAAOQ,OAAO;YACd,MAAMd,WAAWtB,YAAYC,GAAG,KAAKF;YACrC,MAAMsC,eAAeD,iBAAiBE,QAAQF,MAAMG,OAAO,GAAG;YAE9DlC,QAAQ+B,KAAK,CAAC,CAAC,iCAAiC,EAAEC,cAAc;YAEhE,OAAO;gBACLZ,SAAS;gBACTH;gBACApB;gBACAqB,SAAS,IAAI,CAACC,gBAAgB,CAACtB;gBAC/BC,QAAQ;oBAACkC;uBAAiBlC;iBAAO;gBACjCC,iBAAiB;oBAAC;uBAAoEA;iBAAgB;YACxG;QACF;IACF;IAEA;;GAEC,GACD,MAAcM,mBAAmBH,WAAmB,EAAsB;QACxE,MAAMT,SAA+B;YACnC0C,WAAWjC,gBAAgB,eAAe,OAAO;YACjDkC,YAAY;gBACV;gBACA;gBACA;gBACA;gBACA;aACD;YACDC,MAAM;gBACJ;gBACA;gBACA;gBACA;gBACA;aACD;QACH;QAEA,OAAO,MAAMC,gDAAuB,CAACjC,kBAAkB,CAACZ;IAC1D;IAEA;;GAEC,GACD,MAAciB,sBAA0C;QACtD,MAAM0B,aAAa;YACjB;YACA;YACA;YACA;YACA;SACD;QAED,OAAO,MAAME,gDAAuB,CAAC5B,mBAAmB,CAAC0B;IAC3D;IAEA;;GAEC,GACD,MAAcvB,wBAA4C;QACxD,MAAM0B,QAAQ;YACZ;YACA;YACA;YACA;YACA;SACD;QAED,OAAO,MAAMD,gDAAuB,CAACzB,qBAAqB,CAAC0B;IAC7D;IAEA;;GAEC,GACD,MAAcvB,mBAAuC;QACnD,MAAMtB,YAAYC,YAAYC,GAAG;QACjC,MAAM4C,QAAQ,EAAE;QAEhB,2CAA2C;QAC3C,MAAMC,iBAAiB,MAAM,IAAI,CAACC,6BAA6B;QAC/DF,MAAMlC,IAAI,CAACmC;QAEX,qCAAqC;QACrC,MAAME,aAAa,MAAM,IAAI,CAACC,yBAAyB;QACvDJ,MAAMlC,IAAI,CAACqC;QAEX,wBAAwB;QACxB,MAAME,WAAW,MAAM,IAAI,CAACC,0BAA0B;QACtDN,MAAMlC,IAAI,CAACuC;QAEX,wBAAwB;QACxB,MAAME,gBAAgB,MAAM,IAAI,CAACC,wBAAwB;QACzDR,MAAMlC,IAAI,CAACyC;QAEX,MAAM9B,WAAWtB,YAAYC,GAAG,KAAKF;QAErC,OAAO;YACLuD,MAAM;YACNT;YACAV,YAAYU,MAAMnB,MAAM;YACxBQ,aAAaW,MAAMU,MAAM,CAACC,CAAAA,IAAKA,EAAEC,MAAM,KAAK,UAAU/B,MAAM;YAC5Dd,aAAaiC,MAAMU,MAAM,CAACC,CAAAA,IAAKA,EAAEC,MAAM,KAAK,UAAU/B,MAAM;YAC5DgC,cAAcb,MAAMU,MAAM,CAACC,CAAAA,IAAKA,EAAEC,MAAM,KAAK,WAAW/B,MAAM;YAC9DJ;QACF;IACF;IAEA;;GAEC,GACD,MAAcyB,gCAAgC;QAC5C,MAAMhD,YAAYC,YAAYC,GAAG;QAEjC,IAAI;YACF,gCAAgC;YAChC,MAAM0D,kBAAkBC,KAAKC,KAAK,CAACD,KAAKE,MAAM,KAAK,IAAI,sBAAsB;YAE7E,OAAO;gBACLR,MAAM;gBACNG,QAAQE,oBAAoB,IAAI,WAAW;gBAC3CrC,UAAUtB,YAAYC,GAAG,KAAKF;gBAC9BqC,OAAOuB,kBAAkB,IAAI,GAAGA,gBAAgB,6BAA6B,CAAC,GAAGI;gBACjFC,SAAS;oBAAEL;gBAAgB;YAC7B;QACF,EAAE,OAAOvB,OAAO;YACd,OAAO;gBACLkB,MAAM;gBACNG,QAAQ;gBACRnC,UAAUtB,YAAYC,GAAG,KAAKF;gBAC9BqC,OAAOA,iBAAiBE,QAAQF,MAAMG,OAAO,GAAG;YAClD;QACF;IACF;IAEA;;GAEC,GACD,MAAcU,4BAA4B;QACxC,MAAMlD,YAAYC,YAAYC,GAAG;QAEjC,IAAI;YACF,yCAAyC;YACzC,MAAMgE,SAAS,EAAE;YAEjB,iCAAiC;YACjC,IAAI,CAACC,QAAQC,GAAG,CAACC,eAAe,EAAE;gBAChCH,OAAOtD,IAAI,CAAC;YACd;YAEA,IAAI,CAACuD,QAAQC,GAAG,CAACE,yBAAyB,EAAE;gBAC1CJ,OAAOtD,IAAI,CAAC;YACd;YAEA,OAAO;gBACL2C,MAAM;gBACNG,QAAQQ,OAAOvC,MAAM,KAAK,IAAI,WAAW;gBACzCJ,UAAUtB,YAAYC,GAAG,KAAKF;gBAC9BqC,OAAO6B,OAAOvC,MAAM,GAAG,IAAIuC,OAAOK,IAAI,CAAC,QAAQP;gBAC/CC,SAAS;oBAAEC;gBAAO;YACpB;QACF,EAAE,OAAO7B,OAAO;YACd,OAAO;gBACLkB,MAAM;gBACNG,QAAQ;gBACRnC,UAAUtB,YAAYC,GAAG,KAAKF;gBAC9BqC,OAAOA,iBAAiBE,QAAQF,MAAMG,OAAO,GAAG;YAClD;QACF;IACF;IAEA;;GAEC,GACD,MAAcY,6BAA6B;QACzC,MAAMpD,YAAYC,YAAYC,GAAG;QAEjC,IAAI;YACF,gCAAgC;YAChC,MAAMsE,eAAeX,KAAKE,MAAM,KAAK,KAAK,kBAAkB;YAE5D,OAAO;gBACLR,MAAM;gBACNG,QAAQc,gBAAgB,KAAK,WAAW;gBACxCjD,UAAUtB,YAAYC,GAAG,KAAKF;gBAC9BqC,OAAOmC,eAAe,KAAK,CAAC,2BAA2B,EAAEA,aAAatC,OAAO,CAAC,GAAG,OAAO,CAAC,GAAG8B;gBAC5FC,SAAS;oBAAEO;gBAAa;YAC1B;QACF,EAAE,OAAOnC,OAAO;YACd,OAAO;gBACLkB,MAAM;gBACNG,QAAQ;gBACRnC,UAAUtB,YAAYC,GAAG,KAAKF;gBAC9BqC,OAAOA,iBAAiBE,QAAQF,MAAMG,OAAO,GAAG;YAClD;QACF;IACF;IAEA;;GAEC,GACD,MAAcc,2BAA2B;QACvC,MAAMtD,YAAYC,YAAYC,GAAG;QAEjC,IAAI;YACF,gCAAgC;YAChC,MAAMuE,kBAAkBZ,KAAKE,MAAM,KAAK,KAAK,oBAAoB;YAEjE,OAAO;gBACLR,MAAM;gBACNG,QAAQe,kBAAkB,WAAW;gBACrClD,UAAUtB,YAAYC,GAAG,KAAKF;gBAC9BqC,OAAO,CAACoC,kBAAkB,wDAAwDT;gBAClFC,SAAS;oBAAEQ;gBAAgB;YAC7B;QACF,EAAE,OAAOpC,OAAO;YACd,OAAO;gBACLkB,MAAM;gBACNG,QAAQ;gBACRnC,UAAUtB,YAAYC,GAAG,KAAKF;gBAC9BqC,OAAOA,iBAAiBE,QAAQF,MAAMG,OAAO,GAAG;YAClD;QACF;IACF;IAEA;;GAEC,GACD,AAAQf,iBAAiBtB,MAAmB,EAAE;QAC5C,MAAMiC,aAAajC,OAAOuE,MAAM,CAAC,CAACC,KAAKC,QAAUD,MAAMC,MAAMxC,UAAU,EAAE;QACzE,MAAMD,cAAchC,OAAOuE,MAAM,CAAC,CAACC,KAAKC,QAAUD,MAAMC,MAAMzC,WAAW,EAAE;QAC3E,MAAMtB,cAAcV,OAAOuE,MAAM,CAAC,CAACC,KAAKC,QAAUD,MAAMC,MAAM/D,WAAW,EAAE;QAE3E,OAAO;YACLuB;YACAD;YACAtB;YACAgE,aAAazC,aAAa,IAAI,AAACD,cAAcC,aAAc,MAAM;QACnE;IACF;IAEA;;GAEC,GACD,MAAcH,kBAAkBJ,MAAsB,EAAEC,aAA8C,EAAE;QACtG,MAAMU,UAAU,IAAI,CAACsC,yBAAyB,CAACjD;QAE/C,IAAIC,cAAcC,KAAK,EAAE;YACvBzB,QAAQC,GAAG,CAAC,CAAC,6CAA6C,EAAEuB,cAAcC,KAAK,EAAE;QACjF,iDAAiD;QACnD;QAEA,IAAID,cAAcE,KAAK,IAAIF,cAAcE,KAAK,CAACL,MAAM,GAAG,GAAG;YACzDrB,QAAQC,GAAG,CAAC,CAAC,iDAAiD,EAAEuB,cAAcE,KAAK,CAACuC,IAAI,CAAC,OAAO;QAChG,iDAAiD;QACnD;IACF;IAEA;;GAEC,GACD,AAAQO,0BAA0BjD,MAAsB,EAAU;QAChE,MAAM6B,SAAS7B,OAAOH,OAAO,GAAG,YAAY;QAC5C,MAAMH,WAAW,AAACM,CAAAA,OAAON,QAAQ,GAAG,IAAG,EAAGW,OAAO,CAAC;QAElD,OAAO,CAAC;;;YAGA,EAAEwB,OAAO;cACP,EAAEnC,SAAS;WACd,EAAEM,OAAOL,OAAO,CAACW,WAAW,CAAC,CAAC,EAAEN,OAAOL,OAAO,CAACY,UAAU,CAAC,UAAU,EAAEP,OAAOL,OAAO,CAACqD,WAAW,CAAC3C,OAAO,CAAC,GAAG;;AAEvH,EAAEL,OAAOzB,MAAM,CAACuB,MAAM,GAAG,IAAI,CAAC,cAAc,EAAEE,OAAOzB,MAAM,CAAC2E,GAAG,CAACC,CAAAA,IAAK,CAAC,EAAE,EAAEA,GAAG,EAAET,IAAI,CAAC,OAAO,GAAG,GAAG;;AAEjG,EAAE1C,OAAOxB,eAAe,CAACsB,MAAM,GAAG,IAAI,CAAC,sBAAsB,EAAEE,OAAOxB,eAAe,CAAC0E,GAAG,CAACE,CAAAA,IAAK,CAAC,EAAE,EAAEA,GAAG,EAAEV,IAAI,CAAC,OAAO,GAAG,GAAG;IACvH,CAAC,CAACW,IAAI;IACR;AACF;AAMO,MAAMzF,aAAa;IACxB0F,aAAa;QACX3E,aAAa;QACbC,eAAe;QACfK,gBAAgB;QAChBG,kBAAkB;QAClBG,aAAa;QACbQ,aAAa;QACbE,eAAe,CAAC;IAClB;IAEAsD,SAAS;QACP5E,aAAa;QACbC,eAAe;QACfK,gBAAgB;QAChBG,kBAAkB;QAClBG,aAAa;QACbQ,aAAa;QACbE,eAAe;YACbC,OAAOoC,QAAQC,GAAG,CAACiB,iBAAiB;QACtC;IACF;IAEAC,YAAY;QACV9E,aAAa;QACbC,eAAe;QACfK,gBAAgB;QAChBG,kBAAkB;QAClBG,aAAa;QACbQ,aAAa;QACbE,eAAe;YACbC,OAAOoC,QAAQC,GAAG,CAACiB,iBAAiB;YACpCrD,OAAOmC,QAAQC,GAAG,CAACmB,mBAAmB,EAAEC,MAAM,QAAQ,EAAE;QAC1D;IACF;AACF;AAMO,MAAM9F,oBAAoBC,kBAAkBC,WAAW;MAE9D,WAAe;IACbF;IACAC;IACAF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "427370364330ee4b0df4e70253d34ea2bfc89c66"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_24c6n53n8j = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_24c6n53n8j();
cov_24c6n53n8j().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_24c6n53n8j().f[0]++;
  cov_24c6n53n8j().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_24c6n53n8j().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_24c6n53n8j().s[3]++;
_export(exports, {
  get CI_CONFIGS() {
    /* istanbul ignore next */
    cov_24c6n53n8j().f[1]++;
    cov_24c6n53n8j().s[4]++;
    return CI_CONFIGS;
  },
  get ciTestingPipeline() {
    /* istanbul ignore next */
    cov_24c6n53n8j().f[2]++;
    cov_24c6n53n8j().s[5]++;
    return ciTestingPipeline;
  },
  get default() {
    /* istanbul ignore next */
    cov_24c6n53n8j().f[3]++;
    cov_24c6n53n8j().s[6]++;
    return _default;
  }
});
const _automatedtestingmanager =
/* istanbul ignore next */
(cov_24c6n53n8j().s[7]++, require("./automated-testing-manager"));
// ===================================
// CI TESTING PIPELINE
// ===================================
class CITestingPipeline {
  static getInstance() {
    /* istanbul ignore next */
    cov_24c6n53n8j().f[4]++;
    cov_24c6n53n8j().s[8]++;
    if (!CITestingPipeline.instance) {
      /* istanbul ignore next */
      cov_24c6n53n8j().b[0][0]++;
      cov_24c6n53n8j().s[9]++;
      CITestingPipeline.instance = new CITestingPipeline();
    } else
    /* istanbul ignore next */
    {
      cov_24c6n53n8j().b[0][1]++;
    }
    cov_24c6n53n8j().s[10]++;
    return CITestingPipeline.instance;
  }
  /**
  * Ejecutar pipeline completo de testing
  */
  async runPipeline(config) {
    /* istanbul ignore next */
    cov_24c6n53n8j().f[5]++;
    const startTime =
    /* istanbul ignore next */
    (cov_24c6n53n8j().s[11]++, performance.now());
    const suites =
    /* istanbul ignore next */
    (cov_24c6n53n8j().s[12]++, []);
    const errors =
    /* istanbul ignore next */
    (cov_24c6n53n8j().s[13]++, []);
    const recommendations =
    /* istanbul ignore next */
    (cov_24c6n53n8j().s[14]++, []);
    /* istanbul ignore next */
    cov_24c6n53n8j().s[15]++;
    console.log(`[CI Pipeline] Iniciando pipeline en ambiente ${config.environment}...`);
    /* istanbul ignore next */
    cov_24c6n53n8j().s[16]++;
    try {
      /* istanbul ignore next */
      cov_24c6n53n8j().s[17]++;
      // 1. Tests de RegresiÃ³n
      if (config.runRegression) {
        /* istanbul ignore next */
        cov_24c6n53n8j().b[1][0]++;
        cov_24c6n53n8j().s[18]++;
        console.log('[CI Pipeline] Ejecutando tests de regresiÃ³n...');
        const regressionSuite =
        /* istanbul ignore next */
        (cov_24c6n53n8j().s[19]++, await this.runRegressionTests(config.environment));
        /* istanbul ignore next */
        cov_24c6n53n8j().s[20]++;
        suites.push(regressionSuite);
        /* istanbul ignore next */
        cov_24c6n53n8j().s[21]++;
        if (regressionSuite.failedTests > 0) {
          /* istanbul ignore next */
          cov_24c6n53n8j().b[2][0]++;
          cov_24c6n53n8j().s[22]++;
          errors.push(`${regressionSuite.failedTests} tests de regresiÃ³n fallaron`);
          /* istanbul ignore next */
          cov_24c6n53n8j().s[23]++;
          recommendations.push('Revisar cambios recientes que puedan haber causado regresiones');
        } else
        /* istanbul ignore next */
        {
          cov_24c6n53n8j().b[2][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_24c6n53n8j().b[1][1]++;
      }
      // 2. Tests de Performance
      cov_24c6n53n8j().s[24]++;
      if (config.runPerformance) {
        /* istanbul ignore next */
        cov_24c6n53n8j().b[3][0]++;
        cov_24c6n53n8j().s[25]++;
        console.log('[CI Pipeline] Ejecutando tests de performance...');
        const performanceSuite =
        /* istanbul ignore next */
        (cov_24c6n53n8j().s[26]++, await this.runPerformanceTests());
        /* istanbul ignore next */
        cov_24c6n53n8j().s[27]++;
        suites.push(performanceSuite);
        /* istanbul ignore next */
        cov_24c6n53n8j().s[28]++;
        if (performanceSuite.failedTests > 0) {
          /* istanbul ignore next */
          cov_24c6n53n8j().b[4][0]++;
          cov_24c6n53n8j().s[29]++;
          errors.push(`${performanceSuite.failedTests} tests de performance fallaron`);
          /* istanbul ignore next */
          cov_24c6n53n8j().s[30]++;
          recommendations.push('Optimizar componentes que exceden los thresholds de performance');
        } else
        /* istanbul ignore next */
        {
          cov_24c6n53n8j().b[4][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_24c6n53n8j().b[3][1]++;
      }
      // 3. Tests de Accesibilidad
      cov_24c6n53n8j().s[31]++;
      if (config.runAccessibility) {
        /* istanbul ignore next */
        cov_24c6n53n8j().b[5][0]++;
        cov_24c6n53n8j().s[32]++;
        console.log('[CI Pipeline] Ejecutando tests de accesibilidad...');
        const accessibilitySuite =
        /* istanbul ignore next */
        (cov_24c6n53n8j().s[33]++, await this.runAccessibilityTests());
        /* istanbul ignore next */
        cov_24c6n53n8j().s[34]++;
        suites.push(accessibilitySuite);
        /* istanbul ignore next */
        cov_24c6n53n8j().s[35]++;
        if (accessibilitySuite.failedTests > 0) {
          /* istanbul ignore next */
          cov_24c6n53n8j().b[6][0]++;
          cov_24c6n53n8j().s[36]++;
          errors.push(`${accessibilitySuite.failedTests} tests de accesibilidad fallaron`);
          /* istanbul ignore next */
          cov_24c6n53n8j().s[37]++;
          recommendations.push('Corregir violaciones de accesibilidad para mejorar la experiencia del usuario');
        } else
        /* istanbul ignore next */
        {
          cov_24c6n53n8j().b[6][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_24c6n53n8j().b[5][1]++;
      }
      // 4. Tests de Seguridad
      cov_24c6n53n8j().s[38]++;
      if (config.runSecurity) {
        /* istanbul ignore next */
        cov_24c6n53n8j().b[7][0]++;
        cov_24c6n53n8j().s[39]++;
        console.log('[CI Pipeline] Ejecutando tests de seguridad...');
        const securitySuite =
        /* istanbul ignore next */
        (cov_24c6n53n8j().s[40]++, await this.runSecurityTests());
        /* istanbul ignore next */
        cov_24c6n53n8j().s[41]++;
        suites.push(securitySuite);
        /* istanbul ignore next */
        cov_24c6n53n8j().s[42]++;
        if (securitySuite.failedTests > 0) {
          /* istanbul ignore next */
          cov_24c6n53n8j().b[8][0]++;
          cov_24c6n53n8j().s[43]++;
          errors.push(`${securitySuite.failedTests} tests de seguridad fallaron`);
          /* istanbul ignore next */
          cov_24c6n53n8j().s[44]++;
          recommendations.push('Corregir vulnerabilidades de seguridad inmediatamente');
        } else
        /* istanbul ignore next */
        {
          cov_24c6n53n8j().b[8][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_24c6n53n8j().b[7][1]++;
      }
      const duration =
      /* istanbul ignore next */
      (cov_24c6n53n8j().s[45]++, performance.now() - startTime);
      const summary =
      /* istanbul ignore next */
      (cov_24c6n53n8j().s[46]++, this.calculateSummary(suites));
      const success =
      /* istanbul ignore next */
      (cov_24c6n53n8j().s[47]++,
      /* istanbul ignore next */
      (cov_24c6n53n8j().b[9][0]++, errors.length === 0) ||
      /* istanbul ignore next */
      (cov_24c6n53n8j().b[9][1]++, !config.failOnError));
      const result =
      /* istanbul ignore next */
      (cov_24c6n53n8j().s[48]++, {
        success,
        duration,
        suites,
        summary,
        errors,
        recommendations
      });
      // Enviar notificaciones si estÃ¡n configuradas
      /* istanbul ignore next */
      cov_24c6n53n8j().s[49]++;
      if (
      /* istanbul ignore next */
      (cov_24c6n53n8j().b[11][0]++, config.notifications.slack) ||
      /* istanbul ignore next */
      (cov_24c6n53n8j().b[11][1]++, config.notifications.email)) {
        /* istanbul ignore next */
        cov_24c6n53n8j().b[10][0]++;
        cov_24c6n53n8j().s[50]++;
        await this.sendNotifications(result, config.notifications);
      } else
      /* istanbul ignore next */
      {
        cov_24c6n53n8j().b[10][1]++;
      }
      cov_24c6n53n8j().s[51]++;
      console.log(`[CI Pipeline] Pipeline completado en ${duration.toFixed(2)}ms`);
      /* istanbul ignore next */
      cov_24c6n53n8j().s[52]++;
      console.log(`[CI Pipeline] Resultado: ${success ?
      /* istanbul ignore next */
      (cov_24c6n53n8j().b[12][0]++, 'ÃXITO') :
      /* istanbul ignore next */
      (cov_24c6n53n8j().b[12][1]++, 'FALLO')}`);
      /* istanbul ignore next */
      cov_24c6n53n8j().s[53]++;
      console.log(`[CI Pipeline] Tests: ${summary.passedTests}/${summary.totalTests} pasaron`);
      /* istanbul ignore next */
      cov_24c6n53n8j().s[54]++;
      return result;
    } catch (error) {
      const duration =
      /* istanbul ignore next */
      (cov_24c6n53n8j().s[55]++, performance.now() - startTime);
      const errorMessage =
      /* istanbul ignore next */
      (cov_24c6n53n8j().s[56]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_24c6n53n8j().b[13][0]++, error.message) :
      /* istanbul ignore next */
      (cov_24c6n53n8j().b[13][1]++, 'Error desconocido'));
      /* istanbul ignore next */
      cov_24c6n53n8j().s[57]++;
      console.error(`[CI Pipeline] Error en pipeline: ${errorMessage}`);
      /* istanbul ignore next */
      cov_24c6n53n8j().s[58]++;
      return {
        success: false,
        duration,
        suites,
        summary: this.calculateSummary(suites),
        errors: [errorMessage, ...errors],
        recommendations: ['Revisar logs del pipeline para identificar la causa del error', ...recommendations]
      };
    }
  }
  /**
  * Ejecutar tests de regresiÃ³n
  */
  async runRegressionTests(environment) {
    /* istanbul ignore next */
    cov_24c6n53n8j().f[6]++;
    const config =
    /* istanbul ignore next */
    (cov_24c6n53n8j().s[59]++, {
      threshold: environment === 'production' ?
      /* istanbul ignore next */
      (cov_24c6n53n8j().b[14][0]++, 0.05) :
      /* istanbul ignore next */
      (cov_24c6n53n8j().b[14][1]++, 0.1),
      components: ['ShopDetails', 'ProductGallery', 'CheckoutForm', 'UserDashboard', 'AdminDashboard'],
      apis: ['/api/products', '/api/cart', '/api/orders', '/api/auth', '/api/admin/dashboard']
    });
    /* istanbul ignore next */
    cov_24c6n53n8j().s[60]++;
    return await _automatedtestingmanager.automatedTestingManager.runRegressionTests(config);
  }
  /**
  * Ejecutar tests de performance
  */
  async runPerformanceTests() {
    /* istanbul ignore next */
    cov_24c6n53n8j().f[7]++;
    const components =
    /* istanbul ignore next */
    (cov_24c6n53n8j().s[61]++, ['HomePage', 'ProductPage', 'CartPage', 'CheckoutPage', 'AdminPage']);
    /* istanbul ignore next */
    cov_24c6n53n8j().s[62]++;
    return await _automatedtestingmanager.automatedTestingManager.runPerformanceTests(components);
  }
  /**
  * Ejecutar tests de accesibilidad
  */
  async runAccessibilityTests() {
    /* istanbul ignore next */
    cov_24c6n53n8j().f[8]++;
    const pages =
    /* istanbul ignore next */
    (cov_24c6n53n8j().s[63]++, ['/', '/products', '/cart', '/checkout', '/admin']);
    /* istanbul ignore next */
    cov_24c6n53n8j().s[64]++;
    return await _automatedtestingmanager.automatedTestingManager.runAccessibilityTests(pages);
  }
  /**
  * Ejecutar tests de seguridad
  */
  async runSecurityTests() {
    /* istanbul ignore next */
    cov_24c6n53n8j().f[9]++;
    const startTime =
    /* istanbul ignore next */
    (cov_24c6n53n8j().s[65]++, performance.now());
    const tests =
    /* istanbul ignore next */
    (cov_24c6n53n8j().s[66]++, []);
    // Test de vulnerabilidades de dependencias
    const dependencyTest =
    /* istanbul ignore next */
    (cov_24c6n53n8j().s[67]++, await this.testDependencyVulnerabilities());
    /* istanbul ignore next */
    cov_24c6n53n8j().s[68]++;
    tests.push(dependencyTest);
    // Test de configuraciÃ³n de seguridad
    const configTest =
    /* istanbul ignore next */
    (cov_24c6n53n8j().s[69]++, await this.testSecurityConfiguration());
    /* istanbul ignore next */
    cov_24c6n53n8j().s[70]++;
    tests.push(configTest);
    // Test de autenticaciÃ³n
    const authTest =
    /* istanbul ignore next */
    (cov_24c6n53n8j().s[71]++, await this.testAuthenticationSecurity());
    /* istanbul ignore next */
    cov_24c6n53n8j().s[72]++;
    tests.push(authTest);
    // Test de rate limiting
    const rateLimitTest =
    /* istanbul ignore next */
    (cov_24c6n53n8j().s[73]++, await this.testRateLimitingSecurity());
    /* istanbul ignore next */
    cov_24c6n53n8j().s[74]++;
    tests.push(rateLimitTest);
    const duration =
    /* istanbul ignore next */
    (cov_24c6n53n8j().s[75]++, performance.now() - startTime);
    /* istanbul ignore next */
    cov_24c6n53n8j().s[76]++;
    return {
      name: 'Security Tests',
      tests,
      totalTests: tests.length,
      passedTests: tests.filter(t => {
        /* istanbul ignore next */
        cov_24c6n53n8j().f[10]++;
        cov_24c6n53n8j().s[77]++;
        return t.status === 'passed';
      }).length,
      failedTests: tests.filter(t => {
        /* istanbul ignore next */
        cov_24c6n53n8j().f[11]++;
        cov_24c6n53n8j().s[78]++;
        return t.status === 'failed';
      }).length,
      skippedTests: tests.filter(t => {
        /* istanbul ignore next */
        cov_24c6n53n8j().f[12]++;
        cov_24c6n53n8j().s[79]++;
        return t.status === 'skipped';
      }).length,
      duration
    };
  }
  /**
  * Test de vulnerabilidades de dependencias
  */
  async testDependencyVulnerabilities() {
    /* istanbul ignore next */
    cov_24c6n53n8j().f[13]++;
    const startTime =
    /* istanbul ignore next */
    (cov_24c6n53n8j().s[80]++, performance.now());
    /* istanbul ignore next */
    cov_24c6n53n8j().s[81]++;
    try {
      // Simular audit de dependencias
      const vulnerabilities =
      /* istanbul ignore next */
      (cov_24c6n53n8j().s[82]++, Math.floor(Math.random() * 3)); // 0-2 vulnerabilities
      /* istanbul ignore next */
      cov_24c6n53n8j().s[83]++;
      return {
        name: 'Dependency Vulnerabilities',
        status: vulnerabilities === 0 ?
        /* istanbul ignore next */
        (cov_24c6n53n8j().b[15][0]++, 'passed') :
        /* istanbul ignore next */
        (cov_24c6n53n8j().b[15][1]++, 'failed'),
        duration: performance.now() - startTime,
        error: vulnerabilities > 0 ?
        /* istanbul ignore next */
        (cov_24c6n53n8j().b[16][0]++, `${vulnerabilities} vulnerabilidades encontradas`) :
        /* istanbul ignore next */
        (cov_24c6n53n8j().b[16][1]++, undefined),
        details: {
          vulnerabilities
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_24c6n53n8j().s[84]++;
      return {
        name: 'Dependency Vulnerabilities Error',
        status: 'failed',
        duration: performance.now() - startTime,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_24c6n53n8j().b[17][0]++, error.message) :
        /* istanbul ignore next */
        (cov_24c6n53n8j().b[17][1]++, 'Unknown error')
      };
    }
  }
  /**
  * Test de configuraciÃ³n de seguridad
  */
  async testSecurityConfiguration() {
    /* istanbul ignore next */
    cov_24c6n53n8j().f[14]++;
    const startTime =
    /* istanbul ignore next */
    (cov_24c6n53n8j().s[85]++, performance.now());
    /* istanbul ignore next */
    cov_24c6n53n8j().s[86]++;
    try {
      // Verificar configuraciones de seguridad
      const issues =
      /* istanbul ignore next */
      (cov_24c6n53n8j().s[87]++, []);
      // Verificar variables de entorno
      /* istanbul ignore next */
      cov_24c6n53n8j().s[88]++;
      if (!process.env.NEXTAUTH_SECRET) {
        /* istanbul ignore next */
        cov_24c6n53n8j().b[18][0]++;
        cov_24c6n53n8j().s[89]++;
        issues.push('NEXTAUTH_SECRET no configurado');
      } else
      /* istanbul ignore next */
      {
        cov_24c6n53n8j().b[18][1]++;
      }
      cov_24c6n53n8j().s[90]++;
      if (!process.env.SUPABASE_SERVICE_ROLE_KEY) {
        /* istanbul ignore next */
        cov_24c6n53n8j().b[19][0]++;
        cov_24c6n53n8j().s[91]++;
        issues.push('SUPABASE_SERVICE_ROLE_KEY no configurado');
      } else
      /* istanbul ignore next */
      {
        cov_24c6n53n8j().b[19][1]++;
      }
      cov_24c6n53n8j().s[92]++;
      return {
        name: 'Security Configuration',
        status: issues.length === 0 ?
        /* istanbul ignore next */
        (cov_24c6n53n8j().b[20][0]++, 'passed') :
        /* istanbul ignore next */
        (cov_24c6n53n8j().b[20][1]++, 'failed'),
        duration: performance.now() - startTime,
        error: issues.length > 0 ?
        /* istanbul ignore next */
        (cov_24c6n53n8j().b[21][0]++, issues.join(', ')) :
        /* istanbul ignore next */
        (cov_24c6n53n8j().b[21][1]++, undefined),
        details: {
          issues
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_24c6n53n8j().s[93]++;
      return {
        name: 'Security Configuration Error',
        status: 'failed',
        duration: performance.now() - startTime,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_24c6n53n8j().b[22][0]++, error.message) :
        /* istanbul ignore next */
        (cov_24c6n53n8j().b[22][1]++, 'Unknown error')
      };
    }
  }
  /**
  * Test de seguridad de autenticaciÃ³n
  */
  async testAuthenticationSecurity() {
    /* istanbul ignore next */
    cov_24c6n53n8j().f[15]++;
    const startTime =
    /* istanbul ignore next */
    (cov_24c6n53n8j().s[94]++, performance.now());
    /* istanbul ignore next */
    cov_24c6n53n8j().s[95]++;
    try {
      // Simular test de autenticaciÃ³n
      const authStrength =
      /* istanbul ignore next */
      (cov_24c6n53n8j().s[96]++, Math.random() * 100); // 0-100% strength
      /* istanbul ignore next */
      cov_24c6n53n8j().s[97]++;
      return {
        name: 'Authentication Security',
        status: authStrength >= 80 ?
        /* istanbul ignore next */
        (cov_24c6n53n8j().b[23][0]++, 'passed') :
        /* istanbul ignore next */
        (cov_24c6n53n8j().b[23][1]++, 'failed'),
        duration: performance.now() - startTime,
        error: authStrength < 80 ?
        /* istanbul ignore next */
        (cov_24c6n53n8j().b[24][0]++, `Fortaleza de autenticaciÃ³n ${authStrength.toFixed(1)}% < 80%`) :
        /* istanbul ignore next */
        (cov_24c6n53n8j().b[24][1]++, undefined),
        details: {
          authStrength
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_24c6n53n8j().s[98]++;
      return {
        name: 'Authentication Security Error',
        status: 'failed',
        duration: performance.now() - startTime,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_24c6n53n8j().b[25][0]++, error.message) :
        /* istanbul ignore next */
        (cov_24c6n53n8j().b[25][1]++, 'Unknown error')
      };
    }
  }
  /**
  * Test de rate limiting
  */
  async testRateLimitingSecurity() {
    /* istanbul ignore next */
    cov_24c6n53n8j().f[16]++;
    const startTime =
    /* istanbul ignore next */
    (cov_24c6n53n8j().s[99]++, performance.now());
    /* istanbul ignore next */
    cov_24c6n53n8j().s[100]++;
    try {
      // Simular test de rate limiting
      const rateLimitActive =
      /* istanbul ignore next */
      (cov_24c6n53n8j().s[101]++, Math.random() > 0.2); // 80% chance active
      /* istanbul ignore next */
      cov_24c6n53n8j().s[102]++;
      return {
        name: 'Rate Limiting Security',
        status: rateLimitActive ?
        /* istanbul ignore next */
        (cov_24c6n53n8j().b[26][0]++, 'passed') :
        /* istanbul ignore next */
        (cov_24c6n53n8j().b[26][1]++, 'failed'),
        duration: performance.now() - startTime,
        error: !rateLimitActive ?
        /* istanbul ignore next */
        (cov_24c6n53n8j().b[27][0]++, 'Rate limiting no estÃ¡ activo en todos los endpoints') :
        /* istanbul ignore next */
        (cov_24c6n53n8j().b[27][1]++, undefined),
        details: {
          rateLimitActive
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_24c6n53n8j().s[103]++;
      return {
        name: 'Rate Limiting Security Error',
        status: 'failed',
        duration: performance.now() - startTime,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_24c6n53n8j().b[28][0]++, error.message) :
        /* istanbul ignore next */
        (cov_24c6n53n8j().b[28][1]++, 'Unknown error')
      };
    }
  }
  /**
  * Calcular resumen de tests
  */
  calculateSummary(suites) {
    /* istanbul ignore next */
    cov_24c6n53n8j().f[17]++;
    const totalTests =
    /* istanbul ignore next */
    (cov_24c6n53n8j().s[104]++, suites.reduce((sum, suite) => {
      /* istanbul ignore next */
      cov_24c6n53n8j().f[18]++;
      cov_24c6n53n8j().s[105]++;
      return sum + suite.totalTests;
    }, 0));
    const passedTests =
    /* istanbul ignore next */
    (cov_24c6n53n8j().s[106]++, suites.reduce((sum, suite) => {
      /* istanbul ignore next */
      cov_24c6n53n8j().f[19]++;
      cov_24c6n53n8j().s[107]++;
      return sum + suite.passedTests;
    }, 0));
    const failedTests =
    /* istanbul ignore next */
    (cov_24c6n53n8j().s[108]++, suites.reduce((sum, suite) => {
      /* istanbul ignore next */
      cov_24c6n53n8j().f[20]++;
      cov_24c6n53n8j().s[109]++;
      return sum + suite.failedTests;
    }, 0));
    /* istanbul ignore next */
    cov_24c6n53n8j().s[110]++;
    return {
      totalTests,
      passedTests,
      failedTests,
      successRate: totalTests > 0 ?
      /* istanbul ignore next */
      (cov_24c6n53n8j().b[29][0]++, passedTests / totalTests * 100) :
      /* istanbul ignore next */
      (cov_24c6n53n8j().b[29][1]++, 0)
    };
  }
  /**
  * Enviar notificaciones
  */
  async sendNotifications(result, notifications) {
    /* istanbul ignore next */
    cov_24c6n53n8j().f[21]++;
    const message =
    /* istanbul ignore next */
    (cov_24c6n53n8j().s[111]++, this.formatNotificationMessage(result));
    /* istanbul ignore next */
    cov_24c6n53n8j().s[112]++;
    if (notifications.slack) {
      /* istanbul ignore next */
      cov_24c6n53n8j().b[30][0]++;
      cov_24c6n53n8j().s[113]++;
      console.log(`[CI Pipeline] Enviando notificaciÃ³n a Slack: ${notifications.slack}`);
      // AquÃ­ se implementarÃ­a la integraciÃ³n con Slack
    } else
    /* istanbul ignore next */
    {
      cov_24c6n53n8j().b[30][1]++;
    }
    cov_24c6n53n8j().s[114]++;
    if (
    /* istanbul ignore next */
    (cov_24c6n53n8j().b[32][0]++, notifications.email) &&
    /* istanbul ignore next */
    (cov_24c6n53n8j().b[32][1]++, notifications.email.length > 0)) {
      /* istanbul ignore next */
      cov_24c6n53n8j().b[31][0]++;
      cov_24c6n53n8j().s[115]++;
      console.log(`[CI Pipeline] Enviando notificaciÃ³n por email a: ${notifications.email.join(', ')}`);
      // AquÃ­ se implementarÃ­a la integraciÃ³n con email
    } else
    /* istanbul ignore next */
    {
      cov_24c6n53n8j().b[31][1]++;
    }
  }
  /**
  * Formatear mensaje de notificaciÃ³n
  */
  formatNotificationMessage(result) {
    /* istanbul ignore next */
    cov_24c6n53n8j().f[22]++;
    const status =
    /* istanbul ignore next */
    (cov_24c6n53n8j().s[116]++, result.success ?
    /* istanbul ignore next */
    (cov_24c6n53n8j().b[33][0]++, 'â ÃXITO') :
    /* istanbul ignore next */
    (cov_24c6n53n8j().b[33][1]++, 'â FALLO'));
    const duration =
    /* istanbul ignore next */
    (cov_24c6n53n8j().s[117]++, (result.duration / 1000).toFixed(2));
    /* istanbul ignore next */
    cov_24c6n53n8j().s[118]++;
    return `
ğ§ª **Pipeline de Testing Completado**

**Estado**: ${status}
**DuraciÃ³n**: ${duration}s
**Tests**: ${result.summary.passedTests}/${result.summary.totalTests} pasaron (${result.summary.successRate.toFixed(1)}%)

${result.errors.length > 0 ?
    /* istanbul ignore next */
    (cov_24c6n53n8j().b[34][0]++, `**Errores**:\n${result.errors.map(e => {
      /* istanbul ignore next */
      cov_24c6n53n8j().f[23]++;
      cov_24c6n53n8j().s[119]++;
      return `â¢ ${e}`;
    }).join('\n')}`) :
    /* istanbul ignore next */
    (cov_24c6n53n8j().b[34][1]++, '')}

${result.recommendations.length > 0 ?
    /* istanbul ignore next */
    (cov_24c6n53n8j().b[35][0]++, `**Recomendaciones**:\n${result.recommendations.map(r => {
      /* istanbul ignore next */
      cov_24c6n53n8j().f[24]++;
      cov_24c6n53n8j().s[120]++;
      return `â¢ ${r}`;
    }).join('\n')}`) :
    /* istanbul ignore next */
    (cov_24c6n53n8j().b[35][1]++, '')}
    `.trim();
  }
}
const CI_CONFIGS =
/* istanbul ignore next */
(cov_24c6n53n8j().s[121]++, {
  development: {
    environment: 'development',
    runRegression: true,
    runPerformance: true,
    runAccessibility: false,
    runSecurity: false,
    failOnError: false,
    notifications: {}
  },
  staging: {
    environment: 'staging',
    runRegression: true,
    runPerformance: true,
    runAccessibility: true,
    runSecurity: true,
    failOnError: true,
    notifications: {
      slack: process.env.SLACK_WEBHOOK_URL
    }
  },
  production: {
    environment: 'production',
    runRegression: true,
    runPerformance: true,
    runAccessibility: true,
    runSecurity: true,
    failOnError: true,
    notifications: {
      slack: process.env.SLACK_WEBHOOK_URL,
      email:
      /* istanbul ignore next */
      (cov_24c6n53n8j().b[36][0]++, process.env.NOTIFICATION_EMAILS?.split(',')) ||
      /* istanbul ignore next */
      (cov_24c6n53n8j().b[36][1]++, [])
    }
  }
});
const ciTestingPipeline =
/* istanbul ignore next */
(cov_24c6n53n8j().s[122]++, CITestingPipeline.getInstance());
const _default =
/* istanbul ignore next */
(cov_24c6n53n8j().s[123]++, {
  ciTestingPipeline,
  CITestingPipeline,
  CI_CONFIGS
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,