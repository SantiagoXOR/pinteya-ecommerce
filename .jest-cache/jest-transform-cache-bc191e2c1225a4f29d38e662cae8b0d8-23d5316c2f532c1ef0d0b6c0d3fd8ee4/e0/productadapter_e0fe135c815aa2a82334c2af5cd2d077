b3e8b4d3211968a2e196bccd5e9e1a6f
// ===================================
// PINTEYA E-COMMERCE - ADAPTADOR DE PRODUCTOS
// ===================================
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get adaptApiProductToComponent () {
        return adaptApiProductToComponent;
    },
    get adaptApiProductsToComponents () {
        return adaptApiProductsToComponents;
    },
    get adaptComponentProductToApi () {
        return adaptComponentProductToApi;
    },
    get formatPrice () {
        return formatPrice;
    },
    get generateSlug () {
        return generateSlug;
    },
    get getDiscountPercentage () {
        return getDiscountPercentage;
    },
    get getFinalPrice () {
        return getFinalPrice;
    },
    get getMainImage () {
        return getMainImage;
    },
    get getPreviewImage () {
        return getPreviewImage;
    },
    get getThumbnailImage () {
        return getThumbnailImage;
    },
    get getValidImageUrl () {
        return getValidImageUrl;
    },
    get hasDiscount () {
        return hasDiscount;
    }
});
function adaptApiProductToComponent(apiProduct) {
    // Mapear correctamente las imágenes desde la estructura de BD a la estructura de componentes
    const images = apiProduct.images || {};
    return {
        id: apiProduct.id,
        title: apiProduct.name,
        name: apiProduct.name,
        brand: apiProduct.brand,
        reviews: Math.floor(Math.random() * 50) + 1,
        price: apiProduct.price,
        // FIX CRÍTICO: Solo usar discounted_price si es menor que price, sino undefined
        discountedPrice: apiProduct.discounted_price && apiProduct.discounted_price < apiProduct.price ? apiProduct.discounted_price : undefined,
        imgs: {
            // Mapear desde la estructura real de la BD: { main, gallery, thumbnail }
            thumbnails: images.thumbnail ? [
                images.thumbnail
            ] : [
                '/images/products/placeholder.svg'
            ],
            previews: images.main ? [
                images.main
            ] : images.gallery?.[0] ? [
                images.gallery[0]
            ] : [
                '/images/products/placeholder.svg'
            ]
        }
    };
}
function adaptApiProductsToComponents(apiProducts) {
    return apiProducts.map(adaptApiProductToComponent);
}
function adaptComponentProductToApi(componentProduct) {
    return {
        id: componentProduct.id,
        name: componentProduct.title,
        price: componentProduct.price,
        discounted_price: componentProduct.discountedPrice !== componentProduct.price ? componentProduct.discountedPrice : null,
        images: componentProduct.imgs,
        stock: 50
    };
}
function hasDiscount(product) {
    if ('discountedPrice' in product) {
        return product.discountedPrice !== undefined && product.discountedPrice < product.price;
    }
    if ('discounted_price' in product) {
        return product.discounted_price !== null && product.discounted_price < product.price;
    }
    return false;
}
function getDiscountPercentage(product) {
    let originalPrice;
    let discountedPrice;
    if ('discountedPrice' in product) {
        originalPrice = product.price;
        discountedPrice = product.discountedPrice;
    } else {
        originalPrice = product.price;
        discountedPrice = product.discounted_price || product.price;
    }
    if (discountedPrice >= originalPrice) {
        return 0;
    }
    return Math.round((originalPrice - discountedPrice) / originalPrice * 100);
}
function getFinalPrice(product) {
    if ('discountedPrice' in product) {
        return product.discountedPrice;
    }
    return product.discounted_price ?? product.price;
}
function getMainImage(product) {
    if ('imgs' in product && product.imgs?.previews?.[0]) {
        return product.imgs.previews[0];
    }
    if ('images' in product && product.images?.previews?.[0]) {
        return product.images.previews[0];
    }
    return '/images/products/placeholder.svg';
}
function getValidImageUrl(imageUrl, fallback = '/images/products/placeholder.svg') {
    // Verificar si la imagen existe y no es una cadena vacía o solo espacios
    if (imageUrl && typeof imageUrl === 'string' && imageUrl.trim() !== '') {
        return imageUrl.trim();
    }
    return fallback;
}
function getThumbnailImage(product) {
    let imageUrl;
    if ('imgs' in product && product.imgs?.thumbnails?.[0]) {
        imageUrl = product.imgs.thumbnails[0];
    } else if ('images' in product && product.images?.thumbnails?.[0]) {
        imageUrl = product.images.thumbnails[0];
    }
    return getValidImageUrl(imageUrl);
}
function getPreviewImage(product) {
    let imageUrl;
    if ('imgs' in product && product.imgs?.previews?.[0]) {
        imageUrl = product.imgs.previews[0];
    } else if ('images' in product && product.images?.previews?.[0]) {
        imageUrl = product.images.previews[0];
    }
    return getValidImageUrl(imageUrl);
}
function formatPrice(price) {
    return new Intl.NumberFormat('es-AR', {
        style: 'currency',
        currency: 'ARS',
        minimumFractionDigits: 0,
        maximumFractionDigits: 0
    }).format(price);
}
function generateSlug(name) {
    return name.toLowerCase().normalize('NFD').replace(/[\u0300-\u036f]/g, '') // Remover acentos
    .replace(/[^a-z0-9\s-]/g, '') // Remover caracteres especiales
    .replace(/\s+/g, '-') // Reemplazar espacios con guiones
    .replace(/-+/g, '-') // Remover guiones múltiples
    .replace(/^-|-$/g, '') // Remover guiones al inicio y final
    ;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXHNyY1xcbGliXFxhZGFwdGVyc1xccHJvZHVjdC1hZGFwdGVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBQSU5URVlBIEUtQ09NTUVSQ0UgLSBBREFQVEFET1IgREUgUFJPRFVDVE9TXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5pbXBvcnQgeyBQcm9kdWN0IH0gZnJvbSAnQC90eXBlcy9wcm9kdWN0J1xuaW1wb3J0IHsgUHJvZHVjdFdpdGhDYXRlZ29yeSB9IGZyb20gJ0AvdHlwZXMvYXBpJ1xuXG4vKipcbiAqIENvbnZpZXJ0ZSB1biBwcm9kdWN0byBkZSBsYSBBUEkgYWwgZm9ybWF0byBlc3BlcmFkbyBwb3IgbG9zIGNvbXBvbmVudGVzXG4gKiBAcGFyYW0gYXBpUHJvZHVjdCAtIFByb2R1Y3RvIGRlc2RlIGxhIEFQSVxuICogQHJldHVybnMgUHJvZHVjdCAtIFByb2R1Y3RvIGVuIGZvcm1hdG8gZGUgY29tcG9uZW50ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gYWRhcHRBcGlQcm9kdWN0VG9Db21wb25lbnQoXG4gIGFwaVByb2R1Y3Q6IFByb2R1Y3RXaXRoQ2F0ZWdvcnlcbik6IFByb2R1Y3QgJiB7IG5hbWU/OiBzdHJpbmcgfSB7XG4gIC8vIE1hcGVhciBjb3JyZWN0YW1lbnRlIGxhcyBpbcOhZ2VuZXMgZGVzZGUgbGEgZXN0cnVjdHVyYSBkZSBCRCBhIGxhIGVzdHJ1Y3R1cmEgZGUgY29tcG9uZW50ZXNcbiAgY29uc3QgaW1hZ2VzID0gYXBpUHJvZHVjdC5pbWFnZXMgfHwge31cblxuICByZXR1cm4ge1xuICAgIGlkOiBhcGlQcm9kdWN0LmlkLFxuICAgIHRpdGxlOiBhcGlQcm9kdWN0Lm5hbWUsXG4gICAgbmFtZTogYXBpUHJvZHVjdC5uYW1lLCAvLyBBZ3JlZ2FyIGVsIGNhbXBvIG5hbWUgcGFyYSBjb21wYXRpYmlsaWRhZFxuICAgIGJyYW5kOiBhcGlQcm9kdWN0LmJyYW5kLCAvLyBBZ3JlZ2FyIGVsIGNhbXBvIGJyYW5kIHF1ZSBmYWx0YWJhXG4gICAgcmV2aWV3czogTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNTApICsgMSwgLy8gVGVtcG9yYWw6IGdlbmVyYXIgcmV2aWV3cyBhbGVhdG9yaWFzXG4gICAgcHJpY2U6IGFwaVByb2R1Y3QucHJpY2UsXG4gICAgLy8gRklYIENSw41USUNPOiBTb2xvIHVzYXIgZGlzY291bnRlZF9wcmljZSBzaSBlcyBtZW5vciBxdWUgcHJpY2UsIHNpbm8gdW5kZWZpbmVkXG4gICAgZGlzY291bnRlZFByaWNlOlxuICAgICAgYXBpUHJvZHVjdC5kaXNjb3VudGVkX3ByaWNlICYmIGFwaVByb2R1Y3QuZGlzY291bnRlZF9wcmljZSA8IGFwaVByb2R1Y3QucHJpY2VcbiAgICAgICAgPyBhcGlQcm9kdWN0LmRpc2NvdW50ZWRfcHJpY2VcbiAgICAgICAgOiB1bmRlZmluZWQsXG4gICAgaW1nczoge1xuICAgICAgLy8gTWFwZWFyIGRlc2RlIGxhIGVzdHJ1Y3R1cmEgcmVhbCBkZSBsYSBCRDogeyBtYWluLCBnYWxsZXJ5LCB0aHVtYm5haWwgfVxuICAgICAgdGh1bWJuYWlsczogaW1hZ2VzLnRodW1ibmFpbCA/IFtpbWFnZXMudGh1bWJuYWlsXSA6IFsnL2ltYWdlcy9wcm9kdWN0cy9wbGFjZWhvbGRlci5zdmcnXSxcbiAgICAgIHByZXZpZXdzOiBpbWFnZXMubWFpblxuICAgICAgICA/IFtpbWFnZXMubWFpbl1cbiAgICAgICAgOiBpbWFnZXMuZ2FsbGVyeT8uWzBdXG4gICAgICAgICAgPyBbaW1hZ2VzLmdhbGxlcnlbMF1dXG4gICAgICAgICAgOiBbJy9pbWFnZXMvcHJvZHVjdHMvcGxhY2Vob2xkZXIuc3ZnJ10sXG4gICAgfSxcbiAgfVxufVxuXG4vKipcbiAqIENvbnZpZXJ0ZSB1bmEgbGlzdGEgZGUgcHJvZHVjdG9zIGRlIGxhIEFQSSBhbCBmb3JtYXRvIGRlIGNvbXBvbmVudGVzXG4gKiBAcGFyYW0gYXBpUHJvZHVjdHMgLSBMaXN0YSBkZSBwcm9kdWN0b3MgZGVzZGUgbGEgQVBJXG4gKiBAcmV0dXJucyBQcm9kdWN0W10gLSBMaXN0YSBkZSBwcm9kdWN0b3MgZW4gZm9ybWF0byBkZSBjb21wb25lbnRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhZGFwdEFwaVByb2R1Y3RzVG9Db21wb25lbnRzKFxuICBhcGlQcm9kdWN0czogUHJvZHVjdFdpdGhDYXRlZ29yeVtdXG4pOiAoUHJvZHVjdCAmIHsgbmFtZT86IHN0cmluZyB9KVtdIHtcbiAgcmV0dXJuIGFwaVByb2R1Y3RzLm1hcChhZGFwdEFwaVByb2R1Y3RUb0NvbXBvbmVudClcbn1cblxuLyoqXG4gKiBDb252aWVydGUgdW4gcHJvZHVjdG8gZGUgY29tcG9uZW50ZSBhbCBmb3JtYXRvIGRlIGxhIEFQSVxuICogQHBhcmFtIGNvbXBvbmVudFByb2R1Y3QgLSBQcm9kdWN0byBlbiBmb3JtYXRvIGRlIGNvbXBvbmVudGVcbiAqIEByZXR1cm5zIFBhcnRpYWw8UHJvZHVjdFdpdGhDYXRlZ29yeT4gLSBQcm9kdWN0byBlbiBmb3JtYXRvIGRlIEFQSVxuICovXG5leHBvcnQgZnVuY3Rpb24gYWRhcHRDb21wb25lbnRQcm9kdWN0VG9BcGkoXG4gIGNvbXBvbmVudFByb2R1Y3Q6IFByb2R1Y3Rcbik6IFBhcnRpYWw8UHJvZHVjdFdpdGhDYXRlZ29yeT4ge1xuICByZXR1cm4ge1xuICAgIGlkOiBjb21wb25lbnRQcm9kdWN0LmlkLFxuICAgIG5hbWU6IGNvbXBvbmVudFByb2R1Y3QudGl0bGUsXG4gICAgcHJpY2U6IGNvbXBvbmVudFByb2R1Y3QucHJpY2UsXG4gICAgZGlzY291bnRlZF9wcmljZTpcbiAgICAgIGNvbXBvbmVudFByb2R1Y3QuZGlzY291bnRlZFByaWNlICE9PSBjb21wb25lbnRQcm9kdWN0LnByaWNlXG4gICAgICAgID8gY29tcG9uZW50UHJvZHVjdC5kaXNjb3VudGVkUHJpY2VcbiAgICAgICAgOiBudWxsLFxuICAgIGltYWdlczogY29tcG9uZW50UHJvZHVjdC5pbWdzLFxuICAgIHN0b2NrOiA1MCwgLy8gVmFsb3IgcG9yIGRlZmVjdG9cbiAgfVxufVxuXG4vKipcbiAqIFZlcmlmaWNhIHNpIHVuIHByb2R1Y3RvIHRpZW5lIGRlc2N1ZW50b1xuICogQHBhcmFtIHByb2R1Y3QgLSBQcm9kdWN0b1xuICogQHJldHVybnMgYm9vbGVhblxuICovXG5leHBvcnQgZnVuY3Rpb24gaGFzRGlzY291bnQocHJvZHVjdDogUHJvZHVjdCB8IFByb2R1Y3RXaXRoQ2F0ZWdvcnkpOiBib29sZWFuIHtcbiAgaWYgKCdkaXNjb3VudGVkUHJpY2UnIGluIHByb2R1Y3QpIHtcbiAgICByZXR1cm4gcHJvZHVjdC5kaXNjb3VudGVkUHJpY2UgIT09IHVuZGVmaW5lZCAmJiBwcm9kdWN0LmRpc2NvdW50ZWRQcmljZSA8IHByb2R1Y3QucHJpY2VcbiAgfVxuICBpZiAoJ2Rpc2NvdW50ZWRfcHJpY2UnIGluIHByb2R1Y3QpIHtcbiAgICByZXR1cm4gcHJvZHVjdC5kaXNjb3VudGVkX3ByaWNlICE9PSBudWxsICYmIHByb2R1Y3QuZGlzY291bnRlZF9wcmljZSA8IHByb2R1Y3QucHJpY2VcbiAgfVxuICByZXR1cm4gZmFsc2Vcbn1cblxuLyoqXG4gKiBDYWxjdWxhIGVsIHBvcmNlbnRhamUgZGUgZGVzY3VlbnRvXG4gKiBAcGFyYW0gcHJvZHVjdCAtIFByb2R1Y3RvXG4gKiBAcmV0dXJucyBudW1iZXIgLSBQb3JjZW50YWplIGRlIGRlc2N1ZW50b1xuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0RGlzY291bnRQZXJjZW50YWdlKHByb2R1Y3Q6IFByb2R1Y3QgfCBQcm9kdWN0V2l0aENhdGVnb3J5KTogbnVtYmVyIHtcbiAgbGV0IG9yaWdpbmFsUHJpY2U6IG51bWJlclxuICBsZXQgZGlzY291bnRlZFByaWNlOiBudW1iZXJcblxuICBpZiAoJ2Rpc2NvdW50ZWRQcmljZScgaW4gcHJvZHVjdCkge1xuICAgIG9yaWdpbmFsUHJpY2UgPSBwcm9kdWN0LnByaWNlXG4gICAgZGlzY291bnRlZFByaWNlID0gcHJvZHVjdC5kaXNjb3VudGVkUHJpY2VcbiAgfSBlbHNlIHtcbiAgICBvcmlnaW5hbFByaWNlID0gcHJvZHVjdC5wcmljZVxuICAgIGRpc2NvdW50ZWRQcmljZSA9IHByb2R1Y3QuZGlzY291bnRlZF9wcmljZSB8fCBwcm9kdWN0LnByaWNlXG4gIH1cblxuICBpZiAoZGlzY291bnRlZFByaWNlID49IG9yaWdpbmFsUHJpY2UpIHtcbiAgICByZXR1cm4gMFxuICB9XG5cbiAgcmV0dXJuIE1hdGgucm91bmQoKChvcmlnaW5hbFByaWNlIC0gZGlzY291bnRlZFByaWNlKSAvIG9yaWdpbmFsUHJpY2UpICogMTAwKVxufVxuXG4vKipcbiAqIE9idGllbmUgZWwgcHJlY2lvIGZpbmFsIGRlbCBwcm9kdWN0byAoY29uIGRlc2N1ZW50byBzaSBhcGxpY2EpXG4gKiBAcGFyYW0gcHJvZHVjdCAtIFByb2R1Y3RvXG4gKiBAcmV0dXJucyBudW1iZXIgLSBQcmVjaW8gZmluYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEZpbmFsUHJpY2UocHJvZHVjdDogUHJvZHVjdCB8IFByb2R1Y3RXaXRoQ2F0ZWdvcnkpOiBudW1iZXIge1xuICBpZiAoJ2Rpc2NvdW50ZWRQcmljZScgaW4gcHJvZHVjdCkge1xuICAgIHJldHVybiBwcm9kdWN0LmRpc2NvdW50ZWRQcmljZVxuICB9XG4gIHJldHVybiBwcm9kdWN0LmRpc2NvdW50ZWRfcHJpY2UgPz8gcHJvZHVjdC5wcmljZVxufVxuXG4vKipcbiAqIE9idGllbmUgbGEgaW1hZ2VuIHByaW5jaXBhbCBkZWwgcHJvZHVjdG9cbiAqIEBwYXJhbSBwcm9kdWN0IC0gUHJvZHVjdG9cbiAqIEByZXR1cm5zIHN0cmluZyAtIFVSTCBkZSBsYSBpbWFnZW5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldE1haW5JbWFnZShwcm9kdWN0OiBQcm9kdWN0IHwgUHJvZHVjdFdpdGhDYXRlZ29yeSk6IHN0cmluZyB7XG4gIGlmICgnaW1ncycgaW4gcHJvZHVjdCAmJiBwcm9kdWN0LmltZ3M/LnByZXZpZXdzPy5bMF0pIHtcbiAgICByZXR1cm4gcHJvZHVjdC5pbWdzLnByZXZpZXdzWzBdXG4gIH1cbiAgaWYgKCdpbWFnZXMnIGluIHByb2R1Y3QgJiYgcHJvZHVjdC5pbWFnZXM/LnByZXZpZXdzPy5bMF0pIHtcbiAgICByZXR1cm4gcHJvZHVjdC5pbWFnZXMucHJldmlld3NbMF1cbiAgfVxuICByZXR1cm4gJy9pbWFnZXMvcHJvZHVjdHMvcGxhY2Vob2xkZXIuc3ZnJ1xufVxuXG4vKipcbiAqIFZhbGlkYSB5IG9idGllbmUgdW5hIFVSTCBkZSBpbWFnZW4gdsOhbGlkYSwgbWFuZWphbmRvIGNhZGVuYXMgdmFjw61hcyB5IHVuZGVmaW5lZFxuICogQHBhcmFtIGltYWdlVXJsIC0gVVJMIGRlIGltYWdlbiBhIHZhbGlkYXJcbiAqIEBwYXJhbSBmYWxsYmFjayAtIFVSTCBkZSBmYWxsYmFjayAocG9yIGRlZmVjdG86IHBsYWNlaG9sZGVyKVxuICogQHJldHVybnMgc3RyaW5nIC0gVVJMIGRlIGltYWdlbiB2w6FsaWRhXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRWYWxpZEltYWdlVXJsKFxuICBpbWFnZVVybDogc3RyaW5nIHwgdW5kZWZpbmVkIHwgbnVsbCxcbiAgZmFsbGJhY2s6IHN0cmluZyA9ICcvaW1hZ2VzL3Byb2R1Y3RzL3BsYWNlaG9sZGVyLnN2Zydcbik6IHN0cmluZyB7XG4gIC8vIFZlcmlmaWNhciBzaSBsYSBpbWFnZW4gZXhpc3RlIHkgbm8gZXMgdW5hIGNhZGVuYSB2YWPDrWEgbyBzb2xvIGVzcGFjaW9zXG4gIGlmIChpbWFnZVVybCAmJiB0eXBlb2YgaW1hZ2VVcmwgPT09ICdzdHJpbmcnICYmIGltYWdlVXJsLnRyaW0oKSAhPT0gJycpIHtcbiAgICByZXR1cm4gaW1hZ2VVcmwudHJpbSgpXG4gIH1cbiAgcmV0dXJuIGZhbGxiYWNrXG59XG5cbi8qKlxuICogT2J0aWVuZSBsYSBpbWFnZW4gdGh1bWJuYWlsIGRlbCBwcm9kdWN0byBjb24gdmFsaWRhY2nDs24gcm9idXN0YVxuICogQHBhcmFtIHByb2R1Y3QgLSBQcm9kdWN0b1xuICogQHJldHVybnMgc3RyaW5nIC0gVVJMIGRlIGxhIGltYWdlbiB0aHVtYm5haWwgdsOhbGlkYVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0VGh1bWJuYWlsSW1hZ2UocHJvZHVjdDogUHJvZHVjdCB8IFByb2R1Y3RXaXRoQ2F0ZWdvcnkpOiBzdHJpbmcge1xuICBsZXQgaW1hZ2VVcmw6IHN0cmluZyB8IHVuZGVmaW5lZFxuXG4gIGlmICgnaW1ncycgaW4gcHJvZHVjdCAmJiBwcm9kdWN0LmltZ3M/LnRodW1ibmFpbHM/LlswXSkge1xuICAgIGltYWdlVXJsID0gcHJvZHVjdC5pbWdzLnRodW1ibmFpbHNbMF1cbiAgfSBlbHNlIGlmICgnaW1hZ2VzJyBpbiBwcm9kdWN0ICYmIHByb2R1Y3QuaW1hZ2VzPy50aHVtYm5haWxzPy5bMF0pIHtcbiAgICBpbWFnZVVybCA9IHByb2R1Y3QuaW1hZ2VzLnRodW1ibmFpbHNbMF1cbiAgfVxuXG4gIHJldHVybiBnZXRWYWxpZEltYWdlVXJsKGltYWdlVXJsKVxufVxuXG4vKipcbiAqIE9idGllbmUgbGEgaW1hZ2VuIHByZXZpZXcgZGVsIHByb2R1Y3RvIGNvbiB2YWxpZGFjacOzbiByb2J1c3RhXG4gKiBAcGFyYW0gcHJvZHVjdCAtIFByb2R1Y3RvXG4gKiBAcmV0dXJucyBzdHJpbmcgLSBVUkwgZGUgbGEgaW1hZ2VuIHByZXZpZXcgdsOhbGlkYVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0UHJldmlld0ltYWdlKHByb2R1Y3Q6IFByb2R1Y3QgfCBQcm9kdWN0V2l0aENhdGVnb3J5KTogc3RyaW5nIHtcbiAgbGV0IGltYWdlVXJsOiBzdHJpbmcgfCB1bmRlZmluZWRcblxuICBpZiAoJ2ltZ3MnIGluIHByb2R1Y3QgJiYgcHJvZHVjdC5pbWdzPy5wcmV2aWV3cz8uWzBdKSB7XG4gICAgaW1hZ2VVcmwgPSBwcm9kdWN0LmltZ3MucHJldmlld3NbMF1cbiAgfSBlbHNlIGlmICgnaW1hZ2VzJyBpbiBwcm9kdWN0ICYmIHByb2R1Y3QuaW1hZ2VzPy5wcmV2aWV3cz8uWzBdKSB7XG4gICAgaW1hZ2VVcmwgPSBwcm9kdWN0LmltYWdlcy5wcmV2aWV3c1swXVxuICB9XG5cbiAgcmV0dXJuIGdldFZhbGlkSW1hZ2VVcmwoaW1hZ2VVcmwpXG59XG5cbi8qKlxuICogRm9ybWF0ZWEgZWwgcHJlY2lvIHBhcmEgbW9zdHJhciBlbiBwZXNvcyBhcmdlbnRpbm9zXG4gKiBAcGFyYW0gcHJpY2UgLSBQcmVjaW9cbiAqIEByZXR1cm5zIHN0cmluZyAtIFByZWNpbyBmb3JtYXRlYWRvXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRQcmljZShwcmljZTogbnVtYmVyKTogc3RyaW5nIHtcbiAgcmV0dXJuIG5ldyBJbnRsLk51bWJlckZvcm1hdCgnZXMtQVInLCB7XG4gICAgc3R5bGU6ICdjdXJyZW5jeScsXG4gICAgY3VycmVuY3k6ICdBUlMnLFxuICAgIG1pbmltdW1GcmFjdGlvbkRpZ2l0czogMCxcbiAgICBtYXhpbXVtRnJhY3Rpb25EaWdpdHM6IDAsXG4gIH0pLmZvcm1hdChwcmljZSlcbn1cblxuLyoqXG4gKiBHZW5lcmEgdW4gc2x1ZyBhIHBhcnRpciBkZWwgbm9tYnJlIGRlbCBwcm9kdWN0b1xuICogQHBhcmFtIG5hbWUgLSBOb21icmUgZGVsIHByb2R1Y3RvXG4gKiBAcmV0dXJucyBzdHJpbmcgLSBTbHVnXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZVNsdWcobmFtZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgcmV0dXJuIG5hbWVcbiAgICAudG9Mb3dlckNhc2UoKVxuICAgIC5ub3JtYWxpemUoJ05GRCcpXG4gICAgLnJlcGxhY2UoL1tcXHUwMzAwLVxcdTAzNmZdL2csICcnKSAvLyBSZW1vdmVyIGFjZW50b3NcbiAgICAucmVwbGFjZSgvW15hLXowLTlcXHMtXS9nLCAnJykgLy8gUmVtb3ZlciBjYXJhY3RlcmVzIGVzcGVjaWFsZXNcbiAgICAucmVwbGFjZSgvXFxzKy9nLCAnLScpIC8vIFJlZW1wbGF6YXIgZXNwYWNpb3MgY29uIGd1aW9uZXNcbiAgICAucmVwbGFjZSgvLSsvZywgJy0nKSAvLyBSZW1vdmVyIGd1aW9uZXMgbcO6bHRpcGxlc1xuICAgIC5yZXBsYWNlKC9eLXwtJC9nLCAnJykgLy8gUmVtb3ZlciBndWlvbmVzIGFsIGluaWNpbyB5IGZpbmFsXG59XG4iXSwibmFtZXMiOlsiYWRhcHRBcGlQcm9kdWN0VG9Db21wb25lbnQiLCJhZGFwdEFwaVByb2R1Y3RzVG9Db21wb25lbnRzIiwiYWRhcHRDb21wb25lbnRQcm9kdWN0VG9BcGkiLCJmb3JtYXRQcmljZSIsImdlbmVyYXRlU2x1ZyIsImdldERpc2NvdW50UGVyY2VudGFnZSIsImdldEZpbmFsUHJpY2UiLCJnZXRNYWluSW1hZ2UiLCJnZXRQcmV2aWV3SW1hZ2UiLCJnZXRUaHVtYm5haWxJbWFnZSIsImdldFZhbGlkSW1hZ2VVcmwiLCJoYXNEaXNjb3VudCIsImFwaVByb2R1Y3QiLCJpbWFnZXMiLCJpZCIsInRpdGxlIiwibmFtZSIsImJyYW5kIiwicmV2aWV3cyIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsInByaWNlIiwiZGlzY291bnRlZFByaWNlIiwiZGlzY291bnRlZF9wcmljZSIsInVuZGVmaW5lZCIsImltZ3MiLCJ0aHVtYm5haWxzIiwidGh1bWJuYWlsIiwicHJldmlld3MiLCJtYWluIiwiZ2FsbGVyeSIsImFwaVByb2R1Y3RzIiwibWFwIiwiY29tcG9uZW50UHJvZHVjdCIsInN0b2NrIiwicHJvZHVjdCIsIm9yaWdpbmFsUHJpY2UiLCJyb3VuZCIsImltYWdlVXJsIiwiZmFsbGJhY2siLCJ0cmltIiwiSW50bCIsIk51bWJlckZvcm1hdCIsInN0eWxlIiwiY3VycmVuY3kiLCJtaW5pbXVtRnJhY3Rpb25EaWdpdHMiLCJtYXhpbXVtRnJhY3Rpb25EaWdpdHMiLCJmb3JtYXQiLCJ0b0xvd2Vy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