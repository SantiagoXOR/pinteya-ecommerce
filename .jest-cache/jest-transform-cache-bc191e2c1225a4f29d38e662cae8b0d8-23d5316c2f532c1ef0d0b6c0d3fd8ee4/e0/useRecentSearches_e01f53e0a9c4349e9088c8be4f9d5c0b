a7d9a569cb32788646ebba0acb437e69
// ===================================
// HOOK: useRecentSearches - GestiÃ³n de bÃºsquedas recientes con localStorage
// ===================================
"use strict";

/* istanbul ignore next */
function cov_23g4pzs8qr() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useRecentSearches.ts";
  var hash = "e58f21a870e61d16ad001039f741a14840df93d5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useRecentSearches.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 33
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 39
        }
      },
      "7": {
        start: {
          line: 25,
          column: 15
        },
        end: {
          line: 25,
          column: 31
        }
      },
      "8": {
        start: {
          line: 26,
          column: 19
        },
        end: {
          line: 26,
          column: 47
        }
      },
      "9": {
        start: {
          line: 27,
          column: 24
        },
        end: {
          line: 33,
          column: 1
        }
      },
      "10": {
        start: {
          line: 35,
          column: 19
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "11": {
        start: {
          line: 39,
          column: 48
        },
        end: {
          line: 39,
          column: 72
        }
      },
      "12": {
        start: {
          line: 41,
          column: 27
        },
        end: {
          line: 43,
          column: 10
        }
      },
      "13": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 43
        }
      },
      "14": {
        start: {
          line: 45,
          column: 22
        },
        end: {
          line: 53,
          column: 6
        }
      },
      "15": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "16": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 25
        }
      },
      "17": {
        start: {
          line: 49,
          column: 23
        },
        end: {
          line: 49,
          column: 66
        }
      },
      "18": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 47
        }
      },
      "19": {
        start: {
          line: 55,
          column: 28
        },
        end: {
          line: 90,
          column: 6
        }
      },
      "20": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "21": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 22
        }
      },
      "22": {
        start: {
          line: 60,
          column: 23
        },
        end: {
          line: 60,
          column: 77
        }
      },
      "23": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "24": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 22
        }
      },
      "25": {
        start: {
          line: 64,
          column: 21
        },
        end: {
          line: 64,
          column: 32
        }
      },
      "26": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "27": {
        start: {
          line: 67,
          column: 34
        },
        end: {
          line: 67,
          column: 38
        }
      },
      "28": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 77,
          column: 13
        }
      },
      "29": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 75,
          column: 19
        }
      },
      "30": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 26
        }
      },
      "31": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 71
        }
      },
      "32": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "33": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 53
        }
      },
      "34": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 18
        }
      },
      "35": {
        start: {
          line: 92,
          column: 26
        },
        end: {
          line: 114,
          column: 6
        }
      },
      "36": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "37": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 19
        }
      },
      "38": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "39": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 100,
          column: 13
        }
      },
      "40": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 98,
          column: 59
        }
      },
      "41": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 99,
          column: 23
        }
      },
      "42": {
        start: {
          line: 101,
          column: 32
        },
        end: {
          line: 105,
          column: 13
        }
      },
      "43": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 81
        }
      },
      "44": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 81
        }
      },
      "45": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 121,
          column: 7
        }
      },
      "46": {
        start: {
          line: 117,
          column: 23
        },
        end: {
          line: 117,
          column: 40
        }
      },
      "47": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 34
        }
      },
      "48": {
        start: {
          line: 123,
          column: 22
        },
        end: {
          line: 149,
          column: 6
        }
      },
      "49": {
        start: {
          line: 124,
          column: 26
        },
        end: {
          line: 124,
          column: 48
        }
      },
      "50": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "51": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 19
        }
      },
      "52": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 143,
          column: 11
        }
      },
      "53": {
        start: {
          line: 129,
          column: 26
        },
        end: {
          line: 131,
          column: 13
        }
      },
      "54": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 135,
          column: 13
        }
      },
      "55": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 79
        }
      },
      "56": {
        start: {
          line: 134,
          column: 46
        },
        end: {
          line: 134,
          column: 77
        }
      },
      "57": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 43
        }
      },
      "58": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 59
        }
      },
      "59": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 35
        }
      },
      "60": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 27
        }
      },
      "61": {
        start: {
          line: 151,
          column: 25
        },
        end: {
          line: 161,
          column: 6
        }
      },
      "62": {
        start: {
          line: 152,
          column: 26
        },
        end: {
          line: 152,
          column: 48
        }
      },
      "63": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 157,
          column: 11
        }
      },
      "64": {
        start: {
          line: 154,
          column: 28
        },
        end: {
          line: 154,
          column: 77
        }
      },
      "65": {
        start: {
          line: 154,
          column: 45
        },
        end: {
          line: 154,
          column: 76
        }
      },
      "66": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 35
        }
      },
      "67": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 27
        }
      },
      "68": {
        start: {
          line: 163,
          column: 26
        },
        end: {
          line: 168,
          column: 6
        }
      },
      "69": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 30
        }
      },
      "70": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 26
        }
      },
      "71": {
        start: {
          line: 170,
          column: 22
        },
        end: {
          line: 176,
          column: 6
        }
      },
      "72": {
        start: {
          line: 171,
          column: 26
        },
        end: {
          line: 171,
          column: 48
        }
      },
      "73": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 73
        }
      },
      "74": {
        start: {
          line: 172,
          column: 40
        },
        end: {
          line: 172,
          column: 71
        }
      },
      "75": {
        start: {
          line: 178,
          column: 30
        },
        end: {
          line: 184,
          column: 6
        }
      },
      "76": {
        start: {
          line: 179,
          column: 28
        },
        end: {
          line: 179,
          column: 55
        }
      },
      "77": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 52
        }
      },
      "78": {
        start: {
          line: 186,
          column: 22
        },
        end: {
          line: 204,
          column: 6
        }
      },
      "79": {
        start: {
          line: 187,
          column: 26
        },
        end: {
          line: 187,
          column: 48
        }
      },
      "80": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 200,
          column: 11
        }
      },
      "81": {
        start: {
          line: 189,
          column: 29
        },
        end: {
          line: 189,
          column: 78
        }
      },
      "82": {
        start: {
          line: 189,
          column: 46
        },
        end: {
          line: 189,
          column: 77
        }
      },
      "83": {
        start: {
          line: 190,
          column: 29
        },
        end: {
          line: 190,
          column: 76
        }
      },
      "84": {
        start: {
          line: 190,
          column: 44
        },
        end: {
          line: 190,
          column: 75
        }
      },
      "85": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 193,
          column: 13
        }
      },
      "86": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 28
        }
      },
      "87": {
        start: {
          line: 194,
          column: 28
        },
        end: {
          line: 197,
          column: 13
        }
      },
      "88": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 35
        }
      },
      "89": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 27
        }
      },
      "90": {
        start: {
          line: 205,
          column: 4
        },
        end: {
          line: 213,
          column: 6
        }
      },
      "91": {
        start: {
          line: 216,
          column: 34
        },
        end: {
          line: 218,
          column: 6
        }
      },
      "92": {
        start: {
          line: 219,
          column: 4
        },
        end: {
          line: 219,
          column: 31
        }
      },
      "93": {
        start: {
          line: 221,
          column: 17
        },
        end: {
          line: 221,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 19
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 29
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 35
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "useRecentSearches",
        decl: {
          start: {
            line: 34,
            column: 9
          },
          end: {
            line: 34,
            column: 26
          }
        },
        loc: {
          start: {
            line: 34,
            column: 41
          },
          end: {
            line: 214,
            column: 1
          }
        },
        line: 34
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 41,
            column: 51
          },
          end: {
            line: 41,
            column: 52
          }
        },
        loc: {
          start: {
            line: 41,
            column: 61
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 41
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 45,
            column: 46
          },
          end: {
            line: 45,
            column: 47
          }
        },
        loc: {
          start: {
            line: 45,
            column: 59
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 45
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 55,
            column: 52
          },
          end: {
            line: 55,
            column: 53
          }
        },
        loc: {
          start: {
            line: 55,
            column: 56
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 55
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 92,
            column: 50
          },
          end: {
            line: 92,
            column: 51
          }
        },
        loc: {
          start: {
            line: 92,
            column: 62
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 92
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 116,
            column: 26
          },
          end: {
            line: 116,
            column: 27
          }
        },
        loc: {
          start: {
            line: 116,
            column: 30
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 116
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 123,
            column: 46
          },
          end: {
            line: 123,
            column: 47
          }
        },
        loc: {
          start: {
            line: 123,
            column: 56
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 123
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 128,
            column: 26
          },
          end: {
            line: 128,
            column: 27
          }
        },
        loc: {
          start: {
            line: 128,
            column: 34
          },
          end: {
            line: 143,
            column: 9
          }
        },
        line: 128
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 134,
            column: 41
          },
          end: {
            line: 134,
            column: 42
          }
        },
        loc: {
          start: {
            line: 134,
            column: 46
          },
          end: {
            line: 134,
            column: 77
          }
        },
        line: 134
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 151,
            column: 49
          },
          end: {
            line: 151,
            column: 50
          }
        },
        loc: {
          start: {
            line: 151,
            column: 59
          },
          end: {
            line: 158,
            column: 5
          }
        },
        line: 151
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 153,
            column: 26
          },
          end: {
            line: 153,
            column: 27
          }
        },
        loc: {
          start: {
            line: 153,
            column: 34
          },
          end: {
            line: 157,
            column: 9
          }
        },
        line: 153
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 154,
            column: 40
          },
          end: {
            line: 154,
            column: 41
          }
        },
        loc: {
          start: {
            line: 154,
            column: 45
          },
          end: {
            line: 154,
            column: 76
          }
        },
        line: 154
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 163,
            column: 50
          },
          end: {
            line: 163,
            column: 51
          }
        },
        loc: {
          start: {
            line: 163,
            column: 54
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 163
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 170,
            column: 46
          },
          end: {
            line: 170,
            column: 47
          }
        },
        loc: {
          start: {
            line: 170,
            column: 56
          },
          end: {
            line: 173,
            column: 5
          }
        },
        line: 170
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 172,
            column: 35
          },
          end: {
            line: 172,
            column: 36
          }
        },
        loc: {
          start: {
            line: 172,
            column: 40
          },
          end: {
            line: 172,
            column: 71
          }
        },
        line: 172
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 178,
            column: 54
          },
          end: {
            line: 178,
            column: 55
          }
        },
        loc: {
          start: {
            line: 178,
            column: 63
          },
          end: {
            line: 181,
            column: 5
          }
        },
        line: 178
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 186,
            column: 46
          },
          end: {
            line: 186,
            column: 47
          }
        },
        loc: {
          start: {
            line: 186,
            column: 56
          },
          end: {
            line: 201,
            column: 5
          }
        },
        line: 186
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 188,
            column: 26
          },
          end: {
            line: 188,
            column: 27
          }
        },
        loc: {
          start: {
            line: 188,
            column: 34
          },
          end: {
            line: 200,
            column: 9
          }
        },
        line: 188
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 189,
            column: 41
          },
          end: {
            line: 189,
            column: 42
          }
        },
        loc: {
          start: {
            line: 189,
            column: 46
          },
          end: {
            line: 189,
            column: 77
          }
        },
        line: 189
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 190,
            column: 39
          },
          end: {
            line: 190,
            column: 40
          }
        },
        loc: {
          start: {
            line: 190,
            column: 44
          },
          end: {
            line: 190,
            column: 75
          }
        },
        line: 190
      },
      "24": {
        name: "useRecentSearchesSimple",
        decl: {
          start: {
            line: 215,
            column: 9
          },
          end: {
            line: 215,
            column: 32
          }
        },
        loc: {
          start: {
            line: 215,
            column: 44
          },
          end: {
            line: 220,
            column: 1
          }
        },
        line: 215
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 34,
            column: 27
          },
          end: {
            line: 34,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 34,
            column: 37
          },
          end: {
            line: 34,
            column: 39
          }
        }],
        line: 34
      },
      "1": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "2": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "3": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "4": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "5": {
        loc: {
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 66,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 66,
            column: 16
          }
        }, {
          start: {
            line: 66,
            column: 20
          },
          end: {
            line: 66,
            column: 44
          }
        }, {
          start: {
            line: 66,
            column: 48
          },
          end: {
            line: 66,
            column: 66
          }
        }, {
          start: {
            line: 66,
            column: 70
          },
          end: {
            line: 66,
            column: 98
          }
        }],
        line: 66
      },
      "6": {
        loc: {
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "7": {
        loc: {
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 69,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 69,
            column: 39
          }
        }, {
          start: {
            line: 69,
            column: 43
          },
          end: {
            line: 69,
            column: 77
          }
        }],
        line: 69
      },
      "8": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "9": {
        loc: {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "10": {
        loc: {
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 93,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 93,
            column: 37
          }
        }, {
          start: {
            line: 93,
            column: 41
          },
          end: {
            line: 93,
            column: 70
          }
        }],
        line: 93
      },
      "11": {
        loc: {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "12": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "13": {
        loc: {
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 125,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 125,
            column: 22
          }
        }, {
          start: {
            line: 125,
            column: 26
          },
          end: {
            line: 125,
            column: 46
          }
        }],
        line: 125
      },
      "14": {
        loc: {
          start: {
            line: 133,
            column: 12
          },
          end: {
            line: 135,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 12
          },
          end: {
            line: 135,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "15": {
        loc: {
          start: {
            line: 179,
            column: 28
          },
          end: {
            line: 179,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 28
          },
          end: {
            line: 179,
            column: 33
          }
        }, {
          start: {
            line: 179,
            column: 37
          },
          end: {
            line: 179,
            column: 55
          }
        }],
        line: 179
      },
      "16": {
        loc: {
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "17": {
        loc: {
          start: {
            line: 215,
            column: 33
          },
          end: {
            line: 215,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 215,
            column: 41
          },
          end: {
            line: 215,
            column: 42
          }
        }],
        line: 215
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useRecentSearches.ts"],
      sourcesContent: ["// ===================================\r\n// HOOK: useRecentSearches - Gesti\xF3n de b\xFAsquedas recientes con localStorage\r\n// ===================================\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { safeLocalStorageGet, safeLocalStorageSet, STORAGE_KEYS } from '@/lib/json-utils';\r\n\r\nexport interface RecentSearchesOptions {\r\n  /** N\xFAmero m\xE1ximo de b\xFAsquedas recientes a mantener */\r\n  maxSearches?: number;\r\n  /** Clave de localStorage para persistir las b\xFAsquedas */\r\n  storageKey?: string;\r\n  /** Habilitar/deshabilitar persistencia en localStorage */\r\n  enablePersistence?: boolean;\r\n  /** Filtrar b\xFAsquedas duplicadas */\r\n  filterDuplicates?: boolean;\r\n  /** Tiempo de expiraci\xF3n en d\xEDas (0 = sin expiraci\xF3n) */\r\n  expirationDays?: number;\r\n}\r\n\r\nexport interface RecentSearchesReturn {\r\n  /** Array de b\xFAsquedas recientes */\r\n  recentSearches: string[];\r\n  /** Agregar una nueva b\xFAsqueda */\r\n  addSearch: (search: string) => void;\r\n  /** Remover una b\xFAsqueda espec\xEDfica */\r\n  removeSearch: (search: string) => void;\r\n  /** Limpiar todas las b\xFAsquedas */\r\n  clearSearches: () => void;\r\n  /** Verificar si una b\xFAsqueda existe */\r\n  hasSearch: (search: string) => boolean;\r\n  /** Obtener las N b\xFAsquedas m\xE1s recientes */\r\n  getRecentSearches: (limit?: number) => string[];\r\n  /** Reordenar b\xFAsquedas (mover al principio) */\r\n  moveToTop: (search: string) => void;\r\n}\r\n\r\ninterface PersistedSearchData {\r\n  searches: string[];\r\n  timestamp: number;\r\n  version: string;\r\n}\r\n\r\nconst DEFAULT_OPTIONS: Required<RecentSearchesOptions> = {\r\n  maxSearches: 5,\r\n  storageKey: 'pinteya-recent-searches',\r\n  enablePersistence: true,\r\n  filterDuplicates: true,\r\n  expirationDays: 30, // 30 d\xEDas de expiraci\xF3n\r\n};\r\n\r\n/**\r\n * Hook para gestionar b\xFAsquedas recientes con persistencia en localStorage\r\n * \r\n * Caracter\xEDsticas:\r\n * - Persistencia autom\xE1tica en localStorage\r\n * - L\xEDmite configurable de b\xFAsquedas\r\n * - Filtrado de duplicados\r\n * - Expiraci\xF3n autom\xE1tica\r\n * - Manejo de errores robusto\r\n */\r\nexport function useRecentSearches(options: RecentSearchesOptions = {}): RecentSearchesReturn {\r\n  const config = { ...DEFAULT_OPTIONS, ...options };\r\n  const [recentSearches, setRecentSearches] = useState<string[]>([]);\r\n\r\n  // Funci\xF3n para validar y limpiar una b\xFAsqueda\r\n  const sanitizeSearch = useCallback((search: string): string => {\r\n    return search.trim().toLowerCase();\r\n  }, []);\r\n\r\n  // Funci\xF3n para verificar si los datos han expirado\r\n  const isExpired = useCallback((timestamp: number): boolean => {\r\n    if (config.expirationDays === 0) {return false;}\r\n    const maxAge = config.expirationDays * 24 * 60 * 60 * 1000;\r\n    return Date.now() - timestamp > maxAge;\r\n  }, [config.expirationDays]);\r\n\r\n  // Cargar b\xFAsquedas desde localStorage\r\n  const loadFromStorage = useCallback((): string[] => {\r\n    if (!config.enablePersistence) {\r\n      return [];\r\n    }\r\n\r\n    // Usar utilidad segura para cargar desde localStorage\r\n    const result = safeLocalStorageGet<PersistedSearchData | string[]>(config.storageKey);\r\n\r\n    if (!result.success) {\r\n      return [];\r\n    }\r\n\r\n    const data = result.data;\r\n\r\n    // Verificar si es formato nuevo (con metadata)\r\n    if (data && typeof data === 'object' && 'searches' in data && Array.isArray(data.searches)) {\r\n      const persistedData = data as PersistedSearchData;\r\n\r\n      // Verificar expiraci\xF3n\r\n      if (persistedData.timestamp && isExpired(persistedData.timestamp)) {\r\n        // Limpiar datos expirados usando utilidad segura\r\n        safeLocalStorageSet(config.storageKey, {\r\n          searches: [],\r\n          timestamp: Date.now(),\r\n          version: '1.0'\r\n        });\r\n        return [];\r\n      }\r\n\r\n      return persistedData.searches.slice(0, config.maxSearches);\r\n    }\r\n\r\n    // Formato antiguo (array simple)\r\n    if (Array.isArray(data)) {\r\n      return data.slice(0, config.maxSearches);\r\n    }\r\n\r\n    return [];\r\n  }, [config.enablePersistence, config.storageKey, config.maxSearches, isExpired]);\r\n\r\n  // Guardar b\xFAsquedas en localStorage\r\n  const saveToStorage = useCallback((searches: string[]): void => {\r\n    if (!config.enablePersistence || typeof window === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (searches.length === 0) {\r\n        localStorage.removeItem(config.storageKey);\r\n        return;\r\n      }\r\n\r\n      const dataToStore: PersistedSearchData = {\r\n        searches: searches.slice(0, config.maxSearches),\r\n        timestamp: Date.now(),\r\n        version: '1.0.0'\r\n      };\r\n\r\n      localStorage.setItem(config.storageKey, JSON.stringify(dataToStore));\r\n    } catch (error) {\r\n      console.warn('Error saving recent searches to localStorage:', error);\r\n    }\r\n  }, [config.enablePersistence, config.storageKey, config.maxSearches]);\r\n\r\n  // Cargar b\xFAsquedas al inicializar\r\n  useEffect(() => {\r\n    const loaded = loadFromStorage();\r\n    setRecentSearches(loaded);\r\n  }, [loadFromStorage]);\r\n\r\n  // Agregar una nueva b\xFAsqueda\r\n  const addSearch = useCallback((search: string): void => {\r\n    const sanitized = sanitizeSearch(search);\r\n    if (!sanitized || sanitized.length < 2) {return;}\r\n\r\n    setRecentSearches(prev => {\r\n      let updated = [...prev];\r\n\r\n      // Remover duplicados si est\xE1 habilitado\r\n      if (config.filterDuplicates) {\r\n        updated = updated.filter(s => sanitizeSearch(s) !== sanitized);\r\n      }\r\n\r\n      // Agregar al principio\r\n      updated.unshift(search.trim());\r\n\r\n      // Limitar al m\xE1ximo configurado\r\n      updated = updated.slice(0, config.maxSearches);\r\n\r\n      // Guardar en localStorage\r\n      saveToStorage(updated);\r\n\r\n      return updated;\r\n    });\r\n  }, [sanitizeSearch, config.filterDuplicates, config.maxSearches, saveToStorage]);\r\n\r\n  // Remover una b\xFAsqueda espec\xEDfica\r\n  const removeSearch = useCallback((search: string): void => {\r\n    const sanitized = sanitizeSearch(search);\r\n    \r\n    setRecentSearches(prev => {\r\n      const updated = prev.filter(s => sanitizeSearch(s) !== sanitized);\r\n      saveToStorage(updated);\r\n      return updated;\r\n    });\r\n  }, [sanitizeSearch, saveToStorage]);\r\n\r\n  // Limpiar todas las b\xFAsquedas\r\n  const clearSearches = useCallback((): void => {\r\n    setRecentSearches([]);\r\n    saveToStorage([]);\r\n  }, [saveToStorage]);\r\n\r\n  // Verificar si una b\xFAsqueda existe\r\n  const hasSearch = useCallback((search: string): boolean => {\r\n    const sanitized = sanitizeSearch(search);\r\n    return recentSearches.some(s => sanitizeSearch(s) === sanitized);\r\n  }, [recentSearches, sanitizeSearch]);\r\n\r\n  // Obtener las N b\xFAsquedas m\xE1s recientes\r\n  const getRecentSearches = useCallback((limit?: number): string[] => {\r\n    const actualLimit = limit ?? config.maxSearches;\r\n    return recentSearches.slice(0, actualLimit);\r\n  }, [recentSearches, config.maxSearches]);\r\n\r\n  // Mover una b\xFAsqueda al principio (reordenar)\r\n  const moveToTop = useCallback((search: string): void => {\r\n    const sanitized = sanitizeSearch(search);\r\n    \r\n    setRecentSearches(prev => {\r\n      const filtered = prev.filter(s => sanitizeSearch(s) !== sanitized);\r\n      const existing = prev.find(s => sanitizeSearch(s) === sanitized);\r\n      \r\n      if (!existing) {return prev;}\r\n      \r\n      const updated = [existing, ...filtered];\r\n      saveToStorage(updated);\r\n      return updated;\r\n    });\r\n  }, [sanitizeSearch, saveToStorage]);\r\n\r\n  return {\r\n    recentSearches,\r\n    addSearch,\r\n    removeSearch,\r\n    clearSearches,\r\n    hasSearch,\r\n    getRecentSearches,\r\n    moveToTop,\r\n  };\r\n}\r\n\r\n/**\r\n * Hook simplificado para solo obtener b\xFAsquedas recientes\r\n */\r\nexport function useRecentSearchesSimple(limit: number = 5): string[] {\r\n  const { getRecentSearches } = useRecentSearches({ maxSearches: limit });\r\n  return getRecentSearches();\r\n}\r\n\r\nexport default useRecentSearches;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useRecentSearches", "useRecentSearchesSimple", "DEFAULT_OPTIONS", "maxSearches", "storageKey", "enablePersistence", "filterDuplicates", "expirationDays", "options", "config", "recentSearches", "setRecentSearches", "useState", "sanitizeSearch", "useCallback", "search", "trim", "toLowerCase", "isExpired", "timestamp", "maxAge", "Date", "now", "loadFromStorage", "result", "safeLocalStorageGet", "success", "data", "Array", "isArray", "searches", "persistedData", "safeLocalStorageSet", "version", "slice", "saveToStorage", "window", "length", "localStorage", "removeItem", "dataToStore", "setItem", "JSON", "stringify", "error", "console", "warn", "useEffect", "loaded", "addSearch", "sanitized", "prev", "updated", "filter", "s", "unshift", "removeSearch", "clearSearches", "hasSearch", "some", "getRecentSearches", "limit", "actualLimit", "moveToTop", "filtered", "existing", "find"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e58f21a870e61d16ad001039f741a14840df93d5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_23g4pzs8qr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_23g4pzs8qr();
cov_23g4pzs8qr().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_23g4pzs8qr().f[0]++;
  cov_23g4pzs8qr().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_23g4pzs8qr().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_23g4pzs8qr().s[3]++;
_export(exports, {
  get default() {
    /* istanbul ignore next */
    cov_23g4pzs8qr().f[1]++;
    cov_23g4pzs8qr().s[4]++;
    return _default;
  },
  get useRecentSearches() {
    /* istanbul ignore next */
    cov_23g4pzs8qr().f[2]++;
    cov_23g4pzs8qr().s[5]++;
    return useRecentSearches;
  },
  get useRecentSearchesSimple() {
    /* istanbul ignore next */
    cov_23g4pzs8qr().f[3]++;
    cov_23g4pzs8qr().s[6]++;
    return useRecentSearchesSimple;
  }
});
const _react =
/* istanbul ignore next */
(cov_23g4pzs8qr().s[7]++, require("react"));
const _jsonutils =
/* istanbul ignore next */
(cov_23g4pzs8qr().s[8]++, require("../lib/json-utils"));
const DEFAULT_OPTIONS =
/* istanbul ignore next */
(cov_23g4pzs8qr().s[9]++, {
  maxSearches: 5,
  storageKey: 'pinteya-recent-searches',
  enablePersistence: true,
  filterDuplicates: true,
  expirationDays: 30
});
function useRecentSearches(options =
/* istanbul ignore next */
(cov_23g4pzs8qr().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_23g4pzs8qr().f[4]++;
  const config =
  /* istanbul ignore next */
  (cov_23g4pzs8qr().s[10]++, {
    ...DEFAULT_OPTIONS,
    ...options
  });
  const [recentSearches, setRecentSearches] =
  /* istanbul ignore next */
  (cov_23g4pzs8qr().s[11]++, (0, _react.useState)([]));
  // FunciÃ³n para validar y limpiar una bÃºsqueda
  const sanitizeSearch =
  /* istanbul ignore next */
  (cov_23g4pzs8qr().s[12]++, (0, _react.useCallback)(search => {
    /* istanbul ignore next */
    cov_23g4pzs8qr().f[5]++;
    cov_23g4pzs8qr().s[13]++;
    return search.trim().toLowerCase();
  }, []));
  // FunciÃ³n para verificar si los datos han expirado
  const isExpired =
  /* istanbul ignore next */
  (cov_23g4pzs8qr().s[14]++, (0, _react.useCallback)(timestamp => {
    /* istanbul ignore next */
    cov_23g4pzs8qr().f[6]++;
    cov_23g4pzs8qr().s[15]++;
    if (config.expirationDays === 0) {
      /* istanbul ignore next */
      cov_23g4pzs8qr().b[1][0]++;
      cov_23g4pzs8qr().s[16]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_23g4pzs8qr().b[1][1]++;
    }
    const maxAge =
    /* istanbul ignore next */
    (cov_23g4pzs8qr().s[17]++, config.expirationDays * 24 * 60 * 60 * 1000);
    /* istanbul ignore next */
    cov_23g4pzs8qr().s[18]++;
    return Date.now() - timestamp > maxAge;
  }, [config.expirationDays]));
  // Cargar bÃºsquedas desde localStorage
  const loadFromStorage =
  /* istanbul ignore next */
  (cov_23g4pzs8qr().s[19]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_23g4pzs8qr().f[7]++;
    cov_23g4pzs8qr().s[20]++;
    if (!config.enablePersistence) {
      /* istanbul ignore next */
      cov_23g4pzs8qr().b[2][0]++;
      cov_23g4pzs8qr().s[21]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_23g4pzs8qr().b[2][1]++;
    }
    // Usar utilidad segura para cargar desde localStorage
    const result =
    /* istanbul ignore next */
    (cov_23g4pzs8qr().s[22]++, (0, _jsonutils.safeLocalStorageGet)(config.storageKey));
    /* istanbul ignore next */
    cov_23g4pzs8qr().s[23]++;
    if (!result.success) {
      /* istanbul ignore next */
      cov_23g4pzs8qr().b[3][0]++;
      cov_23g4pzs8qr().s[24]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_23g4pzs8qr().b[3][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_23g4pzs8qr().s[25]++, result.data);
    // Verificar si es formato nuevo (con metadata)
    /* istanbul ignore next */
    cov_23g4pzs8qr().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_23g4pzs8qr().b[5][0]++, data) &&
    /* istanbul ignore next */
    (cov_23g4pzs8qr().b[5][1]++, typeof data === 'object') &&
    /* istanbul ignore next */
    (cov_23g4pzs8qr().b[5][2]++, 'searches' in data) &&
    /* istanbul ignore next */
    (cov_23g4pzs8qr().b[5][3]++, Array.isArray(data.searches))) {
      /* istanbul ignore next */
      cov_23g4pzs8qr().b[4][0]++;
      const persistedData =
      /* istanbul ignore next */
      (cov_23g4pzs8qr().s[27]++, data);
      // Verificar expiraciÃ³n
      /* istanbul ignore next */
      cov_23g4pzs8qr().s[28]++;
      if (
      /* istanbul ignore next */
      (cov_23g4pzs8qr().b[7][0]++, persistedData.timestamp) &&
      /* istanbul ignore next */
      (cov_23g4pzs8qr().b[7][1]++, isExpired(persistedData.timestamp))) {
        /* istanbul ignore next */
        cov_23g4pzs8qr().b[6][0]++;
        cov_23g4pzs8qr().s[29]++;
        // Limpiar datos expirados usando utilidad segura
        (0, _jsonutils.safeLocalStorageSet)(config.storageKey, {
          searches: [],
          timestamp: Date.now(),
          version: '1.0'
        });
        /* istanbul ignore next */
        cov_23g4pzs8qr().s[30]++;
        return [];
      } else
      /* istanbul ignore next */
      {
        cov_23g4pzs8qr().b[6][1]++;
      }
      cov_23g4pzs8qr().s[31]++;
      return persistedData.searches.slice(0, config.maxSearches);
    } else
    /* istanbul ignore next */
    {
      cov_23g4pzs8qr().b[4][1]++;
    }
    // Formato antiguo (array simple)
    cov_23g4pzs8qr().s[32]++;
    if (Array.isArray(data)) {
      /* istanbul ignore next */
      cov_23g4pzs8qr().b[8][0]++;
      cov_23g4pzs8qr().s[33]++;
      return data.slice(0, config.maxSearches);
    } else
    /* istanbul ignore next */
    {
      cov_23g4pzs8qr().b[8][1]++;
    }
    cov_23g4pzs8qr().s[34]++;
    return [];
  }, [config.enablePersistence, config.storageKey, config.maxSearches, isExpired]));
  // Guardar bÃºsquedas en localStorage
  const saveToStorage =
  /* istanbul ignore next */
  (cov_23g4pzs8qr().s[35]++, (0, _react.useCallback)(searches => {
    /* istanbul ignore next */
    cov_23g4pzs8qr().f[8]++;
    cov_23g4pzs8qr().s[36]++;
    if (
    /* istanbul ignore next */
    (cov_23g4pzs8qr().b[10][0]++, !config.enablePersistence) ||
    /* istanbul ignore next */
    (cov_23g4pzs8qr().b[10][1]++, typeof window === 'undefined')) {
      /* istanbul ignore next */
      cov_23g4pzs8qr().b[9][0]++;
      cov_23g4pzs8qr().s[37]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_23g4pzs8qr().b[9][1]++;
    }
    cov_23g4pzs8qr().s[38]++;
    try {
      /* istanbul ignore next */
      cov_23g4pzs8qr().s[39]++;
      if (searches.length === 0) {
        /* istanbul ignore next */
        cov_23g4pzs8qr().b[11][0]++;
        cov_23g4pzs8qr().s[40]++;
        localStorage.removeItem(config.storageKey);
        /* istanbul ignore next */
        cov_23g4pzs8qr().s[41]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_23g4pzs8qr().b[11][1]++;
      }
      const dataToStore =
      /* istanbul ignore next */
      (cov_23g4pzs8qr().s[42]++, {
        searches: searches.slice(0, config.maxSearches),
        timestamp: Date.now(),
        version: '1.0.0'
      });
      /* istanbul ignore next */
      cov_23g4pzs8qr().s[43]++;
      localStorage.setItem(config.storageKey, JSON.stringify(dataToStore));
    } catch (error) {
      /* istanbul ignore next */
      cov_23g4pzs8qr().s[44]++;
      console.warn('Error saving recent searches to localStorage:', error);
    }
  }, [config.enablePersistence, config.storageKey, config.maxSearches]));
  // Cargar bÃºsquedas al inicializar
  /* istanbul ignore next */
  cov_23g4pzs8qr().s[45]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_23g4pzs8qr().f[9]++;
    const loaded =
    /* istanbul ignore next */
    (cov_23g4pzs8qr().s[46]++, loadFromStorage());
    /* istanbul ignore next */
    cov_23g4pzs8qr().s[47]++;
    setRecentSearches(loaded);
  }, [loadFromStorage]);
  // Agregar una nueva bÃºsqueda
  const addSearch =
  /* istanbul ignore next */
  (cov_23g4pzs8qr().s[48]++, (0, _react.useCallback)(search => {
    /* istanbul ignore next */
    cov_23g4pzs8qr().f[10]++;
    const sanitized =
    /* istanbul ignore next */
    (cov_23g4pzs8qr().s[49]++, sanitizeSearch(search));
    /* istanbul ignore next */
    cov_23g4pzs8qr().s[50]++;
    if (
    /* istanbul ignore next */
    (cov_23g4pzs8qr().b[13][0]++, !sanitized) ||
    /* istanbul ignore next */
    (cov_23g4pzs8qr().b[13][1]++, sanitized.length < 2)) {
      /* istanbul ignore next */
      cov_23g4pzs8qr().b[12][0]++;
      cov_23g4pzs8qr().s[51]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_23g4pzs8qr().b[12][1]++;
    }
    cov_23g4pzs8qr().s[52]++;
    setRecentSearches(prev => {
      /* istanbul ignore next */
      cov_23g4pzs8qr().f[11]++;
      let updated =
      /* istanbul ignore next */
      (cov_23g4pzs8qr().s[53]++, [...prev]);
      // Remover duplicados si estÃ¡ habilitado
      /* istanbul ignore next */
      cov_23g4pzs8qr().s[54]++;
      if (config.filterDuplicates) {
        /* istanbul ignore next */
        cov_23g4pzs8qr().b[14][0]++;
        cov_23g4pzs8qr().s[55]++;
        updated = updated.filter(s => {
          /* istanbul ignore next */
          cov_23g4pzs8qr().f[12]++;
          cov_23g4pzs8qr().s[56]++;
          return sanitizeSearch(s) !== sanitized;
        });
      } else
      /* istanbul ignore next */
      {
        cov_23g4pzs8qr().b[14][1]++;
      }
      // Agregar al principio
      cov_23g4pzs8qr().s[57]++;
      updated.unshift(search.trim());
      // Limitar al mÃ¡ximo configurado
      /* istanbul ignore next */
      cov_23g4pzs8qr().s[58]++;
      updated = updated.slice(0, config.maxSearches);
      // Guardar en localStorage
      /* istanbul ignore next */
      cov_23g4pzs8qr().s[59]++;
      saveToStorage(updated);
      /* istanbul ignore next */
      cov_23g4pzs8qr().s[60]++;
      return updated;
    });
  }, [sanitizeSearch, config.filterDuplicates, config.maxSearches, saveToStorage]));
  // Remover una bÃºsqueda especÃ­fica
  const removeSearch =
  /* istanbul ignore next */
  (cov_23g4pzs8qr().s[61]++, (0, _react.useCallback)(search => {
    /* istanbul ignore next */
    cov_23g4pzs8qr().f[13]++;
    const sanitized =
    /* istanbul ignore next */
    (cov_23g4pzs8qr().s[62]++, sanitizeSearch(search));
    /* istanbul ignore next */
    cov_23g4pzs8qr().s[63]++;
    setRecentSearches(prev => {
      /* istanbul ignore next */
      cov_23g4pzs8qr().f[14]++;
      const updated =
      /* istanbul ignore next */
      (cov_23g4pzs8qr().s[64]++, prev.filter(s => {
        /* istanbul ignore next */
        cov_23g4pzs8qr().f[15]++;
        cov_23g4pzs8qr().s[65]++;
        return sanitizeSearch(s) !== sanitized;
      }));
      /* istanbul ignore next */
      cov_23g4pzs8qr().s[66]++;
      saveToStorage(updated);
      /* istanbul ignore next */
      cov_23g4pzs8qr().s[67]++;
      return updated;
    });
  }, [sanitizeSearch, saveToStorage]));
  // Limpiar todas las bÃºsquedas
  const clearSearches =
  /* istanbul ignore next */
  (cov_23g4pzs8qr().s[68]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_23g4pzs8qr().f[16]++;
    cov_23g4pzs8qr().s[69]++;
    setRecentSearches([]);
    /* istanbul ignore next */
    cov_23g4pzs8qr().s[70]++;
    saveToStorage([]);
  }, [saveToStorage]));
  // Verificar si una bÃºsqueda existe
  const hasSearch =
  /* istanbul ignore next */
  (cov_23g4pzs8qr().s[71]++, (0, _react.useCallback)(search => {
    /* istanbul ignore next */
    cov_23g4pzs8qr().f[17]++;
    const sanitized =
    /* istanbul ignore next */
    (cov_23g4pzs8qr().s[72]++, sanitizeSearch(search));
    /* istanbul ignore next */
    cov_23g4pzs8qr().s[73]++;
    return recentSearches.some(s => {
      /* istanbul ignore next */
      cov_23g4pzs8qr().f[18]++;
      cov_23g4pzs8qr().s[74]++;
      return sanitizeSearch(s) === sanitized;
    });
  }, [recentSearches, sanitizeSearch]));
  // Obtener las N bÃºsquedas mÃ¡s recientes
  const getRecentSearches =
  /* istanbul ignore next */
  (cov_23g4pzs8qr().s[75]++, (0, _react.useCallback)(limit => {
    /* istanbul ignore next */
    cov_23g4pzs8qr().f[19]++;
    const actualLimit =
    /* istanbul ignore next */
    (cov_23g4pzs8qr().s[76]++,
    /* istanbul ignore next */
    (cov_23g4pzs8qr().b[15][0]++, limit) ??
    /* istanbul ignore next */
    (cov_23g4pzs8qr().b[15][1]++, config.maxSearches));
    /* istanbul ignore next */
    cov_23g4pzs8qr().s[77]++;
    return recentSearches.slice(0, actualLimit);
  }, [recentSearches, config.maxSearches]));
  // Mover una bÃºsqueda al principio (reordenar)
  const moveToTop =
  /* istanbul ignore next */
  (cov_23g4pzs8qr().s[78]++, (0, _react.useCallback)(search => {
    /* istanbul ignore next */
    cov_23g4pzs8qr().f[20]++;
    const sanitized =
    /* istanbul ignore next */
    (cov_23g4pzs8qr().s[79]++, sanitizeSearch(search));
    /* istanbul ignore next */
    cov_23g4pzs8qr().s[80]++;
    setRecentSearches(prev => {
      /* istanbul ignore next */
      cov_23g4pzs8qr().f[21]++;
      const filtered =
      /* istanbul ignore next */
      (cov_23g4pzs8qr().s[81]++, prev.filter(s => {
        /* istanbul ignore next */
        cov_23g4pzs8qr().f[22]++;
        cov_23g4pzs8qr().s[82]++;
        return sanitizeSearch(s) !== sanitized;
      }));
      const existing =
      /* istanbul ignore next */
      (cov_23g4pzs8qr().s[83]++, prev.find(s => {
        /* istanbul ignore next */
        cov_23g4pzs8qr().f[23]++;
        cov_23g4pzs8qr().s[84]++;
        return sanitizeSearch(s) === sanitized;
      }));
      /* istanbul ignore next */
      cov_23g4pzs8qr().s[85]++;
      if (!existing) {
        /* istanbul ignore next */
        cov_23g4pzs8qr().b[16][0]++;
        cov_23g4pzs8qr().s[86]++;
        return prev;
      } else
      /* istanbul ignore next */
      {
        cov_23g4pzs8qr().b[16][1]++;
      }
      const updated =
      /* istanbul ignore next */
      (cov_23g4pzs8qr().s[87]++, [existing, ...filtered]);
      /* istanbul ignore next */
      cov_23g4pzs8qr().s[88]++;
      saveToStorage(updated);
      /* istanbul ignore next */
      cov_23g4pzs8qr().s[89]++;
      return updated;
    });
  }, [sanitizeSearch, saveToStorage]));
  /* istanbul ignore next */
  cov_23g4pzs8qr().s[90]++;
  return {
    recentSearches,
    addSearch,
    removeSearch,
    clearSearches,
    hasSearch,
    getRecentSearches,
    moveToTop
  };
}
function useRecentSearchesSimple(limit =
/* istanbul ignore next */
(cov_23g4pzs8qr().b[17][0]++, 5)) {
  /* istanbul ignore next */
  cov_23g4pzs8qr().f[24]++;
  const {
    getRecentSearches
  } =
  /* istanbul ignore next */
  (cov_23g4pzs8qr().s[91]++, useRecentSearches({
    maxSearches: limit
  }));
  /* istanbul ignore next */
  cov_23g4pzs8qr().s[92]++;
  return getRecentSearches();
}
const _default =
/* istanbul ignore next */
(cov_23g4pzs8qr().s[93]++, useRecentSearches);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZWZhdWx0IiwiY292XzIzZzRwenM4cXIiLCJmIiwicyIsIl9kZWZhdWx0IiwidXNlUmVjZW50U2VhcmNoZXMiLCJ1c2VSZWNlbnRTZWFyY2hlc1NpbXBsZSIsIkRFRkFVTFRfT1BUSU9OUyIsIm1heFNlYXJjaGVzIiwic3RvcmFnZUtleSIsImVuYWJsZVBlcnNpc3RlbmNlIiwiZmlsdGVyRHVwbGljYXRlcyIsImV4cGlyYXRpb25EYXlzIiwib3B0aW9ucyIsImIiLCJjb25maWciLCJyZWNlbnRTZWFyY2hlcyIsInNldFJlY2VudFNlYXJjaGVzIiwiX3JlYWN0IiwidXNlU3RhdGUiLCJzYW5pdGl6ZVNlYXJjaCIsInVzZUNhbGxiYWNrIiwic2VhcmNoIiwidHJpbSIsInRvTG93ZXJDYXNlIiwiaXNFeHBpcmVkIiwidGltZXN0YW1wIiwibWF4QWdlIiwiRGF0ZSIsIm5vdyIsImxvYWRGcm9tU3RvcmFnZSIsInJlc3VsdCIsIl9qc29udXRpbHMiLCJzYWZlTG9jYWxTdG9yYWdlR2V0Iiwic3VjY2VzcyIsImRhdGEiLCJBcnJheSIsImlzQXJyYXkiLCJzZWFyY2hlcyIsInBlcnNpc3RlZERhdGEiLCJzYWZlTG9jYWxTdG9yYWdlU2V0IiwidmVyc2lvbiIsInNsaWNlIiwic2F2ZVRvU3RvcmFnZSIsIndpbmRvdyIsImxlbmd0aCIsImxvY2FsU3RvcmFnZSIsInJlbW92ZUl0ZW0iLCJkYXRhVG9TdG9yZSIsInNldEl0ZW0iLCJKU09OIiwic3RyaW5naWZ5IiwiZXJyb3IiLCJjb25zb2xlIiwid2FybiIsInVzZUVmZmVjdCIsImxvYWRlZCIsImFkZFNlYXJjaCIsInNhbml0aXplZCIsInByZXYiLCJ1cGRhdGVkIiwiZmlsdGVyIiwidW5zaGlmdCIsInJlbW92ZVNlYXJjaCIsImNsZWFyU2VhcmNoZXMiLCJoYXNTZWFyY2giLCJzb21lIiwiZ2V0UmVjZW50U2VhcmNoZXMiLCJsaW1pdCIsImFjdHVhbExpbWl0IiwibW92ZVRvVG9wIiwiZmlsdGVyZWQiLCJleGlzdGluZyIsImZpbmQiXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXG1hcnRpXFxEZXNrdG9wXFxERVNBUlJPTExPU1dcXEJPSUxFUlBMQVRURSBFLUNPTU1FUkNFXFxzcmNcXGhvb2tzXFx1c2VSZWNlbnRTZWFyY2hlcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyBIT09LOiB1c2VSZWNlbnRTZWFyY2hlcyAtIEdlc3Rpw7NuIGRlIGLDunNxdWVkYXMgcmVjaWVudGVzIGNvbiBsb2NhbFN0b3JhZ2VcclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBzYWZlTG9jYWxTdG9yYWdlR2V0LCBzYWZlTG9jYWxTdG9yYWdlU2V0LCBTVE9SQUdFX0tFWVMgfSBmcm9tICdAL2xpYi9qc29uLXV0aWxzJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgUmVjZW50U2VhcmNoZXNPcHRpb25zIHtcclxuICAvKiogTsO6bWVybyBtw6F4aW1vIGRlIGLDunNxdWVkYXMgcmVjaWVudGVzIGEgbWFudGVuZXIgKi9cclxuICBtYXhTZWFyY2hlcz86IG51bWJlcjtcclxuICAvKiogQ2xhdmUgZGUgbG9jYWxTdG9yYWdlIHBhcmEgcGVyc2lzdGlyIGxhcyBiw7pzcXVlZGFzICovXHJcbiAgc3RvcmFnZUtleT86IHN0cmluZztcclxuICAvKiogSGFiaWxpdGFyL2Rlc2hhYmlsaXRhciBwZXJzaXN0ZW5jaWEgZW4gbG9jYWxTdG9yYWdlICovXHJcbiAgZW5hYmxlUGVyc2lzdGVuY2U/OiBib29sZWFuO1xyXG4gIC8qKiBGaWx0cmFyIGLDunNxdWVkYXMgZHVwbGljYWRhcyAqL1xyXG4gIGZpbHRlckR1cGxpY2F0ZXM/OiBib29sZWFuO1xyXG4gIC8qKiBUaWVtcG8gZGUgZXhwaXJhY2nDs24gZW4gZMOtYXMgKDAgPSBzaW4gZXhwaXJhY2nDs24pICovXHJcbiAgZXhwaXJhdGlvbkRheXM/OiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgUmVjZW50U2VhcmNoZXNSZXR1cm4ge1xyXG4gIC8qKiBBcnJheSBkZSBiw7pzcXVlZGFzIHJlY2llbnRlcyAqL1xyXG4gIHJlY2VudFNlYXJjaGVzOiBzdHJpbmdbXTtcclxuICAvKiogQWdyZWdhciB1bmEgbnVldmEgYsO6c3F1ZWRhICovXHJcbiAgYWRkU2VhcmNoOiAoc2VhcmNoOiBzdHJpbmcpID0+IHZvaWQ7XHJcbiAgLyoqIFJlbW92ZXIgdW5hIGLDunNxdWVkYSBlc3BlY8OtZmljYSAqL1xyXG4gIHJlbW92ZVNlYXJjaDogKHNlYXJjaDogc3RyaW5nKSA9PiB2b2lkO1xyXG4gIC8qKiBMaW1waWFyIHRvZGFzIGxhcyBiw7pzcXVlZGFzICovXHJcbiAgY2xlYXJTZWFyY2hlczogKCkgPT4gdm9pZDtcclxuICAvKiogVmVyaWZpY2FyIHNpIHVuYSBiw7pzcXVlZGEgZXhpc3RlICovXHJcbiAgaGFzU2VhcmNoOiAoc2VhcmNoOiBzdHJpbmcpID0+IGJvb2xlYW47XHJcbiAgLyoqIE9idGVuZXIgbGFzIE4gYsO6c3F1ZWRhcyBtw6FzIHJlY2llbnRlcyAqL1xyXG4gIGdldFJlY2VudFNlYXJjaGVzOiAobGltaXQ/OiBudW1iZXIpID0+IHN0cmluZ1tdO1xyXG4gIC8qKiBSZW9yZGVuYXIgYsO6c3F1ZWRhcyAobW92ZXIgYWwgcHJpbmNpcGlvKSAqL1xyXG4gIG1vdmVUb1RvcDogKHNlYXJjaDogc3RyaW5nKSA9PiB2b2lkO1xyXG59XHJcblxyXG5pbnRlcmZhY2UgUGVyc2lzdGVkU2VhcmNoRGF0YSB7XHJcbiAgc2VhcmNoZXM6IHN0cmluZ1tdO1xyXG4gIHRpbWVzdGFtcDogbnVtYmVyO1xyXG4gIHZlcnNpb246IHN0cmluZztcclxufVxyXG5cclxuY29uc3QgREVGQVVMVF9PUFRJT05TOiBSZXF1aXJlZDxSZWNlbnRTZWFyY2hlc09wdGlvbnM+ID0ge1xyXG4gIG1heFNlYXJjaGVzOiA1LFxyXG4gIHN0b3JhZ2VLZXk6ICdwaW50ZXlhLXJlY2VudC1zZWFyY2hlcycsXHJcbiAgZW5hYmxlUGVyc2lzdGVuY2U6IHRydWUsXHJcbiAgZmlsdGVyRHVwbGljYXRlczogdHJ1ZSxcclxuICBleHBpcmF0aW9uRGF5czogMzAsIC8vIDMwIGTDrWFzIGRlIGV4cGlyYWNpw7NuXHJcbn07XHJcblxyXG4vKipcclxuICogSG9vayBwYXJhIGdlc3Rpb25hciBiw7pzcXVlZGFzIHJlY2llbnRlcyBjb24gcGVyc2lzdGVuY2lhIGVuIGxvY2FsU3RvcmFnZVxyXG4gKiBcclxuICogQ2FyYWN0ZXLDrXN0aWNhczpcclxuICogLSBQZXJzaXN0ZW5jaWEgYXV0b23DoXRpY2EgZW4gbG9jYWxTdG9yYWdlXHJcbiAqIC0gTMOtbWl0ZSBjb25maWd1cmFibGUgZGUgYsO6c3F1ZWRhc1xyXG4gKiAtIEZpbHRyYWRvIGRlIGR1cGxpY2Fkb3NcclxuICogLSBFeHBpcmFjacOzbiBhdXRvbcOhdGljYVxyXG4gKiAtIE1hbmVqbyBkZSBlcnJvcmVzIHJvYnVzdG9cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB1c2VSZWNlbnRTZWFyY2hlcyhvcHRpb25zOiBSZWNlbnRTZWFyY2hlc09wdGlvbnMgPSB7fSk6IFJlY2VudFNlYXJjaGVzUmV0dXJuIHtcclxuICBjb25zdCBjb25maWcgPSB7IC4uLkRFRkFVTFRfT1BUSU9OUywgLi4ub3B0aW9ucyB9O1xyXG4gIGNvbnN0IFtyZWNlbnRTZWFyY2hlcywgc2V0UmVjZW50U2VhcmNoZXNdID0gdXNlU3RhdGU8c3RyaW5nW10+KFtdKTtcclxuXHJcbiAgLy8gRnVuY2nDs24gcGFyYSB2YWxpZGFyIHkgbGltcGlhciB1bmEgYsO6c3F1ZWRhXHJcbiAgY29uc3Qgc2FuaXRpemVTZWFyY2ggPSB1c2VDYWxsYmFjaygoc2VhcmNoOiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xyXG4gICAgcmV0dXJuIHNlYXJjaC50cmltKCkudG9Mb3dlckNhc2UoKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIC8vIEZ1bmNpw7NuIHBhcmEgdmVyaWZpY2FyIHNpIGxvcyBkYXRvcyBoYW4gZXhwaXJhZG9cclxuICBjb25zdCBpc0V4cGlyZWQgPSB1c2VDYWxsYmFjaygodGltZXN0YW1wOiBudW1iZXIpOiBib29sZWFuID0+IHtcclxuICAgIGlmIChjb25maWcuZXhwaXJhdGlvbkRheXMgPT09IDApIHtyZXR1cm4gZmFsc2U7fVxyXG4gICAgY29uc3QgbWF4QWdlID0gY29uZmlnLmV4cGlyYXRpb25EYXlzICogMjQgKiA2MCAqIDYwICogMTAwMDtcclxuICAgIHJldHVybiBEYXRlLm5vdygpIC0gdGltZXN0YW1wID4gbWF4QWdlO1xyXG4gIH0sIFtjb25maWcuZXhwaXJhdGlvbkRheXNdKTtcclxuXHJcbiAgLy8gQ2FyZ2FyIGLDunNxdWVkYXMgZGVzZGUgbG9jYWxTdG9yYWdlXHJcbiAgY29uc3QgbG9hZEZyb21TdG9yYWdlID0gdXNlQ2FsbGJhY2soKCk6IHN0cmluZ1tdID0+IHtcclxuICAgIGlmICghY29uZmlnLmVuYWJsZVBlcnNpc3RlbmNlKSB7XHJcbiAgICAgIHJldHVybiBbXTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBVc2FyIHV0aWxpZGFkIHNlZ3VyYSBwYXJhIGNhcmdhciBkZXNkZSBsb2NhbFN0b3JhZ2VcclxuICAgIGNvbnN0IHJlc3VsdCA9IHNhZmVMb2NhbFN0b3JhZ2VHZXQ8UGVyc2lzdGVkU2VhcmNoRGF0YSB8IHN0cmluZ1tdPihjb25maWcuc3RvcmFnZUtleSk7XHJcblxyXG4gICAgaWYgKCFyZXN1bHQuc3VjY2Vzcykge1xyXG4gICAgICByZXR1cm4gW107XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgZGF0YSA9IHJlc3VsdC5kYXRhO1xyXG5cclxuICAgIC8vIFZlcmlmaWNhciBzaSBlcyBmb3JtYXRvIG51ZXZvIChjb24gbWV0YWRhdGEpXHJcbiAgICBpZiAoZGF0YSAmJiB0eXBlb2YgZGF0YSA9PT0gJ29iamVjdCcgJiYgJ3NlYXJjaGVzJyBpbiBkYXRhICYmIEFycmF5LmlzQXJyYXkoZGF0YS5zZWFyY2hlcykpIHtcclxuICAgICAgY29uc3QgcGVyc2lzdGVkRGF0YSA9IGRhdGEgYXMgUGVyc2lzdGVkU2VhcmNoRGF0YTtcclxuXHJcbiAgICAgIC8vIFZlcmlmaWNhciBleHBpcmFjacOzblxyXG4gICAgICBpZiAocGVyc2lzdGVkRGF0YS50aW1lc3RhbXAgJiYgaXNFeHBpcmVkKHBlcnNpc3RlZERhdGEudGltZXN0YW1wKSkge1xyXG4gICAgICAgIC8vIExpbXBpYXIgZGF0b3MgZXhwaXJhZG9zIHVzYW5kbyB1dGlsaWRhZCBzZWd1cmFcclxuICAgICAgICBzYWZlTG9jYWxTdG9yYWdlU2V0KGNvbmZpZy5zdG9yYWdlS2V5LCB7XHJcbiAgICAgICAgICBzZWFyY2hlczogW10sXHJcbiAgICAgICAgICB0aW1lc3RhbXA6IERhdGUubm93KCksXHJcbiAgICAgICAgICB2ZXJzaW9uOiAnMS4wJ1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBbXTtcclxuICAgICAgfVxyXG5cclxuICAgICAgcmV0dXJuIHBlcnNpc3RlZERhdGEuc2VhcmNoZXMuc2xpY2UoMCwgY29uZmlnLm1heFNlYXJjaGVzKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBGb3JtYXRvIGFudGlndW8gKGFycmF5IHNpbXBsZSlcclxuICAgIGlmIChBcnJheS5pc0FycmF5KGRhdGEpKSB7XHJcbiAgICAgIHJldHVybiBkYXRhLnNsaWNlKDAsIGNvbmZpZy5tYXhTZWFyY2hlcyk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIFtdO1xyXG4gIH0sIFtjb25maWcuZW5hYmxlUGVyc2lzdGVuY2UsIGNvbmZpZy5zdG9yYWdlS2V5LCBjb25maWcubWF4U2VhcmNoZXMsIGlzRXhwaXJlZF0pO1xyXG5cclxuICAvLyBHdWFyZGFyIGLDunNxdWVkYXMgZW4gbG9jYWxTdG9yYWdlXHJcbiAgY29uc3Qgc2F2ZVRvU3RvcmFnZSA9IHVzZUNhbGxiYWNrKChzZWFyY2hlczogc3RyaW5nW10pOiB2b2lkID0+IHtcclxuICAgIGlmICghY29uZmlnLmVuYWJsZVBlcnNpc3RlbmNlIHx8IHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICB0cnkge1xyXG4gICAgICBpZiAoc2VhcmNoZXMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oY29uZmlnLnN0b3JhZ2VLZXkpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG5cclxuICAgICAgY29uc3QgZGF0YVRvU3RvcmU6IFBlcnNpc3RlZFNlYXJjaERhdGEgPSB7XHJcbiAgICAgICAgc2VhcmNoZXM6IHNlYXJjaGVzLnNsaWNlKDAsIGNvbmZpZy5tYXhTZWFyY2hlcyksXHJcbiAgICAgICAgdGltZXN0YW1wOiBEYXRlLm5vdygpLFxyXG4gICAgICAgIHZlcnNpb246ICcxLjAuMCdcclxuICAgICAgfTtcclxuXHJcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGNvbmZpZy5zdG9yYWdlS2V5LCBKU09OLnN0cmluZ2lmeShkYXRhVG9TdG9yZSkpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS53YXJuKCdFcnJvciBzYXZpbmcgcmVjZW50IHNlYXJjaGVzIHRvIGxvY2FsU3RvcmFnZTonLCBlcnJvcik7XHJcbiAgICB9XHJcbiAgfSwgW2NvbmZpZy5lbmFibGVQZXJzaXN0ZW5jZSwgY29uZmlnLnN0b3JhZ2VLZXksIGNvbmZpZy5tYXhTZWFyY2hlc10pO1xyXG5cclxuICAvLyBDYXJnYXIgYsO6c3F1ZWRhcyBhbCBpbmljaWFsaXphclxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBjb25zdCBsb2FkZWQgPSBsb2FkRnJvbVN0b3JhZ2UoKTtcclxuICAgIHNldFJlY2VudFNlYXJjaGVzKGxvYWRlZCk7XHJcbiAgfSwgW2xvYWRGcm9tU3RvcmFnZV0pO1xyXG5cclxuICAvLyBBZ3JlZ2FyIHVuYSBudWV2YSBiw7pzcXVlZGFcclxuICBjb25zdCBhZGRTZWFyY2ggPSB1c2VDYWxsYmFjaygoc2VhcmNoOiBzdHJpbmcpOiB2b2lkID0+IHtcclxuICAgIGNvbnN0IHNhbml0aXplZCA9IHNhbml0aXplU2VhcmNoKHNlYXJjaCk7XHJcbiAgICBpZiAoIXNhbml0aXplZCB8fCBzYW5pdGl6ZWQubGVuZ3RoIDwgMikge3JldHVybjt9XHJcblxyXG4gICAgc2V0UmVjZW50U2VhcmNoZXMocHJldiA9PiB7XHJcbiAgICAgIGxldCB1cGRhdGVkID0gWy4uLnByZXZdO1xyXG5cclxuICAgICAgLy8gUmVtb3ZlciBkdXBsaWNhZG9zIHNpIGVzdMOhIGhhYmlsaXRhZG9cclxuICAgICAgaWYgKGNvbmZpZy5maWx0ZXJEdXBsaWNhdGVzKSB7XHJcbiAgICAgICAgdXBkYXRlZCA9IHVwZGF0ZWQuZmlsdGVyKHMgPT4gc2FuaXRpemVTZWFyY2gocykgIT09IHNhbml0aXplZCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIEFncmVnYXIgYWwgcHJpbmNpcGlvXHJcbiAgICAgIHVwZGF0ZWQudW5zaGlmdChzZWFyY2gudHJpbSgpKTtcclxuXHJcbiAgICAgIC8vIExpbWl0YXIgYWwgbcOheGltbyBjb25maWd1cmFkb1xyXG4gICAgICB1cGRhdGVkID0gdXBkYXRlZC5zbGljZSgwLCBjb25maWcubWF4U2VhcmNoZXMpO1xyXG5cclxuICAgICAgLy8gR3VhcmRhciBlbiBsb2NhbFN0b3JhZ2VcclxuICAgICAgc2F2ZVRvU3RvcmFnZSh1cGRhdGVkKTtcclxuXHJcbiAgICAgIHJldHVybiB1cGRhdGVkO1xyXG4gICAgfSk7XHJcbiAgfSwgW3Nhbml0aXplU2VhcmNoLCBjb25maWcuZmlsdGVyRHVwbGljYXRlcywgY29uZmlnLm1heFNlYXJjaGVzLCBzYXZlVG9TdG9yYWdlXSk7XHJcblxyXG4gIC8vIFJlbW92ZXIgdW5hIGLDunNxdWVkYSBlc3BlY8OtZmljYVxyXG4gIGNvbnN0IHJlbW92ZVNlYXJjaCA9IHVzZUNhbGxiYWNrKChzZWFyY2g6IHN0cmluZyk6IHZvaWQgPT4ge1xyXG4gICAgY29uc3Qgc2FuaXRpemVkID0gc2FuaXRpemVTZWFyY2goc2VhcmNoKTtcclxuICAgIFxyXG4gICAgc2V0UmVjZW50U2VhcmNoZXMocHJldiA9PiB7XHJcbiAgICAgIGNvbnN0IHVwZGF0ZWQgPSBwcmV2LmZpbHRlcihzID0+IHNhbml0aXplU2VhcmNoKHMpICE9PSBzYW5pdGl6ZWQpO1xyXG4gICAgICBzYXZlVG9TdG9yYWdlKHVwZGF0ZWQpO1xyXG4gICAgICByZXR1cm4gdXBkYXRlZDtcclxuICAgIH0pO1xyXG4gIH0sIFtzYW5pdGl6ZVNlYXJjaCwgc2F2ZVRvU3RvcmFnZV0pO1xyXG5cclxuICAvLyBMaW1waWFyIHRvZGFzIGxhcyBiw7pzcXVlZGFzXHJcbiAgY29uc3QgY2xlYXJTZWFyY2hlcyA9IHVzZUNhbGxiYWNrKCgpOiB2b2lkID0+IHtcclxuICAgIHNldFJlY2VudFNlYXJjaGVzKFtdKTtcclxuICAgIHNhdmVUb1N0b3JhZ2UoW10pO1xyXG4gIH0sIFtzYXZlVG9TdG9yYWdlXSk7XHJcblxyXG4gIC8vIFZlcmlmaWNhciBzaSB1bmEgYsO6c3F1ZWRhIGV4aXN0ZVxyXG4gIGNvbnN0IGhhc1NlYXJjaCA9IHVzZUNhbGxiYWNrKChzZWFyY2g6IHN0cmluZyk6IGJvb2xlYW4gPT4ge1xyXG4gICAgY29uc3Qgc2FuaXRpemVkID0gc2FuaXRpemVTZWFyY2goc2VhcmNoKTtcclxuICAgIHJldHVybiByZWNlbnRTZWFyY2hlcy5zb21lKHMgPT4gc2FuaXRpemVTZWFyY2gocykgPT09IHNhbml0aXplZCk7XHJcbiAgfSwgW3JlY2VudFNlYXJjaGVzLCBzYW5pdGl6ZVNlYXJjaF0pO1xyXG5cclxuICAvLyBPYnRlbmVyIGxhcyBOIGLDunNxdWVkYXMgbcOhcyByZWNpZW50ZXNcclxuICBjb25zdCBnZXRSZWNlbnRTZWFyY2hlcyA9IHVzZUNhbGxiYWNrKChsaW1pdD86IG51bWJlcik6IHN0cmluZ1tdID0+IHtcclxuICAgIGNvbnN0IGFjdHVhbExpbWl0ID0gbGltaXQgPz8gY29uZmlnLm1heFNlYXJjaGVzO1xyXG4gICAgcmV0dXJuIHJlY2VudFNlYXJjaGVzLnNsaWNlKDAsIGFjdHVhbExpbWl0KTtcclxuICB9LCBbcmVjZW50U2VhcmNoZXMsIGNvbmZpZy5tYXhTZWFyY2hlc10pO1xyXG5cclxuICAvLyBNb3ZlciB1bmEgYsO6c3F1ZWRhIGFsIHByaW5jaXBpbyAocmVvcmRlbmFyKVxyXG4gIGNvbnN0IG1vdmVUb1RvcCA9IHVzZUNhbGxiYWNrKChzZWFyY2g6IHN0cmluZyk6IHZvaWQgPT4ge1xyXG4gICAgY29uc3Qgc2FuaXRpemVkID0gc2FuaXRpemVTZWFyY2goc2VhcmNoKTtcclxuICAgIFxyXG4gICAgc2V0UmVjZW50U2VhcmNoZXMocHJldiA9PiB7XHJcbiAgICAgIGNvbnN0IGZpbHRlcmVkID0gcHJldi5maWx0ZXIocyA9PiBzYW5pdGl6ZVNlYXJjaChzKSAhPT0gc2FuaXRpemVkKTtcclxuICAgICAgY29uc3QgZXhpc3RpbmcgPSBwcmV2LmZpbmQocyA9PiBzYW5pdGl6ZVNlYXJjaChzKSA9PT0gc2FuaXRpemVkKTtcclxuICAgICAgXHJcbiAgICAgIGlmICghZXhpc3RpbmcpIHtyZXR1cm4gcHJldjt9XHJcbiAgICAgIFxyXG4gICAgICBjb25zdCB1cGRhdGVkID0gW2V4aXN0aW5nLCAuLi5maWx0ZXJlZF07XHJcbiAgICAgIHNhdmVUb1N0b3JhZ2UodXBkYXRlZCk7XHJcbiAgICAgIHJldHVybiB1cGRhdGVkO1xyXG4gICAgfSk7XHJcbiAgfSwgW3Nhbml0aXplU2VhcmNoLCBzYXZlVG9TdG9yYWdlXSk7XHJcblxyXG4gIHJldHVybiB7XHJcbiAgICByZWNlbnRTZWFyY2hlcyxcclxuICAgIGFkZFNlYXJjaCxcclxuICAgIHJlbW92ZVNlYXJjaCxcclxuICAgIGNsZWFyU2VhcmNoZXMsXHJcbiAgICBoYXNTZWFyY2gsXHJcbiAgICBnZXRSZWNlbnRTZWFyY2hlcyxcclxuICAgIG1vdmVUb1RvcCxcclxuICB9O1xyXG59XHJcblxyXG4vKipcclxuICogSG9vayBzaW1wbGlmaWNhZG8gcGFyYSBzb2xvIG9idGVuZXIgYsO6c3F1ZWRhcyByZWNpZW50ZXNcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB1c2VSZWNlbnRTZWFyY2hlc1NpbXBsZShsaW1pdDogbnVtYmVyID0gNSk6IHN0cmluZ1tdIHtcclxuICBjb25zdCB7IGdldFJlY2VudFNlYXJjaGVzIH0gPSB1c2VSZWNlbnRTZWFyY2hlcyh7IG1heFNlYXJjaGVzOiBsaW1pdCB9KTtcclxuICByZXR1cm4gZ2V0UmVjZW50U2VhcmNoZXMoKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgdXNlUmVjZW50U2VhcmNoZXM7XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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