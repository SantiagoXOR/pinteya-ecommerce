{"version":3,"names":["useOrdersDevPersistence","cov_273pkeul7x","f","s","useOrdersDevState","globalDevStorage","Map","isValidPersistedState","state","b","Array","isArray","orders","lastFetchTime","hasData","isStateExpired","maxAge","Date","now","options","optionsRef","_react","useRef","current","getPersistedState","useCallback","enabled","process","env","NODE_ENV","get","storageKey","delete","error","console","warn","persistState","newState","currentState","updatedState","pagination","analytics","filters","set","log","key","ordersCount","length","age","clearPersistedState","hasValidPersistedData","useEffect"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useOrdersDevPersistence.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - ORDERS DEV PERSISTENCE HOOK\r\n// Hook para persistir estado de órdenes durante Fast Refresh en desarrollo\r\n// ===================================\r\n\r\n'use client';\r\n\r\nimport { useCallback, useRef, useEffect } from 'react';\r\nimport { StrictOrderEnterprise } from '@/types/orders-enterprise';\r\nimport { StrictOrderFilters } from './useOrdersEnterpriseStrict';\r\n\r\n// ===================================\r\n// TIPOS Y CONFIGURACIÓN\r\n// ===================================\r\n\r\ninterface PersistedOrdersState {\r\n  orders: StrictOrderEnterprise[];\r\n  pagination: any;\r\n  analytics: any;\r\n  filters: StrictOrderFilters;\r\n  lastFetchTime: number;\r\n  hasData: boolean;\r\n}\r\n\r\ninterface DevPersistenceOptions {\r\n  enabled: boolean;\r\n  maxAge: number; // Tiempo máximo para considerar datos válidos (ms)\r\n  storageKey: string;\r\n}\r\n\r\n// ===================================\r\n// STORAGE GLOBAL PARA DESARROLLO\r\n// ===================================\r\n\r\n// Usar Map global para persistir entre Fast Refresh\r\nconst globalDevStorage = new Map<string, PersistedOrdersState>();\r\n\r\n// ===================================\r\n// UTILIDADES\r\n// ===================================\r\n\r\nfunction isValidPersistedState(state: any): state is PersistedOrdersState {\r\n  return (\r\n    state &&\r\n    typeof state === 'object' &&\r\n    Array.isArray(state.orders) &&\r\n    typeof state.lastFetchTime === 'number' &&\r\n    typeof state.hasData === 'boolean'\r\n  );\r\n}\r\n\r\nfunction isStateExpired(state: PersistedOrdersState, maxAge: number): boolean {\r\n  return Date.now() - state.lastFetchTime > maxAge;\r\n}\r\n\r\n// ===================================\r\n// HOOK DE PERSISTENCIA PARA DESARROLLO\r\n// ===================================\r\n\r\nexport interface UseOrdersDevPersistenceReturn {\r\n  getPersistedState: () => PersistedOrdersState | null;\r\n  persistState: (state: Partial<PersistedOrdersState>) => void;\r\n  clearPersistedState: () => void;\r\n  hasValidPersistedData: () => boolean;\r\n}\r\n\r\nexport function useOrdersDevPersistence(\r\n  options: DevPersistenceOptions\r\n): UseOrdersDevPersistenceReturn {\r\n  const optionsRef = useRef(options);\r\n  optionsRef.current = options;\r\n\r\n  const getPersistedState = useCallback((): PersistedOrdersState | null => {\r\n    if (!optionsRef.current.enabled || process.env.NODE_ENV !== 'development') {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      const state = globalDevStorage.get(optionsRef.current.storageKey);\r\n      \r\n      if (!state || !isValidPersistedState(state)) {\r\n        return null;\r\n      }\r\n\r\n      if (isStateExpired(state, optionsRef.current.maxAge)) {\r\n        globalDevStorage.delete(optionsRef.current.storageKey);\r\n        return null;\r\n      }\r\n\r\n      return state;\r\n    } catch (error) {\r\n      console.warn('[useOrdersDevPersistence] Error getting persisted state:', error);\r\n      return null;\r\n    }\r\n  }, []);\r\n\r\n  const persistState = useCallback((newState: Partial<PersistedOrdersState>): void => {\r\n    if (!optionsRef.current.enabled || process.env.NODE_ENV !== 'development') {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const currentState = globalDevStorage.get(optionsRef.current.storageKey);\r\n      \r\n      const updatedState: PersistedOrdersState = {\r\n        orders: [],\r\n        pagination: null,\r\n        analytics: null,\r\n        filters: {} as StrictOrderFilters,\r\n        lastFetchTime: Date.now(),\r\n        hasData: false,\r\n        ...currentState,\r\n        ...newState,\r\n      };\r\n\r\n      globalDevStorage.set(optionsRef.current.storageKey, updatedState);\r\n\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log('[useOrdersDevPersistence] State persisted:', {\r\n          key: optionsRef.current.storageKey,\r\n          ordersCount: updatedState.orders.length,\r\n          hasData: updatedState.hasData,\r\n          age: Date.now() - updatedState.lastFetchTime\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.warn('[useOrdersDevPersistence] Error persisting state:', error);\r\n    }\r\n  }, []);\r\n\r\n  const clearPersistedState = useCallback((): void => {\r\n    if (!optionsRef.current.enabled || process.env.NODE_ENV !== 'development') {\r\n      return;\r\n    }\r\n\r\n    globalDevStorage.delete(optionsRef.current.storageKey);\r\n    \r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log('[useOrdersDevPersistence] Persisted state cleared');\r\n    }\r\n  }, []);\r\n\r\n  const hasValidPersistedData = useCallback((): boolean => {\r\n    const state = getPersistedState();\r\n    return state !== null && state.hasData && state.orders.length > 0;\r\n  }, [getPersistedState]);\r\n\r\n  // Cleanup al desmontar (solo en producción o cuando se deshabilita)\r\n  useEffect(() => {\r\n    return () => {\r\n      if (!optionsRef.current.enabled || process.env.NODE_ENV !== 'development') {\r\n        clearPersistedState();\r\n      }\r\n    };\r\n  }, [clearPersistedState]);\r\n\r\n  return {\r\n    getPersistedState,\r\n    persistState,\r\n    clearPersistedState,\r\n    hasValidPersistedData\r\n  };\r\n}\r\n\r\n// ===================================\r\n// HOOK HELPER PARA INTEGRACIÓN FÁCIL\r\n// ===================================\r\n\r\nexport function useOrdersDevState(storageKey: string = 'orders-dev-state') {\r\n  return useOrdersDevPersistence({\r\n    enabled: true,\r\n    maxAge: 5 * 60 * 1000, // 5 minutos\r\n    storageKey\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}