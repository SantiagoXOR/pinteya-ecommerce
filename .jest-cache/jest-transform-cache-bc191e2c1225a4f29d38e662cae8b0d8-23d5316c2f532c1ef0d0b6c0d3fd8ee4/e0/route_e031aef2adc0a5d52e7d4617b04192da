1aa282a0b98e9db27af33827052310cc
// Configuraci√≥n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_1nlw09ezmi() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\get-authenticated-user\\route.ts";
  var hash = "df0e8ce066d2b1b9ea037d49d9a484d2818bdca9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\get-authenticated-user\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 19
        },
        end: {
          line: 21,
          column: 61
        }
      },
      "8": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 54
        }
      },
      "9": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 24
        }
      },
      "10": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "11": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 94
        }
      },
      "12": {
        start: {
          line: 28,
          column: 27
        },
        end: {
          line: 28,
          column: 78
        }
      },
      "13": {
        start: {
          line: 30,
          column: 28
        },
        end: {
          line: 30,
          column: 80
        }
      },
      "14": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 39,
          column: 9
        }
      },
      "15": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 51
        }
      },
      "16": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 38,
          column: 14
        }
      },
      "17": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 44,
          column: 11
        }
      },
      "18": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 84,
          column: 11
        }
      },
      "19": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 70
        }
      },
      "20": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 95,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 18
          }
        },
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 97,
            column: 1
          }
        },
        line: 24
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 82,
            column: 34
          },
          end: {
            line: 82,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 34
          },
          end: {
            line: 82,
            column: 72
          }
        }, {
          start: {
            line: 82,
            column: 76
          },
          end: {
            line: 82,
            column: 94
          }
        }],
        line: 82
      },
      "1": {
        loc: {
          start: {
            line: 91,
            column: 30
          },
          end: {
            line: 91,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 91,
            column: 55
          },
          end: {
            line: 91,
            column: 68
          }
        }, {
          start: {
            line: 91,
            column: 71
          },
          end: {
            line: 91,
            column: 86
          }
        }],
        line: 91
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\get-authenticated-user\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getAuthenticatedUser, getAuthenticatedAdmin } from '@/lib/auth/admin-auth';\r\nimport { auth } from '@/lib/auth/config';\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    console.log('\uD83D\uDD0D Debug getAuthenticatedUser: Testing MIGRATED authentication methods');\r\n\r\n    // Test 1: Funci\xF3n migrada getAuthenticatedUser\r\n    const userResult = await getAuthenticatedUser(request);\r\n\r\n    // Test 2: Funci\xF3n nueva getAuthenticatedAdmin\r\n    const adminResult = await getAuthenticatedAdmin(request);\r\n\r\n    // Test 3: auth() directo\r\n    let directAuth;\r\n    try {\r\n      directAuth = await auth();\r\n    } catch (authError) {\r\n      directAuth = { error: authError.message };\r\n    }\r\n\r\n    console.log('\uD83D\uDD0D Resultados de migraci\xF3n:', {\r\n      userResult,\r\n      adminResult,\r\n      directAuth\r\n    });\r\n\r\n    return NextResponse.json({\r\n      success: !!userResult.userId,\r\n      migration: {\r\n        status: 'COMPLETED',\r\n        version: '2.0',\r\n        methods: {\r\n          getAuthenticatedUser: {\r\n            userId: userResult.userId,\r\n            sessionId: userResult.sessionId,\r\n            isAdmin: userResult.isAdmin,\r\n            error: userResult.error,\r\n            usesHeaders: false,\r\n            usesOfficialClerkMethods: true\r\n          },\r\n          getAuthenticatedAdmin: {\r\n            userId: adminResult.userId,\r\n            sessionId: adminResult.sessionId,\r\n            isAdmin: adminResult.isAdmin,\r\n            error: adminResult.error,\r\n            status: adminResult.status\r\n          },\r\n          directAuth: {\r\n            userId: directAuth.userId,\r\n            sessionId: directAuth.sessionId,\r\n            error: directAuth.error\r\n          }\r\n        }\r\n      },\r\n      debug: {\r\n        migrationNotes: [\r\n          '\u2705 MIGRADO: Ya no usa headers x-clerk-user-id',\r\n          '\u2705 MIGRADO: Usa getAuth(req) y auth() oficiales',\r\n          '\u2705 NUEVO: Funci\xF3n getAuthenticatedAdmin() combinada',\r\n          '\u2705 NUEVO: Detecci\xF3n autom\xE1tica de admin desde token',\r\n          '\u26A0\uFE0F DEPRECADO: Fallbacks a headers eliminados'\r\n        ],\r\n        hasRequest: !!request,\r\n        deprecatedHeader: request.headers.get('x-clerk-user-id') || 'Not used anymore'\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('\uD83D\uDD0D Debug getAuthenticatedUser: Error:', error);\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Unexpected error',\r\n      debug: {\r\n        errorMessage: error instanceof Error ? error.message : 'Unknown error'\r\n      }\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "runtime", "request", "console", "log", "userResult", "getAuthenticatedUser", "adminResult", "getAuthenticatedAdmin", "directAuth", "auth", "authError", "error", "message", "NextResponse", "json", "success", "userId", "migration", "status", "version", "methods", "sessionId", "isAdmin", "usesHeaders", "usesOfficialClerkMethods", "debug", "migrationNotes", "hasRequest", "deprecatedHeader", "headers", "get", "errorMessage", "Error"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QAOfA;eAAAA;;QANTC;eAAAA;;;wBAE6B;2BACkB;wBACvC;AAJd,MAAMA,UAAU;AAMhB,eAAeD,IAAIE,OAAoB;IAC5C,IAAI;QACFC,QAAQC,GAAG,CAAC;QAEZ,+CAA+C;QAC/C,MAAMC,aAAa,MAAMC,IAAAA,+BAAoB,EAACJ;QAE9C,8CAA8C;QAC9C,MAAMK,cAAc,MAAMC,IAAAA,gCAAqB,EAACN;QAEhD,yBAAyB;QACzB,IAAIO;QACJ,IAAI;YACFA,aAAa,MAAMC,IAAAA,YAAI;QACzB,EAAE,OAAOC,WAAW;YAClBF,aAAa;gBAAEG,OAAOD,UAAUE,OAAO;YAAC;QAC1C;QAEAV,QAAQC,GAAG,CAAC,+BAA+B;YACzCC;YACAE;YACAE;QACF;QAEA,OAAOK,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS,CAAC,CAACX,WAAWY,MAAM;YAC5BC,WAAW;gBACTC,QAAQ;gBACRC,SAAS;gBACTC,SAAS;oBACPf,sBAAsB;wBACpBW,QAAQZ,WAAWY,MAAM;wBACzBK,WAAWjB,WAAWiB,SAAS;wBAC/BC,SAASlB,WAAWkB,OAAO;wBAC3BX,OAAOP,WAAWO,KAAK;wBACvBY,aAAa;wBACbC,0BAA0B;oBAC5B;oBACAjB,uBAAuB;wBACrBS,QAAQV,YAAYU,MAAM;wBAC1BK,WAAWf,YAAYe,SAAS;wBAChCC,SAAShB,YAAYgB,OAAO;wBAC5BX,OAAOL,YAAYK,KAAK;wBACxBO,QAAQZ,YAAYY,MAAM;oBAC5B;oBACAV,YAAY;wBACVQ,QAAQR,WAAWQ,MAAM;wBACzBK,WAAWb,WAAWa,SAAS;wBAC/BV,OAAOH,WAAWG,KAAK;oBACzB;gBACF;YACF;YACAc,OAAO;gBACLC,gBAAgB;oBACd;oBACA;oBACA;oBACA;oBACA;iBACD;gBACDC,YAAY,CAAC,CAAC1B;gBACd2B,kBAAkB3B,QAAQ4B,OAAO,CAACC,GAAG,CAAC,sBAAsB;YAC9D;QACF;IAEF,EAAE,OAAOnB,OAAO;QACdT,QAAQS,KAAK,CAAC,yCAAyCA;QACvD,OAAOE,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTJ,OAAO;YACPc,OAAO;gBACLM,cAAcpB,iBAAiBqB,QAAQrB,MAAMC,OAAO,GAAG;YACzD;QACF,GAAG;YAAEM,QAAQ;QAAI;IACnB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "df0e8ce066d2b1b9ea037d49d9a484d2818bdca9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1nlw09ezmi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1nlw09ezmi();
cov_1nlw09ezmi().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1nlw09ezmi().f[0]++;
  cov_1nlw09ezmi().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1nlw09ezmi().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1nlw09ezmi().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_1nlw09ezmi().f[1]++;
    cov_1nlw09ezmi().s[4]++;
    return GET;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_1nlw09ezmi().f[2]++;
    cov_1nlw09ezmi().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_1nlw09ezmi().s[6]++, require("next/server"));
const _adminauth =
/* istanbul ignore next */
(cov_1nlw09ezmi().s[7]++, require("../../../../lib/auth/admin-auth"));
const _config =
/* istanbul ignore next */
(cov_1nlw09ezmi().s[8]++, require("../../../../lib/auth/config"));
const runtime =
/* istanbul ignore next */
(cov_1nlw09ezmi().s[9]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_1nlw09ezmi().f[3]++;
  cov_1nlw09ezmi().s[10]++;
  try {
    /* istanbul ignore next */
    cov_1nlw09ezmi().s[11]++;
    console.log('üîç Debug getAuthenticatedUser: Testing MIGRATED authentication methods');
    // Test 1: Funci√≥n migrada getAuthenticatedUser
    const userResult =
    /* istanbul ignore next */
    (cov_1nlw09ezmi().s[12]++, await (0, _adminauth.getAuthenticatedUser)(request));
    // Test 2: Funci√≥n nueva getAuthenticatedAdmin
    const adminResult =
    /* istanbul ignore next */
    (cov_1nlw09ezmi().s[13]++, await (0, _adminauth.getAuthenticatedAdmin)(request));
    // Test 3: auth() directo
    let directAuth;
    /* istanbul ignore next */
    cov_1nlw09ezmi().s[14]++;
    try {
      /* istanbul ignore next */
      cov_1nlw09ezmi().s[15]++;
      directAuth = await (0, _config.auth)();
    } catch (authError) {
      /* istanbul ignore next */
      cov_1nlw09ezmi().s[16]++;
      directAuth = {
        error: authError.message
      };
    }
    /* istanbul ignore next */
    cov_1nlw09ezmi().s[17]++;
    console.log('üîç Resultados de migraci√≥n:', {
      userResult,
      adminResult,
      directAuth
    });
    /* istanbul ignore next */
    cov_1nlw09ezmi().s[18]++;
    return _server.NextResponse.json({
      success: !!userResult.userId,
      migration: {
        status: 'COMPLETED',
        version: '2.0',
        methods: {
          getAuthenticatedUser: {
            userId: userResult.userId,
            sessionId: userResult.sessionId,
            isAdmin: userResult.isAdmin,
            error: userResult.error,
            usesHeaders: false,
            usesOfficialClerkMethods: true
          },
          getAuthenticatedAdmin: {
            userId: adminResult.userId,
            sessionId: adminResult.sessionId,
            isAdmin: adminResult.isAdmin,
            error: adminResult.error,
            status: adminResult.status
          },
          directAuth: {
            userId: directAuth.userId,
            sessionId: directAuth.sessionId,
            error: directAuth.error
          }
        }
      },
      debug: {
        migrationNotes: ['‚úÖ MIGRADO: Ya no usa headers x-clerk-user-id', '‚úÖ MIGRADO: Usa getAuth(req) y auth() oficiales', '‚úÖ NUEVO: Funci√≥n getAuthenticatedAdmin() combinada', '‚úÖ NUEVO: Detecci√≥n autom√°tica de admin desde token', '‚ö†Ô∏è DEPRECADO: Fallbacks a headers eliminados'],
        hasRequest: !!request,
        deprecatedHeader:
        /* istanbul ignore next */
        (cov_1nlw09ezmi().b[0][0]++, request.headers.get('x-clerk-user-id')) ||
        /* istanbul ignore next */
        (cov_1nlw09ezmi().b[0][1]++, 'Not used anymore')
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1nlw09ezmi().s[19]++;
    console.error('üîç Debug getAuthenticatedUser: Error:', error);
    /* istanbul ignore next */
    cov_1nlw09ezmi().s[20]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Unexpected error',
      debug: {
        errorMessage: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1nlw09ezmi().b[1][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1nlw09ezmi().b[1][1]++, 'Unknown error')
      }
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,