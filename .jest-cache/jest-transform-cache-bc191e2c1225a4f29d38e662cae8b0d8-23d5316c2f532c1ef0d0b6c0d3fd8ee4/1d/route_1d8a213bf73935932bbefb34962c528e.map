{"version":3,"names":["cov_13rvoa2ej2","actualCoverage","s","GET","f","POST","runtime","supabaseUrl","process","env","NEXT_PUBLIC_SUPABASE_URL","supabaseServiceKey","SUPABASE_SERVICE_ROLE_KEY","supabaseAdmin","_supabasejs","createClient","auth","autoRefreshToken","persistSession","request","console","log","authResult","_adminauth","checkCRUDPermissions","allowed","b","error","_server","NextResponse","json","code","status","body","JSON","stringify","requiredFields","field","productData","name","description","short_description","price","parseFloat","discounted_price","compare_price","cost_price","stock","parseInt","low_stock_threshold","category_id","is_active","track_inventory","allow_backorders","slug","toLowerCase","replace","trim","Date","now","created_at","toISOString","updated_at","data","category","categoryError","from","select","eq","single","product","insert","details","message","success","Error","products","order","ascending","total","length"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products-simple\\route.ts"],"sourcesContent":["// Configuraci√≥n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API SIMPLIFICADA DE PRODUCTOS ADMIN\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { checkCRUDPermissions } from '@/lib/auth/admin-auth';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\n// Configuraci√≥n de Supabase con service key para operaciones admin\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;\r\n\r\nconst supabaseAdmin = createClient(supabaseUrl, supabaseServiceKey, {\r\n  auth: {\r\n    autoRefreshToken: false,\r\n    persistSession: false\r\n  }\r\n});\r\n\r\n/**\r\n * POST /api/admin/products-simple\r\n * Crear nuevo producto (SIMPLIFICADO - SIN VALIDACIONES ENTERPRISE)\r\n */\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    console.log('üîß Products Simple API: Creating product...');\r\n\r\n    // Verificar autenticaci√≥n b√°sica\r\n    const authResult = await checkCRUDPermissions('create', 'products');\r\n\r\n    if (!authResult.allowed) {\r\n      console.log('‚ùå Auth failed:', authResult.error);\r\n      return NextResponse.json(\r\n        {\r\n          error: authResult.error || 'Autenticaci√≥n requerida',\r\n          code: 'AUTH_ERROR'\r\n        },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    console.log('‚úÖ Auth successful');\r\n\r\n    const body = await request.json();\r\n    console.log('üìù Request body:', JSON.stringify(body, null, 2));\r\n\r\n    // Validaci√≥n b√°sica de campos requeridos\r\n    const requiredFields = ['name', 'price'];\r\n    for (const field of requiredFields) {\r\n      if (!body[field]) {\r\n        return NextResponse.json(\r\n          {\r\n            error: `Campo requerido: ${field}`,\r\n            code: 'MISSING_FIELD'\r\n          },\r\n          { status: 400 }\r\n        );\r\n      }\r\n    }\r\n\r\n    // Mapear datos del frontend al formato de base de datos\r\n    const productData = {\r\n      name: body.name,\r\n      description: body.description || '',\r\n      short_description: body.short_description || '',\r\n      price: parseFloat(body.price),\r\n      discounted_price: body.compare_price ? parseFloat(body.compare_price) : null,\r\n      cost_price: body.cost_price ? parseFloat(body.cost_price) : null,\r\n      stock: parseInt(body.stock) || 0,\r\n      low_stock_threshold: parseInt(body.low_stock_threshold) || 5,\r\n      category_id: body.category_id ? parseInt(body.category_id) : null,\r\n      status: body.status || 'draft',\r\n      is_active: body.status === 'active',\r\n      track_inventory: body.track_inventory !== false,\r\n      allow_backorders: body.allow_backorders === true,\r\n      // Generar slug autom√°tico\r\n      slug: body.name\r\n        .toLowerCase()\r\n        .replace(/[^a-z0-9\\s-]/g, '')\r\n        .replace(/\\s+/g, '-')\r\n        .replace(/-+/g, '-')\r\n        .trim() + '-' + Date.now(),\r\n      created_at: new Date().toISOString(),\r\n      updated_at: new Date().toISOString()\r\n    };\r\n\r\n    console.log('üîÑ Mapped product data:', JSON.stringify(productData, null, 2));\r\n\r\n    // Verificar categor√≠a si se proporciona\r\n    if (productData.category_id) {\r\n      const { data: category, error: categoryError } = await supabaseAdmin\r\n        .from('categories')\r\n        .select('id')\r\n        .eq('id', productData.category_id)\r\n        .single();\r\n\r\n      if (categoryError || !category) {\r\n        console.log('‚ùå Category not found:', categoryError);\r\n        return NextResponse.json(\r\n          { \r\n            error: 'Categor√≠a no encontrada',\r\n            code: 'CATEGORY_NOT_FOUND'\r\n          },\r\n          { status: 400 }\r\n        );\r\n      }\r\n    }\r\n\r\n    // Crear producto usando Supabase Admin (bypassing RLS)\r\n    const { data: product, error } = await supabaseAdmin\r\n      .from('products')\r\n      .insert(productData)\r\n      .select(`\r\n        id,\r\n        name,\r\n        description,\r\n        price,\r\n        stock,\r\n        category_id,\r\n        status,\r\n        created_at,\r\n        updated_at\r\n      `)\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('‚ùå Error creating product:', error);\r\n      return NextResponse.json(\r\n        { \r\n          error: 'Error al crear producto',\r\n          code: 'DATABASE_ERROR',\r\n          details: error.message\r\n        },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    console.log('‚úÖ Product created successfully:', product);\r\n\r\n    return NextResponse.json(\r\n      {\r\n        success: true,\r\n        message: 'Producto creado exitosamente',\r\n        data: product\r\n      },\r\n      { status: 201 }\r\n    );\r\n\r\n  } catch (error) {\r\n    console.error('‚ùå Error in POST /api/admin/products-simple:', error);\r\n\r\n    return NextResponse.json(\r\n      {\r\n        error: 'Error interno del servidor',\r\n        code: 'INTERNAL_ERROR',\r\n        details: error instanceof Error ? error.message : 'Unknown error'\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * GET /api/admin/products-simple\r\n * Obtener lista de productos (SIMPLIFICADO)\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    console.log('üîß Products Simple API: Getting products...');\r\n\r\n    // Verificar autenticaci√≥n b√°sica\r\n    const authResult = await checkCRUDPermissions('read', 'products');\r\n\r\n    if (!authResult.allowed) {\r\n      return NextResponse.json(\r\n        {\r\n          error: authResult.error || 'Autenticaci√≥n requerida',\r\n          code: 'AUTH_ERROR'\r\n        },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Obtener productos usando Supabase Admin\r\n    const { data: products, error } = await supabaseAdmin\r\n      .from('products')\r\n      .select(`\r\n        id,\r\n        name,\r\n        description,\r\n        price,\r\n        stock,\r\n        category_id,\r\n        status,\r\n        created_at,\r\n        updated_at,\r\n        categories (\r\n          id,\r\n          name\r\n        )\r\n      `)\r\n      .order('created_at', { ascending: false });\r\n\r\n    if (error) {\r\n      console.error('‚ùå Error fetching products:', error);\r\n      return NextResponse.json(\r\n        { \r\n          error: 'Error al obtener productos',\r\n          code: 'DATABASE_ERROR'\r\n        },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json(\r\n      {\r\n        success: true,\r\n        data: products || [],\r\n        total: products?.length || 0\r\n      },\r\n      { status: 200 }\r\n    );\r\n\r\n  } catch (error) {\r\n    console.error('‚ùå Error in GET /api/admin/products-simple:', error);\r\n\r\n    return NextResponse.json(\r\n      {\r\n        error: 'Error interno del servidor',\r\n        code: 'INTERNAL_ERROR'\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}