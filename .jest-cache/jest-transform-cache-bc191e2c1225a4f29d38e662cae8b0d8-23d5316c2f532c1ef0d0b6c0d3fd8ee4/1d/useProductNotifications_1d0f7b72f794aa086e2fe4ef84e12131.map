{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useProductNotifications.ts"],"sourcesContent":["/**\n * Hook de Notificaciones para Panel Administrativo de Productos\n * Basado en mejores pr√°cticas de e-commerce (Shopify, WooCommerce)\n */\n\nimport { useCallback } from 'react'\nimport { toast } from '@/components/ui/use-toast'\n\n// ===================================\n// TIPOS\n// ===================================\n\nexport interface ProductNotificationOptions {\n  productId?: number | string\n  productName?: string\n  sku?: string\n  price?: number\n  stock?: number\n  duration?: number\n  changes?: string\n}\n\nexport interface BulkProductActionOptions {\n  selectedCount: number\n  action: string\n  duration?: number\n  affectedProducts?: string[]\n}\n\nexport interface ProductExportOptions {\n  format: 'CSV' | 'Excel' | 'JSON'\n  recordCount: number\n  duration?: number\n}\n\nexport interface ProductImportOptions {\n  format: 'CSV' | 'Excel' | 'JSON'\n  recordCount: number\n  successCount: number\n  errorCount: number\n  duration?: number\n}\n\nexport interface InventoryNotificationOptions {\n  productName: string\n  currentStock: number\n  threshold?: number\n  action?: 'low_stock' | 'out_of_stock' | 'restocked'\n  duration?: number\n}\n\n// ===================================\n// HOOK PRINCIPAL\n// ===================================\n\nexport const useProductNotifications = () => {\n  // ===================================\n  // NOTIFICACIONES DE √âXITO - CRUD\n  // ===================================\n\n  const showProductCreated = useCallback((options: ProductNotificationOptions) => {\n    const { productId, productName, sku, price } = options\n\n    return toast({\n      variant: 'success',\n      title: '‚úÖ Producto creado exitosamente',\n      description: `${productName || 'Producto'} ${sku ? `(${sku})` : ''} ${price ? `- $${price.toLocaleString()}` : ''} ha sido creado`,\n      duration: 4000,\n    })\n  }, [])\n\n  const showProductUpdated = useCallback((options: ProductNotificationOptions) => {\n    const { productId, productName, changes } = options\n\n    return toast({\n      variant: 'success',\n      title: '‚úÖ Producto actualizado',\n      description: `${productName || `Producto #${productId}`} se actualiz√≥ correctamente${changes ? ` (${changes})` : ''}`,\n      duration: 3000,\n    })\n  }, [])\n\n  const showProductDeleted = useCallback((options: ProductNotificationOptions) => {\n    const { productName, productId } = options\n\n    return toast({\n      variant: 'success',\n      title: 'üóëÔ∏è Producto eliminado',\n      description: `${productName || `Producto #${productId}`} ha sido eliminado exitosamente`,\n      duration: 3000,\n    })\n  }, [])\n\n  const showProductDuplicated = useCallback((options: ProductNotificationOptions) => {\n    const { productName, productId } = options\n\n    return toast({\n      variant: 'success',\n      title: 'üìã Producto duplicado',\n      description: `Se cre√≥ una copia de ${productName || `Producto #${productId}`}`,\n      duration: 3000,\n    })\n  }, [])\n\n  // ===================================\n  // NOTIFICACIONES DE ESTADO\n  // ===================================\n\n  const showProductStatusChanged = useCallback((productName: string, newStatus: string) => {\n    const statusLabels: Record<string, string> = {\n      active: 'Activo',\n      inactive: 'Inactivo',\n      draft: 'Borrador',\n      archived: 'Archivado',\n    }\n\n    return toast({\n      variant: 'success',\n      title: 'üîÑ Estado actualizado',\n      description: `${productName} cambi√≥ a: ${statusLabels[newStatus] || newStatus}`,\n      duration: 3000,\n    })\n  }, [])\n\n  // ===================================\n  // NOTIFICACIONES DE INVENTARIO\n  // ===================================\n\n  const showInventoryUpdated = useCallback((options: ProductNotificationOptions) => {\n    const { productName, stock } = options\n\n    return toast({\n      variant: 'success',\n      title: 'üì¶ Inventario actualizado',\n      description: `${productName}: ${stock} unidades en stock`,\n      duration: 3000,\n    })\n  }, [])\n\n  const showLowStockAlert = useCallback((options: InventoryNotificationOptions) => {\n    const { productName, currentStock, threshold } = options\n\n    return toast({\n      variant: 'warning',\n      title: '‚ö†Ô∏è Stock bajo',\n      description: `${productName} tiene solo ${currentStock} unidades${threshold ? ` (m√≠nimo: ${threshold})` : ''}`,\n      duration: 6000,\n    })\n  }, [])\n\n  const showOutOfStockAlert = useCallback((productName: string) => {\n    return toast({\n      variant: 'destructive',\n      title: 'üö´ Sin stock',\n      description: `${productName} est√° agotado`,\n      duration: 6000,\n    })\n  }, [])\n\n  const showRestockedAlert = useCallback((options: InventoryNotificationOptions) => {\n    const { productName, currentStock } = options\n\n    return toast({\n      variant: 'success',\n      title: 'üìà Producto reabastecido',\n      description: `${productName} ahora tiene ${currentStock} unidades en stock`,\n      duration: 4000,\n    })\n  }, [])\n\n  // ===================================\n  // NOTIFICACIONES DE OPERACIONES MASIVAS\n  // ===================================\n\n  const showBulkActionSuccess = useCallback((options: BulkProductActionOptions) => {\n    const { selectedCount, action } = options\n\n    const actionLabels: Record<string, string> = {\n      delete: 'eliminaci√≥n',\n      activate: 'activaci√≥n',\n      deactivate: 'desactivaci√≥n',\n      archive: 'archivado',\n      update_price: 'actualizaci√≥n de precios',\n      update_category: 'cambio de categor√≠a',\n      update_stock: 'actualizaci√≥n de inventario',\n    }\n\n    return toast({\n      variant: 'success',\n      title: '‚úÖ Acci√≥n en lote completada',\n      description: `${actionLabels[action] || action} aplicada a ${selectedCount} productos exitosamente`,\n      duration: 4000,\n    })\n  }, [])\n\n  const showBulkActionPartial = useCallback(\n    (successCount: number, errorCount: number, action: string) => {\n      return toast({\n        variant: 'warning',\n        title: '‚ö†Ô∏è Acci√≥n parcialmente completada',\n        description: `${action}: ${successCount} exitosos, ${errorCount} con errores`,\n        duration: 5000,\n      })\n    },\n    []\n  )\n\n  // ===================================\n  // NOTIFICACIONES DE IMPORTACI√ìN/EXPORTACI√ìN\n  // ===================================\n\n  const showExportSuccess = useCallback((options: ProductExportOptions) => {\n    const { format, recordCount } = options\n\n    return toast({\n      variant: 'success',\n      title: 'üìä Exportaci√≥n completada',\n      description: `${recordCount} productos exportados en formato ${format}`,\n      duration: 5000,\n    })\n  }, [])\n\n  const showImportSuccess = useCallback((options: ProductImportOptions) => {\n    const { format, successCount, errorCount } = options\n\n    if (errorCount === 0) {\n      return toast({\n        variant: 'success',\n        title: 'üì• Importaci√≥n completada',\n        description: `${successCount} productos importados exitosamente desde ${format}`,\n        duration: 5000,\n      })\n    } else {\n      return toast({\n        variant: 'warning',\n        title: 'üì• Importaci√≥n completada con errores',\n        description: `${successCount} productos importados, ${errorCount} con errores`,\n        duration: 6000,\n      })\n    }\n  }, [])\n\n  // ===================================\n  // NOTIFICACIONES DE PROCESAMIENTO\n  // ===================================\n\n  const showProcessingInfo = useCallback((message: string) => {\n    return toast({\n      variant: 'info',\n      title: '‚è≥ Procesando...',\n      description: message,\n      duration: 2000,\n    })\n  }, [])\n\n  const showDataRefreshed = useCallback((recordCount: number) => {\n    return toast({\n      variant: 'success',\n      title: 'üîÑ Datos actualizados',\n      description: `${recordCount} productos cargados exitosamente`,\n      duration: 2000,\n    })\n  }, [])\n\n  // ===================================\n  // NOTIFICACIONES DE ERROR\n  // ===================================\n\n  const showProductCreationError = useCallback((error: string) => {\n    return toast({\n      variant: 'destructive',\n      title: '‚ùå Error al crear producto',\n      description: error || 'No se pudo crear el producto. Intenta nuevamente.',\n      duration: 6000,\n    })\n  }, [])\n\n  const showProductUpdateError = useCallback((error: string, productName?: string) => {\n    return toast({\n      variant: 'destructive',\n      title: '‚ùå Error al actualizar producto',\n      description: `${productName ? `${productName}: ` : ''}${error || 'No se pudo actualizar el producto'}`,\n      duration: 6000,\n    })\n  }, [])\n\n  const showProductDeleteError = useCallback((error: string, productName?: string) => {\n    return toast({\n      variant: 'destructive',\n      title: '‚ùå Error al eliminar producto',\n      description: `${productName ? `${productName}: ` : ''}${error || 'No se pudo eliminar el producto'}`,\n      duration: 6000,\n    })\n  }, [])\n\n  const showBulkActionError = useCallback((action: string, error: string) => {\n    return toast({\n      variant: 'destructive',\n      title: '‚ùå Error en acci√≥n en lote',\n      description: `No se pudo completar ${action}: ${error}`,\n      duration: 6000,\n    })\n  }, [])\n\n  const showExportError = useCallback((format: string, error: string) => {\n    return toast({\n      variant: 'destructive',\n      title: '‚ùå Error en exportaci√≥n',\n      description: `No se pudo exportar en formato ${format}: ${error}`,\n      duration: 6000,\n    })\n  }, [])\n\n  const showImportError = useCallback((format: string, error: string) => {\n    return toast({\n      variant: 'destructive',\n      title: '‚ùå Error en importaci√≥n',\n      description: `No se pudo importar desde ${format}: ${error}`,\n      duration: 6000,\n    })\n  }, [])\n\n  const showNetworkError = useCallback((action: string) => {\n    return toast({\n      variant: 'destructive',\n      title: 'üåê Error de conexi√≥n',\n      description: `No se pudo ${action}. Verifica tu conexi√≥n a internet.`,\n      duration: 6000,\n    })\n  }, [])\n\n  // ===================================\n  // NOTIFICACIONES DE ADVERTENCIA\n  // ===================================\n\n  const showValidationWarning = useCallback((message: string) => {\n    return toast({\n      variant: 'warning',\n      title: '‚ö†Ô∏è Datos incompletos',\n      description: message,\n      duration: 5000,\n    })\n  }, [])\n\n  const showDuplicateSkuWarning = useCallback((sku: string) => {\n    return toast({\n      variant: 'warning',\n      title: '‚ö†Ô∏è SKU duplicado',\n      description: `El SKU \"${sku}\" ya existe. Por favor, usa uno diferente.`,\n      duration: 5000,\n    })\n  }, [])\n\n  const showImageUploadWarning = useCallback((message: string) => {\n    return toast({\n      variant: 'warning',\n      title: '‚ö†Ô∏è Problema con im√°genes',\n      description: message,\n      duration: 5000,\n    })\n  }, [])\n\n  const showVariantWarning = useCallback((message: string) => {\n    return toast({\n      variant: 'warning',\n      title: '‚ö†Ô∏è Problema con variantes',\n      description: message,\n      duration: 5000,\n    })\n  }, [])\n\n  // ===================================\n  // NOTIFICACIONES DE INFORMACI√ìN\n  // ===================================\n\n  const showInfoMessage = useCallback((title: string, message: string) => {\n    return toast({\n      variant: 'info',\n      title: `‚ÑπÔ∏è ${title}`,\n      description: message,\n      duration: 4000,\n    })\n  }, [])\n\n  // ===================================\n  // RETURN DEL HOOK\n  // ===================================\n\n  return {\n    // CRUD Operations\n    showProductCreated,\n    showProductUpdated,\n    showProductDeleted,\n    showProductDuplicated,\n    showProductStatusChanged,\n\n    // Inventory\n    showInventoryUpdated,\n    showLowStockAlert,\n    showOutOfStockAlert,\n    showRestockedAlert,\n\n    // Bulk Operations\n    showBulkActionSuccess,\n    showBulkActionPartial,\n\n    // Import/Export\n    showExportSuccess,\n    showImportSuccess,\n\n    // Processing\n    showProcessingInfo,\n    showDataRefreshed,\n\n    // Errors\n    showProductCreationError,\n    showProductUpdateError,\n    showProductDeleteError,\n    showBulkActionError,\n    showExportError,\n    showImportError,\n    showNetworkError,\n\n    // Warnings\n    showValidationWarning,\n    showDuplicateSkuWarning,\n    showImageUploadWarning,\n    showVariantWarning,\n\n    // Info\n    showInfoMessage,\n  }\n}\n\n// ===================================\n// EXPORT DEFAULT\n// ===================================\n\nexport default useProductNotifications\n"],"names":["useProductNotifications","showProductCreated","useCallback","options","productId","productName","sku","price","toast","variant","title","description","toLocaleString","duration","showProductUpdated","changes","showProductDeleted","showProductDuplicated","showProductStatusChanged","newStatus","statusLabels","active","inactive","draft","archived","showInventoryUpdated","stock","showLowStockAlert","currentStock","threshold","showOutOfStockAlert","showRestockedAlert","showBulkActionSuccess","selectedCount","action","actionLabels","delete","activate","deactivate","archive","update_price","update_category","update_stock","showBulkActionPartial","successCount","errorCount","showExportSuccess","format","recordCount","showImportSuccess","showProcessingInfo","message","showDataRefreshed","showProductCreationError","error","showProductUpdateError","showProductDeleteError","showBulkActionError","showExportError","showImportError","showNetworkError","showValidationWarning","showDuplicateSkuWarning","showImageUploadWarning","showVariantWarning","showInfoMessage"],"mappings":"AAAA;;;CAGC;;;;;;;;;;;QA+aD,sCAAsC;IACtC,iBAAiB;IACjB,sCAAsC;IAEtC;eAAA;;QA/XaA;eAAAA;;;uBAlDe;0BACN;AAiDf,MAAMA,0BAA0B;IACrC,sCAAsC;IACtC,iCAAiC;IACjC,sCAAsC;IAEtC,MAAMC,qBAAqBC,IAAAA,kBAAW,EAAC,CAACC;QACtC,MAAM,EAAEC,SAAS,EAAEC,WAAW,EAAEC,GAAG,EAAEC,KAAK,EAAE,GAAGJ;QAE/C,OAAOK,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO;YACPC,aAAa,GAAGN,eAAe,WAAW,CAAC,EAAEC,MAAM,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,EAAEC,QAAQ,CAAC,GAAG,EAAEA,MAAMK,cAAc,IAAI,GAAG,GAAG,eAAe,CAAC;YAClIC,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,MAAMC,qBAAqBZ,IAAAA,kBAAW,EAAC,CAACC;QACtC,MAAM,EAAEC,SAAS,EAAEC,WAAW,EAAEU,OAAO,EAAE,GAAGZ;QAE5C,OAAOK,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO;YACPC,aAAa,GAAGN,eAAe,CAAC,UAAU,EAAED,WAAW,CAAC,2BAA2B,EAAEW,UAAU,CAAC,EAAE,EAAEA,QAAQ,CAAC,CAAC,GAAG,IAAI;YACrHF,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,MAAMG,qBAAqBd,IAAAA,kBAAW,EAAC,CAACC;QACtC,MAAM,EAAEE,WAAW,EAAED,SAAS,EAAE,GAAGD;QAEnC,OAAOK,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO;YACPC,aAAa,GAAGN,eAAe,CAAC,UAAU,EAAED,WAAW,CAAC,+BAA+B,CAAC;YACxFS,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,MAAMI,wBAAwBf,IAAAA,kBAAW,EAAC,CAACC;QACzC,MAAM,EAAEE,WAAW,EAAED,SAAS,EAAE,GAAGD;QAEnC,OAAOK,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO;YACPC,aAAa,CAAC,qBAAqB,EAAEN,eAAe,CAAC,UAAU,EAAED,WAAW,EAAE;YAC9ES,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,sCAAsC;IACtC,2BAA2B;IAC3B,sCAAsC;IAEtC,MAAMK,2BAA2BhB,IAAAA,kBAAW,EAAC,CAACG,aAAqBc;QACjE,MAAMC,eAAuC;YAC3CC,QAAQ;YACRC,UAAU;YACVC,OAAO;YACPC,UAAU;QACZ;QAEA,OAAOhB,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO;YACPC,aAAa,GAAGN,YAAY,WAAW,EAAEe,YAAY,CAACD,UAAU,IAAIA,WAAW;YAC/EN,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,sCAAsC;IACtC,+BAA+B;IAC/B,sCAAsC;IAEtC,MAAMY,uBAAuBvB,IAAAA,kBAAW,EAAC,CAACC;QACxC,MAAM,EAAEE,WAAW,EAAEqB,KAAK,EAAE,GAAGvB;QAE/B,OAAOK,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO;YACPC,aAAa,GAAGN,YAAY,EAAE,EAAEqB,MAAM,kBAAkB,CAAC;YACzDb,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,MAAMc,oBAAoBzB,IAAAA,kBAAW,EAAC,CAACC;QACrC,MAAM,EAAEE,WAAW,EAAEuB,YAAY,EAAEC,SAAS,EAAE,GAAG1B;QAEjD,OAAOK,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO;YACPC,aAAa,GAAGN,YAAY,YAAY,EAAEuB,aAAa,SAAS,EAAEC,YAAY,CAAC,UAAU,EAAEA,UAAU,CAAC,CAAC,GAAG,IAAI;YAC9GhB,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,MAAMiB,sBAAsB5B,IAAAA,kBAAW,EAAC,CAACG;QACvC,OAAOG,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO;YACPC,aAAa,GAAGN,YAAY,aAAa,CAAC;YAC1CQ,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,MAAMkB,qBAAqB7B,IAAAA,kBAAW,EAAC,CAACC;QACtC,MAAM,EAAEE,WAAW,EAAEuB,YAAY,EAAE,GAAGzB;QAEtC,OAAOK,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO;YACPC,aAAa,GAAGN,YAAY,aAAa,EAAEuB,aAAa,kBAAkB,CAAC;YAC3Ef,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,sCAAsC;IACtC,wCAAwC;IACxC,sCAAsC;IAEtC,MAAMmB,wBAAwB9B,IAAAA,kBAAW,EAAC,CAACC;QACzC,MAAM,EAAE8B,aAAa,EAAEC,MAAM,EAAE,GAAG/B;QAElC,MAAMgC,eAAuC;YAC3CC,QAAQ;YACRC,UAAU;YACVC,YAAY;YACZC,SAAS;YACTC,cAAc;YACdC,iBAAiB;YACjBC,cAAc;QAChB;QAEA,OAAOlC,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO;YACPC,aAAa,GAAGwB,YAAY,CAACD,OAAO,IAAIA,OAAO,YAAY,EAAED,cAAc,uBAAuB,CAAC;YACnGpB,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,MAAM8B,wBAAwBzC,IAAAA,kBAAW,EACvC,CAAC0C,cAAsBC,YAAoBX;QACzC,OAAO1B,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO;YACPC,aAAa,GAAGuB,OAAO,EAAE,EAAEU,aAAa,WAAW,EAAEC,WAAW,YAAY,CAAC;YAC7EhC,UAAU;QACZ;IACF,GACA,EAAE;IAGJ,sCAAsC;IACtC,4CAA4C;IAC5C,sCAAsC;IAEtC,MAAMiC,oBAAoB5C,IAAAA,kBAAW,EAAC,CAACC;QACrC,MAAM,EAAE4C,MAAM,EAAEC,WAAW,EAAE,GAAG7C;QAEhC,OAAOK,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO;YACPC,aAAa,GAAGqC,YAAY,iCAAiC,EAAED,QAAQ;YACvElC,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,MAAMoC,oBAAoB/C,IAAAA,kBAAW,EAAC,CAACC;QACrC,MAAM,EAAE4C,MAAM,EAAEH,YAAY,EAAEC,UAAU,EAAE,GAAG1C;QAE7C,IAAI0C,eAAe,GAAG;YACpB,OAAOrC,IAAAA,eAAK,EAAC;gBACXC,SAAS;gBACTC,OAAO;gBACPC,aAAa,GAAGiC,aAAa,yCAAyC,EAAEG,QAAQ;gBAChFlC,UAAU;YACZ;QACF,OAAO;YACL,OAAOL,IAAAA,eAAK,EAAC;gBACXC,SAAS;gBACTC,OAAO;gBACPC,aAAa,GAAGiC,aAAa,uBAAuB,EAAEC,WAAW,YAAY,CAAC;gBAC9EhC,UAAU;YACZ;QACF;IACF,GAAG,EAAE;IAEL,sCAAsC;IACtC,kCAAkC;IAClC,sCAAsC;IAEtC,MAAMqC,qBAAqBhD,IAAAA,kBAAW,EAAC,CAACiD;QACtC,OAAO3C,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO;YACPC,aAAawC;YACbtC,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,MAAMuC,oBAAoBlD,IAAAA,kBAAW,EAAC,CAAC8C;QACrC,OAAOxC,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO;YACPC,aAAa,GAAGqC,YAAY,gCAAgC,CAAC;YAC7DnC,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,sCAAsC;IACtC,0BAA0B;IAC1B,sCAAsC;IAEtC,MAAMwC,2BAA2BnD,IAAAA,kBAAW,EAAC,CAACoD;QAC5C,OAAO9C,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO;YACPC,aAAa2C,SAAS;YACtBzC,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,MAAM0C,yBAAyBrD,IAAAA,kBAAW,EAAC,CAACoD,OAAejD;QACzD,OAAOG,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO;YACPC,aAAa,GAAGN,cAAc,GAAGA,YAAY,EAAE,CAAC,GAAG,KAAKiD,SAAS,qCAAqC;YACtGzC,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,MAAM2C,yBAAyBtD,IAAAA,kBAAW,EAAC,CAACoD,OAAejD;QACzD,OAAOG,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO;YACPC,aAAa,GAAGN,cAAc,GAAGA,YAAY,EAAE,CAAC,GAAG,KAAKiD,SAAS,mCAAmC;YACpGzC,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,MAAM4C,sBAAsBvD,IAAAA,kBAAW,EAAC,CAACgC,QAAgBoB;QACvD,OAAO9C,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO;YACPC,aAAa,CAAC,qBAAqB,EAAEuB,OAAO,EAAE,EAAEoB,OAAO;YACvDzC,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,MAAM6C,kBAAkBxD,IAAAA,kBAAW,EAAC,CAAC6C,QAAgBO;QACnD,OAAO9C,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO;YACPC,aAAa,CAAC,+BAA+B,EAAEoC,OAAO,EAAE,EAAEO,OAAO;YACjEzC,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,MAAM8C,kBAAkBzD,IAAAA,kBAAW,EAAC,CAAC6C,QAAgBO;QACnD,OAAO9C,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO;YACPC,aAAa,CAAC,0BAA0B,EAAEoC,OAAO,EAAE,EAAEO,OAAO;YAC5DzC,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,MAAM+C,mBAAmB1D,IAAAA,kBAAW,EAAC,CAACgC;QACpC,OAAO1B,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO;YACPC,aAAa,CAAC,WAAW,EAAEuB,OAAO,kCAAkC,CAAC;YACrErB,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,sCAAsC;IACtC,gCAAgC;IAChC,sCAAsC;IAEtC,MAAMgD,wBAAwB3D,IAAAA,kBAAW,EAAC,CAACiD;QACzC,OAAO3C,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO;YACPC,aAAawC;YACbtC,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,MAAMiD,0BAA0B5D,IAAAA,kBAAW,EAAC,CAACI;QAC3C,OAAOE,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO;YACPC,aAAa,CAAC,QAAQ,EAAEL,IAAI,0CAA0C,CAAC;YACvEO,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,MAAMkD,yBAAyB7D,IAAAA,kBAAW,EAAC,CAACiD;QAC1C,OAAO3C,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO;YACPC,aAAawC;YACbtC,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,MAAMmD,qBAAqB9D,IAAAA,kBAAW,EAAC,CAACiD;QACtC,OAAO3C,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO;YACPC,aAAawC;YACbtC,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,sCAAsC;IACtC,gCAAgC;IAChC,sCAAsC;IAEtC,MAAMoD,kBAAkB/D,IAAAA,kBAAW,EAAC,CAACQ,OAAeyC;QAClD,OAAO3C,IAAAA,eAAK,EAAC;YACXC,SAAS;YACTC,OAAO,CAAC,GAAG,EAAEA,OAAO;YACpBC,aAAawC;YACbtC,UAAU;QACZ;IACF,GAAG,EAAE;IAEL,sCAAsC;IACtC,kBAAkB;IAClB,sCAAsC;IAEtC,OAAO;QACL,kBAAkB;QAClBZ;QACAa;QACAE;QACAC;QACAC;QAEA,YAAY;QACZO;QACAE;QACAG;QACAC;QAEA,kBAAkB;QAClBC;QACAW;QAEA,gBAAgB;QAChBG;QACAG;QAEA,aAAa;QACbC;QACAE;QAEA,SAAS;QACTC;QACAE;QACAC;QACAC;QACAC;QACAC;QACAC;QAEA,WAAW;QACXC;QACAC;QACAC;QACAC;QAEA,OAAO;QACPC;IACF;AACF;MAMA,WAAejE"}