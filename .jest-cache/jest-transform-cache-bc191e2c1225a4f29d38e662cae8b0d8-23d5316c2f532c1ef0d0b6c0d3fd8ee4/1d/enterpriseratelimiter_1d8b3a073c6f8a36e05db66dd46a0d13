f76b0a865440e583236d9fa1449006cf
/**
 * Sistema Enterprise de Rate Limiting
 * Unifica todas las implementaciones de rate limiting con Redis y fallback en memoria
 */"use strict";

/* istanbul ignore next */
function cov_26my3rs2kc() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\rate-limiting\\enterprise-rate-limiter.ts";
  var hash = "2d4a2b7e49978409a3dda90d7e96054294ddea92";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\rate-limiting\\enterprise-rate-limiter.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 39,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 45
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 40
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 34
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 30
        }
      },
      "9": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 27
        }
      },
      "10": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 32
        }
      },
      "11": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 32
        }
      },
      "12": {
        start: {
          line: 40,
          column: 15
        },
        end: {
          line: 40,
          column: 47
        }
      },
      "13": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 51
        }
      },
      "14": {
        start: {
          line: 42,
          column: 39
        },
        end: {
          line: 42,
          column: 51
        }
      },
      "15": {
        start: {
          line: 43,
          column: 28
        },
        end: {
          line: 43,
          column: 41
        }
      },
      "16": {
        start: {
          line: 44,
          column: 27
        },
        end: {
          line: 44,
          column: 40
        }
      },
      "17": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 47,
          column: 20
        }
      },
      "18": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 66
        }
      },
      "19": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "20": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 19
        }
      },
      "21": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "22": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 56,
          column: 10
        }
      },
      "23": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 53
        }
      },
      "24": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "25": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 30
        }
      },
      "26": {
        start: {
          line: 62,
          column: 17
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "27": {
        start: {
          line: 65,
          column: 32
        },
        end: {
          line: 65,
          column: 88
        }
      },
      "28": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 75,
          column: 5
        }
      },
      "29": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "30": {
        start: {
          line: 68,
          column: 23
        },
        end: {
          line: 68,
          column: 95
        }
      },
      "31": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 73,
          column: 13
        }
      },
      "32": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 57
        }
      },
      "33": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 72,
          column: 39
        }
      },
      "34": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 25
        }
      },
      "35": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "36": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 31
        }
      },
      "37": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 80,
          column: 18
        }
      },
      "38": {
        start: {
          line: 82,
          column: 38
        },
        end: {
          line: 158,
          column: 1
        }
      },
      "39": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 77
        }
      },
      "40": {
        start: {
          line: 160,
          column: 15
        },
        end: {
          line: 160,
          column: 35
        }
      },
      "41": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 161,
          column: 22
        }
      },
      "42": {
        start: {
          line: 165,
          column: 19
        },
        end: {
          line: 165,
          column: 37
        }
      },
      "43": {
        start: {
          line: 166,
          column: 15
        },
        end: {
          line: 166,
          column: 35
        }
      },
      "44": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 167,
          column: 50
        }
      },
      "45": {
        start: {
          line: 170,
          column: 15
        },
        end: {
          line: 170,
          column: 35
        }
      },
      "46": {
        start: {
          line: 171,
          column: 21
        },
        end: {
          line: 171,
          column: 41
        }
      },
      "47": {
        start: {
          line: 172,
          column: 4
        },
        end: {
          line: 172,
          column: 40
        }
      },
      "48": {
        start: {
          line: 175,
          column: 19
        },
        end: {
          line: 175,
          column: 37
        }
      },
      "49": {
        start: {
          line: 176,
          column: 15
        },
        end: {
          line: 176,
          column: 35
        }
      },
      "50": {
        start: {
          line: 177,
          column: 21
        },
        end: {
          line: 177,
          column: 41
        }
      },
      "51": {
        start: {
          line: 178,
          column: 21
        },
        end: {
          line: 178,
          column: 59
        }
      },
      "52": {
        start: {
          line: 179,
          column: 4
        },
        end: {
          line: 179,
          column: 37
        }
      },
      "53": {
        start: {
          line: 188,
          column: 20
        },
        end: {
          line: 193,
          column: 5
        }
      },
      "54": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 208,
          column: 5
        }
      },
      "55": {
        start: {
          line: 195,
          column: 17
        },
        end: {
          line: 195,
          column: 21
        }
      },
      "56": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 203,
          column: 9
        }
      },
      "57": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 45
        }
      },
      "58": {
        start: {
          line: 199,
          column: 15
        },
        end: {
          line: 203,
          column: 9
        }
      },
      "59": {
        start: {
          line: 201,
          column: 32
        },
        end: {
          line: 201,
          column: 55
        }
      },
      "60": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 83
        }
      },
      "61": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "62": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 43
        }
      },
      "63": {
        start: {
          line: 209,
          column: 4
        },
        end: {
          line: 209,
          column: 21
        }
      },
      "64": {
        start: {
          line: 216,
          column: 17
        },
        end: {
          line: 216,
          column: 21
        }
      },
      "65": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 224,
          column: 5
        }
      },
      "66": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 56
        }
      },
      "67": {
        start: {
          line: 220,
          column: 11
        },
        end: {
          line: 224,
          column: 5
        }
      },
      "68": {
        start: {
          line: 222,
          column: 28
        },
        end: {
          line: 222,
          column: 62
        }
      },
      "69": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 83
        }
      },
      "70": {
        start: {
          line: 226,
          column: 4
        },
        end: {
          line: 228,
          column: 5
        }
      },
      "71": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 47
        }
      },
      "72": {
        start: {
          line: 230,
          column: 4
        },
        end: {
          line: 232,
          column: 5
        }
      },
      "73": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 37
        }
      },
      "74": {
        start: {
          line: 233,
          column: 4
        },
        end: {
          line: 233,
          column: 18
        }
      },
      "75": {
        start: {
          line: 238,
          column: 4
        },
        end: {
          line: 249,
          column: 5
        }
      },
      "76": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 240,
          column: 40
        }
      },
      "77": {
        start: {
          line: 241,
          column: 11
        },
        end: {
          line: 249,
          column: 5
        }
      },
      "78": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 248,
          column: 9
        }
      },
      "79": {
        start: {
          line: 244,
          column: 24
        },
        end: {
          line: 244,
          column: 70
        }
      },
      "80": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 245,
          column: 32
        }
      },
      "81": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 30
        }
      },
      "82": {
        start: {
          line: 250,
          column: 4
        },
        end: {
          line: 250,
          column: 22
        }
      },
      "83": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 254,
          column: 31
        }
      },
      "84": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 258,
          column: 26
        }
      },
      "85": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 257,
          column: 27
        }
      },
      "86": {
        start: {
          line: 261,
          column: 22
        },
        end: {
          line: 261,
          column: 41
        }
      },
      "87": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 264,
          column: 9
        }
      },
      "88": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 24
        }
      },
      "89": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 269,
          column: 9
        }
      },
      "90": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 35
        }
      },
      "91": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 24
        }
      },
      "92": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 270,
          column: 21
        }
      },
      "93": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 273,
          column: 35
        }
      },
      "94": {
        start: {
          line: 276,
          column: 22
        },
        end: {
          line: 276,
          column: 35
        }
      },
      "95": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 281,
          column: 9
        }
      },
      "96": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 26
        }
      },
      "97": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 279,
          column: 33
        }
      },
      "98": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 280,
          column: 31
        }
      },
      "99": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 282,
          column: 17
        }
      },
      "100": {
        start: {
          line: 285,
          column: 20
        },
        end: {
          line: 285,
          column: 30
        }
      },
      "101": {
        start: {
          line: 286,
          column: 22
        },
        end: {
          line: 286,
          column: 23
        }
      },
      "102": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 292,
          column: 9
        }
      },
      "103": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 291,
          column: 13
        }
      },
      "104": {
        start: {
          line: 289,
          column: 16
        },
        end: {
          line: 289,
          column: 39
        }
      },
      "105": {
        start: {
          line: 290,
          column: 16
        },
        end: {
          line: 290,
          column: 26
        }
      },
      "106": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 295,
          column: 9
        }
      },
      "107": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 294,
          column: 87
        }
      },
      "108": {
        start: {
          line: 298,
          column: 24
        },
        end: {
          line: 298,
          column: 39
        }
      },
      "109": {
        start: {
          line: 299,
          column: 28
        },
        end: {
          line: 301,
          column: 17
        }
      },
      "110": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 305,
          column: 10
        }
      },
      "111": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 27
        }
      },
      "112": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 313,
          column: 9
        }
      },
      "113": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 312,
          column: 48
        }
      },
      "114": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 314,
          column: 27
        }
      },
      "115": {
        start: {
          line: 318,
          column: 20
        },
        end: {
          line: 318,
          column: 46
        }
      },
      "116": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 37
        }
      },
      "117": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 332,
          column: 9
        }
      },
      "118": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 326,
          column: 43
        }
      },
      "119": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 43
        }
      },
      "120": {
        start: {
          line: 330,
          column: 33
        },
        end: {
          line: 330,
          column: 61
        }
      },
      "121": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 331,
          column: 54
        }
      },
      "122": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 340,
          column: 9
        }
      },
      "123": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 335,
          column: 37
        }
      },
      "124": {
        start: {
          line: 336,
          column: 15
        },
        end: {
          line: 340,
          column: 9
        }
      },
      "125": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 337,
          column: 43
        }
      },
      "126": {
        start: {
          line: 338,
          column: 15
        },
        end: {
          line: 340,
          column: 9
        }
      },
      "127": {
        start: {
          line: 339,
          column: 12
        },
        end: {
          line: 339,
          column: 34
        }
      },
      "128": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 350,
          column: 9
        }
      },
      "129": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 343,
          column: 65
        }
      },
      "130": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 347,
          column: 13
        }
      },
      "131": {
        start: {
          line: 346,
          column: 16
        },
        end: {
          line: 346,
          column: 69
        }
      },
      "132": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 349,
          column: 119
        }
      },
      "133": {
        start: {
          line: 349,
          column: 81
        },
        end: {
          line: 349,
          column: 86
        }
      },
      "134": {
        start: {
          line: 352,
          column: 30
        },
        end: {
          line: 352,
          column: 68
        }
      },
      "135": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 353,
          column: 61
        }
      },
      "136": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 355,
          column: 30
        }
      },
      "137": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 362,
          column: 16
        }
      },
      "138": {
        start: {
          line: 359,
          column: 88
        },
        end: {
          line: 359,
          column: 99
        }
      },
      "139": {
        start: {
          line: 359,
          column: 134
        },
        end: {
          line: 362,
          column: 13
        }
      },
      "140": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 367,
          column: 16
        }
      },
      "141": {
        start: {
          line: 364,
          column: 91
        },
        end: {
          line: 364,
          column: 102
        }
      },
      "142": {
        start: {
          line: 364,
          column: 143
        },
        end: {
          line: 367,
          column: 13
        }
      },
      "143": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 372,
          column: 10
        }
      },
      "144": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 385,
          column: 10
        }
      },
      "145": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 386,
          column: 32
        }
      },
      "146": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 387,
          column: 32
        }
      },
      "147": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 388,
          column: 36
        }
      },
      "148": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 401,
          column: 10
        }
      },
      "149": {
        start: {
          line: 402,
          column: 8
        },
        end: {
          line: 402,
          column: 32
        }
      },
      "150": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 403,
          column: 36
        }
      },
      "151": {
        start: {
          line: 404,
          column: 8
        },
        end: {
          line: 404,
          column: 40
        }
      },
      "152": {
        start: {
          line: 408,
          column: 25
        },
        end: {
          line: 408,
          column: 56
        }
      },
      "153": {
        start: {
          line: 416,
          column: 22
        },
        end: {
          line: 416,
          column: 32
        }
      },
      "154": {
        start: {
          line: 417,
          column: 4
        },
        end: {
          line: 466,
          column: 5
        }
      },
      "155": {
        start: {
          line: 419,
          column: 23
        },
        end: {
          line: 419,
          column: 73
        }
      },
      "156": {
        start: {
          line: 420,
          column: 8
        },
        end: {
          line: 434,
          column: 9
        }
      },
      "157": {
        start: {
          line: 421,
          column: 12
        },
        end: {
          line: 433,
          column: 14
        }
      },
      "158": {
        start: {
          line: 436,
          column: 26
        },
        end: {
          line: 436,
          column: 120
        }
      },
      "159": {
        start: {
          line: 436,
          column: 73
        },
        end: {
          line: 436,
          column: 119
        }
      },
      "160": {
        start: {
          line: 437,
          column: 20
        },
        end: {
          line: 437,
          column: 30
        }
      },
      "161": {
        start: {
          line: 438,
          column: 23
        },
        end: {
          line: 438,
          column: 56
        }
      },
      "162": {
        start: {
          line: 439,
          column: 25
        },
        end: {
          line: 439,
          column: 54
        }
      },
      "163": {
        start: {
          line: 441,
          column: 25
        },
        end: {
          line: 441,
          column: 41
        }
      },
      "164": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 442,
          column: 32
        }
      },
      "165": {
        start: {
          line: 443,
          column: 8
        },
        end: {
          line: 443,
          column: 69
        }
      },
      "166": {
        start: {
          line: 444,
          column: 24
        },
        end: {
          line: 444,
          column: 45
        }
      },
      "167": {
        start: {
          line: 445,
          column: 22
        },
        end: {
          line: 445,
          column: 44
        }
      },
      "168": {
        start: {
          line: 446,
          column: 26
        },
        end: {
          line: 446,
          column: 65
        }
      },
      "169": {
        start: {
          line: 447,
          column: 26
        },
        end: {
          line: 447,
          column: 56
        }
      },
      "170": {
        start: {
          line: 448,
          column: 24
        },
        end: {
          line: 448,
          column: 51
        }
      },
      "171": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 461,
          column: 10
        }
      },
      "172": {
        start: {
          line: 463,
          column: 8
        },
        end: {
          line: 463,
          column: 61
        }
      },
      "173": {
        start: {
          line: 465,
          column: 8
        },
        end: {
          line: 465,
          column: 48
        }
      },
      "174": {
        start: {
          line: 471,
          column: 22
        },
        end: {
          line: 471,
          column: 32
        }
      },
      "175": {
        start: {
          line: 472,
          column: 16
        },
        end: {
          line: 472,
          column: 26
        }
      },
      "176": {
        start: {
          line: 473,
          column: 16
        },
        end: {
          line: 473,
          column: 36
        }
      },
      "177": {
        start: {
          line: 474,
          column: 4
        },
        end: {
          line: 494,
          column: 5
        }
      },
      "178": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 480,
          column: 10
        }
      },
      "179": {
        start: {
          line: 481,
          column: 8
        },
        end: {
          line: 481,
          column: 36
        }
      },
      "180": {
        start: {
          line: 482,
          column: 8
        },
        end: {
          line: 493,
          column: 10
        }
      },
      "181": {
        start: {
          line: 496,
          column: 4
        },
        end: {
          line: 496,
          column: 18
        }
      },
      "182": {
        start: {
          line: 497,
          column: 4
        },
        end: {
          line: 497,
          column: 32
        }
      },
      "183": {
        start: {
          line: 498,
          column: 20
        },
        end: {
          line: 498,
          column: 53
        }
      },
      "184": {
        start: {
          line: 499,
          column: 22
        },
        end: {
          line: 499,
          column: 67
        }
      },
      "185": {
        start: {
          line: 500,
          column: 4
        },
        end: {
          line: 512,
          column: 6
        }
      },
      "186": {
        start: {
          line: 515,
          column: 23
        },
        end: {
          line: 515,
          column: 64
        }
      },
      "187": {
        start: {
          line: 516,
          column: 4
        },
        end: {
          line: 526,
          column: 5
        }
      },
      "188": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 525,
          column: 10
        }
      },
      "189": {
        start: {
          line: 527,
          column: 19
        },
        end: {
          line: 530,
          column: 5
        }
      },
      "190": {
        start: {
          line: 531,
          column: 25
        },
        end: {
          line: 531,
          column: 66
        }
      },
      "191": {
        start: {
          line: 532,
          column: 16
        },
        end: {
          line: 532,
          column: 37
        }
      },
      "192": {
        start: {
          line: 534,
          column: 4
        },
        end: {
          line: 569,
          column: 5
        }
      },
      "193": {
        start: {
          line: 536,
          column: 8
        },
        end: {
          line: 540,
          column: 9
        }
      },
      "194": {
        start: {
          line: 537,
          column: 12
        },
        end: {
          line: 537,
          column: 59
        }
      },
      "195": {
        start: {
          line: 539,
          column: 12
        },
        end: {
          line: 539,
          column: 54
        }
      },
      "196": {
        start: {
          line: 542,
          column: 8
        },
        end: {
          line: 546,
          column: 9
        }
      },
      "197": {
        start: {
          line: 543,
          column: 23
        },
        end: {
          line: 543,
          column: 43
        }
      },
      "198": {
        start: {
          line: 544,
          column: 29
        },
        end: {
          line: 544,
          column: 49
        }
      },
      "199": {
        start: {
          line: 545,
          column: 12
        },
        end: {
          line: 545,
          column: 65
        }
      },
      "200": {
        start: {
          line: 548,
          column: 8
        },
        end: {
          line: 556,
          column: 9
        }
      },
      "201": {
        start: {
          line: 549,
          column: 12
        },
        end: {
          line: 555,
          column: 13
        }
      },
      "202": {
        start: {
          line: 550,
          column: 16
        },
        end: {
          line: 550,
          column: 110
        }
      },
      "203": {
        start: {
          line: 552,
          column: 16
        },
        end: {
          line: 554,
          column: 17
        }
      },
      "204": {
        start: {
          line: 553,
          column: 20
        },
        end: {
          line: 553,
          column: 56
        }
      },
      "205": {
        start: {
          line: 557,
          column: 8
        },
        end: {
          line: 557,
          column: 22
        }
      },
      "206": {
        start: {
          line: 559,
          column: 8
        },
        end: {
          line: 559,
          column: 80
        }
      },
      "207": {
        start: {
          line: 560,
          column: 8
        },
        end: {
          line: 568,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 41
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 36
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 32
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 23
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 28
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 28
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "9": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 41,
            column: 9
          },
          end: {
            line: 41,
            column: 33
          }
        },
        loc: {
          start: {
            line: 41,
            column: 47
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 41
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 45,
            column: 39
          },
          end: {
            line: 45,
            column: 40
          }
        },
        loc: {
          start: {
            line: 45,
            column: 61
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      },
      "11": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 49,
            column: 9
          },
          end: {
            line: 49,
            column: 34
          }
        },
        loc: {
          start: {
            line: 49,
            column: 53
          },
          end: {
            line: 81,
            column: 1
          }
        },
        line: 49
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 109,
            column: 24
          },
          end: {
            line: 109,
            column: 25
          }
        },
        loc: {
          start: {
            line: 109,
            column: 40
          },
          end: {
            line: 111,
            column: 9
          }
        },
        line: 109
      },
      "13": {
        name: "ipKeyGenerator",
        decl: {
          start: {
            line: 159,
            column: 9
          },
          end: {
            line: 159,
            column: 23
          }
        },
        loc: {
          start: {
            line: 159,
            column: 33
          },
          end: {
            line: 162,
            column: 1
          }
        },
        line: 159
      },
      "14": {
        name: "userKeyGenerator",
        decl: {
          start: {
            line: 163,
            column: 9
          },
          end: {
            line: 163,
            column: 25
          }
        },
        loc: {
          start: {
            line: 163,
            column: 35
          },
          end: {
            line: 168,
            column: 1
          }
        },
        line: 163
      },
      "15": {
        name: "endpointKeyGenerator",
        decl: {
          start: {
            line: 169,
            column: 9
          },
          end: {
            line: 169,
            column: 29
          }
        },
        loc: {
          start: {
            line: 169,
            column: 39
          },
          end: {
            line: 173,
            column: 1
          }
        },
        line: 169
      },
      "16": {
        name: "hybridKeyGenerator",
        decl: {
          start: {
            line: 174,
            column: 9
          },
          end: {
            line: 174,
            column: 27
          }
        },
        loc: {
          start: {
            line: 174,
            column: 37
          },
          end: {
            line: 180,
            column: 1
          }
        },
        line: 174
      },
      "17": {
        name: "getClientIP",
        decl: {
          start: {
            line: 186,
            column: 13
          },
          end: {
            line: 186,
            column: 24
          }
        },
        loc: {
          start: {
            line: 186,
            column: 34
          },
          end: {
            line: 210,
            column: 1
          }
        },
        line: 186
      },
      "18": {
        name: "getUserId",
        decl: {
          start: {
            line: 213,
            column: 13
          },
          end: {
            line: 213,
            column: 22
          }
        },
        loc: {
          start: {
            line: 213,
            column: 32
          },
          end: {
            line: 234,
            column: 1
          }
        },
        line: 213
      },
      "19": {
        name: "getEndpoint",
        decl: {
          start: {
            line: 237,
            column: 13
          },
          end: {
            line: 237,
            column: 24
          }
        },
        loc: {
          start: {
            line: 237,
            column: 34
          },
          end: {
            line: 251,
            column: 1
          }
        },
        line: 237
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 253,
            column: 4
          },
          end: {
            line: 253,
            column: 5
          }
        },
        loc: {
          start: {
            line: 253,
            column: 17
          },
          end: {
            line: 259,
            column: 5
          }
        },
        line: 253
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 256,
            column: 43
          },
          end: {
            line: 256,
            column: 44
          }
        },
        loc: {
          start: {
            line: 256,
            column: 47
          },
          end: {
            line: 258,
            column: 9
          }
        },
        line: 256
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 260,
            column: 4
          },
          end: {
            line: 260,
            column: 5
          }
        },
        loc: {
          start: {
            line: 260,
            column: 13
          },
          end: {
            line: 271,
            column: 5
          }
        },
        line: 260
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 272,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        },
        loc: {
          start: {
            line: 272,
            column: 20
          },
          end: {
            line: 274,
            column: 5
          }
        },
        line: 272
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 275,
            column: 4
          },
          end: {
            line: 275,
            column: 5
          }
        },
        loc: {
          start: {
            line: 275,
            column: 19
          },
          end: {
            line: 283,
            column: 5
          }
        },
        line: 275
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 284,
            column: 4
          },
          end: {
            line: 284,
            column: 5
          }
        },
        loc: {
          start: {
            line: 284,
            column: 14
          },
          end: {
            line: 296,
            column: 5
          }
        },
        line: 284
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 297,
            column: 4
          },
          end: {
            line: 297,
            column: 5
          }
        },
        loc: {
          start: {
            line: 297,
            column: 15
          },
          end: {
            line: 306,
            column: 5
          }
        },
        line: 297
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 307,
            column: 4
          },
          end: {
            line: 307,
            column: 5
          }
        },
        loc: {
          start: {
            line: 307,
            column: 12
          },
          end: {
            line: 309,
            column: 5
          }
        },
        line: 307
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 310,
            column: 4
          },
          end: {
            line: 310,
            column: 5
          }
        },
        loc: {
          start: {
            line: 310,
            column: 14
          },
          end: {
            line: 315,
            column: 5
          }
        },
        line: 310
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 323,
            column: 4
          },
          end: {
            line: 323,
            column: 5
          }
        },
        loc: {
          start: {
            line: 323,
            column: 40
          },
          end: {
            line: 356,
            column: 5
          }
        },
        line: 323
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 349,
            column: 73
          },
          end: {
            line: 349,
            column: 74
          }
        },
        loc: {
          start: {
            line: 349,
            column: 81
          },
          end: {
            line: 349,
            column: 86
          }
        },
        line: 349
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 357,
            column: 4
          },
          end: {
            line: 357,
            column: 5
          }
        },
        loc: {
          start: {
            line: 357,
            column: 21
          },
          end: {
            line: 368,
            column: 5
          }
        },
        line: 357
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 359,
            column: 80
          },
          end: {
            line: 359,
            column: 81
          }
        },
        loc: {
          start: {
            line: 359,
            column: 88
          },
          end: {
            line: 359,
            column: 99
          }
        },
        line: 359
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 359,
            column: 118
          },
          end: {
            line: 359,
            column: 119
          }
        },
        loc: {
          start: {
            line: 359,
            column: 134
          },
          end: {
            line: 362,
            column: 13
          }
        },
        line: 359
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 364,
            column: 83
          },
          end: {
            line: 364,
            column: 84
          }
        },
        loc: {
          start: {
            line: 364,
            column: 91
          },
          end: {
            line: 364,
            column: 102
          }
        },
        line: 364
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 364,
            column: 121
          },
          end: {
            line: 364,
            column: 122
          }
        },
        loc: {
          start: {
            line: 364,
            column: 143
          },
          end: {
            line: 367,
            column: 13
          }
        },
        line: 364
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 369,
            column: 4
          },
          end: {
            line: 369,
            column: 5
          }
        },
        loc: {
          start: {
            line: 369,
            column: 17
          },
          end: {
            line: 373,
            column: 5
          }
        },
        line: 369
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 374,
            column: 4
          },
          end: {
            line: 374,
            column: 5
          }
        },
        loc: {
          start: {
            line: 374,
            column: 12
          },
          end: {
            line: 389,
            column: 5
          }
        },
        line: 374
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 390,
            column: 4
          },
          end: {
            line: 390,
            column: 5
          }
        },
        loc: {
          start: {
            line: 390,
            column: 17
          },
          end: {
            line: 405,
            column: 5
          }
        },
        line: 390
      },
      "39": {
        name: "rateLimitWithRedis",
        decl: {
          start: {
            line: 415,
            column: 19
          },
          end: {
            line: 415,
            column: 37
          }
        },
        loc: {
          start: {
            line: 415,
            column: 51
          },
          end: {
            line: 467,
            column: 1
          }
        },
        line: 415
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 436,
            column: 55
          },
          end: {
            line: 436,
            column: 56
          }
        },
        loc: {
          start: {
            line: 436,
            column: 73
          },
          end: {
            line: 436,
            column: 119
          }
        },
        line: 436
      },
      "41": {
        name: "rateLimitWithMemory",
        decl: {
          start: {
            line: 470,
            column: 13
          },
          end: {
            line: 470,
            column: 32
          }
        },
        loc: {
          start: {
            line: 470,
            column: 46
          },
          end: {
            line: 513,
            column: 1
          }
        },
        line: 470
      },
      "42": {
        name: "checkEnterpriseRateLimit",
        decl: {
          start: {
            line: 514,
            column: 15
          },
          end: {
            line: 514,
            column: 39
          }
        },
        loc: {
          start: {
            line: 514,
            column: 75
          },
          end: {
            line: 570,
            column: 1
          }
        },
        line: 514
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "1": {
        loc: {
          start: {
            line: 46,
            column: 15
          },
          end: {
            line: 46,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 29
          },
          end: {
            line: 46,
            column: 45
          }
        }, {
          start: {
            line: 46,
            column: 48
          },
          end: {
            line: 46,
            column: 65
          }
        }],
        line: 46
      },
      "2": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "3": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 50,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 50,
            column: 20
          }
        }, {
          start: {
            line: 50,
            column: 24
          },
          end: {
            line: 50,
            column: 27
          }
        }, {
          start: {
            line: 50,
            column: 31
          },
          end: {
            line: 50,
            column: 45
          }
        }],
        line: 50
      },
      "4": {
        loc: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "5": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 53,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 53,
            column: 20
          }
        }, {
          start: {
            line: 53,
            column: 24
          },
          end: {
            line: 53,
            column: 47
          }
        }, {
          start: {
            line: 53,
            column: 51
          },
          end: {
            line: 53,
            column: 76
          }
        }],
        line: 53
      },
      "6": {
        loc: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "7": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 59,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: 59,
            column: 17
          },
          end: {
            line: 59,
            column: 31
          }
        }],
        line: 59
      },
      "8": {
        loc: {
          start: {
            line: 65,
            column: 32
          },
          end: {
            line: 65,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 32
          },
          end: {
            line: 65,
            column: 53
          }
        }, {
          start: {
            line: 65,
            column: 57
          },
          end: {
            line: 65,
            column: 88
          }
        }],
        line: 65
      },
      "9": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "10": {
        loc: {
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 67,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 67,
            column: 29
          }
        }, {
          start: {
            line: 67,
            column: 33
          },
          end: {
            line: 67,
            column: 79
          }
        }],
        line: 67
      },
      "11": {
        loc: {
          start: {
            line: 68,
            column: 23
          },
          end: {
            line: 68,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 68,
            column: 47
          },
          end: {
            line: 68,
            column: 88
          }
        }, {
          start: {
            line: 68,
            column: 91
          },
          end: {
            line: 68,
            column: 95
          }
        }],
        line: 68
      },
      "12": {
        loc: {
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 73,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 73,
            column: 13
          }
        }, {
          start: {
            line: 71,
            column: 19
          },
          end: {
            line: 73,
            column: 13
          }
        }],
        line: 69
      },
      "13": {
        loc: {
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 69,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 69,
            column: 20
          }
        }, {
          start: {
            line: 69,
            column: 25
          },
          end: {
            line: 69,
            column: 33
          }
        }, {
          start: {
            line: 69,
            column: 37
          },
          end: {
            line: 69,
            column: 45
          }
        }],
        line: 69
      },
      "14": {
        loc: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "15": {
        loc: {
          start: {
            line: 167,
            column: 11
          },
          end: {
            line: 167,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 167,
            column: 20
          },
          end: {
            line: 167,
            column: 36
          }
        }, {
          start: {
            line: 167,
            column: 39
          },
          end: {
            line: 167,
            column: 49
          }
        }],
        line: 167
      },
      "16": {
        loc: {
          start: {
            line: 178,
            column: 21
          },
          end: {
            line: 178,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 178,
            column: 30
          },
          end: {
            line: 178,
            column: 46
          }
        }, {
          start: {
            line: 178,
            column: 49
          },
          end: {
            line: 178,
            column: 59
          }
        }],
        line: 178
      },
      "17": {
        loc: {
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 203,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 203,
            column: 9
          }
        }, {
          start: {
            line: 199,
            column: 15
          },
          end: {
            line: 203,
            column: 9
          }
        }],
        line: 196
      },
      "18": {
        loc: {
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 196,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 196,
            column: 32
          }
        }, {
          start: {
            line: 196,
            column: 36
          },
          end: {
            line: 196,
            column: 77
          }
        }],
        line: 196
      },
      "19": {
        loc: {
          start: {
            line: 199,
            column: 15
          },
          end: {
            line: 203,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 15
          },
          end: {
            line: 203,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "20": {
        loc: {
          start: {
            line: 202,
            column: 17
          },
          end: {
            line: 202,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 202,
            column: 46
          },
          end: {
            line: 202,
            column: 60
          }
        }, {
          start: {
            line: 202,
            column: 63
          },
          end: {
            line: 202,
            column: 82
          }
        }],
        line: 202
      },
      "21": {
        loc: {
          start: {
            line: 202,
            column: 63
          },
          end: {
            line: 202,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 63
          },
          end: {
            line: 202,
            column: 74
          }
        }, {
          start: {
            line: 202,
            column: 78
          },
          end: {
            line: 202,
            column: 82
          }
        }],
        line: 202
      },
      "22": {
        loc: {
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "23": {
        loc: {
          start: {
            line: 217,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        }, {
          start: {
            line: 220,
            column: 11
          },
          end: {
            line: 224,
            column: 5
          }
        }],
        line: 217
      },
      "24": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 217,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 217,
            column: 28
          }
        }, {
          start: {
            line: 217,
            column: 32
          },
          end: {
            line: 217,
            column: 73
          }
        }],
        line: 217
      },
      "25": {
        loc: {
          start: {
            line: 220,
            column: 11
          },
          end: {
            line: 224,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 11
          },
          end: {
            line: 224,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "26": {
        loc: {
          start: {
            line: 223,
            column: 17
          },
          end: {
            line: 223,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 223,
            column: 46
          },
          end: {
            line: 223,
            column: 60
          }
        }, {
          start: {
            line: 223,
            column: 63
          },
          end: {
            line: 223,
            column: 82
          }
        }],
        line: 223
      },
      "27": {
        loc: {
          start: {
            line: 223,
            column: 63
          },
          end: {
            line: 223,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 223,
            column: 63
          },
          end: {
            line: 223,
            column: 74
          }
        }, {
          start: {
            line: 223,
            column: 78
          },
          end: {
            line: 223,
            column: 82
          }
        }],
        line: 223
      },
      "28": {
        loc: {
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "29": {
        loc: {
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 226,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 226,
            column: 15
          }
        }, {
          start: {
            line: 226,
            column: 19
          },
          end: {
            line: 226,
            column: 49
          }
        }],
        line: 226
      },
      "30": {
        loc: {
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "31": {
        loc: {
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 230,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 230,
            column: 15
          }
        }, {
          start: {
            line: 230,
            column: 19
          },
          end: {
            line: 230,
            column: 39
          }
        }],
        line: 230
      },
      "32": {
        loc: {
          start: {
            line: 238,
            column: 4
          },
          end: {
            line: 249,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 4
          },
          end: {
            line: 249,
            column: 5
          }
        }, {
          start: {
            line: 241,
            column: 11
          },
          end: {
            line: 249,
            column: 5
          }
        }],
        line: 238
      },
      "33": {
        loc: {
          start: {
            line: 241,
            column: 11
          },
          end: {
            line: 249,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 11
          },
          end: {
            line: 249,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "34": {
        loc: {
          start: {
            line: 244,
            column: 32
          },
          end: {
            line: 244,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 244,
            column: 32
          },
          end: {
            line: 244,
            column: 43
          }
        }, {
          start: {
            line: 244,
            column: 47
          },
          end: {
            line: 244,
            column: 49
          }
        }],
        line: 244
      },
      "35": {
        loc: {
          start: {
            line: 262,
            column: 8
          },
          end: {
            line: 264,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 8
          },
          end: {
            line: 264,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "36": {
        loc: {
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 269,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 269,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "37": {
        loc: {
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 281,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 281,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "38": {
        loc: {
          start: {
            line: 288,
            column: 12
          },
          end: {
            line: 291,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 288,
            column: 12
          },
          end: {
            line: 291,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 288
      },
      "39": {
        loc: {
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      },
      "40": {
        loc: {
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "41": {
        loc: {
          start: {
            line: 325,
            column: 8
          },
          end: {
            line: 332,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 325,
            column: 8
          },
          end: {
            line: 332,
            column: 9
          }
        }, {
          start: {
            line: 327,
            column: 15
          },
          end: {
            line: 332,
            column: 9
          }
        }],
        line: 325
      },
      "42": {
        loc: {
          start: {
            line: 330,
            column: 33
          },
          end: {
            line: 330,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 330,
            column: 33
          },
          end: {
            line: 330,
            column: 56
          }
        }, {
          start: {
            line: 330,
            column: 60
          },
          end: {
            line: 330,
            column: 61
          }
        }],
        line: 330
      },
      "43": {
        loc: {
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 340,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 340,
            column: 9
          }
        }, {
          start: {
            line: 336,
            column: 15
          },
          end: {
            line: 340,
            column: 9
          }
        }],
        line: 334
      },
      "44": {
        loc: {
          start: {
            line: 336,
            column: 15
          },
          end: {
            line: 340,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 336,
            column: 15
          },
          end: {
            line: 340,
            column: 9
          }
        }, {
          start: {
            line: 338,
            column: 15
          },
          end: {
            line: 340,
            column: 9
          }
        }],
        line: 336
      },
      "45": {
        loc: {
          start: {
            line: 338,
            column: 15
          },
          end: {
            line: 340,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 338,
            column: 15
          },
          end: {
            line: 340,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 338
      },
      "46": {
        loc: {
          start: {
            line: 342,
            column: 8
          },
          end: {
            line: 350,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 342,
            column: 8
          },
          end: {
            line: 350,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 342
      },
      "47": {
        loc: {
          start: {
            line: 345,
            column: 12
          },
          end: {
            line: 347,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 345,
            column: 12
          },
          end: {
            line: 347,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 345
      },
      "48": {
        loc: {
          start: {
            line: 352,
            column: 30
          },
          end: {
            line: 352,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 352,
            column: 30
          },
          end: {
            line: 352,
            column: 63
          }
        }, {
          start: {
            line: 352,
            column: 67
          },
          end: {
            line: 352,
            column: 68
          }
        }],
        line: 352
      },
      "49": {
        loc: {
          start: {
            line: 420,
            column: 8
          },
          end: {
            line: 434,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 420,
            column: 8
          },
          end: {
            line: 434,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 420
      },
      "50": {
        loc: {
          start: {
            line: 423,
            column: 23
          },
          end: {
            line: 423,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 423,
            column: 23
          },
          end: {
            line: 423,
            column: 35
          }
        }, {
          start: {
            line: 423,
            column: 39
          },
          end: {
            line: 423,
            column: 57
          }
        }],
        line: 423
      },
      "51": {
        loc: {
          start: {
            line: 424,
            column: 27
          },
          end: {
            line: 424,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 424,
            column: 27
          },
          end: {
            line: 424,
            column: 43
          }
        }, {
          start: {
            line: 424,
            column: 47
          },
          end: {
            line: 424,
            column: 48
          }
        }],
        line: 424
      },
      "52": {
        loc: {
          start: {
            line: 425,
            column: 27
          },
          end: {
            line: 425,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 425,
            column: 27
          },
          end: {
            line: 425,
            column: 43
          }
        }, {
          start: {
            line: 425,
            column: 47
          },
          end: {
            line: 425,
            column: 75
          }
        }],
        line: 425
      },
      "53": {
        loc: {
          start: {
            line: 426,
            column: 28
          },
          end: {
            line: 426,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 426,
            column: 45
          },
          end: {
            line: 426,
            column: 54
          }
        }, {
          start: {
            line: 426,
            column: 57
          },
          end: {
            line: 426,
            column: 90
          }
        }],
        line: 426
      },
      "54": {
        loc: {
          start: {
            line: 445,
            column: 22
          },
          end: {
            line: 445,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 445,
            column: 22
          },
          end: {
            line: 445,
            column: 39
          }
        }, {
          start: {
            line: 445,
            column: 43
          },
          end: {
            line: 445,
            column: 44
          }
        }],
        line: 445
      },
      "55": {
        loc: {
          start: {
            line: 454,
            column: 24
          },
          end: {
            line: 454,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 454,
            column: 34
          },
          end: {
            line: 454,
            column: 43
          }
        }, {
          start: {
            line: 454,
            column: 46
          },
          end: {
            line: 454,
            column: 81
          }
        }],
        line: 454
      },
      "56": {
        loc: {
          start: {
            line: 474,
            column: 4
          },
          end: {
            line: 494,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 474,
            column: 4
          },
          end: {
            line: 494,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 474
      },
      "57": {
        loc: {
          start: {
            line: 505,
            column: 20
          },
          end: {
            line: 505,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 505,
            column: 30
          },
          end: {
            line: 505,
            column: 39
          }
        }, {
          start: {
            line: 505,
            column: 42
          },
          end: {
            line: 505,
            column: 83
          }
        }],
        line: 505
      },
      "58": {
        loc: {
          start: {
            line: 516,
            column: 4
          },
          end: {
            line: 526,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 516,
            column: 4
          },
          end: {
            line: 526,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 516
      },
      "59": {
        loc: {
          start: {
            line: 531,
            column: 25
          },
          end: {
            line: 531,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 531,
            column: 25
          },
          end: {
            line: 531,
            column: 44
          }
        }, {
          start: {
            line: 531,
            column: 48
          },
          end: {
            line: 531,
            column: 66
          }
        }],
        line: 531
      },
      "60": {
        loc: {
          start: {
            line: 536,
            column: 8
          },
          end: {
            line: 540,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 536,
            column: 8
          },
          end: {
            line: 540,
            column: 9
          }
        }, {
          start: {
            line: 538,
            column: 15
          },
          end: {
            line: 540,
            column: 9
          }
        }],
        line: 536
      },
      "61": {
        loc: {
          start: {
            line: 536,
            column: 12
          },
          end: {
            line: 536,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 536,
            column: 12
          },
          end: {
            line: 536,
            column: 40
          }
        }, {
          start: {
            line: 536,
            column: 44
          },
          end: {
            line: 536,
            column: 80
          }
        }],
        line: 536
      },
      "62": {
        loc: {
          start: {
            line: 542,
            column: 8
          },
          end: {
            line: 546,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 542,
            column: 8
          },
          end: {
            line: 546,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 542
      },
      "63": {
        loc: {
          start: {
            line: 548,
            column: 8
          },
          end: {
            line: 556,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 548,
            column: 8
          },
          end: {
            line: 556,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 548
      },
      "64": {
        loc: {
          start: {
            line: 549,
            column: 12
          },
          end: {
            line: 555,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 549,
            column: 12
          },
          end: {
            line: 555,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 549
      },
      "65": {
        loc: {
          start: {
            line: 552,
            column: 16
          },
          end: {
            line: 554,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 552,
            column: 16
          },
          end: {
            line: 554,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 552
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\rate-limiting\\enterprise-rate-limiter.ts"],
      sourcesContent: ["/**\r\n * Sistema Enterprise de Rate Limiting\r\n * Unifica todas las implementaciones de rate limiting con Redis y fallback en memoria\r\n */\r\n\r\nimport { NextRequest } from 'next/server';\r\nimport type { NextApiRequest } from 'next';\r\nimport { isRedisAvailable, enterpriseRateLimit } from '@/lib/integrations/redis';\r\n\r\n// =====================================================\r\n// TIPOS Y INTERFACES\r\n// =====================================================\r\n\r\nexport interface EnterpriseRateLimitConfig {\r\n  windowMs: number;\r\n  maxRequests: number;\r\n  message?: string;\r\n  keyGenerator?: (request: NextRequest | NextApiRequest) => string;\r\n  skipSuccessfulRequests?: boolean;\r\n  skipFailedRequests?: boolean;\r\n  enableRedis?: boolean;\r\n  enableMemoryFallback?: boolean;\r\n  enableMetrics?: boolean;\r\n  enableLogging?: boolean;\r\n  customHeaders?: Record<string, string>;\r\n  onLimitReached?: (key: string, request: NextRequest | NextApiRequest) => void;\r\n}\r\n\r\nexport interface EnterpriseRateLimitResult {\r\n  allowed: boolean;\r\n  limit: number;\r\n  remaining: number;\r\n  resetTime: number;\r\n  retryAfter?: number;\r\n  error?: string;\r\n  code?: string;\r\n  source: 'redis' | 'memory' | 'error';\r\n  metrics?: {\r\n    responseTime: number;\r\n    cacheHit: boolean;\r\n    keyGenerated: string;\r\n  };\r\n}\r\n\r\nexport interface RateLimitMetrics {\r\n  totalRequests: number;\r\n  allowedRequests: number;\r\n  blockedRequests: number;\r\n  redisHits: number;\r\n  memoryFallbacks: number;\r\n  errors: number;\r\n  averageResponseTime: number;\r\n  topBlockedIPs: Array<{ ip: string; count: number }>;\r\n  topEndpoints: Array<{ endpoint: string; count: number }>;\r\n}\r\n\r\n// =====================================================\r\n// CONFIGURACIONES PREDEFINIDAS ENTERPRISE\r\n// =====================================================\r\n\r\nexport const ENTERPRISE_RATE_LIMIT_CONFIGS: Record<string, EnterpriseRateLimitConfig> = {\r\n  // Autenticaci\xF3n cr\xEDtica\r\n  CRITICAL_AUTH: {\r\n    windowMs: 15 * 60 * 1000, // 15 minutos\r\n    maxRequests: 3, // 3 intentos por 15 minutos\r\n    message: 'Demasiados intentos de autenticaci\xF3n cr\xEDtica. Intenta en 15 minutos.',\r\n    enableRedis: true,\r\n    enableMetrics: true,\r\n    enableLogging: true\r\n  },\r\n\r\n  // Admin APIs\r\n  ADMIN_API: {\r\n    windowMs: 5 * 60 * 1000, // 5 minutos\r\n    maxRequests: 50, // 50 requests por 5 minutos\r\n    message: 'L\xEDmite de requests administrativas excedido. Intenta en 5 minutos.',\r\n    enableRedis: true,\r\n    enableMetrics: true,\r\n    enableLogging: true\r\n  },\r\n\r\n  // APIs de pagos\r\n  PAYMENT_API: {\r\n    windowMs: 10 * 60 * 1000, // 10 minutos\r\n    maxRequests: 15, // 15 requests por 10 minutos\r\n    message: 'L\xEDmite de requests de pagos excedido. Intenta en 10 minutos.',\r\n    enableRedis: true,\r\n    enableMetrics: true,\r\n    enableLogging: true,\r\n    onLimitReached: (key, request) => {\r\n      console.warn(`[PAYMENT_RATE_LIMIT] L\xEDmite excedido para ${key}`);\r\n    }\r\n  },\r\n\r\n  // APIs p\xFAblicas de productos\r\n  PUBLIC_API: {\r\n    windowMs: 1 * 60 * 1000, // 1 minuto\r\n    maxRequests: 100, // 100 requests por minuto\r\n    message: 'L\xEDmite de requests p\xFAblicas excedido. Intenta en 1 minuto.',\r\n    enableRedis: true,\r\n    enableMetrics: true,\r\n    enableLogging: false // No loggear APIs p\xFAblicas\r\n  },\r\n\r\n  // Webhooks\r\n  WEBHOOK_API: {\r\n    windowMs: 1 * 60 * 1000, // 1 minuto\r\n    maxRequests: 200, // 200 webhooks por minuto\r\n    message: 'L\xEDmite de webhooks excedido.',\r\n    enableRedis: true,\r\n    enableMetrics: true,\r\n    enableLogging: true\r\n  },\r\n\r\n  // B\xFAsquedas y consultas\r\n  SEARCH_API: {\r\n    windowMs: 1 * 60 * 1000, // 1 minuto\r\n    maxRequests: 60, // 60 b\xFAsquedas por minuto\r\n    message: 'L\xEDmite de b\xFAsquedas excedido. Intenta en 1 minuto.',\r\n    enableRedis: true,\r\n    enableMetrics: true,\r\n    enableLogging: false\r\n  },\r\n\r\n  // Upload de archivos\r\n  UPLOAD_API: {\r\n    windowMs: 5 * 60 * 1000, // 5 minutos\r\n    maxRequests: 10, // 10 uploads por 5 minutos\r\n    message: 'L\xEDmite de uploads excedido. Intenta en 5 minutos.',\r\n    enableRedis: true,\r\n    enableMetrics: true,\r\n    enableLogging: true\r\n  },\r\n\r\n  // APIs de desarrollo/debug\r\n  DEBUG_API: {\r\n    windowMs: 1 * 60 * 1000, // 1 minuto\r\n    maxRequests: 30, // 30 requests por minuto\r\n    message: 'L\xEDmite de debug APIs excedido.',\r\n    enableRedis: false, // Usar memoria para debug\r\n    enableMetrics: true,\r\n    enableLogging: true\r\n  }\r\n};\r\n\r\n// =====================================================\r\n// GENERADORES DE CLAVES\r\n// =====================================================\r\n\r\n/**\r\n * Generador de clave por IP\r\n */\r\nexport function ipKeyGenerator(request: NextRequest | NextApiRequest): string {\r\n  const ip = getClientIP(request);\r\n  return `ip:${ip}`;\r\n}\r\n\r\n/**\r\n * Generador de clave por usuario autenticado\r\n */\r\nexport function userKeyGenerator(request: NextRequest | NextApiRequest): string {\r\n  // Intentar obtener user ID de diferentes fuentes\r\n  const userId = getUserId(request);\r\n  const ip = getClientIP(request);\r\n  \r\n  return userId ? `user:${userId}` : `ip:${ip}`;\r\n}\r\n\r\n/**\r\n * Generador de clave por endpoint\r\n */\r\nexport function endpointKeyGenerator(request: NextRequest | NextApiRequest): string {\r\n  const ip = getClientIP(request);\r\n  const endpoint = getEndpoint(request);\r\n  \r\n  return `endpoint:${ip}:${endpoint}`;\r\n}\r\n\r\n/**\r\n * Generador de clave h\xEDbrido (usuario + endpoint)\r\n */\r\nexport function hybridKeyGenerator(request: NextRequest | NextApiRequest): string {\r\n  const userId = getUserId(request);\r\n  const ip = getClientIP(request);\r\n  const endpoint = getEndpoint(request);\r\n  \r\n  const userPart = userId ? `user:${userId}` : `ip:${ip}`;\r\n  return `${userPart}:${endpoint}`;\r\n}\r\n\r\n// =====================================================\r\n// UTILIDADES\r\n// =====================================================\r\n\r\n/**\r\n * Obtiene la IP del cliente\r\n */\r\nfunction getClientIP(request: NextRequest | NextApiRequest): string {\r\n  // Intentar diferentes headers de IP\r\n  const headers = [\r\n    'x-forwarded-for',\r\n    'x-real-ip',\r\n    'x-client-ip',\r\n    'cf-connecting-ip'\r\n  ];\r\n\r\n  for (const header of headers) {\r\n    let ip: string | null = null;\r\n    \r\n    if ('headers' in request && typeof request.headers.get === 'function') {\r\n      // NextRequest\r\n      ip = (request as NextRequest).headers.get(header);\r\n    } else if ('headers' in request) {\r\n      // NextApiRequest\r\n      const headerValue = (request as NextApiRequest).headers[header];\r\n      ip = Array.isArray(headerValue) ? headerValue[0] : headerValue || null;\r\n    }\r\n\r\n    if (ip) {\r\n      // Tomar la primera IP si hay m\xFAltiples\r\n      return ip.split(',')[0].trim();\r\n    }\r\n  }\r\n\r\n  return 'unknown';\r\n}\r\n\r\n/**\r\n * Obtiene el ID del usuario autenticado\r\n */\r\nfunction getUserId(request: NextRequest | NextApiRequest): string | null {\r\n  // Intentar obtener de diferentes fuentes\r\n  \r\n  // 1. Headers de Clerk\r\n  let userId: string | null = null;\r\n  \r\n  if ('headers' in request && typeof request.headers.get === 'function') {\r\n    // NextRequest\r\n    userId = (request as NextRequest).headers.get('x-clerk-user-id');\r\n  } else if ('headers' in request) {\r\n    // NextApiRequest\r\n    const headerValue = (request as NextApiRequest).headers['x-clerk-user-id'];\r\n    userId = Array.isArray(headerValue) ? headerValue[0] : headerValue || null;\r\n  }\r\n\r\n  // 2. Contexto enterprise si est\xE1 disponible\r\n  if (!userId && (request as any).enterpriseAuth?.userId) {\r\n    userId = (request as any).enterpriseAuth.userId;\r\n  }\r\n\r\n  // 3. Contexto de autenticaci\xF3n si est\xE1 disponible\r\n  if (!userId && (request as any).auth?.userId) {\r\n    userId = (request as any).auth.userId;\r\n  }\r\n\r\n  return userId;\r\n}\r\n\r\n/**\r\n * Obtiene el endpoint de la request\r\n */\r\nfunction getEndpoint(request: NextRequest | NextApiRequest): string {\r\n  if ('nextUrl' in request) {\r\n    // NextRequest\r\n    return (request as NextRequest).nextUrl.pathname;\r\n  } else if ('url' in request) {\r\n    // NextApiRequest\r\n    try {\r\n      const url = new URL((request as NextApiRequest).url || '', 'http://localhost');\r\n      return url.pathname;\r\n    } catch {\r\n      return '/unknown';\r\n    }\r\n  }\r\n  \r\n  return '/unknown';\r\n}\r\n\r\n// =====================================================\r\n// STORE EN MEMORIA (FALLBACK)\r\n// =====================================================\r\n\r\ninterface MemoryRateLimitEntry {\r\n  count: number;\r\n  resetTime: number;\r\n  firstRequest: number;\r\n}\r\n\r\nclass MemoryRateLimitStore {\r\n  private store = new Map<string, MemoryRateLimitEntry>();\r\n  private cleanupInterval: NodeJS.Timeout;\r\n\r\n  constructor() {\r\n    // Limpiar entradas expiradas cada 5 minutos\r\n    this.cleanupInterval = setInterval(() => {\r\n      this.cleanup();\r\n    }, 5 * 60 * 1000);\r\n  }\r\n\r\n  get(key: string): MemoryRateLimitEntry | null {\r\n    const entry = this.store.get(key);\r\n    \r\n    if (!entry) {\r\n      return null;\r\n    }\r\n\r\n    // Verificar si ha expirado\r\n    if (Date.now() > entry.resetTime) {\r\n      this.store.delete(key);\r\n      return null;\r\n    }\r\n\r\n    return entry;\r\n  }\r\n\r\n  set(key: string, entry: MemoryRateLimitEntry): void {\r\n    this.store.set(key, entry);\r\n  }\r\n\r\n  increment(key: string): number {\r\n    const entry = this.get(key);\r\n    if (entry) {\r\n      entry.count++;\r\n      this.set(key, entry);\r\n      return entry.count;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  private cleanup(): void {\r\n    const now = Date.now();\r\n    let cleaned = 0;\r\n\r\n    for (const [key, entry] of this.store.entries()) {\r\n      if (now > entry.resetTime) {\r\n        this.store.delete(key);\r\n        cleaned++;\r\n      }\r\n    }\r\n\r\n    if (cleaned > 0) {\r\n      console.log(`[MEMORY_RATE_LIMIT] Limpiadas ${cleaned} entradas expiradas`);\r\n    }\r\n  }\r\n\r\n  getStats(): { entries: number; memoryUsage: number } {\r\n    const entries = this.store.size;\r\n    const memoryUsage = JSON.stringify([...this.store.entries()]).length;\r\n\r\n    return { entries, memoryUsage };\r\n  }\r\n\r\n  clear(): void {\r\n    this.store.clear();\r\n  }\r\n\r\n  destroy(): void {\r\n    if (this.cleanupInterval) {\r\n      clearInterval(this.cleanupInterval);\r\n    }\r\n    this.store.clear();\r\n  }\r\n}\r\n\r\n// Instancia global del store en memoria\r\nconst memoryStore = new MemoryRateLimitStore();\r\n\r\n// =====================================================\r\n// M\xC9TRICAS GLOBALES\r\n// =====================================================\r\n\r\nclass RateLimitMetricsCollector {\r\n  private metrics: RateLimitMetrics = {\r\n    totalRequests: 0,\r\n    allowedRequests: 0,\r\n    blockedRequests: 0,\r\n    redisHits: 0,\r\n    memoryFallbacks: 0,\r\n    errors: 0,\r\n    averageResponseTime: 0,\r\n    topBlockedIPs: [],\r\n    topEndpoints: []\r\n  };\r\n\r\n  private responseTimes: number[] = [];\r\n  private blockedIPs = new Map<string, number>();\r\n  private endpointCounts = new Map<string, number>();\r\n\r\n  recordRequest(result: EnterpriseRateLimitResult, ip: string, endpoint: string): void {\r\n    this.metrics.totalRequests++;\r\n\r\n    if (result.allowed) {\r\n      this.metrics.allowedRequests++;\r\n    } else {\r\n      this.metrics.blockedRequests++;\r\n      \r\n      // Registrar IP bloqueada\r\n      const currentCount = this.blockedIPs.get(ip) || 0;\r\n      this.blockedIPs.set(ip, currentCount + 1);\r\n    }\r\n\r\n    // Registrar fuente\r\n    if (result.source === 'redis') {\r\n      this.metrics.redisHits++;\r\n    } else if (result.source === 'memory') {\r\n      this.metrics.memoryFallbacks++;\r\n    } else if (result.source === 'error') {\r\n      this.metrics.errors++;\r\n    }\r\n\r\n    // Registrar tiempo de respuesta\r\n    if (result.metrics?.responseTime) {\r\n      this.responseTimes.push(result.metrics.responseTime);\r\n      \r\n      // Mantener solo los \xFAltimos 1000 tiempos\r\n      if (this.responseTimes.length > 1000) {\r\n        this.responseTimes = this.responseTimes.slice(-1000);\r\n      }\r\n\r\n      // Calcular promedio\r\n      this.metrics.averageResponseTime = \r\n        this.responseTimes.reduce((a, b) => a + b, 0) / this.responseTimes.length;\r\n    }\r\n\r\n    // Registrar endpoint\r\n    const endpointCount = this.endpointCounts.get(endpoint) || 0;\r\n    this.endpointCounts.set(endpoint, endpointCount + 1);\r\n\r\n    // Actualizar tops\r\n    this.updateTopLists();\r\n  }\r\n\r\n  private updateTopLists(): void {\r\n    // Top IPs bloqueadas\r\n    this.metrics.topBlockedIPs = Array.from(this.blockedIPs.entries())\r\n      .sort((a, b) => b[1] - a[1])\r\n      .slice(0, 10)\r\n      .map(([ip, count]) => ({ ip, count }));\r\n\r\n    // Top endpoints\r\n    this.metrics.topEndpoints = Array.from(this.endpointCounts.entries())\r\n      .sort((a, b) => b[1] - a[1])\r\n      .slice(0, 10)\r\n      .map(([endpoint, count]) => ({ endpoint, count }));\r\n  }\r\n\r\n  getMetrics(): RateLimitMetrics {\r\n    return { ...this.metrics };\r\n  }\r\n\r\n  reset(): void {\r\n    this.metrics = {\r\n      totalRequests: 0,\r\n      allowedRequests: 0,\r\n      blockedRequests: 0,\r\n      redisHits: 0,\r\n      memoryFallbacks: 0,\r\n      errors: 0,\r\n      averageResponseTime: 0,\r\n      topBlockedIPs: [],\r\n      topEndpoints: []\r\n    };\r\n    this.responseTimes = [];\r\n    this.blockedIPs.clear();\r\n    this.endpointCounts.clear();\r\n  }\r\n}\r\n\r\n// Instancia global del collector de m\xE9tricas\r\nconst metricsCollector = new RateLimitMetricsCollector();\r\n\r\n// Exportar para uso externo\r\nexport { memoryStore, metricsCollector };\r\n\r\n// =====================================================\r\n// IMPLEMENTACI\xD3N REDIS\r\n// =====================================================\r\n\r\n// Funci\xF3n isRedisAvailable ahora se importa desde @/lib/redis\r\n\r\n/**\r\n * Rate limiting con Redis\r\n */\r\nasync function rateLimitWithRedis(\r\n  key: string,\r\n  config: EnterpriseRateLimitConfig\r\n): Promise<EnterpriseRateLimitResult> {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Usar la funci\xF3n importada de Redis\r\n    const result = await enterpriseRateLimit(key, config);\r\n\r\n    if (result) {\r\n      return {\r\n        allowed: result.allowed,\r\n        limit: result.limit || config.maxRequests,\r\n        remaining: result.remaining || 0,\r\n        resetTime: result.resetTime || Date.now() + config.windowMs,\r\n        retryAfter: result.allowed ? undefined : Math.ceil(config.windowMs / 1000),\r\n        source: 'redis',\r\n        metrics: {\r\n          responseTime: Date.now() - startTime,\r\n          cacheHit: true,\r\n          keyGenerated: key\r\n        }\r\n      };\r\n    }\r\n\r\n    // Si no hay resultado, usar implementaci\xF3n manual\r\n    const { redis } = await import('@/lib/redis');\r\n    const now = Date.now();\r\n    const window = Math.floor(now / config.windowMs);\r\n    const redisKey = `rate_limit:${key}:${window}`;\r\n\r\n    // Usar pipeline para operaciones at\xF3micas\r\n    const pipeline = redis.pipeline();\r\n    pipeline.incr(redisKey);\r\n    pipeline.expire(redisKey, Math.ceil(config.windowMs / 1000));\r\n\r\n    const results = await pipeline.exec();\r\n    const count = results?.[0]?.[1] as number || 1;\r\n\r\n    const remaining = Math.max(0, config.maxRequests - count);\r\n    const resetTime = (window + 1) * config.windowMs;\r\n    const allowed = count <= config.maxRequests;\r\n\r\n    return {\r\n      allowed,\r\n      limit: config.maxRequests,\r\n      remaining,\r\n      resetTime,\r\n      retryAfter: allowed ? undefined : Math.ceil((resetTime - now) / 1000),\r\n      source: 'redis',\r\n      metrics: {\r\n        responseTime: Date.now() - startTime,\r\n        cacheHit: true,\r\n        keyGenerated: redisKey\r\n      }\r\n    };\r\n  } catch (error) {\r\n    console.error('[RATE_LIMIT] Error en Redis:', error);\r\n\r\n    // Fallback a memoria en caso de error\r\n    return rateLimitWithMemory(key, config);\r\n  }\r\n}\r\n\r\n/**\r\n * Rate limiting con memoria (fallback)\r\n */\r\nfunction rateLimitWithMemory(\r\n  key: string,\r\n  config: EnterpriseRateLimitConfig\r\n): EnterpriseRateLimitResult {\r\n  const startTime = Date.now();\r\n  const now = Date.now();\r\n\r\n  let entry = memoryStore.get(key);\r\n\r\n  if (!entry) {\r\n    // Primera request en esta ventana\r\n    entry = {\r\n      count: 1,\r\n      resetTime: now + config.windowMs,\r\n      firstRequest: now\r\n    };\r\n    memoryStore.set(key, entry);\r\n\r\n    return {\r\n      allowed: true,\r\n      limit: config.maxRequests,\r\n      remaining: config.maxRequests - 1,\r\n      resetTime: entry.resetTime,\r\n      source: 'memory',\r\n      metrics: {\r\n        responseTime: Date.now() - startTime,\r\n        cacheHit: false,\r\n        keyGenerated: key\r\n      }\r\n    };\r\n  }\r\n\r\n  // Incrementar contador\r\n  entry.count++;\r\n  memoryStore.set(key, entry);\r\n\r\n  const allowed = entry.count <= config.maxRequests;\r\n  const remaining = Math.max(0, config.maxRequests - entry.count);\r\n\r\n  return {\r\n    allowed,\r\n    limit: config.maxRequests,\r\n    remaining,\r\n    resetTime: entry.resetTime,\r\n    retryAfter: allowed ? undefined : Math.ceil((entry.resetTime - now) / 1000),\r\n    source: 'memory',\r\n    metrics: {\r\n      responseTime: Date.now() - startTime,\r\n      cacheHit: true,\r\n      keyGenerated: key\r\n    }\r\n  };\r\n}\r\n\r\n// =====================================================\r\n// FUNCI\xD3N PRINCIPAL DE RATE LIMITING\r\n// =====================================================\r\n\r\n/**\r\n * Funci\xF3n principal de rate limiting enterprise\r\n */\r\nexport async function checkEnterpriseRateLimit(\r\n  request: NextRequest | NextApiRequest,\r\n  configName: keyof typeof ENTERPRISE_RATE_LIMIT_CONFIGS,\r\n  customConfig?: Partial<EnterpriseRateLimitConfig>\r\n): Promise<EnterpriseRateLimitResult> {\r\n  const baseConfig = ENTERPRISE_RATE_LIMIT_CONFIGS[configName];\r\n\r\n  if (!baseConfig) {\r\n    return {\r\n      allowed: true,\r\n      limit: 1000,\r\n      remaining: 999,\r\n      resetTime: Date.now() + 60000,\r\n      error: `Configuraci\xF3n '${configName}' no encontrada`,\r\n      code: 'CONFIG_NOT_FOUND',\r\n      source: 'error'\r\n    };\r\n  }\r\n\r\n  const config = { ...baseConfig, ...customConfig };\r\n  const keyGenerator = config.keyGenerator || hybridKeyGenerator;\r\n  const key = keyGenerator(request);\r\n\r\n  let result: EnterpriseRateLimitResult;\r\n\r\n  try {\r\n    // Intentar Redis primero si est\xE1 habilitado\r\n    if (config.enableRedis !== false && await isRedisAvailable()) {\r\n      result = await rateLimitWithRedis(key, config);\r\n    } else {\r\n      result = rateLimitWithMemory(key, config);\r\n    }\r\n\r\n    // Registrar m\xE9tricas si est\xE1 habilitado\r\n    if (config.enableMetrics) {\r\n      const ip = getClientIP(request);\r\n      const endpoint = getEndpoint(request);\r\n      metricsCollector.recordRequest(result, ip, endpoint);\r\n    }\r\n\r\n    // Logging si est\xE1 habilitado\r\n    if (config.enableLogging) {\r\n      if (!result.allowed) {\r\n        console.warn(`[RATE_LIMIT] L\xEDmite excedido para ${key}: ${result.remaining}/${result.limit}`);\r\n\r\n        // Callback personalizado si est\xE1 definido\r\n        if (config.onLimitReached) {\r\n          config.onLimitReached(key, request);\r\n        }\r\n      }\r\n    }\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.error('[RATE_LIMIT] Error en checkEnterpriseRateLimit:', error);\r\n\r\n    return {\r\n      allowed: true, // Permitir en caso de error\r\n      limit: config.maxRequests,\r\n      remaining: config.maxRequests,\r\n      resetTime: Date.now() + config.windowMs,\r\n      error: 'Error interno en rate limiting',\r\n      code: 'INTERNAL_ERROR',\r\n      source: 'error'\r\n    };\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["ENTERPRISE_RATE_LIMIT_CONFIGS", "checkEnterpriseRateLimit", "endpointKeyGenerator", "hybridKeyGenerator", "ipKeyGenerator", "memoryStore", "metricsCollector", "userKeyGenerator", "CRITICAL_AUTH", "windowMs", "maxRequests", "message", "enableRedis", "enableMetrics", "enableLogging", "ADMIN_API", "PAYMENT_API", "onLimitReached", "key", "request", "console", "warn", "PUBLIC_API", "WEBHOOK_API", "SEARCH_API", "UPLOAD_API", "DEBUG_API", "ip", "getClientIP", "userId", "getUserId", "endpoint", "getEndpoint", "userPart", "headers", "header", "get", "headerValue", "Array", "isArray", "split", "trim", "enterpriseAuth", "auth", "nextUrl", "pathname", "url", "URL", "MemoryRateLimitStore", "store", "Map", "cleanupInterval", "setInterval", "cleanup", "entry", "Date", "now", "resetTime", "delete", "set", "increment", "count", "cleaned", "entries", "log", "getStats", "size", "memoryUsage", "JSON", "stringify", "length", "clear", "destroy", "clearInterval", "RateLimitMetricsCollector", "recordRequest", "result", "metrics", "totalRequests", "allowed", "allowedRequests", "blockedRequests", "currentCount", "blockedIPs", "source", "redisHits", "memoryFallbacks", "errors", "responseTime", "responseTimes", "push", "slice", "averageResponseTime", "reduce", "a", "b", "endpointCount", "endpointCounts", "updateTopLists", "topBlockedIPs", "from", "sort", "map", "topEndpoints", "getMetrics", "reset", "rateLimitWithRedis", "config", "startTime", "enterpriseRateLimit", "limit", "remaining", "retryAfter", "undefined", "Math", "ceil", "cacheHit", "keyGenerated", "redis", "window", "floor", "redisKey", "pipeline", "incr", "expire", "results", "exec", "max", "error", "rateLimitWithMemory", "firstRequest", "configName", "customConfig", "baseConfig", "code", "keyGenerator", "isRedisAvailable"],
      mappings: "AAAA;;;CAGC;;;;;;;;;;;QAyDYA;eAAAA;;QAwiBSC;eAAAA;;QAzbNC;eAAAA;;QAUAC;eAAAA;;QA7BAC;eAAAA;;QAgUPC;eAAAA;;QAAaC;eAAAA;;QAxTNC;eAAAA;;;uBAzJsC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqD/C,MAAMP,gCAA2E;IACtF,wBAAwB;IACxBQ,eAAe;QACbC,UAAU,KAAK,KAAK;QACpBC,aAAa;QACbC,SAAS;QACTC,aAAa;QACbC,eAAe;QACfC,eAAe;IACjB;IAEA,aAAa;IACbC,WAAW;QACTN,UAAU,IAAI,KAAK;QACnBC,aAAa;QACbC,SAAS;QACTC,aAAa;QACbC,eAAe;QACfC,eAAe;IACjB;IAEA,gBAAgB;IAChBE,aAAa;QACXP,UAAU,KAAK,KAAK;QACpBC,aAAa;QACbC,SAAS;QACTC,aAAa;QACbC,eAAe;QACfC,eAAe;QACfG,gBAAgB,CAACC,KAAKC;YACpBC,QAAQC,IAAI,CAAC,CAAC,0CAA0C,EAAEH,KAAK;QACjE;IACF;IAEA,6BAA6B;IAC7BI,YAAY;QACVb,UAAU,IAAI,KAAK;QACnBC,aAAa;QACbC,SAAS;QACTC,aAAa;QACbC,eAAe;QACfC,eAAe,MAAM,2BAA2B;IAClD;IAEA,WAAW;IACXS,aAAa;QACXd,UAAU,IAAI,KAAK;QACnBC,aAAa;QACbC,SAAS;QACTC,aAAa;QACbC,eAAe;QACfC,eAAe;IACjB;IAEA,wBAAwB;IACxBU,YAAY;QACVf,UAAU,IAAI,KAAK;QACnBC,aAAa;QACbC,SAAS;QACTC,aAAa;QACbC,eAAe;QACfC,eAAe;IACjB;IAEA,qBAAqB;IACrBW,YAAY;QACVhB,UAAU,IAAI,KAAK;QACnBC,aAAa;QACbC,SAAS;QACTC,aAAa;QACbC,eAAe;QACfC,eAAe;IACjB;IAEA,2BAA2B;IAC3BY,WAAW;QACTjB,UAAU,IAAI,KAAK;QACnBC,aAAa;QACbC,SAAS;QACTC,aAAa;QACbC,eAAe;QACfC,eAAe;IACjB;AACF;AASO,SAASV,eAAee,OAAqC;IAClE,MAAMQ,KAAKC,YAAYT;IACvB,OAAO,CAAC,GAAG,EAAEQ,IAAI;AACnB;AAKO,SAASpB,iBAAiBY,OAAqC;IACpE,iDAAiD;IACjD,MAAMU,SAASC,UAAUX;IACzB,MAAMQ,KAAKC,YAAYT;IAEvB,OAAOU,SAAS,CAAC,KAAK,EAAEA,QAAQ,GAAG,CAAC,GAAG,EAAEF,IAAI;AAC/C;AAKO,SAASzB,qBAAqBiB,OAAqC;IACxE,MAAMQ,KAAKC,YAAYT;IACvB,MAAMY,WAAWC,YAAYb;IAE7B,OAAO,CAAC,SAAS,EAAEQ,GAAG,CAAC,EAAEI,UAAU;AACrC;AAKO,SAAS5B,mBAAmBgB,OAAqC;IACtE,MAAMU,SAASC,UAAUX;IACzB,MAAMQ,KAAKC,YAAYT;IACvB,MAAMY,WAAWC,YAAYb;IAE7B,MAAMc,WAAWJ,SAAS,CAAC,KAAK,EAAEA,QAAQ,GAAG,CAAC,GAAG,EAAEF,IAAI;IACvD,OAAO,GAAGM,SAAS,CAAC,EAAEF,UAAU;AAClC;AAEA,wDAAwD;AACxD,aAAa;AACb,wDAAwD;AAExD;;CAEC,GACD,SAASH,YAAYT,OAAqC;IACxD,oCAAoC;IACpC,MAAMe,UAAU;QACd;QACA;QACA;QACA;KACD;IAED,KAAK,MAAMC,UAAUD,QAAS;QAC5B,IAAIP,KAAoB;QAExB,IAAI,aAAaR,WAAW,OAAOA,QAAQe,OAAO,CAACE,GAAG,KAAK,YAAY;YACrE,cAAc;YACdT,KAAK,AAACR,QAAwBe,OAAO,CAACE,GAAG,CAACD;QAC5C,OAAO,IAAI,aAAahB,SAAS;YAC/B,iBAAiB;YACjB,MAAMkB,cAAc,AAAClB,QAA2Be,OAAO,CAACC,OAAO;YAC/DR,KAAKW,MAAMC,OAAO,CAACF,eAAeA,WAAW,CAAC,EAAE,GAAGA,eAAe;QACpE;QAEA,IAAIV,IAAI;YACN,uCAAuC;YACvC,OAAOA,GAAGa,KAAK,CAAC,IAAI,CAAC,EAAE,CAACC,IAAI;QAC9B;IACF;IAEA,OAAO;AACT;AAEA;;CAEC,GACD,SAASX,UAAUX,OAAqC;IACtD,yCAAyC;IAEzC,sBAAsB;IACtB,IAAIU,SAAwB;IAE5B,IAAI,aAAaV,WAAW,OAAOA,QAAQe,OAAO,CAACE,GAAG,KAAK,YAAY;QACrE,cAAc;QACdP,SAAS,AAACV,QAAwBe,OAAO,CAACE,GAAG,CAAC;IAChD,OAAO,IAAI,aAAajB,SAAS;QAC/B,iBAAiB;QACjB,MAAMkB,cAAc,AAAClB,QAA2Be,OAAO,CAAC,kBAAkB;QAC1EL,SAASS,MAAMC,OAAO,CAACF,eAAeA,WAAW,CAAC,EAAE,GAAGA,eAAe;IACxE;IAEA,4CAA4C;IAC5C,IAAI,CAACR,UAAU,AAACV,QAAgBuB,cAAc,EAAEb,QAAQ;QACtDA,SAAS,AAACV,QAAgBuB,cAAc,CAACb,MAAM;IACjD;IAEA,kDAAkD;IAClD,IAAI,CAACA,UAAU,AAACV,QAAgBwB,IAAI,EAAEd,QAAQ;QAC5CA,SAAS,AAACV,QAAgBwB,IAAI,CAACd,MAAM;IACvC;IAEA,OAAOA;AACT;AAEA;;CAEC,GACD,SAASG,YAAYb,OAAqC;IACxD,IAAI,aAAaA,SAAS;QACxB,cAAc;QACd,OAAO,AAACA,QAAwByB,OAAO,CAACC,QAAQ;IAClD,OAAO,IAAI,SAAS1B,SAAS;QAC3B,iBAAiB;QACjB,IAAI;YACF,MAAM2B,MAAM,IAAIC,IAAI,AAAC5B,QAA2B2B,GAAG,IAAI,IAAI;YAC3D,OAAOA,IAAID,QAAQ;QACrB,EAAE,OAAM;YACN,OAAO;QACT;IACF;IAEA,OAAO;AACT;AAYA,MAAMG;IAIJ,aAAc;aAHNC,QAAQ,IAAIC;QAIlB,4CAA4C;QAC5C,IAAI,CAACC,eAAe,GAAGC,YAAY;YACjC,IAAI,CAACC,OAAO;QACd,GAAG,IAAI,KAAK;IACd;IAEAjB,IAAIlB,GAAW,EAA+B;QAC5C,MAAMoC,QAAQ,IAAI,CAACL,KAAK,CAACb,GAAG,CAAClB;QAE7B,IAAI,CAACoC,OAAO;YACV,OAAO;QACT;QAEA,2BAA2B;QAC3B,IAAIC,KAAKC,GAAG,KAAKF,MAAMG,SAAS,EAAE;YAChC,IAAI,CAACR,KAAK,CAACS,MAAM,CAACxC;YAClB,OAAO;QACT;QAEA,OAAOoC;IACT;IAEAK,IAAIzC,GAAW,EAAEoC,KAA2B,EAAQ;QAClD,IAAI,CAACL,KAAK,CAACU,GAAG,CAACzC,KAAKoC;IACtB;IAEAM,UAAU1C,GAAW,EAAU;QAC7B,MAAMoC,QAAQ,IAAI,CAAClB,GAAG,CAAClB;QACvB,IAAIoC,OAAO;YACTA,MAAMO,KAAK;YACX,IAAI,CAACF,GAAG,CAACzC,KAAKoC;YACd,OAAOA,MAAMO,KAAK;QACpB;QACA,OAAO;IACT;IAEQR,UAAgB;QACtB,MAAMG,MAAMD,KAAKC,GAAG;QACpB,IAAIM,UAAU;QAEd,KAAK,MAAM,CAAC5C,KAAKoC,MAAM,IAAI,IAAI,CAACL,KAAK,CAACc,OAAO,GAAI;YAC/C,IAAIP,MAAMF,MAAMG,SAAS,EAAE;gBACzB,IAAI,CAACR,KAAK,CAACS,MAAM,CAACxC;gBAClB4C;YACF;QACF;QAEA,IAAIA,UAAU,GAAG;YACf1C,QAAQ4C,GAAG,CAAC,CAAC,8BAA8B,EAAEF,QAAQ,mBAAmB,CAAC;QAC3E;IACF;IAEAG,WAAqD;QACnD,MAAMF,UAAU,IAAI,CAACd,KAAK,CAACiB,IAAI;QAC/B,MAAMC,cAAcC,KAAKC,SAAS,CAAC;eAAI,IAAI,CAACpB,KAAK,CAACc,OAAO;SAAG,EAAEO,MAAM;QAEpE,OAAO;YAAEP;YAASI;QAAY;IAChC;IAEAI,QAAc;QACZ,IAAI,CAACtB,KAAK,CAACsB,KAAK;IAClB;IAEAC,UAAgB;QACd,IAAI,IAAI,CAACrB,eAAe,EAAE;YACxBsB,cAAc,IAAI,CAACtB,eAAe;QACpC;QACA,IAAI,CAACF,KAAK,CAACsB,KAAK;IAClB;AACF;AAEA,wCAAwC;AACxC,MAAMlE,cAAc,IAAI2C;AAExB,wDAAwD;AACxD,oBAAoB;AACpB,wDAAwD;AAExD,MAAM0B;IAiBJC,cAAcC,MAAiC,EAAEjD,EAAU,EAAEI,QAAgB,EAAQ;QACnF,IAAI,CAAC8C,OAAO,CAACC,aAAa;QAE1B,IAAIF,OAAOG,OAAO,EAAE;YAClB,IAAI,CAACF,OAAO,CAACG,eAAe;QAC9B,OAAO;YACL,IAAI,CAACH,OAAO,CAACI,eAAe;YAE5B,yBAAyB;YACzB,MAAMC,eAAe,IAAI,CAACC,UAAU,CAAC/C,GAAG,CAACT,OAAO;YAChD,IAAI,CAACwD,UAAU,CAACxB,GAAG,CAAChC,IAAIuD,eAAe;QACzC;QAEA,mBAAmB;QACnB,IAAIN,OAAOQ,MAAM,KAAK,SAAS;YAC7B,IAAI,CAACP,OAAO,CAACQ,SAAS;QACxB,OAAO,IAAIT,OAAOQ,MAAM,KAAK,UAAU;YACrC,IAAI,CAACP,OAAO,CAACS,eAAe;QAC9B,OAAO,IAAIV,OAAOQ,MAAM,KAAK,SAAS;YACpC,IAAI,CAACP,OAAO,CAACU,MAAM;QACrB;QAEA,gCAAgC;QAChC,IAAIX,OAAOC,OAAO,EAAEW,cAAc;YAChC,IAAI,CAACC,aAAa,CAACC,IAAI,CAACd,OAAOC,OAAO,CAACW,YAAY;YAEnD,yCAAyC;YACzC,IAAI,IAAI,CAACC,aAAa,CAACnB,MAAM,GAAG,MAAM;gBACpC,IAAI,CAACmB,aAAa,GAAG,IAAI,CAACA,aAAa,CAACE,KAAK,CAAC,CAAC;YACjD;YAEA,oBAAoB;YACpB,IAAI,CAACd,OAAO,CAACe,mBAAmB,GAC9B,IAAI,CAACH,aAAa,CAACI,MAAM,CAAC,CAACC,GAAGC,IAAMD,IAAIC,GAAG,KAAK,IAAI,CAACN,aAAa,CAACnB,MAAM;QAC7E;QAEA,qBAAqB;QACrB,MAAM0B,gBAAgB,IAAI,CAACC,cAAc,CAAC7D,GAAG,CAACL,aAAa;QAC3D,IAAI,CAACkE,cAAc,CAACtC,GAAG,CAAC5B,UAAUiE,gBAAgB;QAElD,kBAAkB;QAClB,IAAI,CAACE,cAAc;IACrB;IAEQA,iBAAuB;QAC7B,qBAAqB;QACrB,IAAI,CAACrB,OAAO,CAACsB,aAAa,GAAG7D,MAAM8D,IAAI,CAAC,IAAI,CAACjB,UAAU,CAACpB,OAAO,IAC5DsC,IAAI,CAAC,CAACP,GAAGC,IAAMA,CAAC,CAAC,EAAE,GAAGD,CAAC,CAAC,EAAE,EAC1BH,KAAK,CAAC,GAAG,IACTW,GAAG,CAAC,CAAC,CAAC3E,IAAIkC,MAAM,GAAM,CAAA;gBAAElC;gBAAIkC;YAAM,CAAA;QAErC,gBAAgB;QAChB,IAAI,CAACgB,OAAO,CAAC0B,YAAY,GAAGjE,MAAM8D,IAAI,CAAC,IAAI,CAACH,cAAc,CAAClC,OAAO,IAC/DsC,IAAI,CAAC,CAACP,GAAGC,IAAMA,CAAC,CAAC,EAAE,GAAGD,CAAC,CAAC,EAAE,EAC1BH,KAAK,CAAC,GAAG,IACTW,GAAG,CAAC,CAAC,CAACvE,UAAU8B,MAAM,GAAM,CAAA;gBAAE9B;gBAAU8B;YAAM,CAAA;IACnD;IAEA2C,aAA+B;QAC7B,OAAO;YAAE,GAAG,IAAI,CAAC3B,OAAO;QAAC;IAC3B;IAEA4B,QAAc;QACZ,IAAI,CAAC5B,OAAO,GAAG;YACbC,eAAe;YACfE,iBAAiB;YACjBC,iBAAiB;YACjBI,WAAW;YACXC,iBAAiB;YACjBC,QAAQ;YACRK,qBAAqB;YACrBO,eAAe,EAAE;YACjBI,cAAc,EAAE;QAClB;QACA,IAAI,CAACd,aAAa,GAAG,EAAE;QACvB,IAAI,CAACN,UAAU,CAACZ,KAAK;QACrB,IAAI,CAAC0B,cAAc,CAAC1B,KAAK;IAC3B;;aA7FQM,UAA4B;YAClCC,eAAe;YACfE,iBAAiB;YACjBC,iBAAiB;YACjBI,WAAW;YACXC,iBAAiB;YACjBC,QAAQ;YACRK,qBAAqB;YACrBO,eAAe,EAAE;YACjBI,cAAc,EAAE;QAClB;aAEQd,gBAA0B,EAAE;aAC5BN,aAAa,IAAIjC;aACjB+C,iBAAiB,IAAI/C;;AAgF/B;AAEA,6CAA6C;AAC7C,MAAM5C,mBAAmB,IAAIoE;AAK7B,wDAAwD;AACxD,uBAAuB;AACvB,wDAAwD;AAExD,8DAA8D;AAE9D;;CAEC,GACD,eAAegC,mBACbxF,GAAW,EACXyF,MAAiC;IAEjC,MAAMC,YAAYrD,KAAKC,GAAG;IAE1B,IAAI;QACF,qCAAqC;QACrC,MAAMoB,SAAS,MAAMiC,IAAAA,0BAAmB,EAAC3F,KAAKyF;QAE9C,IAAI/B,QAAQ;YACV,OAAO;gBACLG,SAASH,OAAOG,OAAO;gBACvB+B,OAAOlC,OAAOkC,KAAK,IAAIH,OAAOjG,WAAW;gBACzCqG,WAAWnC,OAAOmC,SAAS,IAAI;gBAC/BtD,WAAWmB,OAAOnB,SAAS,IAAIF,KAAKC,GAAG,KAAKmD,OAAOlG,QAAQ;gBAC3DuG,YAAYpC,OAAOG,OAAO,GAAGkC,YAAYC,KAAKC,IAAI,CAACR,OAAOlG,QAAQ,GAAG;gBACrE2E,QAAQ;gBACRP,SAAS;oBACPW,cAAcjC,KAAKC,GAAG,KAAKoD;oBAC3BQ,UAAU;oBACVC,cAAcnG;gBAChB;YACF;QACF;QAEA,kDAAkD;QAClD,MAAM,EAAEoG,KAAK,EAAE,GAAG,MAAM,mEAAA,QAAO;QAC/B,MAAM9D,MAAMD,KAAKC,GAAG;QACpB,MAAM+D,SAASL,KAAKM,KAAK,CAAChE,MAAMmD,OAAOlG,QAAQ;QAC/C,MAAMgH,WAAW,CAAC,WAAW,EAAEvG,IAAI,CAAC,EAAEqG,QAAQ;QAE9C,0CAA0C;QAC1C,MAAMG,WAAWJ,MAAMI,QAAQ;QAC/BA,SAASC,IAAI,CAACF;QACdC,SAASE,MAAM,CAACH,UAAUP,KAAKC,IAAI,CAACR,OAAOlG,QAAQ,GAAG;QAEtD,MAAMoH,UAAU,MAAMH,SAASI,IAAI;QACnC,MAAMjE,QAAQgE,SAAS,CAAC,EAAE,EAAE,CAAC,EAAE,IAAc;QAE7C,MAAMd,YAAYG,KAAKa,GAAG,CAAC,GAAGpB,OAAOjG,WAAW,GAAGmD;QACnD,MAAMJ,YAAY,AAAC8D,CAAAA,SAAS,CAAA,IAAKZ,OAAOlG,QAAQ;QAChD,MAAMsE,UAAUlB,SAAS8C,OAAOjG,WAAW;QAE3C,OAAO;YACLqE;YACA+B,OAAOH,OAAOjG,WAAW;YACzBqG;YACAtD;YACAuD,YAAYjC,UAAUkC,YAAYC,KAAKC,IAAI,CAAC,AAAC1D,CAAAA,YAAYD,GAAE,IAAK;YAChE4B,QAAQ;YACRP,SAAS;gBACPW,cAAcjC,KAAKC,GAAG,KAAKoD;gBAC3BQ,UAAU;gBACVC,cAAcI;YAChB;QACF;IACF,EAAE,OAAOO,OAAO;QACd5G,QAAQ4G,KAAK,CAAC,gCAAgCA;QAE9C,sCAAsC;QACtC,OAAOC,oBAAoB/G,KAAKyF;IAClC;AACF;AAEA;;CAEC,GACD,SAASsB,oBACP/G,GAAW,EACXyF,MAAiC;IAEjC,MAAMC,YAAYrD,KAAKC,GAAG;IAC1B,MAAMA,MAAMD,KAAKC,GAAG;IAEpB,IAAIF,QAAQjD,YAAY+B,GAAG,CAAClB;IAE5B,IAAI,CAACoC,OAAO;QACV,kCAAkC;QAClCA,QAAQ;YACNO,OAAO;YACPJ,WAAWD,MAAMmD,OAAOlG,QAAQ;YAChCyH,cAAc1E;QAChB;QACAnD,YAAYsD,GAAG,CAACzC,KAAKoC;QAErB,OAAO;YACLyB,SAAS;YACT+B,OAAOH,OAAOjG,WAAW;YACzBqG,WAAWJ,OAAOjG,WAAW,GAAG;YAChC+C,WAAWH,MAAMG,SAAS;YAC1B2B,QAAQ;YACRP,SAAS;gBACPW,cAAcjC,KAAKC,GAAG,KAAKoD;gBAC3BQ,UAAU;gBACVC,cAAcnG;YAChB;QACF;IACF;IAEA,uBAAuB;IACvBoC,MAAMO,KAAK;IACXxD,YAAYsD,GAAG,CAACzC,KAAKoC;IAErB,MAAMyB,UAAUzB,MAAMO,KAAK,IAAI8C,OAAOjG,WAAW;IACjD,MAAMqG,YAAYG,KAAKa,GAAG,CAAC,GAAGpB,OAAOjG,WAAW,GAAG4C,MAAMO,KAAK;IAE9D,OAAO;QACLkB;QACA+B,OAAOH,OAAOjG,WAAW;QACzBqG;QACAtD,WAAWH,MAAMG,SAAS;QAC1BuD,YAAYjC,UAAUkC,YAAYC,KAAKC,IAAI,CAAC,AAAC7D,CAAAA,MAAMG,SAAS,GAAGD,GAAE,IAAK;QACtE4B,QAAQ;QACRP,SAAS;YACPW,cAAcjC,KAAKC,GAAG,KAAKoD;YAC3BQ,UAAU;YACVC,cAAcnG;QAChB;IACF;AACF;AASO,eAAejB,yBACpBkB,OAAqC,EACrCgH,UAAsD,EACtDC,YAAiD;IAEjD,MAAMC,aAAarI,6BAA6B,CAACmI,WAAW;IAE5D,IAAI,CAACE,YAAY;QACf,OAAO;YACLtD,SAAS;YACT+B,OAAO;YACPC,WAAW;YACXtD,WAAWF,KAAKC,GAAG,KAAK;YACxBwE,OAAO,CAAC,eAAe,EAAEG,WAAW,eAAe,CAAC;YACpDG,MAAM;YACNlD,QAAQ;QACV;IACF;IAEA,MAAMuB,SAAS;QAAE,GAAG0B,UAAU;QAAE,GAAGD,YAAY;IAAC;IAChD,MAAMG,eAAe5B,OAAO4B,YAAY,IAAIpI;IAC5C,MAAMe,MAAMqH,aAAapH;IAEzB,IAAIyD;IAEJ,IAAI;QACF,4CAA4C;QAC5C,IAAI+B,OAAO/F,WAAW,KAAK,SAAS,MAAM4H,IAAAA,uBAAgB,KAAI;YAC5D5D,SAAS,MAAM8B,mBAAmBxF,KAAKyF;QACzC,OAAO;YACL/B,SAASqD,oBAAoB/G,KAAKyF;QACpC;QAEA,wCAAwC;QACxC,IAAIA,OAAO9F,aAAa,EAAE;YACxB,MAAMc,KAAKC,YAAYT;YACvB,MAAMY,WAAWC,YAAYb;YAC7Bb,iBAAiBqE,aAAa,CAACC,QAAQjD,IAAII;QAC7C;QAEA,6BAA6B;QAC7B,IAAI4E,OAAO7F,aAAa,EAAE;YACxB,IAAI,CAAC8D,OAAOG,OAAO,EAAE;gBACnB3D,QAAQC,IAAI,CAAC,CAAC,kCAAkC,EAAEH,IAAI,EAAE,EAAE0D,OAAOmC,SAAS,CAAC,CAAC,EAAEnC,OAAOkC,KAAK,EAAE;gBAE5F,0CAA0C;gBAC1C,IAAIH,OAAO1F,cAAc,EAAE;oBACzB0F,OAAO1F,cAAc,CAACC,KAAKC;gBAC7B;YACF;QACF;QAEA,OAAOyD;IACT,EAAE,OAAOoD,OAAO;QACd5G,QAAQ4G,KAAK,CAAC,mDAAmDA;QAEjE,OAAO;YACLjD,SAAS;YACT+B,OAAOH,OAAOjG,WAAW;YACzBqG,WAAWJ,OAAOjG,WAAW;YAC7B+C,WAAWF,KAAKC,GAAG,KAAKmD,OAAOlG,QAAQ;YACvCuH,OAAO;YACPM,MAAM;YACNlD,QAAQ;QACV;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2d4a2b7e49978409a3dda90d7e96054294ddea92"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_26my3rs2kc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_26my3rs2kc();
cov_26my3rs2kc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_26my3rs2kc().f[0]++;
  cov_26my3rs2kc().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_26my3rs2kc().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_26my3rs2kc().s[3]++;
_export(exports, {
  get ENTERPRISE_RATE_LIMIT_CONFIGS() {
    /* istanbul ignore next */
    cov_26my3rs2kc().f[1]++;
    cov_26my3rs2kc().s[4]++;
    return ENTERPRISE_RATE_LIMIT_CONFIGS;
  },
  get checkEnterpriseRateLimit() {
    /* istanbul ignore next */
    cov_26my3rs2kc().f[2]++;
    cov_26my3rs2kc().s[5]++;
    return checkEnterpriseRateLimit;
  },
  get endpointKeyGenerator() {
    /* istanbul ignore next */
    cov_26my3rs2kc().f[3]++;
    cov_26my3rs2kc().s[6]++;
    return endpointKeyGenerator;
  },
  get hybridKeyGenerator() {
    /* istanbul ignore next */
    cov_26my3rs2kc().f[4]++;
    cov_26my3rs2kc().s[7]++;
    return hybridKeyGenerator;
  },
  get ipKeyGenerator() {
    /* istanbul ignore next */
    cov_26my3rs2kc().f[5]++;
    cov_26my3rs2kc().s[8]++;
    return ipKeyGenerator;
  },
  get memoryStore() {
    /* istanbul ignore next */
    cov_26my3rs2kc().f[6]++;
    cov_26my3rs2kc().s[9]++;
    return memoryStore;
  },
  get metricsCollector() {
    /* istanbul ignore next */
    cov_26my3rs2kc().f[7]++;
    cov_26my3rs2kc().s[10]++;
    return metricsCollector;
  },
  get userKeyGenerator() {
    /* istanbul ignore next */
    cov_26my3rs2kc().f[8]++;
    cov_26my3rs2kc().s[11]++;
    return userKeyGenerator;
  }
});
const _redis =
/* istanbul ignore next */
(cov_26my3rs2kc().s[12]++, require("../integrations/redis"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_26my3rs2kc().f[9]++;
  cov_26my3rs2kc().s[13]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_26my3rs2kc().b[0][0]++;
    cov_26my3rs2kc().s[14]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_26my3rs2kc().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[15]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[16]++, new WeakMap());
  /* istanbul ignore next */
  cov_26my3rs2kc().s[17]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_26my3rs2kc().f[10]++;
    cov_26my3rs2kc().s[18]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_26my3rs2kc().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_26my3rs2kc().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_26my3rs2kc().f[11]++;
  cov_26my3rs2kc().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_26my3rs2kc().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_26my3rs2kc().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_26my3rs2kc().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_26my3rs2kc().b[2][0]++;
    cov_26my3rs2kc().s[20]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_26my3rs2kc().b[2][1]++;
  }
  cov_26my3rs2kc().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_26my3rs2kc().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_26my3rs2kc().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_26my3rs2kc().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_26my3rs2kc().b[4][0]++;
    cov_26my3rs2kc().s[22]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_26my3rs2kc().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[23]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_26my3rs2kc().s[24]++;
  if (
  /* istanbul ignore next */
  (cov_26my3rs2kc().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_26my3rs2kc().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_26my3rs2kc().b[6][0]++;
    cov_26my3rs2kc().s[25]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_26my3rs2kc().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[26]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[27]++,
  /* istanbul ignore next */
  (cov_26my3rs2kc().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_26my3rs2kc().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_26my3rs2kc().s[28]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_26my3rs2kc().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_26my3rs2kc().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_26my3rs2kc().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_26my3rs2kc().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_26my3rs2kc().s[30]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_26my3rs2kc().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_26my3rs2kc().b[11][1]++, null));
      /* istanbul ignore next */
      cov_26my3rs2kc().s[31]++;
      if (
      /* istanbul ignore next */
      (cov_26my3rs2kc().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_26my3rs2kc().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_26my3rs2kc().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_26my3rs2kc().b[12][0]++;
        cov_26my3rs2kc().s[32]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_26my3rs2kc().b[12][1]++;
        cov_26my3rs2kc().s[33]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_26my3rs2kc().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_26my3rs2kc().s[34]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_26my3rs2kc().s[35]++;
  if (cache) {
    /* istanbul ignore next */
    cov_26my3rs2kc().b[14][0]++;
    cov_26my3rs2kc().s[36]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_26my3rs2kc().b[14][1]++;
  }
  cov_26my3rs2kc().s[37]++;
  return newObj;
}
const ENTERPRISE_RATE_LIMIT_CONFIGS =
/* istanbul ignore next */
(cov_26my3rs2kc().s[38]++, {
  // Autenticación crítica
  CRITICAL_AUTH: {
    windowMs: 15 * 60 * 1000,
    maxRequests: 3,
    message: 'Demasiados intentos de autenticación crítica. Intenta en 15 minutos.',
    enableRedis: true,
    enableMetrics: true,
    enableLogging: true
  },
  // Admin APIs
  ADMIN_API: {
    windowMs: 5 * 60 * 1000,
    maxRequests: 50,
    message: 'Límite de requests administrativas excedido. Intenta en 5 minutos.',
    enableRedis: true,
    enableMetrics: true,
    enableLogging: true
  },
  // APIs de pagos
  PAYMENT_API: {
    windowMs: 10 * 60 * 1000,
    maxRequests: 15,
    message: 'Límite de requests de pagos excedido. Intenta en 10 minutos.',
    enableRedis: true,
    enableMetrics: true,
    enableLogging: true,
    onLimitReached: (key, request) => {
      /* istanbul ignore next */
      cov_26my3rs2kc().f[12]++;
      cov_26my3rs2kc().s[39]++;
      console.warn(`[PAYMENT_RATE_LIMIT] Límite excedido para ${key}`);
    }
  },
  // APIs públicas de productos
  PUBLIC_API: {
    windowMs: 1 * 60 * 1000,
    maxRequests: 100,
    message: 'Límite de requests públicas excedido. Intenta en 1 minuto.',
    enableRedis: true,
    enableMetrics: true,
    enableLogging: false // No loggear APIs públicas
  },
  // Webhooks
  WEBHOOK_API: {
    windowMs: 1 * 60 * 1000,
    maxRequests: 200,
    message: 'Límite de webhooks excedido.',
    enableRedis: true,
    enableMetrics: true,
    enableLogging: true
  },
  // Búsquedas y consultas
  SEARCH_API: {
    windowMs: 1 * 60 * 1000,
    maxRequests: 60,
    message: 'Límite de búsquedas excedido. Intenta en 1 minuto.',
    enableRedis: true,
    enableMetrics: true,
    enableLogging: false
  },
  // Upload de archivos
  UPLOAD_API: {
    windowMs: 5 * 60 * 1000,
    maxRequests: 10,
    message: 'Límite de uploads excedido. Intenta en 5 minutos.',
    enableRedis: true,
    enableMetrics: true,
    enableLogging: true
  },
  // APIs de desarrollo/debug
  DEBUG_API: {
    windowMs: 1 * 60 * 1000,
    maxRequests: 30,
    message: 'Límite de debug APIs excedido.',
    enableRedis: false,
    enableMetrics: true,
    enableLogging: true
  }
});
function ipKeyGenerator(request) {
  /* istanbul ignore next */
  cov_26my3rs2kc().f[13]++;
  const ip =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[40]++, getClientIP(request));
  /* istanbul ignore next */
  cov_26my3rs2kc().s[41]++;
  return `ip:${ip}`;
}
function userKeyGenerator(request) {
  /* istanbul ignore next */
  cov_26my3rs2kc().f[14]++;
  // Intentar obtener user ID de diferentes fuentes
  const userId =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[42]++, getUserId(request));
  const ip =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[43]++, getClientIP(request));
  /* istanbul ignore next */
  cov_26my3rs2kc().s[44]++;
  return userId ?
  /* istanbul ignore next */
  (cov_26my3rs2kc().b[15][0]++, `user:${userId}`) :
  /* istanbul ignore next */
  (cov_26my3rs2kc().b[15][1]++, `ip:${ip}`);
}
function endpointKeyGenerator(request) {
  /* istanbul ignore next */
  cov_26my3rs2kc().f[15]++;
  const ip =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[45]++, getClientIP(request));
  const endpoint =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[46]++, getEndpoint(request));
  /* istanbul ignore next */
  cov_26my3rs2kc().s[47]++;
  return `endpoint:${ip}:${endpoint}`;
}
function hybridKeyGenerator(request) {
  /* istanbul ignore next */
  cov_26my3rs2kc().f[16]++;
  const userId =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[48]++, getUserId(request));
  const ip =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[49]++, getClientIP(request));
  const endpoint =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[50]++, getEndpoint(request));
  const userPart =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[51]++, userId ?
  /* istanbul ignore next */
  (cov_26my3rs2kc().b[16][0]++, `user:${userId}`) :
  /* istanbul ignore next */
  (cov_26my3rs2kc().b[16][1]++, `ip:${ip}`));
  /* istanbul ignore next */
  cov_26my3rs2kc().s[52]++;
  return `${userPart}:${endpoint}`;
}
// =====================================================
// UTILIDADES
// =====================================================
/**
 * Obtiene la IP del cliente
 */
function getClientIP(request) {
  /* istanbul ignore next */
  cov_26my3rs2kc().f[17]++;
  // Intentar diferentes headers de IP
  const headers =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[53]++, ['x-forwarded-for', 'x-real-ip', 'x-client-ip', 'cf-connecting-ip']);
  /* istanbul ignore next */
  cov_26my3rs2kc().s[54]++;
  for (const header of headers) {
    let ip =
    /* istanbul ignore next */
    (cov_26my3rs2kc().s[55]++, null);
    /* istanbul ignore next */
    cov_26my3rs2kc().s[56]++;
    if (
    /* istanbul ignore next */
    (cov_26my3rs2kc().b[18][0]++, 'headers' in request) &&
    /* istanbul ignore next */
    (cov_26my3rs2kc().b[18][1]++, typeof request.headers.get === 'function')) {
      /* istanbul ignore next */
      cov_26my3rs2kc().b[17][0]++;
      cov_26my3rs2kc().s[57]++;
      // NextRequest
      ip = request.headers.get(header);
    } else {
      /* istanbul ignore next */
      cov_26my3rs2kc().b[17][1]++;
      cov_26my3rs2kc().s[58]++;
      if ('headers' in request) {
        /* istanbul ignore next */
        cov_26my3rs2kc().b[19][0]++;
        // NextApiRequest
        const headerValue =
        /* istanbul ignore next */
        (cov_26my3rs2kc().s[59]++, request.headers[header]);
        /* istanbul ignore next */
        cov_26my3rs2kc().s[60]++;
        ip = Array.isArray(headerValue) ?
        /* istanbul ignore next */
        (cov_26my3rs2kc().b[20][0]++, headerValue[0]) :
        /* istanbul ignore next */
        (cov_26my3rs2kc().b[20][1]++,
        /* istanbul ignore next */
        (cov_26my3rs2kc().b[21][0]++, headerValue) ||
        /* istanbul ignore next */
        (cov_26my3rs2kc().b[21][1]++, null));
      } else
      /* istanbul ignore next */
      {
        cov_26my3rs2kc().b[19][1]++;
      }
    }
    /* istanbul ignore next */
    cov_26my3rs2kc().s[61]++;
    if (ip) {
      /* istanbul ignore next */
      cov_26my3rs2kc().b[22][0]++;
      cov_26my3rs2kc().s[62]++;
      // Tomar la primera IP si hay múltiples
      return ip.split(',')[0].trim();
    } else
    /* istanbul ignore next */
    {
      cov_26my3rs2kc().b[22][1]++;
    }
  }
  /* istanbul ignore next */
  cov_26my3rs2kc().s[63]++;
  return 'unknown';
}
/**
 * Obtiene el ID del usuario autenticado
 */
function getUserId(request) {
  /* istanbul ignore next */
  cov_26my3rs2kc().f[18]++;
  // Intentar obtener de diferentes fuentes
  // 1. Headers de Clerk
  let userId =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[64]++, null);
  /* istanbul ignore next */
  cov_26my3rs2kc().s[65]++;
  if (
  /* istanbul ignore next */
  (cov_26my3rs2kc().b[24][0]++, 'headers' in request) &&
  /* istanbul ignore next */
  (cov_26my3rs2kc().b[24][1]++, typeof request.headers.get === 'function')) {
    /* istanbul ignore next */
    cov_26my3rs2kc().b[23][0]++;
    cov_26my3rs2kc().s[66]++;
    // NextRequest
    userId = request.headers.get('x-clerk-user-id');
  } else {
    /* istanbul ignore next */
    cov_26my3rs2kc().b[23][1]++;
    cov_26my3rs2kc().s[67]++;
    if ('headers' in request) {
      /* istanbul ignore next */
      cov_26my3rs2kc().b[25][0]++;
      // NextApiRequest
      const headerValue =
      /* istanbul ignore next */
      (cov_26my3rs2kc().s[68]++, request.headers['x-clerk-user-id']);
      /* istanbul ignore next */
      cov_26my3rs2kc().s[69]++;
      userId = Array.isArray(headerValue) ?
      /* istanbul ignore next */
      (cov_26my3rs2kc().b[26][0]++, headerValue[0]) :
      /* istanbul ignore next */
      (cov_26my3rs2kc().b[26][1]++,
      /* istanbul ignore next */
      (cov_26my3rs2kc().b[27][0]++, headerValue) ||
      /* istanbul ignore next */
      (cov_26my3rs2kc().b[27][1]++, null));
    } else
    /* istanbul ignore next */
    {
      cov_26my3rs2kc().b[25][1]++;
    }
  }
  // 2. Contexto enterprise si está disponible
  /* istanbul ignore next */
  cov_26my3rs2kc().s[70]++;
  if (
  /* istanbul ignore next */
  (cov_26my3rs2kc().b[29][0]++, !userId) &&
  /* istanbul ignore next */
  (cov_26my3rs2kc().b[29][1]++, request.enterpriseAuth?.userId)) {
    /* istanbul ignore next */
    cov_26my3rs2kc().b[28][0]++;
    cov_26my3rs2kc().s[71]++;
    userId = request.enterpriseAuth.userId;
  } else
  /* istanbul ignore next */
  {
    cov_26my3rs2kc().b[28][1]++;
  }
  // 3. Contexto de autenticación si está disponible
  cov_26my3rs2kc().s[72]++;
  if (
  /* istanbul ignore next */
  (cov_26my3rs2kc().b[31][0]++, !userId) &&
  /* istanbul ignore next */
  (cov_26my3rs2kc().b[31][1]++, request.auth?.userId)) {
    /* istanbul ignore next */
    cov_26my3rs2kc().b[30][0]++;
    cov_26my3rs2kc().s[73]++;
    userId = request.auth.userId;
  } else
  /* istanbul ignore next */
  {
    cov_26my3rs2kc().b[30][1]++;
  }
  cov_26my3rs2kc().s[74]++;
  return userId;
}
/**
 * Obtiene el endpoint de la request
 */
function getEndpoint(request) {
  /* istanbul ignore next */
  cov_26my3rs2kc().f[19]++;
  cov_26my3rs2kc().s[75]++;
  if ('nextUrl' in request) {
    /* istanbul ignore next */
    cov_26my3rs2kc().b[32][0]++;
    cov_26my3rs2kc().s[76]++;
    // NextRequest
    return request.nextUrl.pathname;
  } else {
    /* istanbul ignore next */
    cov_26my3rs2kc().b[32][1]++;
    cov_26my3rs2kc().s[77]++;
    if ('url' in request) {
      /* istanbul ignore next */
      cov_26my3rs2kc().b[33][0]++;
      cov_26my3rs2kc().s[78]++;
      // NextApiRequest
      try {
        const url =
        /* istanbul ignore next */
        (cov_26my3rs2kc().s[79]++, new URL(
        /* istanbul ignore next */
        (cov_26my3rs2kc().b[34][0]++, request.url) ||
        /* istanbul ignore next */
        (cov_26my3rs2kc().b[34][1]++, ''), 'http://localhost'));
        /* istanbul ignore next */
        cov_26my3rs2kc().s[80]++;
        return url.pathname;
      } catch {
        /* istanbul ignore next */
        cov_26my3rs2kc().s[81]++;
        return '/unknown';
      }
    } else
    /* istanbul ignore next */
    {
      cov_26my3rs2kc().b[33][1]++;
    }
  }
  /* istanbul ignore next */
  cov_26my3rs2kc().s[82]++;
  return '/unknown';
}
class MemoryRateLimitStore {
  constructor() {
    /* istanbul ignore next */
    cov_26my3rs2kc().f[20]++;
    cov_26my3rs2kc().s[83]++;
    this.store = new Map();
    // Limpiar entradas expiradas cada 5 minutos
    /* istanbul ignore next */
    cov_26my3rs2kc().s[84]++;
    this.cleanupInterval = setInterval(() => {
      /* istanbul ignore next */
      cov_26my3rs2kc().f[21]++;
      cov_26my3rs2kc().s[85]++;
      this.cleanup();
    }, 5 * 60 * 1000);
  }
  get(key) {
    /* istanbul ignore next */
    cov_26my3rs2kc().f[22]++;
    const entry =
    /* istanbul ignore next */
    (cov_26my3rs2kc().s[86]++, this.store.get(key));
    /* istanbul ignore next */
    cov_26my3rs2kc().s[87]++;
    if (!entry) {
      /* istanbul ignore next */
      cov_26my3rs2kc().b[35][0]++;
      cov_26my3rs2kc().s[88]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_26my3rs2kc().b[35][1]++;
    }
    // Verificar si ha expirado
    cov_26my3rs2kc().s[89]++;
    if (Date.now() > entry.resetTime) {
      /* istanbul ignore next */
      cov_26my3rs2kc().b[36][0]++;
      cov_26my3rs2kc().s[90]++;
      this.store.delete(key);
      /* istanbul ignore next */
      cov_26my3rs2kc().s[91]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_26my3rs2kc().b[36][1]++;
    }
    cov_26my3rs2kc().s[92]++;
    return entry;
  }
  set(key, entry) {
    /* istanbul ignore next */
    cov_26my3rs2kc().f[23]++;
    cov_26my3rs2kc().s[93]++;
    this.store.set(key, entry);
  }
  increment(key) {
    /* istanbul ignore next */
    cov_26my3rs2kc().f[24]++;
    const entry =
    /* istanbul ignore next */
    (cov_26my3rs2kc().s[94]++, this.get(key));
    /* istanbul ignore next */
    cov_26my3rs2kc().s[95]++;
    if (entry) {
      /* istanbul ignore next */
      cov_26my3rs2kc().b[37][0]++;
      cov_26my3rs2kc().s[96]++;
      entry.count++;
      /* istanbul ignore next */
      cov_26my3rs2kc().s[97]++;
      this.set(key, entry);
      /* istanbul ignore next */
      cov_26my3rs2kc().s[98]++;
      return entry.count;
    } else
    /* istanbul ignore next */
    {
      cov_26my3rs2kc().b[37][1]++;
    }
    cov_26my3rs2kc().s[99]++;
    return 0;
  }
  cleanup() {
    /* istanbul ignore next */
    cov_26my3rs2kc().f[25]++;
    const now =
    /* istanbul ignore next */
    (cov_26my3rs2kc().s[100]++, Date.now());
    let cleaned =
    /* istanbul ignore next */
    (cov_26my3rs2kc().s[101]++, 0);
    /* istanbul ignore next */
    cov_26my3rs2kc().s[102]++;
    for (const [key, entry] of this.store.entries()) {
      /* istanbul ignore next */
      cov_26my3rs2kc().s[103]++;
      if (now > entry.resetTime) {
        /* istanbul ignore next */
        cov_26my3rs2kc().b[38][0]++;
        cov_26my3rs2kc().s[104]++;
        this.store.delete(key);
        /* istanbul ignore next */
        cov_26my3rs2kc().s[105]++;
        cleaned++;
      } else
      /* istanbul ignore next */
      {
        cov_26my3rs2kc().b[38][1]++;
      }
    }
    /* istanbul ignore next */
    cov_26my3rs2kc().s[106]++;
    if (cleaned > 0) {
      /* istanbul ignore next */
      cov_26my3rs2kc().b[39][0]++;
      cov_26my3rs2kc().s[107]++;
      console.log(`[MEMORY_RATE_LIMIT] Limpiadas ${cleaned} entradas expiradas`);
    } else
    /* istanbul ignore next */
    {
      cov_26my3rs2kc().b[39][1]++;
    }
  }
  getStats() {
    /* istanbul ignore next */
    cov_26my3rs2kc().f[26]++;
    const entries =
    /* istanbul ignore next */
    (cov_26my3rs2kc().s[108]++, this.store.size);
    const memoryUsage =
    /* istanbul ignore next */
    (cov_26my3rs2kc().s[109]++, JSON.stringify([...this.store.entries()]).length);
    /* istanbul ignore next */
    cov_26my3rs2kc().s[110]++;
    return {
      entries,
      memoryUsage
    };
  }
  clear() {
    /* istanbul ignore next */
    cov_26my3rs2kc().f[27]++;
    cov_26my3rs2kc().s[111]++;
    this.store.clear();
  }
  destroy() {
    /* istanbul ignore next */
    cov_26my3rs2kc().f[28]++;
    cov_26my3rs2kc().s[112]++;
    if (this.cleanupInterval) {
      /* istanbul ignore next */
      cov_26my3rs2kc().b[40][0]++;
      cov_26my3rs2kc().s[113]++;
      clearInterval(this.cleanupInterval);
    } else
    /* istanbul ignore next */
    {
      cov_26my3rs2kc().b[40][1]++;
    }
    cov_26my3rs2kc().s[114]++;
    this.store.clear();
  }
}
// Instancia global del store en memoria
const memoryStore =
/* istanbul ignore next */
(cov_26my3rs2kc().s[115]++, new MemoryRateLimitStore());
// =====================================================
// MÉTRICAS GLOBALES
// =====================================================
class RateLimitMetricsCollector {
  recordRequest(result, ip, endpoint) {
    /* istanbul ignore next */
    cov_26my3rs2kc().f[29]++;
    cov_26my3rs2kc().s[116]++;
    this.metrics.totalRequests++;
    /* istanbul ignore next */
    cov_26my3rs2kc().s[117]++;
    if (result.allowed) {
      /* istanbul ignore next */
      cov_26my3rs2kc().b[41][0]++;
      cov_26my3rs2kc().s[118]++;
      this.metrics.allowedRequests++;
    } else {
      /* istanbul ignore next */
      cov_26my3rs2kc().b[41][1]++;
      cov_26my3rs2kc().s[119]++;
      this.metrics.blockedRequests++;
      // Registrar IP bloqueada
      const currentCount =
      /* istanbul ignore next */
      (cov_26my3rs2kc().s[120]++,
      /* istanbul ignore next */
      (cov_26my3rs2kc().b[42][0]++, this.blockedIPs.get(ip)) ||
      /* istanbul ignore next */
      (cov_26my3rs2kc().b[42][1]++, 0));
      /* istanbul ignore next */
      cov_26my3rs2kc().s[121]++;
      this.blockedIPs.set(ip, currentCount + 1);
    }
    // Registrar fuente
    /* istanbul ignore next */
    cov_26my3rs2kc().s[122]++;
    if (result.source === 'redis') {
      /* istanbul ignore next */
      cov_26my3rs2kc().b[43][0]++;
      cov_26my3rs2kc().s[123]++;
      this.metrics.redisHits++;
    } else {
      /* istanbul ignore next */
      cov_26my3rs2kc().b[43][1]++;
      cov_26my3rs2kc().s[124]++;
      if (result.source === 'memory') {
        /* istanbul ignore next */
        cov_26my3rs2kc().b[44][0]++;
        cov_26my3rs2kc().s[125]++;
        this.metrics.memoryFallbacks++;
      } else {
        /* istanbul ignore next */
        cov_26my3rs2kc().b[44][1]++;
        cov_26my3rs2kc().s[126]++;
        if (result.source === 'error') {
          /* istanbul ignore next */
          cov_26my3rs2kc().b[45][0]++;
          cov_26my3rs2kc().s[127]++;
          this.metrics.errors++;
        } else
        /* istanbul ignore next */
        {
          cov_26my3rs2kc().b[45][1]++;
        }
      }
    }
    // Registrar tiempo de respuesta
    /* istanbul ignore next */
    cov_26my3rs2kc().s[128]++;
    if (result.metrics?.responseTime) {
      /* istanbul ignore next */
      cov_26my3rs2kc().b[46][0]++;
      cov_26my3rs2kc().s[129]++;
      this.responseTimes.push(result.metrics.responseTime);
      // Mantener solo los últimos 1000 tiempos
      /* istanbul ignore next */
      cov_26my3rs2kc().s[130]++;
      if (this.responseTimes.length > 1000) {
        /* istanbul ignore next */
        cov_26my3rs2kc().b[47][0]++;
        cov_26my3rs2kc().s[131]++;
        this.responseTimes = this.responseTimes.slice(-1000);
      } else
      /* istanbul ignore next */
      {
        cov_26my3rs2kc().b[47][1]++;
      }
      // Calcular promedio
      cov_26my3rs2kc().s[132]++;
      this.metrics.averageResponseTime = this.responseTimes.reduce((a, b) => {
        /* istanbul ignore next */
        cov_26my3rs2kc().f[30]++;
        cov_26my3rs2kc().s[133]++;
        return a + b;
      }, 0) / this.responseTimes.length;
    } else
    /* istanbul ignore next */
    {
      cov_26my3rs2kc().b[46][1]++;
    }
    // Registrar endpoint
    const endpointCount =
    /* istanbul ignore next */
    (cov_26my3rs2kc().s[134]++,
    /* istanbul ignore next */
    (cov_26my3rs2kc().b[48][0]++, this.endpointCounts.get(endpoint)) ||
    /* istanbul ignore next */
    (cov_26my3rs2kc().b[48][1]++, 0));
    /* istanbul ignore next */
    cov_26my3rs2kc().s[135]++;
    this.endpointCounts.set(endpoint, endpointCount + 1);
    // Actualizar tops
    /* istanbul ignore next */
    cov_26my3rs2kc().s[136]++;
    this.updateTopLists();
  }
  updateTopLists() {
    /* istanbul ignore next */
    cov_26my3rs2kc().f[31]++;
    cov_26my3rs2kc().s[137]++;
    // Top IPs bloqueadas
    this.metrics.topBlockedIPs = Array.from(this.blockedIPs.entries()).sort((a, b) => {
      /* istanbul ignore next */
      cov_26my3rs2kc().f[32]++;
      cov_26my3rs2kc().s[138]++;
      return b[1] - a[1];
    }).slice(0, 10).map(([ip, count]) => {
      /* istanbul ignore next */
      cov_26my3rs2kc().f[33]++;
      cov_26my3rs2kc().s[139]++;
      return {
        ip,
        count
      };
    });
    // Top endpoints
    /* istanbul ignore next */
    cov_26my3rs2kc().s[140]++;
    this.metrics.topEndpoints = Array.from(this.endpointCounts.entries()).sort((a, b) => {
      /* istanbul ignore next */
      cov_26my3rs2kc().f[34]++;
      cov_26my3rs2kc().s[141]++;
      return b[1] - a[1];
    }).slice(0, 10).map(([endpoint, count]) => {
      /* istanbul ignore next */
      cov_26my3rs2kc().f[35]++;
      cov_26my3rs2kc().s[142]++;
      return {
        endpoint,
        count
      };
    });
  }
  getMetrics() {
    /* istanbul ignore next */
    cov_26my3rs2kc().f[36]++;
    cov_26my3rs2kc().s[143]++;
    return {
      ...this.metrics
    };
  }
  reset() {
    /* istanbul ignore next */
    cov_26my3rs2kc().f[37]++;
    cov_26my3rs2kc().s[144]++;
    this.metrics = {
      totalRequests: 0,
      allowedRequests: 0,
      blockedRequests: 0,
      redisHits: 0,
      memoryFallbacks: 0,
      errors: 0,
      averageResponseTime: 0,
      topBlockedIPs: [],
      topEndpoints: []
    };
    /* istanbul ignore next */
    cov_26my3rs2kc().s[145]++;
    this.responseTimes = [];
    /* istanbul ignore next */
    cov_26my3rs2kc().s[146]++;
    this.blockedIPs.clear();
    /* istanbul ignore next */
    cov_26my3rs2kc().s[147]++;
    this.endpointCounts.clear();
  }
  constructor() {
    /* istanbul ignore next */
    cov_26my3rs2kc().f[38]++;
    cov_26my3rs2kc().s[148]++;
    this.metrics = {
      totalRequests: 0,
      allowedRequests: 0,
      blockedRequests: 0,
      redisHits: 0,
      memoryFallbacks: 0,
      errors: 0,
      averageResponseTime: 0,
      topBlockedIPs: [],
      topEndpoints: []
    };
    /* istanbul ignore next */
    cov_26my3rs2kc().s[149]++;
    this.responseTimes = [];
    /* istanbul ignore next */
    cov_26my3rs2kc().s[150]++;
    this.blockedIPs = new Map();
    /* istanbul ignore next */
    cov_26my3rs2kc().s[151]++;
    this.endpointCounts = new Map();
  }
}
// Instancia global del collector de métricas
const metricsCollector =
/* istanbul ignore next */
(cov_26my3rs2kc().s[152]++, new RateLimitMetricsCollector());
// =====================================================
// IMPLEMENTACIÓN REDIS
// =====================================================
// Función isRedisAvailable ahora se importa desde @/lib/redis
/**
 * Rate limiting con Redis
 */
async function rateLimitWithRedis(key, config) {
  /* istanbul ignore next */
  cov_26my3rs2kc().f[39]++;
  const startTime =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[153]++, Date.now());
  /* istanbul ignore next */
  cov_26my3rs2kc().s[154]++;
  try {
    // Usar la función importada de Redis
    const result =
    /* istanbul ignore next */
    (cov_26my3rs2kc().s[155]++, await (0, _redis.enterpriseRateLimit)(key, config));
    /* istanbul ignore next */
    cov_26my3rs2kc().s[156]++;
    if (result) {
      /* istanbul ignore next */
      cov_26my3rs2kc().b[49][0]++;
      cov_26my3rs2kc().s[157]++;
      return {
        allowed: result.allowed,
        limit:
        /* istanbul ignore next */
        (cov_26my3rs2kc().b[50][0]++, result.limit) ||
        /* istanbul ignore next */
        (cov_26my3rs2kc().b[50][1]++, config.maxRequests),
        remaining:
        /* istanbul ignore next */
        (cov_26my3rs2kc().b[51][0]++, result.remaining) ||
        /* istanbul ignore next */
        (cov_26my3rs2kc().b[51][1]++, 0),
        resetTime:
        /* istanbul ignore next */
        (cov_26my3rs2kc().b[52][0]++, result.resetTime) ||
        /* istanbul ignore next */
        (cov_26my3rs2kc().b[52][1]++, Date.now() + config.windowMs),
        retryAfter: result.allowed ?
        /* istanbul ignore next */
        (cov_26my3rs2kc().b[53][0]++, undefined) :
        /* istanbul ignore next */
        (cov_26my3rs2kc().b[53][1]++, Math.ceil(config.windowMs / 1000)),
        source: 'redis',
        metrics: {
          responseTime: Date.now() - startTime,
          cacheHit: true,
          keyGenerated: key
        }
      };
    } else
    /* istanbul ignore next */
    {
      cov_26my3rs2kc().b[49][1]++;
    }
    // Si no hay resultado, usar implementación manual
    const {
      redis
    } =
    /* istanbul ignore next */
    (cov_26my3rs2kc().s[158]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_26my3rs2kc().f[40]++;
      cov_26my3rs2kc().s[159]++;
      return /*#__PURE__*/_interop_require_wildcard(require("../redis"));
    }));
    const now =
    /* istanbul ignore next */
    (cov_26my3rs2kc().s[160]++, Date.now());
    const window =
    /* istanbul ignore next */
    (cov_26my3rs2kc().s[161]++, Math.floor(now / config.windowMs));
    const redisKey =
    /* istanbul ignore next */
    (cov_26my3rs2kc().s[162]++, `rate_limit:${key}:${window}`);
    // Usar pipeline para operaciones atómicas
    const pipeline =
    /* istanbul ignore next */
    (cov_26my3rs2kc().s[163]++, redis.pipeline());
    /* istanbul ignore next */
    cov_26my3rs2kc().s[164]++;
    pipeline.incr(redisKey);
    /* istanbul ignore next */
    cov_26my3rs2kc().s[165]++;
    pipeline.expire(redisKey, Math.ceil(config.windowMs / 1000));
    const results =
    /* istanbul ignore next */
    (cov_26my3rs2kc().s[166]++, await pipeline.exec());
    const count =
    /* istanbul ignore next */
    (cov_26my3rs2kc().s[167]++,
    /* istanbul ignore next */
    (cov_26my3rs2kc().b[54][0]++, results?.[0]?.[1]) ||
    /* istanbul ignore next */
    (cov_26my3rs2kc().b[54][1]++, 1));
    const remaining =
    /* istanbul ignore next */
    (cov_26my3rs2kc().s[168]++, Math.max(0, config.maxRequests - count));
    const resetTime =
    /* istanbul ignore next */
    (cov_26my3rs2kc().s[169]++, (window + 1) * config.windowMs);
    const allowed =
    /* istanbul ignore next */
    (cov_26my3rs2kc().s[170]++, count <= config.maxRequests);
    /* istanbul ignore next */
    cov_26my3rs2kc().s[171]++;
    return {
      allowed,
      limit: config.maxRequests,
      remaining,
      resetTime,
      retryAfter: allowed ?
      /* istanbul ignore next */
      (cov_26my3rs2kc().b[55][0]++, undefined) :
      /* istanbul ignore next */
      (cov_26my3rs2kc().b[55][1]++, Math.ceil((resetTime - now) / 1000)),
      source: 'redis',
      metrics: {
        responseTime: Date.now() - startTime,
        cacheHit: true,
        keyGenerated: redisKey
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_26my3rs2kc().s[172]++;
    console.error('[RATE_LIMIT] Error en Redis:', error);
    // Fallback a memoria en caso de error
    /* istanbul ignore next */
    cov_26my3rs2kc().s[173]++;
    return rateLimitWithMemory(key, config);
  }
}
/**
 * Rate limiting con memoria (fallback)
 */
function rateLimitWithMemory(key, config) {
  /* istanbul ignore next */
  cov_26my3rs2kc().f[41]++;
  const startTime =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[174]++, Date.now());
  const now =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[175]++, Date.now());
  let entry =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[176]++, memoryStore.get(key));
  /* istanbul ignore next */
  cov_26my3rs2kc().s[177]++;
  if (!entry) {
    /* istanbul ignore next */
    cov_26my3rs2kc().b[56][0]++;
    cov_26my3rs2kc().s[178]++;
    // Primera request en esta ventana
    entry = {
      count: 1,
      resetTime: now + config.windowMs,
      firstRequest: now
    };
    /* istanbul ignore next */
    cov_26my3rs2kc().s[179]++;
    memoryStore.set(key, entry);
    /* istanbul ignore next */
    cov_26my3rs2kc().s[180]++;
    return {
      allowed: true,
      limit: config.maxRequests,
      remaining: config.maxRequests - 1,
      resetTime: entry.resetTime,
      source: 'memory',
      metrics: {
        responseTime: Date.now() - startTime,
        cacheHit: false,
        keyGenerated: key
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_26my3rs2kc().b[56][1]++;
  }
  // Incrementar contador
  cov_26my3rs2kc().s[181]++;
  entry.count++;
  /* istanbul ignore next */
  cov_26my3rs2kc().s[182]++;
  memoryStore.set(key, entry);
  const allowed =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[183]++, entry.count <= config.maxRequests);
  const remaining =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[184]++, Math.max(0, config.maxRequests - entry.count));
  /* istanbul ignore next */
  cov_26my3rs2kc().s[185]++;
  return {
    allowed,
    limit: config.maxRequests,
    remaining,
    resetTime: entry.resetTime,
    retryAfter: allowed ?
    /* istanbul ignore next */
    (cov_26my3rs2kc().b[57][0]++, undefined) :
    /* istanbul ignore next */
    (cov_26my3rs2kc().b[57][1]++, Math.ceil((entry.resetTime - now) / 1000)),
    source: 'memory',
    metrics: {
      responseTime: Date.now() - startTime,
      cacheHit: true,
      keyGenerated: key
    }
  };
}
async function checkEnterpriseRateLimit(request, configName, customConfig) {
  /* istanbul ignore next */
  cov_26my3rs2kc().f[42]++;
  const baseConfig =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[186]++, ENTERPRISE_RATE_LIMIT_CONFIGS[configName]);
  /* istanbul ignore next */
  cov_26my3rs2kc().s[187]++;
  if (!baseConfig) {
    /* istanbul ignore next */
    cov_26my3rs2kc().b[58][0]++;
    cov_26my3rs2kc().s[188]++;
    return {
      allowed: true,
      limit: 1000,
      remaining: 999,
      resetTime: Date.now() + 60000,
      error: `Configuración '${configName}' no encontrada`,
      code: 'CONFIG_NOT_FOUND',
      source: 'error'
    };
  } else
  /* istanbul ignore next */
  {
    cov_26my3rs2kc().b[58][1]++;
  }
  const config =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[189]++, {
    ...baseConfig,
    ...customConfig
  });
  const keyGenerator =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[190]++,
  /* istanbul ignore next */
  (cov_26my3rs2kc().b[59][0]++, config.keyGenerator) ||
  /* istanbul ignore next */
  (cov_26my3rs2kc().b[59][1]++, hybridKeyGenerator));
  const key =
  /* istanbul ignore next */
  (cov_26my3rs2kc().s[191]++, keyGenerator(request));
  let result;
  /* istanbul ignore next */
  cov_26my3rs2kc().s[192]++;
  try {
    /* istanbul ignore next */
    cov_26my3rs2kc().s[193]++;
    // Intentar Redis primero si está habilitado
    if (
    /* istanbul ignore next */
    (cov_26my3rs2kc().b[61][0]++, config.enableRedis !== false) &&
    /* istanbul ignore next */
    (cov_26my3rs2kc().b[61][1]++, await (0, _redis.isRedisAvailable)())) {
      /* istanbul ignore next */
      cov_26my3rs2kc().b[60][0]++;
      cov_26my3rs2kc().s[194]++;
      result = await rateLimitWithRedis(key, config);
    } else {
      /* istanbul ignore next */
      cov_26my3rs2kc().b[60][1]++;
      cov_26my3rs2kc().s[195]++;
      result = rateLimitWithMemory(key, config);
    }
    // Registrar métricas si está habilitado
    /* istanbul ignore next */
    cov_26my3rs2kc().s[196]++;
    if (config.enableMetrics) {
      /* istanbul ignore next */
      cov_26my3rs2kc().b[62][0]++;
      const ip =
      /* istanbul ignore next */
      (cov_26my3rs2kc().s[197]++, getClientIP(request));
      const endpoint =
      /* istanbul ignore next */
      (cov_26my3rs2kc().s[198]++, getEndpoint(request));
      /* istanbul ignore next */
      cov_26my3rs2kc().s[199]++;
      metricsCollector.recordRequest(result, ip, endpoint);
    } else
    /* istanbul ignore next */
    {
      cov_26my3rs2kc().b[62][1]++;
    }
    // Logging si está habilitado
    cov_26my3rs2kc().s[200]++;
    if (config.enableLogging) {
      /* istanbul ignore next */
      cov_26my3rs2kc().b[63][0]++;
      cov_26my3rs2kc().s[201]++;
      if (!result.allowed) {
        /* istanbul ignore next */
        cov_26my3rs2kc().b[64][0]++;
        cov_26my3rs2kc().s[202]++;
        console.warn(`[RATE_LIMIT] Límite excedido para ${key}: ${result.remaining}/${result.limit}`);
        // Callback personalizado si está definido
        /* istanbul ignore next */
        cov_26my3rs2kc().s[203]++;
        if (config.onLimitReached) {
          /* istanbul ignore next */
          cov_26my3rs2kc().b[65][0]++;
          cov_26my3rs2kc().s[204]++;
          config.onLimitReached(key, request);
        } else
        /* istanbul ignore next */
        {
          cov_26my3rs2kc().b[65][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_26my3rs2kc().b[64][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_26my3rs2kc().b[63][1]++;
    }
    cov_26my3rs2kc().s[205]++;
    return result;
  } catch (error) {
    /* istanbul ignore next */
    cov_26my3rs2kc().s[206]++;
    console.error('[RATE_LIMIT] Error en checkEnterpriseRateLimit:', error);
    /* istanbul ignore next */
    cov_26my3rs2kc().s[207]++;
    return {
      allowed: true,
      limit: config.maxRequests,
      remaining: config.maxRequests,
      resetTime: Date.now() + config.windowMs,
      error: 'Error interno en rate limiting',
      code: 'INTERNAL_ERROR',
      source: 'error'
    };
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,