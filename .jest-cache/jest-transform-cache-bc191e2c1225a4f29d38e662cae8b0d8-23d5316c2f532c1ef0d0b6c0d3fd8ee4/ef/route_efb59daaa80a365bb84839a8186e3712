c586207c11f849c8ee8e78b14e76544a
// Configuraci√≥n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_5x8mfq68q() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\get-user-profile\\route.ts";
  var hash = "61f07693773dbb91b5312c0009cc6873c61b3842";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\get-user-profile\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 19
        },
        end: {
          line: 21,
          column: 61
        }
      },
      "8": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 24
        }
      },
      "9": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 76,
          column: 5
        }
      },
      "10": {
        start: {
          line: 26,
          column: 27
        },
        end: {
          line: 26,
          column: 78
        }
      },
      "11": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "12": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 39,
          column: 15
        }
      },
      "13": {
        start: {
          line: 41,
          column: 28
        },
        end: {
          line: 41,
          column: 45
        }
      },
      "14": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 80
        }
      },
      "15": {
        start: {
          line: 43,
          column: 24
        },
        end: {
          line: 43,
          column: 73
        }
      },
      "16": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "17": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 54,
          column: 15
        }
      },
      "18": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 64,
          column: 11
        }
      },
      "19": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 64
        }
      },
      "20": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 75,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 23,
            column: 18
          }
        },
        loc: {
          start: {
            line: 23,
            column: 28
          },
          end: {
            line: 77,
            column: 1
          }
        },
        line: 23
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 30,
            column: 23
          },
          end: {
            line: 30,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 23
          },
          end: {
            line: 30,
            column: 39
          }
        }, {
          start: {
            line: 30,
            column: 43
          },
          end: {
            line: 30,
            column: 67
          }
        }],
        line: 30
      },
      "2": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "3": {
        loc: {
          start: {
            line: 71,
            column: 30
          },
          end: {
            line: 71,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 71,
            column: 55
          },
          end: {
            line: 71,
            column: 68
          }
        }, {
          start: {
            line: 71,
            column: 71
          },
          end: {
            line: 71,
            column: 86
          }
        }],
        line: 71
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\get-user-profile\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getUserProfile, getAuthenticatedUser } from '@/lib/auth/admin-auth';\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // MIGRADO: Usar getAuthenticatedUser en lugar de headers\r\n    const authResult = await getAuthenticatedUser(request);\r\n\r\n    if (!authResult.userId) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: authResult.error || 'Usuario no autenticado',\r\n        migration: {\r\n          status: 'MIGRATED',\r\n          oldMethod: 'headers x-clerk-user-id',\r\n          newMethod: 'getAuthenticatedUser()',\r\n          note: 'Ya no usa headers directamente'\r\n        }\r\n      }, { status: 401 });\r\n    }\r\n\r\n    const clerkUserId = authResult.userId;\r\n\r\n    console.log('\uD83D\uDD0D Debug getUserProfile: Testing with user:', clerkUserId);\r\n\r\n    const profile = await getUserProfile(clerkUserId);\r\n\r\n    if (!profile) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Profile not found',\r\n        debug: {\r\n          clerkUserId,\r\n          profileExists: false\r\n        }\r\n      }, { status: 404 });\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      profile: profile,\r\n      debug: {\r\n        clerkUserId,\r\n        profileExists: true,\r\n        hasRole: !!profile.user_roles\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('\uD83D\uDD0D Debug getUserProfile: Error:', error);\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Unexpected error',\r\n      debug: {\r\n        errorMessage: error instanceof Error ? error.message : 'Unknown error'\r\n      }\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "runtime", "request", "authResult", "getAuthenticatedUser", "userId", "NextResponse", "json", "success", "error", "migration", "status", "oldMethod", "newMethod", "note", "clerkUserId", "console", "log", "profile", "getUserProfile", "debug", "profileExists", "hasRole", "user_roles", "errorMessage", "Error", "message"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QAMfA;eAAAA;;QALTC;eAAAA;;;wBAE6B;2BACW;AAH9C,MAAMA,UAAU;AAKhB,eAAeD,IAAIE,OAAoB;IAC5C,IAAI;QACF,yDAAyD;QACzD,MAAMC,aAAa,MAAMC,IAAAA,+BAAoB,EAACF;QAE9C,IAAI,CAACC,WAAWE,MAAM,EAAE;YACtB,OAAOC,oBAAY,CAACC,IAAI,CAAC;gBACvBC,SAAS;gBACTC,OAAON,WAAWM,KAAK,IAAI;gBAC3BC,WAAW;oBACTC,QAAQ;oBACRC,WAAW;oBACXC,WAAW;oBACXC,MAAM;gBACR;YACF,GAAG;gBAAEH,QAAQ;YAAI;QACnB;QAEA,MAAMI,cAAcZ,WAAWE,MAAM;QAErCW,QAAQC,GAAG,CAAC,+CAA+CF;QAE3D,MAAMG,UAAU,MAAMC,IAAAA,yBAAc,EAACJ;QAErC,IAAI,CAACG,SAAS;YACZ,OAAOZ,oBAAY,CAACC,IAAI,CAAC;gBACvBC,SAAS;gBACTC,OAAO;gBACPW,OAAO;oBACLL;oBACAM,eAAe;gBACjB;YACF,GAAG;gBAAEV,QAAQ;YAAI;QACnB;QAEA,OAAOL,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTU,SAASA;YACTE,OAAO;gBACLL;gBACAM,eAAe;gBACfC,SAAS,CAAC,CAACJ,QAAQK,UAAU;YAC/B;QACF;IAEF,EAAE,OAAOd,OAAO;QACdO,QAAQP,KAAK,CAAC,mCAAmCA;QACjD,OAAOH,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTC,OAAO;YACPW,OAAO;gBACLI,cAAcf,iBAAiBgB,QAAQhB,MAAMiB,OAAO,GAAG;YACzD;QACF,GAAG;YAAEf,QAAQ;QAAI;IACnB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "61f07693773dbb91b5312c0009cc6873c61b3842"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_5x8mfq68q = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_5x8mfq68q();
cov_5x8mfq68q().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_5x8mfq68q().f[0]++;
  cov_5x8mfq68q().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_5x8mfq68q().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_5x8mfq68q().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_5x8mfq68q().f[1]++;
    cov_5x8mfq68q().s[4]++;
    return GET;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_5x8mfq68q().f[2]++;
    cov_5x8mfq68q().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_5x8mfq68q().s[6]++, require("next/server"));
const _adminauth =
/* istanbul ignore next */
(cov_5x8mfq68q().s[7]++, require("../../../../lib/auth/admin-auth"));
const runtime =
/* istanbul ignore next */
(cov_5x8mfq68q().s[8]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_5x8mfq68q().f[3]++;
  cov_5x8mfq68q().s[9]++;
  try {
    // MIGRADO: Usar getAuthenticatedUser en lugar de headers
    const authResult =
    /* istanbul ignore next */
    (cov_5x8mfq68q().s[10]++, await (0, _adminauth.getAuthenticatedUser)(request));
    /* istanbul ignore next */
    cov_5x8mfq68q().s[11]++;
    if (!authResult.userId) {
      /* istanbul ignore next */
      cov_5x8mfq68q().b[0][0]++;
      cov_5x8mfq68q().s[12]++;
      return _server.NextResponse.json({
        success: false,
        error:
        /* istanbul ignore next */
        (cov_5x8mfq68q().b[1][0]++, authResult.error) ||
        /* istanbul ignore next */
        (cov_5x8mfq68q().b[1][1]++, 'Usuario no autenticado'),
        migration: {
          status: 'MIGRATED',
          oldMethod: 'headers x-clerk-user-id',
          newMethod: 'getAuthenticatedUser()',
          note: 'Ya no usa headers directamente'
        }
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_5x8mfq68q().b[0][1]++;
    }
    const clerkUserId =
    /* istanbul ignore next */
    (cov_5x8mfq68q().s[13]++, authResult.userId);
    /* istanbul ignore next */
    cov_5x8mfq68q().s[14]++;
    console.log('üîç Debug getUserProfile: Testing with user:', clerkUserId);
    const profile =
    /* istanbul ignore next */
    (cov_5x8mfq68q().s[15]++, await (0, _adminauth.getUserProfile)(clerkUserId));
    /* istanbul ignore next */
    cov_5x8mfq68q().s[16]++;
    if (!profile) {
      /* istanbul ignore next */
      cov_5x8mfq68q().b[2][0]++;
      cov_5x8mfq68q().s[17]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Profile not found',
        debug: {
          clerkUserId,
          profileExists: false
        }
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_5x8mfq68q().b[2][1]++;
    }
    cov_5x8mfq68q().s[18]++;
    return _server.NextResponse.json({
      success: true,
      profile: profile,
      debug: {
        clerkUserId,
        profileExists: true,
        hasRole: !!profile.user_roles
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_5x8mfq68q().s[19]++;
    console.error('üîç Debug getUserProfile: Error:', error);
    /* istanbul ignore next */
    cov_5x8mfq68q().s[20]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Unexpected error',
      debug: {
        errorMessage: error instanceof Error ?
        /* istanbul ignore next */
        (cov_5x8mfq68q().b[3][0]++, error.message) :
        /* istanbul ignore next */
        (cov_5x8mfq68q().b[3][1]++, 'Unknown error')
      }
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfNXg4bWZxNjhxIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiR0VUIiwiZiIsInJ1bnRpbWUiLCJyZXF1ZXN0IiwiYXV0aFJlc3VsdCIsIl9hZG1pbmF1dGgiLCJnZXRBdXRoZW50aWNhdGVkVXNlciIsInVzZXJJZCIsImIiLCJfc2VydmVyIiwiTmV4dFJlc3BvbnNlIiwianNvbiIsInN1Y2Nlc3MiLCJlcnJvciIsIm1pZ3JhdGlvbiIsInN0YXR1cyIsIm9sZE1ldGhvZCIsIm5ld01ldGhvZCIsIm5vdGUiLCJjbGVya1VzZXJJZCIsImNvbnNvbGUiLCJsb2ciLCJwcm9maWxlIiwiZ2V0VXNlclByb2ZpbGUiLCJkZWJ1ZyIsInByb2ZpbGVFeGlzdHMiLCJoYXNSb2xlIiwidXNlcl9yb2xlcyIsImVycm9yTWVzc2FnZSIsIkVycm9yIiwibWVzc2FnZSJdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXHNyY1xcYXBwXFxhcGlcXGRlYnVnXFxnZXQtdXNlci1wcm9maWxlXFxyb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb25maWd1cmFjacOzbiBwYXJhIE5vZGUuanMgUnVudGltZVxyXG5leHBvcnQgY29uc3QgcnVudGltZSA9ICdub2RlanMnO1xyXG5cclxuaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcclxuaW1wb3J0IHsgZ2V0VXNlclByb2ZpbGUsIGdldEF1dGhlbnRpY2F0ZWRVc2VyIH0gZnJvbSAnQC9saWIvYXV0aC9hZG1pbi1hdXRoJztcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcclxuICB0cnkge1xyXG4gICAgLy8gTUlHUkFETzogVXNhciBnZXRBdXRoZW50aWNhdGVkVXNlciBlbiBsdWdhciBkZSBoZWFkZXJzXHJcbiAgICBjb25zdCBhdXRoUmVzdWx0ID0gYXdhaXQgZ2V0QXV0aGVudGljYXRlZFVzZXIocmVxdWVzdCk7XHJcblxyXG4gICAgaWYgKCFhdXRoUmVzdWx0LnVzZXJJZCkge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgIGVycm9yOiBhdXRoUmVzdWx0LmVycm9yIHx8ICdVc3VhcmlvIG5vIGF1dGVudGljYWRvJyxcclxuICAgICAgICBtaWdyYXRpb246IHtcclxuICAgICAgICAgIHN0YXR1czogJ01JR1JBVEVEJyxcclxuICAgICAgICAgIG9sZE1ldGhvZDogJ2hlYWRlcnMgeC1jbGVyay11c2VyLWlkJyxcclxuICAgICAgICAgIG5ld01ldGhvZDogJ2dldEF1dGhlbnRpY2F0ZWRVc2VyKCknLFxyXG4gICAgICAgICAgbm90ZTogJ1lhIG5vIHVzYSBoZWFkZXJzIGRpcmVjdGFtZW50ZSdcclxuICAgICAgICB9XHJcbiAgICAgIH0sIHsgc3RhdHVzOiA0MDEgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgY2xlcmtVc2VySWQgPSBhdXRoUmVzdWx0LnVzZXJJZDtcclxuXHJcbiAgICBjb25zb2xlLmxvZygn8J+UjSBEZWJ1ZyBnZXRVc2VyUHJvZmlsZTogVGVzdGluZyB3aXRoIHVzZXI6JywgY2xlcmtVc2VySWQpO1xyXG5cclxuICAgIGNvbnN0IHByb2ZpbGUgPSBhd2FpdCBnZXRVc2VyUHJvZmlsZShjbGVya1VzZXJJZCk7XHJcblxyXG4gICAgaWYgKCFwcm9maWxlKSB7XHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XHJcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXHJcbiAgICAgICAgZXJyb3I6ICdQcm9maWxlIG5vdCBmb3VuZCcsXHJcbiAgICAgICAgZGVidWc6IHtcclxuICAgICAgICAgIGNsZXJrVXNlcklkLFxyXG4gICAgICAgICAgcHJvZmlsZUV4aXN0czogZmFsc2VcclxuICAgICAgICB9XHJcbiAgICAgIH0sIHsgc3RhdHVzOiA0MDQgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcclxuICAgICAgc3VjY2VzczogdHJ1ZSxcclxuICAgICAgcHJvZmlsZTogcHJvZmlsZSxcclxuICAgICAgZGVidWc6IHtcclxuICAgICAgICBjbGVya1VzZXJJZCxcclxuICAgICAgICBwcm9maWxlRXhpc3RzOiB0cnVlLFxyXG4gICAgICAgIGhhc1JvbGU6ICEhcHJvZmlsZS51c2VyX3JvbGVzXHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcign8J+UjSBEZWJ1ZyBnZXRVc2VyUHJvZmlsZTogRXJyb3I6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcclxuICAgICAgc3VjY2VzczogZmFsc2UsXHJcbiAgICAgIGVycm9yOiAnVW5leHBlY3RlZCBlcnJvcicsXHJcbiAgICAgIGRlYnVnOiB7XHJcbiAgICAgICAgZXJyb3JNZXNzYWdlOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJ1xyXG4gICAgICB9XHJcbiAgICB9LCB7IHN0YXR1czogNTAwIH0pO1xyXG4gIH1cclxufVxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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