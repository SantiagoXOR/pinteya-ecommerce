{"version":3,"names":["cov_j9ubs8yum","actualCoverage","s","GET","f","POST","runtime","request","userId","_config","auth","b","_server","NextResponse","json","error","status","searchParams","URL","url","type","get","getOverviewData","getAlertsData","getQuickStats","console","analyticsManager","_seoanalyticsmanager","EnhancedSEOAnalyticsManager","getInstance","seoManager","_dynamicseomanager","DynamicSEOManager","testingSuite","_seotestingsuite","SEOTestingSuite","sitemapGenerator","_dynamicsitemapgenerator","DynamicSitemapGenerator","optimizationTools","_seooptimizationtools","SEOOptimizationTools","analyticsMetrics","getMetrics","includePerformance","includeSearchConsole","includeConversions","testingStats","getTestingStatistics","sitemapStats","getGenerationStatistics","optimizationStats","getOptimizationStatistics","overviewData","overallScore","Math","round","seoScore","averageScore","totalPages","indexedPages","organicTraffic","avgPosition","averagePosition","ctr","clickThroughRate","coreWebVitals","lcp","fid","cls","fcp","ttfb","inp","recentTests","total","totalTestsRun","passed","passedTests","failed","failedTests","warnings","warningTests","sitemapStatus","totalUrls","lastGenerated","toISOString","errors","optimizationStatus","activeTools","improvements","totalImprovements","issues","totalIssues","success","data","timestamp","Date","analyticsAlerts","getActiveAlerts","testingAlerts","sitemapAlerts","allAlerts","map","alert","id","severity","title","message","action","label","href","undefined","sort","a","getTime","slice","quickMetrics","quickStats","searchImpressions","lastUpdated","body","refreshDashboardData","runQuickAudit","dismissAlert","alertId","Promise","all","clearCache","auditResults","urls"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\seo\\dashboard\\route.ts"],"sourcesContent":["// Configuración para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - SEO DASHBOARD API\r\n// API principal para el dashboard administrativo SEO\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { EnhancedSEOAnalyticsManager } from '@/lib/seo/seo-analytics-manager';\r\nimport { DynamicSEOManager } from '@/lib/seo/dynamic-seo-manager';\r\nimport { SEOTestingSuite } from '@/lib/seo/seo-testing-suite';\r\nimport { DynamicSitemapGenerator } from '@/lib/seo/dynamic-sitemap-generator';\r\nimport { SEOOptimizationTools } from '@/lib/seo/seo-optimization-tools';\r\n\r\n// ===================================\r\n// INTERFACES\r\n// ===================================\r\n\r\ninterface SEOOverviewData {\r\n  overallScore: number;\r\n  totalPages: number;\r\n  indexedPages: number;\r\n  organicTraffic: number;\r\n  avgPosition: number;\r\n  ctr: number;\r\n  coreWebVitals: {\r\n    lcp: number;\r\n    fid: number;\r\n    cls: number;\r\n    fcp: number;\r\n    ttfb: number;\r\n    inp: number;\r\n  };\r\n  recentTests: {\r\n    total: number;\r\n    passed: number;\r\n    failed: number;\r\n    warnings: number;\r\n  };\r\n  sitemapStatus: {\r\n    totalUrls: number;\r\n    lastGenerated: string;\r\n    errors: number;\r\n  };\r\n  optimizationStatus: {\r\n    activeTools: number;\r\n    improvements: number;\r\n    issues: number;\r\n  };\r\n}\r\n\r\ninterface SEOAlert {\r\n  id: string;\r\n  type: 'error' | 'warning' | 'info' | 'success';\r\n  title: string;\r\n  message: string;\r\n  timestamp: string;\r\n  url?: string;\r\n  action?: {\r\n    label: string;\r\n    href: string;\r\n  };\r\n}\r\n\r\n// ===================================\r\n// HANDLERS\r\n// ===================================\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticación\r\n    const { userId } = await auth();\r\n    if (!userId) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Obtener parámetros de consulta\r\n    const { searchParams } = new URL(request.url);\r\n    const type = searchParams.get('type') || 'overview';\r\n\r\n    switch (type) {\r\n      case 'overview':\r\n        return await getOverviewData();\r\n      case 'alerts':\r\n        return await getAlertsData();\r\n      case 'quick-stats':\r\n        return await getQuickStats();\r\n      default:\r\n        return NextResponse.json(\r\n          { error: 'Tipo de datos no válido' },\r\n          { status: 400 }\r\n        );\r\n    }\r\n  } catch (error) {\r\n    console.error('Error en SEO Dashboard API:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// ===================================\r\n// FUNCIONES AUXILIARES\r\n// ===================================\r\n\r\nasync function getOverviewData(): Promise<NextResponse> {\r\n  try {\r\n    // Obtener instancias de los managers\r\n    const analyticsManager = EnhancedSEOAnalyticsManager.getInstance();\r\n    const seoManager = DynamicSEOManager.getInstance();\r\n    const testingSuite = SEOTestingSuite.getInstance();\r\n    const sitemapGenerator = DynamicSitemapGenerator.getInstance();\r\n    const optimizationTools = SEOOptimizationTools.getInstance();\r\n\r\n    // Obtener métricas de analytics\r\n    const analyticsMetrics = await analyticsManager.getMetrics('/', {\r\n      includePerformance: true,\r\n      includeSearchConsole: true,\r\n      includeConversions: true\r\n    });\r\n\r\n    // Obtener estadísticas de testing\r\n    const testingStats = await testingSuite.getTestingStatistics();\r\n\r\n    // Obtener estado del sitemap\r\n    const sitemapStats = await sitemapGenerator.getGenerationStatistics();\r\n\r\n    // Obtener estado de optimización\r\n    const optimizationStats = await optimizationTools.getOptimizationStatistics();\r\n\r\n    // Construir datos de overview\r\n    const overviewData: SEOOverviewData = {\r\n      overallScore: Math.round(\r\n        (analyticsMetrics.seoScore + \r\n         testingStats.averageScore + \r\n         optimizationStats.averageScore) / 3\r\n      ),\r\n      totalPages: 1247, // Esto vendría de la base de datos\r\n      indexedPages: 1180,\r\n      organicTraffic: analyticsMetrics.organicTraffic || 8920,\r\n      avgPosition: analyticsMetrics.averagePosition || 3.2,\r\n      ctr: analyticsMetrics.clickThroughRate || 2.56,\r\n      coreWebVitals: {\r\n        lcp: analyticsMetrics.coreWebVitals?.lcp || 2.1,\r\n        fid: analyticsMetrics.coreWebVitals?.fid || 85,\r\n        cls: analyticsMetrics.coreWebVitals?.cls || 0.08,\r\n        fcp: analyticsMetrics.coreWebVitals?.fcp || 1.8,\r\n        ttfb: analyticsMetrics.coreWebVitals?.ttfb || 420,\r\n        inp: analyticsMetrics.coreWebVitals?.inp || 180\r\n      },\r\n      recentTests: {\r\n        total: testingStats.totalTestsRun,\r\n        passed: testingStats.passedTests,\r\n        failed: testingStats.failedTests,\r\n        warnings: testingStats.warningTests\r\n      },\r\n      sitemapStatus: {\r\n        totalUrls: sitemapStats.totalUrls,\r\n        lastGenerated: sitemapStats.lastGenerated.toISOString(),\r\n        errors: sitemapStats.errors\r\n      },\r\n      optimizationStatus: {\r\n        activeTools: optimizationStats.activeTools,\r\n        improvements: optimizationStats.totalImprovements,\r\n        issues: optimizationStats.totalIssues\r\n      }\r\n    };\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: overviewData,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error obteniendo datos de overview:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function getAlertsData(): Promise<NextResponse> {\r\n  try {\r\n    // Obtener instancias de los managers\r\n    const analyticsManager = EnhancedSEOAnalyticsManager.getInstance();\r\n    const testingSuite = SEOTestingSuite.getInstance();\r\n    const sitemapGenerator = DynamicSitemapGenerator.getInstance();\r\n\r\n    // Obtener alertas de diferentes fuentes\r\n    const analyticsAlerts = await analyticsManager.getActiveAlerts();\r\n    const testingAlerts = await testingSuite.getActiveAlerts();\r\n    const sitemapAlerts = await sitemapGenerator.getActiveAlerts();\r\n\r\n    // Combinar y formatear alertas\r\n    const allAlerts: SEOAlert[] = [\r\n      ...analyticsAlerts.map(alert => ({\r\n        id: `analytics_${alert.id}`,\r\n        type: alert.severity as SEOAlert['type'],\r\n        title: alert.title,\r\n        message: alert.message,\r\n        timestamp: alert.timestamp.toISOString(),\r\n        url: alert.url,\r\n        action: alert.action ? {\r\n          label: alert.action.label,\r\n          href: alert.action.href\r\n        } : undefined\r\n      })),\r\n      ...testingAlerts.map(alert => ({\r\n        id: `testing_${alert.id}`,\r\n        type: alert.severity as SEOAlert['type'],\r\n        title: alert.title,\r\n        message: alert.message,\r\n        timestamp: alert.timestamp.toISOString(),\r\n        url: alert.url,\r\n        action: alert.action ? {\r\n          label: alert.action.label,\r\n          href: alert.action.href\r\n        } : undefined\r\n      })),\r\n      ...sitemapAlerts.map(alert => ({\r\n        id: `sitemap_${alert.id}`,\r\n        type: alert.severity as SEOAlert['type'],\r\n        title: alert.title,\r\n        message: alert.message,\r\n        timestamp: alert.timestamp.toISOString(),\r\n        url: alert.url,\r\n        action: alert.action ? {\r\n          label: alert.action.label,\r\n          href: alert.action.href\r\n        } : undefined\r\n      }))\r\n    ];\r\n\r\n    // Ordenar por timestamp (más recientes primero)\r\n    allAlerts.sort((a, b) => \r\n      new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()\r\n    );\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: allAlerts.slice(0, 20), // Limitar a 20 alertas más recientes\r\n      timestamp: new Date().toISOString()\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error obteniendo alertas:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function getQuickStats(): Promise<NextResponse> {\r\n  try {\r\n    // Obtener estadísticas rápidas para widgets\r\n    const analyticsManager = EnhancedSEOAnalyticsManager.getInstance();\r\n    \r\n    const quickMetrics = await analyticsManager.getMetrics('/', {\r\n      includePerformance: false,\r\n      includeSearchConsole: true,\r\n      includeConversions: false\r\n    });\r\n\r\n    const quickStats = {\r\n      organicTraffic: quickMetrics.organicTraffic || 8920,\r\n      searchImpressions: quickMetrics.searchImpressions || 125000,\r\n      avgPosition: quickMetrics.averagePosition || 3.2,\r\n      ctr: quickMetrics.clickThroughRate || 2.56,\r\n      seoScore: quickMetrics.seoScore || 85,\r\n      lastUpdated: new Date().toISOString()\r\n    };\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: quickStats,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error obteniendo estadísticas rápidas:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// ===================================\r\n// POST - ACCIONES DEL DASHBOARD\r\n// ===================================\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticación\r\n    const { userId } = await auth();\r\n    if (!userId) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const body = await request.json();\r\n    const { action, data } = body;\r\n\r\n    switch (action) {\r\n      case 'refresh-data':\r\n        return await refreshDashboardData();\r\n      case 'run-quick-audit':\r\n        return await runQuickAudit(data);\r\n      case 'dismiss-alert':\r\n        return await dismissAlert(data.alertId);\r\n      default:\r\n        return NextResponse.json(\r\n          { error: 'Acción no válida' },\r\n          { status: 400 }\r\n        );\r\n    }\r\n  } catch (error) {\r\n    console.error('Error en acción del dashboard:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nasync function refreshDashboardData(): Promise<NextResponse> {\r\n  try {\r\n    // Forzar actualización de caché en todos los managers\r\n    const analyticsManager = EnhancedSEOAnalyticsManager.getInstance();\r\n    const testingSuite = SEOTestingSuite.getInstance();\r\n    const sitemapGenerator = DynamicSitemapGenerator.getInstance();\r\n    const optimizationTools = SEOOptimizationTools.getInstance();\r\n\r\n    // Limpiar cachés\r\n    await Promise.all([\r\n      analyticsManager.clearCache(),\r\n      testingSuite.clearCache(),\r\n      sitemapGenerator.clearCache(),\r\n      optimizationTools.clearCache()\r\n    ]);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: 'Datos del dashboard actualizados',\r\n      timestamp: new Date().toISOString()\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error refrescando datos:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function runQuickAudit(data: { urls?: string[] }): Promise<NextResponse> {\r\n  try {\r\n    const testingSuite = SEOTestingSuite.getInstance();\r\n    \r\n    // Ejecutar auditoría rápida\r\n    const auditResults = await testingSuite.runQuickAudit(data.urls || ['/']);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: auditResults,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error ejecutando auditoría rápida:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function dismissAlert(alertId: string): Promise<NextResponse> {\r\n  try {\r\n    // Marcar alerta como descartada\r\n    // En una implementación real, esto se guardaría en la base de datos\r\n    \r\n    return NextResponse.json({\r\n      success: true,\r\n      message: 'Alerta descartada',\r\n      timestamp: new Date().toISOString()\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error descartando alerta:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}