{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\config\\api-timeouts.ts"],"sourcesContent":["// ===================================\n// PINTEYA E-COMMERCE - CONFIGURACIÓN CENTRALIZADA DE TIMEOUTS\n// ===================================\n// Configuración centralizada para todos los timeouts de APIs\n// con valores por defecto y variables de entorno\n\n// ===================================\n// TIPOS Y INTERFACES\n// ===================================\n\nexport interface TimeoutConfig {\n  default: number\n  database: number\n  external: number\n  upload: number\n  payment: number\n  auth: number\n  admin: number\n  webhook: number\n  email: number\n  image: number\n}\n\nexport interface EndpointTimeouts {\n  connection: number\n  request: number\n  response: number\n  total: number\n}\n\n// ===================================\n// CONFIGURACIÓN BASE DE TIMEOUTS\n// ===================================\n\nconst DEFAULT_TIMEOUTS = {\n  // Timeout por defecto para operaciones generales\n  default: 30000, // 30 segundos\n\n  // Timeout para operaciones de base de datos\n  database: 15000, // 15 segundos\n\n  // Timeout para APIs externas (MercadoPago, etc.)\n  external: 45000, // 45 segundos\n\n  // Timeout para uploads de archivos\n  upload: 120000, // 2 minutos\n\n  // Timeout para operaciones de pago\n  payment: 60000, // 1 minuto\n\n  // Timeout para operaciones de autenticación\n  auth: 20000, // 20 segundos\n\n  // Timeout para operaciones administrativas\n  admin: 45000, // 45 segundos\n\n  // Timeout para webhooks\n  webhook: 10000, // 10 segundos\n\n  // Timeout para envío de emails\n  email: 30000, // 30 segundos\n\n  // Timeout para procesamiento de imágenes\n  image: 90000, // 1.5 minutos\n} as const\n\n// ===================================\n// FUNCIÓN PARA OBTENER TIMEOUT DESDE ENV\n// ===================================\n\nfunction getTimeoutFromEnv(key: string, defaultValue: number): number {\n  const envValue = process.env[`API_TIMEOUT_${key.toUpperCase()}`]\n  if (!envValue) {\n    return defaultValue\n  }\n\n  const parsed = parseInt(envValue, 10)\n  if (isNaN(parsed) || parsed <= 0) {\n    console.warn(\n      `[TIMEOUT_CONFIG] Invalid timeout value for ${key}: ${envValue}, using default: ${defaultValue}`\n    )\n    return defaultValue\n  }\n\n  return parsed\n}\n\n// ===================================\n// CONFIGURACIÓN FINAL DE TIMEOUTS\n// ===================================\n\nexport const API_TIMEOUTS: TimeoutConfig = {\n  default: getTimeoutFromEnv('DEFAULT', DEFAULT_TIMEOUTS.default),\n  database: getTimeoutFromEnv('DATABASE', DEFAULT_TIMEOUTS.database),\n  external: getTimeoutFromEnv('EXTERNAL', DEFAULT_TIMEOUTS.external),\n  upload: getTimeoutFromEnv('UPLOAD', DEFAULT_TIMEOUTS.upload),\n  payment: getTimeoutFromEnv('PAYMENT', DEFAULT_TIMEOUTS.payment),\n  auth: getTimeoutFromEnv('AUTH', DEFAULT_TIMEOUTS.auth),\n  admin: getTimeoutFromEnv('ADMIN', DEFAULT_TIMEOUTS.admin),\n  webhook: getTimeoutFromEnv('WEBHOOK', DEFAULT_TIMEOUTS.webhook),\n  email: getTimeoutFromEnv('EMAIL', DEFAULT_TIMEOUTS.email),\n  image: getTimeoutFromEnv('IMAGE', DEFAULT_TIMEOUTS.image),\n}\n\n// ===================================\n// TIMEOUTS ESPECÍFICOS POR ENDPOINT\n// ===================================\n\nexport const ENDPOINT_TIMEOUTS: Record<string, EndpointTimeouts> = {\n  // APIs de productos\n  '/api/products': {\n    connection: 5000,\n    request: API_TIMEOUTS.database,\n    response: 10000,\n    total: API_TIMEOUTS.database + 15000, // database + buffer\n  },\n\n  // APIs de órdenes\n  '/api/orders': {\n    connection: 5000,\n    request: API_TIMEOUTS.database,\n    response: 15000,\n    total: API_TIMEOUTS.database + 20000, // database + buffer\n  },\n\n  // APIs de pagos\n  '/api/payments': {\n    connection: 10000,\n    request: API_TIMEOUTS.payment,\n    response: 20000,\n    total: Math.max(API_TIMEOUTS.payment + 30000, API_TIMEOUTS.external),\n  },\n\n  // APIs de autenticación\n  '/api/auth': {\n    connection: 3000,\n    request: API_TIMEOUTS.auth,\n    response: 5000,\n    total: API_TIMEOUTS.auth + 8000,\n  },\n\n  // APIs administrativas\n  '/api/admin': {\n    connection: 5000,\n    request: API_TIMEOUTS.admin,\n    response: 15000,\n    total: API_TIMEOUTS.admin + 20000,\n  },\n\n  // Webhooks\n  '/api/webhooks': {\n    connection: 2000,\n    request: API_TIMEOUTS.webhook,\n    response: 3000,\n    total: API_TIMEOUTS.webhook + 5000,\n  },\n\n  // APIs de upload\n  '/api/upload': {\n    connection: 10000,\n    request: API_TIMEOUTS.upload,\n    response: 30000,\n    total: API_TIMEOUTS.upload + 40000,\n  },\n}\n\n// ===================================\n// HELPERS PARA OBTENER TIMEOUTS\n// ===================================\n\n/**\n * Obtiene el timeout apropiado para un tipo de operación\n */\nexport function getTimeout(type: keyof TimeoutConfig): number {\n  return API_TIMEOUTS[type]\n}\n\n/**\n * Obtiene los timeouts específicos para un endpoint\n */\nexport function getEndpointTimeouts(path: string): EndpointTimeouts {\n  // Buscar coincidencia exacta primero\n  if (ENDPOINT_TIMEOUTS[path]) {\n    return ENDPOINT_TIMEOUTS[path]\n  }\n\n  // Buscar coincidencia por prefijo\n  const matchingPath = Object.keys(ENDPOINT_TIMEOUTS).find(key => path.startsWith(key))\n\n  if (matchingPath) {\n    return ENDPOINT_TIMEOUTS[matchingPath]\n  }\n\n  // Fallback a timeouts por defecto\n  return {\n    connection: 5000,\n    request: API_TIMEOUTS.default,\n    response: 10000,\n    total: API_TIMEOUTS.default,\n  }\n}\n\n/**\n * Crea un AbortController con timeout automático\n */\nexport function createTimeoutController(timeout: number): {\n  controller: AbortController\n  timeoutId: NodeJS.Timeout\n} {\n  const controller = new AbortController()\n  const timeoutId = setTimeout(() => {\n    controller.abort()\n  }, timeout)\n\n  return { controller, timeoutId }\n}\n\n/**\n * Wrapper para fetch con timeout automático\n */\nexport async function fetchWithTimeout(\n  url: string,\n  options: RequestInit & { timeout?: number } = {}\n): Promise<Response> {\n  const timeout = options.timeout || API_TIMEOUTS.default\n  const { controller, timeoutId } = createTimeoutController(timeout)\n\n  try {\n    const response = await fetch(url, {\n      ...options,\n      signal: controller.signal,\n    })\n\n    clearTimeout(timeoutId)\n    return response\n  } catch (error) {\n    clearTimeout(timeoutId)\n\n    if (error instanceof Error && error.name === 'AbortError') {\n      throw new Error(`Request timeout after ${timeout}ms`)\n    }\n\n    throw error\n  }\n}\n\n/**\n * Wrapper para operaciones de base de datos con timeout\n */\nexport function withDatabaseTimeout<T>(\n  operation: (signal: AbortSignal) => Promise<T>,\n  timeout: number = API_TIMEOUTS.database\n): Promise<T> {\n  const { controller, timeoutId } = createTimeoutController(timeout)\n\n  return operation(controller.signal).finally(() => clearTimeout(timeoutId))\n}\n\n/**\n * Wrapper para operaciones externas con timeout\n */\nexport function withExternalTimeout<T>(\n  operation: (signal: AbortSignal) => Promise<T>,\n  timeout: number = API_TIMEOUTS.external\n): Promise<T> {\n  const { controller, timeoutId } = createTimeoutController(timeout)\n\n  return operation(controller.signal).finally(() => clearTimeout(timeoutId))\n}\n\n/**\n * Wrapper genérico para operaciones con timeout\n */\nexport function withTimeout<T>(\n  operation: () => Promise<T>,\n  timeout: number = API_TIMEOUTS.default\n): Promise<T> {\n  return new Promise((resolve, reject) => {\n    const timeoutId = setTimeout(() => {\n      reject(new Error(`Operation timeout after ${timeout}ms`))\n    }, timeout)\n\n    operation()\n      .then(resolve)\n      .catch(reject)\n      .finally(() => clearTimeout(timeoutId))\n  })\n}\n\n// ===================================\n// CONFIGURACIÓN DE LOGGING\n// ===================================\n\n/**\n * Log de timeout configurado\n */\nexport function logTimeoutConfig(): void {\n  console.log('[TIMEOUT_CONFIG] Configuración de timeouts cargada:', {\n    environment: process.env.NODE_ENV,\n    timeouts: API_TIMEOUTS,\n    customEnvVars: Object.keys(process.env)\n      .filter(key => key.startsWith('API_TIMEOUT_'))\n      .reduce(\n        (acc, key) => {\n          acc[key] = process.env[key]\n          return acc\n        },\n        {} as Record<string, string | undefined>\n      ),\n  })\n}\n\n// ===================================\n// VALIDACIÓN DE CONFIGURACIÓN\n// ===================================\n\n/**\n * Valida que todos los timeouts estén configurados correctamente\n */\nexport function validateTimeoutConfig(): boolean {\n  const errors: string[] = []\n\n  Object.entries(API_TIMEOUTS).forEach(([key, value]) => {\n    if (typeof value !== 'number' || value <= 0) {\n      errors.push(`Invalid timeout for ${key}: ${value}`)\n    }\n\n    if (value > 300000) {\n      // 5 minutos máximo\n      errors.push(`Timeout too high for ${key}: ${value}ms (max: 300000ms)`)\n    }\n  })\n\n  if (errors.length > 0) {\n    console.error('[TIMEOUT_CONFIG] Validation errors:', errors)\n    return false\n  }\n\n  return true\n}\n\n// ===================================\n// INICIALIZACIÓN\n// ===================================\n\n// Validar configuración al cargar el módulo\nif (process.env.NODE_ENV !== 'test') {\n  validateTimeoutConfig()\n\n  if (process.env.NODE_ENV === 'development') {\n    logTimeoutConfig()\n  }\n}\n"],"names":["API_TIMEOUTS","ENDPOINT_TIMEOUTS","createTimeoutController","fetchWithTimeout","getEndpointTimeouts","getTimeout","logTimeoutConfig","validateTimeoutConfig","withDatabaseTimeout","withExternalTimeout","withTimeout","DEFAULT_TIMEOUTS","default","database","external","upload","payment","auth","admin","webhook","email","image","getTimeoutFromEnv","key","defaultValue","envValue","process","env","toUpperCase","parsed","parseInt","isNaN","console","warn","connection","request","response","total","Math","max","type","path","matchingPath","Object","keys","find","startsWith","timeout","controller","AbortController","timeoutId","setTimeout","abort","url","options","fetch","signal","clearTimeout","error","Error","name","operation","finally","Promise","resolve","reject","then","catch","log","environment","NODE_ENV","timeouts","customEnvVars","filter","reduce","acc","errors","entries","forEach","value","push","length"],"mappings":"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"}