7b72af97176ae2d4cb6a67d807b90c13
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_2i5aysw0qp() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\test-webhook-processing\\route.ts";
  var hash = "52b123f84956055611a8071401b87a17c4f8ec64";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\test-webhook-processing\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 20
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 18
        },
        end: {
          line: 21,
          column: 63
        }
      },
      "8": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 24
        }
      },
      "9": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 114,
          column: 5
        }
      },
      "10": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 75
        }
      },
      "11": {
        start: {
          line: 27,
          column: 32
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "12": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 105
        }
      },
      "13": {
        start: {
          line: 36,
          column: 25
        },
        end: {
          line: 36,
          column: 63
        }
      },
      "14": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "15": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 78
        }
      },
      "16": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 43,
          column: 15
        }
      },
      "17": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 85
        }
      },
      "18": {
        start: {
          line: 47,
          column: 31
        },
        end: {
          line: 47,
          column: 65
        }
      },
      "19": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 93
        }
      },
      "20": {
        start: {
          line: 49,
          column: 51
        },
        end: {
          line: 49,
          column: 142
        }
      },
      "21": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "22": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 78
        }
      },
      "23": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 57,
          column: 15
        }
      },
      "24": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "25": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 99
        }
      },
      "26": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 66,
          column: 15
        }
      },
      "27": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 98
        }
      },
      "28": {
        start: {
          line: 70,
          column: 31
        },
        end: {
          line: 70,
          column: 37
        }
      },
      "29": {
        start: {
          line: 71,
          column: 33
        },
        end: {
          line: 71,
          column: 39
        }
      },
      "30": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 122
        }
      },
      "31": {
        start: {
          line: 74,
          column: 59
        },
        end: {
          line: 79,
          column: 47
        }
      },
      "32": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "33": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 83
        }
      },
      "34": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 87,
          column: 15
        }
      },
      "35": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 111
        }
      },
      "36": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 103,
          column: 11
        }
      },
      "37": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 64
        }
      },
      "38": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 66
        }
      },
      "39": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 113,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 16
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "POST",
        decl: {
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 23,
            column: 19
          }
        },
        loc: {
          start: {
            line: 23,
            column: 29
          },
          end: {
            line: 115,
            column: 1
          }
        },
        line: 23
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "1": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "2": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "3": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "4": {
        loc: {
          start: {
            line: 110,
            column: 19
          },
          end: {
            line: 110,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 60
          },
          end: {
            line: 110,
            column: 71
          }
        }, {
          start: {
            line: 110,
            column: 74
          },
          end: {
            line: 110,
            column: 83
          }
        }],
        line: 110
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\test-webhook-processing\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - TEST WEBHOOK PROCESSING\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getSupabaseClient } from '@/lib/integrations/supabase';\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    console.log('[TEST_WEBHOOK] Iniciando prueba de procesamiento...');\r\n\r\n    // Datos de prueba simulando MercadoPago\r\n    const testPaymentData = {\r\n      id: '123456',\r\n      status: 'approved',\r\n      external_reference: 'express_checkout_1757431045283',\r\n      transaction_amount: 100,\r\n      currency_id: 'ARS'\r\n    };\r\n\r\n    console.log('[TEST_WEBHOOK] Datos de pago simulados:', JSON.stringify(testPaymentData, null, 2));\r\n\r\n    // Inicializar Supabase\r\n    const supabase = getSupabaseClient(true);\r\n    if (!supabase) {\r\n      console.error('[TEST_WEBHOOK] Cliente de Supabase no disponible');\r\n      return NextResponse.json({\r\n        error: 'Supabase client not available'\r\n      }, { status: 500 });\r\n    }\r\n\r\n    console.log('[TEST_WEBHOOK] Cliente de Supabase inicializado correctamente');\r\n\r\n    // Buscar la orden por external_reference\r\n    const orderReference = testPaymentData.external_reference;\r\n    console.log('[TEST_WEBHOOK] Buscando orden con external_reference:', orderReference);\r\n\r\n    const { data: order, error: orderError } = await supabase\r\n      .from('orders')\r\n      .select('*')\r\n      .eq('external_reference', orderReference)\r\n      .single();\r\n\r\n    if (orderError) {\r\n      console.error('[TEST_WEBHOOK] Error buscando orden:', orderError);\r\n      return NextResponse.json({\r\n        error: 'Order lookup failed',\r\n        details: orderError\r\n      }, { status: 500 });\r\n    }\r\n\r\n    if (!order) {\r\n      console.error('[TEST_WEBHOOK] Order not found by external_reference:', orderReference);\r\n      return NextResponse.json({\r\n        error: 'Order not found',\r\n        external_reference: orderReference\r\n      }, { status: 404 });\r\n    }\r\n\r\n    console.log('[TEST_WEBHOOK] Order encontrada:', order.id, 'Status actual:', order.status);\r\n\r\n    // Mapear estados\r\n    const newOrderStatus = 'paid'; // \u2705 CORREGIDO: Usar estado v\xE1lido\r\n    const newPaymentStatus = 'paid';\r\n\r\n    console.log('[TEST_WEBHOOK] Actualizando orden con status:', newOrderStatus, 'payment_status:', newPaymentStatus);\r\n\r\n    // Actualizar la orden\r\n    const { data: updatedOrder, error: updateError } = await supabase\r\n      .from('orders')\r\n      .update({\r\n        payment_status: newPaymentStatus,\r\n        status: newOrderStatus,\r\n        payment_id: testPaymentData.id,\r\n        updated_at: new Date().toISOString()\r\n      })\r\n      .eq('id', order.id)\r\n      .select()\r\n      .single();\r\n\r\n    if (updateError) {\r\n      console.error('[TEST_WEBHOOK] Error actualizando orden:', updateError);\r\n      return NextResponse.json({\r\n        error: 'Order update failed',\r\n        details: updateError\r\n      }, { status: 500 });\r\n    }\r\n\r\n    console.log('[TEST_WEBHOOK] \u2705 Orden actualizada exitosamente:', JSON.stringify(updatedOrder, null, 2));\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: 'Webhook processing test completed successfully',\r\n      order: {\r\n        id: updatedOrder.id,\r\n        status: updatedOrder.status,\r\n        payment_status: updatedOrder.payment_status,\r\n        payment_id: updatedOrder.payment_id,\r\n        updated_at: updatedOrder.updated_at\r\n      },\r\n      test_data: testPaymentData\r\n    }, { status: 200 });\r\n\r\n  } catch (error: any) {\r\n    console.error('[TEST_WEBHOOK] Error en prueba:', error);\r\n    console.error('[TEST_WEBHOOK] Stack trace:', error.stack);\r\n\r\n    return NextResponse.json({\r\n      error: 'Test failed',\r\n      message: error.message,\r\n      stack: process.env.NODE_ENV === 'development' ? error.stack : undefined\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["POST", "runtime", "request", "console", "log", "testPaymentData", "id", "status", "external_reference", "transaction_amount", "currency_id", "JSON", "stringify", "supabase", "getSupabaseClient", "error", "NextResponse", "json", "orderReference", "data", "order", "orderError", "from", "select", "eq", "single", "details", "newOrderStatus", "newPaymentStatus", "updatedOrder", "updateError", "update", "payment_status", "payment_id", "updated_at", "Date", "toISOString", "success", "message", "test_data", "stack", "process", "env", "NODE_ENV", "undefined"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "52b123f84956055611a8071401b87a17c4f8ec64"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2i5aysw0qp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2i5aysw0qp();
cov_2i5aysw0qp().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2i5aysw0qp().f[0]++;
  cov_2i5aysw0qp().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2i5aysw0qp().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2i5aysw0qp().s[3]++;
_export(exports, {
  get POST() {
    /* istanbul ignore next */
    cov_2i5aysw0qp().f[1]++;
    cov_2i5aysw0qp().s[4]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_2i5aysw0qp().f[2]++;
    cov_2i5aysw0qp().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_2i5aysw0qp().s[6]++, require("next/server"));
const _supabase =
/* istanbul ignore next */
(cov_2i5aysw0qp().s[7]++, require("../../../lib/integrations/supabase"));
const runtime =
/* istanbul ignore next */
(cov_2i5aysw0qp().s[8]++, 'nodejs');
async function POST(request) {
  /* istanbul ignore next */
  cov_2i5aysw0qp().f[3]++;
  cov_2i5aysw0qp().s[9]++;
  try {
    /* istanbul ignore next */
    cov_2i5aysw0qp().s[10]++;
    console.log('[TEST_WEBHOOK] Iniciando prueba de procesamiento...');
    // Datos de prueba simulando MercadoPago
    const testPaymentData =
    /* istanbul ignore next */
    (cov_2i5aysw0qp().s[11]++, {
      id: '123456',
      status: 'approved',
      external_reference: 'express_checkout_1757431045283',
      transaction_amount: 100,
      currency_id: 'ARS'
    });
    /* istanbul ignore next */
    cov_2i5aysw0qp().s[12]++;
    console.log('[TEST_WEBHOOK] Datos de pago simulados:', JSON.stringify(testPaymentData, null, 2));
    // Inicializar Supabase
    const supabase =
    /* istanbul ignore next */
    (cov_2i5aysw0qp().s[13]++, (0, _supabase.getSupabaseClient)(true));
    /* istanbul ignore next */
    cov_2i5aysw0qp().s[14]++;
    if (!supabase) {
      /* istanbul ignore next */
      cov_2i5aysw0qp().b[0][0]++;
      cov_2i5aysw0qp().s[15]++;
      console.error('[TEST_WEBHOOK] Cliente de Supabase no disponible');
      /* istanbul ignore next */
      cov_2i5aysw0qp().s[16]++;
      return _server.NextResponse.json({
        error: 'Supabase client not available'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2i5aysw0qp().b[0][1]++;
    }
    cov_2i5aysw0qp().s[17]++;
    console.log('[TEST_WEBHOOK] Cliente de Supabase inicializado correctamente');
    // Buscar la orden por external_reference
    const orderReference =
    /* istanbul ignore next */
    (cov_2i5aysw0qp().s[18]++, testPaymentData.external_reference);
    /* istanbul ignore next */
    cov_2i5aysw0qp().s[19]++;
    console.log('[TEST_WEBHOOK] Buscando orden con external_reference:', orderReference);
    const {
      data: order,
      error: orderError
    } =
    /* istanbul ignore next */
    (cov_2i5aysw0qp().s[20]++, await supabase.from('orders').select('*').eq('external_reference', orderReference).single());
    /* istanbul ignore next */
    cov_2i5aysw0qp().s[21]++;
    if (orderError) {
      /* istanbul ignore next */
      cov_2i5aysw0qp().b[1][0]++;
      cov_2i5aysw0qp().s[22]++;
      console.error('[TEST_WEBHOOK] Error buscando orden:', orderError);
      /* istanbul ignore next */
      cov_2i5aysw0qp().s[23]++;
      return _server.NextResponse.json({
        error: 'Order lookup failed',
        details: orderError
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2i5aysw0qp().b[1][1]++;
    }
    cov_2i5aysw0qp().s[24]++;
    if (!order) {
      /* istanbul ignore next */
      cov_2i5aysw0qp().b[2][0]++;
      cov_2i5aysw0qp().s[25]++;
      console.error('[TEST_WEBHOOK] Order not found by external_reference:', orderReference);
      /* istanbul ignore next */
      cov_2i5aysw0qp().s[26]++;
      return _server.NextResponse.json({
        error: 'Order not found',
        external_reference: orderReference
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_2i5aysw0qp().b[2][1]++;
    }
    cov_2i5aysw0qp().s[27]++;
    console.log('[TEST_WEBHOOK] Order encontrada:', order.id, 'Status actual:', order.status);
    // Mapear estados
    const newOrderStatus =
    /* istanbul ignore next */
    (cov_2i5aysw0qp().s[28]++, 'paid'); // â CORREGIDO: Usar estado vÃ¡lido
    const newPaymentStatus =
    /* istanbul ignore next */
    (cov_2i5aysw0qp().s[29]++, 'paid');
    /* istanbul ignore next */
    cov_2i5aysw0qp().s[30]++;
    console.log('[TEST_WEBHOOK] Actualizando orden con status:', newOrderStatus, 'payment_status:', newPaymentStatus);
    // Actualizar la orden
    const {
      data: updatedOrder,
      error: updateError
    } =
    /* istanbul ignore next */
    (cov_2i5aysw0qp().s[31]++, await supabase.from('orders').update({
      payment_status: newPaymentStatus,
      status: newOrderStatus,
      payment_id: testPaymentData.id,
      updated_at: new Date().toISOString()
    }).eq('id', order.id).select().single());
    /* istanbul ignore next */
    cov_2i5aysw0qp().s[32]++;
    if (updateError) {
      /* istanbul ignore next */
      cov_2i5aysw0qp().b[3][0]++;
      cov_2i5aysw0qp().s[33]++;
      console.error('[TEST_WEBHOOK] Error actualizando orden:', updateError);
      /* istanbul ignore next */
      cov_2i5aysw0qp().s[34]++;
      return _server.NextResponse.json({
        error: 'Order update failed',
        details: updateError
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2i5aysw0qp().b[3][1]++;
    }
    cov_2i5aysw0qp().s[35]++;
    console.log('[TEST_WEBHOOK] â Orden actualizada exitosamente:', JSON.stringify(updatedOrder, null, 2));
    /* istanbul ignore next */
    cov_2i5aysw0qp().s[36]++;
    return _server.NextResponse.json({
      success: true,
      message: 'Webhook processing test completed successfully',
      order: {
        id: updatedOrder.id,
        status: updatedOrder.status,
        payment_status: updatedOrder.payment_status,
        payment_id: updatedOrder.payment_id,
        updated_at: updatedOrder.updated_at
      },
      test_data: testPaymentData
    }, {
      status: 200
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2i5aysw0qp().s[37]++;
    console.error('[TEST_WEBHOOK] Error en prueba:', error);
    /* istanbul ignore next */
    cov_2i5aysw0qp().s[38]++;
    console.error('[TEST_WEBHOOK] Stack trace:', error.stack);
    /* istanbul ignore next */
    cov_2i5aysw0qp().s[39]++;
    return _server.NextResponse.json({
      error: 'Test failed',
      message: error.message,
      stack: process.env.NODE_ENV === 'development' ?
      /* istanbul ignore next */
      (cov_2i5aysw0qp().b[4][0]++, error.stack) :
      /* istanbul ignore next */
      (cov_2i5aysw0qp().b[4][1]++, undefined)
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,