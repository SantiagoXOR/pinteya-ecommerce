99edf96e6ba13868349fc54dc0c15179
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_13rvoa2ej2() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products-simple\\route.ts";
  var hash = "728281f9da01da5bc04d4ebfb735b82e5cc0539c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products-simple\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 19
        },
        end: {
          line: 24,
          column: 61
        }
      },
      "9": {
        start: {
          line: 25,
          column: 20
        },
        end: {
          line: 25,
          column: 52
        }
      },
      "10": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 24
        }
      },
      "11": {
        start: {
          line: 28,
          column: 20
        },
        end: {
          line: 28,
          column: 56
        }
      },
      "12": {
        start: {
          line: 29,
          column: 27
        },
        end: {
          line: 29,
          column: 64
        }
      },
      "13": {
        start: {
          line: 30,
          column: 22
        },
        end: {
          line: 35,
          column: 2
        }
      },
      "14": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 141,
          column: 5
        }
      },
      "15": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 67
        }
      },
      "16": {
        start: {
          line: 40,
          column: 27
        },
        end: {
          line: 40,
          column: 91
        }
      },
      "17": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "18": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 60
        }
      },
      "19": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 48,
          column: 15
        }
      },
      "20": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 41
        }
      },
      "21": {
        start: {
          line: 51,
          column: 21
        },
        end: {
          line: 51,
          column: 41
        }
      },
      "22": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 71
        }
      },
      "23": {
        start: {
          line: 54,
          column: 31
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "24": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "25": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "26": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 65,
          column: 19
        }
      },
      "27": {
        start: {
          line: 69,
          column: 28
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "28": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 85
        }
      },
      "29": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "30": {
        start: {
          line: 91,
          column: 61
        },
        end: {
          line: 91,
          column: 155
        }
      },
      "31": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 100,
          column: 13
        }
      },
      "32": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 93,
          column: 68
        }
      },
      "33": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 99,
          column: 19
        }
      },
      "34": {
        start: {
          line: 103,
          column: 41
        },
        end: {
          line: 113,
          column: 17
        }
      },
      "35": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "36": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 62
        }
      },
      "37": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 122,
          column: 15
        }
      },
      "38": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 64
        }
      },
      "39": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 131,
          column: 11
        }
      },
      "40": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 76
        }
      },
      "41": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 140,
          column: 11
        }
      },
      "42": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 198,
          column: 5
        }
      },
      "43": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 67
        }
      },
      "44": {
        start: {
          line: 147,
          column: 27
        },
        end: {
          line: 147,
          column: 89
        }
      },
      "45": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "46": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 154,
          column: 15
        }
      },
      "47": {
        start: {
          line: 157,
          column: 42
        },
        end: {
          line: 173,
          column: 10
        }
      },
      "48": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 182,
          column: 9
        }
      },
      "49": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 63
        }
      },
      "50": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 181,
          column: 15
        }
      },
      "51": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 189,
          column: 11
        }
      },
      "52": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 75
        }
      },
      "53": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 197,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "POST",
        decl: {
          start: {
            line: 36,
            column: 15
          },
          end: {
            line: 36,
            column: 19
          }
        },
        loc: {
          start: {
            line: 36,
            column: 29
          },
          end: {
            line: 142,
            column: 1
          }
        },
        line: 36
      },
      "5": {
        name: "GET",
        decl: {
          start: {
            line: 143,
            column: 15
          },
          end: {
            line: 143,
            column: 18
          }
        },
        loc: {
          start: {
            line: 143,
            column: 28
          },
          end: {
            line: 199,
            column: 1
          }
        },
        line: 143
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "1": {
        loc: {
          start: {
            line: 44,
            column: 23
          },
          end: {
            line: 44,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 23
          },
          end: {
            line: 44,
            column: 39
          }
        }, {
          start: {
            line: 44,
            column: 43
          },
          end: {
            line: 44,
            column: 68
          }
        }],
        line: 44
      },
      "2": {
        loc: {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "3": {
        loc: {
          start: {
            line: 71,
            column: 25
          },
          end: {
            line: 71,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 25
          },
          end: {
            line: 71,
            column: 41
          }
        }, {
          start: {
            line: 71,
            column: 45
          },
          end: {
            line: 71,
            column: 47
          }
        }],
        line: 71
      },
      "4": {
        loc: {
          start: {
            line: 72,
            column: 31
          },
          end: {
            line: 72,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 31
          },
          end: {
            line: 72,
            column: 53
          }
        }, {
          start: {
            line: 72,
            column: 57
          },
          end: {
            line: 72,
            column: 59
          }
        }],
        line: 72
      },
      "5": {
        loc: {
          start: {
            line: 74,
            column: 30
          },
          end: {
            line: 74,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 74,
            column: 51
          },
          end: {
            line: 74,
            column: 81
          }
        }, {
          start: {
            line: 74,
            column: 84
          },
          end: {
            line: 74,
            column: 88
          }
        }],
        line: 74
      },
      "6": {
        loc: {
          start: {
            line: 75,
            column: 24
          },
          end: {
            line: 75,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 75,
            column: 42
          },
          end: {
            line: 75,
            column: 69
          }
        }, {
          start: {
            line: 75,
            column: 72
          },
          end: {
            line: 75,
            column: 76
          }
        }],
        line: 75
      },
      "7": {
        loc: {
          start: {
            line: 76,
            column: 19
          },
          end: {
            line: 76,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 19
          },
          end: {
            line: 76,
            column: 39
          }
        }, {
          start: {
            line: 76,
            column: 43
          },
          end: {
            line: 76,
            column: 44
          }
        }],
        line: 76
      },
      "8": {
        loc: {
          start: {
            line: 77,
            column: 33
          },
          end: {
            line: 77,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 33
          },
          end: {
            line: 77,
            column: 67
          }
        }, {
          start: {
            line: 77,
            column: 71
          },
          end: {
            line: 77,
            column: 72
          }
        }],
        line: 77
      },
      "9": {
        loc: {
          start: {
            line: 78,
            column: 25
          },
          end: {
            line: 78,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 78,
            column: 44
          },
          end: {
            line: 78,
            column: 70
          }
        }, {
          start: {
            line: 78,
            column: 73
          },
          end: {
            line: 78,
            column: 77
          }
        }],
        line: 78
      },
      "10": {
        loc: {
          start: {
            line: 79,
            column: 20
          },
          end: {
            line: 79,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 20
          },
          end: {
            line: 79,
            column: 31
          }
        }, {
          start: {
            line: 79,
            column: 35
          },
          end: {
            line: 79,
            column: 42
          }
        }],
        line: 79
      },
      "11": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "12": {
        loc: {
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "13": {
        loc: {
          start: {
            line: 92,
            column: 16
          },
          end: {
            line: 92,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 16
          },
          end: {
            line: 92,
            column: 29
          }
        }, {
          start: {
            line: 92,
            column: 33
          },
          end: {
            line: 92,
            column: 42
          }
        }],
        line: 92
      },
      "14": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "15": {
        loc: {
          start: {
            line: 137,
            column: 21
          },
          end: {
            line: 137,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 137,
            column: 46
          },
          end: {
            line: 137,
            column: 59
          }
        }, {
          start: {
            line: 137,
            column: 62
          },
          end: {
            line: 137,
            column: 77
          }
        }],
        line: 137
      },
      "16": {
        loc: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "17": {
        loc: {
          start: {
            line: 150,
            column: 23
          },
          end: {
            line: 150,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 23
          },
          end: {
            line: 150,
            column: 39
          }
        }, {
          start: {
            line: 150,
            column: 43
          },
          end: {
            line: 150,
            column: 68
          }
        }],
        line: 150
      },
      "18": {
        loc: {
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 182,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 182,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "19": {
        loc: {
          start: {
            line: 185,
            column: 18
          },
          end: {
            line: 185,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 18
          },
          end: {
            line: 185,
            column: 26
          }
        }, {
          start: {
            line: 185,
            column: 30
          },
          end: {
            line: 185,
            column: 32
          }
        }],
        line: 185
      },
      "20": {
        loc: {
          start: {
            line: 186,
            column: 19
          },
          end: {
            line: 186,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 19
          },
          end: {
            line: 186,
            column: 35
          }
        }, {
          start: {
            line: 186,
            column: 39
          },
          end: {
            line: 186,
            column: 40
          }
        }],
        line: 186
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products-simple\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API SIMPLIFICADA DE PRODUCTOS ADMIN\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { checkCRUDPermissions } from '@/lib/auth/admin-auth';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\n// Configuraci\xF3n de Supabase con service key para operaciones admin\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;\r\n\r\nconst supabaseAdmin = createClient(supabaseUrl, supabaseServiceKey, {\r\n  auth: {\r\n    autoRefreshToken: false,\r\n    persistSession: false\r\n  }\r\n});\r\n\r\n/**\r\n * POST /api/admin/products-simple\r\n * Crear nuevo producto (SIMPLIFICADO - SIN VALIDACIONES ENTERPRISE)\r\n */\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    console.log('\uD83D\uDD27 Products Simple API: Creating product...');\r\n\r\n    // Verificar autenticaci\xF3n b\xE1sica\r\n    const authResult = await checkCRUDPermissions('create', 'products');\r\n\r\n    if (!authResult.allowed) {\r\n      console.log('\u274C Auth failed:', authResult.error);\r\n      return NextResponse.json(\r\n        {\r\n          error: authResult.error || 'Autenticaci\xF3n requerida',\r\n          code: 'AUTH_ERROR'\r\n        },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    console.log('\u2705 Auth successful');\r\n\r\n    const body = await request.json();\r\n    console.log('\uD83D\uDCDD Request body:', JSON.stringify(body, null, 2));\r\n\r\n    // Validaci\xF3n b\xE1sica de campos requeridos\r\n    const requiredFields = ['name', 'price'];\r\n    for (const field of requiredFields) {\r\n      if (!body[field]) {\r\n        return NextResponse.json(\r\n          {\r\n            error: `Campo requerido: ${field}`,\r\n            code: 'MISSING_FIELD'\r\n          },\r\n          { status: 400 }\r\n        );\r\n      }\r\n    }\r\n\r\n    // Mapear datos del frontend al formato de base de datos\r\n    const productData = {\r\n      name: body.name,\r\n      description: body.description || '',\r\n      short_description: body.short_description || '',\r\n      price: parseFloat(body.price),\r\n      discounted_price: body.compare_price ? parseFloat(body.compare_price) : null,\r\n      cost_price: body.cost_price ? parseFloat(body.cost_price) : null,\r\n      stock: parseInt(body.stock) || 0,\r\n      low_stock_threshold: parseInt(body.low_stock_threshold) || 5,\r\n      category_id: body.category_id ? parseInt(body.category_id) : null,\r\n      status: body.status || 'draft',\r\n      is_active: body.status === 'active',\r\n      track_inventory: body.track_inventory !== false,\r\n      allow_backorders: body.allow_backorders === true,\r\n      // Generar slug autom\xE1tico\r\n      slug: body.name\r\n        .toLowerCase()\r\n        .replace(/[^a-z0-9\\s-]/g, '')\r\n        .replace(/\\s+/g, '-')\r\n        .replace(/-+/g, '-')\r\n        .trim() + '-' + Date.now(),\r\n      created_at: new Date().toISOString(),\r\n      updated_at: new Date().toISOString()\r\n    };\r\n\r\n    console.log('\uD83D\uDD04 Mapped product data:', JSON.stringify(productData, null, 2));\r\n\r\n    // Verificar categor\xEDa si se proporciona\r\n    if (productData.category_id) {\r\n      const { data: category, error: categoryError } = await supabaseAdmin\r\n        .from('categories')\r\n        .select('id')\r\n        .eq('id', productData.category_id)\r\n        .single();\r\n\r\n      if (categoryError || !category) {\r\n        console.log('\u274C Category not found:', categoryError);\r\n        return NextResponse.json(\r\n          { \r\n            error: 'Categor\xEDa no encontrada',\r\n            code: 'CATEGORY_NOT_FOUND'\r\n          },\r\n          { status: 400 }\r\n        );\r\n      }\r\n    }\r\n\r\n    // Crear producto usando Supabase Admin (bypassing RLS)\r\n    const { data: product, error } = await supabaseAdmin\r\n      .from('products')\r\n      .insert(productData)\r\n      .select(`\r\n        id,\r\n        name,\r\n        description,\r\n        price,\r\n        stock,\r\n        category_id,\r\n        status,\r\n        created_at,\r\n        updated_at\r\n      `)\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('\u274C Error creating product:', error);\r\n      return NextResponse.json(\r\n        { \r\n          error: 'Error al crear producto',\r\n          code: 'DATABASE_ERROR',\r\n          details: error.message\r\n        },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    console.log('\u2705 Product created successfully:', product);\r\n\r\n    return NextResponse.json(\r\n      {\r\n        success: true,\r\n        message: 'Producto creado exitosamente',\r\n        data: product\r\n      },\r\n      { status: 201 }\r\n    );\r\n\r\n  } catch (error) {\r\n    console.error('\u274C Error in POST /api/admin/products-simple:', error);\r\n\r\n    return NextResponse.json(\r\n      {\r\n        error: 'Error interno del servidor',\r\n        code: 'INTERNAL_ERROR',\r\n        details: error instanceof Error ? error.message : 'Unknown error'\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * GET /api/admin/products-simple\r\n * Obtener lista de productos (SIMPLIFICADO)\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    console.log('\uD83D\uDD27 Products Simple API: Getting products...');\r\n\r\n    // Verificar autenticaci\xF3n b\xE1sica\r\n    const authResult = await checkCRUDPermissions('read', 'products');\r\n\r\n    if (!authResult.allowed) {\r\n      return NextResponse.json(\r\n        {\r\n          error: authResult.error || 'Autenticaci\xF3n requerida',\r\n          code: 'AUTH_ERROR'\r\n        },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Obtener productos usando Supabase Admin\r\n    const { data: products, error } = await supabaseAdmin\r\n      .from('products')\r\n      .select(`\r\n        id,\r\n        name,\r\n        description,\r\n        price,\r\n        stock,\r\n        category_id,\r\n        status,\r\n        created_at,\r\n        updated_at,\r\n        categories (\r\n          id,\r\n          name\r\n        )\r\n      `)\r\n      .order('created_at', { ascending: false });\r\n\r\n    if (error) {\r\n      console.error('\u274C Error fetching products:', error);\r\n      return NextResponse.json(\r\n        { \r\n          error: 'Error al obtener productos',\r\n          code: 'DATABASE_ERROR'\r\n        },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json(\r\n      {\r\n        success: true,\r\n        data: products || [],\r\n        total: products?.length || 0\r\n      },\r\n      { status: 200 }\r\n    );\r\n\r\n  } catch (error) {\r\n    console.error('\u274C Error in GET /api/admin/products-simple:', error);\r\n\r\n    return NextResponse.json(\r\n      {\r\n        error: 'Error interno del servidor',\r\n        code: 'INTERNAL_ERROR'\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "supabaseUrl", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "supabaseServiceKey", "SUPABASE_SERVICE_ROLE_KEY", "supabaseAdmin", "createClient", "auth", "autoRefreshToken", "persistSession", "request", "console", "log", "authResult", "checkCRUDPermissions", "allowed", "error", "NextResponse", "json", "code", "status", "body", "JSON", "stringify", "requiredFields", "field", "productData", "name", "description", "short_description", "price", "parseFloat", "discounted_price", "compare_price", "cost_price", "stock", "parseInt", "low_stock_threshold", "category_id", "is_active", "track_inventory", "allow_backorders", "slug", "toLowerCase", "replace", "trim", "Date", "now", "created_at", "toISOString", "updated_at", "data", "category", "categoryError", "from", "select", "eq", "single", "product", "insert", "details", "message", "success", "Error", "products", "order", "ascending", "total", "length"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "728281f9da01da5bc04d4ebfb735b82e5cc0539c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_13rvoa2ej2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_13rvoa2ej2();
cov_13rvoa2ej2().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_13rvoa2ej2().f[0]++;
  cov_13rvoa2ej2().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_13rvoa2ej2().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_13rvoa2ej2().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_13rvoa2ej2().f[1]++;
    cov_13rvoa2ej2().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_13rvoa2ej2().f[2]++;
    cov_13rvoa2ej2().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_13rvoa2ej2().f[3]++;
    cov_13rvoa2ej2().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_13rvoa2ej2().s[7]++, require("next/server"));
const _adminauth =
/* istanbul ignore next */
(cov_13rvoa2ej2().s[8]++, require("../../../../lib/auth/admin-auth"));
const _supabasejs =
/* istanbul ignore next */
(cov_13rvoa2ej2().s[9]++, require("@supabase/supabase-js"));
const runtime =
/* istanbul ignore next */
(cov_13rvoa2ej2().s[10]++, 'nodejs');
// ConfiguraciÃ³n de Supabase con service key para operaciones admin
const supabaseUrl =
/* istanbul ignore next */
(cov_13rvoa2ej2().s[11]++, process.env.NEXT_PUBLIC_SUPABASE_URL);
const supabaseServiceKey =
/* istanbul ignore next */
(cov_13rvoa2ej2().s[12]++, process.env.SUPABASE_SERVICE_ROLE_KEY);
const supabaseAdmin =
/* istanbul ignore next */
(cov_13rvoa2ej2().s[13]++, (0, _supabasejs.createClient)(supabaseUrl, supabaseServiceKey, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
}));
async function POST(request) {
  /* istanbul ignore next */
  cov_13rvoa2ej2().f[4]++;
  cov_13rvoa2ej2().s[14]++;
  try {
    /* istanbul ignore next */
    cov_13rvoa2ej2().s[15]++;
    console.log('ğ§ Products Simple API: Creating product...');
    // Verificar autenticaciÃ³n bÃ¡sica
    const authResult =
    /* istanbul ignore next */
    (cov_13rvoa2ej2().s[16]++, await (0, _adminauth.checkCRUDPermissions)('create', 'products'));
    /* istanbul ignore next */
    cov_13rvoa2ej2().s[17]++;
    if (!authResult.allowed) {
      /* istanbul ignore next */
      cov_13rvoa2ej2().b[0][0]++;
      cov_13rvoa2ej2().s[18]++;
      console.log('â Auth failed:', authResult.error);
      /* istanbul ignore next */
      cov_13rvoa2ej2().s[19]++;
      return _server.NextResponse.json({
        error:
        /* istanbul ignore next */
        (cov_13rvoa2ej2().b[1][0]++, authResult.error) ||
        /* istanbul ignore next */
        (cov_13rvoa2ej2().b[1][1]++, 'AutenticaciÃ³n requerida'),
        code: 'AUTH_ERROR'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_13rvoa2ej2().b[0][1]++;
    }
    cov_13rvoa2ej2().s[20]++;
    console.log('â Auth successful');
    const body =
    /* istanbul ignore next */
    (cov_13rvoa2ej2().s[21]++, await request.json());
    /* istanbul ignore next */
    cov_13rvoa2ej2().s[22]++;
    console.log('ğ Request body:', JSON.stringify(body, null, 2));
    // ValidaciÃ³n bÃ¡sica de campos requeridos
    const requiredFields =
    /* istanbul ignore next */
    (cov_13rvoa2ej2().s[23]++, ['name', 'price']);
    /* istanbul ignore next */
    cov_13rvoa2ej2().s[24]++;
    for (const field of requiredFields) {
      /* istanbul ignore next */
      cov_13rvoa2ej2().s[25]++;
      if (!body[field]) {
        /* istanbul ignore next */
        cov_13rvoa2ej2().b[2][0]++;
        cov_13rvoa2ej2().s[26]++;
        return _server.NextResponse.json({
          error: `Campo requerido: ${field}`,
          code: 'MISSING_FIELD'
        }, {
          status: 400
        });
      } else
      /* istanbul ignore next */
      {
        cov_13rvoa2ej2().b[2][1]++;
      }
    }
    // Mapear datos del frontend al formato de base de datos
    const productData =
    /* istanbul ignore next */
    (cov_13rvoa2ej2().s[27]++, {
      name: body.name,
      description:
      /* istanbul ignore next */
      (cov_13rvoa2ej2().b[3][0]++, body.description) ||
      /* istanbul ignore next */
      (cov_13rvoa2ej2().b[3][1]++, ''),
      short_description:
      /* istanbul ignore next */
      (cov_13rvoa2ej2().b[4][0]++, body.short_description) ||
      /* istanbul ignore next */
      (cov_13rvoa2ej2().b[4][1]++, ''),
      price: parseFloat(body.price),
      discounted_price: body.compare_price ?
      /* istanbul ignore next */
      (cov_13rvoa2ej2().b[5][0]++, parseFloat(body.compare_price)) :
      /* istanbul ignore next */
      (cov_13rvoa2ej2().b[5][1]++, null),
      cost_price: body.cost_price ?
      /* istanbul ignore next */
      (cov_13rvoa2ej2().b[6][0]++, parseFloat(body.cost_price)) :
      /* istanbul ignore next */
      (cov_13rvoa2ej2().b[6][1]++, null),
      stock:
      /* istanbul ignore next */
      (cov_13rvoa2ej2().b[7][0]++, parseInt(body.stock)) ||
      /* istanbul ignore next */
      (cov_13rvoa2ej2().b[7][1]++, 0),
      low_stock_threshold:
      /* istanbul ignore next */
      (cov_13rvoa2ej2().b[8][0]++, parseInt(body.low_stock_threshold)) ||
      /* istanbul ignore next */
      (cov_13rvoa2ej2().b[8][1]++, 5),
      category_id: body.category_id ?
      /* istanbul ignore next */
      (cov_13rvoa2ej2().b[9][0]++, parseInt(body.category_id)) :
      /* istanbul ignore next */
      (cov_13rvoa2ej2().b[9][1]++, null),
      status:
      /* istanbul ignore next */
      (cov_13rvoa2ej2().b[10][0]++, body.status) ||
      /* istanbul ignore next */
      (cov_13rvoa2ej2().b[10][1]++, 'draft'),
      is_active: body.status === 'active',
      track_inventory: body.track_inventory !== false,
      allow_backorders: body.allow_backorders === true,
      // Generar slug automÃ¡tico
      slug: body.name.toLowerCase().replace(/[^a-z0-9\s-]/g, '').replace(/\s+/g, '-').replace(/-+/g, '-').trim() + '-' + Date.now(),
      created_at: new Date().toISOString(),
      updated_at: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_13rvoa2ej2().s[28]++;
    console.log('ğ Mapped product data:', JSON.stringify(productData, null, 2));
    // Verificar categorÃ­a si se proporciona
    /* istanbul ignore next */
    cov_13rvoa2ej2().s[29]++;
    if (productData.category_id) {
      /* istanbul ignore next */
      cov_13rvoa2ej2().b[11][0]++;
      const {
        data: category,
        error: categoryError
      } =
      /* istanbul ignore next */
      (cov_13rvoa2ej2().s[30]++, await supabaseAdmin.from('categories').select('id').eq('id', productData.category_id).single());
      /* istanbul ignore next */
      cov_13rvoa2ej2().s[31]++;
      if (
      /* istanbul ignore next */
      (cov_13rvoa2ej2().b[13][0]++, categoryError) ||
      /* istanbul ignore next */
      (cov_13rvoa2ej2().b[13][1]++, !category)) {
        /* istanbul ignore next */
        cov_13rvoa2ej2().b[12][0]++;
        cov_13rvoa2ej2().s[32]++;
        console.log('â Category not found:', categoryError);
        /* istanbul ignore next */
        cov_13rvoa2ej2().s[33]++;
        return _server.NextResponse.json({
          error: 'CategorÃ­a no encontrada',
          code: 'CATEGORY_NOT_FOUND'
        }, {
          status: 400
        });
      } else
      /* istanbul ignore next */
      {
        cov_13rvoa2ej2().b[12][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_13rvoa2ej2().b[11][1]++;
    }
    // Crear producto usando Supabase Admin (bypassing RLS)
    const {
      data: product,
      error
    } =
    /* istanbul ignore next */
    (cov_13rvoa2ej2().s[34]++, await supabaseAdmin.from('products').insert(productData).select(`
        id,
        name,
        description,
        price,
        stock,
        category_id,
        status,
        created_at,
        updated_at
      `).single());
    /* istanbul ignore next */
    cov_13rvoa2ej2().s[35]++;
    if (error) {
      /* istanbul ignore next */
      cov_13rvoa2ej2().b[14][0]++;
      cov_13rvoa2ej2().s[36]++;
      console.error('â Error creating product:', error);
      /* istanbul ignore next */
      cov_13rvoa2ej2().s[37]++;
      return _server.NextResponse.json({
        error: 'Error al crear producto',
        code: 'DATABASE_ERROR',
        details: error.message
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_13rvoa2ej2().b[14][1]++;
    }
    cov_13rvoa2ej2().s[38]++;
    console.log('â Product created successfully:', product);
    /* istanbul ignore next */
    cov_13rvoa2ej2().s[39]++;
    return _server.NextResponse.json({
      success: true,
      message: 'Producto creado exitosamente',
      data: product
    }, {
      status: 201
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_13rvoa2ej2().s[40]++;
    console.error('â Error in POST /api/admin/products-simple:', error);
    /* istanbul ignore next */
    cov_13rvoa2ej2().s[41]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor',
      code: 'INTERNAL_ERROR',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_13rvoa2ej2().b[15][0]++, error.message) :
      /* istanbul ignore next */
      (cov_13rvoa2ej2().b[15][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_13rvoa2ej2().f[5]++;
  cov_13rvoa2ej2().s[42]++;
  try {
    /* istanbul ignore next */
    cov_13rvoa2ej2().s[43]++;
    console.log('ğ§ Products Simple API: Getting products...');
    // Verificar autenticaciÃ³n bÃ¡sica
    const authResult =
    /* istanbul ignore next */
    (cov_13rvoa2ej2().s[44]++, await (0, _adminauth.checkCRUDPermissions)('read', 'products'));
    /* istanbul ignore next */
    cov_13rvoa2ej2().s[45]++;
    if (!authResult.allowed) {
      /* istanbul ignore next */
      cov_13rvoa2ej2().b[16][0]++;
      cov_13rvoa2ej2().s[46]++;
      return _server.NextResponse.json({
        error:
        /* istanbul ignore next */
        (cov_13rvoa2ej2().b[17][0]++, authResult.error) ||
        /* istanbul ignore next */
        (cov_13rvoa2ej2().b[17][1]++, 'AutenticaciÃ³n requerida'),
        code: 'AUTH_ERROR'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_13rvoa2ej2().b[16][1]++;
    }
    // Obtener productos usando Supabase Admin
    const {
      data: products,
      error
    } =
    /* istanbul ignore next */
    (cov_13rvoa2ej2().s[47]++, await supabaseAdmin.from('products').select(`
        id,
        name,
        description,
        price,
        stock,
        category_id,
        status,
        created_at,
        updated_at,
        categories (
          id,
          name
        )
      `).order('created_at', {
      ascending: false
    }));
    /* istanbul ignore next */
    cov_13rvoa2ej2().s[48]++;
    if (error) {
      /* istanbul ignore next */
      cov_13rvoa2ej2().b[18][0]++;
      cov_13rvoa2ej2().s[49]++;
      console.error('â Error fetching products:', error);
      /* istanbul ignore next */
      cov_13rvoa2ej2().s[50]++;
      return _server.NextResponse.json({
        error: 'Error al obtener productos',
        code: 'DATABASE_ERROR'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_13rvoa2ej2().b[18][1]++;
    }
    cov_13rvoa2ej2().s[51]++;
    return _server.NextResponse.json({
      success: true,
      data:
      /* istanbul ignore next */
      (cov_13rvoa2ej2().b[19][0]++, products) ||
      /* istanbul ignore next */
      (cov_13rvoa2ej2().b[19][1]++, []),
      total:
      /* istanbul ignore next */
      (cov_13rvoa2ej2().b[20][0]++, products?.length) ||
      /* istanbul ignore next */
      (cov_13rvoa2ej2().b[20][1]++, 0)
    }, {
      status: 200
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_13rvoa2ej2().s[52]++;
    console.error('â Error in GET /api/admin/products-simple:', error);
    /* istanbul ignore next */
    cov_13rvoa2ej2().s[53]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor',
      code: 'INTERNAL_ERROR'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,