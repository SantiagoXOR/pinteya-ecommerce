e254944521b29907414d46f30b0b2cb9
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_26pq7385s6() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug-clerk-session\\route.ts";
  var hash = "f09d8d86361efbfc7511bed4412c3a13da0cb42f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug-clerk-session\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 51
        }
      },
      "7": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 38
        }
      },
      "8": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 24
        }
      },
      "9": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "10": {
        start: {
          line: 25,
          column: 42
        },
        end: {
          line: 25,
          column: 61
        }
      },
      "11": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 34,
          column: 11
        }
      },
      "12": {
        start: {
          line: 36,
          column: 30
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "13": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 55,
          column: 11
        }
      },
      "14": {
        start: {
          line: 52,
          column: 72
        },
        end: {
          line: 52,
          column: 88
        }
      },
      "15": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 45
        }
      },
      "16": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 64,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 23,
            column: 18
          }
        },
        loc: {
          start: {
            line: 23,
            column: 21
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 52,
            column: 64
          },
          end: {
            line: 52,
            column: 65
          }
        },
        loc: {
          start: {
            line: 52,
            column: 72
          },
          end: {
            line: 52,
            column: 88
          }
        },
        line: 52
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 27
          },
          end: {
            line: 29,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 43
          },
          end: {
            line: 29,
            column: 81
          }
        }, {
          start: {
            line: 29,
            column: 84
          },
          end: {
            line: 29,
            column: 90
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 48,
            column: 35
          },
          end: {
            line: 48,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 51
          },
          end: {
            line: 48,
            column: 77
          }
        }, {
          start: {
            line: 48,
            column: 80
          },
          end: {
            line: 48,
            column: 82
          }
        }],
        line: 48
      },
      "2": {
        loc: {
          start: {
            line: 52,
            column: 30
          },
          end: {
            line: 52,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 30
          },
          end: {
            line: 52,
            column: 89
          }
        }, {
          start: {
            line: 52,
            column: 93
          },
          end: {
            line: 52,
            column: 99
          }
        }],
        line: 52
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug-clerk-session\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { auth } from '@/lib/auth/config';\r\nimport { NextResponse } from 'next/server';\r\n\r\nexport async function GET() {\r\n  try {\r\n    const { userId, sessionClaims } = auth();\r\n\r\n    // Log detallado para debugging\r\n    console.log('\uD83D\uDD0D CLERK DEBUG INFO:', {\r\n      userId,\r\n      sessionClaims: sessionClaims ? JSON.stringify(sessionClaims, null, 2) : 'null',\r\n      publicMetadata: sessionClaims?.publicMetadata,\r\n      metadata: sessionClaims?.metadata,\r\n      role_from_publicMetadata: sessionClaims?.publicMetadata?.role,\r\n      role_from_metadata: sessionClaims?.metadata?.role\r\n    });\r\n\r\n    // Verificar todas las posibles ubicaciones del rol\r\n    const possibleRoles = {\r\n      'sessionClaims.publicMetadata.role': sessionClaims?.publicMetadata?.role,\r\n      'sessionClaims.metadata.role': sessionClaims?.metadata?.role,\r\n      'sessionClaims.role': sessionClaims?.role,\r\n      'sessionClaims.public_metadata.role': sessionClaims?.public_metadata?.role,\r\n      'sessionClaims.user_metadata.role': sessionClaims?.user_metadata?.role\r\n    };\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      debug: {\r\n        userId,\r\n        hasSessionClaims: !!sessionClaims,\r\n        sessionClaimsKeys: sessionClaims ? Object.keys(sessionClaims) : [],\r\n        publicMetadata: sessionClaims?.publicMetadata,\r\n        metadata: sessionClaims?.metadata,\r\n        possibleRoleLocations: possibleRoles,\r\n        detectedRole: Object.values(possibleRoles).find(role => role === 'admin') || 'none',\r\n        fullSessionClaimsStructure: sessionClaims\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Debug error:', error);\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: error.message,\r\n      errorType: error.constructor.name\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "runtime", "userId", "sessionClaims", "auth", "console", "log", "JSON", "stringify", "publicMetadata", "metadata", "role_from_publicMetadata", "role", "role_from_metadata", "possibleRoles", "public_metadata", "user_metadata", "NextResponse", "json", "success", "debug", "hasSessionClaims", "sessionClaimsKeys", "Object", "keys", "possibleRoleLocations", "detectedRole", "values", "find", "fullSessionClaimsStructure", "error", "message", "errorType", "name", "status"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QAMfA;eAAAA;;QALTC;eAAAA;;;wBAEQ;wBACQ;AAHtB,MAAMA,UAAU;AAKhB,eAAeD;IACpB,IAAI;QACF,MAAM,EAAEE,MAAM,EAAEC,aAAa,EAAE,GAAGC,IAAAA,YAAI;QAEtC,+BAA+B;QAC/BC,QAAQC,GAAG,CAAC,wBAAwB;YAClCJ;YACAC,eAAeA,gBAAgBI,KAAKC,SAAS,CAACL,eAAe,MAAM,KAAK;YACxEM,gBAAgBN,eAAeM;YAC/BC,UAAUP,eAAeO;YACzBC,0BAA0BR,eAAeM,gBAAgBG;YACzDC,oBAAoBV,eAAeO,UAAUE;QAC/C;QAEA,mDAAmD;QACnD,MAAME,gBAAgB;YACpB,qCAAqCX,eAAeM,gBAAgBG;YACpE,+BAA+BT,eAAeO,UAAUE;YACxD,sBAAsBT,eAAeS;YACrC,sCAAsCT,eAAeY,iBAAiBH;YACtE,oCAAoCT,eAAea,eAAeJ;QACpE;QAEA,OAAOK,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTC,OAAO;gBACLlB;gBACAmB,kBAAkB,CAAC,CAAClB;gBACpBmB,mBAAmBnB,gBAAgBoB,OAAOC,IAAI,CAACrB,iBAAiB,EAAE;gBAClEM,gBAAgBN,eAAeM;gBAC/BC,UAAUP,eAAeO;gBACzBe,uBAAuBX;gBACvBY,cAAcH,OAAOI,MAAM,CAACb,eAAec,IAAI,CAAChB,CAAAA,OAAQA,SAAS,YAAY;gBAC7EiB,4BAA4B1B;YAC9B;QACF;IACF,EAAE,OAAO2B,OAAO;QACdzB,QAAQyB,KAAK,CAAC,gBAAgBA;QAC9B,OAAOb,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTW,OAAOA,MAAMC,OAAO;YACpBC,WAAWF,MAAM,WAAW,CAACG,IAAI;QACnC,GAAG;YAAEC,QAAQ;QAAI;IACnB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f09d8d86361efbfc7511bed4412c3a13da0cb42f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_26pq7385s6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_26pq7385s6();
cov_26pq7385s6().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_26pq7385s6().f[0]++;
  cov_26pq7385s6().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_26pq7385s6().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_26pq7385s6().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_26pq7385s6().f[1]++;
    cov_26pq7385s6().s[4]++;
    return GET;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_26pq7385s6().f[2]++;
    cov_26pq7385s6().s[5]++;
    return runtime;
  }
});
const _config =
/* istanbul ignore next */
(cov_26pq7385s6().s[6]++, require("../../../lib/auth/config"));
const _server =
/* istanbul ignore next */
(cov_26pq7385s6().s[7]++, require("next/server"));
const runtime =
/* istanbul ignore next */
(cov_26pq7385s6().s[8]++, 'nodejs');
async function GET() {
  /* istanbul ignore next */
  cov_26pq7385s6().f[3]++;
  cov_26pq7385s6().s[9]++;
  try {
    const {
      userId,
      sessionClaims
    } =
    /* istanbul ignore next */
    (cov_26pq7385s6().s[10]++, (0, _config.auth)());
    // Log detallado para debugging
    /* istanbul ignore next */
    cov_26pq7385s6().s[11]++;
    console.log('ð CLERK DEBUG INFO:', {
      userId,
      sessionClaims: sessionClaims ?
      /* istanbul ignore next */
      (cov_26pq7385s6().b[0][0]++, JSON.stringify(sessionClaims, null, 2)) :
      /* istanbul ignore next */
      (cov_26pq7385s6().b[0][1]++, 'null'),
      publicMetadata: sessionClaims?.publicMetadata,
      metadata: sessionClaims?.metadata,
      role_from_publicMetadata: sessionClaims?.publicMetadata?.role,
      role_from_metadata: sessionClaims?.metadata?.role
    });
    // Verificar todas las posibles ubicaciones del rol
    const possibleRoles =
    /* istanbul ignore next */
    (cov_26pq7385s6().s[12]++, {
      'sessionClaims.publicMetadata.role': sessionClaims?.publicMetadata?.role,
      'sessionClaims.metadata.role': sessionClaims?.metadata?.role,
      'sessionClaims.role': sessionClaims?.role,
      'sessionClaims.public_metadata.role': sessionClaims?.public_metadata?.role,
      'sessionClaims.user_metadata.role': sessionClaims?.user_metadata?.role
    });
    /* istanbul ignore next */
    cov_26pq7385s6().s[13]++;
    return _server.NextResponse.json({
      success: true,
      debug: {
        userId,
        hasSessionClaims: !!sessionClaims,
        sessionClaimsKeys: sessionClaims ?
        /* istanbul ignore next */
        (cov_26pq7385s6().b[1][0]++, Object.keys(sessionClaims)) :
        /* istanbul ignore next */
        (cov_26pq7385s6().b[1][1]++, []),
        publicMetadata: sessionClaims?.publicMetadata,
        metadata: sessionClaims?.metadata,
        possibleRoleLocations: possibleRoles,
        detectedRole:
        /* istanbul ignore next */
        (cov_26pq7385s6().b[2][0]++, Object.values(possibleRoles).find(role => {
          /* istanbul ignore next */
          cov_26pq7385s6().f[4]++;
          cov_26pq7385s6().s[14]++;
          return role === 'admin';
        })) ||
        /* istanbul ignore next */
        (cov_26pq7385s6().b[2][1]++, 'none'),
        fullSessionClaimsStructure: sessionClaims
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_26pq7385s6().s[15]++;
    console.error('Debug error:', error);
    /* istanbul ignore next */
    cov_26pq7385s6().s[16]++;
    return _server.NextResponse.json({
      success: false,
      error: error.message,
      errorType: error.constructor.name
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjZwcTczODVzNiIsImFjdHVhbENvdmVyYWdlIiwicyIsIkdFVCIsImYiLCJydW50aW1lIiwidXNlcklkIiwic2Vzc2lvbkNsYWltcyIsIl9jb25maWciLCJhdXRoIiwiY29uc29sZSIsImxvZyIsImIiLCJKU09OIiwic3RyaW5naWZ5IiwicHVibGljTWV0YWRhdGEiLCJtZXRhZGF0YSIsInJvbGVfZnJvbV9wdWJsaWNNZXRhZGF0YSIsInJvbGUiLCJyb2xlX2Zyb21fbWV0YWRhdGEiLCJwb3NzaWJsZVJvbGVzIiwicHVibGljX21ldGFkYXRhIiwidXNlcl9tZXRhZGF0YSIsIl9zZXJ2ZXIiLCJOZXh0UmVzcG9uc2UiLCJqc29uIiwic3VjY2VzcyIsImRlYnVnIiwiaGFzU2Vzc2lvbkNsYWltcyIsInNlc3Npb25DbGFpbXNLZXlzIiwiT2JqZWN0Iiwia2V5cyIsInBvc3NpYmxlUm9sZUxvY2F0aW9ucyIsImRldGVjdGVkUm9sZSIsInZhbHVlcyIsImZpbmQiLCJmdWxsU2Vzc2lvbkNsYWltc1N0cnVjdHVyZSIsImVycm9yIiwibWVzc2FnZSIsImVycm9yVHlwZSIsImNvbnN0cnVjdG9yIiwibmFtZSIsInN0YXR1cyJdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXHNyY1xcYXBwXFxhcGlcXGRlYnVnLWNsZXJrLXNlc3Npb25cXHJvdXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvbmZpZ3VyYWNpw7NuIHBhcmEgTm9kZS5qcyBSdW50aW1lXHJcbmV4cG9ydCBjb25zdCBydW50aW1lID0gJ25vZGVqcyc7XHJcblxyXG5pbXBvcnQgeyBhdXRoIH0gZnJvbSAnQC9saWIvYXV0aC9jb25maWcnO1xyXG5pbXBvcnQgeyBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKCkge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCB7IHVzZXJJZCwgc2Vzc2lvbkNsYWltcyB9ID0gYXV0aCgpO1xyXG5cclxuICAgIC8vIExvZyBkZXRhbGxhZG8gcGFyYSBkZWJ1Z2dpbmdcclxuICAgIGNvbnNvbGUubG9nKCfwn5SNIENMRVJLIERFQlVHIElORk86Jywge1xyXG4gICAgICB1c2VySWQsXHJcbiAgICAgIHNlc3Npb25DbGFpbXM6IHNlc3Npb25DbGFpbXMgPyBKU09OLnN0cmluZ2lmeShzZXNzaW9uQ2xhaW1zLCBudWxsLCAyKSA6ICdudWxsJyxcclxuICAgICAgcHVibGljTWV0YWRhdGE6IHNlc3Npb25DbGFpbXM/LnB1YmxpY01ldGFkYXRhLFxyXG4gICAgICBtZXRhZGF0YTogc2Vzc2lvbkNsYWltcz8ubWV0YWRhdGEsXHJcbiAgICAgIHJvbGVfZnJvbV9wdWJsaWNNZXRhZGF0YTogc2Vzc2lvbkNsYWltcz8ucHVibGljTWV0YWRhdGE/LnJvbGUsXHJcbiAgICAgIHJvbGVfZnJvbV9tZXRhZGF0YTogc2Vzc2lvbkNsYWltcz8ubWV0YWRhdGE/LnJvbGVcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIFZlcmlmaWNhciB0b2RhcyBsYXMgcG9zaWJsZXMgdWJpY2FjaW9uZXMgZGVsIHJvbFxyXG4gICAgY29uc3QgcG9zc2libGVSb2xlcyA9IHtcclxuICAgICAgJ3Nlc3Npb25DbGFpbXMucHVibGljTWV0YWRhdGEucm9sZSc6IHNlc3Npb25DbGFpbXM/LnB1YmxpY01ldGFkYXRhPy5yb2xlLFxyXG4gICAgICAnc2Vzc2lvbkNsYWltcy5tZXRhZGF0YS5yb2xlJzogc2Vzc2lvbkNsYWltcz8ubWV0YWRhdGE/LnJvbGUsXHJcbiAgICAgICdzZXNzaW9uQ2xhaW1zLnJvbGUnOiBzZXNzaW9uQ2xhaW1zPy5yb2xlLFxyXG4gICAgICAnc2Vzc2lvbkNsYWltcy5wdWJsaWNfbWV0YWRhdGEucm9sZSc6IHNlc3Npb25DbGFpbXM/LnB1YmxpY19tZXRhZGF0YT8ucm9sZSxcclxuICAgICAgJ3Nlc3Npb25DbGFpbXMudXNlcl9tZXRhZGF0YS5yb2xlJzogc2Vzc2lvbkNsYWltcz8udXNlcl9tZXRhZGF0YT8ucm9sZVxyXG4gICAgfTtcclxuXHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICBzdWNjZXNzOiB0cnVlLFxyXG4gICAgICBkZWJ1Zzoge1xyXG4gICAgICAgIHVzZXJJZCxcclxuICAgICAgICBoYXNTZXNzaW9uQ2xhaW1zOiAhIXNlc3Npb25DbGFpbXMsXHJcbiAgICAgICAgc2Vzc2lvbkNsYWltc0tleXM6IHNlc3Npb25DbGFpbXMgPyBPYmplY3Qua2V5cyhzZXNzaW9uQ2xhaW1zKSA6IFtdLFxyXG4gICAgICAgIHB1YmxpY01ldGFkYXRhOiBzZXNzaW9uQ2xhaW1zPy5wdWJsaWNNZXRhZGF0YSxcclxuICAgICAgICBtZXRhZGF0YTogc2Vzc2lvbkNsYWltcz8ubWV0YWRhdGEsXHJcbiAgICAgICAgcG9zc2libGVSb2xlTG9jYXRpb25zOiBwb3NzaWJsZVJvbGVzLFxyXG4gICAgICAgIGRldGVjdGVkUm9sZTogT2JqZWN0LnZhbHVlcyhwb3NzaWJsZVJvbGVzKS5maW5kKHJvbGUgPT4gcm9sZSA9PT0gJ2FkbWluJykgfHwgJ25vbmUnLFxyXG4gICAgICAgIGZ1bGxTZXNzaW9uQ2xhaW1zU3RydWN0dXJlOiBzZXNzaW9uQ2xhaW1zXHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdEZWJ1ZyBlcnJvcjonLCBlcnJvcik7XHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsXHJcbiAgICAgIGVycm9yVHlwZTogZXJyb3IuY29uc3RydWN0b3IubmFtZVxyXG4gICAgfSwgeyBzdGF0dXM6IDUwMCB9KTtcclxuICB9XHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJc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