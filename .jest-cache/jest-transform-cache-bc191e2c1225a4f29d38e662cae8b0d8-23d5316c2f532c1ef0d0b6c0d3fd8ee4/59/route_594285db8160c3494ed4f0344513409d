8bdfc04153ded773fec63bfba03cc5f6
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_2nt1x6jlt9() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\orders\\route.ts";
  var hash = "604f51dc31a9b42b4e3d500a758e5cfe9ed801ce";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\orders\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 18
        },
        end: {
          line: 21,
          column: 66
        }
      },
      "8": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 54
        }
      },
      "9": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 24
        }
      },
      "10": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 109,
          column: 5
        }
      },
      "11": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "12": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 102
        }
      },
      "13": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 33,
          column: 15
        }
      },
      "14": {
        start: {
          line: 36,
          column: 24
        },
        end: {
          line: 36,
          column: 49
        }
      },
      "15": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "16": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 76
        }
      },
      "17": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 43,
          column: 15
        }
      },
      "18": {
        start: {
          line: 46,
          column: 33
        },
        end: {
          line: 46,
          column: 53
        }
      },
      "19": {
        start: {
          line: 47,
          column: 21
        },
        end: {
          line: 47,
          column: 62
        }
      },
      "20": {
        start: {
          line: 48,
          column: 22
        },
        end: {
          line: 48,
          column: 65
        }
      },
      "21": {
        start: {
          line: 49,
          column: 23
        },
        end: {
          line: 49,
          column: 49
        }
      },
      "22": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 81
        }
      },
      "23": {
        start: {
          line: 52,
          column: 20
        },
        end: {
          line: 64,
          column: 39
        }
      },
      "24": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "25": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 47
        }
      },
      "26": {
        start: {
          line: 70,
          column: 21
        },
        end: {
          line: 70,
          column: 39
        }
      },
      "27": {
        start: {
          line: 71,
          column: 19
        },
        end: {
          line: 71,
          column: 35
        }
      },
      "28": {
        start: {
          line: 72,
          column: 47
        },
        end: {
          line: 74,
          column: 26
        }
      },
      "29": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "30": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 62
        }
      },
      "31": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 81,
          column: 15
        }
      },
      "32": {
        start: {
          line: 84,
          column: 32
        },
        end: {
          line: 84,
          column: 131
        }
      },
      "33": {
        start: {
          line: 85,
          column: 27
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "34": {
        start: {
          line: 87,
          column: 53
        },
        end: {
          line: 87,
          column: 82
        }
      },
      "35": {
        start: {
          line: 88,
          column: 51
        },
        end: {
          line: 88,
          column: 77
        }
      },
      "36": {
        start: {
          line: 89,
          column: 53
        },
        end: {
          line: 89,
          column: 81
        }
      },
      "37": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 101,
          column: 11
        }
      },
      "38": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 63
        }
      },
      "39": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 108,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 18
          }
        },
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 110,
            column: 1
          }
        },
        line: 24
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 87,
            column: 39
          },
          end: {
            line: 87,
            column: 40
          }
        },
        loc: {
          start: {
            line: 87,
            column: 53
          },
          end: {
            line: 87,
            column: 82
          }
        },
        line: 87
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 88,
            column: 42
          },
          end: {
            line: 88,
            column: 43
          }
        },
        loc: {
          start: {
            line: 88,
            column: 51
          },
          end: {
            line: 88,
            column: 77
          }
        },
        line: 88
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 89,
            column: 44
          },
          end: {
            line: 89,
            column: 45
          }
        },
        loc: {
          start: {
            line: 89,
            column: 53
          },
          end: {
            line: 89,
            column: 81
          }
        },
        line: 89
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "2": {
        loc: {
          start: {
            line: 47,
            column: 30
          },
          end: {
            line: 47,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 30
          },
          end: {
            line: 47,
            column: 54
          }
        }, {
          start: {
            line: 47,
            column: 58
          },
          end: {
            line: 47,
            column: 61
          }
        }],
        line: 47
      },
      "3": {
        loc: {
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 48,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 48,
            column: 56
          }
        }, {
          start: {
            line: 48,
            column: 60
          },
          end: {
            line: 48,
            column: 64
          }
        }],
        line: 48
      },
      "4": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "5": {
        loc: {
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 66,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 66,
            column: 18
          }
        }, {
          start: {
            line: 66,
            column: 22
          },
          end: {
            line: 66,
            column: 38
          }
        }],
        line: 66
      },
      "6": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "7": {
        loc: {
          start: {
            line: 86,
            column: 26
          },
          end: {
            line: 86,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 26
          },
          end: {
            line: 86,
            column: 39
          }
        }, {
          start: {
            line: 86,
            column: 43
          },
          end: {
            line: 86,
            column: 44
          }
        }],
        line: 86
      },
      "8": {
        loc: {
          start: {
            line: 87,
            column: 25
          },
          end: {
            line: 87,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 25
          },
          end: {
            line: 87,
            column: 86
          }
        }, {
          start: {
            line: 87,
            column: 90
          },
          end: {
            line: 87,
            column: 91
          }
        }],
        line: 87
      },
      "9": {
        loc: {
          start: {
            line: 88,
            column: 28
          },
          end: {
            line: 88,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 28
          },
          end: {
            line: 88,
            column: 85
          }
        }, {
          start: {
            line: 88,
            column: 89
          },
          end: {
            line: 88,
            column: 90
          }
        }],
        line: 88
      },
      "10": {
        loc: {
          start: {
            line: 89,
            column: 30
          },
          end: {
            line: 89,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 30
          },
          end: {
            line: 89,
            column: 89
          }
        }, {
          start: {
            line: 89,
            column: 93
          },
          end: {
            line: 89,
            column: 94
          }
        }],
        line: 89
      },
      "11": {
        loc: {
          start: {
            line: 93,
            column: 18
          },
          end: {
            line: 93,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 18
          },
          end: {
            line: 93,
            column: 24
          }
        }, {
          start: {
            line: 93,
            column: 28
          },
          end: {
            line: 93,
            column: 30
          }
        }],
        line: 93
      },
      "12": {
        loc: {
          start: {
            line: 97,
            column: 23
          },
          end: {
            line: 97,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 23
          },
          end: {
            line: 97,
            column: 28
          }
        }, {
          start: {
            line: 97,
            column: 32
          },
          end: {
            line: 97,
            column: 33
          }
        }],
        line: 97
      },
      "13": {
        loc: {
          start: {
            line: 98,
            column: 34
          },
          end: {
            line: 98,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 34
          },
          end: {
            line: 98,
            column: 39
          }
        }, {
          start: {
            line: 98,
            column: 43
          },
          end: {
            line: 98,
            column: 44
          }
        }],
        line: 98
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\orders\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API DE \xD3RDENES DE USUARIO\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { ApiResponse } from '@/types/api';\r\n\r\n// ===================================\r\n// GET - Obtener \xF3rdenes del usuario\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar que el cliente administrativo est\xE9 disponible\r\n    if (!supabaseAdmin) {\r\n      console.error('Cliente administrativo de Supabase no disponible en GET /api/user/orders');\r\n      return NextResponse.json(\r\n        { error: 'Servicio de base de datos no disponible' },\r\n        { status: 503 }\r\n      );\r\n    }\r\n\r\n    // Obtener usuario autenticado usando NextAuth.js\r\n    const session = await auth();\r\n\r\n    if (!session?.user?.id) {\r\n      console.error('Usuario no autenticado en GET /api/user/orders');\r\n      return NextResponse.json(\r\n        { error: 'Usuario no autenticado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Obtener par\xE1metros de consulta\r\n    const { searchParams } = new URL(request.url);\r\n    const page = parseInt(searchParams.get('page') || '1');\r\n    const limit = parseInt(searchParams.get('limit') || '10');\r\n    const status = searchParams.get('status');\r\n\r\n    console.log(`[API] Obteniendo \xF3rdenes para usuario: ${session.user.id}`);\r\n\r\n    // Construir query base usando directamente el ID del usuario de NextAuth.js\r\n    let query = supabaseAdmin\r\n      .from('orders')\r\n      .select(`\r\n        *,\r\n        order_items (\r\n          id,\r\n          quantity,\r\n          price,\r\n          products (\r\n            id,\r\n            name,\r\n            images\r\n          )\r\n        )\r\n      `)\r\n      .eq('user_id', session.user.id);\r\n\r\n    // Filtrar por status si se especifica\r\n    if (status && status !== 'all') {\r\n      query = query.eq('status', status);\r\n    }\r\n\r\n    // Aplicar paginaci\xF3n y ordenamiento\r\n    const from = (page - 1) * limit;\r\n    const to = from + limit - 1;\r\n\r\n    const { data: orders, error, count } = await query\r\n      .order('created_at', { ascending: false })\r\n      .range(from, to);\r\n\r\n    if (error) {\r\n      console.error('Error al obtener \xF3rdenes:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al obtener \xF3rdenes' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Calcular estad\xEDsticas\r\n    const { data: stats } = await supabaseAdmin\r\n      .from('orders')\r\n      .select('status, total')\r\n      .eq('user_id', session.user.id);\r\n\r\n    const statistics = {\r\n      total_orders: stats?.length || 0,\r\n      total_spent: stats?.reduce((sum, order) => sum + parseFloat(order.total), 0) || 0,\r\n      pending_orders: stats?.filter(order => order.status === 'pending').length || 0,\r\n      completed_orders: stats?.filter(order => order.status === 'delivered').length || 0,\r\n    };\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: orders || [],\r\n      pagination: {\r\n        page,\r\n        limit,\r\n        total: count || 0,\r\n        pages: Math.ceil((count || 0) / limit),\r\n      },\r\n      statistics,\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en GET /api/user/orders:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "runtime", "request", "supabaseAdmin", "console", "error", "NextResponse", "json", "status", "session", "auth", "user", "id", "searchParams", "URL", "url", "page", "parseInt", "get", "limit", "log", "query", "from", "select", "eq", "to", "data", "orders", "count", "order", "ascending", "range", "stats", "statistics", "total_orders", "length", "total_spent", "reduce", "sum", "parseFloat", "total", "pending_orders", "filter", "completed_orders", "success", "pagination", "pages", "Math", "ceil"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "604f51dc31a9b42b4e3d500a758e5cfe9ed801ce"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2nt1x6jlt9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2nt1x6jlt9();
cov_2nt1x6jlt9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2nt1x6jlt9().f[0]++;
  cov_2nt1x6jlt9().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2nt1x6jlt9().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2nt1x6jlt9().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_2nt1x6jlt9().f[1]++;
    cov_2nt1x6jlt9().s[4]++;
    return GET;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_2nt1x6jlt9().f[2]++;
    cov_2nt1x6jlt9().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_2nt1x6jlt9().s[6]++, require("next/server"));
const _supabase =
/* istanbul ignore next */
(cov_2nt1x6jlt9().s[7]++, require("../../../../lib/integrations/supabase"));
const _config =
/* istanbul ignore next */
(cov_2nt1x6jlt9().s[8]++, require("../../../../lib/auth/config"));
const runtime =
/* istanbul ignore next */
(cov_2nt1x6jlt9().s[9]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_2nt1x6jlt9().f[3]++;
  cov_2nt1x6jlt9().s[10]++;
  try {
    /* istanbul ignore next */
    cov_2nt1x6jlt9().s[11]++;
    // Verificar que el cliente administrativo estÃ© disponible
    if (!_supabase.supabaseAdmin) {
      /* istanbul ignore next */
      cov_2nt1x6jlt9().b[0][0]++;
      cov_2nt1x6jlt9().s[12]++;
      console.error('Cliente administrativo de Supabase no disponible en GET /api/user/orders');
      /* istanbul ignore next */
      cov_2nt1x6jlt9().s[13]++;
      return _server.NextResponse.json({
        error: 'Servicio de base de datos no disponible'
      }, {
        status: 503
      });
    } else
    /* istanbul ignore next */
    {
      cov_2nt1x6jlt9().b[0][1]++;
    }
    // Obtener usuario autenticado usando NextAuth.js
    const session =
    /* istanbul ignore next */
    (cov_2nt1x6jlt9().s[14]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_2nt1x6jlt9().s[15]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_2nt1x6jlt9().b[1][0]++;
      cov_2nt1x6jlt9().s[16]++;
      console.error('Usuario no autenticado en GET /api/user/orders');
      /* istanbul ignore next */
      cov_2nt1x6jlt9().s[17]++;
      return _server.NextResponse.json({
        error: 'Usuario no autenticado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2nt1x6jlt9().b[1][1]++;
    }
    // Obtener parÃ¡metros de consulta
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_2nt1x6jlt9().s[18]++, new URL(request.url));
    const page =
    /* istanbul ignore next */
    (cov_2nt1x6jlt9().s[19]++, parseInt(
    /* istanbul ignore next */
    (cov_2nt1x6jlt9().b[2][0]++, searchParams.get('page')) ||
    /* istanbul ignore next */
    (cov_2nt1x6jlt9().b[2][1]++, '1')));
    const limit =
    /* istanbul ignore next */
    (cov_2nt1x6jlt9().s[20]++, parseInt(
    /* istanbul ignore next */
    (cov_2nt1x6jlt9().b[3][0]++, searchParams.get('limit')) ||
    /* istanbul ignore next */
    (cov_2nt1x6jlt9().b[3][1]++, '10')));
    const status =
    /* istanbul ignore next */
    (cov_2nt1x6jlt9().s[21]++, searchParams.get('status'));
    /* istanbul ignore next */
    cov_2nt1x6jlt9().s[22]++;
    console.log(`[API] Obteniendo Ã³rdenes para usuario: ${session.user.id}`);
    // Construir query base usando directamente el ID del usuario de NextAuth.js
    let query =
    /* istanbul ignore next */
    (cov_2nt1x6jlt9().s[23]++, _supabase.supabaseAdmin.from('orders').select(`
        *,
        order_items (
          id,
          quantity,
          price,
          products (
            id,
            name,
            images
          )
        )
      `).eq('user_id', session.user.id));
    // Filtrar por status si se especifica
    /* istanbul ignore next */
    cov_2nt1x6jlt9().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_2nt1x6jlt9().b[5][0]++, status) &&
    /* istanbul ignore next */
    (cov_2nt1x6jlt9().b[5][1]++, status !== 'all')) {
      /* istanbul ignore next */
      cov_2nt1x6jlt9().b[4][0]++;
      cov_2nt1x6jlt9().s[25]++;
      query = query.eq('status', status);
    } else
    /* istanbul ignore next */
    {
      cov_2nt1x6jlt9().b[4][1]++;
    }
    // Aplicar paginaciÃ³n y ordenamiento
    const from =
    /* istanbul ignore next */
    (cov_2nt1x6jlt9().s[26]++, (page - 1) * limit);
    const to =
    /* istanbul ignore next */
    (cov_2nt1x6jlt9().s[27]++, from + limit - 1);
    const {
      data: orders,
      error,
      count
    } =
    /* istanbul ignore next */
    (cov_2nt1x6jlt9().s[28]++, await query.order('created_at', {
      ascending: false
    }).range(from, to));
    /* istanbul ignore next */
    cov_2nt1x6jlt9().s[29]++;
    if (error) {
      /* istanbul ignore next */
      cov_2nt1x6jlt9().b[6][0]++;
      cov_2nt1x6jlt9().s[30]++;
      console.error('Error al obtener Ã³rdenes:', error);
      /* istanbul ignore next */
      cov_2nt1x6jlt9().s[31]++;
      return _server.NextResponse.json({
        error: 'Error al obtener Ã³rdenes'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2nt1x6jlt9().b[6][1]++;
    }
    // Calcular estadÃ­sticas
    const {
      data: stats
    } =
    /* istanbul ignore next */
    (cov_2nt1x6jlt9().s[32]++, await _supabase.supabaseAdmin.from('orders').select('status, total').eq('user_id', session.user.id));
    const statistics =
    /* istanbul ignore next */
    (cov_2nt1x6jlt9().s[33]++, {
      total_orders:
      /* istanbul ignore next */
      (cov_2nt1x6jlt9().b[7][0]++, stats?.length) ||
      /* istanbul ignore next */
      (cov_2nt1x6jlt9().b[7][1]++, 0),
      total_spent:
      /* istanbul ignore next */
      (cov_2nt1x6jlt9().b[8][0]++, stats?.reduce((sum, order) => {
        /* istanbul ignore next */
        cov_2nt1x6jlt9().f[4]++;
        cov_2nt1x6jlt9().s[34]++;
        return sum + parseFloat(order.total);
      }, 0)) ||
      /* istanbul ignore next */
      (cov_2nt1x6jlt9().b[8][1]++, 0),
      pending_orders:
      /* istanbul ignore next */
      (cov_2nt1x6jlt9().b[9][0]++, stats?.filter(order => {
        /* istanbul ignore next */
        cov_2nt1x6jlt9().f[5]++;
        cov_2nt1x6jlt9().s[35]++;
        return order.status === 'pending';
      }).length) ||
      /* istanbul ignore next */
      (cov_2nt1x6jlt9().b[9][1]++, 0),
      completed_orders:
      /* istanbul ignore next */
      (cov_2nt1x6jlt9().b[10][0]++, stats?.filter(order => {
        /* istanbul ignore next */
        cov_2nt1x6jlt9().f[6]++;
        cov_2nt1x6jlt9().s[36]++;
        return order.status === 'delivered';
      }).length) ||
      /* istanbul ignore next */
      (cov_2nt1x6jlt9().b[10][1]++, 0)
    });
    /* istanbul ignore next */
    cov_2nt1x6jlt9().s[37]++;
    return _server.NextResponse.json({
      success: true,
      data:
      /* istanbul ignore next */
      (cov_2nt1x6jlt9().b[11][0]++, orders) ||
      /* istanbul ignore next */
      (cov_2nt1x6jlt9().b[11][1]++, []),
      pagination: {
        page,
        limit,
        total:
        /* istanbul ignore next */
        (cov_2nt1x6jlt9().b[12][0]++, count) ||
        /* istanbul ignore next */
        (cov_2nt1x6jlt9().b[12][1]++, 0),
        pages: Math.ceil((
        /* istanbul ignore next */
        (cov_2nt1x6jlt9().b[13][0]++, count) ||
        /* istanbul ignore next */
        (cov_2nt1x6jlt9().b[13][1]++, 0)) / limit)
      },
      statistics
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2nt1x6jlt9().s[38]++;
    console.error('Error en GET /api/user/orders:', error);
    /* istanbul ignore next */
    cov_2nt1x6jlt9().s[39]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,