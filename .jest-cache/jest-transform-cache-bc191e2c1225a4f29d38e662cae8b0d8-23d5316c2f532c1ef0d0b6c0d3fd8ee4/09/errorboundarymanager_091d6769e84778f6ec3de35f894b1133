9aba2239c528b07779d51c3aa248eb4a
// ===================================
// ERROR BOUNDARY MANAGER
// ===================================
// Sistema centralizado de gestiÃ³n de Error Boundaries
"use strict";

/* istanbul ignore next */
function cov_x131n6mo2() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\error-boundary\\error-boundary-manager.ts";
  var hash = "0ca02dda187bf73a8e15c3f8e3427dd330bedc3a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\error-boundary\\error-boundary-manager.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "2": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "3": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "5": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 36
        }
      },
      "6": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 32
        }
      },
      "7": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 34
        }
      },
      "8": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 33
        }
      },
      "9": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 28
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 40
        }
      },
      "11": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 40
        }
      },
      "12": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "13": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 71
        }
      },
      "14": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 45
        }
      },
      "15": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 54,
          column: 11
        }
      },
      "16": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 64,
          column: 11
        }
      },
      "17": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 74,
          column: 11
        }
      },
      "18": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 72
        }
      },
      "19": {
        start: {
          line: 80,
          column: 30
        },
        end: {
          line: 80,
          column: 51
        }
      },
      "20": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 84,
          column: 11
        }
      },
      "21": {
        start: {
          line: 90,
          column: 29
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "22": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 55
        }
      },
      "23": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 58
        }
      },
      "24": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 43
        }
      },
      "25": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "26": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 73
        }
      },
      "27": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 80
        }
      },
      "28": {
        start: {
          line: 113,
          column: 22
        },
        end: {
          line: 113,
          column: 46
        }
      },
      "29": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "30": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 34
        }
      },
      "31": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 82
        }
      },
      "32": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 44
        }
      },
      "33": {
        start: {
          line: 124,
          column: 24
        },
        end: {
          line: 124,
          column: 51
        }
      },
      "34": {
        start: {
          line: 125,
          column: 22
        },
        end: {
          line: 125,
          column: 54
        }
      },
      "35": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "36": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 36
        }
      },
      "37": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "38": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 34
        }
      },
      "39": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "40": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 32
        }
      },
      "41": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "42": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 31
        }
      },
      "43": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "44": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 36
        }
      },
      "45": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "46": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 33
        }
      },
      "47": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 30
        }
      },
      "48": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "49": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 30
        }
      },
      "50": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "51": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 26
        }
      },
      "52": {
        start: {
          line: 160,
          column: 26
        },
        end: {
          line: 160,
          column: 51
        }
      },
      "53": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 170,
          column: 9
        }
      },
      "54": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 163,
          column: 30
        }
      },
      "55": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 165,
          column: 32
        }
      },
      "56": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 167,
          column: 64
        }
      },
      "57": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 169,
          column: 29
        }
      },
      "58": {
        start: {
          line: 173,
          column: 27
        },
        end: {
          line: 173,
          column: 55
        }
      },
      "59": {
        start: {
          line: 174,
          column: 25
        },
        end: {
          line: 174,
          column: 54
        }
      },
      "60": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 191,
          column: 9
        }
      },
      "61": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 33
        }
      },
      "62": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 49
        }
      },
      "63": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 180,
          column: 13
        }
      },
      "64": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 179,
          column: 60
        }
      },
      "65": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 190,
          column: 15
        }
      },
      "66": {
        start: {
          line: 194,
          column: 26
        },
        end: {
          line: 194,
          column: 51
        }
      },
      "67": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 206,
          column: 9
        }
      },
      "68": {
        start: {
          line: 197,
          column: 16
        },
        end: {
          line: 197,
          column: 89
        }
      },
      "69": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 199,
          column: 74
        }
      },
      "70": {
        start: {
          line: 201,
          column: 16
        },
        end: {
          line: 201,
          column: 78
        }
      },
      "71": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 203,
          column: 73
        }
      },
      "72": {
        start: {
          line: 205,
          column: 16
        },
        end: {
          line: 205,
          column: 33
        }
      },
      "73": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 215,
          column: 9
        }
      },
      "74": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 24
        }
      },
      "75": {
        start: {
          line: 217,
          column: 24
        },
        end: {
          line: 217,
          column: 112
        }
      },
      "76": {
        start: {
          line: 217,
          column: 69
        },
        end: {
          line: 217,
          column: 111
        }
      },
      "77": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "78": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 24
        }
      },
      "79": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 221,
          column: 21
        }
      },
      "80": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 257,
          column: 9
        }
      },
      "81": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 236,
          column: 13
        }
      },
      "82": {
        start: {
          line: 227,
          column: 45
        },
        end: {
          line: 227,
          column: 75
        }
      },
      "83": {
        start: {
          line: 228,
          column: 16
        },
        end: {
          line: 235,
          column: 17
        }
      },
      "84": {
        start: {
          line: 229,
          column: 20
        },
        end: {
          line: 234,
          column: 23
        }
      },
      "85": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 254,
          column: 15
        }
      },
      "86": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 82
        }
      },
      "87": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "88": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 19
        }
      },
      "89": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 269,
          column: 11
        }
      },
      "90": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 75
        }
      },
      "91": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 273,
          column: 11
        }
      },
      "92": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 80
        }
      },
      "93": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 279,
          column: 17
        }
      },
      "94": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 278,
          column: 13
        }
      },
      "95": {
        start: {
          line: 277,
          column: 16
        },
        end: {
          line: 277,
          column: 48
        }
      },
      "96": {
        start: {
          line: 282,
          column: 24
        },
        end: {
          line: 282,
          column: 89
        }
      },
      "97": {
        start: {
          line: 283,
          column: 29
        },
        end: {
          line: 292,
          column: 9
        }
      },
      "98": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 293,
          column: 47
        }
      },
      "99": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 43
        }
      },
      "100": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 59
        }
      },
      "101": {
        start: {
          line: 298,
          column: 23
        },
        end: {
          line: 298,
          column: 35
        }
      },
      "102": {
        start: {
          line: 299,
          column: 29
        },
        end: {
          line: 299,
          column: 71
        }
      },
      "103": {
        start: {
          line: 300,
          column: 20
        },
        end: {
          line: 300,
          column: 58
        }
      },
      "104": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 301,
          column: 74
        }
      },
      "105": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 307,
          column: 9
        }
      },
      "106": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 306,
          column: 21
        }
      },
      "107": {
        start: {
          line: 305,
          column: 16
        },
        end: {
          line: 305,
          column: 41
        }
      },
      "108": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 313,
          column: 38
        }
      },
      "109": {
        start: {
          line: 316,
          column: 22
        },
        end: {
          line: 316,
          column: 54
        }
      },
      "110": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 319,
          column: 9
        }
      },
      "111": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 318,
          column: 44
        }
      },
      "112": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 328,
          column: 11
        }
      },
      "113": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 327,
          column: 13
        }
      },
      "114": {
        start: {
          line: 324,
          column: 16
        },
        end: {
          line: 324,
          column: 32
        }
      },
      "115": {
        start: {
          line: 326,
          column: 16
        },
        end: {
          line: 326,
          column: 75
        }
      },
      "116": {
        start: {
          line: 334,
          column: 23
        },
        end: {
          line: 334,
          column: 55
        }
      },
      "117": {
        start: {
          line: 335,
          column: 25
        },
        end: {
          line: 335,
          column: 59
        }
      },
      "118": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 343,
          column: 10
        }
      },
      "119": {
        start: {
          line: 341,
          column: 44
        },
        end: {
          line: 341,
          column: 69
        }
      },
      "120": {
        start: {
          line: 342,
          column: 46
        },
        end: {
          line: 342,
          column: 71
        }
      },
      "121": {
        start: {
          line: 346,
          column: 8
        },
        end: {
          line: 350,
          column: 15
        }
      },
      "122": {
        start: {
          line: 347,
          column: 26
        },
        end: {
          line: 347,
          column: 43
        }
      },
      "123": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 348,
          column: 47
        }
      },
      "124": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 349,
          column: 23
        }
      },
      "125": {
        start: {
          line: 353,
          column: 23
        },
        end: {
          line: 353,
          column: 42
        }
      },
      "126": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 358,
          column: 9
        }
      },
      "127": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 357,
          column: 13
        }
      },
      "128": {
        start: {
          line: 356,
          column: 16
        },
        end: {
          line: 356,
          column: 44
        }
      },
      "129": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 363,
          column: 9
        }
      },
      "130": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 362,
          column: 13
        }
      },
      "131": {
        start: {
          line: 361,
          column: 16
        },
        end: {
          line: 361,
          column: 49
        }
      },
      "132": {
        start: {
          line: 369,
          column: 23
        },
        end: {
          line: 369,
          column: 55
        }
      },
      "133": {
        start: {
          line: 370,
          column: 29
        },
        end: {
          line: 370,
          column: 81
        }
      },
      "134": {
        start: {
          line: 370,
          column: 48
        },
        end: {
          line: 370,
          column: 80
        }
      },
      "135": {
        start: {
          line: 371,
          column: 31
        },
        end: {
          line: 371,
          column: 85
        }
      },
      "136": {
        start: {
          line: 371,
          column: 50
        },
        end: {
          line: 371,
          column: 77
        }
      },
      "137": {
        start: {
          line: 372,
          column: 26
        },
        end: {
          line: 372,
          column: 45
        }
      },
      "138": {
        start: {
          line: 373,
          column: 21
        },
        end: {
          line: 373,
          column: 30
        }
      },
      "139": {
        start: {
          line: 374,
          column: 32
        },
        end: {
          line: 374,
          column: 34
        }
      },
      "140": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 381,
          column: 9
        }
      },
      "141": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 376,
          column: 32
        }
      },
      "142": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 77
        }
      },
      "143": {
        start: {
          line: 378,
          column: 15
        },
        end: {
          line: 381,
          column: 9
        }
      },
      "144": {
        start: {
          line: 379,
          column: 12
        },
        end: {
          line: 379,
          column: 32
        }
      },
      "145": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 380,
          column: 67
        }
      },
      "146": {
        start: {
          line: 383,
          column: 33
        },
        end: {
          line: 383,
          column: 97
        }
      },
      "147": {
        start: {
          line: 383,
          column: 80
        },
        end: {
          line: 383,
          column: 96
        }
      },
      "148": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 389,
          column: 9
        }
      },
      "149": {
        start: {
          line: 385,
          column: 12
        },
        end: {
          line: 385,
          column: 75
        }
      },
      "150": {
        start: {
          line: 386,
          column: 12
        },
        end: {
          line: 388,
          column: 13
        }
      },
      "151": {
        start: {
          line: 387,
          column: 16
        },
        end: {
          line: 387,
          column: 36
        }
      },
      "152": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 395,
          column: 10
        }
      },
      "153": {
        start: {
          line: 398,
          column: 29
        },
        end: {
          line: 398,
          column: 63
        }
      },
      "154": {
        start: {
          line: 399,
          column: 17
        },
        end: {
          line: 399,
          column: 37
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 16
          }
        },
        loc: {
          start: {
            line: 9,
            column: 30
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 32
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 17
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 27
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 25
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 35
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 31
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 44
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 21
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 76
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        loc: {
          start: {
            line: 79,
            column: 32
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 79
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        loc: {
          start: {
            line: 89,
            column: 43
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 89
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        loc: {
          start: {
            line: 112,
            column: 47
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 112
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        loc: {
          start: {
            line: 123,
            column: 25
          },
          end: {
            line: 149,
            column: 5
          }
        },
        line: 123
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        },
        loc: {
          start: {
            line: 150,
            column: 35
          },
          end: {
            line: 171,
            column: 5
          }
        },
        line: 150
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        },
        loc: {
          start: {
            line: 172,
            column: 41
          },
          end: {
            line: 192,
            column: 5
          }
        },
        line: 172
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        loc: {
          start: {
            line: 193,
            column: 27
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 193
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        loc: {
          start: {
            line: 211,
            column: 41
          },
          end: {
            line: 222,
            column: 5
          }
        },
        line: 211
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 217,
            column: 64
          },
          end: {
            line: 217,
            column: 65
          }
        },
        loc: {
          start: {
            line: 217,
            column: 69
          },
          end: {
            line: 217,
            column: 111
          }
        },
        line: 217
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        },
        loc: {
          start: {
            line: 223,
            column: 66
          },
          end: {
            line: 258,
            column: 5
          }
        },
        line: 223
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 262,
            column: 4
          },
          end: {
            line: 262,
            column: 5
          }
        },
        loc: {
          start: {
            line: 262,
            column: 31
          },
          end: {
            line: 280,
            column: 5
          }
        },
        line: 262
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 267,
            column: 41
          },
          end: {
            line: 267,
            column: 42
          }
        },
        loc: {
          start: {
            line: 267,
            column: 50
          },
          end: {
            line: 269,
            column: 9
          }
        },
        line: 267
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 271,
            column: 54
          },
          end: {
            line: 271,
            column: 55
          }
        },
        loc: {
          start: {
            line: 271,
            column: 63
          },
          end: {
            line: 273,
            column: 9
          }
        },
        line: 271
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 275,
            column: 41
          },
          end: {
            line: 275,
            column: 42
          }
        },
        loc: {
          start: {
            line: 275,
            column: 50
          },
          end: {
            line: 279,
            column: 9
          }
        },
        line: 275
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 281,
            column: 4
          },
          end: {
            line: 281,
            column: 5
          }
        },
        loc: {
          start: {
            line: 281,
            column: 35
          },
          end: {
            line: 296,
            column: 5
          }
        },
        line: 281
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 297,
            column: 4
          },
          end: {
            line: 297,
            column: 5
          }
        },
        loc: {
          start: {
            line: 297,
            column: 31
          },
          end: {
            line: 308,
            column: 5
          }
        },
        line: 297
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 304,
            column: 23
          },
          end: {
            line: 304,
            column: 24
          }
        },
        loc: {
          start: {
            line: 304,
            column: 27
          },
          end: {
            line: 306,
            column: 13
          }
        },
        line: 304
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 312,
            column: 4
          },
          end: {
            line: 312,
            column: 5
          }
        },
        loc: {
          start: {
            line: 312,
            column: 31
          },
          end: {
            line: 314,
            column: 5
          }
        },
        line: 312
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 315,
            column: 4
          },
          end: {
            line: 315,
            column: 5
          }
        },
        loc: {
          start: {
            line: 315,
            column: 34
          },
          end: {
            line: 320,
            column: 5
          }
        },
        line: 315
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 321,
            column: 4
          },
          end: {
            line: 321,
            column: 5
          }
        },
        loc: {
          start: {
            line: 321,
            column: 27
          },
          end: {
            line: 329,
            column: 5
          }
        },
        line: 321
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 322,
            column: 31
          },
          end: {
            line: 322,
            column: 32
          }
        },
        loc: {
          start: {
            line: 322,
            column: 43
          },
          end: {
            line: 328,
            column: 9
          }
        },
        line: 322
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 333,
            column: 4
          },
          end: {
            line: 333,
            column: 5
          }
        },
        loc: {
          start: {
            line: 333,
            column: 22
          },
          end: {
            line: 344,
            column: 5
          }
        },
        line: 333
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 341,
            column: 36
          },
          end: {
            line: 341,
            column: 37
          }
        },
        loc: {
          start: {
            line: 341,
            column: 44
          },
          end: {
            line: 341,
            column: 69
          }
        },
        line: 341
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 342,
            column: 38
          },
          end: {
            line: 342,
            column: 39
          }
        },
        loc: {
          start: {
            line: 342,
            column: 46
          },
          end: {
            line: 342,
            column: 71
          }
        },
        line: 342
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 345,
            column: 4
          },
          end: {
            line: 345,
            column: 5
          }
        },
        loc: {
          start: {
            line: 345,
            column: 24
          },
          end: {
            line: 351,
            column: 5
          }
        },
        line: 345
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 346,
            column: 28
          },
          end: {
            line: 346,
            column: 29
          }
        },
        loc: {
          start: {
            line: 346,
            column: 41
          },
          end: {
            line: 350,
            column: 9
          }
        },
        line: 346
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 352,
            column: 4
          },
          end: {
            line: 352,
            column: 5
          }
        },
        loc: {
          start: {
            line: 352,
            column: 49
          },
          end: {
            line: 364,
            column: 5
          }
        },
        line: 352
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 368,
            column: 4
          },
          end: {
            line: 368,
            column: 5
          }
        },
        loc: {
          start: {
            line: 368,
            column: 22
          },
          end: {
            line: 396,
            column: 5
          }
        },
        line: 368
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 370,
            column: 43
          },
          end: {
            line: 370,
            column: 44
          }
        },
        loc: {
          start: {
            line: 370,
            column: 48
          },
          end: {
            line: 370,
            column: 80
          }
        },
        line: 370
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 371,
            column: 45
          },
          end: {
            line: 371,
            column: 46
          }
        },
        loc: {
          start: {
            line: 371,
            column: 50
          },
          end: {
            line: 371,
            column: 77
          }
        },
        line: 371
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 383,
            column: 75
          },
          end: {
            line: 383,
            column: 76
          }
        },
        loc: {
          start: {
            line: 383,
            column: 80
          },
          end: {
            line: 383,
            column: 96
          }
        },
        line: 383
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "1": {
        loc: {
          start: {
            line: 77,
            column: 15
          },
          end: {
            line: 77,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 15
          },
          end: {
            line: 77,
            column: 38
          }
        }, {
          start: {
            line: 77,
            column: 42
          },
          end: {
            line: 77,
            column: 71
          }
        }],
        line: 77
      },
      "2": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "3": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "4": {
        loc: {
          start: {
            line: 116,
            column: 35
          },
          end: {
            line: 116,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 35
          },
          end: {
            line: 116,
            column: 49
          }
        }, {
          start: {
            line: 116,
            column: 53
          },
          end: {
            line: 116,
            column: 81
          }
        }],
        line: 116
      },
      "5": {
        loc: {
          start: {
            line: 125,
            column: 22
          },
          end: {
            line: 125,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 22
          },
          end: {
            line: 125,
            column: 48
          }
        }, {
          start: {
            line: 125,
            column: 52
          },
          end: {
            line: 125,
            column: 54
          }
        }],
        line: 125
      },
      "6": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "7": {
        loc: {
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 127,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 127,
            column: 45
          }
        }, {
          start: {
            line: 127,
            column: 49
          },
          end: {
            line: 127,
            column: 86
          }
        }],
        line: 127
      },
      "8": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "9": {
        loc: {
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 131,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 131,
            column: 39
          }
        }, {
          start: {
            line: 131,
            column: 43
          },
          end: {
            line: 131,
            column: 68
          }
        }, {
          start: {
            line: 131,
            column: 72
          },
          end: {
            line: 131,
            column: 99
          }
        }],
        line: 131
      },
      "10": {
        loc: {
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "11": {
        loc: {
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 135,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 135,
            column: 35
          }
        }, {
          start: {
            line: 135,
            column: 39
          },
          end: {
            line: 135,
            column: 65
          }
        }],
        line: 135
      },
      "12": {
        loc: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "13": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "14": {
        loc: {
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "15": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "16": {
        loc: {
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 158,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 158,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "17": {
        loc: {
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 162,
            column: 12
          },
          end: {
            line: 163,
            column: 30
          }
        }, {
          start: {
            line: 164,
            column: 12
          },
          end: {
            line: 165,
            column: 32
          }
        }, {
          start: {
            line: 166,
            column: 12
          },
          end: {
            line: 167,
            column: 64
          }
        }, {
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 169,
            column: 29
          }
        }],
        line: 161
      },
      "18": {
        loc: {
          start: {
            line: 167,
            column: 23
          },
          end: {
            line: 167,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 167,
            column: 47
          },
          end: {
            line: 167,
            column: 52
          }
        }, {
          start: {
            line: 167,
            column: 55
          },
          end: {
            line: 167,
            column: 63
          }
        }],
        line: 167
      },
      "19": {
        loc: {
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        }, {
          start: {
            line: 181,
            column: 15
          },
          end: {
            line: 191,
            column: 9
          }
        }],
        line: 175
      },
      "20": {
        loc: {
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "21": {
        loc: {
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 197,
            column: 89
          }
        }, {
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 199,
            column: 74
          }
        }, {
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 201,
            column: 78
          }
        }, {
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 203,
            column: 73
          }
        }, {
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 205,
            column: 33
          }
        }],
        line: 195
      },
      "22": {
        loc: {
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "23": {
        loc: {
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 213,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 213,
            column: 50
          }
        }, {
          start: {
            line: 213,
            column: 54
          },
          end: {
            line: 213,
            column: 88
          }
        }],
        line: 213
      },
      "24": {
        loc: {
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "25": {
        loc: {
          start: {
            line: 218,
            column: 12
          },
          end: {
            line: 218,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 218,
            column: 12
          },
          end: {
            line: 218,
            column: 19
          }
        }, {
          start: {
            line: 218,
            column: 23
          },
          end: {
            line: 218,
            column: 45
          }
        }],
        line: 218
      },
      "26": {
        loc: {
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 236,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 236,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "27": {
        loc: {
          start: {
            line: 228,
            column: 16
          },
          end: {
            line: 235,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 16
          },
          end: {
            line: 235,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "28": {
        loc: {
          start: {
            line: 263,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 263,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 263
      },
      "29": {
        loc: {
          start: {
            line: 276,
            column: 12
          },
          end: {
            line: 278,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 12
          },
          end: {
            line: 278,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 276
      },
      "30": {
        loc: {
          start: {
            line: 299,
            column: 29
          },
          end: {
            line: 299,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 299,
            column: 29
          },
          end: {
            line: 299,
            column: 58
          }
        }, {
          start: {
            line: 299,
            column: 62
          },
          end: {
            line: 299,
            column: 71
          }
        }],
        line: 299
      },
      "31": {
        loc: {
          start: {
            line: 300,
            column: 20
          },
          end: {
            line: 300,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 300,
            column: 20
          },
          end: {
            line: 300,
            column: 30
          }
        }, {
          start: {
            line: 300,
            column: 34
          },
          end: {
            line: 300,
            column: 45
          }
        }, {
          start: {
            line: 300,
            column: 49
          },
          end: {
            line: 300,
            column: 58
          }
        }],
        line: 300
      },
      "32": {
        loc: {
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 307,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 307,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "33": {
        loc: {
          start: {
            line: 303,
            column: 12
          },
          end: {
            line: 303,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 303,
            column: 12
          },
          end: {
            line: 303,
            column: 37
          }
        }, {
          start: {
            line: 303,
            column: 41
          },
          end: {
            line: 303,
            column: 62
          }
        }],
        line: 303
      },
      "34": {
        loc: {
          start: {
            line: 317,
            column: 8
          },
          end: {
            line: 319,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 8
          },
          end: {
            line: 319,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "35": {
        loc: {
          start: {
            line: 348,
            column: 26
          },
          end: {
            line: 348,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 348,
            column: 26
          },
          end: {
            line: 348,
            column: 36
          }
        }, {
          start: {
            line: 348,
            column: 40
          },
          end: {
            line: 348,
            column: 41
          }
        }],
        line: 348
      },
      "36": {
        loc: {
          start: {
            line: 352,
            column: 19
          },
          end: {
            line: 352,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 352,
            column: 28
          },
          end: {
            line: 352,
            column: 47
          }
        }],
        line: 352
      },
      "37": {
        loc: {
          start: {
            line: 355,
            column: 12
          },
          end: {
            line: 357,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 355,
            column: 12
          },
          end: {
            line: 357,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 355
      },
      "38": {
        loc: {
          start: {
            line: 360,
            column: 12
          },
          end: {
            line: 362,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 360,
            column: 12
          },
          end: {
            line: 362,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 360
      },
      "39": {
        loc: {
          start: {
            line: 375,
            column: 8
          },
          end: {
            line: 381,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 375,
            column: 8
          },
          end: {
            line: 381,
            column: 9
          }
        }, {
          start: {
            line: 378,
            column: 15
          },
          end: {
            line: 381,
            column: 9
          }
        }],
        line: 375
      },
      "40": {
        loc: {
          start: {
            line: 378,
            column: 15
          },
          end: {
            line: 381,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 378,
            column: 15
          },
          end: {
            line: 381,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 378
      },
      "41": {
        loc: {
          start: {
            line: 384,
            column: 8
          },
          end: {
            line: 389,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 384,
            column: 8
          },
          end: {
            line: 389,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 384
      },
      "42": {
        loc: {
          start: {
            line: 386,
            column: 12
          },
          end: {
            line: 388,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 386,
            column: 12
          },
          end: {
            line: 388,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 386
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0, 0, 0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\error-boundary\\error-boundary-manager.ts"],
      sourcesContent: ["// ===================================\r\n// ERROR BOUNDARY MANAGER\r\n// ===================================\r\n// Sistema centralizado de gesti\xF3n de Error Boundaries\r\n\r\nimport { ErrorInfo } from 'react';\r\n\r\n// ===================================\r\n// INTERFACES Y TIPOS\r\n// ===================================\r\n\r\nexport interface ErrorBoundaryConfig {\r\n  level: 'page' | 'section' | 'component';\r\n  enableRetry: boolean;\r\n  maxRetries: number;\r\n  retryDelay: number;\r\n  enableAutoRecovery: boolean;\r\n  recoveryTimeout: number;\r\n  enableReporting: boolean;\r\n  fallbackComponent?: React.ComponentType<any>;\r\n}\r\n\r\nexport interface ErrorMetrics {\r\n  errorId: string;\r\n  timestamp: number;\r\n  errorType: string;\r\n  component: string;\r\n  level: string;\r\n  retryCount: number;\r\n  resolved: boolean;\r\n  resolutionTime?: number;\r\n  userImpact: 'low' | 'medium' | 'high' | 'critical';\r\n}\r\n\r\nexport interface ErrorPattern {\r\n  pattern: string;\r\n  frequency: number;\r\n  lastOccurrence: number;\r\n  affectedComponents: string[];\r\n  suggestedFix?: string;\r\n}\r\n\r\n// ===================================\r\n// ERROR BOUNDARY MANAGER\r\n// ===================================\r\n\r\nclass ErrorBoundaryManager {\r\n  private static instance: ErrorBoundaryManager;\r\n  private errors: Map<string, ErrorMetrics> = new Map();\r\n  private patterns: Map<string, ErrorPattern> = new Map();\r\n  private configs: Map<string, ErrorBoundaryConfig> = new Map();\r\n  private listeners: Array<(error: ErrorMetrics) => void> = [];\r\n\r\n  private constructor() {\r\n    this.initializeDefaultConfigs();\r\n    this.setupGlobalErrorHandlers();\r\n  }\r\n\r\n  static getInstance(): ErrorBoundaryManager {\r\n    if (!ErrorBoundaryManager.instance) {\r\n      ErrorBoundaryManager.instance = new ErrorBoundaryManager();\r\n    }\r\n    return ErrorBoundaryManager.instance;\r\n  }\r\n\r\n  // ===================================\r\n  // CONFIGURACI\xD3N\r\n  // ===================================\r\n\r\n  private initializeDefaultConfigs() {\r\n    // Configuraci\xF3n para p\xE1ginas\r\n    this.configs.set('page', {\r\n      level: 'page',\r\n      enableRetry: true,\r\n      maxRetries: 2,\r\n      retryDelay: 2000,\r\n      enableAutoRecovery: true,\r\n      recoveryTimeout: 5000,\r\n      enableReporting: true\r\n    });\r\n\r\n    // Configuraci\xF3n para secciones\r\n    this.configs.set('section', {\r\n      level: 'section',\r\n      enableRetry: true,\r\n      maxRetries: 3,\r\n      retryDelay: 1000,\r\n      enableAutoRecovery: true,\r\n      recoveryTimeout: 3000,\r\n      enableReporting: true\r\n    });\r\n\r\n    // Configuraci\xF3n para componentes\r\n    this.configs.set('component', {\r\n      level: 'component',\r\n      enableRetry: true,\r\n      maxRetries: 5,\r\n      retryDelay: 500,\r\n      enableAutoRecovery: true,\r\n      recoveryTimeout: 2000,\r\n      enableReporting: false // Solo reportar errores cr\xEDticos\r\n    });\r\n  }\r\n\r\n  getConfig(level: string): ErrorBoundaryConfig {\r\n    return this.configs.get(level) || this.configs.get('component')!;\r\n  }\r\n\r\n  updateConfig(level: string, config: Partial<ErrorBoundaryConfig>) {\r\n    const currentConfig = this.getConfig(level);\r\n    this.configs.set(level, { ...currentConfig, ...config });\r\n  }\r\n\r\n  // ===================================\r\n  // GESTI\xD3N DE ERRORES\r\n  // ===================================\r\n\r\n  reportError(\r\n    error: Error,\r\n    errorInfo: ErrorInfo,\r\n    context: {\r\n      errorId: string;\r\n      level: string;\r\n      component: string;\r\n      retryCount: number;\r\n    }\r\n  ) {\r\n    const errorMetrics: ErrorMetrics = {\r\n      errorId: context.errorId,\r\n      timestamp: Date.now(),\r\n      errorType: this.classifyError(error),\r\n      component: context.component,\r\n      level: context.level,\r\n      retryCount: context.retryCount,\r\n      resolved: false,\r\n      userImpact: this.assessUserImpact(context.level, error)\r\n    };\r\n\r\n    // Almacenar m\xE9tricas\r\n    this.errors.set(context.errorId, errorMetrics);\r\n\r\n    // Detectar patrones\r\n    this.detectErrorPattern(error, context.component);\r\n\r\n    // Notificar listeners\r\n    this.notifyListeners(errorMetrics);\r\n\r\n    // Reportar a sistemas externos si es necesario\r\n    if (this.shouldReportExternally(errorMetrics)) {\r\n      this.reportToExternalSystems(errorMetrics, error, errorInfo);\r\n    }\r\n\r\n    console.log('\uD83D\uDCCA Error reported to ErrorBoundaryManager:', errorMetrics);\r\n  }\r\n\r\n  markErrorResolved(errorId: string, resolutionTime?: number) {\r\n    const error = this.errors.get(errorId);\r\n    if (error) {\r\n      error.resolved = true;\r\n      error.resolutionTime = resolutionTime || Date.now() - error.timestamp;\r\n      this.errors.set(errorId, error);\r\n    }\r\n  }\r\n\r\n  // ===================================\r\n  // CLASIFICACI\xD3N Y AN\xC1LISIS\r\n  // ===================================\r\n\r\n  private classifyError(error: Error): string {\r\n    const message = error.message.toLowerCase();\r\n    const stack = error.stack?.toLowerCase() || '';\r\n\r\n    // Errores de chunk loading\r\n    if (message.includes('loading chunk') || message.includes('loading css chunk')) {\r\n      return 'ChunkLoadError';\r\n    }\r\n\r\n    // Errores de red\r\n    if (message.includes('network') || message.includes('fetch') || message.includes('timeout')) {\r\n      return 'NetworkError';\r\n    }\r\n\r\n    // Errores de React\r\n    if (stack.includes('react') || message.includes('render')) {\r\n      return 'ReactError';\r\n    }\r\n\r\n    // Errores de JavaScript\r\n    if (error.name === 'TypeError') {return 'TypeError';}\r\n    if (error.name === 'ReferenceError') {return 'ReferenceError';}\r\n    if (error.name === 'SyntaxError') {return 'SyntaxError';}\r\n\r\n    return 'UnknownError';\r\n  }\r\n\r\n  private assessUserImpact(level: string, error: Error): ErrorMetrics['userImpact'] {\r\n    // Impacto cr\xEDtico para errores de p\xE1gina\r\n    if (level === 'page') {return 'critical';}\r\n\r\n    // Impacto alto para errores de secci\xF3n\r\n    if (level === 'section') {return 'high';}\r\n\r\n    // Evaluar por tipo de error\r\n    const errorType = this.classifyError(error);\r\n    switch (errorType) {\r\n      case 'ChunkLoadError':\r\n        return 'high'; // Impide la carga de funcionalidad\r\n      case 'NetworkError':\r\n        return 'medium'; // Puede afectar datos\r\n      case 'ReactError':\r\n        return level === 'component' ? 'low' : 'medium';\r\n      default:\r\n        return 'low';\r\n    }\r\n  }\r\n\r\n  private detectErrorPattern(error: Error, component: string) {\r\n    const patternKey = `${error.name}:${component}`;\r\n    const existing = this.patterns.get(patternKey);\r\n\r\n    if (existing) {\r\n      existing.frequency++;\r\n      existing.lastOccurrence = Date.now();\r\n      if (!existing.affectedComponents.includes(component)) {\r\n        existing.affectedComponents.push(component);\r\n      }\r\n    } else {\r\n      this.patterns.set(patternKey, {\r\n        pattern: patternKey,\r\n        frequency: 1,\r\n        lastOccurrence: Date.now(),\r\n        affectedComponents: [component],\r\n        suggestedFix: this.getSuggestedFix(error)\r\n      });\r\n    }\r\n  }\r\n\r\n  private getSuggestedFix(error: Error): string | undefined {\r\n    const errorType = this.classifyError(error);\r\n    \r\n    switch (errorType) {\r\n      case 'ChunkLoadError':\r\n        return 'Consider implementing chunk retry logic or reducing bundle size';\r\n      case 'NetworkError':\r\n        return 'Implement network retry with exponential backoff';\r\n      case 'TypeError':\r\n        return 'Add null/undefined checks and proper type validation';\r\n      case 'ReactError':\r\n        return 'Review component lifecycle and state management';\r\n      default:\r\n        return undefined;\r\n    }\r\n  }\r\n\r\n  // ===================================\r\n  // REPORTE EXTERNO\r\n  // ===================================\r\n\r\n  private shouldReportExternally(errorMetrics: ErrorMetrics): boolean {\r\n    // Reportar errores cr\xEDticos y de alto impacto\r\n    if (errorMetrics.userImpact === 'critical' || errorMetrics.userImpact === 'high') {\r\n      return true;\r\n    }\r\n\r\n    // Reportar errores frecuentes\r\n    const pattern = Array.from(this.patterns.values())\r\n      .find(p => p.pattern.includes(errorMetrics.errorType));\r\n    \r\n    if (pattern && pattern.frequency >= 5) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private async reportToExternalSystems(\r\n    errorMetrics: ErrorMetrics,\r\n    error: Error,\r\n    errorInfo: ErrorInfo\r\n  ) {\r\n    try {\r\n      // Reportar al sistema de monitoreo enterprise\r\n      if (typeof window !== 'undefined') {\r\n        const enterpriseMonitoring = (window as any).__enterprise_monitoring;\r\n        if (enterpriseMonitoring) {\r\n          enterpriseMonitoring.trackError(error, {\r\n            context: 'error_boundary',\r\n            component: errorMetrics.component,\r\n            level: errorMetrics.level,\r\n            errorId: errorMetrics.errorId\r\n          });\r\n        }\r\n      }\r\n\r\n      // Reportar a API de errores\r\n      await fetch('/api/monitoring/errors', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          errorMetrics,\r\n          error: {\r\n            name: error.name,\r\n            message: error.message,\r\n            stack: error.stack\r\n          },\r\n          errorInfo: {\r\n            componentStack: errorInfo.componentStack\r\n          }\r\n        })\r\n      });\r\n\r\n    } catch (reportError) {\r\n      console.error('\u274C Failed to report to external systems:', reportError);\r\n    }\r\n  }\r\n\r\n  // ===================================\r\n  // MANEJO GLOBAL DE ERRORES\r\n  // ===================================\r\n\r\n  private setupGlobalErrorHandlers() {\r\n    if (typeof window === 'undefined') {return;}\r\n\r\n    // Manejar errores JavaScript no capturados\r\n    window.addEventListener('error', (event) => {\r\n      this.handleGlobalError(event.error, 'global_javascript_error');\r\n    });\r\n\r\n    // Manejar promesas rechazadas no capturadas\r\n    window.addEventListener('unhandledrejection', (event) => {\r\n      this.handleGlobalError(event.reason, 'unhandled_promise_rejection');\r\n    });\r\n\r\n    // Manejar errores de recursos (im\xE1genes, scripts, etc.)\r\n    window.addEventListener('error', (event) => {\r\n      if (event.target !== window) {\r\n        this.handleResourceError(event);\r\n      }\r\n    }, true);\r\n  }\r\n\r\n  private handleGlobalError(error: any, type: string) {\r\n    const errorId = `global_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n    \r\n    const errorMetrics: ErrorMetrics = {\r\n      errorId,\r\n      timestamp: Date.now(),\r\n      errorType: type,\r\n      component: 'global',\r\n      level: 'page',\r\n      retryCount: 0,\r\n      resolved: false,\r\n      userImpact: 'high'\r\n    };\r\n\r\n    this.errors.set(errorId, errorMetrics);\r\n    this.notifyListeners(errorMetrics);\r\n\r\n    console.error(`\uD83C\uDF10 Global error (${type}):`, error);\r\n  }\r\n\r\n  private handleResourceError(event: Event) {\r\n    const target = event.target as HTMLElement;\r\n    const resourceType = target.tagName?.toLowerCase() || 'unknown';\r\n    const src = (target as any).src || (target as any).href || 'unknown';\r\n\r\n    console.warn(`\uD83D\uDCE6 Resource loading error (${resourceType}):`, src);\r\n\r\n    // Intentar recargar recursos cr\xEDticos\r\n    if (resourceType === 'script' && src.includes('chunk')) {\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  // ===================================\r\n  // LISTENERS Y M\xC9TRICAS\r\n  // ===================================\r\n\r\n  addErrorListener(listener: (error: ErrorMetrics) => void) {\r\n    this.listeners.push(listener);\r\n  }\r\n\r\n  removeErrorListener(listener: (error: ErrorMetrics) => void) {\r\n    const index = this.listeners.indexOf(listener);\r\n    if (index > -1) {\r\n      this.listeners.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  private notifyListeners(error: ErrorMetrics) {\r\n    this.listeners.forEach(listener => {\r\n      try {\r\n        listener(error);\r\n      } catch (listenerError) {\r\n        console.error('\u274C Error in error listener:', listenerError);\r\n      }\r\n    });\r\n  }\r\n\r\n  // ===================================\r\n  // M\xC9TRICAS Y REPORTES\r\n  // ===================================\r\n\r\n  getErrorMetrics(): {\r\n    totalErrors: number;\r\n    errorsByType: Record<string, number>;\r\n    errorsByComponent: Record<string, number>;\r\n    errorsByImpact: Record<string, number>;\r\n    patterns: ErrorPattern[];\r\n    recentErrors: ErrorMetrics[];\r\n  } {\r\n    const errors = Array.from(this.errors.values());\r\n    const patterns = Array.from(this.patterns.values());\r\n\r\n    return {\r\n      totalErrors: errors.length,\r\n      errorsByType: this.groupBy(errors, 'errorType'),\r\n      errorsByComponent: this.groupBy(errors, 'component'),\r\n      errorsByImpact: this.groupBy(errors, 'userImpact'),\r\n      patterns: patterns.sort((a, b) => b.frequency - a.frequency),\r\n      recentErrors: errors\r\n        .sort((a, b) => b.timestamp - a.timestamp)\r\n        .slice(0, 10)\r\n    };\r\n  }\r\n\r\n  private groupBy<T>(array: T[], key: keyof T): Record<string, number> {\r\n    return array.reduce((acc, item) => {\r\n      const value = String(item[key]);\r\n      acc[value] = (acc[value] || 0) + 1;\r\n      return acc;\r\n    }, {} as Record<string, number>);\r\n  }\r\n\r\n  clearOldErrors(maxAge: number = 24 * 60 * 60 * 1000) { // 24 horas por defecto\r\n    const cutoff = Date.now() - maxAge;\r\n    \r\n    for (const [errorId, error] of this.errors.entries()) {\r\n      if (error.timestamp < cutoff) {\r\n        this.errors.delete(errorId);\r\n      }\r\n    }\r\n\r\n    for (const [patternKey, pattern] of this.patterns.entries()) {\r\n      if (pattern.lastOccurrence < cutoff) {\r\n        this.patterns.delete(patternKey);\r\n      }\r\n    }\r\n  }\r\n\r\n  // ===================================\r\n  // UTILIDADES\r\n  // ===================================\r\n\r\n  getHealthStatus(): {\r\n    status: 'healthy' | 'degraded' | 'critical';\r\n    errorRate: number;\r\n    criticalErrors: number;\r\n    recommendations: string[];\r\n  } {\r\n    const errors = Array.from(this.errors.values());\r\n    const recentErrors = errors.filter(e => e.timestamp > Date.now() - 60000); // \xDAltimos 60 segundos\r\n    const criticalErrors = errors.filter(e => e.userImpact === 'critical').length;\r\n    \r\n    const errorRate = recentErrors.length;\r\n    let status: 'healthy' | 'degraded' | 'critical' = 'healthy';\r\n    const recommendations: string[] = [];\r\n\r\n    if (criticalErrors > 0) {\r\n      status = 'critical';\r\n      recommendations.push('Resolver errores cr\xEDticos inmediatamente');\r\n    } else if (errorRate > 5) {\r\n      status = 'degraded';\r\n      recommendations.push('Alta tasa de errores detectada');\r\n    }\r\n\r\n    // Analizar patrones frecuentes\r\n    const frequentPatterns = Array.from(this.patterns.values())\r\n      .filter(p => p.frequency >= 3);\r\n    \r\n    if (frequentPatterns.length > 0) {\r\n      recommendations.push('Revisar patrones de errores frecuentes');\r\n      if (status === 'healthy') {status = 'degraded';}\r\n    }\r\n\r\n    return {\r\n      status,\r\n      errorRate,\r\n      criticalErrors,\r\n      recommendations\r\n    };\r\n  }\r\n}\r\n\r\n// ===================================\r\n// EXPORT\r\n// ===================================\r\n\r\nexport const errorBoundaryManager = ErrorBoundaryManager.getInstance();\r\nexport default ErrorBoundaryManager;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["errorBoundaryManager", "ErrorBoundaryManager", "errors", "Map", "patterns", "configs", "listeners", "initializeDefaultConfigs", "setupGlobalErrorHandlers", "getInstance", "instance", "set", "level", "enableRetry", "maxRetries", "retryDelay", "enableAutoRecovery", "recoveryTimeout", "enableReporting", "getConfig", "get", "updateConfig", "config", "currentConfig", "reportError", "error", "errorInfo", "context", "errorMetrics", "errorId", "timestamp", "Date", "now", "errorType", "classifyError", "component", "retryCount", "resolved", "userImpact", "assessUserImpact", "detectErrorPattern", "notifyListeners", "shouldReportExternally", "reportToExternalSystems", "console", "log", "markErrorResolved", "resolutionTime", "message", "toLowerCase", "stack", "includes", "name", "patternKey", "existing", "frequency", "lastOccurrence", "affectedComponents", "push", "pattern", "suggestedFix", "getSuggestedFix", "undefined", "Array", "from", "values", "find", "p", "window", "enterpriseMonitoring", "__enterprise_monitoring", "trackError", "fetch", "method", "headers", "body", "JSON", "stringify", "componentStack", "addEventListener", "event", "handleGlobalError", "reason", "target", "handleResourceError", "type", "Math", "random", "toString", "substr", "resourceType", "tagName", "src", "href", "warn", "setTimeout", "location", "reload", "addErrorListener", "listener", "removeErrorListener", "index", "indexOf", "splice", "forEach", "listenerError", "getErrorMetrics", "totalErrors", "length", "errorsByType", "groupBy", "errorsByComponent", "errorsByImpact", "sort", "a", "b", "recentErrors", "slice", "array", "key", "reduce", "acc", "item", "value", "String", "clearOldErrors", "maxAge", "cutoff", "entries", "delete", "getHealthStatus", "filter", "e", "criticalErrors", "errorRate", "status", "recommendations", "frequentPatterns"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0ca02dda187bf73a8e15c3f8e3427dd330bedc3a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_x131n6mo2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_x131n6mo2();
cov_x131n6mo2().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_x131n6mo2().f[0]++;
  cov_x131n6mo2().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_x131n6mo2().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_x131n6mo2().s[3]++;
_export(exports, {
  get default() {
    /* istanbul ignore next */
    cov_x131n6mo2().f[1]++;
    cov_x131n6mo2().s[4]++;
    return _default;
  },
  get errorBoundaryManager() {
    /* istanbul ignore next */
    cov_x131n6mo2().f[2]++;
    cov_x131n6mo2().s[5]++;
    return errorBoundaryManager;
  }
});
// ===================================
// ERROR BOUNDARY MANAGER
// ===================================
class ErrorBoundaryManager {
  constructor() {
    /* istanbul ignore next */
    cov_x131n6mo2().f[3]++;
    cov_x131n6mo2().s[6]++;
    this.errors = new Map();
    /* istanbul ignore next */
    cov_x131n6mo2().s[7]++;
    this.patterns = new Map();
    /* istanbul ignore next */
    cov_x131n6mo2().s[8]++;
    this.configs = new Map();
    /* istanbul ignore next */
    cov_x131n6mo2().s[9]++;
    this.listeners = [];
    /* istanbul ignore next */
    cov_x131n6mo2().s[10]++;
    this.initializeDefaultConfigs();
    /* istanbul ignore next */
    cov_x131n6mo2().s[11]++;
    this.setupGlobalErrorHandlers();
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_x131n6mo2().f[4]++;
    cov_x131n6mo2().s[12]++;
    if (!ErrorBoundaryManager.instance) {
      /* istanbul ignore next */
      cov_x131n6mo2().b[0][0]++;
      cov_x131n6mo2().s[13]++;
      ErrorBoundaryManager.instance = new ErrorBoundaryManager();
    } else
    /* istanbul ignore next */
    {
      cov_x131n6mo2().b[0][1]++;
    }
    cov_x131n6mo2().s[14]++;
    return ErrorBoundaryManager.instance;
  }
  // ===================================
  // CONFIGURACIÃN
  // ===================================
  initializeDefaultConfigs() {
    /* istanbul ignore next */
    cov_x131n6mo2().f[5]++;
    cov_x131n6mo2().s[15]++;
    // ConfiguraciÃ³n para pÃ¡ginas
    this.configs.set('page', {
      level: 'page',
      enableRetry: true,
      maxRetries: 2,
      retryDelay: 2000,
      enableAutoRecovery: true,
      recoveryTimeout: 5000,
      enableReporting: true
    });
    // ConfiguraciÃ³n para secciones
    /* istanbul ignore next */
    cov_x131n6mo2().s[16]++;
    this.configs.set('section', {
      level: 'section',
      enableRetry: true,
      maxRetries: 3,
      retryDelay: 1000,
      enableAutoRecovery: true,
      recoveryTimeout: 3000,
      enableReporting: true
    });
    // ConfiguraciÃ³n para componentes
    /* istanbul ignore next */
    cov_x131n6mo2().s[17]++;
    this.configs.set('component', {
      level: 'component',
      enableRetry: true,
      maxRetries: 5,
      retryDelay: 500,
      enableAutoRecovery: true,
      recoveryTimeout: 2000,
      enableReporting: false // Solo reportar errores crÃ­ticos
    });
  }
  getConfig(level) {
    /* istanbul ignore next */
    cov_x131n6mo2().f[6]++;
    cov_x131n6mo2().s[18]++;
    return /* istanbul ignore next */(cov_x131n6mo2().b[1][0]++, this.configs.get(level)) ||
    /* istanbul ignore next */
    (cov_x131n6mo2().b[1][1]++, this.configs.get('component'));
  }
  updateConfig(level, config) {
    /* istanbul ignore next */
    cov_x131n6mo2().f[7]++;
    const currentConfig =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[19]++, this.getConfig(level));
    /* istanbul ignore next */
    cov_x131n6mo2().s[20]++;
    this.configs.set(level, {
      ...currentConfig,
      ...config
    });
  }
  // ===================================
  // GESTIÃN DE ERRORES
  // ===================================
  reportError(error, errorInfo, context) {
    /* istanbul ignore next */
    cov_x131n6mo2().f[8]++;
    const errorMetrics =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[21]++, {
      errorId: context.errorId,
      timestamp: Date.now(),
      errorType: this.classifyError(error),
      component: context.component,
      level: context.level,
      retryCount: context.retryCount,
      resolved: false,
      userImpact: this.assessUserImpact(context.level, error)
    });
    // Almacenar mÃ©tricas
    /* istanbul ignore next */
    cov_x131n6mo2().s[22]++;
    this.errors.set(context.errorId, errorMetrics);
    // Detectar patrones
    /* istanbul ignore next */
    cov_x131n6mo2().s[23]++;
    this.detectErrorPattern(error, context.component);
    // Notificar listeners
    /* istanbul ignore next */
    cov_x131n6mo2().s[24]++;
    this.notifyListeners(errorMetrics);
    // Reportar a sistemas externos si es necesario
    /* istanbul ignore next */
    cov_x131n6mo2().s[25]++;
    if (this.shouldReportExternally(errorMetrics)) {
      /* istanbul ignore next */
      cov_x131n6mo2().b[2][0]++;
      cov_x131n6mo2().s[26]++;
      this.reportToExternalSystems(errorMetrics, error, errorInfo);
    } else
    /* istanbul ignore next */
    {
      cov_x131n6mo2().b[2][1]++;
    }
    cov_x131n6mo2().s[27]++;
    console.log('ğ Error reported to ErrorBoundaryManager:', errorMetrics);
  }
  markErrorResolved(errorId, resolutionTime) {
    /* istanbul ignore next */
    cov_x131n6mo2().f[9]++;
    const error =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[28]++, this.errors.get(errorId));
    /* istanbul ignore next */
    cov_x131n6mo2().s[29]++;
    if (error) {
      /* istanbul ignore next */
      cov_x131n6mo2().b[3][0]++;
      cov_x131n6mo2().s[30]++;
      error.resolved = true;
      /* istanbul ignore next */
      cov_x131n6mo2().s[31]++;
      error.resolutionTime =
      /* istanbul ignore next */
      (cov_x131n6mo2().b[4][0]++, resolutionTime) ||
      /* istanbul ignore next */
      (cov_x131n6mo2().b[4][1]++, Date.now() - error.timestamp);
      /* istanbul ignore next */
      cov_x131n6mo2().s[32]++;
      this.errors.set(errorId, error);
    } else
    /* istanbul ignore next */
    {
      cov_x131n6mo2().b[3][1]++;
    }
  }
  // ===================================
  // CLASIFICACIÃN Y ANÃLISIS
  // ===================================
  classifyError(error) {
    /* istanbul ignore next */
    cov_x131n6mo2().f[10]++;
    const message =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[33]++, error.message.toLowerCase());
    const stack =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[34]++,
    /* istanbul ignore next */
    (cov_x131n6mo2().b[5][0]++, error.stack?.toLowerCase()) ||
    /* istanbul ignore next */
    (cov_x131n6mo2().b[5][1]++, ''));
    // Errores de chunk loading
    /* istanbul ignore next */
    cov_x131n6mo2().s[35]++;
    if (
    /* istanbul ignore next */
    (cov_x131n6mo2().b[7][0]++, message.includes('loading chunk')) ||
    /* istanbul ignore next */
    (cov_x131n6mo2().b[7][1]++, message.includes('loading css chunk'))) {
      /* istanbul ignore next */
      cov_x131n6mo2().b[6][0]++;
      cov_x131n6mo2().s[36]++;
      return 'ChunkLoadError';
    } else
    /* istanbul ignore next */
    {
      cov_x131n6mo2().b[6][1]++;
    }
    // Errores de red
    cov_x131n6mo2().s[37]++;
    if (
    /* istanbul ignore next */
    (cov_x131n6mo2().b[9][0]++, message.includes('network')) ||
    /* istanbul ignore next */
    (cov_x131n6mo2().b[9][1]++, message.includes('fetch')) ||
    /* istanbul ignore next */
    (cov_x131n6mo2().b[9][2]++, message.includes('timeout'))) {
      /* istanbul ignore next */
      cov_x131n6mo2().b[8][0]++;
      cov_x131n6mo2().s[38]++;
      return 'NetworkError';
    } else
    /* istanbul ignore next */
    {
      cov_x131n6mo2().b[8][1]++;
    }
    // Errores de React
    cov_x131n6mo2().s[39]++;
    if (
    /* istanbul ignore next */
    (cov_x131n6mo2().b[11][0]++, stack.includes('react')) ||
    /* istanbul ignore next */
    (cov_x131n6mo2().b[11][1]++, message.includes('render'))) {
      /* istanbul ignore next */
      cov_x131n6mo2().b[10][0]++;
      cov_x131n6mo2().s[40]++;
      return 'ReactError';
    } else
    /* istanbul ignore next */
    {
      cov_x131n6mo2().b[10][1]++;
    }
    // Errores de JavaScript
    cov_x131n6mo2().s[41]++;
    if (error.name === 'TypeError') {
      /* istanbul ignore next */
      cov_x131n6mo2().b[12][0]++;
      cov_x131n6mo2().s[42]++;
      return 'TypeError';
    } else
    /* istanbul ignore next */
    {
      cov_x131n6mo2().b[12][1]++;
    }
    cov_x131n6mo2().s[43]++;
    if (error.name === 'ReferenceError') {
      /* istanbul ignore next */
      cov_x131n6mo2().b[13][0]++;
      cov_x131n6mo2().s[44]++;
      return 'ReferenceError';
    } else
    /* istanbul ignore next */
    {
      cov_x131n6mo2().b[13][1]++;
    }
    cov_x131n6mo2().s[45]++;
    if (error.name === 'SyntaxError') {
      /* istanbul ignore next */
      cov_x131n6mo2().b[14][0]++;
      cov_x131n6mo2().s[46]++;
      return 'SyntaxError';
    } else
    /* istanbul ignore next */
    {
      cov_x131n6mo2().b[14][1]++;
    }
    cov_x131n6mo2().s[47]++;
    return 'UnknownError';
  }
  assessUserImpact(level, error) {
    /* istanbul ignore next */
    cov_x131n6mo2().f[11]++;
    cov_x131n6mo2().s[48]++;
    // Impacto crÃ­tico para errores de pÃ¡gina
    if (level === 'page') {
      /* istanbul ignore next */
      cov_x131n6mo2().b[15][0]++;
      cov_x131n6mo2().s[49]++;
      return 'critical';
    } else
    /* istanbul ignore next */
    {
      cov_x131n6mo2().b[15][1]++;
    }
    // Impacto alto para errores de secciÃ³n
    cov_x131n6mo2().s[50]++;
    if (level === 'section') {
      /* istanbul ignore next */
      cov_x131n6mo2().b[16][0]++;
      cov_x131n6mo2().s[51]++;
      return 'high';
    } else
    /* istanbul ignore next */
    {
      cov_x131n6mo2().b[16][1]++;
    }
    // Evaluar por tipo de error
    const errorType =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[52]++, this.classifyError(error));
    /* istanbul ignore next */
    cov_x131n6mo2().s[53]++;
    switch (errorType) {
      case 'ChunkLoadError':
        /* istanbul ignore next */
        cov_x131n6mo2().b[17][0]++;
        cov_x131n6mo2().s[54]++;
        return 'high';
      // Impide la carga de funcionalidad
      case 'NetworkError':
        /* istanbul ignore next */
        cov_x131n6mo2().b[17][1]++;
        cov_x131n6mo2().s[55]++;
        return 'medium';
      // Puede afectar datos
      case 'ReactError':
        /* istanbul ignore next */
        cov_x131n6mo2().b[17][2]++;
        cov_x131n6mo2().s[56]++;
        return level === 'component' ?
        /* istanbul ignore next */
        (cov_x131n6mo2().b[18][0]++, 'low') :
        /* istanbul ignore next */
        (cov_x131n6mo2().b[18][1]++, 'medium');
      default:
        /* istanbul ignore next */
        cov_x131n6mo2().b[17][3]++;
        cov_x131n6mo2().s[57]++;
        return 'low';
    }
  }
  detectErrorPattern(error, component) {
    /* istanbul ignore next */
    cov_x131n6mo2().f[12]++;
    const patternKey =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[58]++, `${error.name}:${component}`);
    const existing =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[59]++, this.patterns.get(patternKey));
    /* istanbul ignore next */
    cov_x131n6mo2().s[60]++;
    if (existing) {
      /* istanbul ignore next */
      cov_x131n6mo2().b[19][0]++;
      cov_x131n6mo2().s[61]++;
      existing.frequency++;
      /* istanbul ignore next */
      cov_x131n6mo2().s[62]++;
      existing.lastOccurrence = Date.now();
      /* istanbul ignore next */
      cov_x131n6mo2().s[63]++;
      if (!existing.affectedComponents.includes(component)) {
        /* istanbul ignore next */
        cov_x131n6mo2().b[20][0]++;
        cov_x131n6mo2().s[64]++;
        existing.affectedComponents.push(component);
      } else
      /* istanbul ignore next */
      {
        cov_x131n6mo2().b[20][1]++;
      }
    } else {
      /* istanbul ignore next */
      cov_x131n6mo2().b[19][1]++;
      cov_x131n6mo2().s[65]++;
      this.patterns.set(patternKey, {
        pattern: patternKey,
        frequency: 1,
        lastOccurrence: Date.now(),
        affectedComponents: [component],
        suggestedFix: this.getSuggestedFix(error)
      });
    }
  }
  getSuggestedFix(error) {
    /* istanbul ignore next */
    cov_x131n6mo2().f[13]++;
    const errorType =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[66]++, this.classifyError(error));
    /* istanbul ignore next */
    cov_x131n6mo2().s[67]++;
    switch (errorType) {
      case 'ChunkLoadError':
        /* istanbul ignore next */
        cov_x131n6mo2().b[21][0]++;
        cov_x131n6mo2().s[68]++;
        return 'Consider implementing chunk retry logic or reducing bundle size';
      case 'NetworkError':
        /* istanbul ignore next */
        cov_x131n6mo2().b[21][1]++;
        cov_x131n6mo2().s[69]++;
        return 'Implement network retry with exponential backoff';
      case 'TypeError':
        /* istanbul ignore next */
        cov_x131n6mo2().b[21][2]++;
        cov_x131n6mo2().s[70]++;
        return 'Add null/undefined checks and proper type validation';
      case 'ReactError':
        /* istanbul ignore next */
        cov_x131n6mo2().b[21][3]++;
        cov_x131n6mo2().s[71]++;
        return 'Review component lifecycle and state management';
      default:
        /* istanbul ignore next */
        cov_x131n6mo2().b[21][4]++;
        cov_x131n6mo2().s[72]++;
        return undefined;
    }
  }
  // ===================================
  // REPORTE EXTERNO
  // ===================================
  shouldReportExternally(errorMetrics) {
    /* istanbul ignore next */
    cov_x131n6mo2().f[14]++;
    cov_x131n6mo2().s[73]++;
    // Reportar errores crÃ­ticos y de alto impacto
    if (
    /* istanbul ignore next */
    (cov_x131n6mo2().b[23][0]++, errorMetrics.userImpact === 'critical') ||
    /* istanbul ignore next */
    (cov_x131n6mo2().b[23][1]++, errorMetrics.userImpact === 'high')) {
      /* istanbul ignore next */
      cov_x131n6mo2().b[22][0]++;
      cov_x131n6mo2().s[74]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_x131n6mo2().b[22][1]++;
    }
    // Reportar errores frecuentes
    const pattern =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[75]++, Array.from(this.patterns.values()).find(p => {
      /* istanbul ignore next */
      cov_x131n6mo2().f[15]++;
      cov_x131n6mo2().s[76]++;
      return p.pattern.includes(errorMetrics.errorType);
    }));
    /* istanbul ignore next */
    cov_x131n6mo2().s[77]++;
    if (
    /* istanbul ignore next */
    (cov_x131n6mo2().b[25][0]++, pattern) &&
    /* istanbul ignore next */
    (cov_x131n6mo2().b[25][1]++, pattern.frequency >= 5)) {
      /* istanbul ignore next */
      cov_x131n6mo2().b[24][0]++;
      cov_x131n6mo2().s[78]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_x131n6mo2().b[24][1]++;
    }
    cov_x131n6mo2().s[79]++;
    return false;
  }
  async reportToExternalSystems(errorMetrics, error, errorInfo) {
    /* istanbul ignore next */
    cov_x131n6mo2().f[16]++;
    cov_x131n6mo2().s[80]++;
    try {
      /* istanbul ignore next */
      cov_x131n6mo2().s[81]++;
      // Reportar al sistema de monitoreo enterprise
      if (typeof window !== 'undefined') {
        /* istanbul ignore next */
        cov_x131n6mo2().b[26][0]++;
        const enterpriseMonitoring =
        /* istanbul ignore next */
        (cov_x131n6mo2().s[82]++, window.__enterprise_monitoring);
        /* istanbul ignore next */
        cov_x131n6mo2().s[83]++;
        if (enterpriseMonitoring) {
          /* istanbul ignore next */
          cov_x131n6mo2().b[27][0]++;
          cov_x131n6mo2().s[84]++;
          enterpriseMonitoring.trackError(error, {
            context: 'error_boundary',
            component: errorMetrics.component,
            level: errorMetrics.level,
            errorId: errorMetrics.errorId
          });
        } else
        /* istanbul ignore next */
        {
          cov_x131n6mo2().b[27][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_x131n6mo2().b[26][1]++;
      }
      // Reportar a API de errores
      cov_x131n6mo2().s[85]++;
      await fetch('/api/monitoring/errors', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          errorMetrics,
          error: {
            name: error.name,
            message: error.message,
            stack: error.stack
          },
          errorInfo: {
            componentStack: errorInfo.componentStack
          }
        })
      });
    } catch (reportError) {
      /* istanbul ignore next */
      cov_x131n6mo2().s[86]++;
      console.error('â Failed to report to external systems:', reportError);
    }
  }
  // ===================================
  // MANEJO GLOBAL DE ERRORES
  // ===================================
  setupGlobalErrorHandlers() {
    /* istanbul ignore next */
    cov_x131n6mo2().f[17]++;
    cov_x131n6mo2().s[87]++;
    if (typeof window === 'undefined') {
      /* istanbul ignore next */
      cov_x131n6mo2().b[28][0]++;
      cov_x131n6mo2().s[88]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_x131n6mo2().b[28][1]++;
    }
    // Manejar errores JavaScript no capturados
    cov_x131n6mo2().s[89]++;
    window.addEventListener('error', event => {
      /* istanbul ignore next */
      cov_x131n6mo2().f[18]++;
      cov_x131n6mo2().s[90]++;
      this.handleGlobalError(event.error, 'global_javascript_error');
    });
    // Manejar promesas rechazadas no capturadas
    /* istanbul ignore next */
    cov_x131n6mo2().s[91]++;
    window.addEventListener('unhandledrejection', event => {
      /* istanbul ignore next */
      cov_x131n6mo2().f[19]++;
      cov_x131n6mo2().s[92]++;
      this.handleGlobalError(event.reason, 'unhandled_promise_rejection');
    });
    // Manejar errores de recursos (imÃ¡genes, scripts, etc.)
    /* istanbul ignore next */
    cov_x131n6mo2().s[93]++;
    window.addEventListener('error', event => {
      /* istanbul ignore next */
      cov_x131n6mo2().f[20]++;
      cov_x131n6mo2().s[94]++;
      if (event.target !== window) {
        /* istanbul ignore next */
        cov_x131n6mo2().b[29][0]++;
        cov_x131n6mo2().s[95]++;
        this.handleResourceError(event);
      } else
      /* istanbul ignore next */
      {
        cov_x131n6mo2().b[29][1]++;
      }
    }, true);
  }
  handleGlobalError(error, type) {
    /* istanbul ignore next */
    cov_x131n6mo2().f[21]++;
    const errorId =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[96]++, `global_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);
    const errorMetrics =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[97]++, {
      errorId,
      timestamp: Date.now(),
      errorType: type,
      component: 'global',
      level: 'page',
      retryCount: 0,
      resolved: false,
      userImpact: 'high'
    });
    /* istanbul ignore next */
    cov_x131n6mo2().s[98]++;
    this.errors.set(errorId, errorMetrics);
    /* istanbul ignore next */
    cov_x131n6mo2().s[99]++;
    this.notifyListeners(errorMetrics);
    /* istanbul ignore next */
    cov_x131n6mo2().s[100]++;
    console.error(`ğ Global error (${type}):`, error);
  }
  handleResourceError(event) {
    /* istanbul ignore next */
    cov_x131n6mo2().f[22]++;
    const target =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[101]++, event.target);
    const resourceType =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[102]++,
    /* istanbul ignore next */
    (cov_x131n6mo2().b[30][0]++, target.tagName?.toLowerCase()) ||
    /* istanbul ignore next */
    (cov_x131n6mo2().b[30][1]++, 'unknown'));
    const src =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[103]++,
    /* istanbul ignore next */
    (cov_x131n6mo2().b[31][0]++, target.src) ||
    /* istanbul ignore next */
    (cov_x131n6mo2().b[31][1]++, target.href) ||
    /* istanbul ignore next */
    (cov_x131n6mo2().b[31][2]++, 'unknown'));
    /* istanbul ignore next */
    cov_x131n6mo2().s[104]++;
    console.warn(`ğ¦ Resource loading error (${resourceType}):`, src);
    // Intentar recargar recursos crÃ­ticos
    /* istanbul ignore next */
    cov_x131n6mo2().s[105]++;
    if (
    /* istanbul ignore next */
    (cov_x131n6mo2().b[33][0]++, resourceType === 'script') &&
    /* istanbul ignore next */
    (cov_x131n6mo2().b[33][1]++, src.includes('chunk'))) {
      /* istanbul ignore next */
      cov_x131n6mo2().b[32][0]++;
      cov_x131n6mo2().s[106]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_x131n6mo2().f[23]++;
        cov_x131n6mo2().s[107]++;
        window.location.reload();
      }, 2000);
    } else
    /* istanbul ignore next */
    {
      cov_x131n6mo2().b[32][1]++;
    }
  }
  // ===================================
  // LISTENERS Y MÃTRICAS
  // ===================================
  addErrorListener(listener) {
    /* istanbul ignore next */
    cov_x131n6mo2().f[24]++;
    cov_x131n6mo2().s[108]++;
    this.listeners.push(listener);
  }
  removeErrorListener(listener) {
    /* istanbul ignore next */
    cov_x131n6mo2().f[25]++;
    const index =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[109]++, this.listeners.indexOf(listener));
    /* istanbul ignore next */
    cov_x131n6mo2().s[110]++;
    if (index > -1) {
      /* istanbul ignore next */
      cov_x131n6mo2().b[34][0]++;
      cov_x131n6mo2().s[111]++;
      this.listeners.splice(index, 1);
    } else
    /* istanbul ignore next */
    {
      cov_x131n6mo2().b[34][1]++;
    }
  }
  notifyListeners(error) {
    /* istanbul ignore next */
    cov_x131n6mo2().f[26]++;
    cov_x131n6mo2().s[112]++;
    this.listeners.forEach(listener => {
      /* istanbul ignore next */
      cov_x131n6mo2().f[27]++;
      cov_x131n6mo2().s[113]++;
      try {
        /* istanbul ignore next */
        cov_x131n6mo2().s[114]++;
        listener(error);
      } catch (listenerError) {
        /* istanbul ignore next */
        cov_x131n6mo2().s[115]++;
        console.error('â Error in error listener:', listenerError);
      }
    });
  }
  // ===================================
  // MÃTRICAS Y REPORTES
  // ===================================
  getErrorMetrics() {
    /* istanbul ignore next */
    cov_x131n6mo2().f[28]++;
    const errors =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[116]++, Array.from(this.errors.values()));
    const patterns =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[117]++, Array.from(this.patterns.values()));
    /* istanbul ignore next */
    cov_x131n6mo2().s[118]++;
    return {
      totalErrors: errors.length,
      errorsByType: this.groupBy(errors, 'errorType'),
      errorsByComponent: this.groupBy(errors, 'component'),
      errorsByImpact: this.groupBy(errors, 'userImpact'),
      patterns: patterns.sort((a, b) => {
        /* istanbul ignore next */
        cov_x131n6mo2().f[29]++;
        cov_x131n6mo2().s[119]++;
        return b.frequency - a.frequency;
      }),
      recentErrors: errors.sort((a, b) => {
        /* istanbul ignore next */
        cov_x131n6mo2().f[30]++;
        cov_x131n6mo2().s[120]++;
        return b.timestamp - a.timestamp;
      }).slice(0, 10)
    };
  }
  groupBy(array, key) {
    /* istanbul ignore next */
    cov_x131n6mo2().f[31]++;
    cov_x131n6mo2().s[121]++;
    return array.reduce((acc, item) => {
      /* istanbul ignore next */
      cov_x131n6mo2().f[32]++;
      const value =
      /* istanbul ignore next */
      (cov_x131n6mo2().s[122]++, String(item[key]));
      /* istanbul ignore next */
      cov_x131n6mo2().s[123]++;
      acc[value] = (
      /* istanbul ignore next */
      (cov_x131n6mo2().b[35][0]++, acc[value]) ||
      /* istanbul ignore next */
      (cov_x131n6mo2().b[35][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_x131n6mo2().s[124]++;
      return acc;
    }, {});
  }
  clearOldErrors(maxAge =
  /* istanbul ignore next */
  (cov_x131n6mo2().b[36][0]++, 24 * 60 * 60 * 1000)) {
    /* istanbul ignore next */
    cov_x131n6mo2().f[33]++;
    const cutoff =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[125]++, Date.now() - maxAge);
    /* istanbul ignore next */
    cov_x131n6mo2().s[126]++;
    for (const [errorId, error] of this.errors.entries()) {
      /* istanbul ignore next */
      cov_x131n6mo2().s[127]++;
      if (error.timestamp < cutoff) {
        /* istanbul ignore next */
        cov_x131n6mo2().b[37][0]++;
        cov_x131n6mo2().s[128]++;
        this.errors.delete(errorId);
      } else
      /* istanbul ignore next */
      {
        cov_x131n6mo2().b[37][1]++;
      }
    }
    /* istanbul ignore next */
    cov_x131n6mo2().s[129]++;
    for (const [patternKey, pattern] of this.patterns.entries()) {
      /* istanbul ignore next */
      cov_x131n6mo2().s[130]++;
      if (pattern.lastOccurrence < cutoff) {
        /* istanbul ignore next */
        cov_x131n6mo2().b[38][0]++;
        cov_x131n6mo2().s[131]++;
        this.patterns.delete(patternKey);
      } else
      /* istanbul ignore next */
      {
        cov_x131n6mo2().b[38][1]++;
      }
    }
  }
  // ===================================
  // UTILIDADES
  // ===================================
  getHealthStatus() {
    /* istanbul ignore next */
    cov_x131n6mo2().f[34]++;
    const errors =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[132]++, Array.from(this.errors.values()));
    const recentErrors =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[133]++, errors.filter(e => {
      /* istanbul ignore next */
      cov_x131n6mo2().f[35]++;
      cov_x131n6mo2().s[134]++;
      return e.timestamp > Date.now() - 60000;
    })); // Ãltimos 60 segundos
    const criticalErrors =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[135]++, errors.filter(e => {
      /* istanbul ignore next */
      cov_x131n6mo2().f[36]++;
      cov_x131n6mo2().s[136]++;
      return e.userImpact === 'critical';
    }).length);
    const errorRate =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[137]++, recentErrors.length);
    let status =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[138]++, 'healthy');
    const recommendations =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[139]++, []);
    /* istanbul ignore next */
    cov_x131n6mo2().s[140]++;
    if (criticalErrors > 0) {
      /* istanbul ignore next */
      cov_x131n6mo2().b[39][0]++;
      cov_x131n6mo2().s[141]++;
      status = 'critical';
      /* istanbul ignore next */
      cov_x131n6mo2().s[142]++;
      recommendations.push('Resolver errores crÃ­ticos inmediatamente');
    } else {
      /* istanbul ignore next */
      cov_x131n6mo2().b[39][1]++;
      cov_x131n6mo2().s[143]++;
      if (errorRate > 5) {
        /* istanbul ignore next */
        cov_x131n6mo2().b[40][0]++;
        cov_x131n6mo2().s[144]++;
        status = 'degraded';
        /* istanbul ignore next */
        cov_x131n6mo2().s[145]++;
        recommendations.push('Alta tasa de errores detectada');
      } else
      /* istanbul ignore next */
      {
        cov_x131n6mo2().b[40][1]++;
      }
    }
    // Analizar patrones frecuentes
    const frequentPatterns =
    /* istanbul ignore next */
    (cov_x131n6mo2().s[146]++, Array.from(this.patterns.values()).filter(p => {
      /* istanbul ignore next */
      cov_x131n6mo2().f[37]++;
      cov_x131n6mo2().s[147]++;
      return p.frequency >= 3;
    }));
    /* istanbul ignore next */
    cov_x131n6mo2().s[148]++;
    if (frequentPatterns.length > 0) {
      /* istanbul ignore next */
      cov_x131n6mo2().b[41][0]++;
      cov_x131n6mo2().s[149]++;
      recommendations.push('Revisar patrones de errores frecuentes');
      /* istanbul ignore next */
      cov_x131n6mo2().s[150]++;
      if (status === 'healthy') {
        /* istanbul ignore next */
        cov_x131n6mo2().b[42][0]++;
        cov_x131n6mo2().s[151]++;
        status = 'degraded';
      } else
      /* istanbul ignore next */
      {
        cov_x131n6mo2().b[42][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_x131n6mo2().b[41][1]++;
    }
    cov_x131n6mo2().s[152]++;
    return {
      status,
      errorRate,
      criticalErrors,
      recommendations
    };
  }
}
const errorBoundaryManager =
/* istanbul ignore next */
(cov_x131n6mo2().s[153]++, ErrorBoundaryManager.getInstance());
const _default =
/* istanbul ignore next */
(cov_x131n6mo2().s[154]++, ErrorBoundaryManager);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,