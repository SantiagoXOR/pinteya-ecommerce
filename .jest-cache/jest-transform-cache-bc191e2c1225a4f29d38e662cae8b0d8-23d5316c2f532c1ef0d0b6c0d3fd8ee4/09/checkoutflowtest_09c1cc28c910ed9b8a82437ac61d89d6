24d46fff9a7cb4055a2c4430423d1655
"use strict";
// Mock simplificado de componentes
jest.mock('../shipping-info', ()=>({
        ShippingInfo: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "shipping-info",
                children: "Shipping Info Mock"
            })
    }));
jest.mock('../cart-summary', ()=>({
        CartSummary: ({ cartItems })=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                "data-testid": "cart-summary",
                children: [
                    "Cart Summary - ",
                    cartItems?.length || 0,
                    " items - compact"
                ]
            })
    }));
// Mock de otros componentes UI
jest.mock('../card', ()=>({
        Card: ({ children, ...props })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                ...props,
                children: children
            }),
        CardContent: ({ children, ...props })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                ...props,
                children: children
            }),
        CardHeader: ({ children, ...props })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                ...props,
                children: children
            }),
        CardTitle: ({ children, ...props })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                ...props,
                children: children
            })
    }));
jest.mock('../button', ()=>({
        Button: ({ children, onClick, disabled, ...props })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                onClick: onClick,
                disabled: disabled,
                ...props,
                children: children
            })
    }));
jest.mock('../badge', ()=>({
        Badge: ({ children, ...props })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                ...props,
                children: children
            })
    }));
jest.mock('../progress', ()=>({
        Progress: ({ value, ...props })=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                "data-testid": "progress",
                "data-value": value,
                ...props,
                children: [
                    "Progress: ",
                    value,
                    "%"
                ]
            })
    }));
// Mock de lucide-react
jest.mock('lucide-react', ()=>({
        CheckCircle: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                children: "CheckCircle"
            }),
        CreditCard: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                children: "CreditCard"
            }),
        ArrowLeft: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                children: "ArrowLeft"
            }),
        ArrowRight: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                children: "ArrowRight"
            }),
        AlertCircle: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                children: "AlertCircle"
            }),
        ShoppingCart: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                children: "ShoppingCart"
            }),
        Truck: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                children: "Truck"
            }),
        User: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                children: "User"
            }),
        Clock: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                children: "Clock"
            }),
        Shield: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                children: "Shield"
            })
    }));
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
require("@testing-library/jest-dom");
const _checkoutflow = require("../checkout-flow");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const mockCartItems = [
    {
        id: 1,
        title: 'Pintura Sherwin Williams 4L',
        price: 10000,
        discountedPrice: 8500,
        quantity: 2
    }
];
const mockCheckoutData = {
    totalPrice: 17000,
    shippingCost: 2500,
    discount: 0,
    finalTotal: 19500,
    shippingMethod: 'standard'
};
describe('CheckoutFlow', ()=>{
    const defaultProps = {
        cartItems: mockCartItems,
        checkoutData: mockCheckoutData
    };
    it('renders checkout flow with basic elements', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps
        }));
        expect(_react1.screen.getByText('Finalizar Compra')).toBeInTheDocument();
        expect(_react1.screen.getByText('Continuar')).toBeInTheDocument();
        expect(_react1.screen.getByTestId('cart-summary')).toBeInTheDocument();
    });
    it('renders without errors when no errors provided', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps
        }));
        // No debería mostrar sección de errores
        expect(_react1.screen.queryByText('Errores:')).not.toBeInTheDocument();
    });
    it('displays cart summary correctly', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps
        }));
        // Verificar que CartSummary se renderiza con los datos correctos
        expect(_react1.screen.getByTestId('cart-summary')).toBeInTheDocument();
    });
    it('renders with proper accessibility', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps
        }));
        // Verificar elementos accesibles
        expect(_react1.screen.getByText('Continuar')).toBeInTheDocument();
    });
    it('renders with custom className', ()=>{
        const customClass = 'custom-checkout-class';
        const { container } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps,
            className: customClass
        }));
        // Verificar que la clase se aplica al contenedor principal
        expect(container.firstChild).toHaveClass(customClass);
    });
    it('shows cart summary by default', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps
        }));
        expect(_react1.screen.getByTestId('cart-summary')).toBeInTheDocument();
        expect(_react1.screen.getByText('Cart Summary - 1 items - compact')).toBeInTheDocument();
    });
    it('renders with empty cart items', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps,
            cartItems: []
        }));
        expect(_react1.screen.getByTestId('cart-summary')).toBeInTheDocument();
        expect(_react1.screen.getByText('Cart Summary - 0 items - compact')).toBeInTheDocument();
    });
    it('calls onComplete when complete button is clicked', ()=>{
        const mockOnComplete = jest.fn();
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps,
            onComplete: mockOnComplete
        }));
        const completeButton = _react1.screen.getByText('Continuar');
        _react1.fireEvent.click(completeButton);
        expect(mockOnComplete).toHaveBeenCalledTimes(1);
    });
    it('disables complete button when loading', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps,
            isLoading: true
        }));
        const completeButton = _react1.screen.getByText('Procesando...');
        expect(completeButton.closest('button')).toBeDisabled();
    });
    it('shows complete button by default', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps
        }));
        expect(_react1.screen.getByText('Finalizar Compra')).toBeInTheDocument();
        expect(_react1.screen.getByText('Continuar')).toBeInTheDocument();
    });
    it('calls onComplete when finish button is clicked', ()=>{
        const mockOnComplete = jest.fn();
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps,
            onComplete: mockOnComplete
        }));
        const finishButton = _react1.screen.getByText('Continuar');
        _react1.fireEvent.click(finishButton);
        expect(mockOnComplete).toHaveBeenCalledTimes(1);
    });
    it('shows loading state', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps,
            isLoading: true
        }));
        expect(_react1.screen.getByText('Procesando...')).toBeInTheDocument();
        expect(_react1.screen.queryByText('Continuar')).not.toBeInTheDocument();
    });
    it('displays errors when provided', ()=>{
        const errors = {
            email: 'Email es requerido',
            address: 'Dirección es requerida'
        };
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps,
            errors: errors
        }));
        expect(_react1.screen.getByText('Se encontraron errores')).toBeInTheDocument();
        expect(_react1.screen.getByText('email:')).toBeInTheDocument();
        expect(_react1.screen.getByText('Email es requerido')).toBeInTheDocument();
        expect(_react1.screen.getByText('address:')).toBeInTheDocument();
        expect(_react1.screen.getByText('Dirección es requerida')).toBeInTheDocument();
    });
    it('renders with custom children content', ()=>{
        const customContent = /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            children: "Custom checkout content"
        });
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps,
            children: customContent
        }));
        expect(_react1.screen.getByText('Custom checkout content')).toBeInTheDocument();
        expect(_react1.screen.getByText('Finalizar Compra')).toBeInTheDocument();
    });
    it('renders cart summary with correct data', ()=>{
        const checkoutData = {
            totalPrice: 100,
            shippingCost: 10,
            discount: 5,
            finalTotal: 105
        };
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps,
            checkoutData: checkoutData
        }));
        // Verificar que el componente se renderiza (CartSummary está presente)
        expect(_react1.screen.getByText('Finalizar Compra')).toBeInTheDocument();
    });
    it('shows loading state correctly', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps,
            isLoading: true
        }));
        // Verificar que muestra el estado de carga
        expect(_react1.screen.getByText('Procesando...')).toBeInTheDocument();
        // Verificar que el botón está deshabilitado
        const button = _react1.screen.getByRole('button', {
            name: /procesando/i
        });
        expect(button).toBeDisabled();
    });
    it('renders children content', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "custom-content",
                children: "Custom step content"
            })
        }));
        expect(_react1.screen.getByTestId('custom-content')).toBeInTheDocument();
        expect(_react1.screen.getByText('Custom step content')).toBeInTheDocument();
    });
});

//# sourceMappingURL=data:application/json;base64,