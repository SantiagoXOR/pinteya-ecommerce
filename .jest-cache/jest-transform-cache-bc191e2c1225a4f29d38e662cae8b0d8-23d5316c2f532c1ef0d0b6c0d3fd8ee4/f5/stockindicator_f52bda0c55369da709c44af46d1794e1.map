{"version":3,"names":["cov_28fqp0ruv0","actualCoverage","s","StockIndicator","f","stockIndicatorVariants","_classvarianceauthority","cva","variants","variant","default","compact","badge","minimal","status","inStock","lowStock","outOfStock","preOrder","defaultVariants","getStockStatus","quantity","lowStockThreshold","b","allowPreOrder","getStatusIcon","_jsxruntime","jsx","_lucidereact","Check","className","AlertTriangle","XCircle","Package","getDefaultText","showExactQuantity","unit","formatRestockDate","date","now","Date","diffTime","getTime","diffDays","Math","ceil","toLocaleDateString","_react","forwardRef","customTexts","showIcon","restockDate","props","ref","statusText","jsxs","_utils","cn","displayName"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\stock-indicator.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Package, AlertTriangle, XCircle, Check } from \"lucide-react\";\r\n\r\nconst stockIndicatorVariants = cva(\r\n  \"flex items-center gap-2 text-sm font-medium\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"flex-row\",\r\n        compact: \"flex-row gap-1\",\r\n        badge: \"inline-flex px-2 py-1 rounded-full text-xs\",\r\n        minimal: \"flex-row gap-1 text-xs\",\r\n      },\r\n      status: {\r\n        inStock: \"text-green-600\",\r\n        lowStock: \"text-yellow-600\",\r\n        outOfStock: \"text-red-600\",\r\n        preOrder: \"text-blue-600\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      status: \"inStock\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface StockIndicatorProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof stockIndicatorVariants> {\r\n  /** Cantidad disponible en stock */\r\n  quantity: number\r\n  /** Umbral para considerar stock bajo */\r\n  lowStockThreshold?: number\r\n  /** Mostrar cantidad exacta */\r\n  showExactQuantity?: boolean\r\n  /** Texto personalizado para diferentes estados */\r\n  customTexts?: {\r\n    inStock?: string\r\n    lowStock?: string\r\n    outOfStock?: string\r\n    preOrder?: string\r\n  }\r\n  /** Mostrar ícono */\r\n  showIcon?: boolean\r\n  /** Permitir pre-orden cuando no hay stock */\r\n  allowPreOrder?: boolean\r\n  /** Tiempo estimado de reposición */\r\n  restockDate?: Date\r\n  /** Unidad de medida (ej: \"unidades\", \"litros\", \"kg\") */\r\n  unit?: string\r\n}\r\n\r\n/**\r\n * Determina el estado del stock basado en la cantidad\r\n */\r\nconst getStockStatus = (\r\n  quantity: number, \r\n  lowStockThreshold: number = 5,\r\n  allowPreOrder: boolean = false\r\n): \"inStock\" | \"lowStock\" | \"outOfStock\" | \"preOrder\" => {\r\n  if (quantity === 0) {\r\n    return allowPreOrder ? \"preOrder\" : \"outOfStock\"\r\n  }\r\n  if (quantity <= lowStockThreshold) {\r\n    return \"lowStock\"\r\n  }\r\n  return \"inStock\"\r\n}\r\n\r\n/**\r\n * Obtiene el ícono apropiado para cada estado\r\n */\r\nconst getStatusIcon = (status: string) => {\r\n  switch (status) {\r\n    case \"inStock\":\r\n      return <Check className=\"w-4 h-4\" />\r\n    case \"lowStock\":\r\n      return <AlertTriangle className=\"w-4 h-4\" />\r\n    case \"outOfStock\":\r\n      return <XCircle className=\"w-4 h-4\" />\r\n    case \"preOrder\":\r\n      return <Package className=\"w-4 h-4\" />\r\n    default:\r\n      return <Check className=\"w-4 h-4\" />\r\n  }\r\n}\r\n\r\n/**\r\n * Obtiene el texto por defecto para cada estado\r\n */\r\nconst getDefaultText = (\r\n  status: string,\r\n  quantity: number,\r\n  showExactQuantity: boolean,\r\n  unit: string = \"unidades\"\r\n): string => {\r\n  switch (status) {\r\n    case \"inStock\":\r\n      return showExactQuantity \r\n        ? `${quantity} ${unit} disponibles`\r\n        : \"En stock\"\r\n    case \"lowStock\":\r\n      return showExactQuantity \r\n        ? `¡Solo ${quantity} ${unit} disponibles!`\r\n        : \"Pocas unidades\"\r\n    case \"outOfStock\":\r\n      return \"Sin stock\"\r\n    case \"preOrder\":\r\n      return \"Disponible por encargo\"\r\n    default:\r\n      return \"En stock\"\r\n  }\r\n}\r\n\r\n/**\r\n * Formatea la fecha de reposición\r\n */\r\nconst formatRestockDate = (date: Date): string => {\r\n  const now = new Date()\r\n  const diffTime = date.getTime() - now.getTime()\r\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))\r\n  \r\n  if (diffDays <= 0) {\r\n    return \"Disponible pronto\"\r\n  } else if (diffDays === 1) {\r\n    return \"Disponible mañana\"\r\n  } else if (diffDays <= 7) {\r\n    return `Disponible en ${diffDays} días`\r\n  } else {\r\n    return `Disponible el ${date.toLocaleDateString('es-AR')}`\r\n  }\r\n}\r\n\r\nconst StockIndicator = React.forwardRef<HTMLDivElement, StockIndicatorProps>(\r\n  ({ \r\n    className, \r\n    variant, \r\n    quantity,\r\n    lowStockThreshold = 5,\r\n    showExactQuantity = false,\r\n    customTexts = {},\r\n    showIcon = true,\r\n    allowPreOrder = false,\r\n    restockDate,\r\n    unit = \"unidades\",\r\n    ...props \r\n  }, ref) => {\r\n    const status = getStockStatus(quantity, lowStockThreshold, allowPreOrder)\r\n    \r\n    const statusText = customTexts[status] || getDefaultText(\r\n      status, \r\n      quantity, \r\n      showExactQuantity, \r\n      unit\r\n    )\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(stockIndicatorVariants({ variant, status, className }))}\r\n        {...props}\r\n      >\r\n        {/* Ícono de estado */}\r\n        {showIcon && getStatusIcon(status)}\r\n        \r\n        {/* Texto principal */}\r\n        <span>{statusText}</span>\r\n        \r\n        {/* Información de reposición */}\r\n        {status === \"outOfStock\" && restockDate && (\r\n          <span className=\"text-xs text-muted-foreground ml-1\">\r\n            ({formatRestockDate(restockDate)})\r\n          </span>\r\n        )}\r\n        \r\n        {/* Badge de estado para variante badge */}\r\n        {variant === \"badge\" && (\r\n          <div className={cn(\r\n            \"absolute -top-1 -right-1 w-3 h-3 rounded-full\",\r\n            {\r\n              \"bg-green-500\": status === \"inStock\",\r\n              \"bg-yellow-500\": status === \"lowStock\", \r\n              \"bg-red-500\": status === \"outOfStock\",\r\n              \"bg-blue-500\": status === \"preOrder\",\r\n            }\r\n          )} />\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nStockIndicator.displayName = \"StockIndicator\"\r\n\r\nexport { StockIndicator, stockIndicatorVariants }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}