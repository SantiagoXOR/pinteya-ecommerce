aaa80696b751e0ea3afbc57a03df9454
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_1317zrw0e7() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\cart\\route.ts";
  var hash = "3b3269ad6b15b50feb6cc8a46efb3b25d434b62e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\cart\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 22
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 20
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 23
        }
      },
      "8": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "9": {
        start: {
          line: 27,
          column: 18
        },
        end: {
          line: 27,
          column: 63
        }
      },
      "10": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 51
        }
      },
      "11": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 71
        }
      },
      "12": {
        start: {
          line: 30,
          column: 21
        },
        end: {
          line: 30,
          column: 64
        }
      },
      "13": {
        start: {
          line: 31,
          column: 24
        },
        end: {
          line: 31,
          column: 71
        }
      },
      "14": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 24
        }
      },
      "15": {
        start: {
          line: 35,
          column: 27
        },
        end: {
          line: 35,
          column: 77
        }
      },
      "16": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 202,
          column: 7
        }
      },
      "17": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "18": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 77
        }
      },
      "19": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 49,
          column: 15
        }
      },
      "20": {
        start: {
          line: 51,
          column: 28
        },
        end: {
          line: 51,
          column: 53
        }
      },
      "21": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 76,
          column: 13
        }
      },
      "22": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 66
        }
      },
      "23": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 66,
          column: 19
        }
      },
      "24": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 75,
          column: 19
        }
      },
      "25": {
        start: {
          line: 77,
          column: 27
        },
        end: {
          line: 77,
          column: 42
        }
      },
      "26": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 82
        }
      },
      "27": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 95,
          column: 13
        }
      },
      "28": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 82,
          column: 66
        }
      },
      "29": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 84,
          column: 90
        }
      },
      "30": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 87,
          column: 19
        }
      },
      "31": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 94,
          column: 19
        }
      },
      "32": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 108,
          column: 13
        }
      },
      "33": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 79
        }
      },
      "34": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 100,
          column: 19
        }
      },
      "35": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 107,
          column: 19
        }
      },
      "36": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 152,
          column: 13
        }
      },
      "37": {
        start: {
          line: 112,
          column: 31
        },
        end: {
          line: 136,
          column: 54
        }
      },
      "38": {
        start: {
          line: 113,
          column: 20
        },
        end: {
          line: 135,
          column: 43
        }
      },
      "39": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 137,
          column: 40
        }
      },
      "40": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 138,
          column: 37
        }
      },
      "41": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 91
        }
      },
      "42": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 144,
          column: 19
        }
      },
      "43": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 151,
          column: 19
        }
      },
      "44": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 167,
          column: 13
        }
      },
      "45": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 154,
          column: 79
        }
      },
      "46": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 158,
          column: 19
        }
      },
      "47": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 166,
          column: 19
        }
      },
      "48": {
        start: {
          line: 169,
          column: 31
        },
        end: {
          line: 169,
          column: 90
        }
      },
      "49": {
        start: {
          line: 169,
          column: 62
        },
        end: {
          line: 169,
          column: 81
        }
      },
      "50": {
        start: {
          line: 170,
          column: 32
        },
        end: {
          line: 173,
          column: 22
        }
      },
      "51": {
        start: {
          line: 171,
          column: 30
        },
        end: {
          line: 171,
          column: 90
        }
      },
      "52": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 51
        }
      },
      "53": {
        start: {
          line: 174,
          column: 29
        },
        end: {
          line: 179,
          column: 13
        }
      },
      "54": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 139
        }
      },
      "55": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 185,
          column: 15
        }
      },
      "56": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 190,
          column: 15
        }
      },
      "57": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 66
        }
      },
      "58": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 200,
          column: 15
        }
      },
      "59": {
        start: {
          line: 206,
          column: 27
        },
        end: {
          line: 206,
          column: 77
        }
      },
      "60": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 345,
          column: 7
        }
      },
      "61": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 344,
          column: 9
        }
      },
      "62": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 73
        }
      },
      "63": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 220,
          column: 15
        }
      },
      "64": {
        start: {
          line: 222,
          column: 28
        },
        end: {
          line: 222,
          column: 53
        }
      },
      "65": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 244,
          column: 13
        }
      },
      "66": {
        start: {
          line: 224,
          column: 16
        },
        end: {
          line: 224,
          column: 66
        }
      },
      "67": {
        start: {
          line: 225,
          column: 16
        },
        end: {
          line: 237,
          column: 19
        }
      },
      "68": {
        start: {
          line: 238,
          column: 16
        },
        end: {
          line: 243,
          column: 19
        }
      },
      "69": {
        start: {
          line: 245,
          column: 27
        },
        end: {
          line: 245,
          column: 42
        }
      },
      "70": {
        start: {
          line: 247,
          column: 25
        },
        end: {
          line: 247,
          column: 45
        }
      },
      "71": {
        start: {
          line: 248,
          column: 48
        },
        end: {
          line: 248,
          column: 52
        }
      },
      "72": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 257,
          column: 13
        }
      },
      "73": {
        start: {
          line: 251,
          column: 16
        },
        end: {
          line: 256,
          column: 19
        }
      },
      "74": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 265,
          column: 13
        }
      },
      "75": {
        start: {
          line: 259,
          column: 16
        },
        end: {
          line: 264,
          column: 19
        }
      },
      "76": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 266,
          column: 119
        }
      },
      "77": {
        start: {
          line: 268,
          column: 29
        },
        end: {
          line: 268,
          column: 67
        }
      },
      "78": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 277,
          column: 13
        }
      },
      "79": {
        start: {
          line: 270,
          column: 16
        },
        end: {
          line: 270,
          column: 79
        }
      },
      "80": {
        start: {
          line: 271,
          column: 16
        },
        end: {
          line: 276,
          column: 19
        }
      },
      "81": {
        start: {
          line: 279,
          column: 59
        },
        end: {
          line: 279,
          column: 152
        }
      },
      "82": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 288,
          column: 13
        }
      },
      "83": {
        start: {
          line: 281,
          column: 16
        },
        end: {
          line: 281,
          column: 79
        }
      },
      "84": {
        start: {
          line: 282,
          column: 16
        },
        end: {
          line: 287,
          column: 19
        }
      },
      "85": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 298,
          column: 13
        }
      },
      "86": {
        start: {
          line: 290,
          column: 16
        },
        end: {
          line: 290,
          column: 139
        }
      },
      "87": {
        start: {
          line: 291,
          column: 16
        },
        end: {
          line: 297,
          column: 19
        }
      },
      "88": {
        start: {
          line: 300,
          column: 57
        },
        end: {
          line: 313,
          column: 17
        }
      },
      "89": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 323,
          column: 13
        }
      },
      "90": {
        start: {
          line: 315,
          column: 16
        },
        end: {
          line: 315,
          column: 84
        }
      },
      "91": {
        start: {
          line: 316,
          column: 16
        },
        end: {
          line: 322,
          column: 19
        }
      },
      "92": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 97
        }
      },
      "93": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 334,
          column: 15
        }
      },
      "94": {
        start: {
          line: 336,
          column: 12
        },
        end: {
          line: 336,
          column: 66
        }
      },
      "95": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 343,
          column: 15
        }
      },
      "96": {
        start: {
          line: 349,
          column: 27
        },
        end: {
          line: 349,
          column: 77
        }
      },
      "97": {
        start: {
          line: 351,
          column: 4
        },
        end: {
          line: 412,
          column: 7
        }
      },
      "98": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 411,
          column: 9
        }
      },
      "99": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 353,
          column: 76
        }
      },
      "100": {
        start: {
          line: 354,
          column: 12
        },
        end: {
          line: 363,
          column: 15
        }
      },
      "101": {
        start: {
          line: 365,
          column: 28
        },
        end: {
          line: 365,
          column: 53
        }
      },
      "102": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 373,
          column: 13
        }
      },
      "103": {
        start: {
          line: 367,
          column: 16
        },
        end: {
          line: 372,
          column: 19
        }
      },
      "104": {
        start: {
          line: 374,
          column: 27
        },
        end: {
          line: 374,
          column: 42
        }
      },
      "105": {
        start: {
          line: 376,
          column: 29
        },
        end: {
          line: 376,
          column: 67
        }
      },
      "106": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 384,
          column: 13
        }
      },
      "107": {
        start: {
          line: 378,
          column: 16
        },
        end: {
          line: 383,
          column: 19
        }
      },
      "108": {
        start: {
          line: 386,
          column: 30
        },
        end: {
          line: 386,
          column: 94
        }
      },
      "109": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 396,
          column: 13
        }
      },
      "110": {
        start: {
          line: 388,
          column: 16
        },
        end: {
          line: 388,
          column: 77
        }
      },
      "111": {
        start: {
          line: 389,
          column: 16
        },
        end: {
          line: 395,
          column: 19
        }
      },
      "112": {
        start: {
          line: 397,
          column: 12
        },
        end: {
          line: 397,
          column: 92
        }
      },
      "113": {
        start: {
          line: 398,
          column: 12
        },
        end: {
          line: 401,
          column: 15
        }
      },
      "114": {
        start: {
          line: 403,
          column: 12
        },
        end: {
          line: 403,
          column: 66
        }
      },
      "115": {
        start: {
          line: 404,
          column: 12
        },
        end: {
          line: 410,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "GET",
        decl: {
          start: {
            line: 33,
            column: 15
          },
          end: {
            line: 33,
            column: 18
          }
        },
        loc: {
          start: {
            line: 33,
            column: 28
          },
          end: {
            line: 203,
            column: 1
          }
        },
        line: 33
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 37,
            column: 100
          },
          end: {
            line: 37,
            column: 101
          }
        },
        loc: {
          start: {
            line: 37,
            column: 110
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 37
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 112,
            column: 75
          },
          end: {
            line: 112,
            column: 76
          }
        },
        loc: {
          start: {
            line: 112,
            column: 91
          },
          end: {
            line: 136,
            column: 17
          }
        },
        line: 112
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 169,
            column: 49
          },
          end: {
            line: 169,
            column: 50
          }
        },
        loc: {
          start: {
            line: 169,
            column: 62
          },
          end: {
            line: 169,
            column: 81
          }
        },
        line: 169
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 170,
            column: 50
          },
          end: {
            line: 170,
            column: 51
          }
        },
        loc: {
          start: {
            line: 170,
            column: 63
          },
          end: {
            line: 173,
            column: 13
          }
        },
        line: 170
      },
      "10": {
        name: "POST",
        decl: {
          start: {
            line: 204,
            column: 15
          },
          end: {
            line: 204,
            column: 19
          }
        },
        loc: {
          start: {
            line: 204,
            column: 29
          },
          end: {
            line: 346,
            column: 1
          }
        },
        line: 204
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 208,
            column: 100
          },
          end: {
            line: 208,
            column: 101
          }
        },
        loc: {
          start: {
            line: 208,
            column: 110
          },
          end: {
            line: 345,
            column: 5
          }
        },
        line: 208
      },
      "12": {
        name: "DELETE",
        decl: {
          start: {
            line: 347,
            column: 15
          },
          end: {
            line: 347,
            column: 21
          }
        },
        loc: {
          start: {
            line: 347,
            column: 31
          },
          end: {
            line: 413,
            column: 1
          }
        },
        line: 347
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 351,
            column: 100
          },
          end: {
            line: 351,
            column: 101
          }
        },
        loc: {
          start: {
            line: 351,
            column: 110
          },
          end: {
            line: 412,
            column: 5
          }
        },
        line: 351
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "1": {
        loc: {
          start: {
            line: 86,
            column: 27
          },
          end: {
            line: 86,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 27
          },
          end: {
            line: 86,
            column: 40
          }
        }, {
          start: {
            line: 86,
            column: 44
          },
          end: {
            line: 86,
            column: 83
          }
        }],
        line: 86
      },
      "2": {
        loc: {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 108,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 108,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "3": {
        loc: {
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 167,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 167,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "4": {
        loc: {
          start: {
            line: 169,
            column: 31
          },
          end: {
            line: 169,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 31
          },
          end: {
            line: 169,
            column: 85
          }
        }, {
          start: {
            line: 169,
            column: 89
          },
          end: {
            line: 169,
            column: 90
          }
        }],
        line: 169
      },
      "5": {
        loc: {
          start: {
            line: 170,
            column: 32
          },
          end: {
            line: 173,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 170,
            column: 32
          },
          end: {
            line: 173,
            column: 17
          }
        }, {
          start: {
            line: 173,
            column: 21
          },
          end: {
            line: 173,
            column: 22
          }
        }],
        line: 170
      },
      "6": {
        loc: {
          start: {
            line: 171,
            column: 30
          },
          end: {
            line: 171,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 30
          },
          end: {
            line: 171,
            column: 61
          }
        }, {
          start: {
            line: 171,
            column: 65
          },
          end: {
            line: 171,
            column: 85
          }
        }, {
          start: {
            line: 171,
            column: 89
          },
          end: {
            line: 171,
            column: 90
          }
        }],
        line: 171
      },
      "7": {
        loc: {
          start: {
            line: 175,
            column: 23
          },
          end: {
            line: 175,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 175,
            column: 23
          },
          end: {
            line: 175,
            column: 32
          }
        }, {
          start: {
            line: 175,
            column: 36
          },
          end: {
            line: 175,
            column: 38
          }
        }],
        line: 175
      },
      "8": {
        loc: {
          start: {
            line: 178,
            column: 27
          },
          end: {
            line: 178,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 27
          },
          end: {
            line: 178,
            column: 44
          }
        }, {
          start: {
            line: 178,
            column: 48
          },
          end: {
            line: 178,
            column: 49
          }
        }],
        line: 178
      },
      "9": {
        loc: {
          start: {
            line: 223,
            column: 12
          },
          end: {
            line: 244,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 12
          },
          end: {
            line: 244,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 223
      },
      "10": {
        loc: {
          start: {
            line: 248,
            column: 31
          },
          end: {
            line: 248,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 248,
            column: 42
          },
          end: {
            line: 248,
            column: 43
          }
        }],
        line: 248
      },
      "11": {
        loc: {
          start: {
            line: 250,
            column: 12
          },
          end: {
            line: 257,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 250,
            column: 12
          },
          end: {
            line: 257,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 250
      },
      "12": {
        loc: {
          start: {
            line: 258,
            column: 12
          },
          end: {
            line: 265,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 12
          },
          end: {
            line: 265,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "13": {
        loc: {
          start: {
            line: 258,
            column: 16
          },
          end: {
            line: 258,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 258,
            column: 16
          },
          end: {
            line: 258,
            column: 29
          }
        }, {
          start: {
            line: 258,
            column: 33
          },
          end: {
            line: 258,
            column: 46
          }
        }],
        line: 258
      },
      "14": {
        loc: {
          start: {
            line: 269,
            column: 12
          },
          end: {
            line: 277,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 269,
            column: 12
          },
          end: {
            line: 277,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 269
      },
      "15": {
        loc: {
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 288,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 288,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "16": {
        loc: {
          start: {
            line: 280,
            column: 16
          },
          end: {
            line: 280,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 16
          },
          end: {
            line: 280,
            column: 28
          }
        }, {
          start: {
            line: 280,
            column: 32
          },
          end: {
            line: 280,
            column: 40
          }
        }],
        line: 280
      },
      "17": {
        loc: {
          start: {
            line: 289,
            column: 12
          },
          end: {
            line: 298,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 12
          },
          end: {
            line: 298,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 289
      },
      "18": {
        loc: {
          start: {
            line: 314,
            column: 12
          },
          end: {
            line: 323,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 12
          },
          end: {
            line: 323,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 314
      },
      "19": {
        loc: {
          start: {
            line: 366,
            column: 12
          },
          end: {
            line: 373,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 366,
            column: 12
          },
          end: {
            line: 373,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 366
      },
      "20": {
        loc: {
          start: {
            line: 377,
            column: 12
          },
          end: {
            line: 384,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 377,
            column: 12
          },
          end: {
            line: 384,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 377
      },
      "21": {
        loc: {
          start: {
            line: 387,
            column: 12
          },
          end: {
            line: 396,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 387,
            column: 12
          },
          end: {
            line: 396,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 387
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\cart\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API DE CARRITO\r\n// ===================================\r\n// Implementaci\xF3n completa de APIs de carrito con mejoras de seguridad\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getSupabaseClient } from '@/lib/integrations/supabase';\r\nimport { auth } from '@/lib/auth/config';\r\n\r\n// ===================================\r\n// MEJORAS DE SEGURIDAD - ALTA PRIORIDAD\r\n// ===================================\r\nimport {\r\n  withRateLimit,\r\n  RATE_LIMIT_CONFIGS\r\n} from '@/lib/rate-limiting/rate-limiter';\r\nimport {\r\n  API_TIMEOUTS,\r\n  withDatabaseTimeout,\r\n  getEndpointTimeouts\r\n} from '@/lib/config/api-timeouts';\r\nimport { createSecurityLogger } from '@/lib/logging/security-logger';\r\n\r\n// Tipos para el carrito\r\ninterface CartItem {\r\n  id: string;\r\n  user_id: string;\r\n  product_id: number;\r\n  quantity: number;\r\n  created_at: string;\r\n  updated_at: string;\r\n  products: {\r\n    id: number;\r\n    name: string;\r\n    price: number;\r\n    discounted_price?: number;\r\n    images?: any;\r\n    stock: number;\r\n    brand?: string;\r\n    category?: {\r\n      id: number;\r\n      name: string;\r\n    };\r\n  };\r\n}\r\n\r\ninterface CartSummary {\r\n  items: CartItem[];\r\n  totalItems: number;\r\n  totalAmount: number;\r\n  itemCount: number;\r\n}\r\n\r\n/**\r\n * GET /api/cart\r\n * Obtener todos los items del carrito del usuario autenticado\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  // Crear logger de seguridad\r\n  const securityLogger = createSecurityLogger(request);\r\n\r\n  // Aplicar rate limiting para APIs de carrito\r\n  return await withRateLimit(\r\n    request,\r\n    RATE_LIMIT_CONFIGS.products, // Usar configuraci\xF3n similar a productos\r\n    async () => {\r\n      try {\r\n        console.log('\uD83D\uDED2 Cart API: GET - Obteniendo carrito del usuario');\r\n        securityLogger.log({\r\n          type: 'data_access',\r\n          severity: 'low',\r\n          message: 'Cart API access',\r\n          context: {\r\n            endpoint: '/api/cart',\r\n            method: 'GET',\r\n            timestamp: new Date().toISOString()\r\n          }\r\n        });\r\n\r\n        // Verificar autenticaci\xF3n\r\n        const session = await auth();\r\n        if (!session?.user?.id) {\r\n          console.log('\u274C Cart API: Usuario no autenticado');\r\n          securityLogger.log({\r\n            type: 'auth_failure',\r\n            severity: 'medium',\r\n            message: 'Unauthorized cart access attempt',\r\n            context: {\r\n              endpoint: '/api/cart',\r\n              method: 'GET',\r\n              timestamp: new Date().toISOString()\r\n            },\r\n            metadata: { reason: 'No authenticated user' }\r\n          });\r\n\r\n          return NextResponse.json(\r\n            {\r\n              success: false,\r\n              error: 'Usuario no autenticado',\r\n              items: [],\r\n              totalItems: 0,\r\n              totalAmount: 0\r\n            },\r\n            { status: 401 }\r\n          );\r\n        }\r\n\r\n        const userId = session.user.id;\r\n        console.log(`\uD83D\uDD0D Cart API: Obteniendo carrito para usuario ${userId}`);\r\n\r\n        // Obtener cliente de Supabase con manejo de errores mejorado\r\n        let supabase;\r\n        try {\r\n          supabase = getSupabaseClient(true);\r\n        } catch (error: any) {\r\n          console.error('\u274C Cart API: Error obteniendo cliente de Supabase:', error);\r\n          securityLogger.logEvent('database_error', 'high', {\r\n            error: error.message || 'Supabase client initialization failed'\r\n          });\r\n\r\n          return NextResponse.json(\r\n            {\r\n              success: false,\r\n              error: 'Servicio de base de datos temporalmente no disponible',\r\n              items: []\r\n            },\r\n            { status: 503 }\r\n          );\r\n        }\r\n\r\n        if (!supabase) {\r\n          console.error('\u274C Cart API: Cliente de Supabase no disponible');\r\n          securityLogger.logEvent('database_error', 'high', {\r\n            error: 'Supabase client not available'\r\n          });\r\n\r\n          return NextResponse.json(\r\n            {\r\n              success: false,\r\n              error: 'Servicio de base de datos no disponible',\r\n              items: []\r\n            },\r\n            { status: 503 }\r\n          );\r\n        }\r\n\r\n        // Consultar items del carrito con manejo de errores mejorado\r\n        let cartItems, error;\r\n        try {\r\n          const result = await withDatabaseTimeout(\r\n            async (signal) => {\r\n              return await supabase\r\n                .from('cart_items')\r\n                .select(`\r\n                  id,\r\n                  user_id,\r\n                  product_id,\r\n                  quantity,\r\n                  created_at,\r\n                  updated_at,\r\n                  products (\r\n                    id,\r\n                    name,\r\n                    price,\r\n                    discounted_price,\r\n                    images,\r\n                    stock,\r\n                    brand,\r\n                    category:categories (\r\n                      id,\r\n                      name\r\n                    )\r\n                  )\r\n                `)\r\n                .eq('user_id', userId)\r\n                .order('created_at', { ascending: false })\r\n                .abortSignal(signal);\r\n            },\r\n            API_TIMEOUTS.database\r\n          );\r\n          cartItems = result.data;\r\n          error = result.error;\r\n        } catch (timeoutError: any) {\r\n          console.error('\u274C Cart API: Timeout en consulta de carrito:', timeoutError);\r\n          securityLogger.logEvent('database_timeout', 'high', {\r\n            operation: 'get_cart_items',\r\n            timeout: API_TIMEOUTS.database\r\n          });\r\n\r\n          return NextResponse.json(\r\n            {\r\n              success: false,\r\n              error: 'Timeout al obtener carrito. Intenta nuevamente.',\r\n              items: []\r\n            },\r\n            { status: 408 }\r\n          );\r\n        }\r\n\r\n        if (error) {\r\n          console.error('\u274C Cart API: Error consultando carrito:', error);\r\n          securityLogger.logEvent('database_error', 'high', {\r\n            error: error.message,\r\n            operation: 'get_cart_items'\r\n          });\r\n\r\n          return NextResponse.json(\r\n            {\r\n              success: false,\r\n              error: 'Error obteniendo carrito de la base de datos',\r\n              details: error.message,\r\n              items: []\r\n            },\r\n            { status: 500 }\r\n          );\r\n        }\r\n\r\n    // Calcular totales\r\n    const totalItems = cartItems?.reduce((sum, item) => sum + item.quantity, 0) || 0;\r\n    const totalAmount = cartItems?.reduce((sum, item) => {\r\n      const price = item.products?.discounted_price || item.products?.price || 0;\r\n      return sum + (price * item.quantity);\r\n    }, 0) || 0;\r\n\r\n    const response: CartSummary = {\r\n      items: cartItems || [],\r\n      totalItems,\r\n      totalAmount,\r\n      itemCount: cartItems?.length || 0\r\n    };\r\n\r\n    console.log(`\u2705 Cart API: Carrito obtenido exitosamente - ${response.itemCount} productos \xFAnicos, ${totalItems} items totales`);\r\n\r\n        securityLogger.logEvent('api_success', 'low', {\r\n          endpoint: '/api/cart',\r\n          method: 'GET',\r\n          itemCount: response.itemCount\r\n        });\r\n\r\n        return NextResponse.json({\r\n          success: true,\r\n          message: `Carrito obtenido: ${response.itemCount} productos`,\r\n          ...response\r\n        });\r\n\r\n      } catch (error: any) {\r\n        console.error('\u274C Cart API: Error inesperado:', error);\r\n        \r\n        return NextResponse.json(\r\n          {\r\n            success: false,\r\n            error: 'Error interno del servidor',\r\n            details: error.message,\r\n            items: []\r\n          },\r\n          { status: 500 }\r\n        );\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n/**\r\n * POST /api/cart\r\n * Agregar un item al carrito (o actualizar cantidad si ya existe)\r\n */\r\nexport async function POST(request: NextRequest) {\r\n  // Crear logger de seguridad\r\n  const securityLogger = createSecurityLogger(request);\r\n\r\n  // Aplicar rate limiting para APIs de carrito\r\n  return await withRateLimit(\r\n    request,\r\n    RATE_LIMIT_CONFIGS.creation, // Usar configuraci\xF3n para creaci\xF3n\r\n    async () => {\r\n      try {\r\n        console.log('\uD83D\uDED2 Cart API: POST - Agregando item al carrito');\r\n        securityLogger.log({\r\n          type: 'data_access',\r\n          severity: 'low',\r\n          message: 'Cart POST API access',\r\n          context: {\r\n            endpoint: '/api/cart',\r\n            method: 'POST',\r\n            timestamp: new Date().toISOString()\r\n          }\r\n        });\r\n\r\n        // Verificar autenticaci\xF3n\r\n        const session = await auth();\r\n        if (!session?.user?.id) {\r\n          console.log('\u274C Cart API: Usuario no autenticado');\r\n          securityLogger.log({\r\n            type: 'auth_failure',\r\n            severity: 'medium',\r\n            message: 'Unauthorized cart POST attempt',\r\n            context: {\r\n              endpoint: '/api/cart',\r\n              method: 'POST',\r\n              timestamp: new Date().toISOString()\r\n            },\r\n            metadata: { reason: 'No authenticated user' }\r\n          });\r\n\r\n          return NextResponse.json(\r\n            { success: false, error: 'Usuario no autenticado' },\r\n            { status: 401 }\r\n          );\r\n        }\r\n\r\n        const userId = session.user.id;\r\n\r\n    // Obtener datos del request\r\n    const body = await request.json();\r\n    const { productId, quantity = 1 } = body;\r\n\r\n    // Validaciones\r\n    if (!productId) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'productId es requerido' }, \r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    if (quantity <= 0 || quantity > 99) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'Cantidad debe estar entre 1 y 99' }, \r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    console.log(`\uD83D\uDD0D Cart API: Agregando producto ${productId} (cantidad: ${quantity}) para usuario ${userId}`);\r\n\r\n    // Obtener cliente de Supabase\r\n    const supabase = getSupabaseClient(true);\r\n    if (!supabase) {\r\n      console.error('\u274C Cart API: Cliente de Supabase no disponible');\r\n      return NextResponse.json(\r\n        { success: false, error: 'Servicio de base de datos no disponible' }, \r\n        { status: 503 }\r\n      );\r\n    }\r\n\r\n    // Verificar que el producto existe y tiene stock\r\n    const { data: product, error: productError } = await supabase\r\n      .from('products')\r\n      .select('id, name, stock, price')\r\n      .eq('id', productId)\r\n      .single();\r\n\r\n    if (productError || !product) {\r\n      console.log(`\u274C Cart API: Producto ${productId} no encontrado`);\r\n      return NextResponse.json(\r\n        { success: false, error: 'Producto no encontrado' }, \r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    if (product.stock < quantity) {\r\n      console.log(`\u274C Cart API: Stock insuficiente para producto ${productId}. Stock: ${product.stock}, Solicitado: ${quantity}`);\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'Stock insuficiente',\r\n          availableStock: product.stock\r\n        }, \r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Upsert: agregar o actualizar item en carrito\r\n    const { data: cartItem, error: cartError } = await supabase\r\n      .from('cart_items')\r\n      .upsert({\r\n        user_id: userId,\r\n        product_id: productId,\r\n        quantity: quantity\r\n      }, {\r\n        onConflict: 'user_id,product_id'\r\n      })\r\n      .select(`\r\n        id,\r\n        user_id,\r\n        product_id,\r\n        quantity,\r\n        created_at,\r\n        updated_at\r\n      `)\r\n      .single();\r\n\r\n    if (cartError) {\r\n      console.error('\u274C Cart API: Error agregando al carrito:', cartError);\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'Error agregando producto al carrito',\r\n          details: cartError.message\r\n        }, \r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    console.log(`\u2705 Cart API: Producto ${product.name} agregado al carrito exitosamente`);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: `${product.name} agregado al carrito`,\r\n      item: cartItem,\r\n      product: {\r\n        id: product.id,\r\n        name: product.name,\r\n        price: product.price\r\n      }\r\n    });\r\n\r\n  } catch (error: any) {\r\n    console.error('\u274C Cart API: Error inesperado:', error);\r\n    return NextResponse.json(\r\n      {\r\n        success: false,\r\n        error: 'Error interno del servidor',\r\n        details: error.message\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n    }\r\n  );\r\n}\r\n\r\n/**\r\n * DELETE /api/cart\r\n * Limpiar todo el carrito del usuario\r\n */\r\nexport async function DELETE(request: NextRequest) {\r\n  // Crear logger de seguridad\r\n  const securityLogger = createSecurityLogger(request);\r\n\r\n  // Aplicar rate limiting para APIs de carrito\r\n  return await withRateLimit(\r\n    request,\r\n    RATE_LIMIT_CONFIGS.products, // Usar configuraci\xF3n similar a productos\r\n    async () => {\r\n      try {\r\n        console.log('\uD83D\uDED2 Cart API: DELETE - Limpiando carrito completo');\r\n        securityLogger.log({\r\n          type: 'data_access',\r\n          severity: 'low',\r\n          message: 'Cart DELETE API access',\r\n          context: {\r\n            endpoint: '/api/cart',\r\n            method: 'DELETE',\r\n            timestamp: new Date().toISOString()\r\n          }\r\n        });\r\n\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user?.id) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'Usuario no autenticado' }, \r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n\r\n    // Obtener cliente de Supabase\r\n    const supabase = getSupabaseClient(true);\r\n    if (!supabase) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'Servicio de base de datos no disponible' }, \r\n        { status: 503 }\r\n      );\r\n    }\r\n\r\n    // Eliminar todos los items del carrito del usuario\r\n    const { error } = await supabase\r\n      .from('cart_items')\r\n      .delete()\r\n      .eq('user_id', userId);\r\n\r\n    if (error) {\r\n      console.error('\u274C Cart API: Error limpiando carrito:', error);\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'Error limpiando carrito',\r\n          details: error.message\r\n        }, \r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    console.log(`\u2705 Cart API: Carrito limpiado exitosamente para usuario ${userId}`);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: 'Carrito limpiado exitosamente'\r\n    });\r\n\r\n  } catch (error: any) {\r\n    console.error('\u274C Cart API: Error inesperado:', error);\r\n    return NextResponse.json(\r\n      { \r\n        success: false, \r\n        error: 'Error interno del servidor',\r\n        details: error.message\r\n      }, \r\n      { status: 500 }\r\n    );\r\n  }\r\n    }\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["DELETE", "GET", "POST", "runtime", "request", "securityLogger", "createSecurityLogger", "withRateLimit", "RATE_LIMIT_CONFIGS", "products", "console", "log", "type", "severity", "message", "context", "endpoint", "method", "timestamp", "Date", "toISOString", "session", "auth", "user", "id", "metadata", "reason", "NextResponse", "json", "success", "error", "items", "totalItems", "totalAmount", "status", "userId", "supabase", "getSupabaseClient", "logEvent", "cartItems", "result", "withDatabaseTimeout", "signal", "from", "select", "eq", "order", "ascending", "abortSignal", "API_TIMEOUTS", "database", "data", "timeoutError", "operation", "timeout", "details", "reduce", "sum", "item", "quantity", "price", "discounted_price", "response", "itemCount", "length", "creation", "body", "productId", "product", "productError", "single", "stock", "availableStock", "cartItem", "cartError", "upsert", "user_id", "product_id", "onConflict", "name", "delete"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3b3269ad6b15b50feb6cc8a46efb3b25d434b62e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1317zrw0e7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1317zrw0e7();
cov_1317zrw0e7().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1317zrw0e7().f[0]++;
  cov_1317zrw0e7().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1317zrw0e7().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1317zrw0e7().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_1317zrw0e7().f[1]++;
    cov_1317zrw0e7().s[4]++;
    return DELETE;
  },
  get GET() {
    /* istanbul ignore next */
    cov_1317zrw0e7().f[2]++;
    cov_1317zrw0e7().s[5]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_1317zrw0e7().f[3]++;
    cov_1317zrw0e7().s[6]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_1317zrw0e7().f[4]++;
    cov_1317zrw0e7().s[7]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_1317zrw0e7().s[8]++, require("next/server"));
const _supabase =
/* istanbul ignore next */
(cov_1317zrw0e7().s[9]++, require("../../../lib/integrations/supabase"));
const _config =
/* istanbul ignore next */
(cov_1317zrw0e7().s[10]++, require("../../../lib/auth/config"));
const _ratelimiter =
/* istanbul ignore next */
(cov_1317zrw0e7().s[11]++, require("../../../lib/rate-limiting/rate-limiter"));
const _apitimeouts =
/* istanbul ignore next */
(cov_1317zrw0e7().s[12]++, require("../../../lib/config/api-timeouts"));
const _securitylogger =
/* istanbul ignore next */
(cov_1317zrw0e7().s[13]++, require("../../../lib/logging/security-logger"));
const runtime =
/* istanbul ignore next */
(cov_1317zrw0e7().s[14]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_1317zrw0e7().f[5]++;
  // Crear logger de seguridad
  const securityLogger =
  /* istanbul ignore next */
  (cov_1317zrw0e7().s[15]++, (0, _securitylogger.createSecurityLogger)(request));
  // Aplicar rate limiting para APIs de carrito
  /* istanbul ignore next */
  cov_1317zrw0e7().s[16]++;
  return await (0, _ratelimiter.withRateLimit)(request, _ratelimiter.RATE_LIMIT_CONFIGS.products, async () => {
    /* istanbul ignore next */
    cov_1317zrw0e7().f[6]++;
    cov_1317zrw0e7().s[17]++;
    try {
      /* istanbul ignore next */
      cov_1317zrw0e7().s[18]++;
      console.log('ğ Cart API: GET - Obteniendo carrito del usuario');
      /* istanbul ignore next */
      cov_1317zrw0e7().s[19]++;
      securityLogger.log({
        type: 'data_access',
        severity: 'low',
        message: 'Cart API access',
        context: {
          endpoint: '/api/cart',
          method: 'GET',
          timestamp: new Date().toISOString()
        }
      });
      // Verificar autenticaciÃ³n
      const session =
      /* istanbul ignore next */
      (cov_1317zrw0e7().s[20]++, await (0, _config.auth)());
      /* istanbul ignore next */
      cov_1317zrw0e7().s[21]++;
      if (!session?.user?.id) {
        /* istanbul ignore next */
        cov_1317zrw0e7().b[0][0]++;
        cov_1317zrw0e7().s[22]++;
        console.log('â Cart API: Usuario no autenticado');
        /* istanbul ignore next */
        cov_1317zrw0e7().s[23]++;
        securityLogger.log({
          type: 'auth_failure',
          severity: 'medium',
          message: 'Unauthorized cart access attempt',
          context: {
            endpoint: '/api/cart',
            method: 'GET',
            timestamp: new Date().toISOString()
          },
          metadata: {
            reason: 'No authenticated user'
          }
        });
        /* istanbul ignore next */
        cov_1317zrw0e7().s[24]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Usuario no autenticado',
          items: [],
          totalItems: 0,
          totalAmount: 0
        }, {
          status: 401
        });
      } else
      /* istanbul ignore next */
      {
        cov_1317zrw0e7().b[0][1]++;
      }
      const userId =
      /* istanbul ignore next */
      (cov_1317zrw0e7().s[25]++, session.user.id);
      /* istanbul ignore next */
      cov_1317zrw0e7().s[26]++;
      console.log(`ğ Cart API: Obteniendo carrito para usuario ${userId}`);
      // Obtener cliente de Supabase con manejo de errores mejorado
      let supabase;
      /* istanbul ignore next */
      cov_1317zrw0e7().s[27]++;
      try {
        /* istanbul ignore next */
        cov_1317zrw0e7().s[28]++;
        supabase = (0, _supabase.getSupabaseClient)(true);
      } catch (error) {
        /* istanbul ignore next */
        cov_1317zrw0e7().s[29]++;
        console.error('â Cart API: Error obteniendo cliente de Supabase:', error);
        /* istanbul ignore next */
        cov_1317zrw0e7().s[30]++;
        securityLogger.logEvent('database_error', 'high', {
          error:
          /* istanbul ignore next */
          (cov_1317zrw0e7().b[1][0]++, error.message) ||
          /* istanbul ignore next */
          (cov_1317zrw0e7().b[1][1]++, 'Supabase client initialization failed')
        });
        /* istanbul ignore next */
        cov_1317zrw0e7().s[31]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Servicio de base de datos temporalmente no disponible',
          items: []
        }, {
          status: 503
        });
      }
      /* istanbul ignore next */
      cov_1317zrw0e7().s[32]++;
      if (!supabase) {
        /* istanbul ignore next */
        cov_1317zrw0e7().b[2][0]++;
        cov_1317zrw0e7().s[33]++;
        console.error('â Cart API: Cliente de Supabase no disponible');
        /* istanbul ignore next */
        cov_1317zrw0e7().s[34]++;
        securityLogger.logEvent('database_error', 'high', {
          error: 'Supabase client not available'
        });
        /* istanbul ignore next */
        cov_1317zrw0e7().s[35]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Servicio de base de datos no disponible',
          items: []
        }, {
          status: 503
        });
      } else
      /* istanbul ignore next */
      {
        cov_1317zrw0e7().b[2][1]++;
      }
      // Consultar items del carrito con manejo de errores mejorado
      let cartItems, error;
      /* istanbul ignore next */
      cov_1317zrw0e7().s[36]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_1317zrw0e7().s[37]++, await (0, _apitimeouts.withDatabaseTimeout)(async signal => {
          /* istanbul ignore next */
          cov_1317zrw0e7().f[7]++;
          cov_1317zrw0e7().s[38]++;
          return await supabase.from('cart_items').select(`
                  id,
                  user_id,
                  product_id,
                  quantity,
                  created_at,
                  updated_at,
                  products (
                    id,
                    name,
                    price,
                    discounted_price,
                    images,
                    stock,
                    brand,
                    category:categories (
                      id,
                      name
                    )
                  )
                `).eq('user_id', userId).order('created_at', {
            ascending: false
          }).abortSignal(signal);
        }, _apitimeouts.API_TIMEOUTS.database));
        /* istanbul ignore next */
        cov_1317zrw0e7().s[39]++;
        cartItems = result.data;
        /* istanbul ignore next */
        cov_1317zrw0e7().s[40]++;
        error = result.error;
      } catch (timeoutError) {
        /* istanbul ignore next */
        cov_1317zrw0e7().s[41]++;
        console.error('â Cart API: Timeout en consulta de carrito:', timeoutError);
        /* istanbul ignore next */
        cov_1317zrw0e7().s[42]++;
        securityLogger.logEvent('database_timeout', 'high', {
          operation: 'get_cart_items',
          timeout: _apitimeouts.API_TIMEOUTS.database
        });
        /* istanbul ignore next */
        cov_1317zrw0e7().s[43]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Timeout al obtener carrito. Intenta nuevamente.',
          items: []
        }, {
          status: 408
        });
      }
      /* istanbul ignore next */
      cov_1317zrw0e7().s[44]++;
      if (error) {
        /* istanbul ignore next */
        cov_1317zrw0e7().b[3][0]++;
        cov_1317zrw0e7().s[45]++;
        console.error('â Cart API: Error consultando carrito:', error);
        /* istanbul ignore next */
        cov_1317zrw0e7().s[46]++;
        securityLogger.logEvent('database_error', 'high', {
          error: error.message,
          operation: 'get_cart_items'
        });
        /* istanbul ignore next */
        cov_1317zrw0e7().s[47]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Error obteniendo carrito de la base de datos',
          details: error.message,
          items: []
        }, {
          status: 500
        });
      } else
      /* istanbul ignore next */
      {
        cov_1317zrw0e7().b[3][1]++;
      }
      // Calcular totales
      const totalItems =
      /* istanbul ignore next */
      (cov_1317zrw0e7().s[48]++,
      /* istanbul ignore next */
      (cov_1317zrw0e7().b[4][0]++, cartItems?.reduce((sum, item) => {
        /* istanbul ignore next */
        cov_1317zrw0e7().f[8]++;
        cov_1317zrw0e7().s[49]++;
        return sum + item.quantity;
      }, 0)) ||
      /* istanbul ignore next */
      (cov_1317zrw0e7().b[4][1]++, 0));
      const totalAmount =
      /* istanbul ignore next */
      (cov_1317zrw0e7().s[50]++,
      /* istanbul ignore next */
      (cov_1317zrw0e7().b[5][0]++, cartItems?.reduce((sum, item) => {
        /* istanbul ignore next */
        cov_1317zrw0e7().f[9]++;
        const price =
        /* istanbul ignore next */
        (cov_1317zrw0e7().s[51]++,
        /* istanbul ignore next */
        (cov_1317zrw0e7().b[6][0]++, item.products?.discounted_price) ||
        /* istanbul ignore next */
        (cov_1317zrw0e7().b[6][1]++, item.products?.price) ||
        /* istanbul ignore next */
        (cov_1317zrw0e7().b[6][2]++, 0));
        /* istanbul ignore next */
        cov_1317zrw0e7().s[52]++;
        return sum + price * item.quantity;
      }, 0)) ||
      /* istanbul ignore next */
      (cov_1317zrw0e7().b[5][1]++, 0));
      const response =
      /* istanbul ignore next */
      (cov_1317zrw0e7().s[53]++, {
        items:
        /* istanbul ignore next */
        (cov_1317zrw0e7().b[7][0]++, cartItems) ||
        /* istanbul ignore next */
        (cov_1317zrw0e7().b[7][1]++, []),
        totalItems,
        totalAmount,
        itemCount:
        /* istanbul ignore next */
        (cov_1317zrw0e7().b[8][0]++, cartItems?.length) ||
        /* istanbul ignore next */
        (cov_1317zrw0e7().b[8][1]++, 0)
      });
      /* istanbul ignore next */
      cov_1317zrw0e7().s[54]++;
      console.log(`â Cart API: Carrito obtenido exitosamente - ${response.itemCount} productos Ãºnicos, ${totalItems} items totales`);
      /* istanbul ignore next */
      cov_1317zrw0e7().s[55]++;
      securityLogger.logEvent('api_success', 'low', {
        endpoint: '/api/cart',
        method: 'GET',
        itemCount: response.itemCount
      });
      /* istanbul ignore next */
      cov_1317zrw0e7().s[56]++;
      return _server.NextResponse.json({
        success: true,
        message: `Carrito obtenido: ${response.itemCount} productos`,
        ...response
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1317zrw0e7().s[57]++;
      console.error('â Cart API: Error inesperado:', error);
      /* istanbul ignore next */
      cov_1317zrw0e7().s[58]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Error interno del servidor',
        details: error.message,
        items: []
      }, {
        status: 500
      });
    }
  });
}
async function POST(request) {
  /* istanbul ignore next */
  cov_1317zrw0e7().f[10]++;
  // Crear logger de seguridad
  const securityLogger =
  /* istanbul ignore next */
  (cov_1317zrw0e7().s[59]++, (0, _securitylogger.createSecurityLogger)(request));
  // Aplicar rate limiting para APIs de carrito
  /* istanbul ignore next */
  cov_1317zrw0e7().s[60]++;
  return await (0, _ratelimiter.withRateLimit)(request, _ratelimiter.RATE_LIMIT_CONFIGS.creation, async () => {
    /* istanbul ignore next */
    cov_1317zrw0e7().f[11]++;
    cov_1317zrw0e7().s[61]++;
    try {
      /* istanbul ignore next */
      cov_1317zrw0e7().s[62]++;
      console.log('ğ Cart API: POST - Agregando item al carrito');
      /* istanbul ignore next */
      cov_1317zrw0e7().s[63]++;
      securityLogger.log({
        type: 'data_access',
        severity: 'low',
        message: 'Cart POST API access',
        context: {
          endpoint: '/api/cart',
          method: 'POST',
          timestamp: new Date().toISOString()
        }
      });
      // Verificar autenticaciÃ³n
      const session =
      /* istanbul ignore next */
      (cov_1317zrw0e7().s[64]++, await (0, _config.auth)());
      /* istanbul ignore next */
      cov_1317zrw0e7().s[65]++;
      if (!session?.user?.id) {
        /* istanbul ignore next */
        cov_1317zrw0e7().b[9][0]++;
        cov_1317zrw0e7().s[66]++;
        console.log('â Cart API: Usuario no autenticado');
        /* istanbul ignore next */
        cov_1317zrw0e7().s[67]++;
        securityLogger.log({
          type: 'auth_failure',
          severity: 'medium',
          message: 'Unauthorized cart POST attempt',
          context: {
            endpoint: '/api/cart',
            method: 'POST',
            timestamp: new Date().toISOString()
          },
          metadata: {
            reason: 'No authenticated user'
          }
        });
        /* istanbul ignore next */
        cov_1317zrw0e7().s[68]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Usuario no autenticado'
        }, {
          status: 401
        });
      } else
      /* istanbul ignore next */
      {
        cov_1317zrw0e7().b[9][1]++;
      }
      const userId =
      /* istanbul ignore next */
      (cov_1317zrw0e7().s[69]++, session.user.id);
      // Obtener datos del request
      const body =
      /* istanbul ignore next */
      (cov_1317zrw0e7().s[70]++, await request.json());
      const {
        productId,
        quantity =
        /* istanbul ignore next */
        (cov_1317zrw0e7().b[10][0]++, 1)
      } =
      /* istanbul ignore next */
      (cov_1317zrw0e7().s[71]++, body);
      // Validaciones
      /* istanbul ignore next */
      cov_1317zrw0e7().s[72]++;
      if (!productId) {
        /* istanbul ignore next */
        cov_1317zrw0e7().b[11][0]++;
        cov_1317zrw0e7().s[73]++;
        return _server.NextResponse.json({
          success: false,
          error: 'productId es requerido'
        }, {
          status: 400
        });
      } else
      /* istanbul ignore next */
      {
        cov_1317zrw0e7().b[11][1]++;
      }
      cov_1317zrw0e7().s[74]++;
      if (
      /* istanbul ignore next */
      (cov_1317zrw0e7().b[13][0]++, quantity <= 0) ||
      /* istanbul ignore next */
      (cov_1317zrw0e7().b[13][1]++, quantity > 99)) {
        /* istanbul ignore next */
        cov_1317zrw0e7().b[12][0]++;
        cov_1317zrw0e7().s[75]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Cantidad debe estar entre 1 y 99'
        }, {
          status: 400
        });
      } else
      /* istanbul ignore next */
      {
        cov_1317zrw0e7().b[12][1]++;
      }
      cov_1317zrw0e7().s[76]++;
      console.log(`ğ Cart API: Agregando producto ${productId} (cantidad: ${quantity}) para usuario ${userId}`);
      // Obtener cliente de Supabase
      const supabase =
      /* istanbul ignore next */
      (cov_1317zrw0e7().s[77]++, (0, _supabase.getSupabaseClient)(true));
      /* istanbul ignore next */
      cov_1317zrw0e7().s[78]++;
      if (!supabase) {
        /* istanbul ignore next */
        cov_1317zrw0e7().b[14][0]++;
        cov_1317zrw0e7().s[79]++;
        console.error('â Cart API: Cliente de Supabase no disponible');
        /* istanbul ignore next */
        cov_1317zrw0e7().s[80]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Servicio de base de datos no disponible'
        }, {
          status: 503
        });
      } else
      /* istanbul ignore next */
      {
        cov_1317zrw0e7().b[14][1]++;
      }
      // Verificar que el producto existe y tiene stock
      const {
        data: product,
        error: productError
      } =
      /* istanbul ignore next */
      (cov_1317zrw0e7().s[81]++, await supabase.from('products').select('id, name, stock, price').eq('id', productId).single());
      /* istanbul ignore next */
      cov_1317zrw0e7().s[82]++;
      if (
      /* istanbul ignore next */
      (cov_1317zrw0e7().b[16][0]++, productError) ||
      /* istanbul ignore next */
      (cov_1317zrw0e7().b[16][1]++, !product)) {
        /* istanbul ignore next */
        cov_1317zrw0e7().b[15][0]++;
        cov_1317zrw0e7().s[83]++;
        console.log(`â Cart API: Producto ${productId} no encontrado`);
        /* istanbul ignore next */
        cov_1317zrw0e7().s[84]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Producto no encontrado'
        }, {
          status: 404
        });
      } else
      /* istanbul ignore next */
      {
        cov_1317zrw0e7().b[15][1]++;
      }
      cov_1317zrw0e7().s[85]++;
      if (product.stock < quantity) {
        /* istanbul ignore next */
        cov_1317zrw0e7().b[17][0]++;
        cov_1317zrw0e7().s[86]++;
        console.log(`â Cart API: Stock insuficiente para producto ${productId}. Stock: ${product.stock}, Solicitado: ${quantity}`);
        /* istanbul ignore next */
        cov_1317zrw0e7().s[87]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Stock insuficiente',
          availableStock: product.stock
        }, {
          status: 400
        });
      } else
      /* istanbul ignore next */
      {
        cov_1317zrw0e7().b[17][1]++;
      }
      // Upsert: agregar o actualizar item en carrito
      const {
        data: cartItem,
        error: cartError
      } =
      /* istanbul ignore next */
      (cov_1317zrw0e7().s[88]++, await supabase.from('cart_items').upsert({
        user_id: userId,
        product_id: productId,
        quantity: quantity
      }, {
        onConflict: 'user_id,product_id'
      }).select(`
        id,
        user_id,
        product_id,
        quantity,
        created_at,
        updated_at
      `).single());
      /* istanbul ignore next */
      cov_1317zrw0e7().s[89]++;
      if (cartError) {
        /* istanbul ignore next */
        cov_1317zrw0e7().b[18][0]++;
        cov_1317zrw0e7().s[90]++;
        console.error('â Cart API: Error agregando al carrito:', cartError);
        /* istanbul ignore next */
        cov_1317zrw0e7().s[91]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Error agregando producto al carrito',
          details: cartError.message
        }, {
          status: 500
        });
      } else
      /* istanbul ignore next */
      {
        cov_1317zrw0e7().b[18][1]++;
      }
      cov_1317zrw0e7().s[92]++;
      console.log(`â Cart API: Producto ${product.name} agregado al carrito exitosamente`);
      /* istanbul ignore next */
      cov_1317zrw0e7().s[93]++;
      return _server.NextResponse.json({
        success: true,
        message: `${product.name} agregado al carrito`,
        item: cartItem,
        product: {
          id: product.id,
          name: product.name,
          price: product.price
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1317zrw0e7().s[94]++;
      console.error('â Cart API: Error inesperado:', error);
      /* istanbul ignore next */
      cov_1317zrw0e7().s[95]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Error interno del servidor',
        details: error.message
      }, {
        status: 500
      });
    }
  });
}
async function DELETE(request) {
  /* istanbul ignore next */
  cov_1317zrw0e7().f[12]++;
  // Crear logger de seguridad
  const securityLogger =
  /* istanbul ignore next */
  (cov_1317zrw0e7().s[96]++, (0, _securitylogger.createSecurityLogger)(request));
  // Aplicar rate limiting para APIs de carrito
  /* istanbul ignore next */
  cov_1317zrw0e7().s[97]++;
  return await (0, _ratelimiter.withRateLimit)(request, _ratelimiter.RATE_LIMIT_CONFIGS.products, async () => {
    /* istanbul ignore next */
    cov_1317zrw0e7().f[13]++;
    cov_1317zrw0e7().s[98]++;
    try {
      /* istanbul ignore next */
      cov_1317zrw0e7().s[99]++;
      console.log('ğ Cart API: DELETE - Limpiando carrito completo');
      /* istanbul ignore next */
      cov_1317zrw0e7().s[100]++;
      securityLogger.log({
        type: 'data_access',
        severity: 'low',
        message: 'Cart DELETE API access',
        context: {
          endpoint: '/api/cart',
          method: 'DELETE',
          timestamp: new Date().toISOString()
        }
      });
      // Verificar autenticaciÃ³n
      const session =
      /* istanbul ignore next */
      (cov_1317zrw0e7().s[101]++, await (0, _config.auth)());
      /* istanbul ignore next */
      cov_1317zrw0e7().s[102]++;
      if (!session?.user?.id) {
        /* istanbul ignore next */
        cov_1317zrw0e7().b[19][0]++;
        cov_1317zrw0e7().s[103]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Usuario no autenticado'
        }, {
          status: 401
        });
      } else
      /* istanbul ignore next */
      {
        cov_1317zrw0e7().b[19][1]++;
      }
      const userId =
      /* istanbul ignore next */
      (cov_1317zrw0e7().s[104]++, session.user.id);
      // Obtener cliente de Supabase
      const supabase =
      /* istanbul ignore next */
      (cov_1317zrw0e7().s[105]++, (0, _supabase.getSupabaseClient)(true));
      /* istanbul ignore next */
      cov_1317zrw0e7().s[106]++;
      if (!supabase) {
        /* istanbul ignore next */
        cov_1317zrw0e7().b[20][0]++;
        cov_1317zrw0e7().s[107]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Servicio de base de datos no disponible'
        }, {
          status: 503
        });
      } else
      /* istanbul ignore next */
      {
        cov_1317zrw0e7().b[20][1]++;
      }
      // Eliminar todos los items del carrito del usuario
      const {
        error
      } =
      /* istanbul ignore next */
      (cov_1317zrw0e7().s[108]++, await supabase.from('cart_items').delete().eq('user_id', userId));
      /* istanbul ignore next */
      cov_1317zrw0e7().s[109]++;
      if (error) {
        /* istanbul ignore next */
        cov_1317zrw0e7().b[21][0]++;
        cov_1317zrw0e7().s[110]++;
        console.error('â Cart API: Error limpiando carrito:', error);
        /* istanbul ignore next */
        cov_1317zrw0e7().s[111]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Error limpiando carrito',
          details: error.message
        }, {
          status: 500
        });
      } else
      /* istanbul ignore next */
      {
        cov_1317zrw0e7().b[21][1]++;
      }
      cov_1317zrw0e7().s[112]++;
      console.log(`â Cart API: Carrito limpiado exitosamente para usuario ${userId}`);
      /* istanbul ignore next */
      cov_1317zrw0e7().s[113]++;
      return _server.NextResponse.json({
        success: true,
        message: 'Carrito limpiado exitosamente'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1317zrw0e7().s[114]++;
      console.error('â Cart API: Error inesperado:', error);
      /* istanbul ignore next */
      cov_1317zrw0e7().s[115]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Error interno del servidor',
        details: error.message
      }, {
        status: 500
      });
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,