{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\products\\ProductImageManager.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useRef, useCallback } from 'react';\r\nimport Image from 'next/image';\r\nimport { AdminCard } from '../ui/AdminCard';\r\nimport { \r\n  Upload, \r\n  X, \r\n  Star, \r\n  StarOff, \r\n  Move, \r\n  Edit, \r\n  Trash2, \r\n  Image as ImageIcon,\r\n  Plus,\r\n  AlertCircle,\r\n  Loader2,\r\n  CheckCircle,\r\n  XCircle\r\n} from 'lucide-react';\r\nimport { cn } from '@/lib/core/utils';\r\n\r\ninterface ProductImage {\r\n  id?: string;\r\n  url: string;\r\n  alt?: string;\r\n  is_primary?: boolean;\r\n  file_size?: number;\r\n  file_type?: string;\r\n  width?: number;\r\n  height?: number;\r\n  upload_status?: 'uploading' | 'success' | 'error';\r\n  upload_progress?: number;\r\n}\r\n\r\ninterface ProductImageManagerProps {\r\n  productId?: string;\r\n  images: ProductImage[];\r\n  onChange: (images: ProductImage[]) => void;\r\n  error?: string;\r\n  maxImages?: number;\r\n  maxFileSize?: number; // in MB\r\n  allowedTypes?: string[];\r\n  enableOptimization?: boolean;\r\n  className?: string;\r\n}\r\n\r\n// Image validation and optimization utilities\r\nconst validateImageFile = (file: File, maxSize: number = 5): string | null => {\r\n  const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp', 'image/gif'];\r\n  \r\n  if (!allowedTypes.includes(file.type)) {\r\n    return 'Tipo de archivo no permitido. Use JPG, PNG, WebP o GIF.';\r\n  }\r\n  \r\n  if (file.size > maxSize * 1024 * 1024) {\r\n    return `El archivo es muy grande. Maximo ${maxSize}MB permitido.`;\r\n  }\r\n  \r\n  return null;\r\n};\r\n\r\nconst optimizeImage = async (file: File, maxWidth: number = 1200, quality: number = 0.8): Promise<File> => {\r\n  return new Promise((resolve) => {\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d')!;\r\n    const img = new window.Image();\r\n    \r\n    img.onload = () => {\r\n      // Calculate new dimensions\r\n      let { width, height } = img;\r\n      if (width > maxWidth) {\r\n        height = (height * maxWidth) / width;\r\n        width = maxWidth;\r\n      }\r\n      \r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      \r\n      // Draw and compress\r\n      ctx.drawImage(img, 0, 0, width, height);\r\n      \r\n      canvas.toBlob(\r\n        (blob) => {\r\n          if (blob) {\r\n            const optimizedFile = new File([blob], file.name, {\r\n              type: file.type,\r\n              lastModified: Date.now(),\r\n            });\r\n            resolve(optimizedFile);\r\n          } else {\r\n            resolve(file);\r\n          }\r\n        },\r\n        file.type,\r\n        quality\r\n      );\r\n    };\r\n    \r\n    img.src = URL.createObjectURL(file);\r\n  });\r\n};\r\n\r\nconst getImageDimensions = (file: File): Promise<{ width: number; height: number }> => {\r\n  return new Promise((resolve) => {\r\n    const img = new window.Image();\r\n    img.onload = () => {\r\n      resolve({ width: img.width, height: img.height });\r\n    };\r\n    img.src = URL.createObjectURL(file);\r\n  });\r\n};\r\n\r\nexport function ProductImageManager({\r\n  productId,\r\n  images = [],\r\n  onChange,\r\n  error,\r\n  maxImages = 10,\r\n  maxFileSize = 5,\r\n  allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp', 'image/gif'],\r\n  enableOptimization = true,\r\n  className\r\n}: ProductImageManagerProps) {\r\n  const [draggedIndex, setDraggedIndex] = useState<number | null>(null);\r\n  const [editingIndex, setEditingIndex] = useState<number | null>(null);\r\n  const [editingAlt, setEditingAlt] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n  const [uploadErrors, setUploadErrors] = useState<string[]>([]);\r\n  const [isDragOver, setIsDragOver] = useState(false);\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  // Enhanced file upload with validation and optimization\r\n  const handleFileUpload = useCallback(async (files: FileList) => {\r\n    if (files.length === 0) {return;}\r\n    \r\n    const remainingSlots = maxImages - images.length;\r\n    if (remainingSlots <= 0) {\r\n      setUploadErrors(['Se ha alcanzado el limite maximo de imagenes']);\r\n      return;\r\n    }\r\n    \r\n    const filesToUpload = Array.from(files).slice(0, remainingSlots);\r\n    const errors: string[] = [];\r\n    \r\n    setUploading(true);\r\n    setUploadErrors([]);\r\n    \r\n    try {\r\n      const processedImages: ProductImage[] = [];\r\n      \r\n      for (const file of filesToUpload) {\r\n        // Validate file\r\n        const validationError = validateImageFile(file, maxFileSize);\r\n        if (validationError) {\r\n          errors.push(`${file.name}: ${validationError}`);\r\n          continue;\r\n        }\r\n        \r\n        try {\r\n          // Get original dimensions\r\n          const dimensions = await getImageDimensions(file);\r\n          \r\n          // Optimize image if enabled\r\n          const processedFile = enableOptimization ? await optimizeImage(file) : file;\r\n          \r\n          // Create temporary URL for preview\r\n          const url = URL.createObjectURL(processedFile);\r\n          \r\n          const newImage: ProductImage = {\r\n            id: `temp-${Date.now()}-${Math.random()}`,\r\n            url,\r\n            alt: file.name.replace(/\\.[^/.]+$/, ''),\r\n            is_primary: images.length === 0 && processedImages.length === 0,\r\n            file_size: processedFile.size,\r\n            file_type: processedFile.type,\r\n            width: dimensions.width,\r\n            height: dimensions.height,\r\n            upload_status: 'success'\r\n          };\r\n          \r\n          processedImages.push(newImage);\r\n        } catch (fileError) {\r\n          errors.push(`${file.name}: Error al procesar la imagen`);\r\n        }\r\n      }\r\n      \r\n      if (processedImages.length > 0) {\r\n        onChange([...images, ...processedImages]);\r\n      }\r\n      \r\n      if (errors.length > 0) {\r\n        setUploadErrors(errors);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading images:', error);\r\n      setUploadErrors(['Error general al subir las imagenes']);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  }, [images, maxImages, maxFileSize, enableOptimization, onChange]);\r\n\r\n  // Enhanced drag and drop functionality\r\n  const handleDragStart = useCallback((index: number) => {\r\n    setDraggedIndex(index);\r\n  }, []);\r\n\r\n  const handleDragOver = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  }, []);\r\n\r\n  const handleDragEnter = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsDragOver(true);\r\n  }, []);\r\n\r\n  const handleDragLeave = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    // Only set to false if we're leaving the component entirely\r\n    if (!e.currentTarget.contains(e.relatedTarget as Node)) {\r\n      setIsDragOver(false);\r\n    }\r\n  }, []);\r\n\r\n  const handleDrop = useCallback((e: React.DragEvent, dropIndex?: number) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsDragOver(false);\r\n    \r\n    // Handle file drops (external files)\r\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n      handleFileUpload(e.dataTransfer.files);\r\n      return;\r\n    }\r\n    \r\n    // Handle image reordering (internal drag)\r\n    if (draggedIndex !== null && dropIndex !== undefined) {\r\n      const newImages = [...images];\r\n      const draggedImage = newImages[draggedIndex];\r\n      \r\n      // Remove dragged item\r\n      newImages.splice(draggedIndex, 1);\r\n      \r\n      // Insert at new position\r\n      const actualDropIndex = dropIndex > draggedIndex ? dropIndex - 1 : dropIndex;\r\n      newImages.splice(actualDropIndex, 0, draggedImage);\r\n      \r\n      onChange(newImages);\r\n    }\r\n    \r\n    setDraggedIndex(null);\r\n  }, [draggedIndex, images, onChange, handleFileUpload]);\r\n\r\n  // Handle file input change\r\n  const handleFileInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files) {\r\n      handleFileUpload(e.target.files);\r\n    }\r\n  }, [handleFileUpload]);\r\n\r\n  // Set primary image\r\n  const setPrimaryImage = (index: number) => {\r\n    const newImages = images.map((img, i) => ({\r\n      ...img,\r\n      is_primary: i === index,\r\n    }));\r\n    onChange(newImages);\r\n  };\r\n\r\n  // Remove image\r\n  const removeImage = (index: number) => {\r\n    const newImages = images.filter((_, i) => i !== index);\r\n    \r\n    // If we removed the primary image, make the first one primary\r\n    if (images[index].is_primary && newImages.length > 0) {\r\n      newImages[0].is_primary = true;\r\n    }\r\n    \r\n    onChange(newImages);\r\n  };\r\n\r\n  // Edit alt text\r\n  const startEditingAlt = (index: number) => {\r\n    setEditingIndex(index);\r\n    setEditingAlt(images[index].alt || '');\r\n  };\r\n\r\n  const saveAltText = () => {\r\n    if (editingIndex === null) {return;}\r\n    \r\n    const newImages = [...images];\r\n    newImages[editingIndex] = {\r\n      ...newImages[editingIndex],\r\n      alt: editingAlt,\r\n    };\r\n    \r\n    onChange(newImages);\r\n    setEditingIndex(null);\r\n    setEditingAlt('');\r\n  };\r\n\r\n  const cancelEditingAlt = () => {\r\n    setEditingIndex(null);\r\n    setEditingAlt('');\r\n  };\r\n\r\n  return (\r\n    <div className={cn(\"space-y-6\", className)}>\r\n      <AdminCard title=\"Gestion de Imagenes\" className=\"p-6\">\r\n        <div className=\"space-y-6\">\r\n          {/* Upload Area */}\r\n          <div \r\n            className={cn(\r\n              \"border-2 border-dashed rounded-lg p-6 transition-all duration-200\",\r\n              isDragOver \r\n                ? \"border-blaze-orange-400 bg-blaze-orange-50\" \r\n                : \"border-gray-300 hover:border-gray-400\",\r\n              uploading && \"opacity-50 pointer-events-none\",\r\n              images.length >= maxImages && \"opacity-50\"\r\n            )}\r\n            onDrop={(e) => handleDrop(e)}\r\n            onDragOver={handleDragOver}\r\n            onDragEnter={handleDragEnter}\r\n            onDragLeave={handleDragLeave}\r\n          >\r\n            <div className=\"text-center\">\r\n              {uploading ? (\r\n                <Loader2 className=\"mx-auto h-12 w-12 text-blaze-orange-500 animate-spin\" />\r\n              ) : (\r\n                <ImageIcon className={cn(\r\n                  \"mx-auto h-12 w-12\",\r\n                  isDragOver ? \"text-blaze-orange-500\" : \"text-gray-400\"\r\n                )} />\r\n              )}\r\n              \r\n              <div className=\"mt-4\">\r\n                {uploading ? (\r\n                  <p className=\"text-sm font-medium text-blaze-orange-600\">\r\n                    Procesando imagenes...\r\n                  </p>\r\n                ) : (\r\n                  <>\r\n                    <label htmlFor=\"file-upload\" className=\"cursor-pointer\">\r\n                      <span className=\"mt-2 block text-sm font-medium text-gray-900\">\r\n                        {isDragOver ? 'Suelta las imagenes aqui' : 'Arrastra imagenes aqui o'}{' '}\r\n                        {!isDragOver && (\r\n                          <span className=\"text-blaze-orange-600 hover:text-blaze-orange-500\">\r\n                            selecciona archivos\r\n                          </span>\r\n                        )}\r\n                      </span>\r\n                    </label>\r\n                    <input\r\n                      ref={fileInputRef}\r\n                      id=\"file-upload\"\r\n                      name=\"file-upload\"\r\n                      type=\"file\"\r\n                      className=\"sr-only\"\r\n                      multiple\r\n                      accept={allowedTypes.join(',')}\r\n                      onChange={handleFileInputChange}\r\n                      disabled={uploading || images.length >= maxImages}\r\n                    />\r\n                  </>\r\n                )}\r\n              </div>\r\n              \r\n              <p className=\"mt-1 text-xs text-gray-500\">\r\n                {allowedTypes.map(type => type.split('/')[1].toUpperCase()).join(', ')} hasta {maxFileSize}MB cada una. Maximo {maxImages} imagenes.\r\n              </p>\r\n              \r\n              {enableOptimization && (\r\n                <p className=\"mt-1 text-xs text-green-600\">\r\n                  Optimizacion automatica activada\r\n                </p>\r\n              )}\r\n              \r\n              {images.length >= maxImages && (\r\n                <div className=\"mt-3 flex items-center justify-center space-x-2 text-yellow-600\">\r\n                  <AlertCircle className=\"w-4 h-4\" />\r\n                  <span className=\"text-sm\">Limite de imagenes alcanzado</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Upload Errors */}\r\n          {uploadErrors.length > 0 && (\r\n            <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\r\n              <div className=\"flex items-start space-x-2\">\r\n                <XCircle className=\"w-5 h-5 text-red-500 mt-0.5 flex-shrink-0\" />\r\n                <div>\r\n                  <h4 className=\"text-sm font-medium text-red-800\">Errores al subir imagenes:</h4>\r\n                  <ul className=\"mt-1 text-sm text-red-700 space-y-1\">\r\n                    {uploadErrors.map((error, index) => (\r\n                      <li key={index}>• {error instanceof Error ? error.message : error?.toString() || 'Error desconocido'}</li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* General Error Message */}\r\n          {error && (\r\n            <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <XCircle className=\"w-5 h-5 text-red-500\" />\r\n                <span className=\"text-sm text-red-700\">\r\n                  {error instanceof Error ? error.message : error?.toString() || 'Error desconocido'}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Images Grid */}\r\n          {images.length > 0 && (\r\n            <div className=\"space-y-4\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <h4 className=\"text-sm font-medium text-gray-900\">\r\n                  Imagenes del Producto ({images.length}/{maxImages})\r\n                </h4>\r\n                <div className=\"flex items-center space-x-4\">\r\n                  {images.some(img => img.upload_status === 'uploading') && (\r\n                    <div className=\"flex items-center space-x-2 text-blaze-orange-600\">\r\n                      <Loader2 className=\"w-4 h-4 animate-spin\" />\r\n                      <span className=\"text-sm\">Subiendo...</span>\r\n                    </div>\r\n                  )}\r\n                  {images.length > 1 && (\r\n                    <p className=\"text-xs text-gray-500\">\r\n                      Arrastra para reordenar\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\r\n                {images.map((image, index) => (\r\n                  <div\r\n                    key={image.id || index}\r\n                    draggable={image.upload_status !== 'uploading'}\r\n                    onDragStart={() => handleDragStart(index)}\r\n                    onDragOver={handleDragOver}\r\n                    onDrop={(e) => handleDrop(e, index)}\r\n                    className={cn(\r\n                      \"relative group border-2 rounded-lg overflow-hidden transition-all\",\r\n                      image.upload_status === 'uploading' ? \"cursor-wait\" : \"cursor-move\",\r\n                      image.is_primary \r\n                        ? \"border-blaze-orange-500 ring-2 ring-blaze-orange-200\" \r\n                        : \"border-gray-200 hover:border-gray-300\",\r\n                      draggedIndex === index && \"opacity-50\",\r\n                      image.upload_status === 'error' && \"border-red-300 bg-red-50\"\r\n                    )}\r\n                  >\r\n                    {/* Image */}\r\n                    <div className=\"aspect-square relative\">\r\n                      <Image\r\n                        src={image.url}\r\n                        alt={image.alt || `Imagen ${index + 1}`}\r\n                        fill\r\n                        className={cn(\r\n                          \"object-cover transition-opacity\",\r\n                          image.upload_status === 'uploading' && \"opacity-50\"\r\n                        )}\r\n                      />\r\n                      \r\n                      {/* Upload Status Overlay */}\r\n                      {image.upload_status === 'uploading' && (\r\n                        <div className=\"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n                          <div className=\"text-center text-white\">\r\n                            <Loader2 className=\"w-8 h-8 animate-spin mx-auto mb-2\" />\r\n                            <div className=\"text-sm font-medium\">Subiendo...</div>\r\n                            {image.upload_progress !== undefined && (\r\n                              <div className=\"mt-2\">\r\n                                <div className=\"w-20 bg-gray-200 rounded-full h-1.5\">\r\n                                  <div \r\n                                    className=\"bg-blaze-orange-500 h-1.5 rounded-full transition-all duration-300\" \r\n                                    style={{ width: `${image.upload_progress}%` }}\r\n                                  ></div>\r\n                                </div>\r\n                                <div className=\"text-xs mt-1\">{Math.round(image.upload_progress)}%</div>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {/* Error Status Overlay */}\r\n                      {image.upload_status === 'error' && (\r\n                        <div className=\"absolute inset-0 bg-red-500 bg-opacity-50 flex items-center justify-center\">\r\n                          <div className=\"text-center text-white\">\r\n                            <XCircle className=\"w-8 h-8 mx-auto mb-2\" />\r\n                            <div className=\"text-sm font-medium\">Error al subir</div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {/* Success Status Indicator */}\r\n                      {image.upload_status === 'success' && (\r\n                        <div className=\"absolute top-2 right-2 bg-green-500 rounded-full p-1\">\r\n                          <CheckCircle className=\"w-3 h-3 text-white\" />\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {/* Primary Badge */}\r\n                      {image.is_primary && (\r\n                        <div className=\"absolute top-2 left-2 bg-blaze-orange-600 text-white text-xs px-2 py-1 rounded flex items-center space-x-1\">\r\n                          <Star className=\"w-3 h-3 fill-current\" />\r\n                          <span>Principal</span>\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {/* File Info */}\r\n                      {(image.file_size || image.width) && (\r\n                        <div className=\"absolute bottom-0 left-0 right-0 bg-black bg-opacity-70 text-white text-xs p-2\">\r\n                          <div className=\"flex justify-between items-center\">\r\n                            {image.width && image.height && (\r\n                              <span>{image.width}x{image.height}</span>\r\n                            )}\r\n                            {image.file_size && (\r\n                              <span>{(image.file_size / (1024 * 1024)).toFixed(1)}MB</span>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {/* Actions Overlay */}\r\n                      {image.upload_status !== 'uploading' && (\r\n                        <div className=\"absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-50 transition-all flex items-center justify-center opacity-0 group-hover:opacity-100\">\r\n                          <div className=\"flex space-x-2\">\r\n                            {/* Set Primary */}\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => setPrimaryImage(index)}\r\n                              className=\"p-2 bg-white rounded-full hover:bg-gray-100 transition-colors\"\r\n                              title={image.is_primary ? \"Es imagen principal\" : \"Establecer como principal\"}\r\n                            >\r\n                              {image.is_primary ? (\r\n                                <Star className=\"w-4 h-4 text-yellow-500 fill-current\" />\r\n                              ) : (\r\n                                <StarOff className=\"w-4 h-4 text-gray-600\" />\r\n                              )}\r\n                            </button>\r\n                            \r\n                            {/* Edit Alt */}\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => startEditingAlt(index)}\r\n                              className=\"p-2 bg-white rounded-full hover:bg-gray-100 transition-colors\"\r\n                              title=\"Editar texto alternativo\"\r\n                            >\r\n                              <Edit className=\"w-4 h-4 text-gray-600\" />\r\n                            </button>\r\n                            \r\n                            {/* Remove */}\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => removeImage(index)}\r\n                              className=\"p-2 bg-white rounded-full hover:bg-red-100 transition-colors\"\r\n                              title=\"Eliminar imagen\"\r\n                            >\r\n                              <Trash2 className=\"w-4 h-4 text-red-600\" />\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    \r\n                    {/* Alt Text */}\r\n                    <div className=\"p-2 bg-white\">\r\n                      {editingIndex === index ? (\r\n                        <div className=\"space-y-2\">\r\n                          <input\r\n                            type=\"text\"\r\n                            value={editingAlt}\r\n                            onChange={(e) => setEditingAlt(e.target.value)}\r\n                            className=\"w-full text-xs border border-gray-300 rounded px-2 py-1 focus:outline-none focus:ring-1 focus:ring-blaze-orange-500\"\r\n                            placeholder=\"Texto alternativo\"\r\n                          />\r\n                          <div className=\"flex space-x-1\">\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={saveAltText}\r\n                              className=\"flex-1 text-xs bg-blaze-orange-600 text-white px-2 py-1 rounded hover:bg-blaze-orange-700\"\r\n                            >\r\n                              Guardar\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={cancelEditingAlt}\r\n                              className=\"flex-1 text-xs bg-gray-300 text-gray-700 px-2 py-1 rounded hover:bg-gray-400\"\r\n                            >\r\n                              Cancelar\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      ) : (\r\n                        <p className=\"text-xs text-gray-600 truncate\">\r\n                          {image.alt || 'Sin texto alternativo'}\r\n                        </p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                \r\n                {/* Add More Button */}\r\n                {images.length < maxImages && (\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => fileInputRef.current?.click()}\r\n                    className=\"aspect-square border-2 border-dashed border-gray-300 rounded-lg flex flex-col items-center justify-center hover:border-blaze-orange-400 hover:bg-blaze-orange-50 transition-colors\"\r\n                  >\r\n                    <Plus className=\"w-8 h-8 text-gray-400\" />\r\n                    <span className=\"text-xs text-gray-500 mt-2\">Agregar mas</span>\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Upload Progress */}\r\n          {uploading && (\r\n            <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\r\n              <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blaze-orange-600\"></div>\r\n              <span>Subiendo imagenes...</span>\r\n            </div>\r\n          )}\r\n\r\n          {/* Statistics Summary */}\r\n          {images.length > 0 && (\r\n            <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-4\">\r\n              <h5 className=\"text-sm font-medium text-gray-800 mb-3\">\r\n                Resumen de Imagenes\r\n              </h5>\r\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-center\">\r\n                <div className=\"bg-white rounded-lg p-3\">\r\n                  <div className=\"text-lg font-semibold text-gray-900\">{images.length}</div>\r\n                  <div className=\"text-xs text-gray-500\">Total</div>\r\n                </div>\r\n                <div className=\"bg-white rounded-lg p-3\">\r\n                  <div className=\"text-lg font-semibold text-green-600\">\r\n                    {images.filter(img => img.upload_status === 'success').length}\r\n                  </div>\r\n                  <div className=\"text-xs text-gray-500\">Exitosas</div>\r\n                </div>\r\n                <div className=\"bg-white rounded-lg p-3\">\r\n                  <div className=\"text-lg font-semibold text-blaze-orange-600\">\r\n                    {images.filter(img => img.upload_status === 'uploading').length}\r\n                  </div>\r\n                  <div className=\"text-xs text-gray-500\">Subiendo</div>\r\n                </div>\r\n                <div className=\"bg-white rounded-lg p-3\">\r\n                  <div className=\"text-lg font-semibold text-red-600\">\r\n                    {images.filter(img => img.upload_status === 'error').length}\r\n                  </div>\r\n                  <div className=\"text-xs text-gray-500\">Con Error</div>\r\n                </div>\r\n              </div>\r\n              \r\n              {images.some(img => img.file_size) && (\r\n                <div className=\"mt-3 pt-3 border-t border-gray-200\">\r\n                  <div className=\"flex justify-between items-center text-sm\">\r\n                    <span className=\"text-gray-600\">Tamano total:</span>\r\n                    <span className=\"font-medium text-gray-900\">\r\n                      {(\r\n                        images\r\n                          .filter(img => img.file_size)\r\n                          .reduce((total, img) => total + (img.file_size || 0), 0) / (1024 * 1024)\r\n                      ).toFixed(1)} MB\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center text-sm mt-1\">\r\n                    <span className=\"text-gray-600\">Con texto alternativo:</span>\r\n                    <span className=\"font-medium text-gray-900\">\r\n                      {images.filter(img => img.alt && img.alt.trim()).length} de {images.length}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {/* Tips */}\r\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n            <h5 className=\"text-sm font-medium text-blue-800 mb-2\">\r\n              Consejos para mejores imagenes:\r\n            </h5>\r\n            <ul className=\"text-xs text-blue-700 space-y-1\">\r\n              <li>• Usa imagenes de alta calidad (minimo 800x800px)</li>\r\n              <li>• La primera imagen sera la imagen principal del producto</li>\r\n              <li>• Incluye diferentes angulos y detalles del producto</li>\r\n              <li>• Agrega texto alternativo para mejorar la accesibilidad</li>\r\n              <li>• Arrastra las imagenes para cambiar el orden</li>\r\n              {enableOptimization && (\r\n                <li>• Las imagenes se optimizan automaticamente para mejor rendimiento</li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </AdminCard>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["ProductImageManager","validateImageFile","file","maxSize","allowedTypes","includes","type","size","optimizeImage","maxWidth","quality","Promise","resolve","canvas","document","createElement","ctx","getContext","img","window","Image","onload","width","height","drawImage","toBlob","blob","optimizedFile","File","name","lastModified","Date","now","src","URL","createObjectURL","getImageDimensions","productId","images","onChange","error","maxImages","maxFileSize","enableOptimization","className","draggedIndex","setDraggedIndex","useState","editingIndex","setEditingIndex","editingAlt","setEditingAlt","uploading","setUploading","uploadErrors","setUploadErrors","isDragOver","setIsDragOver","fileInputRef","useRef","handleFileUpload","useCallback","files","length","remainingSlots","filesToUpload","Array","from","slice","errors","processedImages","validationError","push","dimensions","processedFile","url","newImage","id","Math","random","alt","replace","is_primary","file_size","file_type","upload_status","fileError","console","handleDragStart","index","handleDragOver","e","preventDefault","stopPropagation","handleDragEnter","handleDragLeave","currentTarget","contains","relatedTarget","handleDrop","dropIndex","dataTransfer","undefined","newImages","draggedImage","splice","actualDropIndex","handleFileInputChange","target","setPrimaryImage","map","i","removeImage","filter","_","startEditingAlt","saveAltText","cancelEditingAlt","div","cn","AdminCard","title","onDrop","onDragOver","onDragEnter","onDragLeave","Loader2","ImageIcon","p","label","htmlFor","span","input","ref","multiple","accept","join","disabled","split","toUpperCase","AlertCircle","XCircle","h4","ul","li","Error","message","toString","some","image","draggable","onDragStart","fill","upload_progress","style","round","CheckCircle","Star","toFixed","button","onClick","StarOff","Edit","Trash2","value","placeholder","current","click","Plus","h5","reduce","total","trim"],"mappings":"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"}