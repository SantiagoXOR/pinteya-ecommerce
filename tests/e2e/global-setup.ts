import { chromium, FullConfig } from '@playwright/test'
import { setupPersistentAuth } from './auth-setup'

async function globalSetup(config: FullConfig) {
  console.log('üöÄ Iniciando configuraci√≥n global de Playwright...')

  // Verificar que el servidor est√© corriendo
  const baseURL = config.projects[0].use.baseURL || 'http://localhost:3000'

  try {
    const browser = await chromium.launch()
    const context = await browser.newContext()
    const page = await context.newPage()

    // Verificar que la aplicaci√≥n est√© disponible
    console.log('üåê Verificando disponibilidad del servidor...')
    await page.goto(baseURL)
    await page.waitForSelector('body', { timeout: 10000 })

    console.log('‚úÖ Servidor de desarrollo verificado y funcionando')

    // Configurar autenticaci√≥n global para tests administrativos
    console.log('üîê Configurando autenticaci√≥n global...')
    try {
      await setupPersistentAuth(context)
      console.log('‚úÖ Autenticaci√≥n global configurada exitosamente')
    } catch (authError) {
      console.warn('‚ö†Ô∏è No se pudo configurar autenticaci√≥n global:', authError.message)
      console.warn('‚ö†Ô∏è Los tests individuales manejar√°n su propia autenticaci√≥n')
    }

    await browser.close()
  } catch (error) {
    console.error('‚ùå Error en la configuraci√≥n global:', error)
    throw error
  }

  console.log('‚úÖ Configuraci√≥n global completada')
}

export default globalSetup
