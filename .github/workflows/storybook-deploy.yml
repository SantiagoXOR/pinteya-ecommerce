name: Deploy Storybook to Vercel

on:
  push:
    branches: [ main ]
    paths:
      - 'src/components/**'
      - 'src/stories/**'
      - '.storybook/**'
      - 'package.json'
      - 'package-lock.json'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/components/**'
      - 'src/stories/**'
      - '.storybook/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build Storybook
      run: npm run build-storybook
      env:
        NODE_ENV: production
        
    - name: Upload Storybook artifacts
      uses: actions/upload-artifact@v4
      with:
        name: storybook-static
        path: storybook-static/
        retention-days: 30
        
    - name: Deploy to Vercel (Preview)
      if: github.event_name == 'pull_request'
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_STORYBOOK_PROJECT_ID }}
        working-directory: ./storybook-static
        scope: ${{ secrets.VERCEL_ORG_ID }}
        
    - name: Deploy to Vercel (Production)
      if: github.ref == 'refs/heads/main'
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_STORYBOOK_PROJECT_ID }}
        vercel-args: '--prod'
        working-directory: ./storybook-static
        scope: ${{ secrets.VERCEL_ORG_ID }}
        
    - name: Comment PR with Storybook URL
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const { data: deployments } = await github.rest.repos.listDeployments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: context.payload.pull_request.head.sha,
            per_page: 1
          });
          
          if (deployments.length > 0) {
            const deployment = deployments[0];
            const { data: statuses } = await github.rest.repos.listDeploymentStatuses({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.id
            });
            
            const successStatus = statuses.find(status => status.state === 'success');
            if (successStatus && successStatus.target_url) {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `ðŸŽ¨ **Storybook Preview Deployed!**\n\nðŸ“– View the updated Design System: ${successStatus.target_url}\n\n---\n*This preview will be available for 30 days.*`
              });
            }
          }

  chromatic-deployment:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Publish to Chromatic
      uses: chromaui/action@v1
      with:
        projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
        buildScriptName: build-storybook
        exitZeroOnChanges: true
        onlyChanged: true
